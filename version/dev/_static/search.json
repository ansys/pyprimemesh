[{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSplineContinuityType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDFILEEXTENSIONFORFLUENTCASEEXPORT.html#invalidfileextensionforfluentcaseexport","title":"INVALIDFILEEXTENSIONFORFLUENTCASEEXPORT","text":"INVALIDFILEEXTENSIONFORFLUENTCASEEXPORT\n\n\n\nErrorCode.INVALIDFILEEXTENSIONFORFLUENTCASEEXPORT = 9009\n\nProvided file extension is invalid. If cff_format is set to False, then supported extensions are .cas and .cas.gz. If cff_format is set to True, then supported extension is .cas.h5 ."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FuseResults.print_default()\n\nPrint the default values of FuseResults object.\n\nExamples\n\n>>> FuseResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveLabelResults.html#removelabelresults","title":"RemoveLabelResults","text":"RemoveLabelResults\n\n\n\nclass ansys.meshing.prime.RemoveLabelResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with the remove label operation.\n\nParameters\n\nmodel: Model\n\nModel to create a RemoveLabelResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the remove label operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a RemoveLabelResults object with provided parameters.\n\nExamples\n\n>>> remove_label_results = prime.RemoveLabelResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCreateVolumeZonesType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.set_thin_volume_mesh_params.html#set_thin_volume_mesh_params","title":"set_thin_volume_mesh_params","text":"set_thin_volume_mesh_params\n\n\n\nThinVolumeControl.set_thin_volume_mesh_params(thin_volume_mesh_params)\n\nSets thin volume mesh parameters for thin volume control.\n\nParameters\n\nthin_volume_mesh_params\n\nThinVolumeMeshParams\n\nParameters to set thin volume control growth.\n\nExamples\n\n>>> results = thin_vol_ctrl.set_thin_volume_mesh_params(ThinVolumeMeshParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.set_thin_volume_mesh_params.html#examples-using-thinvolumecontrolset_thin_volume_mesh_params","title":"set_thin_volume_mesh_params > Examples using ThinVolumeControl.set_thin_volume_mesh_params","text":"Examples using ThinVolumeControl.set_thin_volume_mesh_params\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.direction.html#direction","title":"direction","text":"direction\n\n\n\nproperty MeshStackerParams.direction: Iterable[float]\n\nDirection vector of stacker."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCellZoneletType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTool.delete_fringes_and_overlaps_on_zonelets.html#delete_fringes_and_overlaps_on_zonelets","title":"delete_fringes_and_overlaps_on_zonelets","text":"delete_fringes_and_overlaps_on_zonelets\n\n\n\nDeleteTool.delete_fringes_and_overlaps_on_zonelets(part_id, face_zonelets, params)\n\nDeletes fringes and overlapping faces on the given face zonelets.\n\nParameters\n\npart_id\n\npython:int\n\nId of a part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets.\n\nparams\n\nDeleteFringesAndOverlapsParams\n\nParameters to delete the fringes and overlapping faces.\n\nReturns\n\n:\n\n\n\nDeleteFringesAndOverlapsResults\n\nReturns the DeleteFringesAndOverlapsResults.\n\nReturn type\n\nDeleteFringesAndOverlapsResults\n\nExamples\n\n>>> delete_tool = prime.DeleteTool(model = model)\n>>> results = delete_tool.delete_fringes_and_overlaps_on_zonelets(\n>>>                                    part.id,\n>>>                                    part.get_face_zonelets(),\n>>>                                    prime.DeleteFringesAndOverlapsParams(\n>>>                                       model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_soi_sizing_params.html#get_soi_sizing_params","title":"get_soi_sizing_params","text":"get_soi_sizing_params\n\n\n\nSizeControl.get_soi_sizing_params()\n\nGet the sphere of influence sizing parameters of size control.\n\nReturns\n\n:\n\n\n\nSoiSizingParams\n\nReturns the SoiSizingParams.\n\nReturn type\n\nSoiSizingParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = size_control.get_soi_sizing_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.thin_volume_controls.html#thin_volume_controls","title":"thin_volume_controls","text":"thin_volume_controls\n\n\n\nproperty ControlData.thin_volume_controls: List[ThinVolumeControl]\n\nGet the thin volume controls.\n\nReturns\n\nList[ThinVolumeControl]\n\nList of thin volume controls.\n\nExamples\n\n>>> thin_volume_control = model.control_data.thin_volume_controls"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETECONTROLSFAILED.html#deletecontrolsfailed","title":"DELETECONTROLSFAILED","text":"DELETECONTROLSFAILED\n\n\n\nErrorCode.DELETECONTROLSFAILED = 1307\n\nDelete controls failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.name.html#name","title":"name","text":"name\n\n\n\nproperty PeriodicControl.name\n\nGet the name of PeriodicControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_boi_sizing_params.html#set_boi_sizing_params","title":"set_boi_sizing_params","text":"set_boi_sizing_params\n\n\n\nSizeControl.set_boi_sizing_params(params)\n\nSet the body of influence sizing parameters to compute volumetric size field.\n\nParameters\n\nparams\n\nBoiSizingParams\n\nParameters that enables you to set sizing on the body of influence region.\n\nReturns\n\n:\n\n\n\nSetSizingResults\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_boi_sizing_params(\n>>>                  prime.BoiSizingParams(model=model,\n>>>                  max = 0.1, growth_rate = 1.2))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SOURCEFACINGCELLZONELETS.html#sourcefacingcellzonelets","title":"SOURCEFACINGCELLZONELETS","text":"SOURCEFACINGCELLZONELETS\n\n\n\nErrorCode.SOURCEFACINGCELLZONELETS = 119\n\nSource face zonelets facing existing volume mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.VSHAPE.html#vshape","title":"VSHAPE","text":"VSHAPE\n\n\n\nThinStripType.VSHAPE = 2\n\nThin strips of v shape only."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MergeBoundaryNodesResults.set_default(error_code=None)\n\nSet the default values of the MergeBoundaryNodesResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError Code associated with failure of merge nodes operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DefeatureTopologyParams.set_default(partial_defeature=None, delete_interior_nodes=None, allow_curved_topo_faces=None, fillet_spanning_angle=None, aggressive_edge_merge=None, thin_stripes_tolerance=None, partial_defeature_params=None, delete_interior_nodes_params=None)\n\nSet the default values of the DefeatureTopologyParams object.\n\nParameters\n\npartial_defeature: bool, optional\n\nOption to partial defeature.\n\ndelete_interior_nodes: bool, optional\n\nOption to delete interior nodes.\n\nallow_curved_topo_faces: bool, optional\n\nOption to allow curved topofaces.\n\nfillet_spanning_angle: float, optional\n\nAngular threshold for detecting fillets with spanning angles below the provided value.\n\naggressive_edge_merge: bool, optional\n\nIndicate whether to allow aggressive edge merge while performing partial defeature.\n\nthin_stripes_tolerance: float, optional\n\nTopoface width tolerance to detect thin faces below the provided value.\n\npartial_defeature_params: PartialDefeatureParams, optional\n\nParameters for partial defeature operation.\n\ndelete_interior_nodes_params: DeleteInteriorNodesParams, optional\n\nParameters for delete interior nodes operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TOPOEDGESREMESHFAILED.html#topoedgesremeshfailed","title":"TOPOEDGESREMESHFAILED","text":"TOPOEDGESREMESHFAILED\n\n\n\nErrorCode.TOPOEDGESREMESHFAILED = 5\n\nFailed to remesh topoedges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nLabelToZoneMethod.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSizeFieldType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsParams.refine_max_size.html#refine_max_size","title":"refine_max_size","text":"refine_max_size\n\n\n\nproperty RefineAtContactsParams.refine_max_size: float\n\nMaximum size used to refine contact face elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.FT.html#ft","title":"FT","text":"FT\n\n\n\nLengthUnit.FT = 6\n\nDenotes length unit is feet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ZEROELEMENTSREADFROMCDBFILE.html#zeroelementsreadfromcdbfile","title":"ZEROELEMENTSREADFROMCDBFILE","text":"ZEROELEMENTSREADFROMCDBFILE\n\n\n\nErrorCode.ZEROELEMENTSREADFROMCDBFILE = 16500\n\nNo elements read from CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Scaffolder.delete_shadowed_topo_faces.html#delete_shadowed_topo_faces","title":"delete_shadowed_topo_faces","text":"delete_shadowed_topo_faces\n\n\n\nScaffolder.delete_shadowed_topo_faces(topo_faces, params)\n\nDelete fully shadowed topofaces.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of input topofaces.\n\nparams\n\nVolumetricScaffolderParams\n\nVolumetric scaffolder parameters.\n\nReturns\n\n:\n\n\n\nScaffolderMergeResults\n\nReturn results in ScaffolderMergeResults.\n\nReturn type\n\nScaffolderMergeResults\n\nExamples\n\n>>> results = scaffolder.delete_shadowed_topo_faces([1,2,3,4,5], params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.html#controlpointselection","title":"ControlPointSelection","text":"ControlPointSelection\n\n\n\nclass ansys.meshing.prime.ControlPointSelection(*values)\n\nControl point selection type.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTFLUENTMESHINGMSHFAILED.html#exportfluentmeshingmshfailed","title":"EXPORTFLUENTMESHINGMSHFAILED","text":"EXPORTFLUENTMESHINGMSHFAILED\n\n\n\nErrorCode.EXPORTFLUENTMESHINGMSHFAILED = 531\n\nExport fluent meshing mesh failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic LocalSurferParams.print_default()\n\nPrint the default values of LocalSurferParams object.\n\nExamples\n\n>>> LocalSurferParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEMESHFACES_CELLFOUND.html#deletemeshfaces_cellfound","title":"DELETEMESHFACES_CELLFOUND","text":"DELETEMESHFACES_CELLFOUND\n\n\n\nErrorCode.DELETEMESHFACES_CELLFOUND = 3202\n\nDeleting faces failed as they have cell neighbors."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.max_quality.html#max_quality","title":"max_quality","text":"max_quality\n\n\n\nproperty VolumeQualityResultsPart.max_quality: float\n\nMaximum value of quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SurfaceQualitySummaryResults.print_default()\n\nPrint the default values of SurfaceQualitySummaryResults object.\n\nExamples\n\n>>> SurfaceQualitySummaryResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.create_volume_control.html#create_volume_control","title":"create_volume_control","text":"create_volume_control\n\n\n\nControlData.create_volume_control()\n\nCreate a volume control.\n\nReturns\n\n:\n\n\n\nVolumeControl\n\nVolume control.\n\nReturn type\n\nVolumeControl\n\nExamples\n\n>>> volume_control = model.control_data.create_volume_control()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.geometry_transfer.html#geometry_transfer","title":"geometry_transfer","text":"geometry_transfer\n\n\n\nproperty ImportCadParams.geometry_transfer: bool\n\nOption to enable transfer of geometry data (NURBS)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesher.check_topology.html#check_topology","title":"check_topology","text":"check_topology\n\n\n\nAutoQuadMesher.check_topology(part_id, topo_face_ids, params)\n\nCheck topology for inconsistencies with the given parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of the Part.\n\ntopo_face_ids\n\nIterable[python:int]\n\nIds of topofaces.\n\nparams\n\nCheckTopologyParams\n\nParameters of check topology.\n\nReturns\n\n:\n\n\n\nAutoQuadMesherResults\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.check_topology(part_id, topo_face_ids, params);"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityParams.html#searchbyqualityparams","title":"SearchByQualityParams","text":"SearchByQualityParams\n\n\n\nclass ansys.meshing.prime.SearchByQualityParams(model=None, quality_limit=None, face_quality_measure=None, json_data=None, **kwargs)\n\nParameters to control search by quality results.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchByQualityParams object with default parameters.\n\nquality_limit: float, optional\n\nQuality limit used for search face elements.\n\nface_quality_measure: FaceQualityMeasure, optional\n\nQuality measure used for search face elements.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchByQualityParams object with provided parameters.\n\nExamples\n\n>>> search_by_quality_params = prime.SearchByQualityParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesParams.html#computevolumesparams","title":"ComputeVolumesParams","text":"ComputeVolumesParams\n\n\n\nclass ansys.meshing.prime.ComputeVolumesParams(model=None, volume_naming_type=None, create_zones_type=None, priority_ordered_names=None, material_point_names=None, json_data=None, **kwargs)\n\nParameters to compute volumes.\n\nParameters\n\nmodel: Model\n\nModel to create a ComputeVolumesParams object with default parameters.\n\nvolume_naming_type: VolumeNamingType, optional\n\nIndicates source type used to compute zone name for volumes.\n\ncreate_zones_type: CreateVolumeZonesType, optional\n\nOption to control volume zone creation for volumes.\n\npriority_ordered_names: List[str], optional\n\nZone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\nmaterial_point_names: List[str], optional\n\nMaterial point names provided to identify volumes. Material point names will have precedence over the volume names.\n\njson_data: dict, optional\n\nJSON dictionary to create a ComputeVolumesParams object with provided parameters.\n\nExamples\n\n>>> compute_volumes_params = prime.ComputeVolumesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.lateral_defeature_tolerance.html#lateral_defeature_tolerance","title":"lateral_defeature_tolerance","text":"lateral_defeature_tolerance\n\n\n\nproperty MeshStackerParams.lateral_defeature_tolerance: float\n\nAbsolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SurferParams.set_default(max_angle=None, size_field_type=None, min_size=None, max_size=None, growth_rate=None, constant_size=None, generate_quads=None, check_non_manifolds=None, avoid_corner_triangles=None, smooth_size_transition=None, advanced_surfer_setup=None, project_on_geometry=None, enable_multi_threading=None)\n\nSet the default values of the SurferParams object.\n\nParameters\n\nmax_angle: float, optional\n\nMaximum feature angle limit to be used to identify and preserve features.\n\nsize_field_type: SizeFieldType, optional\n\nSize field type used to generate surface mesh.\n\nmin_size: float, optional\n\nMinimum size to be used in sizing for the surfer.\n\nmax_size: float, optional\n\nMaximum size to be used in sizing for the surfer.\n\ngrowth_rate: float, optional\n\nGrowth rate to be used to propagate sizes.\n\nconstant_size: float, optional\n\nSize used in constant size surface meshing.\n\ngenerate_quads: bool, optional\n\nOption to generate quadrilateral surface mesh.\n\ncheck_non_manifolds: bool, optional\n\nOption to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\navoid_corner_triangles: bool, optional\n\nOption to avoid corner triangles(with all three boundary nodes) generated.\n\nsmooth_size_transition: bool, optional\n\nOption to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nadvanced_surfer_setup: AdvancedSurferSetup, optional\n\nOption to define advanced settings for remeshing operation.\n\nproject_on_geometry: bool, optional\n\nOption to project on CAD geometry when meshing.\n\nenable_multi_threading: bool, optional\n\nOption to perform surface meshing in parallel using multithreads."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.write_thickness_file.html#write_thickness_file","title":"write_thickness_file","text":"write_thickness_file\n\n\n\nproperty ExportMapdlCdbParams.write_thickness_file: bool\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPreventionParams.size.html#size","title":"size","text":"size\n\n\n\nproperty ContactPreventionParams.size: float\n\nMinimum gap size (gap/4) to resolve contact between source and target."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshResults.html#automeshresults","title":"AutoMeshResults","text":"AutoMeshResults\n\n\n\nclass ansys.meshing.prime.AutoMeshResults(model=None, error_code=None, warning_codes=None, error_locations=None, json_data=None, **kwargs)\n\nResults of volume meshing.\n\nParameters\n\nmodel: Model\n\nModel to create a AutoMeshResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nProvides error message when automesh fails.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\nerror_locations: Iterable[float], optional\n\nError location coordinates returned when automesh fails.\n\njson_data: dict, optional\n\nJSON dictionary to create a AutoMeshResults object with provided parameters.\n\nExamples\n\n>>> auto_mesh_results = prime.AutoMeshResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshResults.html#examples-using-automeshresults","title":"AutoMeshResults > Examples using AutoMeshResults","text":"Examples using AutoMeshResults\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseParams.target_skewness.html#target_skewness","title":"target_skewness","text":"target_skewness\n\n\n\nproperty CollapseParams.target_skewness: float\n\nSkewness limit used as target to preserve quality. Better quality elements are skipped for collapse."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.INTERSECTINGTOPOFACES.html#intersectingtopofaces","title":"INTERSECTINGTOPOFACES","text":"INTERSECTINGTOPOFACES\n\n\n\nTopoSearchField.INTERSECTINGTOPOFACES = 1\n\nDiagnoses intersecting topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.WORKBENCH.html#workbench","title":"WORKBENCH","text":"WORKBENCH\n\n\n\nCadReaderRoute.WORKBENCH = 2\n\nDenotes WorkBench as CAD reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nAdvancedSurferSetup.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatFeaturesParams.detect_and_treat_circular_faces.html#detect_and_treat_circular_faces","title":"detect_and_treat_circular_faces","text":"detect_and_treat_circular_faces\n\n\n\nproperty DetectAndTreatFeaturesParams.detect_and_treat_circular_faces: bool\n\nOption to detect and treat circular faces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.CONSTANT.html#constant","title":"CONSTANT","text":"CONSTANT\n\n\n\nSizeFieldType.CONSTANT = 3\n\nUses constant size at all locations of sizing field."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectFacesParams.constant_mesh_size.html#constant_mesh_size","title":"constant_mesh_size","text":"constant_mesh_size\n\n\n\nproperty ConnectFacesParams.constant_mesh_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.target_skewness.html#target_skewness","title":"target_skewness","text":"target_skewness\n\n\n\nproperty WrapperImproveQualityParams.target_skewness: float\n\nTarget skewness."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.real.html#real","title":"real","text":"real\n\n\n\nContactPatchAxis.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.set_working_directory.html#set_working_directory","title":"set_working_directory","text":"set_working_directory\n\n\n\nModel.set_working_directory(path)\n\nSet working directory.\n\nSet the working directory to be considered for file i/o when the file paths are relative.\n\nParameters\n\npath\n\npython:str\n\nPath to the directory.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> zones = model.set_working_directory(\"C:/input_files\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricScaffolderParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VolumetricScaffolderParams.print_default()\n\nPrint the default values of VolumetricScaffolderParams object.\n\nExamples\n\n>>> VolumetricScaffolderParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.export_lsdyna_iga_keyword_file.html#export_lsdyna_iga_keyword_file","title":"export_lsdyna_iga_keyword_file","text":"export_lsdyna_iga_keyword_file\n\n\n\nFileIO.export_lsdyna_iga_keyword_file(file_name, params)\n\nExport IGA LS-DYNA Keyword file for solid, surface splines.\n\nParameters\n\nfile_name\n\npython:str\n\nName of the file.\n\nparams\n\nExportLSDynaIgaKeywordFileParams\n\nParameters for IGA LS-DYNA Keyword file export.\n\nReturns\n\n:\n\n\n\nExportLSDynaIGAResults\n\nReturns ExportLSDynaIGAResults.\n\nReturn type\n\nExportLSDynaIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.export_lsdyna_iga_keyword_file(\n    file_name, ExportLSDynaIgaKeywordFileParams(model=model)\n)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCellQualityMeasure.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSweepMeshParams.html#multizonesweepmeshparams","title":"MultiZoneSweepMeshParams","text":"MultiZoneSweepMeshParams\n\n\n\nclass ansys.meshing.prime.MultiZoneSweepMeshParams(model=None, source_and_target_scope=None, sweep_mesh_size=None, n_divisions=None, thin_sweep=None, sweep_type=None, json_data=None, **kwargs)\n\nDefines MultiZone thin sweep mesh control parameters.\n\nParameters\n\nmodel: Model\n\nModel to create a MultiZoneSweepMeshParams object with default parameters.\n\nsource_and_target_scope: ScopeDefinition, optional\n\nSource and target faces used to determine the direction of sweep in MultiZone meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsweep_mesh_size: float, optional\n\nSweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nn_divisions: int, optional\n\nNumber of divisions in the sweep direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nthin_sweep: bool, optional\n\nThin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsweep_type: SweepType, optional\n\nOption to specify the sweep mesh decomposition type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a MultiZoneSweepMeshParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_sweep_mesh_params = prime.MultiZoneSweepMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateZoneResults.html#createzoneresults","title":"CreateZoneResults","text":"CreateZoneResults\n\n\n\nclass ansys.meshing.prime.CreateZoneResults(model=None, error_code=None, zone_id=None, assigned_name=None, json_data=None, **kwargs)\n\nResults associated with the create zone.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateZoneResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the create zone operation.\n\nzone_id: int, optional\n\nId of newly created zone.\n\nassigned_name: str, optional\n\nAssigned name of newly created zone.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateZoneResults object with provided parameters.\n\nExamples\n\n>>> create_zone_results = prime.CreateZoneResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricScaffolderParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VolumetricScaffolderParams.set_default(absolute_dist_tol=None, only_check_exact_overlaps=None)\n\nSet the default values of the VolumetricScaffolderParams object.\n\nParameters\n\nabsolute_dist_tol: float, optional\n\nSpecify distance tolerance between overlapping faces.\n\nonly_check_exact_overlaps: bool, optional\n\nCheck only for fully overlapping topofaces when true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetMeshSplineParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TetMeshSplineParams.set_default(feature_angle=None, mode=None, decimation_factor=None)\n\nSet the default values of the TetMeshSplineParams object.\n\nParameters\n\nfeature_angle: float, optional\n\nFeature angle used in meshing of the solid spline.\n\nmode: TrimmedSolidSplineCutMode, optional\n\nCut mode to specify rule for mesh cell selection in the volume mesh.\n\ndecimation_factor: float, optional\n\nDecimation factor used in meshing of the solid spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_INCORRECTDEGREE.html#iga_incorrectdegree","title":"IGA_INCORRECTDEGREE","text":"IGA_INCORRECTDEGREE\n\n\n\nErrorCode.IGA_INCORRECTDEGREE = 2415\n\nIncorrect degree."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FillHolesAtPlaneParams.set_default(create_zone=None, suggested_zone_name=None)\n\nSet the default values of the FillHolesAtPlaneParams object.\n\nParameters\n\ncreate_zone: bool, optional\n\nOption to create a face zone for the zonelets created to fill holes.\n\nsuggested_zone_name: str, optional\n\nSuggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaIGAResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ExportLSDynaIGAResults.error_code: ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphBCParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MorphBCParams.set_default(morph_region_method=None, morphable_layers=None, morph_region_box_extension=None)\n\nSet the default values of the MorphBCParams object.\n\nParameters\n\nmorph_region_method: BCsVolumetricModality, optional\n\nIndicate options to identify morphable regions in the input volumetric mesh.\n\nmorphable_layers: int, optional\n\nNumber of layers around defined boundary.\n\nmorph_region_box_extension: float, optional\n\nPercentage extension for the volumetric box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.html#stitchtype","title":"StitchType","text":"StitchType\n\n\n\nclass ansys.meshing.prime.StitchType(*values)\n\nStitch type depending on nature of surface boundary edges to be stitched.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSplineResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TrimmedSplineResults.print_default()\n\nPrint the default values of TrimmedSplineResults object.\n\nExamples\n\n>>> TrimmedSplineResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_component_children_by_path.html#get_component_children_by_path","title":"get_component_children_by_path","text":"get_component_children_by_path\n\n\n\nPart.get_component_children_by_path(path, params)\n\nGets the child components for a component using the given parameters.\n\nParameters\n\npath\n\npython:str\n\nPath to component for which child components are queried.\n\nparams\n\nComponentChildrenParams\n\nParameters to get child component.\n\nReturns\n\n:\n\n\n\nComponentChildrenResults\n\nReturns the ComponentChildrenResults structure.\n\nReturn type\n\nComponentChildrenResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = part.get_component_children_by_path(path, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesParams.ignore_face_zonelets.html#ignore_face_zonelets","title":"ignore_face_zonelets","text":"ignore_face_zonelets\n\n\n\nproperty SubtractVolumesParams.ignore_face_zonelets: Iterable[int]\n\nFace zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.volumes.html#volumes","title":"volumes","text":"volumes\n\n\n\nproperty ComputeVolumesResults.volumes: Iterable[int]\n\nIds of computed volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.xmax.html#xmax","title":"xmax","text":"xmax\n\n\n\nproperty BoundingBox.xmax: float\n\nMaximal X coordinate of the bounding box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteInteriorNodesParams.merge_face_normals_angle.html#merge_face_normals_angle","title":"merge_face_normals_angle","text":"merge_face_normals_angle\n\n\n\nproperty DeleteInteriorNodesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.PROGRAMCONTROLLED.html#programcontrolled","title":"PROGRAMCONTROLLED","text":"PROGRAMCONTROLLED\n\n\n\nCadReaderRoute.PROGRAMCONTROLLED = 0\n\nDenotes program controlled CAD reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPair.target_type.html#target_type","title":"target_type","text":"target_type\n\n\n\nproperty MatchPair.target_type: MatchPairTargetType\n\nOption to specify target surface type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSplineFeatureCaptureType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_solder_ball_target_fmd.html#download_solder_ball_target_fmd","title":"download_solder_ball_target_fmd","text":"download_solder_ball_target_fmd\n\n\n\nansys.meshing.prime.examples.download_solder_ball_target_fmd(destination=None, force=False)\n\nDownload a FMD file for the solder ball example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     solder_ball_target = prime_examples.download_solder_ball_target_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(solder_ball_target, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_solder_ball_target_fmd.html#examples-using-download_solder_ball_target_fmd","title":"download_solder_ball_target_fmd > Examples using download_solder_ball_target_fmd","text":"Examples using download_solder_ball_target_fmd\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSplineFeatureCaptureType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.refinement_fraction_v.html#refinement_fraction_v","title":"refinement_fraction_v","text":"refinement_fraction_v\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_v: float\n\nFraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeMeshParams.html#thinvolumemeshparams","title":"ThinVolumeMeshParams","text":"ThinVolumeMeshParams\n\n\n\nclass ansys.meshing.prime.ThinVolumeMeshParams(model=None, n_layers=None, imprint_sides=None, n_ignore_rings=None, json_data=None, **kwargs)\n\nParameters to generate thin volume mesh. This is for internal use only.\n\nParameters\n\nmodel: Model\n\nModel to create a ThinVolumeMeshParams object with default parameters.\n\nn_layers: int, optional\n\nNumber of thin volume layers to be generated.\n\nimprint_sides: bool, optional\n\nChecks whether to imprint quad faces on side zonelets.\n\nn_ignore_rings: int, optional\n\nNumber of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally.\n\njson_data: dict, optional\n\nJSON dictionary to create a ThinVolumeMeshParams object with provided parameters.\n\nExamples\n\n>>> thin_volume_mesh_params = prime.ThinVolumeMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeMeshParams.html#examples-using-thinvolumemeshparams","title":"ThinVolumeMeshParams > Examples using ThinVolumeMeshParams","text":"Examples using ThinVolumeMeshParams\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.name.html#name","title":"name","text":"name\n\n\n\nproperty Part.name\n\nGet the name of Part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ThinStripType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineTetMeshParams.tolerance.html#tolerance","title":"tolerance","text":"tolerance\n\n\n\nproperty RefineTetMeshParams.tolerance: float\n\nTolerance for boundary refinement.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.delete_parts.html#delete_parts","title":"delete_parts","text":"delete_parts\n\n\n\nModel.delete_parts(part_ids)\n\nDelete parts and their contents.\n\nParameters\n\npart_ids\n\nIterable[python:int]\n\nIDs of parts to delete.\n\nReturns\n\n:\n\n\n\nDeleteResults\n\nResults from deleting parts and their contents.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = model.delete_parts(part_ids)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.delete_parts.html#examples-using-modeldelete_parts","title":"delete_parts > Examples using Model.delete_parts","text":"Examples using Model.delete_parts\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"examples/gallery_examples/misc/index.html#miscellaneous-examples","title":"Miscellaneous examples","text":"Miscellaneous examples\n\nThese examples provide tips and tricks for using PyPrimeMesh.\n\nsphx_glr_examples_gallery_examples_misc_example_template.py\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Wrapper.wrap.html#wrap","title":"wrap","text":"wrap\n\n\n\nWrapper.wrap(wrapper_control_id, params)\n\nPerform wrapping with specified controls and given parameters.\n\nThis method performs wrapping with specified controls in the wrapper control\nand with given parameters.\n\nParameters\n\nwrapper_control_id\n\npython:int\n\nID of the wrapper control.\n\nparams\n\nWrapParams\n\nWrap parameters.\n\nReturns\n\n:\n\n\n\nWrapResult\n\nWrap results.\n\nReturn type\n\nWrapResult\n\nExamples\n\n>>> results = wrapper.wrap(wrapper_control_id, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteUnwettedParams.html#deleteunwettedparams","title":"DeleteUnwettedParams","text":"DeleteUnwettedParams\n\n\n\nclass ansys.meshing.prime.DeleteUnwettedParams(model=None, json_data=None, **kwargs)\n\nDeleteUnwettedParams defines parameters for delete unwetted surfaces operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteUnwettedParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteUnwettedParams object with provided parameters.\n\nExamples\n\n>>> delete_unwetted_params = prime.DeleteUnwettedParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCadReaderRoute.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nContactPatchAxis.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPEROCTREEREGIONINGFAILED.html#wrapperoctreeregioningfailed","title":"WRAPPEROCTREEREGIONINGFAILED","text":"WRAPPEROCTREEREGIONINGFAILED\n\n\n\nErrorCode.WRAPPEROCTREEREGIONINGFAILED = 3411\n\nOctree regioning failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineSplineParams.refine_flag_u.html#refine_flag_u","title":"refine_flag_u","text":"refine_flag_u\n\n\n\nproperty RefineSplineParams.refine_flag_u: bool\n\nIndicates whether refinement is applied in u direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.AUTOMESHINITFAILED.html#automeshinitfailed","title":"AUTOMESHINITFAILED","text":"AUTOMESHINITFAILED\n\n\n\nErrorCode.AUTOMESHINITFAILED = 139\n\nAuto mesh initialization failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.html#controldata","title":"ControlData","text":"ControlData\n\n\n\nclass ansys.meshing.prime.ControlData(model, id, object_id, name)\n\nContains all controls.\n\nThis class contains all controls, including size controls, prism controls, multizone controls\nand wrapper controls.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create ControlData object.\n\nid\n\npython:int\n\nId of the ControlData.\n\nobject_id\n\npython:int\n\nObject id of the ControlData.\n\nname\n\npython:str\n\nName of the ControlData.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_adjacent_volumes_of_volumes.html#get_adjacent_volumes_of_volumes","title":"get_adjacent_volumes_of_volumes","text":"get_adjacent_volumes_of_volumes\n\n\n\nPart.get_adjacent_volumes_of_volumes(volumes)\n\nGet the adjacent volumes for the provided volume ids.\n\nParameters\n\nvolumes\n\nIterable[python:int]\n\nIds of the volume.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of adjacent volume ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> adjacent_volumes_of_volumes = part.get_adjacent_volumes_of_volumes(volumes)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileWriteParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FileWriteParams.print_default()\n\nPrint the default values of FileWriteParams object.\n\nExamples\n\n>>> FileWriteParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceMeshSizeScaling.size_range_min.html#size_range_min","title":"size_range_min","text":"size_range_min\n\n\n\nproperty SurfaceMeshSizeScaling.size_range_min: float\n\nMinimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nThinStripType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.SURFER_QUADCLEANUP_MULTITHREADINGNOTSUPPORTED.html#surfer_quadcleanup_multithreadingnotsupported","title":"SURFER_QUADCLEANUP_MULTITHREADINGNOTSUPPORTED","text":"SURFER_QUADCLEANUP_MULTITHREADINGNOTSUPPORTED\n\n\n\nWarningCode.SURFER_QUADCLEANUP_MULTITHREADINGNOTSUPPORTED = 102\n\nMultithreading is not supported for quad cleanup operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.html#edgemergecontrol","title":"EdgeMergeControl","text":"EdgeMergeControl\n\n\n\nclass ansys.meshing.prime.EdgeMergeControl(*values)\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentCaseParams.append.html#append","title":"append","text":"append\n\n\n\nproperty ImportFluentCaseParams.append: bool\n\nOption to append imported case instead of resetting model to imported case."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.sizing_method.html#sizing_method","title":"sizing_method","text":"sizing_method\n\n\n\nproperty WrapParams.sizing_method: SizeFieldType\n\nUsed to define sizing method for wrapping."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneEdgeBiasingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MultiZoneEdgeBiasingParams.set_default(face_scope=None, edge_scope=None, bias_factor=None, n_divisions=None)\n\nSet the default values of the MultiZoneEdgeBiasingParams object.\n\nParameters\n\nface_scope: ScopeDefinition, optional\n\nReference face zonelets to control mesh clustering orientation.\n\nedge_scope: ScopeDefinition, optional\n\nEdge zonelets to control the expanse of edge biasing.\n\nbias_factor: float, optional\n\nBias factor used for MultiZone edge biasing control.\n\nn_divisions: int, optional\n\nNumber of divisions on the section where edge biasing is done."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.MANUAL.html#manual","title":"MANUAL","text":"MANUAL\n\n\n\nControlPointSelection.MANUAL = 0\n\nManual Spline control point selection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nMaterialPointType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteTopoEntitiesParams.print_default()\n\nPrint the default values of DeleteTopoEntitiesParams object.\n\nExamples\n\n>>> DeleteTopoEntitiesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_wrapper_control_by_name.html#get_wrapper_control_by_name","title":"get_wrapper_control_by_name","text":"get_wrapper_control_by_name\n\n\n\nControlData.get_wrapper_control_by_name(name)\n\nGet the wrapper control by name.\n\nParameters\n\nname\n\npython:str\n\nName of the wrapper control.\n\nReturns\n\n:\n\n\n\nWrapperControl\n\nWrapper control.\n\nReturn type\n\nWrapperControl\n\nExamples\n\n>>> wrapper_control = model.control_data.get_wrapper_control_by_name(\"wrappercontrol-1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateShellBLResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CreateShellBLResults.error_code: ErrorCode\n\nError code associated with the failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCdbAnalysisType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.merge_edge_allow_self_close.html#merge_edge_allow_self_close","title":"merge_edge_allow_self_close","text":"merge_edge_allow_self_close\n\n\n\nproperty RepairTopologyParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartZonelets.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PartZonelets.print_default()\n\nPrint the default values of PartZonelets object.\n\nExamples\n\n>>> PartZonelets.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.html#bodyquerytype","title":"BodyQueryType","text":"BodyQueryType\n\n\n\nclass ansys.meshing.prime.BodyQueryType(*values)\n\nIndicates type of entity to query in part.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPair.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MatchPair.print_default()\n\nPrint the default values of MatchPair object.\n\nExamples\n\n>>> MatchPair.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCadRefacetingResolution.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERINVALIDINPUT.html#surferinvalidinput","title":"SURFERINVALIDINPUT","text":"SURFERINVALIDINPUT\n\n\n\nErrorCode.SURFERINVALIDINPUT = 7\n\nInvalid input for surface meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.resolve_intersections.html#resolve_intersections","title":"resolve_intersections","text":"resolve_intersections\n\n\n\nSurfaceUtilities.resolve_intersections(face_zonelet_ids, params)\n\nResolve facezonelets intersections.\n\nParameters\n\nface_zonelet_ids\n\nIterable[python:int]\n\nIds of face zonelets.\n\nparams\n\nResolveIntersectionsParams\n\nResolveIntersectionsParams for resolve intersection.\n\nReturns\n\n:\n\n\n\nResolveIntersectionResult\n\nReturns a ResolveIntersectionResult.\n\nReturn type\n\nResolveIntersectionResult\n\nExamples\n\n>>> result = surf_utils.resolve_intersections(zonelets, prime.ResolveIntersectionsParams(model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinParams.tolerance.html#tolerance","title":"tolerance","text":"tolerance\n\n\n\nproperty JoinParams.tolerance: float\n\nOverlap tolerance between overlapping zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VolumeQualityResultsPart.print_default()\n\nPrint the default values of VolumeQualityResultsPart object.\n\nExamples\n\n>>> VolumeQualityResultsPart.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.Y.html#y","title":"Y","text":"Y\n\n\n\nFlowDirection.Y = 2\n\nFlow or wake inflation in the Y direction for BOI creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsResults.processing_time.html#processing_time","title":"processing_time","text":"processing_time\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.processing_time: float\n\nTime taken to extract edges formed by intersecting faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.project_topo_faces_on_geometry.html#project_topo_faces_on_geometry","title":"project_topo_faces_on_geometry","text":"project_topo_faces_on_geometry\n\n\n\nSurfaceUtilities.project_topo_faces_on_geometry(topo_faces, params)\n\nProject nodes of given topofaces on geometry associated to those topofaces.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of topofaces to be used to project nodes on the geometry.\n\nparams\n\nProjectOnGeometryParams\n\nParameters used for projecting topoface nodes on geometry.\n\nReturns\n\n:\n\n\n\nProjectOnGeometryResults\n\nReturns the ProjectOnGeometryResults.\n\nReturn type\n\nProjectOnGeometryResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prime.ProjectOnGeometryParams(model = model)\n>>> results = surface_utils.project_topo_faces_on_geometry(topofaces, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureRecoveryParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FeatureRecoveryParams.set_default(scope=None, enable_feature_octree_refinement=None, size_at_features=None)\n\nSet the default values of the FeatureRecoveryParams object.\n\nParameters\n\nscope: ScopeDefinition, optional\n\nScope used for feature recovery control.\n\nenable_feature_octree_refinement: bool, optional\n\nChecks whether to perform octree refinement at feature edges.\n\nsize_at_features: float, optional\n\nRefinement size at features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.AUTO.html#auto","title":"AUTO","text":"AUTO\n\n\n\nSmoothType.AUTO = 3\n\nPerforms smoothing using optimal node movements during the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic IntersectParams.print_default()\n\nPrint the default values of IntersectParams object.\n\nExamples\n\n>>> IntersectParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismStairStep.check_proximity.html#check_proximity","title":"check_proximity","text":"check_proximity\n\n\n\nproperty PrismStairStep.check_proximity: bool\n\nCheck whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ExportLSDynaResults.error_code: ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsParams.html#mergepartsparams","title":"MergePartsParams","text":"MergePartsParams\n\n\n\nclass ansys.meshing.prime.MergePartsParams(model=None, merged_part_suggested_name=None, json_data=None, **kwargs)\n\nParameters to merge parts.\n\nParameters\n\nmodel: Model\n\nModel to create a MergePartsParams object with default parameters.\n\nmerged_part_suggested_name: str, optional\n\nSuggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given.\n\njson_data: dict, optional\n\nJSON dictionary to create a MergePartsParams object with provided parameters.\n\nExamples\n\n>>> merge_parts_params = prime.MergePartsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsParams.html#examples-using-mergepartsparams","title":"MergePartsParams > Examples using MergePartsParams","text":"Examples using MergePartsParams\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCadRefacetingResolution.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nScaffolderRepairMode.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nLengthUnit.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateZoneResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateZoneResults.print_default()\n\nPrint the default values of CreateZoneResults object.\n\nExamples\n\n>>> CreateZoneResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.write_by_zones.html#write_by_zones","title":"write_by_zones","text":"write_by_zones\n\n\n\nproperty ExportMapdlCdbParams.write_by_zones: bool\n\nOption to write zones in the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeMeshParams.imprint_sides.html#imprint_sides","title":"imprint_sides","text":"imprint_sides\n\n\n\nproperty ThinVolumeMeshParams.imprint_sides: bool\n\nChecks whether to imprint quad faces on side zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SurferResults.set_default(error_code=None, topofaces_not_projected_on_geometry=None)\n\nSet the default values of the SurferResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\ntopofaces_not_projected_on_geometry: Iterable[int], optional\n\nIds of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MergeZoneletsResults.print_default()\n\nPrint the default values of MergeZoneletsResults object.\n\nExamples\n\n>>> MergeZoneletsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.transition_size_field_type.html#transition_size_field_type","title":"transition_size_field_type","text":"transition_size_field_type\n\n\n\nproperty HexCoreParams.transition_size_field_type: SizeFieldType\n\nSize field type to be used for transition volume (volume between hexcore and boundary)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddLabelResults.html#addlabelresults","title":"AddLabelResults","text":"AddLabelResults\n\n\n\nclass ansys.meshing.prime.AddLabelResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with the add label operation.\n\nParameters\n\nmodel: Model\n\nModel to create a AddLabelResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the add label operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a AddLabelResults object with provided parameters.\n\nExamples\n\n>>> add_label_results = prime.AddLabelResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.html#surfacequalityresult","title":"SurfaceQualityResult","text":"SurfaceQualityResult\n\n\n\nclass ansys.meshing.prime.SurfaceQualityResult(model=None, face_quality_measure=None, measure_name=None, quality_limit=None, n_found=None, max_quality=None, min_quality=None, json_data=None, **kwargs)\n\nResult of surface quality.\n\nParameters\n\nmodel: Model\n\nModel to create a SurfaceQualityResult object with default parameters.\n\nface_quality_measure: FaceQualityMeasure, optional\n\nType of the face quality measure.\n\nmeasure_name: str, optional\n\nName of the face quality measure.\n\nquality_limit: float, optional\n\nTarget quality limit used to find failures.\n\nn_found: int, optional\n\nNumber of failed faces.\n\nmax_quality: float, optional\n\nMaximum value of quality measure.\n\nmin_quality: float, optional\n\nMinimum value of quality measure.\n\njson_data: dict, optional\n\nJSON dictionary to create a SurfaceQualityResult object with provided parameters.\n\nExamples\n\n>>> surface_quality_result = prime.SurfaceQualityResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinParams.match_angle.html#match_angle","title":"match_angle","text":"match_angle\n\n\n\nproperty JoinParams.match_angle: float\n\nMatch angle determines face pair inclination for overlap consideration."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic QuadToSplineParams.print_default()\n\nPrint the default values of QuadToSplineParams object.\n\nExamples\n\n>>> QuadToSplineParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.target.html#target","title":"target","text":"target\n\n\n\nproperty WrapperCloseGapsParams.target: ScopeDefinition\n\nScope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_NURBSSMOOTHFAILED.html#iga_nurbssmoothfailed","title":"IGA_NURBSSMOOTHFAILED","text":"IGA_NURBSSMOOTHFAILED\n\n\n\nErrorCode.IGA_NURBSSMOOTHFAILED = 2408\n\nSmoothing of spline failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ALIGNMENTFAILED.html#alignmentfailed","title":"ALIGNMENTFAILED","text":"ALIGNMENTFAILED\n\n\n\nErrorCode.ALIGNMENTFAILED = 3002\n\nAlignment failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.CONSERVATIVE.html#conservative","title":"CONSERVATIVE","text":"CONSERVATIVE\n\n\n\nScaffolderRepairMode.CONSERVATIVE = 1\n\nRepairs edges without considering the distance tolerance parameter.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.import_fluent_meshing_meshes.html#import_fluent_meshing_meshes","title":"import_fluent_meshing_meshes","text":"import_fluent_meshing_meshes\n\n\n\nFileIO.import_fluent_meshing_meshes(file_names, import_fluent_meshing_mesh_params)\n\nImport Fluent Meshing’s mesh (MS and MSH.GZ) files from disk.\n\nParameters\n\nfile_names\n\nList[python:str]\n\nList of full path for the mesh files to import.\n\nimport_fluent_meshing_mesh_params\n\nImportFluentMeshingMeshParams\n\nParameters for importing the mesh files.\n\nReturns\n\n:\n\n\n\nImportFluentMeshingMeshResults\n\nResults from importing the mesh files.\n\nReturn type\n\nImportFluentMeshingMeshResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportFluentMeshingMeshParams(model=model)\n>>> results = file_io.import_fluent_meshing_meshes(\n                [\"/tmp/mesh.msh\", \"/tmp/mesh1.msh\"],\n                params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSearch.get_volume_quality_summary.html#get_volume_quality_summary","title":"get_volume_quality_summary","text":"get_volume_quality_summary\n\n\n\nVolumeSearch.get_volume_quality_summary(params)\n\nGets the volume quality summary.\n\nDiagnose volume quality for the given scope and cell quality measures provided in the VolumeQualitySummaryParams structure.\nUse default quality limit if the parameters are not specified.\n\nParameters\n\nparams\n\nVolumeQualitySummaryParams\n\nVolume quality summary parameters.\n\nReturns\n\n:\n\n\n\nVolumeQualitySummaryResults\n\nReturns the VolumeQualitySummaryResults.\n\nReturn type\n\nVolumeQualitySummaryResults\n\nExamples\n\n>>> vol_search = VolumeSearch(model=model)\n>>> results = vol_search.get_volume_quality_summary(VolumeQualitySummaryParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSearch.get_volume_quality_summary.html#examples-using-volumesearchget_volume_quality_summary","title":"get_volume_quality_summary > Examples using VolumeSearch.get_volume_quality_summary","text":"Examples using VolumeSearch.get_volume_quality_summary\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectParams.collapse_target_skewness.html#collapse_target_skewness","title":"collapse_target_skewness","text":"collapse_target_skewness\n\n\n\nproperty IntersectParams.collapse_target_skewness: float\n\nPerform collapse on faces with skewness above the provided target skewness."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.delete_volumes.html#delete_volumes","title":"delete_volumes","text":"delete_volumes\n\n\n\nPart.delete_volumes(volumes, params)\n\nDelete volumes by deleting its face zonelets.\n\nParameters\n\nvolumes\n\nIterable[python:int]\n\nIds of volumes to be deleted.\n\nparams\n\nDeleteVolumesParams\n\nParameters to delete volumes.\n\nReturns\n\n:\n\n\n\nDeleteVolumesResults\n\nReturns the DeleteVolumesResults.\n\nReturn type\n\nDeleteVolumesResults\n\nExamples\n\nparams = prime.DeleteVolumesParams(model = model)\nresults = part.delete_volumes(volumes, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesParams.html#extracttopovolumesparams","title":"ExtractTopoVolumesParams","text":"ExtractTopoVolumesParams\n\n\n\nclass ansys.meshing.prime.ExtractTopoVolumesParams(model=None, zone_name=None, json_data=None, **kwargs)\n\nParameters to extract flow topovolumes.\n\nParameters\n\nmodel: Model\n\nModel to create a ExtractTopoVolumesParams object with default parameters.\n\nzone_name: str, optional\n\nSpecifies zone name to associate extracted flow topovolumes.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExtractTopoVolumesParams object with provided parameters.\n\nExamples\n\n>>> extract_topo_volumes_params = prime.ExtractTopoVolumesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchInfoByRegisterIdParams.set_default()\n\nSet the default values of the SearchInfoByRegisterIdParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeResults.html#fixinvalidnormalnoderesults","title":"FixInvalidNormalNodeResults","text":"FixInvalidNormalNodeResults\n\n\n\nclass ansys.meshing.prime.FixInvalidNormalNodeResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with fix invalid average face normal at nodes.\n\nParameters\n\nmodel: Model\n\nModel to create a FixInvalidNormalNodeResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a FixInvalidNormalNodeResults object with provided parameters.\n\nExamples\n\n>>> fix_invalid_normal_node_results = prime.FixInvalidNormalNodeResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.MATERIALPOINT.html#materialpoint","title":"MATERIALPOINT","text":"MATERIALPOINT\n\n\n\nWrapRegion.MATERIALPOINT = 0\n\nOption to use live material points to extract wrapper region."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.FREETOALL.html#freetoall","title":"FREETOALL","text":"FREETOALL\n\n\n\nEdgeConnectType.FREETOALL = 2\n\nPerform connections between free edges and any type of edges or faces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LabelExportParams.html#labelexportparams","title":"LabelExportParams","text":"LabelExportParams\n\n\n\nclass ansys.meshing.prime.LabelExportParams(model=None, label_expression_for_nodal_components=None, json_data=None, **kwargs)\n\nParameters to control the export of labels as Nodal or Element Components in CDB. By default, all the labels are exported as Element Components.\n\nParameters\n\nmodel: Model\n\nModel to create a LabelExportParams object with default parameters.\n\nlabel_expression_for_nodal_components: str, optional\n\nLabel expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a LabelExportParams object with provided parameters.\n\nExamples\n\n>>> label_export_params = prime.LabelExportParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nZoneType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesParams.html#mergeboundarynodesparams","title":"MergeBoundaryNodesParams","text":"MergeBoundaryNodesParams\n\n\n\nclass ansys.meshing.prime.MergeBoundaryNodesParams(model=None, tolerance=None, use_absolute_tolerance=None, merge_node_type=None, json_data=None, **kwargs)\n\nParameters used for the merge boundary nodes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a MergeBoundaryNodesParams object with default parameters.\n\ntolerance: float, optional\n\nDistance tolerance for merging boundary nodes.\n\nuse_absolute_tolerance: bool, optional\n\nIndicates whether the tolerance provided is an absolute value or not.\n\nmerge_node_type: MergeNodeType, optional\n\nType of nodes to be merged.\n\njson_data: dict, optional\n\nJSON dictionary to create a MergeBoundaryNodesParams object with provided parameters.\n\nExamples\n\n>>> merge_boundary_nodes_params = prime.MergeBoundaryNodesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nTrimmedSolidSplineCutMode.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.analysis_type.html#analysis_type","title":"analysis_type","text":"analysis_type\n\n\n\nproperty ExportMapdlCdbParams.analysis_type: CdbAnalysisType\n\nOption to specify CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsResults.extracted_ids.html#extracted_ids","title":"extracted_ids","text":"extracted_ids\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.extracted_ids: List[ExtractedFeatureIds]\n\nList of ExtractedFeatureIds that contains ids of extracted edges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.PARASOLID.html#parasolid","title":"PARASOLID","text":"PARASOLID\n\n\n\nCadFaceter.PARASOLID = 1\n\nDenotes CAD faceter is Parasolid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateZoneResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CreateZoneResults.error_code: ErrorCode\n\nError code associated with the create zone operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferResults.html#localsurferresults","title":"LocalSurferResults","text":"LocalSurferResults\n\n\n\nclass ansys.meshing.prime.LocalSurferResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the local surface mesh.\n\nParameters\n\nmodel: Model\n\nModel to create a LocalSurferResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a LocalSurferResults object with provided parameters.\n\nExamples\n\n>>> local_surfer_results = prime.LocalSurferResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControlGrowthParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ShellBLControlGrowthParams.print_default()\n\nPrint the default values of ShellBLControlGrowthParams object.\n\nExamples\n\n>>> ShellBLControlGrowthParams.print_default()"},{"objectID":"Home","href":"user_guide/concepts.html#concepts-and-model-structure","title":"Concepts and model structure","text":"Concepts and model structure"},{"objectID":"Home","href":"user_guide/concepts.html#model","title":"Concepts and model structure > Model","text":"Model\n\nThe Model class is the top-level container for PyPrimeMesh.\nIt contains all information about the PyPrimeMesh session.\n\nThis code shows how the Model class is accessed from the\nClient class:\n\nThis code imports a CAD file containing a single part:\n\nThe code prints the Model class to obtain a summary\nof the current session:"},{"objectID":"Home","href":"user_guide/concepts.html#parts","title":"Concepts and model structure > Parts","text":"Parts\n\nGeometry topology and mesh data in the Model class is stored\nwithin any number of parts parameters:\n\nEach Part class can contain TopoEntities or zonelets.\nTopoEntities are TopoParts created from CAD geometry imports. Zonelets are mesh parts created\nfrom faceted geometry and mesh imports. TopoEntities and zonelets are characterized by the\ndimension of entities."},{"objectID":"Home","href":"user_guide/concepts.html#topoentities","title":"Concepts and model structure > TopoEntities","text":"TopoEntities\n\nTopoEntities are created from importing a CAD geometry and represent connectivity information.\nTopoEntities have geometric representation that can be defined by splines or facets. The mesh\ngenerated on TopoEntities are projected on the geometry representation.\n\nThere are four types of TopoEntities:\n\nTopoNode: TopoEntity representing points\n\nTopoEdge: TopoEntity representing curves\n\nTopoFace: TopoEntity representing surfaces\n\nTopoVolume: TopoEntity representing volumes"},{"objectID":"Home","href":"user_guide/concepts.html#zonelets","title":"Concepts and model structure > Zonelets","text":"Zonelets\n\nZonelets are created from importing mesh files and are groups of interconnected entities in a mesh.\n\nThere are three types of zonelets:\n\nFaceZonelet: A group of interconnected faces\n\nEdgeZonelet: A group of interconnected edges\n\nCellZonelet: A group of interconnected cells\n\nA volume is a set of face zonelets that define a closed volume without containing any cell elements."},{"objectID":"Home","href":"user_guide/concepts.html#zones","title":"Concepts and model structure > Zones","text":"Zones\n\nZonelets or TopoEntities can be further grouped into zones. A zonelet or TopoEntity can only be present in a single zone.\n\nWhen exporting a mesh (MSH or CAS) file to the Fluent solver, you should define the boundary conditions for the zones.\n\nWhen importing a Fluent solver model, each zone is defined as a single zonelet."},{"objectID":"Home","href":"user_guide/concepts.html#labels","title":"Concepts and model structure > Labels","text":"Labels\n\nLabels allow overlapping groups of zonelets or TopoEntities.\n\nWhen importing CAD files, each group or named selection generates a label.\n\nWhen exporting to a Mechanical solver (CDB) file, each label is exported as a component."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nBCsVolumetricModality.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesResults.merged_volumes.html#merged_volumes","title":"merged_volumes","text":"merged_volumes\n\n\n\nproperty MergeVolumesResults.merged_volumes: Iterable[int]\n\nIds of volumes to which input volumes are merged."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsParams.copy_zones.html#copy_zones","title":"copy_zones","text":"copy_zones\n\n\n\nproperty CopyZoneletsParams.copy_zones: bool\n\nOption to copy zones of input zonelets to corresponding copied zonelets."},{"objectID":"Home","href":"user_guide/solver_translation.html#solver-translation","title":"Solver translation","text":"Solver translation\n\nSolver translation (FE2Ansys) translates Abaqus INP files to Ansys CDB and K files (MAPDL and LS-DYNA).\nThe translation ensures that the Abaqus model can be used in Ansys without recreating from scratch.\nIt helps to save time and effort even though minor manual adjustments may be required.\nThe manual adjustments like redefining boundary conditions, loads, and material properties,\nensures that the model behaves as expected in Ansys solver deck.\n\nThe following example shows the translation of Abaqus INP file to CDB file format:\n\nImport the Abaqus INP file.\n\nThe import_abaqus_inp imports the INP file as mesh, extracts simulation specific information from the INP file and\nstores the information internally as a JSON document. ImportAbaqusParams\nallows you to set the parameters for importing the model. The example uses default parameters for importing the model.\n\nOutput:\n\nHere, the import summary provides information on the following:\n\nTotal number of keywords in the imported file.\n\nTotal number of processed keywords.\n\nTotal number of skipped or unprocessed keywords.\n\nNumber of imported nodes.\n\nNumber of imported elements(solid, shell, beam and more).\n\nNumber and type of skipped elements.\n\nIds of imported nodes and elements.\n\nNumber of errors and warnings that occurred while importing the file.\n\nExport the CDB file.\n\nExportMapdlCdbParams allows setting parameters to control\nthe export of MAPDL CDB files.\n\nExportMapdlCdbResults contains the summary\nresult of the export process in json format. This writes the CDB file to the specified location.\n\nCDB Export summary provides information about:\n\nNumber of error and warnings that occurred while exporting the CDB file.\n\nMaximum number of node ids and elements ids that are exported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesherResults.failed_topo_face_ids.html#failed_topo_face_ids","title":"failed_topo_face_ids","text":"failed_topo_face_ids\n\n\n\nproperty AutoQuadMesherResults.failed_topo_face_ids: Iterable[int]\n\nIds of the failed topofaces during topology check.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.resolution_factor.html#resolution_factor","title":"resolution_factor","text":"resolution_factor\n\n\n\nproperty WrapperCloseGapsParams.resolution_factor: float\n\nFactor to resolve the smallest gap for the given gap size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.real.html#real","title":"real","text":"real\n\n\n\nCellQualityMeasure.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_summary.html#get_summary","title":"get_summary","text":"get_summary\n\n\n\nSizeControl.get_summary(params)\n\nGet the size control summary along with the evaluated scope for the provided parameters..\n\nParameters\n\nparams\n\nSizeControlSummaryParams\n\nSize control summary parameters.\n\nReturns\n\n:\n\n\n\nSizeControlSummaryResult\n\nReturn the SizeControlSummaryResult.\n\nReturn type\n\nSizeControlSummaryResult\n\nExamples\n\n>>> results = size_control.get_summary(prime.SizeControlSummaryParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.set_edge_biasing_params.html#set_edge_biasing_params","title":"set_edge_biasing_params","text":"set_edge_biasing_params\n\n\n\nMultiZoneControl.set_edge_biasing_params(scope_info)\n\nSets the parameters for edge biasing in terms of topoedges and topofaces during MultiZone mesh.\n\nParameters\n\nscope_info\n\nMultiZoneEdgeBiasingParams\n\nInformation for edge biasing in MultiZone meshing.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_edge_biasing_params(scope_info)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCadRefacetingMaxEdgeSizeLimit.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLINVALIDTARGETSCOPEENTITY.html#thinvolumecontrolinvalidtargetscopeentity","title":"THINVOLUMECONTROLINVALIDTARGETSCOPEENTITY","text":"THINVOLUMECONTROLINVALIDTARGETSCOPEENTITY\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDTARGETSCOPEENTITY = 12106\n\nInvalid target scope entity provided for thin volume control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StretchFreeBoundariesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic StretchFreeBoundariesParams.set_default()\n\nSet the default values of the StretchFreeBoundariesParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.min_angle.html#min_angle","title":"min_angle","text":"min_angle\n\n\n\nproperty LocalSurferParams.min_angle: float\n\nMinimum feature angle limit used to identify and preserve features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationParams.distance.html#distance","title":"distance","text":"distance\n\n\n\nproperty CheckFaceDeviationParams.distance: float\n\nDistance above which deviated entities are collected."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nPartCreationType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.output_format.html#output_format","title":"output_format","text":"output_format\n\n\n\nproperty ExportLSDynaKeywordFileParams.output_format: LSDynaFileFormatType\n\nOutput file format used to write LS-DYNA file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSolverType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.real.html#real","title":"real","text":"real\n\n\n\nCellZoneletType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_scope_face_zonelets.html#get_scope_face_zonelets","title":"get_scope_face_zonelets","text":"get_scope_face_zonelets\n\n\n\nControlData.get_scope_face_zonelets(scope, params)\n\nGet the face zonelet ids for the given scope.\n\nParameters\n\nscope\n\nScopeDefinition\n\nScope definition to evaluate entities.\n\nparams\n\nScopeZoneletParams\n\nParameters to scope zonelets.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of face zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = model.control_data.get_scope_face_zonelets(\n>>>                 prime.ScopeDefinition(model = model,\n>>>                 entity_type = prime.ScopeEntity.FACEZONELETS,\n>>>                 part_expression = \"*\"),\n>>>                 prime.ScopeZoneletParams(model =model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDINPUTPART.html#invalidinputpart","title":"INVALIDINPUTPART","text":"INVALIDINPUTPART\n\n\n\nErrorCode.INVALIDINPUTPART = 305\n\nInvalid input part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_soi_sizing_params.html#set_soi_sizing_params","title":"set_soi_sizing_params","text":"set_soi_sizing_params\n\n\n\nSizeControl.set_soi_sizing_params(params)\n\nSet the sphere of influence sizing parameters to compute volumetric size field.\n\nParameters\n\nparams\n\nSoiSizingParams\n\nParameters that enables you to set sizing on the spherical influence region.\n\nReturns\n\n:\n\n\n\nSetSizingResults\n\nReturns the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> size_control.set_soi_sizing_params(\n>>>                  prime.SoiSizingParams(model=model,\n>>>                  max = 0.1, growth_rate = 1.2))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.html#prismcontrol","title":"PrismControl","text":"PrismControl\n\n\n\nclass ansys.meshing.prime.PrismControl(model, id, object_id, name)\n\nPrismControl allows you to generate prisms.\n\nPrismControl allows you to control generation of prisms. Controls include setting the face scope, volume scope and growth parameters.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create PrismControl object.\n\nid\n\npython:int\n\nId of the PrismControl.\n\nobject_id\n\npython:int\n\nObject id of the PrismControl.\n\nname\n\npython:str\n\nName of the PrismControl.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.html#examples-using-prismcontrol","title":"PrismControl > Examples using PrismControl","text":"Examples using PrismControl\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.NAMEPATTERN.html#namepattern","title":"NAMEPATTERN","text":"NAMEPATTERN\n\n\n\nScopeExpressionType.NAMEPATTERN = 2\n\nUse name pattern expression to evaluate scope."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.spline_refinement_level.html#spline_refinement_level","title":"spline_refinement_level","text":"spline_refinement_level\n\n\n\nproperty IGAUnstructuredSplineSurf.spline_refinement_level: int\n\nRefinement level for rendering of spline points."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripParams.strip_height_limit.html#strip_height_limit","title":"strip_height_limit","text":"strip_height_limit\n\n\n\nproperty SearchByThinStripParams.strip_height_limit: float\n\nAbsolute height limit to ignore strips with height more than provided limit."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneResults.assigned_zone_name.html#assigned_zone_name","title":"assigned_zone_name","text":"assigned_zone_name\n\n\n\nproperty FillHolesAtPlaneResults.assigned_zone_name: str\n\nName assigned to zone created. Suffix is added to suggested name if the name not available."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MULTIZONEMESHER_MULTIPLECONTROLSNOTSUPPORTED.html#multizonemesher_multiplecontrolsnotsupported","title":"MULTIZONEMESHER_MULTIPLECONTROLSNOTSUPPORTED","text":"MULTIZONEMESHER_MULTIPLECONTROLSNOTSUPPORTED\n\n\n\nErrorCode.MULTIZONEMESHER_MULTIPLECONTROLSNOTSUPPORTED = 2611\n\nMultiZone mesh does not support multiple controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.max_angle.html#max_angle","title":"max_angle","text":"max_angle\n\n\n\nproperty SurferParams.max_angle: float\n\nMaximum feature angle limit to be used to identify and preserve features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactElementTypeParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ContactElementTypeParams.set_default(tie_surf_to_surf=None, tie_node_to_surf=None, contact_pair_surf_to_surf=None, contact_pair_node_to_surf=None)\n\nSet the default values of the ContactElementTypeParams object.\n\nParameters\n\ntie_surf_to_surf: int, optional\n\nElement type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ntie_node_to_surf: int, optional\n\nElement type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\ncontact_pair_surf_to_surf: int, optional\n\nElement type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ncontact_pair_node_to_surf: int, optional\n\nElement type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.FACEANDEDGEZONELETS.html#faceandedgezonelets","title":"FACEANDEDGEZONELETS","text":"FACEANDEDGEZONELETS\n\n\n\nScopeEntity.FACEANDEDGEZONELETS = 3\n\nEvaluate scope to get face and edge zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PRISMMESHFAILED.html#prismmeshfailed","title":"PRISMMESHFAILED","text":"PRISMMESHFAILED\n\n\n\nErrorCode.PRISMMESHFAILED = 138\n\nPrism meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PARTDOESNOTHAVETOPOLOGY.html#partdoesnothavetopology","title":"PARTDOESNOTHAVETOPOLOGY","text":"PARTDOESNOTHAVETOPOLOGY\n\n\n\nErrorCode.PARTDOESNOTHAVETOPOLOGY = 310\n\nPart does not have topology."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteZoneResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteZoneResults.set_default(error_code=None)\n\nSet the default values of the DeleteZoneResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the delete zone operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.GlobalSizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic GlobalSizingParams.set_default(min=None, max=None, growth_rate=None)\n\nSet the default values of the GlobalSizingParams object.\n\nParameters\n\nmin: float, optional\n\nMinimum value of global sizing parameters.\n\nmax: float, optional\n\nMaximum value of global sizing parameters.\n\ngrowth_rate: float, optional\n\nGrowth rate of global sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshResults.html#importfluentmeshingmeshresults","title":"ImportFluentMeshingMeshResults","text":"ImportFluentMeshingMeshResults\n\n\n\nclass ansys.meshing.prime.ImportFluentMeshingMeshResults(model=None, error_code=None, new_parts_created=None, json_data=None, **kwargs)\n\nResults associated with fluent meshing mesh import.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportFluentMeshingMeshResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nnew_parts_created: Iterable[int], optional\n\nIds of new parts created for each file unreferenced fluent meshing mesh zones.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportFluentMeshingMeshResults object with provided parameters.\n\nExamples\n\n>>> import_fluent_meshing_mesh_results = prime.ImportFluentMeshingMeshResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SFPeriodicParams.center.html#center","title":"center","text":"center\n\n\n\nproperty SFPeriodicParams.center: Iterable[float]\n\nCenter coordinates."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_scope.html#get_scope","title":"get_scope","text":"get_scope\n\n\n\nSizeControl.get_scope()\n\nGet the scope used by size control to evaluate entities.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturn the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = size_control.get_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsResults.html#cellstatisticsresults","title":"CellStatisticsResults","text":"CellStatisticsResults\n\n\n\nclass ansys.meshing.prime.CellStatisticsResults(model=None, volume=None, error_code=None, json_data=None, **kwargs)\n\nResults of cell statistics information.\n\nParameters\n\nmodel: Model\n\nModel to create a CellStatisticsResults object with default parameters.\n\nvolume: float, optional\n\nCumulative volume of all the cell elements of selected entities.\n\nerror_code: ErrorCode, optional\n\nError code associated with the cell statistics function.\n\njson_data: dict, optional\n\nJSON dictionary to create a CellStatisticsResults object with provided parameters.\n\nExamples\n\n>>> cell_statistics_results = prime.CellStatisticsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nScopeEvaluationType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_MERGEFACESFAILED.html#vt_mergefacesfailed","title":"VT_MERGEFACESFAILED","text":"VT_MERGEFACESFAILED\n\n\n\nErrorCode.VT_MERGEFACESFAILED = 3601\n\nMerge faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.get_surface_diagnostic_summary.html#get_surface_diagnostic_summary","title":"get_surface_diagnostic_summary","text":"get_surface_diagnostic_summary\n\n\n\nSurfaceSearch.get_surface_diagnostic_summary(params)\n\nGets the surface diagnostic summary.\n\nDiagnose surface connectivity for the given scope and controls provided by the surface diagnostic summary parameters.\n\nParameters\n\nparams\n\nSurfaceDiagnosticSummaryParams\n\nSurface diagnostic summary parameters.\n\nReturns\n\n:\n\n\n\nSurfaceDiagnosticSummaryResults\n\nReturns the SurfaceDiagnosticSummaryResults.\n\nReturn type\n\nSurfaceDiagnosticSummaryResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.get_surface_diagnostics_summary(SurfaceDiagnosticSummaryParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.get_surface_diagnostic_summary.html#examples-using-surfacesearchget_surface_diagnostic_summary","title":"get_surface_diagnostic_summary > Examples using SurfaceSearch.get_surface_diagnostic_summary","text":"Examples using SurfaceSearch.get_surface_diagnostic_summary\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CurvatureSizingParams.print_default()\n\nPrint the default values of CurvatureSizingParams object.\n\nExamples\n\n>>> CurvatureSizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.real.html#real","title":"real","text":"real\n\n\n\nHexCoreCellElementType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.min.html#min","title":"min","text":"min\n\n\n\nproperty CurvatureSizingParams.min: float\n\nMinimum size used for computing edge and face size using curavture size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchParams.enable_multi_threading.html#enable_multi_threading","title":"enable_multi_threading","text":"enable_multi_threading\n\n\n\nproperty StitchParams.enable_multi_threading: bool\n\nOption to run stitch in parallel using multithread."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetNameResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SetNameResults.print_default()\n\nPrint the default values of SetNameResults object.\n\nExamples\n\n>>> SetNameResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zonelets_of_label_name_pattern.html#get_face_zonelets_of_label_name_pattern","title":"get_face_zonelets_of_label_name_pattern","text":"get_face_zonelets_of_label_name_pattern\n\n\n\nPart.get_face_zonelets_of_label_name_pattern(label_name_pattern, name_pattern_params)\n\nGet face zonelet ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern\n\npython:str\n\nName pattern to be matched with label name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match label name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn face zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_label_name_pattern(\"wall*\", name_pattern_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zonelets_of_label_name_pattern.html#examples-using-partget_face_zonelets_of_label_name_pattern","title":"get_face_zonelets_of_label_name_pattern > Examples using Part.get_face_zonelets_of_label_name_pattern","text":"Examples using Part.get_face_zonelets_of_label_name_pattern\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchByQualityParams.set_default(quality_limit=None, face_quality_measure=None)\n\nSet the default values of the SearchByQualityParams object.\n\nParameters\n\nquality_limit: float, optional\n\nQuality limit used for search face elements.\n\nface_quality_measure: FaceQualityMeasure, optional\n\nQuality measure used for search face elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MULTIZONEMESHER_NOVOLUMESSCOPEDINCURRENTPART.html#multizonemesher_novolumesscopedincurrentpart","title":"MULTIZONEMESHER_NOVOLUMESSCOPEDINCURRENTPART","text":"MULTIZONEMESHER_NOVOLUMESSCOPEDINCURRENTPART\n\n\n\nErrorCode.MULTIZONEMESHER_NOVOLUMESSCOPEDINCURRENTPART = 2613\n\nNo volumes for geometry import in the current part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SmoothDihedralFaceNodesParams.set_default(min_dihedral_angle=None, tolerance=None, type=None)\n\nSet the default values of the SmoothDihedralFaceNodesParams object.\n\nParameters\n\nmin_dihedral_angle: float, optional\n\nMinimum angle to be used to identify dihedral faces.\n\ntolerance: float, optional\n\nTolerance relative to local mesh size to control smooth movement of nodes.\n\ntype: SmoothType, optional\n\nOption to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ResolveIntersectionResult.html#resolveintersectionresult","title":"ResolveIntersectionResult","text":"ResolveIntersectionResult\n\n\n\nclass ansys.meshing.prime.ResolveIntersectionResult(model=None, error_code=None, json_data=None, **kwargs)\n\nResult structure associated with resolve intersections operation.\n\nParameters\n\nmodel: Model\n\nModel to create a ResolveIntersectionResult object with default parameters.\n\nerror_code: ErrorCode, optional\n\nErrror code associated with a resolve intersections operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a ResolveIntersectionResult object with provided parameters.\n\nExamples\n\n>>> resolve_intersection_result = prime.ResolveIntersectionResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ReadSizeFieldParams.append.html#append","title":"append","text":"append\n\n\n\nproperty ReadSizeFieldParams.append: bool\n\nOption to append the size fields from file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nFuseOption.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsResult.name.html#name","title":"name","text":"name\n\n\n\nproperty WrapperPatchFlowRegionsResult.name: str\n\nName of part created with hole patches.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesherResults.html#autoquadmesherresults","title":"AutoQuadMesherResults","text":"AutoQuadMesherResults\n\n\n\nclass ansys.meshing.prime.AutoQuadMesherResults(model=None, error_code=None, warning_codes=None, failed_topo_face_ids=None, json_data=None, **kwargs)\n\nResults of auto quad mesher.\n\nParameters\n\nmodel: Model\n\nModel to create a AutoQuadMesherResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code if AutoQuadMesher operation is unsuccessful.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes: List[WarningCode], optional\n\nWarning code if AutoQuadMesher operation is partially successful.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfailed_topo_face_ids: Iterable[int], optional\n\nIds of the failed topofaces during topology check.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a AutoQuadMesherResults object with provided parameters.\n\nExamples\n\n>>> auto_quad_mesher_results = prime.AutoQuadMesherResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPair.bc_pairs.html#bc_pairs","title":"bc_pairs","text":"bc_pairs\n\n\n\nproperty MatchPair.bc_pairs: List[BCPair]\n\nArray of boundary condition pairs."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.VOLUME.html#volume","title":"VOLUME","text":"VOLUME\n\n\n\nScopeEntity.VOLUME = 6\n\nEvaluate scope to get volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.zmin.html#zmin","title":"zmin","text":"zmin\n\n\n\nproperty BoundingBox.zmin: float\n\nMinimal Z coordinate of the bounding box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.html#cadreaderroute","title":"CadReaderRoute","text":"CadReaderRoute\n\n\n\nclass ansys.meshing.prime.CadReaderRoute(*values)\n\nCAD Reader routes.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileWriteResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FileWriteResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the FileWriteResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code if file write operation is unsuccessful.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the file write operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.constant_size.html#constant_size","title":"constant_size","text":"constant_size\n\n\n\nproperty LocalSurferParams.constant_size: float\n\nConstant size to be used in case of constant size field."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERINVALIDCONSTANTSIZE.html#surferinvalidconstantsize","title":"SURFERINVALIDCONSTANTSIZE","text":"SURFERINVALIDCONSTANTSIZE\n\n\n\nErrorCode.SURFERINVALIDCONSTANTSIZE = 40\n\nInvalid size for constant size surface meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshToolResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VolumeMeshToolResults.print_default()\n\nPrint the default values of VolumeMeshToolResults object.\n\nExamples\n\n>>> VolumeMeshToolResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.html#shellblcontrol","title":"ShellBLControl","text":"ShellBLControl\n\n\n\nclass ansys.meshing.prime.ShellBLControl(model, id, object_id, name)\n\nShellBLControl allows you to generate quad mesh on face zonelets.\n\nShellBLControl allows you to control generation of quad mesh on face zonelets. Controls include setting the edge scope, face scope and growth parameters.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create ShellBLControl object.\n\nid\n\npython:int\n\nId of the ShellBLControl.\n\nobject_id\n\npython:int\n\nObject id of the ShellBLControl.\n\nname\n\npython:str\n\nName of the ShellBLControl.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.detect_circular_holes_params.html#detect_circular_holes_params","title":"detect_circular_holes_params","text":"detect_circular_holes_params\n\n\n\nproperty DetectAndTreatHolesParams.detect_circular_holes_params: DetectCircularHolesParams\n\nParameters for detect circular holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.REGULAR.html#regular","title":"REGULAR","text":"REGULAR\n\n\n\nLSDynaFileFormatType.REGULAR = 0\n\nOption to select 8-char width format to write ids for elements and nodes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCadRefacetingMaxEdgeSizeLimit.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderMergeResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ScaffolderMergeResults.error_code: ErrorCode\n\nError code associated with merge overlapping topofaces operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nJoinSeparateMethod.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSearch.html#volumesearch","title":"VolumeSearch","text":"VolumeSearch\n\n\n\nclass ansys.meshing.prime.VolumeSearch(model)\n\nVolumeSearch allows you to check volume mesh quality.\n\nVolumeSearch performs volume mesh quality check based on different cell quality measures.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create VolumeSearch object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSearch.html#examples-using-volumesearch","title":"VolumeSearch > Examples using VolumeSearch","text":"Examples using VolumeSearch\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nAdvancedSurferSetup.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_multi_zone_controls.html#get_multi_zone_controls","title":"get_multi_zone_controls","text":"get_multi_zone_controls\n\n\n\nControlData.get_multi_zone_controls()\n\nGet ids of all the MultiZone controls.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn all the MultiZone controls ids.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> MultiZoneControls = model.control_data.get_multi_zone_controls()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteVolumesResults.print_default()\n\nPrint the default values of DeleteVolumesResults object.\n\nExamples\n\n>>> DeleteVolumesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.volume_mesh.html#volume_mesh","title":"volume_mesh","text":"volume_mesh\n\n\n\nMesh.volume_mesh(volume_fill_type=VolumeFillType.TET, quadratic=False, prism_layers=None, prism_surface_expression='*', prism_volume_expression='*', growth_rate=1.2, scope=<ansys.meshing.prime.lucid.scope.VolumeScope object>)\n\nGenerate a volume mesh on the model.\n\nParameters\n\nvolume_fill_type\n\nprime.VolumeFillType\n\nType of volume elements to generate.\n\nquadratic\n\nbool, optional\n\nWhether to generate a quadratic mesh. The default is False.\nA quadratic mesh is not supported with parallel meshing.\nIt is only supported with a pure tetrahedral mesh.\n\nprism_layers\n\npython:int, optional\n\nNumber of prism layers to grow. The default is None.\nIf a value for prism layers is specified, prism layers are generated.\n\nprism_surface_expression\n\npython:str, optional\n\nFace zones or TopoFaces to grow prisms from. The default is \"*\",\nin which case prisms are grown from all surfaces.\n\nprism_volume_expression\n\npython:str, optional\n\nVolumes or TopoVolumes to grow prisms in.\nThe default is \"*\". This expression evaluates\nto zone names and volumes, or TopoVolumes are queried\nbased on the zones evaluated.\n\ngrowth_rate\n\npython:float, optional\n\nPrism growth rate. The default is 1.2.\n\nscope\n\nVolumeScope\n\nScope of volumes to mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.volume_mesh.html#examples-using-meshvolume_mesh","title":"volume_mesh > Examples using Mesh.volume_mesh","text":"Examples using Mesh.volume_mesh\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#add-a-new-example","title":"Add a new example","text":"Add a new example\n\nSummary: This example demonstrates how to add new examples and serves as a template\nthat you can use in their creation.\n\nA block comment must be included at the top of any new example. Each example\nmust have a reference tag in this format:\n\n.. _ref_my_example:\n\nThe .. _ref_ is necessary. Everything that follows is your reference tag.\nKeep all references in snake case.\n\nThis section should give a brief overview of what the example is about and/or demonstrates.\nThe title should be changed to reflect the topic your example covers.\n\nNew examples should be added as Python scripts to:\n\npyprimemesh/examples/gallery\n\nAvoid creating new folders unless absolutely necessary. If in doubt, put the example\nin the folder closest to what it is doing and its precise location can be advised\non in the pull request. If you must create a new folder, make sure to add a\nREADME.txt file containing a reference, a title, and a single sentence describing the folder.\nOtherwise, the new folder is ignored by Sphinx.\n\nExample file names should be in the format:\n\nexample_name.py\n\nSupporting input files for the example, such as CAD or mesh file assets, must be either original\ncontent or have appropriate licensing and ownership permissions from their respective owners. If\nthe input files are used within the example script provided they must be capable of running in\nthe CI pipeline. This means that only files that can be read using the native file formats and\nCAD readers can be used in the scripted examples.\n\nThe recommended data formats to be included in the example are:\n\n.pmdat\n\n.fmd\n\n.scdoc or .dsco (supported on Windows OS)\n\nSupporting input files should be added in:\n\nGithub Example Data Repository\n\nReferencing files as enum and creating download function in:\n\npyprimemesh/examples.py\n\nAlso adding download function to:\n\npyprimemesh/examples/__init__.py\n\nAfter this preamble is the first code block:"},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#create-sections","title":"Add a new example > Create sections","text":"Create sections\n\nYou can break up code blocks in titled sections that provide descriptive text.\nWhen Sphinx is used to generate the documentation, this content is interpreted\nas ReStructured Text (RST).\n\nYou only need to create the Python (PY) files for the example. The\nsphinx-gallery extension automatically generates the Jupyter\nnotebook, the HTML files for the documentation, and the demo script.\n\nSections can contain any information that you may have regarding the example,\nsuch as step-by-step comments and information on motivations. In the generated\nJupyter notebook, this text is translated into a markdown cell.\n\nAs in Jupyter notebooks, if code is left unassigned at the end of a code block\n(as with model in the previous block), the output is generated and\nprinted to the screen according to its __repr__.  Otherwise, you can use\nprint() to output the __str__."},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#render-graphics","title":"Add a new example > Render graphics","text":"Render graphics\n\nIf you display graphics, the result is auto-generated and\nrendered on the page:\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#make-a-pull-request","title":"Add a new example > Make a pull request","text":"Make a pull request\n\nOnce your example is complete and you’ve verified builds locally, you can make a\npull request (PR).  Branches containing examples should be prefixed with doc/\nas per the branch-naming conventions found in the ref_index_contributing\ntopic in the PyAnsys Developer’s Guide."},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#stop-ansys-prime-server","title":"Add a new example > Stop Ansys Prime Server","text":"Stop Ansys Prime Server\n\nTotal running time of the script: (0 minutes 18.472 seconds)\n\n\n\nDownload Jupyter notebook: example_template.ipynb\n\nDownload Python source code: example_template.py\n\nDownload zipped: example_template.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchParams.remesh.html#remesh","title":"remesh","text":"remesh\n\n\n\nproperty StitchParams.remesh: bool\n\nRemesh at stitch connection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.FACEFACE.html#faceface","title":"FACEFACE","text":"FACEFACE\n\n\n\nIntersectionMask.FACEFACE = 2\n\nPerforms face to face intersection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.html#scopeevaluationtype","title":"ScopeEvaluationType","text":"ScopeEvaluationType\n\n\n\nclass ansys.meshing.prime.ScopeEvaluationType(*values)\n\nScopeDefinition uses evaluation type to evaluate the scope.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.html#examples-using-scopeevaluationtype","title":"ScopeEvaluationType > Examples using ScopeEvaluationType","text":"Examples using ScopeEvaluationType\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSolverType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.FACEZONELET.html#facezonelet","title":"FACEZONELET","text":"FACEZONELET\n\n\n\nMatchPairTargetType.FACEZONELET = 1\n\nOption to specify face zonelet as target."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchByFoldsResults.print_default()\n\nPrint the default values of SearchByFoldsResults object.\n\nExamples\n\n>>> SearchByFoldsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.get_params.html#get_params","title":"get_params","text":"get_params\n\n\n\nPeriodicControl.get_params()\n\nGet the parameters of the periodic control.\n\nReturns\n\n:\n\n\n\nPeriodicControlParams\n\nReturn parameters of the periodic control.\n\nReturn type\n\nPeriodicControlParams\n\nExamples\n\n>>> params = periodic_control.get_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nScopeEvaluationType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPreventionParams.target_scope.html#target_scope","title":"target_scope","text":"target_scope\n\n\n\nproperty ContactPreventionParams.target_scope: ScopeDefinition\n\nTarget scope used for contact prevention control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneParams.create_zone.html#create_zone","title":"create_zone","text":"create_zone\n\n\n\nproperty FillHolesAtPlaneParams.create_zone: bool\n\nOption to create a face zone for the zonelets created to fill holes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Client.model.html#model","title":"model","text":"model\n\n\n\nproperty Client.model\n\nGet model associated with the client."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCdbAnalysisType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nTrimmedSolidSplineCutMode.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.geom_zonelets.html#geom_zonelets","title":"geom_zonelets","text":"geom_zonelets\n\n\n\nproperty WrapperImproveQualityParams.geom_zonelets: Iterable[int]\n\nAssociated underlying geometry zonelet ids."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.analysis_type.html#analysis_type","title":"analysis_type","text":"analysis_type\n\n\n\nproperty ExportLSDynaKeywordFileParams.analysis_type: LSDynaAnalysisType\n\nOption to specify LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nStitchType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSplineFeatureCaptureType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.WRITINGTIESSKIPPED.html#writingtiesskipped","title":"WRITINGTIESSKIPPED","text":"WRITINGTIESSKIPPED\n\n\n\nWarningCode.WRITINGTIESSKIPPED = 11103\n\nWriting of ties skipped."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.database_keywords.html#database_keywords","title":"database_keywords","text":"database_keywords\n\n\n\nproperty ExportLSDynaKeywordFileParams.database_keywords: str\n\nDatabase keywords in LS-DYNA format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferResults.html#surferresults","title":"SurferResults","text":"SurferResults\n\n\n\nclass ansys.meshing.prime.SurferResults(model=None, error_code=None, topofaces_not_projected_on_geometry=None, json_data=None, **kwargs)\n\nResults associated with the surface mesh.\n\nParameters\n\nmodel: Model\n\nModel to create a SurferResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\ntopofaces_not_projected_on_geometry: Iterable[int], optional\n\nIds of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled.\n\njson_data: dict, optional\n\nJSON dictionary to create a SurferResults object with provided parameters.\n\nExamples\n\n>>> surfer_results = prime.SurferResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferResults.html#examples-using-surferresults","title":"SurferResults > Examples using SurferResults","text":"Examples using SurferResults\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.feature_angle.html#feature_angle","title":"feature_angle","text":"feature_angle\n\n\n\nproperty QuadToSplineParams.feature_angle: float\n\nAngle to capture the feature.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaResults.zone_mesh_results.html#zone_mesh_results","title":"zone_mesh_results","text":"zone_mesh_results\n\n\n\nproperty ExportLSDynaResults.zone_mesh_results: List[ZoneMeshResult]\n\nZone-wise mesh information for elements in the exported model.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.wrapper_controls.html#wrapper_controls","title":"wrapper_controls","text":"wrapper_controls\n\n\n\nproperty ControlData.wrapper_controls: List[WrapperControl]\n\nGet the wrapper controls.\n\nReturns\n\nList[WrapperControl]\n\nList of wrapper controls.\n\nExamples\n\n>>> wrapper_control = model.control_data.wrapper_controls"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.error_code: ErrorCode\n\nError code returned by edge extraction function."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPair.target_zonelet.html#target_zonelet","title":"target_zonelet","text":"target_zonelet\n\n\n\nproperty BCPair.target_zonelet: int\n\nId of target zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsParams.extract_edges.html#extract_edges","title":"extract_edges","text":"extract_edges\n\n\n\nproperty SubtractZoneletsParams.extract_edges: bool\n\nExtract edges of intersection during subtract."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SHELLBLFAILED.html#shellblfailed","title":"SHELLBLFAILED","text":"SHELLBLFAILED\n\n\n\nErrorCode.SHELLBLFAILED = 60\n\nShellBL creation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsParams.element_count_limit.html#element_count_limit","title":"element_count_limit","text":"element_count_limit\n\n\n\nproperty MergeZoneletsParams.element_count_limit: int\n\nElement count limit to identify small zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchParams.use_absolute_tolerance.html#use_absolute_tolerance","title":"use_absolute_tolerance","text":"use_absolute_tolerance\n\n\n\nproperty StitchParams.use_absolute_tolerance: bool\n\nTrue if tolerance provided is absolute value."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PrismControlGrowthParams.print_default()\n\nPrint the default values of PrismControlGrowthParams object.\n\nExamples\n\n>>> PrismControlGrowthParams.print_default()"},{"objectID":"Home","href":"user_guide/launch_prime.html#launching-pyprimemesh","title":"Launching PyPrimeMesh","text":"Launching PyPrimeMesh"},{"objectID":"Home","href":"user_guide/launch_prime.html#launch-server-from-a-python-script","title":"Launching PyPrimeMesh > Launch server from a Python script","text":"Launch server from a Python script\n\nThe launch_prime() method launches Ansys Prime Server.\n\nThis code returns an instance of the PyPrimeMesh Client class\nconnected to the launched server session:\n\nYou can send commands to Ansys Prime Server and receive responses from it.\n\nThe Client class gets the model\nparameter associated with the client instance:"},{"objectID":"Home","href":"user_guide/launch_prime.html#launch-server-from-a-windows-or-linux-console-and-connect-the-client","title":"Launching PyPrimeMesh > Launch server from a Windows or Linux console and connect the client","text":"Launch server from a Windows or Linux console and connect the client\n\nYou can launch Ansys Prime Server on Linux or Windows from a command prompt and then connect to the client as needed.\n\nThis example starts the server in parallel mode on four nodes and specifies the IP address and port on Windows:\n\nLaunch the server from a command line:\n\nConnect to the server in Python using the Client class:\n\nOnly a single client session can be connected to an active Ansys Prime Server instance at any time."},{"objectID":"Home","href":"user_guide/launch_prime.html#disconnect-from-the-server","title":"Launching PyPrimeMesh > Disconnect from the server","text":"Disconnect from the server\n\nThe Client.exit() method ends the connection with the server.\n\nIf the Client class launched the server, then this terminates the server process.\n\nIf you use Intel(R) MPI Library, Version 2021.8, you may encounter the following error while exiting the client:"},{"objectID":"Home","href":"user_guide/launch_prime.html#run-a-python-script-in-batch-on-the-server","title":"Launching PyPrimeMesh > Run a Python script in batch on the server","text":"Run a Python script in batch on the server\n\nYou can run a Python script directly on the server from a Linux or Windows console.\n\nHere is a Windows code example for running a Python script directly from the command line:"},{"objectID":"Home","href":"user_guide/launch_prime.html#recommendations-for-launching-the-server","title":"Launching PyPrimeMesh > Recommendations for launching the server","text":"Recommendations for launching the server\n\nWhen developing, you can use Python context to launch the server so that if an exception\noccurs during runtime the server closes cleanly. This prevents servers being spawned and\nleft open blocking ports.\n\nThis code example shows how to manage the server lifecycle using context to make development easier:\n\nUsing the Client.exit() method to close the server in this instance is not required."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.real.html#real","title":"real","text":"real\n\n\n\nStitchType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOINPUT.html#noinput","title":"NOINPUT","text":"NOINPUT\n\n\n\nErrorCode.NOINPUT = 1305\n\nNo input provided."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.ALLTOALL.html#alltoall","title":"ALLTOALL","text":"ALLTOALL\n\n\n\nEdgeConnectType.ALLTOALL = 1\n\nPerform connections between any type of edges or faces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.SIZECHANGE.html#sizechange","title":"SIZECHANGE","text":"SIZECHANGE\n\n\n\nFaceQualityMeasure.SIZECHANGE = 2\n\nSize Change is the maximum ratio of the area of each neighboring face element to the area of face element when the area of the face element is smaller than the neighbor. The minimum value for size change is 1."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.face_quality_measure.html#face_quality_measure","title":"face_quality_measure","text":"face_quality_measure\n\n\n\nproperty SurfaceQualityResult.face_quality_measure: FaceQualityMeasure\n\nType of the face quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.name.html#name","title":"name","text":"name\n\n\n\nproperty WrapperControl.name\n\nGet the name of the wrapper control.\n\nReturns\n\npython:str\n\nName of the wrapper control.\n\nExamples\n\n>>> print(wrapper_control.name)"},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/index.html#examples-using-beta-apis","title":"Examples using beta APIs","text":"Examples using beta APIs\n\nThese examples use beta APIs and as such their behavior and implementation may change in future.\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExtractTopoVolumesParams.print_default()\n\nPrint the default values of ExtractTopoVolumesParams object.\n\nExamples\n\n>>> ExtractTopoVolumesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartialDefeatureParams.html#partialdefeatureparams","title":"PartialDefeatureParams","text":"PartialDefeatureParams\n\n\n\nclass ansys.meshing.prime.PartialDefeatureParams(model=None, edge_sharp_corner_angle=None, merge_face_normals_angle=None, merge_edge_allow_self_close=None, json_data=None, **kwargs)\n\nParameters for partial defeature operation.\n\nParameters\n\nmodel: Model\n\nModel to create a PartialDefeatureParams object with default parameters.\n\nedge_sharp_corner_angle: float, optional\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle: float, optional\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a PartialDefeatureParams object with provided parameters.\n\nExamples\n\n>>> partial_defeature_params = prime.PartialDefeatureParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.topo_data.html#topo_data","title":"topo_data","text":"topo_data\n\n\n\nproperty Model.topo_data: TopoData\n\nGet the TopoData for the model.\n\nReturns\n\nTopoData\n\nTopoData for the model.\n\nExamples\n\n>>> topo_data=model.topo_data"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nEdgeConnectType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"user_guide/connections.html#connections","title":"Connections","text":"Connections"},{"objectID":"Home","href":"user_guide/connections.html#zonelet-connection","title":"Connections > Zonelet connection","text":"Zonelet connection\n\nConnect operations help you to create a watertight, fully connected surface mesh for successful volume mesh generation.\nConnect operations conformally connect multiple watertight volumes providing shared zonelets (and therefore connected\nvolume mesh) between them. The Connect class allows you to connect the face zonelets\nin a part, volume, or model using various connect algorithms.\n\nThere are three major operations for zonelet connections:\n\nThe Connect.intersect_face_zonelets() function allows you\nto intersect the face zonelets of the part along the intersecting faces.\n\nThe Connect.stitch_face_zonelets() function allows you to\nstitch a set of face zonelets to another set of face zonelets along the boundary of zonelets.\n\nThe Connect.join_face_zonelets() function allows you to join\na set of face zonelets to another set of face zonelets along the overlapping faces.\n\nThe Connect.fuse_face_zonelets() function allows you to\nperform fuse operation between overlapping face zonelets within a single part.\n\nThe Connect.merge_boundary_nodes() function allows you\nto merge boundary nodes of source face zonelets with boundary nodes of target face zonelets with the given parameters.\n\nConnect operations support only computational mesh, which is mesh with reasonable size changes and quality.\nFaceted geometry, which is STL-like mesh that can have extreme size changes and many sliver elements, is not supported.\n\nThe following example shows how to accomplish these tasks:\n\nImport the model and delete geometry topology from each part.\n\nMerge the parts and verify the surface mesh connectivity.\n\nPerform the join or intersect operation on face zonelets.\n\nImport the model and delete topo-geometric entities from each part:\n\nMerge the parts.\n\nCheck the surface before performing the connect operation.\n\nFor more information on checking the surface mesh connectivity, see ref_index_mesh_diagnostics.\n\nPrint the results of the surface mesh connectivity before performing the connect operation:\n\nConnect face zonelets in the model:\n\nOnly triangular faces are supported.\n\nCheck the surface after performing the connect operation:\n\nPrint the results of the surface mesh connectivity after performing the connect operation:\n\nTo perform Fuse operation,\n\nConnect face zonelets in the model using fuse operation. You can apply Fuse operation on overlapping faces\nwithin a single part. You can co-locate, merge, or remove fused surfaces as per your requirement.\n\nEnable the fuse parameters as per your requirement. When use_absolute_tolerance is True,\nprovides the gap tolerance or side tolerance value as absolute value.\n\nThe fuse_option parameter specifies how to treat the surface when performing fuse operation.\nHere, TRIMONESIDE option deletes the faces to be fused on one side and merges the nodes in the middle location.\nWhen local_remesh parameter is True, the fused region is meshed after performing fuse operation.\nn_layers parameter specifies the number of layers around the region to be fused.\nWhen separate is True, the fused region is separated.\n\nFuse the face zonelets using the given parameters.\n\n"},{"objectID":"Home","href":"user_guide/connections.html#topology-based-connection","title":"Connections > Topology-based connection","text":"Topology-based connection\n\nThe Scaffolder class allows you to provide connection\nusing faceted geometry and topology. This class also handles the gaps and mismatches in the geometry.\n\nTopology-based connection creates shared topoedges between neighboring topofaces. Hence, you can\ncreate connected mesh between topofaces.\n\nConnectivity cannot be shared across multiple parts.\n\nHere, the yellow edges denote multiple connections between the four topofaces.\nThe model has a single topoface containing an interior edge loop and an overlapping topoface on the central portion.\nYou may separate the large topoface by the interior edge loop and delete the shadow or merge the topoface to\nachieve the desired state.\n\nThis code merges parts and scaffold topofaces:\n\nThis code prints the results so that you can verify the number of topofaces that failed\nin the scaffold operation:"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nBOIType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPreventionParams.source_scope.html#source_scope","title":"source_scope","text":"source_scope\n\n\n\nproperty ContactPreventionParams.source_scope: ScopeDefinition\n\nSource scope used for contact prevention control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCellQualityMeasure.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nScopeEntity.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldFileReadResults.size_field_ids.html#size_field_ids","title":"size_field_ids","text":"size_field_ids\n\n\n\nproperty SizeFieldFileReadResults.size_field_ids: Iterable[int]\n\nIds of size fields read by read size field operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetParamsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SetParamsResults.print_default()\n\nPrint the default values of SetParamsResults object.\n\nExamples\n\n>>> SetParamsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.X.html#x","title":"X","text":"X\n\n\n\nFlowDirection.X = 1\n\nFlow or wake inflation in the X direction for BOI creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.html#part","title":"Part","text":"Part\n\n\n\nclass ansys.meshing.prime.Part(model, id, object_id, name)\n\nPart contains zonelets and topoentities.\n\nTopoentities and zonelets are characterized by dimension of entities.\nZonelets are a group of interconnected elements in a mesh. There are three types of zonelets. They are:\n\nFaceZonelet: A group of interconnected face elements.\n\nEdgeZonelet: A group of interconnected edge elements.\n\nCellZonelet: A group of interconnected cell elements.\n\nTopoentities represent connectivity information.\nTopoentities can be queried from higher order to lower order topoentities and vice versa.\nTopoentities have geometric representation which may be defined by splines or facets.\nThe mesh generated on topoentities will be projected on geometry representation.\n\nTopoFace: Topoentity representing surfaces.\n\nTopoEdge: Topoentity representing curves.\n\nTopoVolume: Topoentity representing volumes.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create Part object.\n\nid\n\npython:int\n\nId of the Part.\n\nobject_id\n\npython:int\n\nObject id of the Part.\n\nname\n\npython:str\n\nName of the Part.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.html#examples-using-part","title":"Part > Examples using Part","text":"Examples using Part\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportMapdlCdbParams.set_default(config_settings=None, pre_solution_settings=None, material_properties=None, boundary_conditions=None, analysis_settings=None, write_cells=None, enable_face_based_labels=None, label_export_params=None, write_by_zones=None, consider_general_connectors_as_spot_weld=None, analysis_type=None, simulation_type=None, analysis_settings_file_name=None, write_separate_blocks=None, write_components_with_element_blocks=None, separate_blocks_format_type=None, export_fasteners_as_swgen=None, export_rigid_bodies_as_rbgen=None, write_component_based_ties=None, mortar_contact_for_ties=None, write_thickness_file=None, contact_element_types=None)\n\nSet the default values of the ExportMapdlCdbParams object.\n\nParameters\n\nconfig_settings: str, optional\n\nMAPDL configuration settings in CDB format to be added at the beginning of the file.\n\npre_solution_settings: str, optional\n\nMAPDL Settings in CDB format to be added before the solution block in the file.\n\nmaterial_properties: str, optional\n\nMaterials in CDB format to be added to the file.\n\nboundary_conditions: str, optional\n\nBoundary conditions in CDB format to be added to the file.\n\nanalysis_settings: str, optional\n\nMAPDL analysis settings in CDB format to be added after the solution block in the file. Note: Boundary conditions can be included into analysis settings.\n\nwrite_cells: bool, optional\n\nOption to write out cells as part of the file.\n\nenable_face_based_labels: bool, optional\n\nUse LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nlabel_export_params: LabelExportParams, optional\n\nParameters to control the export of labels as Nodal or Element Components in CDB.\n\nwrite_by_zones: bool, optional\n\nOption to write zones in the file.\n\nconsider_general_connectors_as_spot_weld: bool, optional\n\nOption to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\nanalysis_type: CdbAnalysisType, optional\n\nOption to specify CDB analysis type.\n\nsimulation_type: CdbSimulationType, optional\n\nSimulation type for the file.\n\nanalysis_settings_file_name: str, optional\n\nFile path to export mapdl analysis settings.\n\nwrite_separate_blocks: bool, optional\n\nControls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nwrite_components_with_element_blocks: bool, optional\n\nControls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nseparate_blocks_format_type: SeparateBlocksFormatType, optional\n\nControls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nexport_fasteners_as_swgen: bool, optional\n\nOption to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nexport_rigid_bodies_as_rbgen: bool, optional\n\nOption to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nwrite_component_based_ties: bool, optional\n\nOption to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nmortar_contact_for_ties: bool, optional\n\nOption to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\nwrite_thickness_file: bool, optional\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\ncontact_element_types: ContactElementTypeParams, optional\n\nParameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractedFeatureIds.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExtractedFeatureIds.set_default(part_id=None, new_edge_zonelets=None)\n\nSet the default values of the ExtractedFeatureIds object.\n\nParameters\n\npart_id: int, optional\n\nId of the part from which edge zonelets are extracted.\n\nnew_edge_zonelets: Iterable[int], optional\n\nIds of new edge zonelets extracted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_prism_cells.html#n_prism_cells","title":"n_prism_cells","text":"n_prism_cells\n\n\n\nproperty PartSummaryResults.n_prism_cells: int\n\nNumber of prism cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.SEATBELT.html#seatbelt","title":"SEATBELT","text":"SEATBELT\n\n\n\nLSDynaAnalysisType.SEATBELT = 1\n\nOption to select Seatbelt as LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty MergePartsResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nPrismControlOffsetType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsResults.merged_part_assigned_name.html#merged_part_assigned_name","title":"merged_part_assigned_name","text":"merged_part_assigned_name\n\n\n\nproperty MergePartsResults.merged_part_assigned_name: str\n\nName assigned to merged part. Suffix is added to suggested name if the name not available."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.size_field_type.html#size_field_type","title":"size_field_type","text":"size_field_type\n\n\n\nproperty ScaffolderParams.size_field_type: int\n\nSpecifies the type of size field used for scaffolding.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsResults.html#copyzoneletsresults","title":"CopyZoneletsResults","text":"CopyZoneletsResults\n\n\n\nclass ansys.meshing.prime.CopyZoneletsResults(model=None, error_code=None, copied_zonelets=None, copied_face_zonelets=None, json_data=None, **kwargs)\n\nResult structure associated with copying zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a CopyZoneletsResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\ncopied_zonelets: Iterable[int], optional\n\nIds of the copied zonelets.\n\ncopied_face_zonelets: Iterable[int], optional\n\nIds of the copied bounding faces of cell zonelets.\n\njson_data: dict, optional\n\nJSON dictionary to create a CopyZoneletsResults object with provided parameters.\n\nExamples\n\n>>> copy_zonelets_results = prime.CopyZoneletsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nTopoSearchField.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ProjectOnGeometryParams.set_default(project_only_mid_nodes=None, project_on_facets_if_cadnot_found=None)\n\nSet the default values of the ProjectOnGeometryParams object.\n\nParameters\n\nproject_only_mid_nodes: bool, optional\n\nOption to project only the mid nodes.\n\nproject_on_facets_if_cadnot_found: bool, optional\n\nOption to project on facet if geometry is not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Surfer.initialize_surfer_params_for_wrapper.html#initialize_surfer_params_for_wrapper","title":"initialize_surfer_params_for_wrapper","text":"initialize_surfer_params_for_wrapper\n\n\n\nSurfer.initialize_surfer_params_for_wrapper()\n\nInitialize surfer parameters to mesh surfaces generated by the wrapper.\n\nReturns\n\n:\n\n\n\nSurferParams\n\nSurfer parameters initialized for wrapper inputs.\n\nReturn type\n\nSurferParams\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = surfer.initialize_surfer_params_for_wrapper()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityResults.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty SearchByQualityResults.n_found: int\n\nNumber of face elements found by search for given quality limit."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFACEFEATURETYPENOTSUPPORTED.html#surfacefeaturetypenotsupported","title":"SURFACEFEATURETYPENOTSUPPORTED","text":"SURFACEFEATURETYPENOTSUPPORTED\n\n\n\nErrorCode.SURFACEFEATURETYPENOTSUPPORTED = 2807\n\nSurface search for provided feature type is not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nScaffolderRepairMode.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.imprint_iterations.html#imprint_iterations","title":"imprint_iterations","text":"imprint_iterations\n\n\n\nproperty WrapParams.imprint_iterations: int\n\nUsed to define number of imprint iterations in wrapping."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.create_size_control.html#create_size_control","title":"create_size_control","text":"create_size_control\n\n\n\nControlData.create_size_control(sizing_type)\n\nCreate a size control for a sizing type.\n\nParameters\n\ntype\n\nSizingType\n\nSizing type for creating the size control.\n\nReturns\n\n:\n\n\n\nSizeControl\n\nSize control.\n\nReturn type\n\nSizeControl\n\nNotes\n\nAn empty size control is created on calling this method.\n\nExamples\n\n>>> size_control = model.control_data.create_size_control(SizingType.Curvature)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CADGEOMETRYNOTFOUND.html#cadgeometrynotfound","title":"CADGEOMETRYNOTFOUND","text":"CADGEOMETRYNOTFOUND\n\n\n\nErrorCode.CADGEOMETRYNOTFOUND = 306\n\nNo CAD Geometry found for projections."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nFuseOption.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"examples/gallery_examples/gallery/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n14:26.245 total execution time for 12 files from examples/gallery_examples/gallery:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py (04_lucid_toy_car.py)\n\n03:30.556\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py (10_wheel_ground_contact_patch.py)\n\n02:31.499\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py (03_lucid_pipe_tee.py)\n\n02:28.691\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py (08_lucid_generic_f1_rear_wing.py)\n\n01:38.404\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py (09_multi_layer_quad_mesh_pcb.py)\n\n01:08.914\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py (06_blade_morph.py)\n\n01:06.645\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py (05_pcb_stacker.py)\n\n00:30.783\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py (07_saddle_bracket.py)\n\n00:24.739\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py (01_bracket_scaffold.py)\n\n00:23.089\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py (00_lucid_file_IO.py)\n\n00:22.888\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py (02_lucid_mixing_elbow.py)\n\n00:20.037\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_12_import_from_pygeometry.py (12_import_from_pygeometry.py)\n\n00:00.000\n\n0.0"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRITESIZEFIELDFAILED.html#writesizefieldfailed","title":"WRITESIZEFIELDFAILED","text":"WRITESIZEFIELDFAILED\n\n\n\nErrorCode.WRITESIZEFIELDFAILED = 532\n\nWriting size field failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectNonCircularHolesParams.merge_edge_allow_self_close.html#merge_edge_allow_self_close","title":"merge_edge_allow_self_close","text":"merge_edge_allow_self_close\n\n\n\nproperty DetectNonCircularHolesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nMaterialPointType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneMeshResult.html#zonemeshresult","title":"ZoneMeshResult","text":"ZoneMeshResult\n\n\n\nclass ansys.meshing.prime.ZoneMeshResult(model=None, zone_name=None, element_ids=None, centroids=None, json_data=None, **kwargs)\n\nResults containing zone-wise mesh information.\n\nContains zone name, element ids and their corresponding data (such as centroid coordinates)\nfor elements within a zone.\n\nParameters\n\nmodel: Model\n\nModel to create a ZoneMeshResult object with default parameters.\n\nzone_name: str, optional\n\nName of the zone where the elements belong to.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nelement_ids: Iterable[int], optional\n\nList of element ids in the zone.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncentroids: Iterable[float], optional\n\nFlattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…].\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ZoneMeshResult object with provided parameters.\n\nExamples\n\n>>> zone_mesh_result = prime.ZoneMeshResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nErrorCode.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDECURVATURESIZINGPARAMS.html#overridecurvaturesizingparams","title":"OVERRIDECURVATURESIZINGPARAMS","text":"OVERRIDECURVATURESIZINGPARAMS\n\n\n\nWarningCode.OVERRIDECURVATURESIZINGPARAMS = 201\n\nOverriding curvature sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CELLSEPARATIONFAILED.html#cellseparationfailed","title":"CELLSEPARATIONFAILED","text":"CELLSEPARATIONFAILED\n\n\n\nErrorCode.CELLSEPARATIONFAILED = 6000\n\nCell separation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesParams.suggested_zone_name.html#suggested_zone_name","title":"suggested_zone_name","text":"suggested_zone_name\n\n\n\nproperty ExtractVolumesParams.suggested_zone_name: str\n\nName suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.as_polydata.html#as_polydata","title":"as_polydata","text":"as_polydata\n\n\n\nModel.as_polydata(update=False)\n\nGet the model as a polydata.\n\nParameters\n\nupdate\n\nbool, optional\n\nUpdate the polydata if it is already present, by default False.\n\nReturns\n\n:\n\n\n\nvtk.vtkPolyData\n\nPolydata of the model.\n\nExamples\n\n>>> polydata = model.as_polydata()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesResults.html#mergeboundarynodesresults","title":"MergeBoundaryNodesResults","text":"MergeBoundaryNodesResults\n\n\n\nclass ansys.meshing.prime.MergeBoundaryNodesResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with the merge nodes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a MergeBoundaryNodesResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError Code associated with failure of merge nodes operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a MergeBoundaryNodesResults object with provided parameters.\n\nExamples\n\n>>> merge_boundary_nodes_results = prime.MergeBoundaryNodesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_hard_sizing_params.html#set_hard_sizing_params","title":"set_hard_sizing_params","text":"set_hard_sizing_params\n\n\n\nSizeControl.set_hard_sizing_params(params)\n\nSet the hard sizing parameters to compute volumetric size field.\n\nParameters\n\nparams\n\nHardSizingParams\n\nParameters that enables you to set uniform size based on the specified size.\n\nReturns\n\n:\n\n\n\nSetSizingResults\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_hard_sizing_params(\n>>>                  prime.HardSizingParams(model=model,\n>>>                  min = 0.1, growth_rate = 1.2))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.NamePatternParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic NamePatternParams.set_default()\n\nSet the default values of the NamePatternParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MultiZoneSizingParams.set_default(max_size=None, min_size=None, growth_rate=None, use_volumetric_size_field=None)\n\nSet the default values of the MultiZoneSizingParams object.\n\nParameters\n\nmax_size: float, optional\n\nDefines global maximum mesh size.\n\nmin_size: float, optional\n\nDefines global minimum mesh size.\n\ngrowth_rate: float, optional\n\nDefines growth rate.\n\nuse_volumetric_size_field: bool, optional\n\nDefines whether to use size field for MultiZone meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TransformParams.html#transformparams","title":"TransformParams","text":"TransformParams\n\n\n\nclass ansys.meshing.prime.TransformParams(model=None, transformation_matrix=None, json_data=None, **kwargs)\n\nParameters to transform given entities.\n\nParameters\n\nmodel: Model\n\nModel to create a TransformParams object with default parameters.\n\ntransformation_matrix: Iterable[float], optional\n\nTransformation matrix(4x4) to be used to transform.\n\njson_data: dict, optional\n\nJSON dictionary to create a TransformParams object with provided parameters.\n\nExamples\n\n>>> transform_params = prime.TransformParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.thin_volume_control_ids.html#thin_volume_control_ids","title":"thin_volume_control_ids","text":"thin_volume_control_ids\n\n\n\nproperty AutoMeshParams.thin_volume_control_ids: Iterable[int]\n\nSet thin volume control ids."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneMapMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MultiZoneMapMeshParams.print_default()\n\nPrint the default values of MultiZoneMapMeshParams object.\n\nExamples\n\n>>> MultiZoneMapMeshParams.print_default()"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#mesh-a-pipe-t-section-for-structural-thermal-and-fluid-flow-analysis","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis","text":"Mesh a pipe T-section for structural thermal and fluid flow analysis\n\nSummary: This example demonstrates how to mesh a pipe T-section for both\nstructural thermal and fluid flow simulation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#objective","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Objective","text":"Objective\n\nThis example meshes the solids of a pipe T-section for a\nstructural thermal analysis using tetrahedral elements and uses the\nwrapper to extract the fluid domain and mesh using polyhedral cells with\nprismatic boundary layers."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#procedure","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance and connect the PyPrimeMesh client.\n\nRead the CAD geometry.\n\nMesh for the structural thermal analysis.\n\nWrite the mesh for the structural thermal analysis.\n\nExtract the fluid by wrapping.\n\nMesh with polyhedral and prisms.\n\nWrite the mesh for the fluid simulation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#launch-ansys-prime-server","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch the Ansys Prime Server instance and connect the client.\nGet the client model and instantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#read-cad-geometry","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Read CAD geometry","text":"Read CAD geometry\n\nDownload the example FMD geometry file.\nThe FMD  file format is exported from SpaceClaim and is compatible with Linux.\nRead and display the geometry file.\nThe file contains several unmeshed parts, which is what you would get after you\nimport from a CAD file.\nFor Windows OS users, the SCDOC format is also available:\npipe_tee = prime.examples.download_pipe_tee_scdoc()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#mesh-for-structural","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Mesh for structural","text":"Mesh for structural\n\nSurface mesh using curvature sizing.\nVolume mesh with tetrahedral elements.\nDelete unwanted capping surface geometries by deleting\nparts that do not have any volume zones.\nDisplay structural thermal mesh ready for export.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#write-structural-mesh","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Write structural mesh","text":"Write structural mesh\n\nLabels are exported to the CDB file as components for\napplying load boundary conditions in the solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#extract-fluid-by-wrapping","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Extract fluid by wrapping","text":"Extract fluid by wrapping\n\nYou can deal with the small internal diameter change between flanges in several ways:\n\nConnect the geometry to extract a volume and refine the\nmesh around this detail to capture.\n\nModify the geometry to remove the feature.\n\nWrap to extract the internal flow volume and walk over the feature.\n\nThis example wraps and walks over these features.\n\nRead in the geometry again.\n\nUse a constant size wrap to walk over the diameter change\nfeature and extract the largest internal volume as the fluid.\n\nBy default, the wrap uses all parts as input and deletes the input\ngeometry after wrapping unless keep_input is set as True.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#volume-mesh-fluid","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Volume mesh fluid","text":"Volume mesh fluid\n\nCreate zones for each label to use for boundary condition definitions.\nVolume mesh with prism polyhedral, not growing prisms from inlets and outlets.\nVisualize the generated volume mesh.\nWhen displaying, you can avoid displaying unnecessary edge zones.\nYou can clearly see the prism layers that were specified by the Prism control.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#write-fluid-mesh","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Write fluid mesh","text":"Write fluid mesh\n\nWrite a MSH file for the Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#exit-pyprimemesh","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (2 minutes 28.691 seconds)\n\n\n\nDownload Jupyter notebook: 03_lucid_pipe_tee.ipynb\n\nDownload Python source code: 03_lucid_pipe_tee.py\n\nDownload zipped: 03_lucid_pipe_tee.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetParamsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SetParamsResults.error_code: ErrorCode\n\nError code associated with the set parameters operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_curvature_sizing_params.html#get_curvature_sizing_params","title":"get_curvature_sizing_params","text":"get_curvature_sizing_params\n\n\n\nSizeControl.get_curvature_sizing_params()\n\nGet the curvature sizing parameters of size control.\n\nReturns\n\n:\n\n\n\nCurvatureSizingParams\n\nReturn the CurvatureSizingParams.\n\nReturn type\n\nCurvatureSizingParams\n\nExamples\n\n>>> params = size_control.get_curvature_sizing_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.ASPECTRATIO.html#aspectratio","title":"ASPECTRATIO","text":"ASPECTRATIO\n\n\n\nFaceQualityMeasure.ASPECTRATIO = 5\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.degree_v.html#degree_v","title":"degree_v","text":"degree_v\n\n\n\nproperty BoundaryFittedSplineParams.degree_v: int\n\nDegree of spline in v direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.FREETOFREE.html#freetofree","title":"FREETOFREE","text":"FREETOFREE\n\n\n\nEdgeConnectType.FREETOFREE = 3\n\nPerform connections between free edges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchMorphParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MatchMorphParams.set_default()\n\nSet the default values of the MatchMorphParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryParams.html#partsummaryparams","title":"PartSummaryParams","text":"PartSummaryParams\n\n\n\nclass ansys.meshing.prime.PartSummaryParams(model=None, print_id=None, print_mesh=None, json_data=None, **kwargs)\n\nParameters to control part summary results.\n\nParameters\n\nmodel: Model\n\nModel to create a PartSummaryParams object with default parameters.\n\nprint_id: bool, optional\n\nBoolean to control print ids. The default is false.\n\nprint_mesh: bool, optional\n\nBoolean to control print mesh information. The default is true.\n\njson_data: dict, optional\n\nJSON dictionary to create a PartSummaryParams object with provided parameters.\n\nExamples\n\n>>> part_summary_params = prime.PartSummaryParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryParams.html#examples-using-partsummaryparams","title":"PartSummaryParams > Examples using PartSummaryParams","text":"Examples using PartSummaryParams\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileReadParams.html#filereadparams","title":"FileReadParams","text":"FileReadParams\n\n\n\nclass ansys.meshing.prime.FileReadParams(model=None, append=None, json_data=None, **kwargs)\n\nParameters to read file.\n\nParameters\n\nmodel: Model\n\nModel to create a FileReadParams object with default parameters.\n\nappend: bool, optional\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\njson_data: dict, optional\n\nJSON dictionary to create a FileReadParams object with provided parameters.\n\nExamples\n\n>>> file_read_params = prime.FileReadParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ProjectOnGeometryResults.set_default(success=None, error_code=None, warning_codes=None)\n\nSet the default values of the ProjectOnGeometryResults object.\n\nParameters\n\nsuccess: bool, optional\n\nDefines the operation was successful or not.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning code associated with operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nFlowDirection.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSeparateBlocksFormatType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_volume_control_by_name.html#get_volume_control_by_name","title":"get_volume_control_by_name","text":"get_volume_control_by_name\n\n\n\nControlData.get_volume_control_by_name(name)\n\nGet a volume control by name.\n\nParameters\n\nname\n\npython:str\n\nName of the volume control.\n\nReturns\n\n:\n\n\n\nVolumeControl\n\nVolume control.\n\nReturn type\n\nVolumeControl\n\nExamples\n\n>>> volume_control = model.control_data.get_volume_control_by_name(\"VolumeControl-1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDSIZECONTROLINPUTS.html#invalidsizecontrolinputs","title":"INVALIDSIZECONTROLINPUTS","text":"INVALIDSIZECONTROLINPUTS\n\n\n\nErrorCode.INVALIDSIZECONTROLINPUTS = 1501\n\nInvalid size control input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.html#joinseparatemethod","title":"JoinSeparateMethod","text":"JoinSeparateMethod\n\n\n\nclass ansys.meshing.prime.JoinSeparateMethod(*values)\n\nJoin separation method to handle separated overlapped zonelets.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_turbine_blade_cdb.html#download_turbine_blade_cdb","title":"download_turbine_blade_cdb","text":"download_turbine_blade_cdb\n\n\n\nansys.meshing.prime.examples.download_turbine_blade_cdb(destination=None, force=False)\n\nDownload the CDB file for the turbine blade example.\n\nReturn type\n\nUnion[str, PathLike]\n\ndestination\n\nstr, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     turbine_blade_mesh = prime_examples.download_turbine_blade_cdb()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_mapdl_cdb(\n>>>             turbine_blade_mesh,\n>>>             params=prime.ImportMapdlCdbParams(model),\n>>>         )\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_turbine_blade_cdb.html#examples-using-download_turbine_blade_cdb","title":"download_turbine_blade_cdb > Examples using download_turbine_blade_cdb","text":"Examples using download_turbine_blade_cdb\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PartSummaryResults.print_default()\n\nPrint the default values of PartSummaryResults object.\n\nExamples\n\n>>> PartSummaryResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteTopoEntitiesParams.set_default(delete_geom_zonelets=None, delete_mesh_zonelets=None)\n\nSet the default values of the DeleteTopoEntitiesParams object.\n\nParameters\n\ndelete_geom_zonelets: bool, optional\n\nOption to delete geometry zonelets of topology.\n\ndelete_mesh_zonelets: bool, optional\n\nOption to delete mesh zonelets of topology."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MESHNOTFOUNDTOEXPORTFLUENTMESHINGMESH.html#meshnotfoundtoexportfluentmeshingmesh","title":"MESHNOTFOUNDTOEXPORTFLUENTMESHINGMESH","text":"MESHNOTFOUNDTOEXPORTFLUENTMESHINGMESH\n\n\n\nErrorCode.MESHNOTFOUNDTOEXPORTFLUENTMESHINGMESH = 533\n\nMesh not found to export fluent meshing mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nBOIType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nMatchPairTargetType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LabelExportParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic LabelExportParams.print_default()\n\nPrint the default values of LabelExportParams object.\n\nExamples\n\n>>> LabelExportParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATEBOI_IVALIDWRAPMESHSIZE.html#createboi_ivalidwrapmeshsize","title":"CREATEBOI_IVALIDWRAPMESHSIZE","text":"CREATEBOI_IVALIDWRAPMESHSIZE\n\n\n\nErrorCode.CREATEBOI_IVALIDWRAPMESHSIZE = 384\n\nBOI creation failed. Wrap cannot be performed with invalid mesh size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.projection_scope.html#projection_scope","title":"projection_scope","text":"projection_scope\n\n\n\nproperty HexToSplineParams.projection_scope: ScopeDefinition\n\nScope to evaluate entities for projection.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoiSizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SoiSizingParams.set_default(centers=None, radius=None, max=None, growth_rate=None)\n\nSet the default values of the SoiSizingParams object.\n\nParameters\n\ncenters: Iterable[float], optional\n\nCenters of the spheres within which the size is limited to the specified max value.\n\nradius: float, optional\n\nRadius of the sphere within which the size is limited to the specified max value.\n\nmax: float, optional\n\nMaximum size within the sphere.\n\ngrowth_rate: float, optional\n\nThe rate at which size grows outwards from the sphere boundary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectCircularHolesParams.allow_curved_topo_faces.html#allow_curved_topo_faces","title":"allow_curved_topo_faces","text":"allow_curved_topo_faces\n\n\n\nproperty DetectCircularHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectNonCircularHolesParams.html#detectnoncircularholesparams","title":"DetectNonCircularHolesParams","text":"DetectNonCircularHolesParams\n\n\n\nclass ansys.meshing.prime.DetectNonCircularHolesParams(model=None, allow_curved_topo_faces=None, max_hole_length=None, min_hole_length=None, merge_edge_allow_self_close=None, json_data=None, **kwargs)\n\nParameters for detect non circular holes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DetectNonCircularHolesParams object with default parameters.\n\nallow_curved_topo_faces: bool, optional\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmax_hole_length: float, optional\n\nMaximum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmin_hole_length: float, optional\n\nMinimum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DetectNonCircularHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_non_circular_holes_params = prime.DetectNonCircularHolesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.merge_parts.html#merge_parts","title":"merge_parts","text":"merge_parts\n\n\n\nMesh.merge_parts(parts_expression='*', new_name='merged_part')\n\nMerge multiple parts into a single part.\n\nParameters\n\nparts_expression\n\npython:str, optional\n\nExpression of the parts to merge. The default is \"*\".\n\nnew_name\n\npython:str, optional\n\nName of the new part that is created from the merged parts.\nThe default is \"merged_part\"."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.first_aspect_ratio.html#first_aspect_ratio","title":"first_aspect_ratio","text":"first_aspect_ratio\n\n\n\nproperty PrismControlGrowthParams.first_aspect_ratio: float\n\nAspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nLSDynaAnalysisType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.html#errorcode","title":"ErrorCode","text":"ErrorCode\n\n\n\nclass ansys.meshing.prime.ErrorCode(*values)\n\nError codes associated with the failure of PyPrimeMesh operation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Transform.html#transform","title":"Transform","text":"Transform\n\n\n\nclass ansys.meshing.prime.Transform(model)\n\nProvides functionalities to initialize and manage transformation using transformation matrix.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create Transform object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nContactPatchAxis.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"user_guide/graphics.html#interactive-graphics-using-pyvista","title":"Interactive graphics using PyVista","text":"Interactive graphics using PyVista\n\nPyPrimeMesh provides support for interactive graphical visualisation using PyVista\nif this package is installed as a dependency.\n\nThis code shows how to display the model using the Graphics class:\n\nUsing the ScopeDefinition class allows\nyou to limit the display to particular regions of the model:\n\nSelections can be made of displayed objects. If selections in the window are made,\ninformation about them can be printed to the console. Selections can also be hidden.\n\nThese graphics buttons are provided to help navigate the model and to\ncarry out basic verifications:"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod IntersectionMask.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseParams.feature_type.html#feature_type","title":"feature_type","text":"feature_type\n\n\n\nproperty CollapseParams.feature_type: SurfaceFeatureType\n\nFeature type to be preserved when performing collapse."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CdbSimulationType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nStitchType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportBoundaryFittedSplineParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportBoundaryFittedSplineParams.set_default(id_offset=None, id_start=None)\n\nSet the default values of the ExportBoundaryFittedSplineParams object.\n\nParameters\n\nid_offset: int, optional\n\nOffset value for IGA entity ids between parts.\n\nid_start: int, optional\n\nStart ids for IGA entities."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_saddle_bracket_fmd.html#download_saddle_bracket_fmd","title":"download_saddle_bracket_fmd","text":"download_saddle_bracket_fmd\n\n\n\nansys.meshing.prime.examples.download_saddle_bracket_fmd(destination=None, force=False)\n\nDownload FMD file for the saddle bracket example\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_saddle_bracket_fmd.html#examples-using-download_saddle_bracket_fmd","title":"download_saddle_bracket_fmd > Examples using download_saddle_bracket_fmd","text":"Examples using download_saddle_bracket_fmd\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.imag.html#imag","title":"imag","text":"imag\n\n\n\nMaterialPointType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty SurferParams.growth_rate: float\n\nGrowth rate to be used to propagate sizes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatFeaturesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DetectAndTreatFeaturesParams.print_default()\n\nPrint the default values of DetectAndTreatFeaturesParams object.\n\nExamples\n\n>>> DetectAndTreatFeaturesParams.print_default()"},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#create-a-contact-patch-for-wrapping-between-a-wheel-and-ground-interface","title":"Create a contact patch for wrapping between a wheel and ground interface","text":"Create a contact patch for wrapping between a wheel and ground interface\n\nSummary: This example demonstrates how to create a contact patch for use with wrapping\nto avoid meshing into a narrow contact region between two objects."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#objective","title":"Create a contact patch for wrapping between a wheel and ground interface > Objective","text":"Objective\n\nThis example uses a contact patch for wrapping to avoid the interface of a wheel with the ground\nto improve mesh quality when growing prism layers in the region of the contacting faces.\n\nThe preceding image shows the following:\n\nTop left: Wheel/ground interface\n\nTop right: Addition of contact patch\n\nLower left: Grouping tolerance at 4 with multiple contact patches\n\nLower right: Grouping tolerance at 20 with merged single contact patch"},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#procedure","title":"Create a contact patch for wrapping between a wheel and ground interface > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance and instantiate the meshing utilities\nfrom the lucid class.\n\nImport the wheel ground geometry.\n\nConvert the topo parts to mesh parts so that the contact patch can be created.\n\nCreate a contact patch between the wheel and the ground.\n\nExtract the fluid region using wrapping.\n\nVolume mesh with polyhedral and prism cells.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#launch-ansys-prime-server","title":"Create a contact patch for wrapping between a wheel and ground interface > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules and launch an instance of Ansys Prime Server.\nFrom the PyPrimeMesh client, get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#import-cad-geometry","title":"Create a contact patch for wrapping between a wheel and ground interface > Import CAD geometry","text":"Import CAD geometry\n\nDownload the wheel ground geometry (FMD) file exported by SpaceClaim.\nImport the CAD geometry. The geometry consists of two topo parts: a wheel and an enclosing box.\nLabels are defined for the ground topo face on the enclosure and for the wheel\nas all the topo faces of the wheel part."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#convert-topo-parts-to-mesh-parts","title":"Create a contact patch for wrapping between a wheel and ground interface > Convert topo parts to mesh parts","text":"Convert topo parts to mesh parts\n\nConvert the faceted geometry of the topology to mesh for all parts as the contact patch\nrequires face zonelets from mesh parts as input."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#create-a-contact-patch","title":"Create a contact patch for wrapping between a wheel and ground interface > Create a contact patch","text":"Create a contact patch\n\nTo create a contact patch, a direction is needed to define the resulting shape of the patch.\nA new part is created containing the patch.\nA prefix can be specified for the label created for the contact patch face zonelets generated.\nThe offset distance determines the thickness and extent of the patch.  The source face zonelet is\noffset to intersect the planar target face and the intersection used to define the contact patch.\nDue to the depth of the treads on the wheel, 20.0 is used as the offset to reach the tire surface.\nIf multiple contact regions are found, they can be merged by grouping them using the grouping\ntolerance distance.  With a grouping tolerance of 4.0, separate contact regions are created for\nsome of the treads of the tire, see the image at the top of the example. To merge these contact\nregions into a single patch, the grouping tolerance distance is increased to 20.0, avoiding small\ngaps between contact regions."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#wrap-the-fluid-region","title":"Create a contact patch for wrapping between a wheel and ground interface > Wrap the fluid region","text":"Wrap the fluid region\n\nThe largest internal region in this instance is the fluid region around the wheel.\nIntersection loops are created to capture the features at the corners between the\npatch, ground, and wheel."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#open-a-pyvistaqt-window","title":"Create a contact patch for wrapping between a wheel and ground interface > Open a pyvistaqt window","text":"Open a pyvistaqt window"},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#volume-mesh","title":"Create a contact patch for wrapping between a wheel and ground interface > Volume mesh","text":"Volume mesh\n\nApply five layers of prisms to the wheel, patch, and ground. Mesh with polyhedrals.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#write-model","title":"Create a contact patch for wrapping between a wheel and ground interface > Write model","text":"Write model\n\nWrite a CAS file for use in the Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#exit-the-pyprimemesh-session","title":"Create a contact patch for wrapping between a wheel and ground interface > Exit the PyPrimeMesh session","text":"Exit the PyPrimeMesh session\n\nTotal running time of the script: (2 minutes 31.499 seconds)\n\n\n\nDownload Jupyter notebook: 10_wheel_ground_contact_patch.ipynb\n\nDownload Python source code: 10_wheel_ground_contact_patch.py\n\nDownload zipped: 10_wheel_ground_contact_patch.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectParams.remesh.html#remesh","title":"remesh","text":"remesh\n\n\n\nproperty IntersectParams.remesh: bool\n\nLocal remesh at the intersection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MULTIZONEMESHER_USERINPUTTOPOLOGYMISSING.html#multizonemesher_userinputtopologymissing","title":"MULTIZONEMESHER_USERINPUTTOPOLOGYMISSING","text":"MULTIZONEMESHER_USERINPUTTOPOLOGYMISSING\n\n\n\nErrorCode.MULTIZONEMESHER_USERINPUTTOPOLOGYMISSING = 2610\n\nInput does not have topology for MultiZone mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.n_layers.html#n_layers","title":"n_layers","text":"n_layers\n\n\n\nproperty FuseParams.n_layers: int\n\nFace layers around region to be fused. The default value is 2.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_poly_faces.html#n_poly_faces","title":"n_poly_faces","text":"n_poly_faces\n\n\n\nproperty PartSummaryResults.n_poly_faces: int\n\nNumber of polygonal faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nFuseOption.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.suppress_shared_edges_when_merging.html#suppress_shared_edges_when_merging","title":"suppress_shared_edges_when_merging","text":"suppress_shared_edges_when_merging\n\n\n\nproperty RepairTopologyParams.suppress_shared_edges_when_merging: bool\n\nOption for suppressing shared edges when merging.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryResults.quality_results_part.html#quality_results_part","title":"quality_results_part","text":"quality_results_part\n\n\n\nproperty VolumeQualitySummaryResults.quality_results_part: List[VolumeQualityResultsPart]\n\nContains volume quality result per cell quality measure by parts specified in parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ImportCadResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.label_expression.html#label_expression","title":"label_expression","text":"label_expression\n\n\n\nproperty ScopeDefinition.label_expression: str\n\nLabel expression to scope entities when evaluation type is set to labels."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.real.html#real","title":"real","text":"real\n\n\n\nPrismControlOffsetType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.html#primeplotter","title":"PrimePlotter","text":"PrimePlotter\n\n\n\nclass ansys.meshing.prime.graphics.PrimePlotter(use_trame=None, allow_picking=True)\n\nCreate a plotter for PyPrimeMesh models.\n\nThis plotter is a wrapper around the PyAnsys generic plotter\nwith additional functionality for PyPrimeMesh.\n\nParameters\n\nuse_trame\n\nOptional[bool], default: python:None\n\nWhether to use the Trame visualizer.\n\nallow_picking\n\nOptional[bool], default: True.\n\nWhether to allow picking.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.html#examples-using-primeplotter","title":"PrimePlotter > Examples using PrimePlotter","text":"Examples using PrimePlotter\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.ABSOLUTE.html#absolute","title":"ABSOLUTE","text":"ABSOLUTE\n\n\n\nCadRefacetingMaxEdgeSizeLimit.ABSOLUTE = 1\n\nDenotes absolute maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractedFeatureIds.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExtractedFeatureIds.print_default()\n\nPrint the default values of ExtractedFeatureIds object.\n\nExamples\n\n>>> ExtractedFeatureIds.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.replace.html#replace","title":"replace","text":"replace\n\n\n\nproperty ExtractFeatureParams.replace: bool\n\nOption to replace existing edge zonelets with new extracted edge zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.OFFSETSURFACE.html#offsetsurface","title":"OFFSETSURFACE","text":"OFFSETSURFACE\n\n\n\nBOIType.OFFSETSURFACE = 2\n\nSurface BOI type for BOI creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCadReaderRoute.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.VT_REMESHFACEFAILED.html#vt_remeshfacefailed","title":"VT_REMESHFACEFAILED","text":"VT_REMESHFACEFAILED\n\n\n\nWarningCode.VT_REMESHFACEFAILED = 100007\n\nFailed to remesh face(s) during VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nLabelToZoneMethod.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureRecoveryParams.html#featurerecoveryparams","title":"FeatureRecoveryParams","text":"FeatureRecoveryParams\n\n\n\nclass ansys.meshing.prime.FeatureRecoveryParams(model=None, scope=None, enable_feature_octree_refinement=None, size_at_features=None, json_data=None, **kwargs)\n\nFeatureRecoveryParams defines feature recovery control parameters for wrapper.\n\nParameters\n\nmodel: Model\n\nModel to create a FeatureRecoveryParams object with default parameters.\n\nscope: ScopeDefinition, optional\n\nScope used for feature recovery control.\n\nenable_feature_octree_refinement: bool, optional\n\nChecks whether to perform octree refinement at feature edges.\n\nsize_at_features: float, optional\n\nRefinement size at features.\n\njson_data: dict, optional\n\nJSON dictionary to create a FeatureRecoveryParams object with provided parameters.\n\nExamples\n\n>>> feature_recovery_params = prime.FeatureRecoveryParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.compute_closed_volumes.html#compute_closed_volumes","title":"compute_closed_volumes","text":"compute_closed_volumes\n\n\n\nPart.compute_closed_volumes(params)\n\nComputes volume by identifying closed volumes defined by face zonelets of the part.\n\nParameters\n\nparams\n\nComputeVolumesParams\n\nParameters to compute volumes.\n\nReturns\n\n:\n\n\n\nComputeVolumesResults\n\nReturns the ComputeVolumesResults.\n\nReturn type\n\nComputeVolumesResults\n\nExamples\n\n>>> params = prime.ComputeVolumesParams(model = model, create_zones_type = prime.CreateVolumeZonesType.PERVOLUME)\n>>> results = part.compute_closed_volumes(params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.INVERSEORTHOGONAL.html#inverseorthogonal","title":"INVERSEORTHOGONAL","text":"INVERSEORTHOGONAL\n\n\n\nCellQualityMeasure.INVERSEORTHOGONAL = 14\n\nThe inverse orthogonal metric ranges between 0 (best) and 1 (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeResults.size_field_id.html#size_field_id","title":"size_field_id","text":"size_field_id\n\n\n\nproperty VolumetricSizeFieldComputeResults.size_field_id: int\n\nId of the computed size field."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.html#partsummaryresults","title":"PartSummaryResults","text":"PartSummaryResults\n\n\n\nclass ansys.meshing.prime.PartSummaryResults(model=None, message=None, n_topo_edges=None, n_topo_faces=None, n_topo_volumes=None, n_edge_zonelets=None, n_face_zonelets=None, n_cell_zonelets=None, n_edge_zones=None, n_face_zones=None, n_volume_zones=None, n_labels=None, n_nodes=None, n_faces=None, n_cells=None, n_tri_faces=None, n_poly_faces=None, n_quad_faces=None, n_second_order_tri_faces=None, n_second_order_quad_faces=None, n_tet_cells=None, n_pyra_cells=None, n_prism_cells=None, n_poly_cells=None, n_hex_cells=None, n_second_order_tet_cells=None, n_second_order_pyra_cells=None, n_second_order_prism_cells=None, n_second_order_hex_cells=None, n_unmeshed_topo_faces=None, json_data=None, **kwargs)\n\nResults of part summary.\n\nParameters\n\nmodel: Model\n\nModel to create a PartSummaryResults object with default parameters.\n\nmessage: str, optional\n\nPart summary text.\n\nn_topo_edges: int, optional\n\nNumber of topoedges.\n\nn_topo_faces: int, optional\n\nNumber of topofaces.\n\nn_topo_volumes: int, optional\n\nNumber of topovolumes.\n\nn_edge_zonelets: int, optional\n\nNumber of edge zonelets.\n\nn_face_zonelets: int, optional\n\nNumber of face zonelets.\n\nn_cell_zonelets: int, optional\n\nNumber of cell zonelets.\n\nn_edge_zones: int, optional\n\nNumber of edge zones.\n\nn_face_zones: int, optional\n\nNumber of face zones.\n\nn_volume_zones: int, optional\n\nNumber of volume zones.\n\nn_labels: int, optional\n\nNumber of labels.\n\nn_nodes: int, optional\n\nNumber of nodes.\n\nn_faces: int, optional\n\nNumber of faces.\n\nn_cells: int, optional\n\nNumber of cells.\n\nn_tri_faces: int, optional\n\nNumber of triangular faces.\n\nn_poly_faces: int, optional\n\nNumber of polygonal faces.\n\nn_quad_faces: int, optional\n\nNumber of quadrilateral faces.\n\nn_second_order_tri_faces: int, optional\n\nNumber of second order triangular faces.\n\nn_second_order_quad_faces: int, optional\n\nNumber of second order quadrilateral faces.\n\nn_tet_cells: int, optional\n\nNumber of tetrahedral cells.\n\nn_pyra_cells: int, optional\n\nNumber of pyramid cells.\n\nn_prism_cells: int, optional\n\nNumber of prism cells.\n\nn_poly_cells: int, optional\n\nNumber of polyhedral cells.\n\nn_hex_cells: int, optional\n\nNumber of hexahedral cells.\n\nn_second_order_tet_cells: int, optional\n\nNumber of second order tetrahedral cells.\n\nn_second_order_pyra_cells: int, optional\n\nNumber of second order pyramid cells.\n\nn_second_order_prism_cells: int, optional\n\nNumber of second order prism cells.\n\nn_second_order_hex_cells: int, optional\n\nNumber of second order hexahedral cells.\n\nn_unmeshed_topo_faces: int, optional\n\nNumber of unmeshed topofaces.\n\njson_data: dict, optional\n\nJSON dictionary to create a PartSummaryResults object with provided parameters.\n\nExamples\n\n>>> part_summary_results = prime.PartSummaryResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.html#examples-using-partsummaryresults","title":"PartSummaryResults > Examples using PartSummaryResults","text":"Examples using PartSummaryResults\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityResults.face_connectivity_result_per_part.html#face_connectivity_result_per_part","title":"face_connectivity_result_per_part","text":"face_connectivity_result_per_part\n\n\n\nproperty FaceAndEdgeConnectivityResults.face_connectivity_result_per_part: List[FaceConnectivityResults]\n\nFace connectivity result per part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlSummaryParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PeriodicControlSummaryParams.print_default()\n\nPrint the default values of PeriodicControlSummaryParams object.\n\nExamples\n\n>>> PeriodicControlSummaryParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDSIZECONTROLSCOPE.html#invalidsizecontrolscope","title":"INVALIDSIZECONTROLSCOPE","text":"INVALIDSIZECONTROLSCOPE\n\n\n\nErrorCode.INVALIDSIZECONTROLSCOPE = 1502\n\nInvalid size control scope."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControlParams.cell_zonelet_type.html#cell_zonelet_type","title":"cell_zonelet_type","text":"cell_zonelet_type\n\n\n\nproperty VolumeControlParams.cell_zonelet_type: CellZoneletType\n\nCell zonelet type is used to define the type of the associated volume."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nIntersectionMask.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectCircularHolesParams.merge_edge_allow_self_close.html#merge_edge_allow_self_close","title":"merge_edge_allow_self_close","text":"merge_edge_allow_self_close\n\n\n\nproperty DetectCircularHolesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_unstructured_spline_surface.html#get_unstructured_spline_surface","title":"get_unstructured_spline_surface","text":"get_unstructured_spline_surface\n\n\n\nPart.get_unstructured_spline_surface()\n\nGets the unstructured surface spline for the part.\n\nReturns\n\n:\n\n\n\nIGAUnstructuredSplineSurf\n\nReturns the surface spline structure.\n\nReturn type\n\nIGAUnstructuredSplineSurf\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> spline = part.GetUnstructuredSplineSurface()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nPrismControlOffsetType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.P.html#p","title":"P","text":"P\n\n\n\nSplineRefinementType.P = 1\n\nP refinement of spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic AutoMeshParams.set_default(size_field_type=None, max_size=None, prism_control_ids=None, thin_volume_control_ids=None, multi_zone_control_ids=None, volume_fill_type=None, prism=None, tet=None, hexcore=None, volume_control_ids=None, periodic_control_ids=None)\n\nSet the default values of the AutoMeshParams object.\n\nParameters\n\nsize_field_type: SizeFieldType, optional\n\nType of sizing to be used to generate volume mesh.\n\nmax_size: float, optional\n\nMaximum cell size.\n\nprism_control_ids: Iterable[int], optional\n\nSet prism control ids.\n\nthin_volume_control_ids: Iterable[int], optional\n\nSet thin volume control ids.\n\nmulti_zone_control_ids: Iterable[int], optional\n\nSet MultiZone control ids.\n\nvolume_fill_type: VolumeFillType, optional\n\nOption to fill volume.\n\nprism: PrismParams, optional\n\nPrism control parameters.\n\ntet: TetParams, optional\n\nParameters to control tetrahedral mesh generation.\n\nhexcore: HexCoreParams, optional\n\nParameters to control hexahedral mesh generation.\n\nvolume_control_ids: Iterable[int], optional\n\nIds of the volume controls.\n\nperiodic_control_ids: Iterable[int], optional\n\nIds of the periodic controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.FEATUREORZONELETBOUNDARY.html#featureorzoneletboundary","title":"FEATUREORZONELETBOUNDARY","text":"FEATUREORZONELETBOUNDARY\n\n\n\nSurfaceFeatureType.FEATUREORZONELETBOUNDARY = 5\n\nFace edges at zonelet boundary or with normal angle more than threshold are considered as feature."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteUnwettedParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteUnwettedParams.set_default()\n\nSet the default values of the DeleteUnwettedParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSweeper.html#volumesweeper","title":"VolumeSweeper","text":"VolumeSweeper\n\n\n\nclass ansys.meshing.prime.VolumeSweeper(model)\n\nVolumeSweeper class provide functions to volume mesh a given set of topovolumes by sweeping or stacking a set of face and edge zonelets. Provide operations to generate volume mesh using stacker technology.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create VolumeSweeper object.\n\npart_id\n\npython:int\n\nId of the part.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSweeper.html#examples-using-volumesweeper","title":"VolumeSweeper > Examples using VolumeSweeper","text":"Examples using VolumeSweeper\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nFlowDirection.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneMeshResult.element_ids.html#element_ids","title":"element_ids","text":"element_ids\n\n\n\nproperty ZoneMeshResult.element_ids: Iterable[int]\n\nList of element ids in the zone.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VOLUMESEARCHPARTWITHMESHNOTFOUND.html#volumesearchpartwithmeshnotfound","title":"VOLUMESEARCHPARTWITHMESHNOTFOUND","text":"VOLUMESEARCHPARTWITHMESHNOTFOUND\n\n\n\nErrorCode.VOLUMESEARCHPARTWITHMESHNOTFOUND = 2850\n\nPart with mesh not found for volume quality check."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HardSizingParams.html#hardsizingparams","title":"HardSizingParams","text":"HardSizingParams\n\n\n\nclass ansys.meshing.prime.HardSizingParams(model=None, min=None, growth_rate=None, json_data=None, **kwargs)\n\nSize field computed using hard size control enables you to maintain a uniform size based on the size specified.\n\nThe hard sizing will override any other specified size.\n\nParameters\n\nmodel: Model\n\nModel to create a HardSizingParams object with default parameters.\n\nmin: float, optional\n\nMinimum size used for computing edge and face size using hard size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\njson_data: dict, optional\n\nJSON dictionary to create a HardSizingParams object with provided parameters.\n\nExamples\n\n>>> hard_sizing_params = prime.HardSizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripResults.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty SearchByThinStripResults.n_found: int\n\nNumber of face elements identified as thin strips."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.read_pmdat.html#read_pmdat","title":"read_pmdat","text":"read_pmdat\n\n\n\nFileIO.read_pmdat(file_name, file_read_params)\n\nRead a PyPrimeMesh data (PMDAT) file.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the data file on disk.\n\nfile_read_params\n\nFileReadParams\n\nParameters for reading the data file.\n\nReturns\n\n:\n\n\n\nFileReadResults\n\nResults from reading the data file.\n\nReturn type\n\nFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> file_read_params = prime.FileReadParams(model=model)\n>>> results = file_io.read_pmdat(\"/tmp/file.pmdat\", file_read_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSweepType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCellZoneletType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.real.html#real","title":"real","text":"real\n\n\n\nCadRefacetingResolution.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeParams.spike_angle.html#spike_angle","title":"spike_angle","text":"spike_angle\n\n\n\nproperty SearchBySpikeParams.spike_angle: float\n\nThreshold angle for spike detection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.max_size.html#max_size","title":"max_size","text":"max_size\n\n\n\nproperty LocalSurferParams.max_size: float\n\nMaximum size to be used in sizing for the surfer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneResults.html#fillholesatplaneresults","title":"FillHolesAtPlaneResults","text":"FillHolesAtPlaneResults\n\n\n\nclass ansys.meshing.prime.FillHolesAtPlaneResults(model=None, error_code=None, warning_codes=None, created_face_zonelets=None, assigned_zone_name=None, created_zone_id=None, json_data=None, **kwargs)\n\nResults associated with fill holes at given plane.\n\nParameters\n\nmodel: Model\n\nModel to create a FillHolesAtPlaneResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with operation.\n\ncreated_face_zonelets: Iterable[int], optional\n\nIds of face zonelets created to fill the holes.\n\nassigned_zone_name: str, optional\n\nName assigned to zone created. Suffix is added to suggested name if the name not available.\n\ncreated_zone_id: int, optional\n\nId assigned to zone created.\n\njson_data: dict, optional\n\nJSON dictionary to create a FillHolesAtPlaneResults object with provided parameters.\n\nExamples\n\n>>> fill_holes_at_plane_results = prime.FillHolesAtPlaneResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_suggested_name.html#set_suggested_name","title":"set_suggested_name","text":"set_suggested_name\n\n\n\nSizeControl.set_suggested_name(name)\n\nSet the unique name for the size control to a suggested name.\n\nParameters\n\nname\n\npython:str\n\nSuggested name for the size control.\n\nReturns\n\n:\n\n\n\nSetNameResults\n\nNewly suggested name for the size control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> size_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_suggested_name.html#examples-using-sizecontrolset_suggested_name","title":"set_suggested_name > Examples using SizeControl.set_suggested_name","text":"Examples using SizeControl.set_suggested_name\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Scaffolder.html#scaffolder","title":"Scaffolder","text":"Scaffolder\n\n\n\nclass ansys.meshing.prime.Scaffolder(model, part_id)\n\nScaffolder is used for achieving connections in structures made of sheets and beams. Solid bodies should be suppressed before applying scaffolding.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create Scaffolder object.\n\npart_id\n\npython:int\n\nId of the part.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Scaffolder.html#examples-using-scaffolder","title":"Scaffolder > Examples using Scaffolder","text":"Examples using Scaffolder\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty ProximitySizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nBodyQueryType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.fused_pairs.html#fused_pairs","title":"fused_pairs","text":"fused_pairs\n\n\n\nproperty FuseResults.fused_pairs: int\n\nNumber of face region pairs that were fused.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDGROWTHRATE.html#invalidgrowthrate","title":"INVALIDGROWTHRATE","text":"INVALIDGROWTHRATE\n\n\n\nErrorCode.INVALIDGROWTHRATE = 128\n\nInvalid growth rate."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetScopeResults.warning_code.html#warning_code","title":"warning_code","text":"warning_code\n\n\n\nproperty SetScopeResults.warning_code: WarningCode\n\nWarning code associated with the set scope."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty VolumeQualityResultsPart.n_found: int\n\nNumber of failed cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.restrict_boundary_nodes_along_surface.html#restrict_boundary_nodes_along_surface","title":"restrict_boundary_nodes_along_surface","text":"restrict_boundary_nodes_along_surface\n\n\n\nproperty AutoNodeMoveParams.restrict_boundary_nodes_along_surface: bool\n\nOption to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nFaceQualityMeasure.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.set_contact_preventions.html#set_contact_preventions","title":"set_contact_preventions","text":"set_contact_preventions\n\n\n\nWrapperControl.set_contact_preventions(params)\n\nSet contact preventions to the wrapper control.\n\nParameters\n\nparams\n\nContactPreventionParamsArray\n\nList of contact prevention parameters.\n\nReturns\n\n:\n\n\n\nSetContactPreventionsResults\n\nReturn the set contact prevention results.\n\nReturn type\n\nSetContactPreventionsResults\n\nExamples\n\n>>> set_cont_prev_results = wrapper_control.set_contact_preventions([params])"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.PROGRAMCONTROLLED.html#programcontrolled","title":"PROGRAMCONTROLLED","text":"PROGRAMCONTROLLED\n\n\n\nControlPointSelection.PROGRAMCONTROLLED = 1\n\nProgram controlled spline control point selection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nControlPointSelection.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNKNOWN.html#unknown","title":"UNKNOWN","text":"UNKNOWN\n\n\n\nErrorCode.UNKNOWN = 1\n\nUnknown error."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ExtractTopoVolumesResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_adjacent_face_zonelets_of_face_zonelets.html#get_adjacent_face_zonelets_of_face_zonelets","title":"get_adjacent_face_zonelets_of_face_zonelets","text":"get_adjacent_face_zonelets_of_face_zonelets\n\n\n\nPart.get_adjacent_face_zonelets_of_face_zonelets(face_zonelets)\n\nGets the adjacent facezonelets for the provided facezonelet ids.\n\nParameters\n\nface_zonelets\n\nIterable[python:int]\n\nIds of facezonelets.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of adjacent facezonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets_of_face_zonelet = part.get_adjacent_face_zonelets_of_face_zonelets(face_zonelets)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERFAILED.html#surferfailed","title":"SURFERFAILED","text":"SURFERFAILED\n\n\n\nErrorCode.SURFERFAILED = 3\n\nSurface meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.separate.html#separate","title":"separate","text":"separate\n\n\n\nproperty FuseParams.separate: bool\n\nOption to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod HexCoreTransitionLayerType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsParams.copy_labels.html#copy_labels","title":"copy_labels","text":"copy_labels\n\n\n\nproperty CopyZoneletsParams.copy_labels: bool\n\nOption to copy labels of input zonelets to the corresponding copied zonelets.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsResults.html#deletefringesandoverlapsresults","title":"DeleteFringesAndOverlapsResults","text":"DeleteFringesAndOverlapsResults\n\n\n\nclass ansys.meshing.prime.DeleteFringesAndOverlapsResults(model=None, error_code=None, n_deleted=None, json_data=None, **kwargs)\n\nResults associated with the delete fringes and overlapping faces operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteFringesAndOverlapsResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nn_deleted: int, optional\n\nNumber of face elements deleted.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteFringesAndOverlapsResults object with provided parameters.\n\nExamples\n\n>>> delete_fringes_and_overlaps_results = prime.DeleteFringesAndOverlapsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbResults.summary_log.html#summary_log","title":"summary_log","text":"summary_log\n\n\n\nproperty ExportMapdlCdbResults.summary_log: str\n\nSummary log for the export operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderMergeResults.html#scaffoldermergeresults","title":"ScaffolderMergeResults","text":"ScaffolderMergeResults\n\n\n\nclass ansys.meshing.prime.ScaffolderMergeResults(model=None, n_merged=None, error_code=None, json_data=None, **kwargs)\n\nResult structure associated with merge overlapping topofaces and delete shadowed topofaces operations.\n\nParameters\n\nmodel: Model\n\nModel to create a ScaffolderMergeResults object with default parameters.\n\nn_merged: int, optional\n\nNumber of merged topofaces.\n\nerror_code: ErrorCode, optional\n\nError code associated with merge overlapping topofaces operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a ScaffolderMergeResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_merge_results = prime.ScaffolderMergeResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.EXTERNALOPENFACEZONELETSFOUND.html#externalopenfacezoneletsfound","title":"EXTERNALOPENFACEZONELETSFOUND","text":"EXTERNALOPENFACEZONELETSFOUND\n\n\n\nWarningCode.EXTERNALOPENFACEZONELETSFOUND = 5601\n\nExternal open face zonelets found when computing volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCdbAnalysisType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SurfaceDiagnosticSummaryResults.print_default()\n\nPrint the default values of SurfaceDiagnosticSummaryResults object.\n\nExamples\n\n>>> SurfaceDiagnosticSummaryResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileWriteParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FileWriteParams.set_default()\n\nSet the default values of the FileWriteParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.html#partcreationtype","title":"PartCreationType","text":"PartCreationType\n\n\n\nclass ansys.meshing.prime.PartCreationType(*values)\n\nPart Creation Type decides whether to create a part per CAD Model, Assembly, Part, Body.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.html#examples-using-partcreationtype","title":"PartCreationType > Examples using PartCreationType","text":"Examples using PartCreationType\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairEdgesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic RepairEdgesParams.set_default(constant_mesh_size=None, absolute_tolerance=None)\n\nSet the default values of the RepairEdgesParams object.\n\nParameters\n\nconstant_mesh_size: float, optional\n\nConstant size used for surface meshing.\n\nabsolute_tolerance: float, optional\n\nAbsolute distance tolerance between nodes or edges for repair edges operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.imag.html#imag","title":"imag","text":"imag\n\n\n\nPartCreationType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic IGAResults.print_default()\n\nPrint the default values of IGAResults object.\n\nExamples\n\n>>> IGAResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCreateVolumeZonesType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.launch_server_process.html#launch_server_process","title":"launch_server_process","text":"launch_server_process\n\n\n\nansys.meshing.prime.launch_server_process(prime_root=None, ip='127.0.0.1', port=50055, n_procs=None, **kw)\n\nLaunch a server process for Ansys Prime Server.\n\nParameters\n\nprime_root\n\npython:str, optional\n\nRoot directory for Ansys Prime Server.\n\nip: str\n\nIP address to start the server at. The default is 127.0.0.1.\n\nport: int\n\nPort at which the server is started. The default is 50055.\n\nn_procs: Optional[int]\n\nWhen running in distributed mode, the number of distributed\nprocesses to spawn. The default is None, in which case\nthe server is launched as the only process (normal mode). The\nprocess marked as Node 0 hosts the gRPC server.\n\nReturns\n\n:\n\n\n\nsubprocess.Popen\n\nInstance of the subprocess that is launched.\n\nRaises\n\nFileNotFoundError\n\nWhen there is an error in the file paths used to launch the server.\n\nReturn type\n\nPopen"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.RELATIVE.html#relative","title":"RELATIVE","text":"RELATIVE\n\n\n\nCadRefacetingMaxEdgeSizeLimit.RELATIVE = 2\n\nDenotes relative maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nZoneType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.KEEPONE.html#keepone","title":"KEEPONE","text":"KEEPONE\n\n\n\nJoinSeparateMethod.KEEPONE = 1\n\nKeep one overlap zonelets after joining."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.imag.html#imag","title":"imag","text":"imag\n\n\n\nBOIType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.H.html#h","title":"H","text":"H\n\n\n\nSplineRefinementType.H = 0\n\nH refinement of spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CopyZoneletsResults.print_default()\n\nPrint the default values of CopyZoneletsResults object.\n\nExamples\n\n>>> CopyZoneletsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchByFoldsParams.print_default()\n\nPrint the default values of SearchByFoldsParams object.\n\nExamples\n\n>>> SearchByFoldsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryParams.quality_limit.html#quality_limit","title":"quality_limit","text":"quality_limit\n\n\n\nproperty SurfaceQualitySummaryParams.quality_limit: Iterable[float]\n\nQuality limit per face quality measure. If the quality limit is not specified, the default quality limit is used."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NUMENMETHODNOTFOUND.html#numenmethodnotfound","title":"NUMENMETHODNOTFOUND","text":"NUMENMETHODNOTFOUND\n\n\n\nErrorCode.NUMENMETHODNOTFOUND = 3801\n\nCould not find numen method."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPair.target_surfaces.html#target_surfaces","title":"target_surfaces","text":"target_surfaces\n\n\n\nproperty MatchPair.target_surfaces: Iterable[int]\n\nIds of target surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.write_thickness_file.html#write_thickness_file","title":"write_thickness_file","text":"write_thickness_file\n\n\n\nproperty ExportLSDynaKeywordFileParams.write_thickness_file: bool\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.REMESHFACEZONELETSLOCALLYNOTSUPPORTEDFORTOPOLOGYPART.html#remeshfacezoneletslocallynotsupportedfortopologypart","title":"REMESHFACEZONELETSLOCALLYNOTSUPPORTEDFORTOPOLOGYPART","text":"REMESHFACEZONELETSLOCALLYNOTSUPPORTEDFORTOPOLOGYPART\n\n\n\nErrorCode.REMESHFACEZONELETSLOCALLYNOTSUPPORTEDFORTOPOLOGYPART = 32\n\nRemesh face zonelets locally is not supported for topology part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nBCsVolumetricModality.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsResult.id.html#id","title":"id","text":"id\n\n\n\nproperty WrapperPatchFlowRegionsResult.id: int\n\nId of part created with hole patches.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.IMPLICIT.html#implicit","title":"IMPLICIT","text":"IMPLICIT\n\n\n\nCdbSimulationType.IMPLICIT = 0\n\nImplicit simulation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nBCsVolumetricModality.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetContactPreventionsResults.ids.html#ids","title":"ids","text":"ids\n\n\n\nproperty SetContactPreventionsResults.ids: Iterable[int]\n\nIds of added contact prevention controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Connect.fuse_face_zonelets.html#fuse_face_zonelets","title":"fuse_face_zonelets","text":"fuse_face_zonelets\n\n\n\nConnect.fuse_face_zonelets(part_id, source_face_zonelet_ids, target_face_zonelet_ids, params)\n\nPerform fuse between overlapping face zonelets within a single part. Surfaces that are fused can then be colocated, merged or removed as directed.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nsource_face_zonelet_ids\n\nIterable[python:int]\n\nIds of source face zonelets to be fused.\n\ntarget_face_zonelet_ids\n\nIterable[python:int]\n\nIds of target face zonelets to be fused.\n\nparams\n\nFuseParams\n\nParameters for fuse operation.\n\nReturns\n\n:\n\n\n\nFuseResults\n\nReturns the FuseResults.\n\nReturn type\n\nFuseResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\nconnect = Connect(model = model)\nconnect.fuse_face_zonelets(part.id, source_face_zonelet_ids, target_face_zonelet_ids, fuse_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureResults.html#extractfeatureresults","title":"ExtractFeatureResults","text":"ExtractFeatureResults\n\n\n\nclass ansys.meshing.prime.ExtractFeatureResults(model=None, processing_time=None, error_code=None, new_edge_zonelets=None, json_data=None, **kwargs)\n\nResult of edge zonelet extraction by angle.\n\nParameters\n\nmodel: Model\n\nModel to create a ExtractFeatureResults object with default parameters.\n\nprocessing_time: float, optional\n\nTime taken for edge extraction.\n\nerror_code: ErrorCode, optional\n\nError code returned by edge extraction function.\n\nnew_edge_zonelets: Iterable[int], optional\n\nIds of new edge zonelets extracted.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExtractFeatureResults object with provided parameters.\n\nExamples\n\n>>> extract_feature_results = prime.ExtractFeatureResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureResults.html#examples-using-extractfeatureresults","title":"ExtractFeatureResults > Examples using ExtractFeatureResults","text":"Examples using ExtractFeatureResults\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.REFRESHSIZEFIELDSFAILED.html#refreshsizefieldsfailed","title":"REFRESHSIZEFIELDSFAILED","text":"REFRESHSIZEFIELDSFAILED\n\n\n\nErrorCode.REFRESHSIZEFIELDSFAILED = 402\n\nRefreshing size field failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TriangulateResults.n_faces_triangulated.html#n_faces_triangulated","title":"n_faces_triangulated","text":"n_faces_triangulated\n\n\n\nproperty TriangulateResults.n_faces_triangulated: int\n\nNumber of faces that were triangulated.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.topo_face_ids.html#topo_face_ids","title":"topo_face_ids","text":"topo_face_ids\n\n\n\nproperty FaceConnectivityResults.topo_face_ids: Iterable[int]\n\nTopoFace ids corresponding to each face zonelet id for topology based mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSweepMeshParams.source_and_target_scope.html#source_and_target_scope","title":"source_and_target_scope","text":"source_and_target_scope\n\n\n\nproperty MultiZoneSweepMeshParams.source_and_target_scope: ScopeDefinition\n\nSource and target faces used to determine the direction of sweep in MultiZone meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactElementTypeParams.contact_pair_node_to_surf.html#contact_pair_node_to_surf","title":"contact_pair_node_to_surf","text":"contact_pair_node_to_surf\n\n\n\nproperty ContactElementTypeParams.contact_pair_node_to_surf: int\n\nElement type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nControlPointSelection.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCLOSEGAPS_INVALIDSCOPE.html#wrapperclosegaps_invalidscope","title":"WRAPPERCLOSEGAPS_INVALIDSCOPE","text":"WRAPPERCLOSEGAPS_INVALIDSCOPE\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDSCOPE = 3441\n\nScope specified for close gaps is invalid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERINVALIDMINORMAXSIZES.html#surferinvalidminormaxsizes","title":"SURFERINVALIDMINORMAXSIZES","text":"SURFERINVALIDMINORMAXSIZES\n\n\n\nErrorCode.SURFERINVALIDMINORMAXSIZES = 41\n\nInvalid min or max size for surface meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesParams.html#mergevolumesparams","title":"MergeVolumesParams","text":"MergeVolumesParams\n\n\n\nclass ansys.meshing.prime.MergeVolumesParams(model=None, merge_to_neighbor_volume=None, neighbor_volumes=None, json_data=None, **kwargs)\n\nParameters to merge volumes.\n\nParameters\n\nmodel: Model\n\nModel to create a MergeVolumesParams object with default parameters.\n\nmerge_to_neighbor_volume: bool, optional\n\nOption to merge given volumes to their neighbor volume.\n\nneighbor_volumes: Iterable[int], optional\n\nIds of volume that are neighbors to given volumes for merging.\n\njson_data: dict, optional\n\nJSON dictionary to create a MergeVolumesParams object with provided parameters.\n\nExamples\n\n>>> merge_volumes_params = prime.MergeVolumesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MULTIZONEMESHER_NOVOLUMESFORGEOMETRYTRANSFER.html#multizonemesher_novolumesforgeometrytransfer","title":"MULTIZONEMESHER_NOVOLUMESFORGEOMETRYTRANSFER","text":"MULTIZONEMESHER_NOVOLUMESFORGEOMETRYTRANSFER\n\n\n\nErrorCode.MULTIZONEMESHER_NOVOLUMESFORGEOMETRYTRANSFER = 2612\n\nNo volumes for geometry import."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByIntersectionResults.html#searchbyintersectionresults","title":"SearchByIntersectionResults","text":"SearchByIntersectionResults\n\n\n\nclass ansys.meshing.prime.SearchByIntersectionResults(model=None, n_found=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with search by face element intersection (face elements interfering with each other).\n\nParameters\n\nmodel: Model\n\nModel to create a SearchByIntersectionResults object with default parameters.\n\nn_found: int, optional\n\nNumber of face elements identified by intersection(face elements interfering with each other).\n\nerror_code: ErrorCode, optional\n\nError code associated with search intersection operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchByIntersectionResults object with provided parameters.\n\nExamples\n\n>>> search_by_intersection_results = prime.SearchByIntersectionResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteTopoEntitiesResults.set_default(error_code=None)\n\nSet the default values of the DeleteTopoEntitiesResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with delete topoentities."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.material_properties.html#material_properties","title":"material_properties","text":"material_properties\n\n\n\nproperty ExportMapdlCdbParams.material_properties: str\n\nMaterials in CDB format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MESHHASNONPOSITIVEVOLUMES.html#meshhasnonpositivevolumes","title":"MESHHASNONPOSITIVEVOLUMES","text":"MESHHASNONPOSITIVEVOLUMES\n\n\n\nWarningCode.MESHHASNONPOSITIVEVOLUMES = 7104\n\nMesh has non positive volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExtractFeatureResults.set_default(processing_time=None, error_code=None, new_edge_zonelets=None)\n\nSet the default values of the ExtractFeatureResults object.\n\nParameters\n\nprocessing_time: float, optional\n\nTime taken for edge extraction.\n\nerror_code: ErrorCode, optional\n\nError code returned by edge extraction function.\n\nnew_edge_zonelets: Iterable[int], optional\n\nIds of new edge zonelets extracted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.html#materialpointtype","title":"MaterialPointType","text":"MaterialPointType\n\n\n\nclass ansys.meshing.prime.MaterialPointType(*values)\n\nDefines define type of material point.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod AdvancedSurferSetup.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nLengthUnit.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteVolumesResults.set_default(deleted_volumes=None, error_code=None)\n\nSet the default values of the DeleteVolumesResults object.\n\nParameters\n\ndeleted_volumes: Iterable[int], optional\n\nIds of deleted volumes.\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume deletion operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CollapseParams.print_default()\n\nPrint the default values of CollapseParams object.\n\nExamples\n\n>>> CollapseParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ImportAbaqusResults.warning_codes: List[WarningCode]\n\nWarning codes associated with Abaqus import operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMaterialPointResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteMaterialPointResults.print_default()\n\nPrint the default values of DeleteMaterialPointResults object.\n\nExamples\n\n>>> DeleteMaterialPointResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IMPRINTBOUNDARYNODESFAILED.html#imprintboundarynodesfailed","title":"IMPRINTBOUNDARYNODESFAILED","text":"IMPRINTBOUNDARYNODESFAILED\n\n\n\nErrorCode.IMPRINTBOUNDARYNODESFAILED = 852\n\nImprint of boundary nodes failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic AddThicknessParams.set_default(thickness=None, reverse_face_normal=None, suggested_part_name=None, fix_intersections=None)\n\nSet the default values of the AddThicknessParams object.\n\nParameters\n\nthickness: float, optional\n\nTo assign the offset distance of inflation.\n\nreverse_face_normal: bool, optional\n\nTo assign the direction of inflation.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created patching surfaces.\n\nfix_intersections: bool, optional\n\nFix intersections in concave regions."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MeshStackerResults.set_default(error_code=None, error_codes_per_topo_volume=None, non_stackable_faces=None, non_stackable_edges=None, small_features=None, base_face_ids=None, size_control_ids=None)\n\nSet the default values of the MeshStackerResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the operation.\n\nerror_codes_per_topo_volume: Iterable[int], optional\n\nError codes associated with the topovolume-by-topovolume stacking.\n\nnon_stackable_faces: Iterable[int], optional\n\nList of non-stackable faces. Note: Under-resolved faceting can also create non-stackable geometry.\n\nnon_stackable_edges: Iterable[int], optional\n\nList of non-stackable edges. Note: Under-resolved faceting can also create non-stackable geometry.\n\nsmall_features: Iterable[int], optional\n\nList of features edges smaller than input tolerance.\n\nbase_face_ids: Iterable[int], optional\n\nList of base face ids after base creation.\n\nsize_control_ids: Iterable[int], optional\n\nList of ids of newly created size controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteZoneResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteZoneResults.print_default()\n\nPrint the default values of DeleteZoneResults object.\n\nExamples\n\n>>> DeleteZoneResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCadRefacetingResolution.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_volumes_of_face_zonelet.html#get_volumes_of_face_zonelet","title":"get_volumes_of_face_zonelet","text":"get_volumes_of_face_zonelet\n\n\n\nPart.get_volumes_of_face_zonelet(face_zonelet)\n\nGet volume ids of given face zonelet.\n\nParameters\n\nface_zonelet\n\npython:int\n\nId of face zonelet.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn volume ids of given face zonelet.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volumes = part.get_volumes_of_face_zonelet(face_zonelet)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapSearchResults.overlap_pairs.html#overlap_pairs","title":"overlap_pairs","text":"overlap_pairs\n\n\n\nproperty OverlapSearchResults.overlap_pairs: List[OverlapPairs]\n\nIds corresponding to pairs of overlapping face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ShellBLParams.print_default()\n\nPrint the default values of ShellBLParams object.\n\nExamples\n\n>>> ShellBLParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSweepType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.error_locations.html#error_locations","title":"error_locations","text":"error_locations\n\n\n\nproperty ComputeVolumesResults.error_locations: Iterable[float]\n\nCoordinates of problematic locations in the surface mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.POLYMESHFAILED.html#polymeshfailed","title":"POLYMESHFAILED","text":"POLYMESHFAILED\n\n\n\nErrorCode.POLYMESHFAILED = 140\n\nPoly meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.imag.html#imag","title":"imag","text":"imag\n\n\n\nCadRefacetingResolution.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlSummaryResult.html#periodiccontrolsummaryresult","title":"PeriodicControlSummaryResult","text":"PeriodicControlSummaryResult\n\n\n\nclass ansys.meshing.prime.PeriodicControlSummaryResult(model=None, message=None, json_data=None, **kwargs)\n\nResults of Periodic control summary.\n\nParameters\n\nmodel: Model\n\nModel to create a PeriodicControlSummaryResult object with default parameters.\n\nmessage: str, optional\n\nString with the periodic control summary.\n\njson_data: dict, optional\n\nJSON dictionary to create a PeriodicControlSummaryResult object with provided parameters.\n\nExamples\n\n>>> periodic_control_summary_result = prime.PeriodicControlSummaryResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CHECKPERIODICPAIRSFAILED.html#checkperiodicpairsfailed","title":"CHECKPERIODICPAIRSFAILED","text":"CHECKPERIODICPAIRSFAILED\n\n\n\nErrorCode.CHECKPERIODICPAIRSFAILED = 2911\n\nCould not find a matching periodic face pair."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteInteriorNodesParams.merge_edge_allow_self_close.html#merge_edge_allow_self_close","title":"merge_edge_allow_self_close","text":"merge_edge_allow_self_close\n\n\n\nproperty DeleteInteriorNodesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.id.html#id","title":"id","text":"id\n\n\n\nproperty ControlData.id\n\nGet the id of ControlData."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.VOLUME.html#volume","title":"VOLUME","text":"VOLUME\n\n\n\nZoneType.VOLUME = 3\n\nDenotes the zone is volume zone."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nFlowDirection.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.html#toposearchfield","title":"TopoSearchField","text":"TopoSearchField\n\n\n\nclass ansys.meshing.prime.TopoSearchField(*values)\n\nToposearch diagnostic field.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadResults.html#importcadresults","title":"ImportCadResults","text":"ImportCadResults\n\n\n\nclass ansys.meshing.prime.ImportCadResults(model=None, error_code=None, cad_parameters=None, json_data=None, **kwargs)\n\nResults associated with the CAD import.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportCadResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\ncad_parameters: Dict[str, Union[str, int, float, bool]], optional\n\nReturns the parameters associated with CAD. Available only with WorkBench CAD Reader route.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportCadResults object with provided parameters.\n\nExamples\n\n>>> import_cad_results = prime.ImportCadResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapPairs.zone_id1.html#zone_id1","title":"zone_id1","text":"zone_id1\n\n\n\nproperty OverlapPairs.zone_id1: int\n\nId of other overlapping face zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_NOLIVEMATERIALPOINTSPROVIDED.html#wrappercontrol_nolivematerialpointsprovided","title":"WRAPPERCONTROL_NOLIVEMATERIALPOINTSPROVIDED","text":"WRAPPERCONTROL_NOLIVEMATERIALPOINTSPROVIDED\n\n\n\nErrorCode.WRAPPERCONTROL_NOLIVEMATERIALPOINTSPROVIDED = 3408\n\nLive material points list provided for wrapper control is empty."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTSTLFAILEDWITHINCORRECTPARTID.html#exportstlfailedwithincorrectpartid","title":"EXPORTSTLFAILEDWITHINCORRECTPARTID","text":"EXPORTSTLFAILEDWITHINCORRECTPARTID\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHINCORRECTPARTID = 558\n\nExport STL failed. Part id is incorrect."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod FlowDirection.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod EdgeConnectType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.edge_mesh_constant_size.html#edge_mesh_constant_size","title":"edge_mesh_constant_size","text":"edge_mesh_constant_size\n\n\n\nproperty OptimizeQuadMeshParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.contact_patch_axis.html#contact_patch_axis","title":"contact_patch_axis","text":"contact_patch_axis\n\n\n\nproperty CreateContactPatchParams.contact_patch_axis: ContactPatchAxis\n\nAssigns the contact patch direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateBOIResults.print_default()\n\nPrint the default values of CreateBOIResults object.\n\nExamples\n\n>>> CreateBOIResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileReadResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty FileReadResults.error_code: ErrorCode\n\nError code if file read operation was unsuccessful."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nLengthUnit.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.html#boundaryfittedsplineparams","title":"BoundaryFittedSplineParams","text":"BoundaryFittedSplineParams\n\n\n\nclass ansys.meshing.prime.BoundaryFittedSplineParams(model=None, degree_u=None, degree_v=None, degree_w=None, refinement_fraction_u=None, refinement_fraction_v=None, refinement_fraction_w=None, control_points_count_u=None, control_points_count_v=None, control_points_count_w=None, n_refine=None, control_point_selection_type=None, json_data=None, **kwargs)\n\nBoundary fitted spline fitting parameters.\n\nParameters\n\nmodel: Model\n\nModel to create a BoundaryFittedSplineParams object with default parameters.\n\ndegree_u: int, optional\n\nDegree of spline in u direction.\n\ndegree_v: int, optional\n\nDegree of spline in v direction.\n\ndegree_w: int, optional\n\nDegree of spline in w direction.\n\nrefinement_fraction_u: float, optional\n\nFraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_v: float, optional\n\nFraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_w: float, optional\n\nFraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode.\n\ncontrol_points_count_u: int, optional\n\nSpline control points count in U direction. Used in manual control points selection mode.\n\ncontrol_points_count_v: int, optional\n\nSpline control points count in V direction. Used in manual control points selection mode.\n\ncontrol_points_count_w: int, optional\n\nSpline control points count in W direction. Used in manual control points selection mode.\n\nn_refine: int, optional\n\nSpline refinement level for rendering.\n\ncontrol_point_selection_type: ControlPointSelection, optional\n\nSpline control points selection type.\n\njson_data: dict, optional\n\nJSON dictionary to create a BoundaryFittedSplineParams object with provided parameters.\n\nExamples\n\n>>> boundary_fitted_spline_params = prime.BoundaryFittedSplineParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_volumes_of_label_name_pattern.html#get_topo_volumes_of_label_name_pattern","title":"get_topo_volumes_of_label_name_pattern","text":"get_topo_volumes_of_label_name_pattern\n\n\n\nPart.get_topo_volumes_of_label_name_pattern(label_name_pattern, name_pattern_params)\n\nGets the topovolumes of labels of the given label name expression.\n\nParameters\n\nlabel_name_pattern\n\npython:str\n\nName pattern to be matched with topovolume name\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match topovolume name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the ids of the topovolumes.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_volumes = prime.get_topo_volumes_of_label_name_pattern(\n>>>                      label_name_pattern = \"solid*\",\n>>>                      params = prime.NamePatternParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.detect_holes_params.html#detect_holes_params","title":"detect_holes_params","text":"detect_holes_params\n\n\n\nproperty DetectAndTreatHolesParams.detect_holes_params: DetectHolesParams\n\nParameters for detect holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATECONTACTPATCH_INVALIDOFFSETDISTANCE.html#createcontactpatch_invalidoffsetdistance","title":"CREATECONTACTPATCH_INVALIDOFFSETDISTANCE","text":"CREATECONTACTPATCH_INVALIDOFFSETDISTANCE\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDOFFSETDISTANCE = 388\n\nContact patch creation process failed. Scale factors should not be less than zero."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetNameResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SetNameResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControlParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VolumeControlParams.set_default(cell_zonelet_type=None, skip_hexcore=None)\n\nSet the default values of the VolumeControlParams object.\n\nParameters\n\ncell_zonelet_type: CellZoneletType, optional\n\nCell zonelet type is used to define the type of the associated volume.\n\nskip_hexcore: bool, optional\n\nCheck whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nThinStripType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nAdvancedSurferSetup.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.NM.html#nm","title":"NM","text":"NM\n\n\n\nLengthUnit.NM = 4\n\nDenotes length unit is nanometers."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.name.html#name","title":"name","text":"name\n\n\n\nproperty ControlData.name\n\nGet the name of ControlData."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MATERIALPOINTWITHSAMENAMEEXISTS.html#materialpointwithsamenameexists","title":"MATERIALPOINTWITHSAMENAMEEXISTS","text":"MATERIALPOINTWITHSAMENAMEEXISTS\n\n\n\nErrorCode.MATERIALPOINTWITHSAMENAMEEXISTS = 3300\n\nMaterial point with the same name already exists."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_NURBSFITTINGFAILED.html#iga_nurbsfittingfailed","title":"IGA_NURBSFITTINGFAILED","text":"IGA_NURBSFITTINGFAILED\n\n\n\nErrorCode.IGA_NURBSFITTINGFAILED = 2403\n\nSpline fitting failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MERGEVOLUMESFAILED.html#mergevolumesfailed","title":"MERGEVOLUMESFAILED","text":"MERGEVOLUMESFAILED\n\n\n\nErrorCode.MERGEVOLUMESFAILED = 133\n\nMerge volumes failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityResults.html#searchbyqualityresults","title":"SearchByQualityResults","text":"SearchByQualityResults\n\n\n\nclass ansys.meshing.prime.SearchByQualityResults(model=None, n_found=None, error_code=None, max_quality=None, min_quality=None, json_data=None, **kwargs)\n\nResults of search by quality.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchByQualityResults object with default parameters.\n\nn_found: int, optional\n\nNumber of face elements found by search for given quality limit.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nmax_quality: float, optional\n\nMaximum quality found by search.\n\nmin_quality: float, optional\n\nMinimum quality found by search.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchByQualityResults object with provided parameters.\n\nExamples\n\n>>> search_by_quality_results = prime.SearchByQualityResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.get_growth_params.html#get_growth_params","title":"get_growth_params","text":"get_growth_params\n\n\n\nShellBLControl.get_growth_params()\n\nGets thin ShellBL parameters for ShellBL control.\n\nReturns\n\n:\n\n\n\nShellBLControlGrowthParams\n\nReturns the ShellBLControlGrowthParams.\n\nReturn type\n\nShellBLControlGrowthParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = shellBL_ctrl.get_growth_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.create_new_part.html#create_new_part","title":"create_new_part","text":"create_new_part\n\n\n\nproperty WrapperCloseGapsParams.create_new_part: bool\n\nCreates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VOLUMEZONESNOTFOUNDTOEXPORTFLUENTCASE.html#volumezonesnotfoundtoexportfluentcase","title":"VOLUMEZONESNOTFOUNDTOEXPORTFLUENTCASE","text":"VOLUMEZONESNOTFOUNDTOEXPORTFLUENTCASE\n\n\n\nErrorCode.VOLUMEZONESNOTFOUNDTOEXPORTFLUENTCASE = 527\n\nVolume zones are not found to export fluent case."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneEdgeBiasingParams.edge_scope.html#edge_scope","title":"edge_scope","text":"edge_scope\n\n\n\nproperty MultiZoneEdgeBiasingParams.edge_scope: ScopeDefinition\n\nEdge zonelets to control the expanse of edge biasing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_FACESEPARATIONFAILED.html#stacker_faceseparationfailed","title":"STACKER_FACESEPARATIONFAILED","text":"STACKER_FACESEPARATIONFAILED\n\n\n\nErrorCode.STACKER_FACESEPARATIONFAILED = 10103\n\nStacker failed to separate base face."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.imag.html#imag","title":"imag","text":"imag\n\n\n\nTopoSearchField.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ResolveIntersectionsParams.html#resolveintersectionsparams","title":"ResolveIntersectionsParams","text":"ResolveIntersectionsParams\n\n\n\nclass ansys.meshing.prime.ResolveIntersectionsParams(model=None, number_of_threads=None, json_data=None, **kwargs)\n\nResolveIntersectionsParams define parameters for resolve intersections.\n\nParameters\n\nmodel: Model\n\nModel to create a ResolveIntersectionsParams object with default parameters.\n\nnumber_of_threads: int, optional\n\nNumber of threads for resolve intersections multithreaded operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a ResolveIntersectionsParams object with provided parameters.\n\nExamples\n\n>>> resolve_intersections_params = prime.ResolveIntersectionsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapSearchResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic OverlapSearchResults.set_default(n_pairs=None, overlap_pairs=None, error_code=None)\n\nSet the default values of the OverlapSearchResults object.\n\nParameters\n\nn_pairs: int, optional\n\nNumber of pairs.\n\noverlap_pairs: List[OverlapPairs], optional\n\nIds corresponding to pairs of overlapping face zonelets.\n\nerror_code: ErrorCode, optional\n\nError Code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesParams.volume_limit.html#volume_limit","title":"volume_limit","text":"volume_limit\n\n\n\nproperty DeleteVolumesParams.volume_limit: float\n\nMaximum volume limit to identify smaller volumes to be deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentMeshingMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportFluentMeshingMeshParams.set_default(cff_format=None)\n\nSet the default values of the ExportFluentMeshingMeshParams object.\n\nParameters\n\ncff_format: bool, optional\n\nOption to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VOLUMEMESHNOTFOUND.html#volumemeshnotfound","title":"VOLUMEMESHNOTFOUND","text":"VOLUMEMESHNOTFOUND\n\n\n\nErrorCode.VOLUMEMESHNOTFOUND = 1801\n\nVolume mesh not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nBCPairType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.HEXCORETET.html#hexcoretet","title":"HEXCORETET","text":"HEXCORETET\n\n\n\nVolumeFillType.HEXCORETET = 2\n\nVolume fill using hexahedral cells in the core and tetrahedral cells near the boundary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetScopeResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SetScopeResults.set_default(error_code=None, warning_code=None)\n\nSet the default values of the SetScopeResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the set scope.\n\nwarning_code: WarningCode, optional\n\nWarning code associated with the set scope."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLINVALIDSOURCESCOPE.html#thinvolumecontrolinvalidsourcescope","title":"THINVOLUMECONTROLINVALIDSOURCESCOPE","text":"THINVOLUMECONTROLINVALIDSOURCESCOPE\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSOURCESCOPE = 12102\n\nInvalid source scope provided for thin volume control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nTrimmedSolidSplineCutMode.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INTERSECTIONINCUTTERVOLUMES.html#intersectionincuttervolumes","title":"INTERSECTIONINCUTTERVOLUMES","text":"INTERSECTIONINCUTTERVOLUMES\n\n\n\nErrorCode.INTERSECTIONINCUTTERVOLUMES = 49\n\nFound overlapping or intersecting cutter volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.topo_edge_types.html#topo_edge_types","title":"topo_edge_types","text":"topo_edge_types\n\n\n\nproperty EdgeConnectivityResults.topo_edge_types: Iterable[int]\n\nTopoEdge type corresponding to each topoedge."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_INCORRECTBODYDEFINITION.html#stacker_incorrectbodydefinition","title":"STACKER_INCORRECTBODYDEFINITION","text":"STACKER_INCORRECTBODYDEFINITION\n\n\n\nErrorCode.STACKER_INCORRECTBODYDEFINITION = 10110\n\nSome bodies are intersecting or incorrectly defined."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.ansys_release.html#ansys_release","title":"ansys_release","text":"ansys_release\n\n\n\nproperty ImportCadParams.ansys_release: str\n\nConfigures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic JoinParams.set_default(tolerance=None, use_absolute_tolerance=None, remesh=None, match_angle=None, overlap_zone_name=None)\n\nSet the default values of the JoinParams object.\n\nParameters\n\ntolerance: float, optional\n\nOverlap tolerance between overlapping zonelets.\n\nuse_absolute_tolerance: bool, optional\n\nTolerance provided is absolute value.\n\nremesh: bool, optional\n\nRemesh at overlap surface boundary.\n\nmatch_angle: float, optional\n\nMatch angle determines face pair inclination for overlap consideration.\n\noverlap_zone_name: str, optional\n\nZone id to be assigned to overlap zonelets belonging to different zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCdbSimulationType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.delete_base.html#delete_base","title":"delete_base","text":"delete_base\n\n\n\nproperty MeshStackerParams.delete_base: bool\n\nOption to delete base face at the end of stacking. The default is false."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_INVALIDBASEFACEINPUT.html#stacker_invalidbasefaceinput","title":"STACKER_INVALIDBASEFACEINPUT","text":"STACKER_INVALIDBASEFACEINPUT\n\n\n\nErrorCode.STACKER_INVALIDBASEFACEINPUT = 10107\n\nBase face list input is invalid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapPairs.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic OverlapPairs.print_default()\n\nPrint the default values of OverlapPairs object.\n\nExamples\n\n>>> OverlapPairs.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_volume_zone_of_volume.html#get_volume_zone_of_volume","title":"get_volume_zone_of_volume","text":"get_volume_zone_of_volume\n\n\n\nPart.get_volume_zone_of_volume(volume)\n\nGets the volume zone of given volume.\n\nParameters\n\nvolume\n\npython:int\n\nId of volume.\n\nReturns\n\n:\n\n\n\npython:int\n\nReturns the id of volume zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> volume_zone = part.get_volume_zone_of_volume(volume)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_volume_zone_of_volume.html#examples-using-partget_volume_zone_of_volume","title":"get_volume_zone_of_volume > Examples using Part.get_volume_zone_of_volume","text":"Examples using Part.get_volume_zone_of_volume\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCadRefacetingMaxEdgeSizeLimit.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nPartCreationType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetParamsResults.html#setparamsresults","title":"SetParamsResults","text":"SetParamsResults\n\n\n\nclass ansys.meshing.prime.SetParamsResults(model=None, error_code=None, warning_code=None, json_data=None, **kwargs)\n\nResults associated with the set parameters operation.\n\nParameters\n\nmodel: Model\n\nModel to create a SetParamsResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the set parameters operation.\n\nwarning_code: WarningCode, optional\n\nWarning code associated with the set parameters operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SetParamsResults object with provided parameters.\n\nExamples\n\n>>> set_params_results = prime.SetParamsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.FUSEOPTIONINVALID.html#fuseoptioninvalid","title":"FUSEOPTIONINVALID","text":"FUSEOPTIONINVALID\n\n\n\nErrorCode.FUSEOPTIONINVALID = 850\n\nInvalid option chosen to connect two different parts."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.resolve_invalid_node_normals.html#resolve_invalid_node_normals","title":"resolve_invalid_node_normals","text":"resolve_invalid_node_normals\n\n\n\nproperty WrapperImproveQualityParams.resolve_invalid_node_normals: bool\n\nControl to resolve invalid node normals by inflating opposite nodes or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nShellBLOffsetType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty FuseParams.angle: float\n\nFaces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCadReaderRoute.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSolverType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapPairs.html#overlappairs","title":"OverlapPairs","text":"OverlapPairs\n\n\n\nclass ansys.meshing.prime.OverlapPairs(model=None, zone_id0=None, zone_id1=None, json_data=None, **kwargs)\n\nProvides ids of a pair of overlapping face zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a OverlapPairs object with default parameters.\n\nzone_id0: int, optional\n\nId of one overlapping face zonelet.\n\nzone_id1: int, optional\n\nId of other overlapping face zonelet.\n\njson_data: dict, optional\n\nJSON dictionary to create a OverlapPairs object with provided parameters.\n\nExamples\n\n>>> overlap_pairs = prime.OverlapPairs(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Surfer.remesh_face_zonelets.html#remesh_face_zonelets","title":"remesh_face_zonelets","text":"remesh_face_zonelets\n\n\n\nSurfer.remesh_face_zonelets(part_id, face_zonelets, edge_zonelets, params)\n\nPerform meshing on face zonelets with given parameters.\n\nParameters\n\npart_id\n\npython:int\n\nID of part.\n\nface_zonelets\n\nIterable[python:int]\n\nIDs of the face zonelets.\n\nedge_zonelets\n\nIterable[python:int]\n\nIDs of the edge zonelets.\n\nparams\n\nSurferParams\n\nSurfer parameters.\n\nReturns\n\n:\n\n\n\nSurferResults\n\nResults from meshing the face zonelets.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = prime.SurferParams(model)\n>>> results = surfer.remesh_face_zonelets(part_id,\n                face_zonelets, edge_zonelets, surfer_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INTERRUPTED.html#interrupted","title":"INTERRUPTED","text":"INTERRUPTED\n\n\n\nErrorCode.INTERRUPTED = 201\n\nMethod call interrupted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIResults.part_id.html#part_id","title":"part_id","text":"part_id\n\n\n\nproperty CreateBOIResults.part_id: int\n\nThe BOI part id."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.xmin.html#xmin","title":"xmin","text":"xmin\n\n\n\nproperty BoundingBox.xmin: float\n\nMinimal X coordinate of the bounding box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nEdgeMergeControl.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointManager.name.html#name","title":"name","text":"name\n\n\n\nproperty MaterialPointManager.name\n\nGet the name of MaterialPointManager."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteVolumesParams.set_default(delete_small_volumes=None, volume_limit=None)\n\nSet the default values of the DeleteVolumesParams object.\n\nParameters\n\ndelete_small_volumes: bool, optional\n\nOption to delete only volumes smaller than provided volume limit.\n\nvolume_limit: float, optional\n\nMaximum volume limit to identify smaller volumes to be deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nShellBLOffsetType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.get_surface_scope.html#get_surface_scope","title":"get_surface_scope","text":"get_surface_scope\n\n\n\nShellBLControl.get_surface_scope()\n\nGets the surface scope.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = shellbl_control.get_surface_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MULTIZONEMESHER_SURFACESCOPEVOLUMESCOPEINCONSISTENCY.html#multizonemesher_surfacescopevolumescopeinconsistency","title":"MULTIZONEMESHER_SURFACESCOPEVOLUMESCOPEINCONSISTENCY","text":"MULTIZONEMESHER_SURFACESCOPEVOLUMESCOPEINCONSISTENCY\n\n\n\nWarningCode.MULTIZONEMESHER_SURFACESCOPEVOLUMESCOPEINCONSISTENCY = 110001\n\nMultiZone warning codes"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdResults.face_zonelets_found.html#face_zonelets_found","title":"face_zonelets_found","text":"face_zonelets_found\n\n\n\nproperty SearchInfoByRegisterIdResults.face_zonelets_found: Iterable[int]\n\nIds of the face zonelets containing atleast one registered face element."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSizingType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERPATCHFLOWREGIONS_FAILED.html#wrapperpatchflowregions_failed","title":"WRAPPERPATCHFLOWREGIONS_FAILED","text":"WRAPPERPATCHFLOWREGIONS_FAILED\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_FAILED = 3446\n\nUnable to create patch surfaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.QUADRATICMESH_WRITEMESHFAILED.html#quadraticmesh_writemeshfailed","title":"QUADRATICMESH_WRITEMESHFAILED","text":"QUADRATICMESH_WRITEMESHFAILED\n\n\n\nErrorCode.QUADRATICMESH_WRITEMESHFAILED = 519\n\nWriting failed with quadratic mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.remove_labels_from_zonelets.html#remove_labels_from_zonelets","title":"remove_labels_from_zonelets","text":"remove_labels_from_zonelets\n\n\n\nPart.remove_labels_from_zonelets(labels, zonelets)\n\nRemove the given labels from the provided zonelets.\n\nParameters\n\nlabels\n\nList[python:str]\n\nLabels to be removed from zonelets.\n\nzonelets\n\nIterable[python:int]\n\nIds of zonelets.\n\nReturns\n\n:\n\n\n\nRemoveLabelResults\n\nReturns the RemoveLabelResults.\n\nReturn type\n\nRemoveLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.remove_labels_from_zonelets(labels, zonelets)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.control_points_count_v.html#control_points_count_v","title":"control_points_count_v","text":"control_points_count_v\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_v: int\n\nSpline control points count in V direction. Used in manual control points selection mode."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.set_growth_params.html#set_growth_params","title":"set_growth_params","text":"set_growth_params\n\n\n\nPrismControl.set_growth_params(prism_control_growth_params)\n\nSet growth parameters for prism control.\n\nParameters\n\nprism_control_growth_params\n\nPrismControlGrowthParams\n\nParameters to set prism control growth.\n\nExamples\n\n>>> results = prism_control.set_growth_params(PrismControlGrowthParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.set_growth_params.html#examples-using-prismcontrolset_growth_params","title":"set_growth_params > Examples using PrismControl.set_growth_params","text":"Examples using PrismControl.set_growth_params\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATECONTACTPATCH_INVALIDTOLERANCEVALUE.html#createcontactpatch_invalidtolerancevalue","title":"CREATECONTACTPATCH_INVALIDTOLERANCEVALUE","text":"CREATECONTACTPATCH_INVALIDTOLERANCEVALUE\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDTOLERANCEVALUE = 389\n\nContact patch creation process failed. Tolerance value should not be less than zero."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.SOFT.html#soft","title":"SOFT","text":"SOFT\n\n\n\nSizingType.SOFT = 3\n\nDenotes the size control type is soft."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCadRefacetingMaxEdgeSizeLimit.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCreateVolumeZonesType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SurferResults.print_default()\n\nPrint the default values of SurferResults object.\n\nExamples\n\n>>> SurferResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_OPERATIONFAILED.html#vt_operationfailed","title":"VT_OPERATIONFAILED","text":"VT_OPERATIONFAILED\n\n\n\nErrorCode.VT_OPERATIONFAILED = 3612\n\nVT operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsParams.html#cellstatisticsparams","title":"CellStatisticsParams","text":"CellStatisticsParams\n\n\n\nclass ansys.meshing.prime.CellStatisticsParams(model=None, get_volume=None, json_data=None, **kwargs)\n\nParameters used to calculate cell statistics.\n\nParameters\n\nmodel: Model\n\nModel to create a CellStatisticsParams object with default parameters.\n\nget_volume: bool, optional\n\nProvides option to compute and get cumulative cell volume of all element.\n\njson_data: dict, optional\n\nJSON dictionary to create a CellStatisticsParams object with provided parameters.\n\nExamples\n\n>>> cell_statistics_params = prime.CellStatisticsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.stitch_tolerance.html#stitch_tolerance","title":"stitch_tolerance","text":"stitch_tolerance\n\n\n\nproperty ImportCadParams.stitch_tolerance: float\n\nStitch facets based on tolerance. Available only with WorkBench CAD Reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ProjectOnGeometryResults.print_default()\n\nPrint the default values of ProjectOnGeometryResults object.\n\nExamples\n\n>>> ProjectOnGeometryResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportAbaqusParams.set_default()\n\nSet the default values of the ImportAbaqusParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.READMESHFAILED.html#readmeshfailed","title":"READMESHFAILED","text":"READMESHFAILED\n\n\n\nErrorCode.READMESHFAILED = 500\n\nReading mesh file failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetNameResults.warning_code.html#warning_code","title":"warning_code","text":"warning_code\n\n\n\nproperty SetNameResults.warning_code: WarningCode\n\nWarning code associated with the set name of given entity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteInteriorNodesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteInteriorNodesParams.set_default(merge_face_normals_angle=None, merge_edge_allow_self_close=None, edge_sharp_corner_angle=None)\n\nSet the default values of the DeleteInteriorNodesParams object.\n\nParameters\n\nmerge_face_normals_angle: float, optional\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nedge_sharp_corner_angle: float, optional\n\nMerge edges when the angle between the edges are below the provided value."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDEPROXIMITYSIZINGPARAMS.html#overrideproximitysizingparams","title":"OVERRIDEPROXIMITYSIZINGPARAMS","text":"OVERRIDEPROXIMITYSIZINGPARAMS\n\n\n\nWarningCode.OVERRIDEPROXIMITYSIZINGPARAMS = 204\n\nOverriding proximity sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nJoinSeparateMethod.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_proximity_sizing_params.html#get_proximity_sizing_params","title":"get_proximity_sizing_params","text":"get_proximity_sizing_params\n\n\n\nSizeControl.get_proximity_sizing_params()\n\nGet the proximity sizing parameters of size control.\n\nReturns\n\n:\n\n\n\nProximitySizingParams\n\nReturn the ProximitySizingParams.\n\nReturn type\n\nProximitySizingParams\n\nExamples\n\n>>> params = size_control.get_proximity_sizing_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Transform.transform_zonelets.html#transform_zonelets","title":"transform_zonelets","text":"transform_zonelets\n\n\n\nTransform.transform_zonelets(part_id, zonelets, params)\n\nTransforms given zonelets using provided transform parameters.\n\nParameters\n\npart_id\n\npython:int\n\nPart id of zonelets to be transformed.\n\nzonelets\n\nIterable[python:int]\n\nIds of zonelets.\n\nparams\n\nTransformParams\n\nTransform parameters.\n\nReturns\n\n:\n\n\n\nTransformResults\n\nReturns the transform results.\n\nReturn type\n\nTransformResults\n\nExamples\n\n>>> params = prime.TransformParams(model=model)\n>>> # scale by a factor of 2 using a 4x4 transformation matrix\n>>> params.transformation_matrix = [\n>>>    2, 0, 0, 0,\n>>>    0, 2, 0, 0,\n>>>    0, 0, 2, 0,\n>>>    0, 0, 0, 1,\n>>> ]\n>>> part = model.get_part_by_name(\"part_name\")\n>>> zonelets = part.get_face_zonelets()\n>>> result = prime.SurfaceUtilities(model).transform_zonelets(part.id, zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod VolumeFillType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nLSDynaFileFormatType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryParams.quality_limit.html#quality_limit","title":"quality_limit","text":"quality_limit\n\n\n\nproperty VolumeQualitySummaryParams.quality_limit: Iterable[float]\n\nQuality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.VOLUMETRIC.html#volumetric","title":"VOLUMETRIC","text":"VOLUMETRIC\n\n\n\nSizeFieldType.VOLUMETRIC = 1\n\nUses precomputed variable size in volumetric space defined by size field."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateShellBLResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateShellBLResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the CreateShellBLResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsParams.get_volume.html#get_volume","title":"get_volume","text":"get_volume\n\n\n\nproperty CellStatisticsParams.get_volume: bool\n\nProvides option to compute and get cumulative cell volume of all element."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.FUSEOVERLAPREMOVALINCOMPLETE.html#fuseoverlapremovalincomplete","title":"FUSEOVERLAPREMOVALINCOMPLETE","text":"FUSEOVERLAPREMOVALINCOMPLETE\n\n\n\nWarningCode.FUSEOVERLAPREMOVALINCOMPLETE = 4500\n\nSelf intersections found. Use Fuse operation to remove it."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nTrimmedSolidSplineCutMode.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceMeshSizeScaling.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SurfaceMeshSizeScaling.print_default()\n\nPrint the default values of SurfaceMeshSizeScaling object.\n\nExamples\n\n>>> SurfaceMeshSizeScaling.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nHexCoreCellElementType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MergePartsResults.set_default(error_code=None, merged_part_assigned_name=None, merged_part_id=None)\n\nSet the default values of the MergePartsResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nmerged_part_assigned_name: str, optional\n\nName assigned to merged part. Suffix is added to suggested name if the name not available.\n\nmerged_part_id: int, optional\n\nId assigned to merged part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.EXPLICIT.html#explicit","title":"EXPLICIT","text":"EXPLICIT\n\n\n\nCdbSimulationType.EXPLICIT = 1\n\nExplicit Simulation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MESHHASLEFTHANDEDNESSFACES.html#meshhaslefthandednessfaces","title":"MESHHASLEFTHANDEDNESSFACES","text":"MESHHASLEFTHANDEDNESSFACES\n\n\n\nWarningCode.MESHHASLEFTHANDEDNESSFACES = 7107\n\nMesh has invalid shape."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.set_source_scope.html#set_source_scope","title":"set_source_scope","text":"set_source_scope\n\n\n\nThinVolumeControl.set_source_scope(entities)\n\nSets the source surface scope of thin volume control.\n\nParameters\n\nentities\n\nScopeDefinition\n\nScope definition source face entities.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = thin_vol_ctrl.set_source_scope(entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.set_source_scope.html#examples-using-thinvolumecontrolset_source_scope","title":"set_source_scope > Examples using ThinVolumeControl.set_source_scope","text":"Examples using ThinVolumeControl.set_source_scope\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.html#wrapregion","title":"WrapRegion","text":"WrapRegion\n\n\n\nclass ansys.meshing.prime.WrapRegion(*values)\n\nIndicates source type to extract wrapper region.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.html#examples-using-wrapregion","title":"WrapRegion > Examples using WrapRegion","text":"Examples using WrapRegion\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.remove_slivers_abs_dist_tol_ratio.html#remove_slivers_abs_dist_tol_ratio","title":"remove_slivers_abs_dist_tol_ratio","text":"remove_slivers_abs_dist_tol_ratio\n\n\n\nproperty ScaffolderParams.remove_slivers_abs_dist_tol_ratio: float\n\nDefines the maximum aspect ratio to remove sliver faces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nEdgeMergeControl.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesher.repair_topology.html#repair_topology","title":"repair_topology","text":"repair_topology\n\n\n\nAutoQuadMesher.repair_topology(part_id, topo_face_ids, params)\n\nRepair topology with given parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of the Part.\n\ntopo_face_ids\n\nIterable[python:int]\n\nIds of topofaces.\n\nparams\n\nRepairTopologyParams\n\nParameters of repair topology.\n\nReturns\n\n:\n\n\n\nAutoQuadMesherResults\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.repair_topology(part_id, topo_face_ids, params);"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MULTIZONEMESHER_DEFEATUREDTOPOFACES.html#multizonemesher_defeaturedtopofaces","title":"MULTIZONEMESHER_DEFEATUREDTOPOFACES","text":"MULTIZONEMESHER_DEFEATUREDTOPOFACES\n\n\n\nWarningCode.MULTIZONEMESHER_DEFEATUREDTOPOFACES = 110003\n\nTopoFaces that got defeatured in the MultiZone mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_zone_name.html#get_zone_name","title":"get_zone_name","text":"get_zone_name\n\n\n\nModel.get_zone_name(id)\n\nGet the name of given zone.\n\nParameters\n\nid\n\npython:int\n\nId of zone.\n\nReturns\n\n:\n\n\n\npython:str\n\nReturn the zone name. Return empty name if the id is invalid.\n\nReturn type\n\nstr\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> name = model.get_zone_name(id)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_zone_name.html#examples-using-modelget_zone_name","title":"get_zone_name > Examples using Model.get_zone_name","text":"Examples using Model.get_zone_name\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_UNIFORMTRIMMEDNURBSFAILED.html#iga_uniformtrimmednurbsfailed","title":"IGA_UNIFORMTRIMMEDNURBSFAILED","text":"IGA_UNIFORMTRIMMEDNURBSFAILED\n\n\n\nErrorCode.IGA_UNIFORMTRIMMEDNURBSFAILED = 2417\n\nUniform trimmed spline creation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControlGrowthParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ShellBLControlGrowthParams.set_default(n_layers=None, offset_type=None, growth_rate=None, first_height=None)\n\nSet the default values of the ShellBLControlGrowthParams object.\n\nParameters\n\nn_layers: int, optional\n\nNumber of layers to be generated.\n\noffset_type: ShellBLOffsetType, optional\n\nOffset type for ShellBL.\n\ngrowth_rate: float, optional\n\nRatio of height of the current layer to the previous layer.\n\nfirst_height: float, optional\n\nHeight of first layer of ShellBL."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.create_prism_control.html#create_prism_control","title":"create_prism_control","text":"create_prism_control\n\n\n\nControlData.create_prism_control()\n\nCreate a prism control.\n\nReturns\n\n:\n\n\n\nPrismControl\n\nPrism control.\n\nReturn type\n\nPrismControl\n\nExamples\n\n>>> prism_control = model.control_data.create_prism_control()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.intersection_control_mask.html#intersection_control_mask","title":"intersection_control_mask","text":"intersection_control_mask\n\n\n\nproperty ScaffolderParams.intersection_control_mask: IntersectionMask\n\nSpecifies the nature of intersection to be computed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.EXTERNALOPENTOPOFACESFOUND.html#externalopentopofacesfound","title":"EXTERNALOPENTOPOFACESFOUND","text":"EXTERNALOPENTOPOFACESFOUND\n\n\n\nWarningCode.EXTERNALOPENTOPOFACESFOUND = 5603\n\nExternal open topofaces found when computing topovolumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_PERIODICKNOTVECTORCONVERSIONFAILED.html#iga_periodicknotvectorconversionfailed","title":"IGA_PERIODICKNOTVECTORCONVERSIONFAILED","text":"IGA_PERIODICKNOTVECTORCONVERSIONFAILED\n\n\n\nErrorCode.IGA_PERIODICKNOTVECTORCONVERSIONFAILED = 2405\n\nPeriodic knot conversion of spline failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_edges.html#get_topo_edges","title":"get_topo_edges","text":"get_topo_edges\n\n\n\nPart.get_topo_edges()\n\nGet the topoedges of a part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of topoedges.\n\nReturn type\n\nIterable[int]"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCadFaceter.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.analysis_settings_file_name.html#analysis_settings_file_name","title":"analysis_settings_file_name","text":"analysis_settings_file_name\n\n\n\nproperty ExportMapdlCdbParams.analysis_settings_file_name: str\n\nFile path to export mapdl analysis settings.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDCONTROLPARAMS.html#invalidcontrolparams","title":"INVALIDCONTROLPARAMS","text":"INVALIDCONTROLPARAMS\n\n\n\nErrorCode.INVALIDCONTROLPARAMS = 12201\n\nInvalid control parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.html#defeaturetopologyparams","title":"DefeatureTopologyParams","text":"DefeatureTopologyParams\n\n\n\nclass ansys.meshing.prime.DefeatureTopologyParams(model=None, partial_defeature=None, delete_interior_nodes=None, allow_curved_topo_faces=None, fillet_spanning_angle=None, aggressive_edge_merge=None, thin_stripes_tolerance=None, partial_defeature_params=None, delete_interior_nodes_params=None, json_data=None, **kwargs)\n\nParameters for defeature topology operations.\n\nParameters\n\nmodel: Model\n\nModel to create a DefeatureTopologyParams object with default parameters.\n\npartial_defeature: bool, optional\n\nOption to partial defeature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes: bool, optional\n\nOption to delete interior nodes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nallow_curved_topo_faces: bool, optional\n\nOption to allow curved topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfillet_spanning_angle: float, optional\n\nAngular threshold for detecting fillets with spanning angles below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\naggressive_edge_merge: bool, optional\n\nIndicate whether to allow aggressive edge merge while performing partial defeature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nthin_stripes_tolerance: float, optional\n\nTopoface width tolerance to detect thin faces below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\npartial_defeature_params: PartialDefeatureParams, optional\n\nParameters for partial defeature operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes_params: DeleteInteriorNodesParams, optional\n\nParameters for delete interior nodes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DefeatureTopologyParams object with provided parameters.\n\nExamples\n\n>>> defeature_topology_params = prime.DefeatureTopologyParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryParams.html#projectongeometryparams","title":"ProjectOnGeometryParams","text":"ProjectOnGeometryParams\n\n\n\nclass ansys.meshing.prime.ProjectOnGeometryParams(model=None, project_only_mid_nodes=None, project_on_facets_if_cadnot_found=None, json_data=None, **kwargs)\n\nParameters used to project topoface nodes on associated geometry.\n\nParameters\n\nmodel: Model\n\nModel to create a ProjectOnGeometryParams object with default parameters.\n\nproject_only_mid_nodes: bool, optional\n\nOption to project only the mid nodes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nproject_on_facets_if_cadnot_found: bool, optional\n\nOption to project on facet if geometry is not found.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ProjectOnGeometryParams object with provided parameters.\n\nExamples\n\n>>> project_on_geometry_params = prime.ProjectOnGeometryParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nTopoSearchField.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_f1_rw_main_plane_stl.html#download_f1_rw_main_plane_stl","title":"download_f1_rw_main_plane_stl","text":"download_f1_rw_main_plane_stl\n\n\n\nansys.meshing.prime.examples.download_f1_rw_main_plane_stl(destination=None, force=False)\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_main_plane = prime_examples.download_f1_rw_main_plane_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_main_plane, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_f1_rw_main_plane_stl.html#examples-using-download_f1_rw_main_plane_stl","title":"download_f1_rw_main_plane_stl > Examples using download_f1_rw_main_plane_stl","text":"Examples using download_f1_rw_main_plane_stl\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_block_model_pmdat.html#download_block_model_pmdat","title":"download_block_model_pmdat","text":"download_block_model_pmdat\n\n\n\nansys.meshing.prime.examples.download_block_model_pmdat(destination=None, force=False)\n\nDownload PMDAT file for the block model example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(block_model, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.max.html#max","title":"max","text":"max\n\n\n\nproperty ProximitySizingParams.max: float\n\nMaximum size used for computing edge and face size using proximity size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchByFoldsParams.set_default(critical_angle=None)\n\nSet the default values of the SearchByFoldsParams object.\n\nParameters\n\ncritical_angle: float, optional\n\nThreshold angle for fold detection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nHexCoreTransitionLayerType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.html#matchpairtargettype","title":"MatchPairTargetType","text":"MatchPairTargetType\n\n\n\nclass ansys.meshing.prime.MatchPairTargetType(*values)\n\nMatch morph target type.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.html#examples-using-matchpairtargettype","title":"MatchPairTargetType > Examples using MatchPairTargetType","text":"Examples using MatchPairTargetType\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MICROSTRUCTUREBADSHAPEPROPERTIES.html#microstructurebadshapeproperties","title":"MICROSTRUCTUREBADSHAPEPROPERTIES","text":"MICROSTRUCTUREBADSHAPEPROPERTIES\n\n\n\nErrorCode.MICROSTRUCTUREBADSHAPEPROPERTIES = 13003\n\nBad shape properties."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldFileReadResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SizeFieldFileReadResults.error_code: ErrorCode\n\nError code if size field file read operation was unsuccessful."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.html#surfacediagnosticsummaryresults","title":"SurfaceDiagnosticSummaryResults","text":"SurfaceDiagnosticSummaryResults\n\n\n\nclass ansys.meshing.prime.SurfaceDiagnosticSummaryResults(model=None, error_code=None, n_self_intersections=None, n_free_edges=None, n_multi_edges=None, n_duplicate_faces=None, json_data=None, **kwargs)\n\nResults of surface diagnostic summary.\n\nParameters\n\nmodel: Model\n\nModel to create a SurfaceDiagnosticSummaryResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the surface diagnostic summary.\n\nn_self_intersections: int, optional\n\nNumber of self intersecting faces identified.\n\nn_free_edges: int, optional\n\nNumber of free face edges identified.\n\nn_multi_edges: int, optional\n\nNumber of multi face edges identified.\n\nn_duplicate_faces: int, optional\n\nNumber of duplicate faces identified.\n\njson_data: dict, optional\n\nJSON dictionary to create a SurfaceDiagnosticSummaryResults object with provided parameters.\n\nExamples\n\n>>> surface_diagnostic_summary_results = prime.SurfaceDiagnosticSummaryResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.html#examples-using-surfacediagnosticsummaryresults","title":"SurfaceDiagnosticSummaryResults > Examples using SurfaceDiagnosticSummaryResults","text":"Examples using SurfaceDiagnosticSummaryResults\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectParams.collapse_feature_angle.html#collapse_feature_angle","title":"collapse_feature_angle","text":"collapse_feature_angle\n\n\n\nproperty IntersectParams.collapse_feature_angle: float\n\nAngle to preserve features while performing collapse in improve operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.real.html#real","title":"real","text":"real\n\n\n\nFlowDirection.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSurfaceFeatureType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nZoneType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.project_on_geometry.html#project_on_geometry","title":"project_on_geometry","text":"project_on_geometry\n\n\n\nproperty HexToSplineParams.project_on_geometry: bool\n\nOption to project on geometry.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOTSUPPORTEDFORPOLYMESHPART.html#notsupportedforpolymeshpart","title":"NOTSUPPORTEDFORPOLYMESHPART","text":"NOTSUPPORTEDFORPOLYMESHPART\n\n\n\nErrorCode.NOTSUPPORTEDFORPOLYMESHPART = 1208\n\nOperation does not support poly elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nBCPairType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.show.html#show","title":"show","text":"show\n\n\n\nPrimePlotter.show(plottable_object=None, screenshot=None, name_filter=None, scope=None, **plotting_options)\n\nShow the plotted objects.\n\nParameters\n\nplottable_object\n\nAny, default: python:None\n\nObject to show.\n\nscreenshot\n\npython:str, default: python:None\n\nPath to save a screenshot to.\n\nname_filter\n\npython:str, default: python:None\n\nRegular expression with the desired name or names to include in the plotter.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects.\n\nReturn type\n\nNone"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.show.html#examples-using-primeplottershow","title":"show > Examples using PrimePlotter.show","text":"Examples using PrimePlotter.show\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateContactPatchResults.print_default()\n\nPrint the default values of CreateContactPatchResults object.\n\nExamples\n\n>>> CreateContactPatchResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.smallest_edge_length.html#smallest_edge_length","title":"smallest_edge_length","text":"smallest_edge_length\n\n\n\nproperty RepairTopologyParams.smallest_edge_length: float\n\nLength of smallest edge for which split is applied.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCreateVolumeZonesType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLID.html#wrappercontrol_invalidcontactpreventioncontrolid","title":"WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLID","text":"WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLID\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLID = 3421\n\nContact prevention specified under wrapper control doesn’t exist."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneEdgeBiasingParams.face_scope.html#face_scope","title":"face_scope","text":"face_scope\n\n\n\nproperty MultiZoneEdgeBiasingParams.face_scope: ScopeDefinition\n\nReference face zonelets to control mesh clustering orientation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectNonCircularHolesParams.min_hole_length.html#min_hole_length","title":"min_hole_length","text":"min_hole_length\n\n\n\nproperty DetectNonCircularHolesParams.min_hole_length: float\n\nMinimum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StretchFreeBoundariesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic StretchFreeBoundariesResults.print_default()\n\nPrint the default values of StretchFreeBoundariesResults object.\n\nExamples\n\n>>> StretchFreeBoundariesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.real.html#real","title":"real","text":"real\n\n\n\nMergeNodeType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nLengthUnit.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteFringesAndOverlapsParams.set_default(fringe_element_count=None, overlap_element_count=None, delete_fringes=None, delete_overlaps=None)\n\nSet the default values of the DeleteFringesAndOverlapsParams object.\n\nParameters\n\nfringe_element_count: int, optional\n\nMaximum count of free face elements identified as fringe to be deleted.\n\noverlap_element_count: int, optional\n\nMaximum count of overlapping face elements identified as overlap to be deleted.\n\ndelete_fringes: bool, optional\n\nOption to delete fringes. The default is true.\n\ndelete_overlaps: bool, optional\n\nOption to delete overlaps. The default is false."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nTopoSearchField.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.num_nodes_per_face_zonelet.html#num_nodes_per_face_zonelet","title":"num_nodes_per_face_zonelet","text":"num_nodes_per_face_zonelet\n\n\n\nproperty FaceConnectivityResults.num_nodes_per_face_zonelet: Iterable[int]\n\nNumber of nodes per face zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportLSDynaResults.print_default()\n\nPrint the default values of ExportLSDynaResults object.\n\nExamples\n\n>>> ExportLSDynaResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ProjectOnGeometryParams.print_default()\n\nPrint the default values of ProjectOnGeometryParams object.\n\nExamples\n\n>>> ProjectOnGeometryParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.EDGE.html#edge","title":"EDGE","text":"EDGE\n\n\n\nBCPairType.EDGE = 2\n\nOption to specify edge zonelet as boundary condition pair."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateCapResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateCapResults.print_default()\n\nPrint the default values of CreateCapResults object.\n\nExamples\n\n>>> CreateCapResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.UNIFORM.html#uniform","title":"UNIFORM","text":"UNIFORM\n\n\n\nShellBLOffsetType.UNIFORM = 2\n\nOption to set ShellBL offset type as Uniform.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectCircularHolesParams.max_radius_circular_holes.html#max_radius_circular_holes","title":"max_radius_circular_holes","text":"max_radius_circular_holes\n\n\n\nproperty DetectCircularHolesParams.max_radius_circular_holes: float\n\nMaximum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.I10.html#i10","title":"I10","text":"I10\n\n\n\nLSDynaFileFormatType.I10 = 1\n\nOption to select 10-char width format to write ids for elements and nodes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.imag.html#imag","title":"imag","text":"imag\n\n\n\nStitchType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CellQualityMeasure.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CreateContactPatchResults.error_code: ErrorCode\n\nError code associated with the contact patch creation operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSizeFieldType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SmoothDihedralFaceNodesResults.print_default()\n\nPrint the default values of SmoothDihedralFaceNodesResults object.\n\nExamples\n\n>>> SmoothDihedralFaceNodesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportFluentMeshingMeshParams.print_default()\n\nPrint the default values of ImportFluentMeshingMeshParams object.\n\nExamples\n\n>>> ImportFluentMeshingMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.WRAPPER_SIZECONTROLNOTSUPPORTED.html#wrapper_sizecontrolnotsupported","title":"WRAPPER_SIZECONTROLNOTSUPPORTED","text":"WRAPPER_SIZECONTROLNOTSUPPORTED\n\n\n\nWarningCode.WRAPPER_SIZECONTROLNOTSUPPORTED = 6002\n\nSize control is not supported in wrapper."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.COARSE.html#coarse","title":"COARSE","text":"COARSE\n\n\n\nCadRefacetingResolution.COARSE = 0\n\nDenotes coarse resolution of CAD faceting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSizeFieldType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSurfaceFeatureType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAResults.html#igaresults","title":"IGAResults","text":"IGAResults\n\n\n\nclass ansys.meshing.prime.IGAResults(model=None, error_code=None, warning_code=None, spline_ids=None, json_data=None, **kwargs)\n\nResults of IGA operations.\n\nParameters\n\nmodel: Model\n\nModel to create a IGAResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code if IGA operation is unsuccessful.\n\nwarning_code: WarningCode, optional\n\nWarning code if IGA operation is partially successful.\n\nspline_ids: Iterable[int], optional\n\nIds of the created spline.\n\njson_data: dict, optional\n\nJSON dictionary to create a IGAResults object with provided parameters.\n\nExamples\n\n>>> iga_results = prime.IGAResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nMaterialPointType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDVOLUMECONTROLS.html#invalidvolumecontrols","title":"INVALIDVOLUMECONTROLS","text":"INVALIDVOLUMECONTROLS\n\n\n\nErrorCode.INVALIDVOLUMECONTROLS = 118\n\nInvalid volume controls specified for volume meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty MeshStackerResults.error_code: ErrorCode\n\nError code associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.export_fluent_meshing_mesh.html#export_fluent_meshing_mesh","title":"export_fluent_meshing_mesh","text":"export_fluent_meshing_mesh\n\n\n\nFileIO.export_fluent_meshing_mesh(file_name, export_fluent_mesh_params)\n\nExport a Fluent Meshing mesh (MSH) file.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the mesh file on disk.\n\nexport_fluent_mesh_params\n\nExportFluentMeshingMeshParams\n\nParameters for exporting the mesh file.\n\nReturns\n\n:\n\n\n\nFileWriteResults\n\nResults from exporting the mesh file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.export_fluent_meshing_mesh(\n                \"/tmp/fluent_meshing.msh\",\n                ExportFluentMeshingMeshParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ZONESARENOTOFSAMETYPE.html#zonesarenotofsametype","title":"ZONESARENOTOFSAMETYPE","text":"ZONESARENOTOFSAMETYPE\n\n\n\nErrorCode.ZONESARENOTOFSAMETYPE = 303\n\nZones are not of same type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic HexToSplineParams.print_default()\n\nPrint the default values of HexToSplineParams object.\n\nExamples\n\n>>> HexToSplineParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.get_bounding_box_of_zonelets.html#get_bounding_box_of_zonelets","title":"get_bounding_box_of_zonelets","text":"get_bounding_box_of_zonelets\n\n\n\nSurfaceUtilities.get_bounding_box_of_zonelets(zonelets)\n\nGet bounding box of given zonelets.\n\nParameters\n\nzonelets\n\nIterable[python:int]\n\nIds of zonelets.\n\nReturns\n\n:\n\n\n\nBoundingBox\n\nReturns bounding of box of given zonelets.\n\nReturn type\n\nBoundingBox\n\nExamples\n\n>>> zonelets = part.get_face_zonelets() + part.get_edge_zonelets()\n>>> bounding_box = surface_utilities.get_bounding_box_of_zonelets(zonelets)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSmoothType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDEMESHEDSIZINGPARAMS.html#overridemeshedsizingparams","title":"OVERRIDEMESHEDSIZINGPARAMS","text":"OVERRIDEMESHEDSIZINGPARAMS\n\n\n\nWarningCode.OVERRIDEMESHEDSIZINGPARAMS = 206\n\nOverriding meshed sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MeshStackerResults.print_default()\n\nPrint the default values of MeshStackerResults object.\n\nExamples\n\n>>> MeshStackerResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SFPeriodicParams.axis.html#axis","title":"axis","text":"axis\n\n\n\nproperty SFPeriodicParams.axis: Iterable[float]\n\nAxis vector coordinates."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.real.html#real","title":"real","text":"real\n\n\n\nLabelToZoneMethod.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.imag.html#imag","title":"imag","text":"imag\n\n\n\nLSDynaAnalysisType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.BYEDGES.html#byedges","title":"BYEDGES","text":"BYEDGES\n\n\n\nSplineFeatureCaptureType.BYEDGES = 2\n\nUse edges for capturing features in spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapResult.id.html#id","title":"id","text":"id\n\n\n\nproperty WrapResult.id: int\n\nId of the wrapper part created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExtractVolumesParams.set_default(create_zone=None, suggested_zone_name=None)\n\nSet the default values of the ExtractVolumesParams object.\n\nParameters\n\ncreate_zone: bool, optional\n\nOption to create zone for flow volumes extracted.\n\nsuggested_zone_name: str, optional\n\nName suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.remove_labels_from_topo_entities.html#remove_labels_from_topo_entities","title":"remove_labels_from_topo_entities","text":"remove_labels_from_topo_entities\n\n\n\nPart.remove_labels_from_topo_entities(labels, topo_entities)\n\nRemove the given labels from the provided topoentities.\n\nParameters\n\nlabels\n\nList[python:str]\n\nLabels to be removed from topoentities.\n\ntopo_entities\n\nIterable[python:int]\n\nIds of topoentities.\n\nReturns\n\n:\n\n\n\nRemoveLabelResults\n\nReturns the RemoveLabelResults.\n\nReturn type\n\nRemoveLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.remove_labels_from_topo_entities(labels, topo_entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_elbow_dsco.html#download_elbow_dsco","title":"download_elbow_dsco","text":"download_elbow_dsco\n\n\n\nansys.meshing.prime.examples.download_elbow_dsco(destination=None, force=False)\n\nDownload the DSCO file for the mixing elbow example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsParams.critical_angle.html#critical_angle","title":"critical_angle","text":"critical_angle\n\n\n\nproperty SearchByFoldsParams.critical_angle: float\n\nThreshold angle for fold detection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.material_point_topo_volumes.html#material_point_topo_volumes","title":"material_point_topo_volumes","text":"material_point_topo_volumes\n\n\n\nproperty ComputeTopoVolumesResults.material_point_topo_volumes: Iterable[int]\n\nIds of topovolumes enclosing material points."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.HANGINGNODES.html#hangingnodes","title":"HANGINGNODES","text":"HANGINGNODES\n\n\n\nHexCoreTransitionLayerType.HANGINGNODES = 0\n\nAllow different size hexes to be neighbors."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nHexCoreTransitionLayerType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nFlowDirection.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateContactPatchParams.print_default()\n\nPrint the default values of CreateContactPatchParams object.\n\nExamples\n\n>>> CreateContactPatchParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nHexCoreCellElementType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessParams.thickness.html#thickness","title":"thickness","text":"thickness\n\n\n\nproperty AddThicknessParams.thickness: float\n\nTo assign the offset distance of inflation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#mesh-a-saddle-bracket-for-a-structural-analysis","title":"Mesh a saddle bracket for a structural analysis","text":"Mesh a saddle bracket for a structural analysis\n\nSummary: This example demonstrates how to mesh a thin\nsolid with hexahedral and prism cells."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#objective","title":"Mesh a saddle bracket for a structural analysis > Objective","text":"Objective\n\nThis example creates a mainly hexahedral mesh on a thin solid volume."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#procedure","title":"Mesh a saddle bracket for a structural analysis > Procedure","text":"Procedure\n\nLaunch Ansys Prime Server.\n\nImport the CAD geometry.\n\nQuad surface mesh the source face.\n\nSurface mesh the remaining unmeshed TopoFaces with tri surface mesh.\n\nDelete the topology.\n\nDefine volume meshing controls to use thin volume meshing.\n\nVolume mesh with hexahedral and prism cells.\n\nWrite a CDB file for use in the APDL solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#launch-ansys-prime-server","title":"Mesh a saddle bracket for a structural analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#import-geometry","title":"Mesh a saddle bracket for a structural analysis > Import geometry","text":"Import geometry\n\nDownload the saddle bracket geometry (FMD) file exported by SpaceClaim.\nImport the geometry and display all.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#quad-mesh-source-faces","title":"Mesh a saddle bracket for a structural analysis > Quad mesh source faces","text":"Quad mesh source faces\n\nMesh the source faces for the thin volume control with quads.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#surface-mesh-unmeshed-faces","title":"Mesh a saddle bracket for a structural analysis > Surface mesh unmeshed faces","text":"Surface mesh unmeshed faces\n\nMesh unmeshed faces with tri surface mesh.  Tri surface mesh on the target\nand side faces is used to show more clearly that the result of the thin\nvolume control is a hex mesh that is imprinted up to the side faces.\nAll quads could be used for the surface mesh to simplify the process.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#delete-topology","title":"Mesh a saddle bracket for a structural analysis > Delete topology","text":"Delete topology\n\nDelete topology to leave only the surface mesh.  This is necessary for the\nthin volume control to be used."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#define-volume-meshing-controls","title":"Mesh a saddle bracket for a structural analysis > Define volume meshing controls","text":"Define volume meshing controls\n\nDefine volume meshing controls to use thin volume meshing.\nSpecify source and target faces for the thin volume using imported labels.\nSet the number of layers of cells through the thickness of the thin solid to be 4.\nTo create a fully hexahedral and prism mesh the side faces must be imprinted on\nthe side faces. If needed, a buffer region at the sides of the volume can be\ndefined where the volume fill type used for the volume mesh parameters is\nused to infill. This is useful on more complex geometries, where it provides\nmore robustness of the method. To create a buffer region set imprint_sides\nto False and specify how many rings of cells to ignore at the sides\nusing n_ignore_rings."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#generate-volume-mesh","title":"Mesh a saddle bracket for a structural analysis > Generate volume mesh","text":"Generate volume mesh\n\nVolume mesh to obtain hexahedral and prism mesh.\nPrint mesh summary.\nDisplay volume mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#write-mesh","title":"Mesh a saddle bracket for a structural analysis > Write mesh","text":"Write mesh\n\nWrite a CDB file for use in the MAPDL solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#exit-pyprimemesh","title":"Mesh a saddle bracket for a structural analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (0 minutes 24.739 seconds)\n\n\n\nDownload Jupyter notebook: 07_saddle_bracket.ipynb\n\nDownload Python source code: 07_saddle_bracket.py\n\nDownload zipped: 07_saddle_bracket.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_name.html#get_name","title":"get_name","text":"get_name\n\n\n\nPart.get_name()\n\nGets the name of the Part.\n\nReturns\n\n:\n\n\n\npython:str\n\nReturns part name.\n\nReturn type\n\nstr\n\nExamples\n\n>>> part_name = part.get_name()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nStitchType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchResults.part_id.html#part_id","title":"part_id","text":"part_id\n\n\n\nproperty CreateContactPatchResults.part_id: int\n\nContact patch part id."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.INFLATE.html#inflate","title":"INFLATE","text":"INFLATE\n\n\n\nSmoothType.INFLATE = 2\n\nPerforms inflation during the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.island_count.html#island_count","title":"island_count","text":"island_count\n\n\n\nproperty WrapperImproveQualityParams.island_count: int\n\nFace count of smallest island."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_MATERIALPOINTWITHGIVENNAMEDOESNTEXIST.html#wrappercontrol_materialpointwithgivennamedoesntexist","title":"WRAPPERCONTROL_MATERIALPOINTWITHGIVENNAMEDOESNTEXIST","text":"WRAPPERCONTROL_MATERIALPOINTWITHGIVENNAMEDOESNTEXIST\n\n\n\nErrorCode.WRAPPERCONTROL_MATERIALPOINTWITHGIVENNAMEDOESNTEXIST = 3413\n\nLive material point added to wrapper control doesn’t exist."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nFaceQualityMeasure.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCellQualityMeasure.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.LIVE.html#live","title":"LIVE","text":"LIVE\n\n\n\nMaterialPointType.LIVE = 1\n\nUsed to define live material point."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshToolResults.html#volumemeshtoolresults","title":"VolumeMeshToolResults","text":"VolumeMeshToolResults\n\n\n\nclass ansys.meshing.prime.VolumeMeshToolResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResult associated with the volume mesh tool operation.\n\nParameters\n\nmodel: Model\n\nModel to create a VolumeMeshToolResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume mesh tool operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a VolumeMeshToolResults object with provided parameters.\n\nExamples\n\n>>> volume_mesh_tool_results = prime.VolumeMeshToolResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.imag.html#imag","title":"imag","text":"imag\n\n\n\nLabelToZoneMethod.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TransformResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty TransformResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.html#wrapperpatchflowregionsparams","title":"WrapperPatchFlowRegionsParams","text":"WrapperPatchFlowRegionsParams\n\n\n\nclass ansys.meshing.prime.WrapperPatchFlowRegionsParams(model=None, base_size=None, suggested_part_name=None, number_of_threads=None, dead_regions=None, sizing_method=None, size_field_ids=None, patch_at_live=None, json_data=None, **kwargs)\n\nWrapperPatchFlowRegionsParams to define parameters for patch flow regions operation.\n\nParameters\n\nmodel: Model\n\nModel to create a WrapperPatchFlowRegionsParams object with default parameters.\n\nbase_size: float, optional\n\nBase size to define octree.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created patching surfaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndead_regions: List[DeadRegion], optional\n\nList of dead regions.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsizing_method: SizeFieldType, optional\n\nMethod used to define sizing method for patching.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsize_field_ids: Iterable[int], optional\n\nIds used to define size field based octree refinement.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\npatch_at_live: bool, optional\n\nCreates patches closer to live instead of dead.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a WrapperPatchFlowRegionsParams object with provided parameters.\n\nExamples\n\n>>> wrapper_patch_flow_regions_params = prime.WrapperPatchFlowRegionsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.get_edge_scope.html#get_edge_scope","title":"get_edge_scope","text":"get_edge_scope\n\n\n\nShellBLControl.get_edge_scope()\n\nGets the edge scope.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = shellbl_control.get_edge_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControlGrowthParams.first_height.html#first_height","title":"first_height","text":"first_height\n\n\n\nproperty ShellBLControlGrowthParams.first_height: float\n\nHeight of first layer of ShellBL.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.real.html#real","title":"real","text":"real\n\n\n\nWarningCode.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TOOLZONELETS_NOTWATERTIGHT.html#toolzonelets_notwatertight","title":"TOOLZONELETS_NOTWATERTIGHT","text":"TOOLZONELETS_NOTWATERTIGHT\n\n\n\nErrorCode.TOOLZONELETS_NOTWATERTIGHT = 10005\n\nTool zonelets do not form a watertight volume."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Morpher.html#morpher","title":"Morpher","text":"Morpher\n\n\n\nclass ansys.meshing.prime.Morpher(model)\n\nMorpher contain functionalities to change the geometry, adapting the mesh accordingly without a recomputation.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create Morpher object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Morpher.html#examples-using-morpher","title":"Morpher > Examples using Morpher","text":"Examples using Morpher\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nErrorCode.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SubtractVolumesResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the SubtractVolumesResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume subtract operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the volume subtract operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.UNPROCESSEDKEYWORDSINABAQUSFILE.html#unprocessedkeywordsinabaqusfile","title":"UNPROCESSEDKEYWORDSINABAQUSFILE","text":"UNPROCESSEDKEYWORDSINABAQUSFILE\n\n\n\nWarningCode.UNPROCESSEDKEYWORDSINABAQUSFILE = 11001\n\nUnprocessed Abaqus keywords have been found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectNonCircularHolesParams.max_hole_length.html#max_hole_length","title":"max_hole_length","text":"max_hole_length\n\n\n\nproperty DetectNonCircularHolesParams.max_hole_length: float\n\nMaximum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_sizing_type.html#get_sizing_type","title":"get_sizing_type","text":"get_sizing_type\n\n\n\nSizeControl.get_sizing_type()\n\nGets the sizing type for the size control.\n\nReturns\n\n:\n\n\n\nSizingType\n\nReturns the sizing type of the control.\n\nReturn type\n\nSizingType\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> type = size_control.get_sizing_type()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nBOIType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nContactPatchAxis.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneParams.html#fillholesatplaneparams","title":"FillHolesAtPlaneParams","text":"FillHolesAtPlaneParams\n\n\n\nclass ansys.meshing.prime.FillHolesAtPlaneParams(model=None, create_zone=None, suggested_zone_name=None, json_data=None, **kwargs)\n\nParameters to fill holes at given plane.\n\nParameters\n\nmodel: Model\n\nModel to create a FillHolesAtPlaneParams object with default parameters.\n\ncreate_zone: bool, optional\n\nOption to create a face zone for the zonelets created to fill holes.\n\nsuggested_zone_name: str, optional\n\nSuggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name.\n\njson_data: dict, optional\n\nJSON dictionary to create a FillHolesAtPlaneParams object with provided parameters.\n\nExamples\n\n>>> fill_holes_at_plane_params = prime.FillHolesAtPlaneParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SeparateBlocksFormatType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nBCPairType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeParams.label.html#label","title":"label","text":"label\n\n\n\nproperty FixInvalidNormalNodeParams.label: str\n\nLabel to set on new face zonelets created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSpline.refine_tet_mesh.html#refine_tet_mesh","title":"refine_tet_mesh","text":"refine_tet_mesh\n\n\n\nTrimmedSpline.refine_tet_mesh(part_id, refine_params)\n\nRefines tetrahedral mesh.\n\nParameters\n\npart_id\n\npython:int\n\nPart on which mesh refinement is performed.\n\nrefine_params\n\nRefineTetMeshParams\n\nParameters to configure mesh refinement.\n\nReturns\n\n:\n\n\n\nTrimmedSplineResults\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.RefineTetMesh(part_id, refine_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.EDGEEDGE.html#edgeedge","title":"EDGEEDGE","text":"EDGEEDGE\n\n\n\nIntersectionMask.EDGEEDGE = 1\n\nPerforms edge to edge intersection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControlGrowthParams.offset_type.html#offset_type","title":"offset_type","text":"offset_type\n\n\n\nproperty ShellBLControlGrowthParams.offset_type: ShellBLOffsetType\n\nOffset type for ShellBL.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CadReaderRoute.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MESHDECOUPLEDFAILED.html#meshdecoupledfailed","title":"MESHDECOUPLEDFAILED","text":"MESHDECOUPLEDFAILED\n\n\n\nErrorCode.MESHDECOUPLEDFAILED = 16900\n\nInvalid load balancing or failed in volume meshing for one or more parts.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.check_face_deviation.html#check_face_deviation","title":"check_face_deviation","text":"check_face_deviation\n\n\n\nSurfaceSearch.check_face_deviation(source_face_zonelets, target_face_zonelets, params)\n\nGets information regarding the number of faces with a deviation higher than the tolerance.\n\nParameters\n\nsource_face_zonelets\n\nIterable[python:int]\n\nScope of reference zonelets from which the deviation is checked.\n\ntarget_face_zonelets\n\nIterable[python:int]\n\nScope of target zonelets for which the deviation is checked.\n\nparams\n\nCheckFaceDeviationParams\n\nParameters for retrieving information while performing check face deviation operation.\n\nReturns\n\n:\n\n\n\nCheckFaceDeviationResults\n\nReturns the CheckFaceDeviationResults.\n\nReturn type\n\nCheckFaceDeviationResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> params = prime.CheckFaceDeviationParams()\n>>> results = surf_search.check_face_deviation(source_scope, reference_scope, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.edge_list.html#edge_list","title":"edge_list","text":"edge_list\n\n\n\nproperty EdgeConnectivityResults.edge_list: Iterable[int]\n\nEdge list describing connectivity of node coordinates."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLTOPOLOGYNOTSUPPORTED.html#thinvolumecontroltopologynotsupported","title":"THINVOLUMECONTROLTOPOLOGYNOTSUPPORTED","text":"THINVOLUMECONTROLTOPOLOGYNOTSUPPORTED\n\n\n\nErrorCode.THINVOLUMECONTROLTOPOLOGYNOTSUPPORTED = 12108\n\nThin volume mesh controls not supported for part with topology data."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_NODEINDEXINGFAILED.html#iga_nodeindexingfailed","title":"IGA_NODEINDEXINGFAILED","text":"IGA_NODEINDEXINGFAILED\n\n\n\nErrorCode.IGA_NODEINDEXINGFAILED = 2409\n\nHex mesh is unstructured."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.OUTOFMEMORY.html#outofmemory","title":"OUTOFMEMORY","text":"OUTOFMEMORY\n\n\n\nErrorCode.OUTOFMEMORY = 200\n\nOut of memory."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.size_field_type.html#size_field_type","title":"size_field_type","text":"size_field_type\n\n\n\nproperty LocalSurferParams.size_field_type: SizeFieldType\n\nSize field type used to generate surface mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PERIODICSURFACESEDGESMISMATCH.html#periodicsurfacesedgesmismatch","title":"PERIODICSURFACESEDGESMISMATCH","text":"PERIODICSURFACESEDGESMISMATCH\n\n\n\nErrorCode.PERIODICSURFACESEDGESMISMATCH = 2912\n\nEdge entities do not match on periodic source and target surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.READCDBFAILED.html#readcdbfailed","title":"READCDBFAILED","text":"READCDBFAILED\n\n\n\nErrorCode.READCDBFAILED = 505\n\nReading CDB file failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.entity_type.html#entity_type","title":"entity_type","text":"entity_type\n\n\n\nproperty ScopeDefinition.entity_type: ScopeEntity\n\nEntity type for which scope needs to be evaluated. The default is set to face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbParams.append.html#append","title":"append","text":"append\n\n\n\nproperty ImportMapdlCdbParams.append: bool\n\nOption to append imported cdb into existing model."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportAbaqusParams.print_default()\n\nPrint the default values of ImportAbaqusParams object.\n\nExamples\n\n>>> ImportAbaqusParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nMergeNodeType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Wrapper.patch_flow_regions.html#patch_flow_regions","title":"patch_flow_regions","text":"patch_flow_regions\n\n\n\nWrapper.patch_flow_regions(live_material_point, params)\n\nPatch flow regions.\n\nPatch flow regions create patching surfaces for regions identified\nby dead regions from wrapper patch holes parameters.\n\nParameters\n\nlive_material_point\n\npython:str\n\nName of live material point.\n\nparams\n\nWrapperPatchFlowRegionsParams\n\nParameters to define patch flow regions operation.\n\nReturns\n\n:\n\n\n\nWrapperPatchFlowRegionsResult\n\nReturns the WrapperPatchFlowRegionsResult.\n\nReturn type\n\nWrapperPatchFlowRegionsResult\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = wrapper.PatchFlowRegions(live_material_point, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nPartCreationType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.real.html#real","title":"real","text":"real\n\n\n\nSizeFieldType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic EdgeConnectivityResults.set_default(error_code=None, edge_zonelet_ids=None, topo_edge_ids=None, mesh_edge_ids=None, topo_edge_types=None, num_nodes_per_edge_zonelet=None, node_coords=None, num_edge_list_per_edge_zonelet=None, edge_list=None, num_edges_per_edge_zonelet=None)\n\nSet the default values of the EdgeConnectivityResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the get edge connectivity operation.\n\nedge_zonelet_ids: Iterable[int], optional\n\nEdge zonelet ids for which connectivity data is available.\n\ntopo_edge_ids: Iterable[int], optional\n\nTopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\nmesh_edge_ids: Iterable[int], optional\n\nMesh edge ids corresponding to each topoedge.\n\ntopo_edge_types: Iterable[int], optional\n\nTopoEdge type corresponding to each topoedge.\n\nnum_nodes_per_edge_zonelet: Iterable[int], optional\n\nNumber of nodes per edge zonelet.\n\nnode_coords: Iterable[float], optional\n\nNode coordinates describing edges of edge zonelet.\n\nnum_edge_list_per_edge_zonelet: Iterable[int], optional\n\nNumber of edge list per edge zonelet.\n\nedge_list: Iterable[int], optional\n\nEdge list describing connectivity of node coordinates.\n\nnum_edges_per_edge_zonelet: Iterable[int], optional\n\nNumber of edges per edge zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.smooth_size_transition.html#smooth_size_transition","title":"smooth_size_transition","text":"smooth_size_transition\n\n\n\nproperty SurferParams.smooth_size_transition: bool\n\nOption to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nNotes\n\nInput facets or mesh with finer sizes compared to neighboring face edge sizes are required for this option to work.\n\nValid min, max sizes and growth rate are required to include the neighboring face edges sizes in sizing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod StitchType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nFuseOption.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.edge_mesh_constant_size.html#edge_mesh_constant_size","title":"edge_mesh_constant_size","text":"edge_mesh_constant_size\n\n\n\nproperty DetectAndTreatHolesParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ProximitySizingParams.set_default(min=None, max=None, growth_rate=None, elements_per_gap=None, ignore_self_proximity=None, ignore_orientation=None)\n\nSet the default values of the ProximitySizingParams object.\n\nParameters\n\nmin: float, optional\n\nMinimum size used for computing edge and face size using proximity size control.\n\nmax: float, optional\n\nMaximum size used for computing edge and face size using proximity size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nelements_per_gap: float, optional\n\nThe number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\nignore_self_proximity: bool, optional\n\nIgnore proximity within zonelets.\n\nignore_orientation: bool, optional\n\nThe ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoiSizingParams.html#soisizingparams","title":"SoiSizingParams","text":"SoiSizingParams\n\n\n\nclass ansys.meshing.prime.SoiSizingParams(model=None, centers=None, radius=None, max=None, growth_rate=None, json_data=None, **kwargs)\n\nParameters for sphere of influence size control.\n\nParameters\n\nmodel: Model\n\nModel to create a SoiSizingParams object with default parameters.\n\ncenters: Iterable[float], optional\n\nCenters of the spheres within which the size is limited to the specified max value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nradius: float, optional\n\nRadius of the sphere within which the size is limited to the specified max value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmax: float, optional\n\nMaximum size within the sphere.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate: float, optional\n\nThe rate at which size grows outwards from the sphere boundary.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a SoiSizingParams object with provided parameters.\n\nExamples\n\n>>> soi_sizing_params = prime.SoiSizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.add_scope.html#add_scope","title":"add_scope","text":"add_scope\n\n\n\nPrimePlotter.add_scope(model, scope, update=False)\n\nAdd a scope to the plotter.\n\nParameters\n\nmodel\n\nModel\n\nModel to add to the plotter.\n\nscope\n\nprime.ScopeDefinition\n\nScope to add to the plotter.\n\nupdate\n\nbool, default: python:False\n\nWhether to update the display.\n\nReturn type\n\nNone"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.add_scope.html#examples-using-primeplotteradd_scope","title":"add_scope > Examples using PrimePlotter.add_scope","text":"Examples using PrimePlotter.add_scope\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.overlap_count.html#overlap_count","title":"overlap_count","text":"overlap_count\n\n\n\nproperty WrapperImproveQualityParams.overlap_count: int\n\nFace count of non-manifold overlap."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenResults.body_names.html#body_names","title":"body_names","text":"body_names\n\n\n\nproperty ComponentChildrenResults.body_names: List[str]\n\nNames of bodies that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty DeleteMeshResults.error_code: ErrorCode\n\nError code associated with the failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateShellBLResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateShellBLResults.print_default()\n\nPrint the default values of CreateShellBLResults object.\n\nExamples\n\n>>> CreateShellBLResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSeparateBlocksFormatType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"examples/index.html#examples","title":"Examples","text":"Examples\n\nThese examples show how to use PyPrimeMesh to prepare meshes.\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_12_import_from_pygeometry.py"},{"objectID":"Home","href":"examples/index.html#examples-using-beta-apis","title":"Examples > Examples using beta APIs","text":"Examples using beta APIs\n\nThese examples use beta APIs and as such their behavior and implementation may change in future.\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"examples/index.html#miscellaneous-examples","title":"Examples > Miscellaneous examples","text":"Miscellaneous examples\n\nThese examples provide tips and tricks for using PyPrimeMesh.\n\nsphx_glr_examples_gallery_examples_misc_example_template.py\n\n\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetLeakPreventionsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SetLeakPreventionsResults.set_default(error_code=None, ids=None)\n\nSet the default values of the SetLeakPreventionsResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the set leak preventions.\n\nids: Iterable[int], optional\n\nIds of added leak prevention controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.n_iterations_per_node.html#n_iterations_per_node","title":"n_iterations_per_node","text":"n_iterations_per_node\n\n\n\nproperty AutoNodeMoveParams.n_iterations_per_node: int\n\nNumber of iterations per node to be moved."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Client.html#client","title":"Client","text":"Client\n\n\n\nclass ansys.meshing.prime.Client(*, server_process=None, ip='127.0.0.1', port=50055, timeout=20.0, credentials=None, communicator_type='grpc', **kwargs)\n\nProvides the Client class for PyPrimeMesh.\n\nParameters\n\nserver_process\n\nAny, optional\n\nServer process in the system. The default is None.\n\nip\n\npython:str, optional\n\nIP address where the server is located. The default is defaults.ip().\n\nport\n\npython:int, optional\n\nPort where the server is deployed. The default is defaults.port().\n\ntimeout\n\npython:float, optional\n\nMaximum time to wait for connection. The default is defaults.connection_timeout().\n\ncredentials\n\nAny, optional\n\nCredentials to connect to the server. The default is None.\n\nRaises\n\nValueError\n\nFailed to load the communicator.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Client.html#examples-using-client","title":"Client > Examples using Client","text":"Examples using Client\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ResolveIntersectionsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ResolveIntersectionsParams.print_default()\n\nPrint the default values of ResolveIntersectionsParams object.\n\nExamples\n\n>>> ResolveIntersectionsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentCaseParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportFluentCaseParams.set_default(append=None)\n\nSet the default values of the ImportFluentCaseParams object.\n\nParameters\n\nappend: bool, optional\n\nOption to append imported case instead of resetting model to imported case."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplitParams.html#splitparams","title":"SplitParams","text":"SplitParams\n\n\n\nclass ansys.meshing.prime.SplitParams(model=None, split_ratio=None, json_data=None, **kwargs)\n\nParameters to split face elements at longest edge.\n\nParameters\n\nmodel: Model\n\nModel to create a SplitParams object with default parameters.\n\nsplit_ratio: float, optional\n\nMinimum ratio of split edge length to original edge length.\n\njson_data: dict, optional\n\nJSON dictionary to create a SplitParams object with provided parameters.\n\nExamples\n\n>>> split_params = prime.SplitParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.FREEFREE.html#freefree","title":"FREEFREE","text":"FREEFREE\n\n\n\nStitchType.FREEFREE = 1\n\nStitch surfaces at free boundary edges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Surfer.html#surfer","title":"Surfer","text":"Surfer\n\n\n\nclass ansys.meshing.prime.Surfer(model)\n\nGenerates surface mesh.\n\nPerforms surface meshing using various surface meshing algorithms on topofaces or face zonelets.\nFor example, constant size or volumetric size surface meshing.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create Surfer object.\n\npart_id\n\npython:int\n\nId of the part.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Surfer.html#examples-using-surfer","title":"Surfer > Examples using Surfer","text":"Examples using Surfer\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic AutoNodeMoveParams.set_default(quality_measure=None, target_quality=None, dihedral_angle=None, n_iterations_per_node=None, restrict_boundary_nodes_along_surface=None, n_attempts=None)\n\nSet the default values of the AutoNodeMoveParams object.\n\nParameters\n\nquality_measure: CellQualityMeasure, optional\n\nSpecify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\ntarget_quality: float, optional\n\nSpecify target quality used for the mesh improvement based on specified quality measure.\n\ndihedral_angle: float, optional\n\nDihedral angle used to mantain features of boundary face zonelets.\n\nn_iterations_per_node: int, optional\n\nNumber of iterations per node to be moved.\n\nrestrict_boundary_nodes_along_surface: bool, optional\n\nOption to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\nn_attempts: int, optional\n\nNumber of attempts to improve specified quality measure by node movement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod MaterialPointType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetSizingResults.html#setsizingresults","title":"SetSizingResults","text":"SetSizingResults\n\n\n\nclass ansys.meshing.prime.SetSizingResults(model=None, warning_codes=None, error_code=None, json_data=None, **kwargs)\n\nResult associated with the different set sizing parameters.\n\nParameters\n\nmodel: Model\n\nModel to create a SetSizingResults object with default parameters.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the set sizing parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the set sizing parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a SetSizingResults object with provided parameters.\n\nExamples\n\n>>> set_sizing_results = prime.SetSizingResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_poly_cells.html#n_poly_cells","title":"n_poly_cells","text":"n_poly_cells\n\n\n\nproperty PartSummaryResults.n_poly_cells: int\n\nNumber of polyhedral cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.FACEZONELETS.html#facezonelets","title":"FACEZONELETS","text":"FACEZONELETS\n\n\n\nScopeEntity.FACEZONELETS = 1\n\nEvaluate scope to get the face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SweepType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.imag.html#imag","title":"imag","text":"imag\n\n\n\nAdvancedSurferSetup.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.html#prismcontroloffsettype","title":"PrismControlOffsetType","text":"PrismControlOffsetType\n\n\n\nclass ansys.meshing.prime.PrismControlOffsetType(*values)\n\nOffset type for prism control.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.html#examples-using-prismcontroloffsettype","title":"PrismControlOffsetType > Examples using PrismControlOffsetType","text":"Examples using PrismControlOffsetType\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MergeBoundaryNodesParams.set_default(tolerance=None, use_absolute_tolerance=None, merge_node_type=None)\n\nSet the default values of the MergeBoundaryNodesParams object.\n\nParameters\n\ntolerance: float, optional\n\nDistance tolerance for merging boundary nodes.\n\nuse_absolute_tolerance: bool, optional\n\nIndicates whether the tolerance provided is an absolute value or not.\n\nmerge_node_type: MergeNodeType, optional\n\nType of nodes to be merged."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SPHEREATINVALIDNORMALNODESFAILED.html#sphereatinvalidnormalnodesfailed","title":"SPHEREATINVALIDNORMALNODESFAILED","text":"SPHEREATINVALIDNORMALNODESFAILED\n\n\n\nErrorCode.SPHEREATINVALIDNORMALNODESFAILED = 350\n\nSphere creation at invalid normals failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.write_size_field.html#write_size_field","title":"write_size_field","text":"write_size_field\n\n\n\nFileIO.write_size_field(file_name, params)\n\nWrite a PyPrimeMesh size field (PSF) file to a file on disk.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the size field file on disk.\n\nparams\n\nWriteSizeFieldParams\n\nParameters for writing the size field file.\n\nReturns\n\n:\n\n\n\nFileWriteResults\n\nResults from writing the size field file.\n\nReturn type\n\nFileWriteResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.WriteSizeFieldParams(model=model)\n>>> results = file_io.write_size_field(\"/tmp/my_prime_sizefield.psf\", params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.min_quality.html#min_quality","title":"min_quality","text":"min_quality\n\n\n\nproperty SurfaceQualityResult.min_quality: float\n\nMinimum value of quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveResult.n_face_intersections_found.html#n_face_intersections_found","title":"n_face_intersections_found","text":"n_face_intersections_found\n\n\n\nproperty WrapperImproveResult.n_face_intersections_found: int\n\nNumber of self intersections found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.get_adjacent_topo_faces_of_topo_faces.html#get_adjacent_topo_faces_of_topo_faces","title":"get_adjacent_topo_faces_of_topo_faces","text":"get_adjacent_topo_faces_of_topo_faces\n\n\n\nTopoData.get_adjacent_topo_faces_of_topo_faces(topo_faces)\n\nGet the adjacent topofaces for the provided topoface ids.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of the topoface.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of adjacent topoface ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_faces_of_topo_faces = topo_data.get_adjacent_topo_faces_of_topo_faces(topo_faces)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDPRISMCONTROLS.html#invalidprismcontrols","title":"INVALIDPRISMCONTROLS","text":"INVALIDPRISMCONTROLS\n\n\n\nErrorCode.INVALIDPRISMCONTROLS = 111\n\nInvalid prism controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySelfIntersectionParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchBySelfIntersectionParams.set_default()\n\nSet the default values of the SearchBySelfIntersectionParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_INVALIDLEAKPREVENTIONCONTROLINPUTS.html#wrappercontrol_invalidleakpreventioncontrolinputs","title":"WRAPPERCONTROL_INVALIDLEAKPREVENTIONCONTROLINPUTS","text":"WRAPPERCONTROL_INVALIDLEAKPREVENTIONCONTROLINPUTS\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDLEAKPREVENTIONCONTROLINPUTS = 3424\n\nLeak prevention control specified under wrapper is invalid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.id.html#id","title":"id","text":"id\n\n\n\nproperty Model.id\n\nGet the id of Model."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nLabelToZoneMethod.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_INCORRECTCONTROLPOINTSIZEWRTINPUT.html#iga_incorrectcontrolpointsizewrtinput","title":"IGA_INCORRECTCONTROLPOINTSIZEWRTINPUT","text":"IGA_INCORRECTCONTROLPOINTSIZEWRTINPUT\n\n\n\nErrorCode.IGA_INCORRECTCONTROLPOINTSIZEWRTINPUT = 2402\n\nIncorrect control point size with respect to mesh size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportCadResults.print_default()\n\nPrint the default values of ImportCadResults object.\n\nExamples\n\n>>> ImportCadResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsResults.volume.html#volume","title":"volume","text":"volume\n\n\n\nproperty CellStatisticsResults.volume: float\n\nCumulative volume of all the cell elements of selected entities."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMEMESHNOTSUPPORTEDWITHFACEBASEDDATABASE.html#thinvolumemeshnotsupportedwithfacebaseddatabase","title":"THINVOLUMEMESHNOTSUPPORTEDWITHFACEBASEDDATABASE","text":"THINVOLUMEMESHNOTSUPPORTEDWITHFACEBASEDDATABASE\n\n\n\nErrorCode.THINVOLUMEMESHNOTSUPPORTEDWITHFACEBASEDDATABASE = 12112\n\nThin volume mesh is not supported with face based database."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneEdgeBiasingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MultiZoneEdgeBiasingParams.print_default()\n\nPrint the default values of MultiZoneEdgeBiasingParams object.\n\nExamples\n\n>>> MultiZoneEdgeBiasingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_toy_car_pmdat.html#download_toy_car_pmdat","title":"download_toy_car_pmdat","text":"download_toy_car_pmdat\n\n\n\nansys.meshing.prime.examples.download_toy_car_pmdat(destination=None, force=False)\n\nDownload the PMDAT file for the toy car example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(toy_car, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatFeaturesParams.detect_and_treat_holes.html#detect_and_treat_holes","title":"detect_and_treat_holes","text":"detect_and_treat_holes\n\n\n\nproperty DetectAndTreatFeaturesParams.detect_and_treat_holes: bool\n\nOption to detect and treat holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zones_of_name_pattern.html#get_face_zones_of_name_pattern","title":"get_face_zones_of_name_pattern","text":"get_face_zones_of_name_pattern\n\n\n\nPart.get_face_zones_of_name_pattern(zone_name_pattern, name_pattern_params)\n\nGet ids of face zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern\n\npython:str\n\nName pattern to be matched with zone name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match zone name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn list of face zone ids matching the zone name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> zones = part.get_face_zones_of_name_pattern(\"wall*\", name_pattern_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nLSDynaAnalysisType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nFuseOption.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenResults.component_ids.html#component_ids","title":"component_ids","text":"component_ids\n\n\n\nproperty ComponentChildrenResults.component_ids: Iterable[int]\n\nIds of components that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRITEMESHFAILED.html#writemeshfailed","title":"WRITEMESHFAILED","text":"WRITEMESHFAILED\n\n\n\nErrorCode.WRITEMESHFAILED = 501\n\nWriting mesh file failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.name.html#name","title":"name","text":"name\n\n\n\nproperty MultiZoneControl.name\n\nGet the name of MultiZoneControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nEdgeConnectType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControlGrowthParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty ShellBLControlGrowthParams.growth_rate: float\n\nRatio of height of the current layer to previous layer.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.create_periodic_control.html#create_periodic_control","title":"create_periodic_control","text":"create_periodic_control\n\n\n\nControlData.create_periodic_control()\n\nCreate a periodic control.\n\nReturns\n\n:\n\n\n\nPeriodicControl\n\nPeriodic control.\n\nReturn type\n\nPeriodicControl\n\nExamples\n\n>>> periodic_control = model.control_data.create_periodic_control()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNSUPPORTEDFILEEXTENSIONFORSIZEFIELD.html#unsupportedfileextensionforsizefield","title":"UNSUPPORTEDFILEEXTENSIONFORSIZEFIELD","text":"UNSUPPORTEDFILEEXTENSIONFORSIZEFIELD\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORSIZEFIELD = 9006\n\nProvided file extension is not supported. Supported extensions are .psf and .psf.gz."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.size_control_ids.html#size_control_ids","title":"size_control_ids","text":"size_control_ids\n\n\n\nproperty MeshStackerParams.size_control_ids: Iterable[int]\n\nList of size control ids to be respected by stacker. Stacker respects all supported controls by default."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenResults.html#componentchildrenresults","title":"ComponentChildrenResults","text":"ComponentChildrenResults\n\n\n\nclass ansys.meshing.prime.ComponentChildrenResults(model=None, component_ids=None, component_names=None, body_ids=None, body_names=None, json_data=None, **kwargs)\n\nResults associated with querying child components.\n\nParameters\n\nmodel: Model\n\nModel to create a ComponentChildrenResults object with default parameters.\n\ncomponent_ids: Iterable[int], optional\n\nIds of components that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncomponent_names: List[str], optional\n\nNames of components that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nbody_ids: Iterable[int], optional\n\nIds of bodies that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nbody_names: List[str], optional\n\nNames of bodies that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ComponentChildrenResults object with provided parameters.\n\nExamples\n\n>>> component_children_results = prime.ComponentChildrenResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.evaluation_type.html#evaluation_type","title":"evaluation_type","text":"evaluation_type\n\n\n\nproperty ScopeDefinition.evaluation_type: ScopeEvaluationType\n\nEvaluation type to scope entities. The default is set to labels."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineTetMeshParams.html#refinetetmeshparams","title":"RefineTetMeshParams","text":"RefineTetMeshParams\n\n\n\nclass ansys.meshing.prime.RefineTetMeshParams(model=None, nisr=None, niss=None, nist=None, tolerance=None, json_data=None, **kwargs)\n\nParameters for meshing the solid spline.\n\nParameters\n\nmodel: Model\n\nModel to create a RefineTetMeshParams object with default parameters.\n\nnisr: int, optional\n\nInterpolation elements in the local r-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nniss: int, optional\n\nInterpolation elements in the local s-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nnist: int, optional\n\nInterpolation elements in the local t-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ntolerance: float, optional\n\nTolerance for boundary refinement.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a RefineTetMeshParams object with provided parameters.\n\nExamples\n\n>>> refine_tet_mesh_params = prime.RefineTetMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesParams.create_zones_type.html#create_zones_type","title":"create_zones_type","text":"create_zones_type\n\n\n\nproperty ComputeVolumesParams.create_zones_type: CreateVolumeZonesType\n\nOption to control volume zone creation for volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.target_quality.html#target_quality","title":"target_quality","text":"target_quality\n\n\n\nproperty AutoNodeMoveParams.target_quality: float\n\nSpecify target quality used for the mesh improvement based on specified quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.real.html#real","title":"real","text":"real\n\n\n\nSurfaceFeatureType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nBCPairType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.partial_defeature.html#partial_defeature","title":"partial_defeature","text":"partial_defeature\n\n\n\nproperty DefeatureTopologyParams.partial_defeature: bool\n\nOption to partial defeature.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCdbSimulationType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.prism_control_ids.html#prism_control_ids","title":"prism_control_ids","text":"prism_control_ids\n\n\n\nproperty AutoMeshParams.prism_control_ids: Iterable[int]\n\nSet prism control ids."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNSUPPORTEDFILEEXTENSIONFORPMDAT.html#unsupportedfileextensionforpmdat","title":"UNSUPPORTEDFILEEXTENSIONFORPMDAT","text":"UNSUPPORTEDFILEEXTENSIONFORPMDAT\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORPMDAT = 9001\n\nProvided file extension is not supported. Supported extensions are .pmdat and .pmdat.gz."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetMeshSplineParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TetMeshSplineParams.print_default()\n\nPrint the default values of TetMeshSplineParams object.\n\nExamples\n\n>>> TetMeshSplineParams.print_default()"},{"objectID":"Home","href":"user_guide/surfer.html#surface-meshing","title":"Surface meshing","text":"Surface meshing\n\nThe Surfer class enables you to perform surface meshing using\ndifferent surface meshing algorithms on TopoFaces or face zonelets. Surface meshing considers many\nparameters, such as size field type, minimum size, maximum size, growth rate, and transition type,\nwhile meshing TopoFaces or face zonelets.\n\nSurface meshing with constant and variable sizing with tri/quad mesh can be generated using\nthe Mesh.surface_mesh() method in the Lucid API."},{"objectID":"Home","href":"user_guide/surfer.html#surface-meshing-geometrytopology","title":"Surface meshing > Surface meshing geometry/topology","text":"Surface meshing geometry/topology\n\nThe following example shows how to perform these steps:\n\nImport topology-based geometry (SCDOC) files and visualize the model.\n\nSurface mesh the TopoFaces with constant size.\n\nStart the PyPrimeMesh client and import the CAD geometry (SCDOC) file:\n\nInitialize surfer parameters and generate surface mesh on TopoFaces:"},{"objectID":"Home","href":"user_guide/surfer.html#remesh-surfaces","title":"Surface meshing > Remesh surfaces","text":"Remesh surfaces\n\nThis example shows you to perform these steps:\n\nImport a faceted geometry (STL) file and visualize the model.\n\nCreate curvature size control and compute a volumetric size field. (For more information,\nsee ref_index_sizing.)\n\nRemesh the STL surface mesh.\n\nStart the PyPrimeMesh client and import the faceted geometry (STL) file:\n\nNow that the CAD file is imported, display the model using graphics module:\n\nPrint the results of part summary:\n\nSet the global sizing parameters to initialize size control parameters (with curvature refinement):\n\nCompute the volumetric size field based on the size controls:\n\nInitialize surfer parameters and generate a surface mesh on face zonelets:"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MergePartsParams.set_default(merged_part_suggested_name=None)\n\nSet the default values of the MergePartsParams object.\n\nParameters\n\nmerged_part_suggested_name: str, optional\n\nSuggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryResults.success.html#success","title":"success","text":"success\n\n\n\nproperty ProjectOnGeometryResults.success: bool\n\nDefines the operation was successful or not.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCLOSEGAPSFAILED.html#wrapperclosegapsfailed","title":"WRAPPERCLOSEGAPSFAILED","text":"WRAPPERCLOSEGAPSFAILED\n\n\n\nErrorCode.WRAPPERCLOSEGAPSFAILED = 3442\n\nWrapper gap closing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSizingParams.max_size.html#max_size","title":"max_size","text":"max_size\n\n\n\nproperty MultiZoneSizingParams.max_size: float\n\nDefines global maximum mesh size.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddToZoneResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty AddToZoneResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the add to zone operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nScopeExpressionType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchByQualityResults.set_default(n_found=None, error_code=None, max_quality=None, min_quality=None)\n\nSet the default values of the SearchByQualityResults object.\n\nParameters\n\nn_found: int, optional\n\nNumber of face elements found by search for given quality limit.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nmax_quality: float, optional\n\nMaximum quality found by search.\n\nmin_quality: float, optional\n\nMinimum quality found by search."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsParams.html#refineatcontactsparams","title":"RefineAtContactsParams","text":"RefineAtContactsParams\n\n\n\nclass ansys.meshing.prime.RefineAtContactsParams(model=None, contact_tolerance=None, relative_tolerance=None, refine_max_size=None, project_on_geometry=None, json_data=None, **kwargs)\n\nParameters to refine face elements in contact.\n\nParameters\n\nmodel: Model\n\nModel to create a RefineAtContactsParams object with default parameters.\n\ncontact_tolerance: float, optional\n\nMaximum tolerance used to identify face elements as contacts.\n\nrelative_tolerance: bool, optional\n\nOption to specify the contact tolerance is relative or absolute.\n\nrefine_max_size: float, optional\n\nMaximum size used to refine contact face elements.\n\nproject_on_geometry: bool, optional\n\nProject on geometry on remesh.\n\njson_data: dict, optional\n\nJSON dictionary to create a RefineAtContactsParams object with provided parameters.\n\nExamples\n\n>>> refine_at_contacts_params = prime.RefineAtContactsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteResults.html#deleteresults","title":"DeleteResults","text":"DeleteResults\n\n\n\nclass ansys.meshing.prime.DeleteResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with the deletion of items.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteResults object with provided parameters.\n\nExamples\n\n>>> delete_results = prime.DeleteResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_size_field_name.html#get_size_field_name","title":"get_size_field_name","text":"get_size_field_name\n\n\n\nModel.get_size_field_name(size_field_id)\n\nGets the name of size field with the given id.\n\nParameters\n\nsize_field_id\n\npython:int\n\nSize field id.\n\nReturns\n\n:\n\n\n\npython:str\n\nReturns the name of the size field.\n\nReturn type\n\nstr\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> model = client.model\n>>> model.get_size_field_name(size_field_id)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.delete_zonelets.html#delete_zonelets","title":"delete_zonelets","text":"delete_zonelets\n\n\n\nPart.delete_zonelets(zonelets)\n\nDelete given face zonelets.\n\nParameters\n\nzonelets\n\nIterable[python:int]\n\nIds of zonelets to be deleted.\n\nReturns\n\n:\n\n\n\nDeleteResults\n\nReturn DeleteResults.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = part.delete_zonelets(zonelets)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.delete_zonelets.html#examples-using-partdelete_zonelets","title":"delete_zonelets > Examples using Part.delete_zonelets","text":"Examples using Part.delete_zonelets\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByInvalidNormalsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchByInvalidNormalsResults.print_default()\n\nPrint the default values of SearchByInvalidNormalsResults object.\n\nExamples\n\n>>> SearchByInvalidNormalsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveLabelResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic RemoveLabelResults.set_default(error_code=None)\n\nSet the default values of the RemoveLabelResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the remove label operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SmoothDihedralFaceNodesResults.error_code: ErrorCode\n\nError Code associated with creating offset surface."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.feature_angle.html#feature_angle","title":"feature_angle","text":"feature_angle\n\n\n\nproperty HexToSplineParams.feature_angle: float\n\nAngle to capture the feature.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.JOINEDZONELETSFROMMULTIPLEVOLUMES.html#joinedzoneletsfrommultiplevolumes","title":"JOINEDZONELETSFROMMULTIPLEVOLUMES","text":"JOINEDZONELETSFROMMULTIPLEVOLUMES\n\n\n\nWarningCode.JOINEDZONELETSFROMMULTIPLEVOLUMES = 5605\n\nJoined zonelets from more than two volumes. The volumes are not auto updated on the zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.measure_name.html#measure_name","title":"measure_name","text":"measure_name\n\n\n\nproperty VolumeQualityResultsPart.measure_name: str\n\nName of the cell quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SCAFFOLDERBADINPUTPARAMS.html#scaffolderbadinputparams","title":"SCAFFOLDERBADINPUTPARAMS","text":"SCAFFOLDERBADINPUTPARAMS\n\n\n\nErrorCode.SCAFFOLDERBADINPUTPARAMS = 52\n\nIncorrect input parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nBCPairType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectParams.use_absolute_tolerance.html#use_absolute_tolerance","title":"use_absolute_tolerance","text":"use_absolute_tolerance\n\n\n\nproperty IntersectParams.use_absolute_tolerance: bool\n\nTrue if tolerance provided is absolute value."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsResult.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty WrapperPatchFlowRegionsResult.error_code: ErrorCode\n\nError code associated with a patch holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPair.html#matchpair","title":"MatchPair","text":"MatchPair\n\n\n\nclass ansys.meshing.prime.MatchPair(model=None, source_surfaces=None, target_surfaces=None, target_type=None, bc_pairs=None, json_data=None, **kwargs)\n\nMatch pair to specify sources, targets for match morphing. Included boundary conditions specification.\n\nParameters\n\nmodel: Model\n\nModel to create a MatchPair object with default parameters.\n\nsource_surfaces: Iterable[int], optional\n\nIds of source surfaces.\n\ntarget_surfaces: Iterable[int], optional\n\nIds of target surfaces.\n\ntarget_type: MatchPairTargetType, optional\n\nOption to specify target surface type.\n\nbc_pairs: List[BCPair], optional\n\nArray of boundary condition pairs.\n\njson_data: dict, optional\n\nJSON dictionary to create a MatchPair object with provided parameters.\n\nExamples\n\n>>> match_pair = prime.MatchPair(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPair.html#examples-using-matchpair","title":"MatchPair > Examples using MatchPair","text":"Examples using MatchPair\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.html#hextosplineparams","title":"HexToSplineParams","text":"HexToSplineParams\n\n\n\nclass ansys.meshing.prime.HexToSplineParams(model=None, feature_capture_type=None, feature_angle=None, corner_angle=None, continuity=None, project_on_geometry=None, use_projection_scope=None, projection_scope=None, json_data=None, **kwargs)\n\nParameters to control conversion of hex mesh to spline.\n\nParameters\n\nmodel: Model\n\nModel to create a HexToSplineParams object with default parameters.\n\nfeature_capture_type: SplineFeatureCaptureType, optional\n\nFeature capture options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfeature_angle: float, optional\n\nAngle to capture the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncorner_angle: float, optional\n\nCorner angle of the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncontinuity: SplineContinuityType, optional\n\nSpline Continuity options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry: bool, optional\n\nOption to project on geometry.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nuse_projection_scope: bool, optional\n\nOption to use projection scope.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nprojection_scope: ScopeDefinition, optional\n\nScope to evaluate entities for projection.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a HexToSplineParams object with provided parameters.\n\nExamples\n\n>>> hex_to_spline_params = prime.HexToSplineParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.html#cellzonelettype","title":"CellZoneletType","text":"CellZoneletType\n\n\n\nclass ansys.meshing.prime.CellZoneletType(*values)\n\nTypes of cell zonelet.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.html#examples-using-cellzonelettype","title":"CellZoneletType > Examples using CellZoneletType","text":"Examples using CellZoneletType\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderSplitResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ScaffolderSplitResults.set_default(new_faces=None, error_code=None)\n\nSet the default values of the ScaffolderSplitResults object.\n\nParameters\n\nnew_faces: Iterable[int], optional\n\nTopofaces created after split operation.\n\nerror_code: ErrorCode, optional\n\nError code associated with split topofaces operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetParamsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SetParamsResults.set_default(error_code=None, warning_code=None)\n\nSet the default values of the SetParamsResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the set parameters operation.\n\nwarning_code: WarningCode, optional\n\nWarning code associated with the set parameters operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nVolumeNamingType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nScaffolderRepairMode.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.html#scaffolderparams","title":"ScaffolderParams","text":"ScaffolderParams\n\n\n\nclass ansys.meshing.prime.ScaffolderParams(model=None, absolute_dist_tol=None, repair_mode=None, size_field_type=None, intersection_control_mask=None, edge_merge_control=None, constant_mesh_size=None, remove_holes_critical_radius=None, remove_slivers_abs_dist_tol_ratio=None, triangles_coplanar_angle_cos=None, json_data=None, **kwargs)\n\nParameters to control scaffold operation.\n\nParameters\n\nmodel: Model\n\nModel to create a ScaffolderParams object with default parameters.\n\nabsolute_dist_tol: float, optional\n\nDefines the maximum gap to connect.\n\nrepair_mode: ScaffolderRepairMode, optional\n\nDefines the mode to be used during repair or connect.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsize_field_type: int, optional\n\nSpecifies the type of size field used for scaffolding.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nintersection_control_mask: IntersectionMask, optional\n\nSpecifies the nature of intersection to be computed.\n\nedge_merge_control: int, optional\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nconstant_mesh_size: float, optional\n\nDefines the constant edge mesh size to check connection.\n\nremove_holes_critical_radius: float, optional\n\nDefines the maximum radius of holes to be removed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nremove_slivers_abs_dist_tol_ratio: float, optional\n\nDefines the maximum aspect ratio to remove sliver faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ntriangles_coplanar_angle_cos: float, optional\n\nLower bound for cos angle to consider coplanar faces for scaffolding.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ScaffolderParams object with provided parameters.\n\nExamples\n\n>>> scaffolder_params = prime.ScaffolderParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.html#examples-using-scaffolderparams","title":"ScaffolderParams > Examples using ScaffolderParams","text":"Examples using ScaffolderParams\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsParams.html#mergezoneletsparams","title":"MergeZoneletsParams","text":"MergeZoneletsParams\n\n\n\nclass ansys.meshing.prime.MergeZoneletsParams(model=None, merge_small_zonelets_with_neighbors=None, element_count_limit=None, json_data=None, **kwargs)\n\nParameters to merge zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a MergeZoneletsParams object with default parameters.\n\nmerge_small_zonelets_with_neighbors: bool, optional\n\nMerge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes: Works better if zonelets are separated by region.\n\nelement_count_limit: int, optional\n\nElement count limit to identify small zonelets.\n\njson_data: dict, optional\n\nJSON dictionary to create a MergeZoneletsParams object with provided parameters.\n\nExamples\n\n>>> merge_zonelets_params = prime.MergeZoneletsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoiSizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty SoiSizingParams.growth_rate: float\n\nThe rate at which size grows outwards from the sphere boundary.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_QUADRATICMESHINPUT.html#iga_quadraticmeshinput","title":"IGA_QUADRATICMESHINPUT","text":"IGA_QUADRATICMESHINPUT\n\n\n\nErrorCode.IGA_QUADRATICMESHINPUT = 2416\n\nQuadratic mesh is not supported for solid spline creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesParams.volume_naming_type.html#volume_naming_type","title":"volume_naming_type","text":"volume_naming_type\n\n\n\nproperty ComputeVolumesParams.volume_naming_type: VolumeNamingType\n\nIndicates source type used to compute zone name for volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsResults.processing_time.html#processing_time","title":"processing_time","text":"processing_time\n\n\n\nproperty SubtractZoneletsResults.processing_time: float\n\nProcessing time for subtract operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic StitchParams.set_default(tolerance=None, use_absolute_tolerance=None, remesh=None, enable_multi_threading=None, type=None)\n\nSet the default values of the StitchParams object.\n\nParameters\n\ntolerance: float, optional\n\nDistance tolerance for stitching boundaries.\n\nuse_absolute_tolerance: bool, optional\n\nTrue if tolerance provided is absolute value.\n\nremesh: bool, optional\n\nRemesh at stitch connection.\n\nenable_multi_threading: bool, optional\n\nOption to run stitch in parallel using multithread.\n\ntype: StitchType, optional\n\nStitch type depending on nature of surface boundary edges to be stitched."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportMapdlCdbParams.set_default(drop_mid_nodes=None, append=None)\n\nSet the default values of the ImportMapdlCdbParams object.\n\nParameters\n\ndrop_mid_nodes: bool, optional\n\nOption to import quadratic mesh elements as linear by skipping mid nodes.\n\nappend: bool, optional\n\nOption to append imported cdb into existing model."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.feature_capture_type.html#feature_capture_type","title":"feature_capture_type","text":"feature_capture_type\n\n\n\nproperty HexToSplineParams.feature_capture_type: SplineFeatureCaptureType\n\nFeature capture options.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsResult.html#wrapperpatchflowregionsresult","title":"WrapperPatchFlowRegionsResult","text":"WrapperPatchFlowRegionsResult\n\n\n\nclass ansys.meshing.prime.WrapperPatchFlowRegionsResult(model=None, warning_codes=None, error_code=None, id=None, name=None, json_data=None, **kwargs)\n\nResult structure associated with patch holes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a WrapperPatchFlowRegionsResult object with default parameters.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the patch holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nerror_code: ErrorCode, optional\n\nError code associated with a patch holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nid: int, optional\n\nId of part created with hole patches.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nname: str, optional\n\nName of part created with hole patches.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a WrapperPatchFlowRegionsResult object with provided parameters.\n\nExamples\n\n>>> wrapper_patch_flow_regions_result = prime.WrapperPatchFlowRegionsResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.id.html#id","title":"id","text":"id\n\n\n\nproperty ThinVolumeControl.id\n\nGet the id of ThinVolumeControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXTRACTFEATURESBYINTERSECTIONFAILED.html#extractfeaturesbyintersectionfailed","title":"EXTRACTFEATURESBYINTERSECTIONFAILED","text":"EXTRACTFEATURESBYINTERSECTIONFAILED\n\n\n\nErrorCode.EXTRACTFEATURESBYINTERSECTIONFAILED = 1603\n\nFeature extraction by intersection failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nScopeExpressionType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.use_projection_scope.html#use_projection_scope","title":"use_projection_scope","text":"use_projection_scope\n\n\n\nproperty QuadToSplineParams.use_projection_scope: bool\n\nOption to use projection scope.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PeriodicControlParams.set_default(center=None, axis=None, angle=None)\n\nSet the default values of the PeriodicControlParams object.\n\nParameters\n\ncenter: Iterable[float], optional\n\nCenter coordinates.\n\naxis: Iterable[float], optional\n\nAxis vector coordinates.\n\nangle: float, optional\n\nAngle in degrees."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryResults.message.html#message","title":"message","text":"message\n\n\n\nproperty VolumeQualitySummaryResults.message: str\n\nVolume quality summary text."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty AutoMeshResults.error_code: ErrorCode\n\nProvides error message when automesh fails."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERIMPROVEFAILED.html#wrapperimprovefailed","title":"WRAPPERIMPROVEFAILED","text":"WRAPPERIMPROVEFAILED\n\n\n\nErrorCode.WRAPPERIMPROVEFAILED = 3416\n\nWrapper improve quality failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zonelets_of_volumes.html#get_face_zonelets_of_volumes","title":"get_face_zonelets_of_volumes","text":"get_face_zonelets_of_volumes\n\n\n\nPart.get_face_zonelets_of_volumes(volumes)\n\nGet the face zonelets of given volumes.\n\nParameters\n\nvolumes\n\nIterable[python:int]\n\nIds of volumes.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of face zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = part.get_face_zonelets_of_volumes(volumes)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zonelets_of_volumes.html#examples-using-partget_face_zonelets_of_volumes","title":"get_face_zonelets_of_volumes > Examples using Part.get_face_zonelets_of_volumes","text":"Examples using Part.get_face_zonelets_of_volumes\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXTRACTVOLUMESFAILED.html#extractvolumesfailed","title":"EXTRACTVOLUMESFAILED","text":"EXTRACTVOLUMESFAILED\n\n\n\nErrorCode.EXTRACTVOLUMESFAILED = 132\n\nExtract volumes failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATEEDGEZONELETFAILED.html#createedgezoneletfailed","title":"CREATEEDGEZONELETFAILED","text":"CREATEEDGEZONELETFAILED\n\n\n\nErrorCode.CREATEEDGEZONELETFAILED = 1602\n\nCreating edge zonelet failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.imprint_relative_range.html#imprint_relative_range","title":"imprint_relative_range","text":"imprint_relative_range\n\n\n\nproperty WrapParams.imprint_relative_range: float\n\nUsed to define relative range in imprinting in wrapping."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nBOIType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.delete_zone.html#delete_zone","title":"delete_zone","text":"delete_zone\n\n\n\nModel.delete_zone(zone_id)\n\nDeletes zone with the given id.\n\nParameters\n\nzone_id\n\npython:int\n\nId of the zone to be deleted.\n\nReturns\n\n:\n\n\n\nDeleteZoneResults\n\nReturns the DeleteZoneResults.\n\nReturn type\n\nDeleteZoneResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.delete_zone(1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FillHolesAtPlaneResults.print_default()\n\nPrint the default values of FillHolesAtPlaneResults object.\n\nExamples\n\n>>> FillHolesAtPlaneResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.UNIFORM.html#uniform","title":"UNIFORM","text":"UNIFORM\n\n\n\nPrismControlOffsetType.UNIFORM = 0\n\nOption to grow prism layers with uniform offset height based on first height."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.search_zonelets_by_quality.html#search_zonelets_by_quality","title":"search_zonelets_by_quality","text":"search_zonelets_by_quality\n\n\n\nSurfaceSearch.search_zonelets_by_quality(part_id, face_zonelets, register_id, params)\n\nSearch face zonelets with the provided quality parameters and applies register id on face elements found.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of the face zonelets whose element search is performed.\n\nregister_id\n\npython:int\n\nId used to register face elements found by the search.\n\nparams\n\nSearchByQualityParams\n\nQuality parameters used to search face elements.\n\nReturns\n\n:\n\n\n\nSearchByQualityResults\n\nReturns the SearchByQualityResults.\n\nReturn type\n\nSearchByQualityResults\n\nExamples\n\n>>> surf_search = prime.SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_quality(part_id, face_zonelets, register_id, prime.SearchByQualityParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessParams.fix_intersections.html#fix_intersections","title":"fix_intersections","text":"fix_intersections\n\n\n\nproperty AddThicknessParams.fix_intersections: bool\n\nFix intersections in concave regions."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCellQualityMeasure.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nEdgeConnectType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExtractFeatureParams.set_default(replace=None, feature_angle=None, separate_features=None, separation_angle=None, disconnect_with_faces=None, label_name=None, number_of_threads=None)\n\nSet the default values of the ExtractFeatureParams object.\n\nParameters\n\nreplace: bool, optional\n\nOption to replace existing edge zonelets with new extracted edge zonelets.\n\nfeature_angle: float, optional\n\nAngle used to capture face features to be  extracted as edges.\n\nseparate_features: bool, optional\n\nOption to separate extracted features.\n\nseparation_angle: float, optional\n\nAngle used to separate extracted features.\n\ndisconnect_with_faces: bool, optional\n\nOption to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\nlabel_name: str, optional\n\nLabel name to be assigned to extracted features.\n\nnumber_of_threads: int, optional\n\nNumber of threads used for multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.get_volume_scope.html#get_volume_scope","title":"get_volume_scope","text":"get_volume_scope\n\n\n\nPrismControl.get_volume_scope()\n\nGets the volume control scope.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = prism_control.get_volume_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddLabelResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty AddLabelResults.error_code: ErrorCode\n\nError code associated with the add label operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_quad_faces.html#n_quad_faces","title":"n_quad_faces","text":"n_quad_faces\n\n\n\nproperty PartSummaryResults.n_quad_faces: int\n\nNumber of quadrilateral faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCdbAnalysisType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.html#extractfeatureparams","title":"ExtractFeatureParams","text":"ExtractFeatureParams\n\n\n\nclass ansys.meshing.prime.ExtractFeatureParams(model=None, replace=None, feature_angle=None, separate_features=None, separation_angle=None, disconnect_with_faces=None, label_name=None, number_of_threads=None, json_data=None, **kwargs)\n\nParameter to control feature edge extraction.\n\nParameters\n\nmodel: Model\n\nModel to create a ExtractFeatureParams object with default parameters.\n\nreplace: bool, optional\n\nOption to replace existing edge zonelets with new extracted edge zonelets.\n\nfeature_angle: float, optional\n\nAngle used to capture face features to be  extracted as edges.\n\nseparate_features: bool, optional\n\nOption to separate extracted features.\n\nseparation_angle: float, optional\n\nAngle used to separate extracted features.\n\ndisconnect_with_faces: bool, optional\n\nOption to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\nlabel_name: str, optional\n\nLabel name to be assigned to extracted features.\n\nnumber_of_threads: int, optional\n\nNumber of threads used for multithreading.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExtractFeatureParams object with provided parameters.\n\nExamples\n\n>>> extract_feature_params = prime.ExtractFeatureParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.html#examples-using-extractfeatureparams","title":"ExtractFeatureParams > Examples using ExtractFeatureParams","text":"Examples using ExtractFeatureParams\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExtractTopoVolumesParams.set_default(zone_name=None)\n\nSet the default values of the ExtractTopoVolumesParams object.\n\nParameters\n\nzone_name: str, optional\n\nSpecifies zone name to associate extracted flow topovolumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripParams.feature_type.html#feature_type","title":"feature_type","text":"feature_type\n\n\n\nproperty SearchByThinStripParams.feature_type: SurfaceFeatureType\n\nUsed to identify thin strip of face elements based on the provided feature type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSplineResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty TrimmedSplineResults.error_code: ErrorCode\n\nError code if IGA operation is unsuccessful.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_summary.html#get_summary","title":"get_summary","text":"get_summary\n\n\n\nPart.get_summary(params)\n\nGet the part summary.\n\nProvides the part summary for the given parameters.\n\nParameters\n\nparams\n\nPartSummaryParams\n\nPart summary parameters.\n\nReturns\n\n:\n\n\n\nPartSummaryResults\n\nReturn the PartSummaryResults.\n\nReturn type\n\nPartSummaryResults\n\nExamples\n\n>>> results = part.get_summary(PartSummaryParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_summary.html#examples-using-partget_summary","title":"get_summary > Examples using Part.get_summary","text":"Examples using Part.get_summary\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSweepType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.FACEZONELETSWITHOUTVOLUMES.html#facezoneletswithoutvolumes","title":"FACEZONELETSWITHOUTVOLUMES","text":"FACEZONELETSWITHOUTVOLUMES\n\n\n\nWarningCode.FACEZONELETSWITHOUTVOLUMES = 5604\n\nFace zonelets have no volume associated to them."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PartSummaryParams.print_default()\n\nPrint the default values of PartSummaryParams object.\n\nExamples\n\n>>> PartSummaryParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod LabelToZoneMethod.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic RepairTopologyParams.print_default()\n\nPrint the default values of RepairTopologyParams object.\n\nExamples\n\n>>> RepairTopologyParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nMaterialPointType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic LocalSurferParams.set_default(min_angle=None, max_angle=None, size_field_type=None, min_size=None, max_size=None, growth_rate=None, constant_size=None, smooth_boundary=None, n_rings=None)\n\nSet the default values of the LocalSurferParams object.\n\nParameters\n\nmin_angle: float, optional\n\nMinimum feature angle limit used to identify and preserve features.\n\nmax_angle: float, optional\n\nMaximum feature angle limit used to identify and preserve features.\n\nsize_field_type: SizeFieldType, optional\n\nSize field type used to generate surface mesh.\n\nmin_size: float, optional\n\nMinimum size to be used in sizing for the surfer.\n\nmax_size: float, optional\n\nMaximum size to be used in sizing for the surfer.\n\ngrowth_rate: float, optional\n\nGrowth rate to be used to propagate sizes.\n\nconstant_size: float, optional\n\nConstant size to be used in case of constant size field.\n\nsmooth_boundary: bool, optional\n\nOption to extend local selection to get smooth boundary of selected elements.\n\nn_rings: int, optional\n\nNumber of rings to extend the registered face selection for remeshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleResult.html#topofillholeresult","title":"TopoFillHoleResult","text":"TopoFillHoleResult\n\n\n\nclass ansys.meshing.prime.TopoFillHoleResult(model=None, new_topo_faces_created=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with fill holes in topology operations.\n\nParameters\n\nmodel: Model\n\nModel to create a TopoFillHoleResult object with default parameters.\n\nnew_topo_faces_created: Iterable[int], optional\n\nIds of new topofaces created.\n\nerror_code: ErrorCode, optional\n\nError code associated with a wrap operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a TopoFillHoleResult object with provided parameters.\n\nExamples\n\n>>> topo_fill_hole_result = prime.TopoFillHoleResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nPrismControlOffsetType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.set_leak_preventions.html#set_leak_preventions","title":"set_leak_preventions","text":"set_leak_preventions\n\n\n\nWrapperControl.set_leak_preventions(params)\n\nSet leak preventions to the wrapper control.\n\nParameters\n\nparams\n\nLeakPreventionParamsArray\n\nList of leak prevention parameters.\n\nReturns\n\n:\n\n\n\nSetLeakPreventionsResults\n\nReturn the set leak prevention results.\n\nReturn type\n\nSetLeakPreventionsResults\n\nExamples\n\n>>> set_leak_prev_results = wrapper_control.set_leak_preventions([params])"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchMorphResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty MatchMorphResults.error_code: ErrorCode\n\nErrorcode associated with match morph operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateMaterialPointResults.set_default(id=None, assigned_name=None, error_code=None, warning_codes=None)\n\nSet the default values of the CreateMaterialPointResults object.\n\nParameters\n\nid: int, optional\n\nId of the material point created.\n\nassigned_name: str, optional\n\nAssigned name of the material point created.\n\nerror_code: ErrorCode, optional\n\nError code associated with create material point operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with create material point operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDFIRSTHEIGHT.html#invalidfirstheight","title":"INVALIDFIRSTHEIGHT","text":"INVALIDFIRSTHEIGHT\n\n\n\nErrorCode.INVALIDFIRSTHEIGHT = 126\n\nInvalid first height."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nErrorCode.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSpline.html#hextospline","title":"HexToSpline","text":"HexToSpline\n\n\n\nclass ansys.meshing.prime.HexToSpline(model)\n\nConverts all-hex mesh to spline.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create HexToSpline object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationResults.html#checkfacedeviationresults","title":"CheckFaceDeviationResults","text":"CheckFaceDeviationResults\n\n\n\nclass ansys.meshing.prime.CheckFaceDeviationResults(model=None, n_deviated=None, maximum_deviation=None, json_data=None, **kwargs)\n\nResult structure associated with the check face deviation operations.\n\nParameters\n\nmodel: Model\n\nModel to create a CheckFaceDeviationResults object with default parameters.\n\nn_deviated: int, optional\n\nNumber of faces with deviation.\n\nmaximum_deviation: float, optional\n\nMaximum deviation found.\n\njson_data: dict, optional\n\nJSON dictionary to create a CheckFaceDeviationResults object with provided parameters.\n\nExamples\n\n>>> check_face_deviation_results = prime.CheckFaceDeviationResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic UniformSolidSplineCreationParams.set_default(n_control_points_u=None, n_control_points_v=None, n_control_points_w=None, degree_u=None, degree_v=None, degree_w=None)\n\nSet the default values of the UniformSolidSplineCreationParams object.\n\nParameters\n\nn_control_points_u: int, optional\n\nNumber of control points in u direction.\n\nn_control_points_v: int, optional\n\nNumber of control points in v direction.\n\nn_control_points_w: int, optional\n\nNumber of control points in w direction.\n\ndegree_u: int, optional\n\nDegree in u direction.\n\ndegree_v: int, optional\n\nDegree in v direction.\n\ndegree_w: int, optional\n\nDegree in w direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSplineRefinementType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_num_compute_nodes.html#get_num_compute_nodes","title":"get_num_compute_nodes","text":"get_num_compute_nodes\n\n\n\nModel.get_num_compute_nodes()\n\nGet the number of compute nodes.\n\nReturns\n\n:\n\n\n\npython:int\n\nReturns the number of compute nodes.\n\nReturn type\n\nint\n\nExamples\n\n>>> model = client.model\n>>> num_compute_nodes = model.get_num_compute_nodes()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_dsco.html#download_multi_layer_quad_mesh_pcb_dsco","title":"download_multi_layer_quad_mesh_pcb_dsco","text":"download_multi_layer_quad_mesh_pcb_dsco\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_dsco(destination=None, force=False)\n\nDownload the DSCO file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"getting_started/index.html#getting-started","title":"Getting started","text":"Getting started\n\nPyPrimeMesh is a Python client for Ansys Prime Server,\nwhich provides core Ansys meshing technology.\n\nTo use PyPrimeMesh, you must have a local installation of Ansys 2023 R1 or later.\nThe Ansys version that you have installed dictates the features available to you.\n\nFor more information on getting a licensed copy of Ansys, visit the Ansys website.\n\nThe PyPrimeMesh client release has one-to-one compatibility with the Ansys Prime Server release.\nThat is, the PyPrimeMesh client is only compatible with its corresponding Ansys Prime Server.\n\nThis table provides compatibility information:\n\n\n\n\n\n\n\nPyPrimeMesh client release\n\nAnsys Prime Server release\n\nSupported python versions\n\n0.2.x\n\n0.3.x\n\n0.4.x\n\n0.5.x\n\n0.6.x\n\n0.7.x\n\n0.8.x\n\n0.9.x\n\n23.1.0 (2023 R1)\n\n23.1.1 (2023 R1 SP1)\n\n23.2.0 (2023 R2)\n\n24.1.0 (2024 R1)\n\n24.2.0 (2024 R2)\n\n25.1.0 (2025 R1)\n\n25.1.1 (2025 R1 SP1)/\n25.1.2 (2025 R1 SP2)\n\n25.2.0 (2025 R2)\n\n3.7 to 3.11\n\n3.7 to 3.11\n\n3.8 to 3.11\n\n3.8 to 3.11\n\n3.8 to 3.11\n\n3.10 to 3.12\n\n3.10 to 3.12\n\n3.10 to 3.13\n\n"},{"objectID":"Home","href":"getting_started/index.html#installation","title":"Getting started > Installation","text":"Installation\n\nThe ansys-meshing-prime package currently supports Python 3.10\nto Python 3.13 on the Windows and Linux operating systems.\n\nYou can install PyPrimeMesh with all dependencies directly from PyPI  with this command:\n\nAlternatively, you can clone this repository and install the client using these commands:\n\nThe preceding commands install all features that are important to development.\nTo install a basic version of the client, use this command instead:"},{"objectID":"Home","href":"getting_started/index.html#dependencies","title":"Getting started > Dependencies","text":"Dependencies\n\nYou must have Ansys 2023 R1 or later installed to have access to Ansys Prime\nServer. Optionally, CAD readers can be configured.\n\nAnsys Prime Server requires one of the following licenses to run. The system\nchecks out the first available license from the list in the following order:\n\nCFD PrepPost\n\nCFD PrepPost Pro\n\nMechanical Enterprise PrepPost\n\nMechanical Enterprise\n\nMechanical Pro\n\nMechanical Premium\n\nAnsys LS-DYNA"},{"objectID":"Home","href":"getting_started/index.html#launch-pyprimemesh","title":"Getting started > Launch PyPrimeMesh","text":"Launch PyPrimeMesh\n\nTo launch PyPrimeMesh, use this code:"},{"objectID":"Home","href":"getting_started/index.html#launching-pyprimemesh-through-docker","title":"Getting started > Launching PyPrimeMesh through docker","text":"Launching PyPrimeMesh through docker\n\nAnsys Prime Server is capable of being launched through docker.\nDocker is an open platform for developing, shipping, and running apps in a containerized way.\nContainers are standard units of software that package the code and all its dependencies.\nHence, the app runs quickly and reliably from one computing environment to another.\n\nAnsys Prime Server can be built as a Linux Docker container.\nHence, you should have a linux machine to run the Ansys Prime Server."},{"objectID":"Home","href":"getting_started/index.html#docker-for-linux-containers","title":"Getting started > Docker for Linux containers","text":"Docker for Linux containers\n\nTo run the Linux Docker container for the Ansys Prime Server,\nensure that you follow these steps when installing the Docker:\n\nInstall Docker Engine.\n\nRestart your machine and start Docker Engine after completing the installation.\n\nYour Docker engine supports running Linux Docker containers, you can build or install the Ansys Prime Server image.\n\nAnsys Prime Server uses Intel MPI library for performing meshing operations. Intel MPI library requires NUMA support.\nDocker desktop allows to run linux containers on windows using WSL. Existing Linux distributions used for WSL do not typically support NUMA.\nIt is expected that a custom Linux distribution would be required for WSL to run the Ansys Prime Server container to support NUMA.\nAnsys does not recommend you to run the Ansys Prime Server image without NUMA support."},{"objectID":"Home","href":"getting_started/index.html#build-or-install-the-ansys-prime-server-image","title":"Getting started > Build or install the Ansys Prime Server image","text":"Build or install the Ansys Prime Server image\n\nYou can install the Ansys Prime Server image in the following ways:\n\nDownload it from the GitHub Container Registry.\n\nBuild the Ansys Prime Server Linux container."},{"objectID":"Home","href":"getting_started/index.html#github-container-registry","title":"Getting started > GitHub container registry","text":"GitHub container registry\n\nYou should have write access to the repository or should be a members of the Ansys organization.\n\nAfter installing Docker on your machine, follow these steps to download the Linux Docker container\nfor the Ansys Prime Server and install this image.\n\nDownload the Docker image from the PyPrimeMesh repository on GitHub using your GitHub credentials.\n\nUse a GitHub personal access token with permission for reading packages to authorize Docker to access the PyPrimeMesh repository. For more information, see Managing your personal access tokens in the GitHub documentation.\n\nSave the token to a file using this command:\n\n\n\nAuthorize Docker to access the repository and run the commands for your OS.\n\nLinux:\n\n\n\nPull the Ansys Prime Server locally using Docker using the following command:\n\n"},{"objectID":"Home","href":"getting_started/index.html#build-the-ansys-prime-server-linux-container","title":"Getting started > Build the Ansys Prime Server linux container","text":"Build the Ansys Prime Server linux container\n\nYou can build the Ansys Prime Server Docker containers from the PyPrimeMesh repository docker folder.\nThe docker folder has the linux/Dockerfile that builds the Linux-based Docker image.\n\nAnsys Prime Server does not support building windows-based docker images.\n\nYou can build the docker image file as follows:\n\nBuild from available Ansys installation: Builds the Docker image using the Ansys installation available in the machine where the Docker image is being built."},{"objectID":"Home","href":"getting_started/index.html#prerequisites","title":"Getting started > Prerequisites","text":"Prerequisites\n\nEnsure that Docker is installed in your machine. If you do not have Docker available, see Docker for Linux containers."},{"objectID":"Home","href":"getting_started/index.html#build-from-available-ansys-installation","title":"Getting started > Build from available Ansys installation","text":"Build from available Ansys installation\n\nTo build your own image from your Ansys installation, follow these instructions:\n\nGo to the Docker folder in your local PyPrimeMesh repository.\n\nExecute the script with the following command (no specific location needed):\n\n\n\nFor example,\n\n\n\nCheck that the image has been created successfully.\n\nYou can view the docker image created with latest tag as follows:"},{"objectID":"Home","href":"getting_started/index.html#launch-the-ansys-prime-server","title":"Getting started > Launch the Ansys Prime Server","text":"Launch the Ansys Prime Server\n\nAnsys Prime Server can be launched using the PyPrimeMesh launcher.\nYou should set the following mandatory environment variable for launching the Ansys Prime Server:\n\nPYPRIMEMESH_LAUNCH_CONTAINER: Launches the Ansys Prime Server form the PyPrimeMesh container.\n\nPYPRIMEMESH_IMAGE_TAG: Latest version of the Ansys Prime Server docker image.\n\nANSYSLMD_LICENSE_FILE: License server required for launching the Ansys Prime Server."},{"objectID":"Home","href":"getting_started/index.html#setting-the-environment-variable","title":"Getting started > Setting the environment variable","text":"Setting the environment variable\n\nDefine the following general environment variables prior to using the Ansys Prime Server launcher.\n\nLinux\n\n\n\nPyPrimeMesh supports Docker image creation from 2025 R1 version."},{"objectID":"Home","href":"getting_started/index.html#launching-ansys-prime-server","title":"Getting started > Launching Ansys Prime Server","text":"Launching Ansys Prime Server\n\nEnsure that you have installed ansys-meshing-prime package before launching Ansys Prime Server.\nTo install ansys-meshing-prime package, refer Installation.\nAnsys Prime Server can be launched as follows:"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VolumetricSizeFieldComputeParams.set_default(enable_multi_threading=None, enable_periodicity=None, periodic_params=None, growth_rate_lower_bound=None)\n\nSet the default values of the VolumetricSizeFieldComputeParams object.\n\nParameters\n\nenable_multi_threading: bool, optional\n\nOption to compute volumetric size field in parallel using multithreads.\n\nenable_periodicity: bool, optional\n\nOption to enable periodic size field computations.\n\nperiodic_params: SFPeriodicParams, optional\n\nPeriodic parameters to compute the size field.\n\ngrowth_rate_lower_bound: float, optional\n\nLower bound for growth rate."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ScaffolderResults.set_default(n_incomplete_topo_faces=None, error_code=None)\n\nSet the default values of the ScaffolderResults object.\n\nParameters\n\nn_incomplete_topo_faces: int, optional\n\nNumber of topofaces failed in scaffold operation.\n\nerror_code: ErrorCode, optional\n\nError code associated with scaffold operation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#convert-data-when-importing-and-exporting-mesh-and-cad-formats","title":"Convert data when importing and exporting mesh and CAD formats","text":"Convert data when importing and exporting mesh and CAD formats\n\nSummary: This example shows how mesh and geometry formats are converted\nduring import and export."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#objective","title":"Convert data when importing and exporting mesh and CAD formats > Objective","text":"Objective\n\nThe objective is to illustrate how data is converted and passed during import\nand export of mesh and geometry."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#procedure","title":"Convert data when importing and exporting mesh and CAD formats > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance.\n\nInstantiate the meshing utilities from the lucid class.\n\nImport CAD geometry and review the imported entities.\n\nGenerate surface mesh with a constant mesh size of 2mm.\n\nGenerate volume mesh using tetrahedral elements and default settings .\n\nReview the entities to be exported to solvers.\n\nExport the mesh file as pmdat, cdb and cas format.\n\nImport the created solver files to review the entities as they are coming from the solvers.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#launch-ansys-prime-server","title":"Convert data when importing and exporting mesh and CAD formats > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules and\nlaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#import-geometry","title":"Convert data when importing and exporting mesh and CAD formats > Import geometry","text":"Import geometry\n\nDownload the CAD file “pyprime_block_import.fmd” and import its geometry\ninto PyPrimeMesh.\n\nDisplay part details by printing the model. The TopoPart’s\nname from model details is pyprime_block_import.\n\nAfter import of CAD model, within the topopart the facets from the CAD\nexists in the form of geom data. This can be seen in the image below.\n\nThe topology consists of the following TopoEntities , they are TopoEdges, TopoFaces\nand TopoVolumes.\n\nTopoEdge represent the curves/edges present in the CAD.\nIn this case there are 17 edges present in SpaceClaim are imported\nas 17 TopoEdges.\n\nTopoFace represent the surfaces/faces present in the CAD.\nThe 8 CAD Faces present in SpaceClaim are imported as 8 Topofaces in\nPyPrimeMesh.\n\nTopoVolume represent the solid volumes present in the CAD.\nSince there is only one solid body in SpaceClaim, this is imported as one Topovolume\nin PyPrimeMesh.\n\nNamed selections or groups in the CAD become labels after import. In this example ,\nthe Named Selection / Group named my_group in Spaceclaim is imported as a label\nin PyPrimeMesh.\n\nAfter CAD import the solid body, surface body or an edge body  present in SCDM would be defined\nas Volume Zones, Face Zones and Edge Zones in PyPrimeMesh. In the CAD model , there exist a\nsingle solid body named “solid” which after import becomes as a Volume Zone named solid.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#generate-mesh","title":"Convert data when importing and exporting mesh and CAD formats > Generate Mesh","text":"Generate Mesh\n\nThe topo part currently has no mesh associated with it and contains only\ngeometry.\n\nUsing the Lucid API surface_mesh, users can generate a conformal mesh on the topofaces.\nA conformal mesh with a constant mesh size of 2mm is generated. After mesh generation, the\nmesh data is available within the TopoPart.\n\nThis can be seen in the image below\n\nThe mesh for a group of topo faces labeled “my_group” is displayed by defining the\nlabel expression in the display scope. The Volume Mesh is generated keeping the volume fill\nas the default meshing algorithms.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#export-mesh-as-pyprimemesh-pmdat-native-format-mesh-file","title":"Convert data when importing and exporting mesh and CAD formats > Export mesh as PyPrimeMesh (.pmdat) native format mesh file","text":"Export mesh as PyPrimeMesh (.pmdat) native format mesh file\n\nPyPrimeMesh allows user to export mesh in its native format name pmdat.\nThis configuration allows retaining the topology data along with mesh data."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#export-mesh-as-ansys-mapdl-cdb-format-mesh-file","title":"Convert data when importing and exporting mesh and CAD formats > Export mesh as Ansys MAPDL (.cdb) format mesh file","text":"Export mesh as Ansys MAPDL (.cdb) format mesh file\n\nPyPrimeMesh allows export of mesh as Ansys MAPDL (.cdb) format mesh file. While exporting\nthe mesh to Ansys MAPDL, the labels present in session are converted to components\ncontaining nodes."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#export-mesh-ansys-fluent-cas-format-mesh-file","title":"Convert data when importing and exporting mesh and CAD formats > Export mesh Ansys Fluent (CAS) format mesh file","text":"Export mesh Ansys Fluent (CAS) format mesh file\n\nZones in PyPrimeMesh can be defined as a collection of either topo or zonelet entities that\nwe can assign properties to in a solver when exported as mesh , for example “if the user\nwishes to assign a material to a region of the model they can define a volume zone for\nmultiple topo volumes or cell zonelets so they can apply the property.\n\nHence while exporting the mesh as (MSH or CAS) file to the Fluent solver, the\nboundary conditions for the zones needs to be defined. For this reason the topo\nentities / zonelets associated with a labels are converted to volume/face/edge zones\nrespectively.\n\nThe property of a zone is that a zonelet or TopoEntity can only be present in a single zone.\nThe topo entities / zonelets that are not associated with their respective zones types are\nmerged together during export to Fluent formats. The topology data present is removed\nautomatically when export to Fluent(MSH or CAS) formats."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#reading-ansys-pyprimemesh-native-mesh-file-pmdat","title":"Convert data when importing and exporting mesh and CAD formats > Reading Ansys PyPrimeMesh native mesh file (pmdat)","text":"Reading Ansys PyPrimeMesh native mesh file (pmdat)\n\nRead the exported PyPrimeMesh(pmdat) native mesh format file, it is observed that\npart topology contains both geom data as well as mesh data. This is seen in the image below\n\nMeshed zonelets (that contain the mesh data) are only created once the topo part\nis converted to a mesh part by deleting the topo entities. Here , while deleting the topology\nwe are deleting the geom data (face) and retaining the mesh data for solve purpose.\nWhen deleting the topoogy , the TopoPart is converted to MeshPart and the topo entities\nare converted to their respective zonelet type in MeshPart, this is shown as follows;\n\n01 TopoVolumes ->  01 Cell Zonelets\n\n08 TopoFaces ->  08 Face Zonelets\n\n17 TopoEdges -> 17 Edge Zonelets\n\nThe zones association with topoentities would change to their\ncorresponding equivalent zonelet type in MeshParts."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#reading-ansys-fluent-cas-format-mesh-file","title":"Convert data when importing and exporting mesh and CAD formats > Reading Ansys Fluent (.cas) format mesh file","text":"Reading Ansys Fluent (.cas) format mesh file\n\nRead the exported Fluent format mesh file.\n\nIt would be observed that\nthe zone name my_group is retained and the remaining face zonelets that are not\nassociated with a face zone(s) are merged to create a new zone named wall.\nThere are no labels present in the mesh file.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#exit-pyprimemesh","title":"Convert data when importing and exporting mesh and CAD formats > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (0 minutes 22.888 seconds)\n\n\n\nDownload Jupyter notebook: 00_lucid_file_IO.ipynb\n\nDownload Python source code: 00_lucid_file_IO.py\n\nDownload zipped: 00_lucid_file_IO.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationResults.n_deviated.html#n_deviated","title":"n_deviated","text":"n_deviated\n\n\n\nproperty CheckFaceDeviationResults.n_deviated: int\n\nNumber of faces with deviation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentCaseParams.cff_format.html#cff_format","title":"cff_format","text":"cff_format\n\n\n\nproperty ExportFluentCaseParams.cff_format: bool\n\nOption to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesResults.assigned_zone_name.html#assigned_zone_name","title":"assigned_zone_name","text":"assigned_zone_name\n\n\n\nproperty ExtractVolumesResults.assigned_zone_name: str\n\nAssigned name of zone for extracted flow volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryResults.html#surfacequalitysummaryresults","title":"SurfaceQualitySummaryResults","text":"SurfaceQualitySummaryResults\n\n\n\nclass ansys.meshing.prime.SurfaceQualitySummaryResults(model=None, error_code=None, quality_results=None, summary=None, json_data=None, **kwargs)\n\nResults of surface quality summary.\n\nParameters\n\nmodel: Model\n\nModel to create a SurfaceQualitySummaryResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the surface quality summary.\n\nquality_results: List[SurfaceQualityResult], optional\n\nContains surface quality result per face quality measure specified in parameters.\n\nsummary: str, optional\n\nSurface quality summary text.\n\njson_data: dict, optional\n\nJSON dictionary to create a SurfaceQualitySummaryResults object with provided parameters.\n\nExamples\n\n>>> surface_quality_summary_results = prime.SurfaceQualitySummaryResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.html#meshstackerparams","title":"MeshStackerParams","text":"MeshStackerParams\n\n\n\nclass ansys.meshing.prime.MeshStackerParams(model=None, origin=None, direction=None, lateral_defeature_tolerance=None, stacking_defeature_tolerance=None, max_offset_size=None, size_control_ids=None, seed_faces=None, delete_base=None, json_data=None, **kwargs)\n\nInput parameters associated with the mesh stacker operations.\n\nParameters\n\nmodel: Model\n\nModel to create a MeshStackerParams object with default parameters.\n\norigin: Iterable[float], optional\n\nOrigin coordinate list of stacker.\n\ndirection: Iterable[float], optional\n\nDirection vector of stacker.\n\nlateral_defeature_tolerance: float, optional\n\nAbsolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nstacking_defeature_tolerance: float, optional\n\nAbsolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nmax_offset_size: float, optional\n\nMaximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\nsize_control_ids: Iterable[int], optional\n\nList of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\nseed_faces: Iterable[int], optional\n\nList of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndelete_base: bool, optional\n\nOption to delete base face at the end of stacking. The default is false.\n\njson_data: dict, optional\n\nJSON dictionary to create a MeshStackerParams object with provided parameters.\n\nExamples\n\n>>> mesh_stacker_params = prime.MeshStackerParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.html#examples-using-meshstackerparams","title":"MeshStackerParams > Examples using MeshStackerParams","text":"Examples using MeshStackerParams\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FillHolesAtPlaneParams.print_default()\n\nPrint the default values of FillHolesAtPlaneParams object.\n\nExamples\n\n>>> FillHolesAtPlaneParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StretchFreeBoundariesParams.html#stretchfreeboundariesparams","title":"StretchFreeBoundariesParams","text":"StretchFreeBoundariesParams\n\n\n\nclass ansys.meshing.prime.StretchFreeBoundariesParams(model=None, json_data=None, **kwargs)\n\nParameters used for stretch free boundaries operation.\n\nParameters\n\nmodel: Model\n\nModel to create a StretchFreeBoundariesParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a StretchFreeBoundariesParams object with provided parameters.\n\nExamples\n\n>>> stretch_free_boundaries_params = prime.StretchFreeBoundariesParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetMeshSplineParams.feature_angle.html#feature_angle","title":"feature_angle","text":"feature_angle\n\n\n\nproperty TetMeshSplineParams.feature_angle: float\n\nFeature angle used in meshing of the solid spline.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_wheel_ground_scdoc.html#download_wheel_ground_scdoc","title":"download_wheel_ground_scdoc","text":"download_wheel_ground_scdoc\n\n\n\nansys.meshing.prime.examples.download_wheel_ground_scdoc(destination=None, force=False)\n\nDownload the SCDOC file for the wheel ground contact patch example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SurfaceQualityResult.set_default(face_quality_measure=None, measure_name=None, quality_limit=None, n_found=None, max_quality=None, min_quality=None)\n\nSet the default values of the SurfaceQualityResult object.\n\nParameters\n\nface_quality_measure: FaceQualityMeasure, optional\n\nType of the face quality measure.\n\nmeasure_name: str, optional\n\nName of the face quality measure.\n\nquality_limit: float, optional\n\nTarget quality limit used to find failures.\n\nn_found: int, optional\n\nNumber of failed faces.\n\nmax_quality: float, optional\n\nMaximum value of quality measure.\n\nmin_quality: float, optional\n\nMinimum value of quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.volume_control_ids.html#volume_control_ids","title":"volume_control_ids","text":"volume_control_ids\n\n\n\nproperty AutoMeshParams.volume_control_ids: Iterable[int]\n\nIds of the volume controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_cells.html#n_cells","title":"n_cells","text":"n_cells\n\n\n\nproperty PartSummaryResults.n_cells: int\n\nNumber of cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.size_control_ids.html#size_control_ids","title":"size_control_ids","text":"size_control_ids\n\n\n\nproperty WrapParams.size_control_ids: Iterable[int]\n\nUsed to construct geodesic sizes for octree refinement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinParams.html#joinparams","title":"JoinParams","text":"JoinParams\n\n\n\nclass ansys.meshing.prime.JoinParams(model=None, tolerance=None, use_absolute_tolerance=None, remesh=None, match_angle=None, overlap_zone_name=None, json_data=None, **kwargs)\n\nParameters used for join.\n\nParameters\n\nmodel: Model\n\nModel to create a JoinParams object with default parameters.\n\ntolerance: float, optional\n\nOverlap tolerance between overlapping zonelets.\n\nuse_absolute_tolerance: bool, optional\n\nTolerance provided is absolute value.\n\nremesh: bool, optional\n\nRemesh at overlap surface boundary.\n\nmatch_angle: float, optional\n\nMatch angle determines face pair inclination for overlap consideration.\n\noverlap_zone_name: str, optional\n\nZone id to be assigned to overlap zonelets belonging to different zones.\n\njson_data: dict, optional\n\nJSON dictionary to create a JoinParams object with provided parameters.\n\nExamples\n\n>>> join_params = prime.JoinParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.WRITINGZONELETOFLABELTOELEMENTCOMPONENTSKIPPED.html#writingzoneletoflabeltoelementcomponentskipped","title":"WRITINGZONELETOFLABELTOELEMENTCOMPONENTSKIPPED","text":"WRITINGZONELETOFLABELTOELEMENTCOMPONENTSKIPPED\n\n\n\nWarningCode.WRITINGZONELETOFLABELTOELEMENTCOMPONENTSKIPPED = 11104\n\nExport of label as element component skipped."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetParamsResults.warning_code.html#warning_code","title":"warning_code","text":"warning_code\n\n\n\nproperty SetParamsResults.warning_code: WarningCode\n\nWarning code associated with the set parameters operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nEdgeMergeControl.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSizeFieldType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsResults.html#mergezoneletsresults","title":"MergeZoneletsResults","text":"MergeZoneletsResults\n\n\n\nclass ansys.meshing.prime.MergeZoneletsResults(model=None, merged_zonelets=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with merge zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a MergeZoneletsResults object with default parameters.\n\nmerged_zonelets: Iterable[int], optional\n\nIds of zonelets to which input zonelets are merged.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a MergeZoneletsResults object with provided parameters.\n\nExamples\n\n>>> merge_zonelets_results = prime.MergeZoneletsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapSearchResults.n_pairs.html#n_pairs","title":"n_pairs","text":"n_pairs\n\n\n\nproperty OverlapSearchResults.n_pairs: int\n\nNumber of pairs."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEMESHFACES_TOPOLOGYNOTSUPPORTED.html#deletemeshfaces_topologynotsupported","title":"DELETEMESHFACES_TOPOLOGYNOTSUPPORTED","text":"DELETEMESHFACES_TOPOLOGYNOTSUPPORTED\n\n\n\nErrorCode.DELETEMESHFACES_TOPOLOGYNOTSUPPORTED = 3201\n\nTopoentities do not support deleting faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.html#uniformsolidsplinecreationparams","title":"UniformSolidSplineCreationParams","text":"UniformSolidSplineCreationParams\n\n\n\nclass ansys.meshing.prime.UniformSolidSplineCreationParams(model=None, n_control_points_u=None, n_control_points_v=None, n_control_points_w=None, degree_u=None, degree_v=None, degree_w=None, json_data=None, **kwargs)\n\nParameters to define the uniform solid spline.\n\nParameters\n\nmodel: Model\n\nModel to create a UniformSolidSplineCreationParams object with default parameters.\n\nn_control_points_u: int, optional\n\nNumber of control points in u direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nn_control_points_v: int, optional\n\nNumber of control points in v direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nn_control_points_w: int, optional\n\nNumber of control points in w direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndegree_u: int, optional\n\nDegree in u direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndegree_v: int, optional\n\nDegree in v direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndegree_w: int, optional\n\nDegree in w direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a UniformSolidSplineCreationParams object with provided parameters.\n\nExamples\n\n>>> uniform_solid_spline_creation_params = prime.UniformSolidSplineCreationParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.material_point_volumes.html#material_point_volumes","title":"material_point_volumes","text":"material_point_volumes\n\n\n\nproperty ComputeVolumesResults.material_point_volumes: Iterable[int]\n\nIds of computed volumes enclosing material points."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.EXACT.html#exact","title":"EXACT","text":"EXACT\n\n\n\nTrimmedSolidSplineCutMode.EXACT = 1\n\nThis mode guarantees to represent the exact input mesh for each subdomain without any defeaturing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCellQualityMeasure.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposerResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VTComposerResults.set_default(error_code=None)\n\nSet the default values of the VTComposerResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.COMPACT.html#compact","title":"COMPACT","text":"COMPACT\n\n\n\nSeparateBlocksFormatType.COMPACT = 1\n\nCompact format for element blocks with reduced columns.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteResults.print_default()\n\nPrint the default values of DeleteResults object.\n\nExamples\n\n>>> DeleteResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateCapResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CreateCapResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.fuse_edges_only.html#fuse_edges_only","title":"fuse_edges_only","text":"fuse_edges_only\n\n\n\nproperty FuseParams.fuse_edges_only: bool\n\nOption to fuse edges. The default value is false. When fuse edges only is true, only edges are fused.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ThinVolumeMeshParams.print_default()\n\nPrint the default values of ThinVolumeMeshParams object.\n\nExamples\n\n>>> ThinVolumeMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic IGAUnstructuredSplineSurf.print_default()\n\nPrint the default values of IGAUnstructuredSplineSurf object.\n\nExamples\n\n>>> IGAUnstructuredSplineSurf.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_f1_rw_drs_stl.html#download_f1_rw_drs_stl","title":"download_f1_rw_drs_stl","text":"download_f1_rw_drs_stl\n\n\n\nansys.meshing.prime.examples.download_f1_rw_drs_stl(destination=None, force=False)\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_drs = prime_examples.download_f1_rw_drs_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_drs, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_f1_rw_drs_stl.html#examples-using-download_f1_rw_drs_stl","title":"download_f1_rw_drs_stl > Examples using download_f1_rw_drs_stl","text":"Examples using download_f1_rw_drs_stl\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_cell_zonelets.html#get_cell_zonelets","title":"get_cell_zonelets","text":"get_cell_zonelets\n\n\n\nPart.get_cell_zonelets()\n\nGet the cell zonelet ids in the part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of cell zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> cell_zonelet_ids = part.get_cell_zonelets()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_cell_zonelets.html#examples-using-partget_cell_zonelets","title":"get_cell_zonelets > Examples using Part.get_cell_zonelets","text":"Examples using Part.get_cell_zonelets\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.imag.html#imag","title":"imag","text":"imag\n\n\n\nWrapRegion.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderResults.n_incomplete_topo_faces.html#n_incomplete_topo_faces","title":"n_incomplete_topo_faces","text":"n_incomplete_topo_faces\n\n\n\nproperty ScaffolderResults.n_incomplete_topo_faces: int\n\nNumber of topofaces failed in scaffold operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STITCHENTITIESFAILED.html#stitchentitiesfailed","title":"STITCHENTITIESFAILED","text":"STITCHENTITIESFAILED\n\n\n\nErrorCode.STITCHENTITIESFAILED = 859\n\nStitch entities failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesResults.html#extractvolumesresults","title":"ExtractVolumesResults","text":"ExtractVolumesResults\n\n\n\nclass ansys.meshing.prime.ExtractVolumesResults(model=None, error_code=None, volumes=None, warning_codes=None, assigned_zone_name=None, face_zonelets_without_volumes=None, json_data=None, **kwargs)\n\nResults associated with compute volumes.\n\nParameters\n\nmodel: Model\n\nModel to create a ExtractVolumesResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nvolumes: Iterable[int], optional\n\nIds of computed volumes.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the compute volumes.\n\nassigned_zone_name: str, optional\n\nAssigned name of zone for extracted flow volumes.\n\nface_zonelets_without_volumes: Iterable[int], optional\n\nIds of face zonelets for which volumes were not extracted.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExtractVolumesResults object with provided parameters.\n\nExamples\n\n>>> extract_volumes_results = prime.ExtractVolumesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.imag.html#imag","title":"imag","text":"imag\n\n\n\nCadReaderRoute.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.real.html#real","title":"real","text":"real\n\n\n\nFaceQualityMeasure.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.control_point_selection_type.html#control_point_selection_type","title":"control_point_selection_type","text":"control_point_selection_type\n\n\n\nproperty BoundaryFittedSplineParams.control_point_selection_type: ControlPointSelection\n\nSpline control points selection type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.MEDIUM.html#medium","title":"MEDIUM","text":"MEDIUM\n\n\n\nCadRefacetingResolution.MEDIUM = 1\n\nDenotes medium resolution of CAD faceting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.import_abaqus_inp.html#import_abaqus_inp","title":"import_abaqus_inp","text":"import_abaqus_inp\n\n\n\nFileIO.import_abaqus_inp(file_name, params)\n\n(BETA FEATURE) Import a Abaqus file.\n\nThis is a beta feature to import abaqus files as dead mesh and also store\nsimulation-specific information into Prime in the form of JSON documents.\n\nParameters\n\nfile_name\n\npython:str\n\nName of file to import.\n\nparams\n\nImportAbaqusParams\n\nParameters to specify options during import.\n\nReturns\n\n:\n\n\n\nImportAbaqusResults\n\nReturns the results of the abaqus database import.\n\nReturn type\n\nImportAbaqusResults\n\nExamples\n\n>>> results = file_io.import_abaqus(r\"/tmp/file.inp\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLParams.html#shellblparams","title":"ShellBLParams","text":"ShellBLParams\n\n\n\nclass ansys.meshing.prime.ShellBLParams(model=None, json_data=None, **kwargs)\n\nParameters used to generate ShellBL.\n\nParameters\n\nmodel: Model\n\nModel to create a ShellBLParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a ShellBLParams object with provided parameters.\n\nExamples\n\n>>> shell_blparams = prime.ShellBLParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.imag.html#imag","title":"imag","text":"imag\n\n\n\nScopeEvaluationType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.html#lengthunit","title":"LengthUnit","text":"LengthUnit\n\n\n\nclass ansys.meshing.prime.LengthUnit(*values)\n\nLength units\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.html#examples-using-lengthunit","title":"LengthUnit > Examples using LengthUnit","text":"Examples using LengthUnit\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_soft_sizing_params.html#set_soft_sizing_params","title":"set_soft_sizing_params","text":"set_soft_sizing_params\n\n\n\nSizeControl.set_soft_sizing_params(params)\n\nSet the soft sizing parameters to compute volumetric size field.\n\nParameters\n\nparams\n\nSoftSizingParams\n\nParameters that enables you to set the maximum size on scoped face zonelets.\n\nReturns\n\n:\n\n\n\nSetSizingResults\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_soft_sizing_params(\n>>>                  prime.SoftSizingParams(model=model,\n>>>                  max = 1.0, growth_rate = 1.2))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_soft_sizing_params.html#examples-using-sizecontrolset_soft_sizing_params","title":"set_soft_sizing_params > Examples using SizeControl.set_soft_sizing_params","text":"Examples using SizeControl.set_soft_sizing_params\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRITESIZECONTROLFAILED.html#writesizecontrolfailed","title":"WRITESIZECONTROLFAILED","text":"WRITESIZECONTROLFAILED\n\n\n\nErrorCode.WRITESIZECONTROLFAILED = 523\n\nWriting size control file failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.suggested_label_prefix.html#suggested_label_prefix","title":"suggested_label_prefix","text":"suggested_label_prefix\n\n\n\nproperty CreateBOIParams.suggested_label_prefix: str\n\nSuggested label name for created BOI surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty CheckMeshResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the check grid operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.min_size.html#min_size","title":"min_size","text":"min_size\n\n\n\nproperty SurferParams.min_size: float\n\nMinimum size to be used in sizing for the surfer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryParams.scope.html#scope","title":"scope","text":"scope\n\n\n\nproperty VolumeQualitySummaryParams.scope: ScopeDefinition\n\nScope of the cell zonelets for volume quality diagnostics."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty FuseResults.error_code: ErrorCode\n\nError code associated with failure of the fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.MESHEDGEODESIC.html#meshedgeodesic","title":"MESHEDGEODESIC","text":"MESHEDGEODESIC\n\n\n\nSizeFieldType.MESHEDGEODESIC = 7\n\nThe type is applicable when remeshing already meshed surfaces.\n\nType\n\nComputes size field using existing surface mesh sizes and diffuses geodesically. Then uses the computed size field to remesh surfaces. Notes"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.OFFSETBOX.html#offsetbox","title":"OFFSETBOX","text":"OFFSETBOX\n\n\n\nBOIType.OFFSETBOX = 1\n\nBox BOI type for BOI creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nControlPointSelection.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CellStatisticsResults.set_default(volume=None, error_code=None)\n\nSet the default values of the CellStatisticsResults object.\n\nParameters\n\nvolume: float, optional\n\nCumulative volume of all the cell elements of selected entities.\n\nerror_code: ErrorCode, optional\n\nError code associated with the cell statistics function."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.DELETELARGE.html#deletelarge","title":"DELETELARGE","text":"DELETELARGE\n\n\n\nHexCoreTransitionLayerType.DELETELARGE = 2\n\nRemove neighboring hexes of different size by deleting a layer of larger cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.write.html#write","title":"write","text":"write\n\n\n\nMesh.write(file_name)\n\nWrite or export files of different formats based on file extensions.\n\nThis method supports writing and exporting these file formats:\n\nWriting PyPrimeMesh’s native PMDAT files\n\nExporting Fluent Meshing’s MSH files\n\nExporting Fluent’s CAS files\n\nExporting MAPDL’s CDB files.\n\nExporting STL files.\n\nParameters\n\nfile_name\n\npython:str\n\nPath of the file to write or export."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.write.html#examples-using-meshwrite","title":"write > Examples using Mesh.write","text":"Examples using Mesh.write\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SubtractZoneletsResults.set_default(processing_time=None, error_code=None)\n\nSet the default values of the SubtractZoneletsResults object.\n\nParameters\n\nprocessing_time: float, optional\n\nProcessing time for subtract operation.\n\nerror_code: ErrorCode, optional\n\nError Code associated with subtract operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryParams.scope.html#scope","title":"scope","text":"scope\n\n\n\nproperty SurfaceQualitySummaryParams.scope: ScopeDefinition\n\nScope the face zonelets for surface quality diagnostics."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileWriteParams.html#filewriteparams","title":"FileWriteParams","text":"FileWriteParams\n\n\n\nclass ansys.meshing.prime.FileWriteParams(model=None, json_data=None, **kwargs)\n\nParameters to write a file.\n\nParameters\n\nmodel: Model\n\nModel to create a FileWriteParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a FileWriteParams object with provided parameters.\n\nExamples\n\n>>> file_write_params = prime.FileWriteParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.ymax.html#ymax","title":"ymax","text":"ymax\n\n\n\nproperty BoundingBox.ymax: float\n\nMaximal Y coordinate of the bounding box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nFaceQualityMeasure.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.real.html#real","title":"real","text":"real\n\n\n\nLSDynaAnalysisType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteUnwettedResult.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty DeleteUnwettedResult.error_code: ErrorCode\n\nError code associated with delete unwetted surfaces operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTSTLFAILEDWITHEMPTYPARTIDLIST.html#exportstlfailedwithemptypartidlist","title":"EXPORTSTLFAILEDWITHEMPTYPARTIDLIST","text":"EXPORTSTLFAILEDWITHEMPTYPARTIDLIST\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHEMPTYPARTIDLIST = 557\n\nExport STL failed. List of part ids is empty."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.FILLHOLEFAILED.html#fillholefailed","title":"FILLHOLEFAILED","text":"FILLHOLEFAILED\n\n\n\nErrorCode.FILLHOLEFAILED = 2901\n\nUnable to create capping surface."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nIntersectionMask.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateBOIParams.print_default()\n\nPrint the default values of CreateBOIParams object.\n\nExamples\n\n>>> CreateBOIParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlSummaryParams.html#periodiccontrolsummaryparams","title":"PeriodicControlSummaryParams","text":"PeriodicControlSummaryParams\n\n\n\nclass ansys.meshing.prime.PeriodicControlSummaryParams(model=None, json_data=None, **kwargs)\n\nParameters used to get size control summary.\n\nParameters\n\nmodel: Model\n\nModel to create a PeriodicControlSummaryParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a PeriodicControlSummaryParams object with provided parameters.\n\nExamples\n\n>>> periodic_control_summary_params = prime.PeriodicControlSummaryParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdb.html#download_multi_layer_quad_mesh_pcb_pmdb","title":"download_multi_layer_quad_mesh_pcb_pmdb","text":"download_multi_layer_quad_mesh_pcb_pmdb\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdb(destination=None, force=False)\n\nDownload the PMDB file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_pmdb()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaIGAResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportLSDynaIGAResults.print_default()\n\nPrint the default values of ExportLSDynaIGAResults object.\n\nExamples\n\n>>> ExportLSDynaIGAResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.BOIRESULTSFAILED.html#boiresultsfailed","title":"BOIRESULTSFAILED","text":"BOIRESULTSFAILED\n\n\n\nErrorCode.BOIRESULTSFAILED = 381\n\nBOI creation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HardSizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic HardSizingParams.print_default()\n\nPrint the default values of HardSizingParams object.\n\nExamples\n\n>>> HardSizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nFlowDirection.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGASpline.id.html#id","title":"id","text":"id\n\n\n\nproperty IGASpline.id: int\n\nUnique id of the spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.html#cdbsimulationtype","title":"CdbSimulationType","text":"CdbSimulationType\n\n\n\nclass ansys.meshing.prime.CdbSimulationType(*values)\n\nSimulation Type for CDB export.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.enable_optimizing_numpy_arrays.html#enable_optimizing_numpy_arrays","title":"enable_optimizing_numpy_arrays","text":"enable_optimizing_numpy_arrays\n\n\n\nansys.meshing.prime.enable_optimizing_numpy_arrays()\n\nEnable optimizing numpy arrays over the wire.\n\nThis method allows the library to optimize serialization of numpy arrays\nfor faster deserialization. This can cause the data transferred\nover the network to increase slightly unless the array is of a very\nlarge size. Consider enabling this option to improve performance if\nyour workflow is not limited by network bandwidth for performance. The\ndefault for optimization is always True."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.multi_zone_control_ids.html#multi_zone_control_ids","title":"multi_zone_control_ids","text":"multi_zone_control_ids\n\n\n\nproperty AutoMeshParams.multi_zone_control_ids: Iterable[int]\n\nSet MultiZone control ids."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSolid.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic IGAUnstructuredSplineSolid.print_default()\n\nPrint the default values of IGAUnstructuredSplineSolid object.\n\nExamples\n\n>>> IGAUnstructuredSplineSolid.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatFeaturesParams.treat_holes_params.html#treat_holes_params","title":"treat_holes_params","text":"treat_holes_params\n\n\n\nproperty DetectAndTreatFeaturesParams.treat_holes_params: DetectAndTreatHolesParams\n\nParameters for detect and treat holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TransformParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TransformParams.set_default(transformation_matrix=None)\n\nSet the default values of the TransformParams object.\n\nParameters\n\ntransformation_matrix: Iterable[float], optional\n\nTransformation matrix(4x4) to be used to transform."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.IMPORTOFNODALCOMPONENTASLABELSKIPPED.html#importofnodalcomponentaslabelskipped","title":"IMPORTOFNODALCOMPONENTASLABELSKIPPED","text":"IMPORTOFNODALCOMPONENTASLABELSKIPPED\n\n\n\nWarningCode.IMPORTOFNODALCOMPONENTASLABELSKIPPED = 11201\n\nImport of nodal component as label skipped."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.max_edge_size.html#max_edge_size","title":"max_edge_size","text":"max_edge_size\n\n\n\nproperty CadRefacetingParams.max_edge_size: float\n\nSet maximum edge size of the facets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDPLANEPOINTS.html#invalidplanepoints","title":"INVALIDPLANEPOINTS","text":"INVALIDPLANEPOINTS\n\n\n\nErrorCode.INVALIDPLANEPOINTS = 2804\n\nInvalid plane points, cannot define a plane."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsParams.label_name.html#label_name","title":"label_name","text":"label_name\n\n\n\nproperty CreateIntersectionEdgeLoopsParams.label_name: str\n\nLabel name to be assigned to extracted features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.imag.html#imag","title":"imag","text":"imag\n\n\n\nCdbAnalysisType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.PERNAMESOURCE.html#pernamesource","title":"PERNAMESOURCE","text":"PERNAMESOURCE\n\n\n\nCreateVolumeZonesType.PERNAMESOURCE = 2\n\nOption to create zone per name computed from face zonelets of volume. Single zone is created for multiple volumes if same zone name is identified using face zonelets for the volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.imag.html#imag","title":"imag","text":"imag\n\n\n\nScopeEntity.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTSIZEFIELD.html#unsupportedfileextensionforfluentsizefield","title":"UNSUPPORTEDFILEEXTENSIONFORFLUENTSIZEFIELD","text":"UNSUPPORTEDFILEEXTENSIONFORFLUENTSIZEFIELD\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTSIZEFIELD = 9005\n\nProvided file extension is not supported. Supported extensions are .sf and .sf.gz."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesParams.tolerance.html#tolerance","title":"tolerance","text":"tolerance\n\n\n\nproperty MergeBoundaryNodesParams.tolerance: float\n\nDistance tolerance for merging boundary nodes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SFPeriodicParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SFPeriodicParams.set_default(axis=None, angle=None, center=None)\n\nSet the default values of the SFPeriodicParams object.\n\nParameters\n\naxis: Iterable[float], optional\n\nAxis vector coordinates.\n\nangle: float, optional\n\nAngle in degrees.\n\ncenter: Iterable[float], optional\n\nCenter coordinates."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeadRegion.hole_size.html#hole_size","title":"hole_size","text":"hole_size\n\n\n\nproperty DeadRegion.hole_size: float\n\nMaximum hole size used for patching.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsResult.html#wrapperclosegapsresult","title":"WrapperCloseGapsResult","text":"WrapperCloseGapsResult\n\n\n\nclass ansys.meshing.prime.WrapperCloseGapsResult(model=None, error_code=None, part_id=None, json_data=None, **kwargs)\n\nResult structure associated with close gaps operation.\n\nParameters\n\nmodel: Model\n\nModel to create a WrapperCloseGapsResult object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with a close gaps operation.\n\npart_id: int, optional\n\nId of part created with gap cover patches.\n\njson_data: dict, optional\n\nJSON dictionary to create a WrapperCloseGapsResult object with provided parameters.\n\nExamples\n\n>>> wrapper_close_gaps_result = prime.WrapperCloseGapsResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATEBOI_INVALIDWAKELEVELS.html#createboi_invalidwakelevels","title":"CREATEBOI_INVALIDWAKELEVELS","text":"CREATEBOI_INVALIDWAKELEVELS\n\n\n\nErrorCode.CREATEBOI_INVALIDWAKELEVELS = 385\n\nBOI creation failed. Invalid wake levels input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartialDefeatureParams.merge_face_normals_angle.html#merge_face_normals_angle","title":"merge_face_normals_angle","text":"merge_face_normals_angle\n\n\n\nproperty PartialDefeatureParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPreventionParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ContactPreventionParams.set_default(source_scope=None, target_scope=None, size=None)\n\nSet the default values of the ContactPreventionParams object.\n\nParameters\n\nsource_scope: ScopeDefinition, optional\n\nSource scope used for contact prevention control.\n\ntarget_scope: ScopeDefinition, optional\n\nTarget scope used for contact prevention control.\n\nsize: float, optional\n\nMinimum gap size (gap/4) to resolve contact between source and target."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.TET.html#tet","title":"TET","text":"TET\n\n\n\nVolumeFillType.TET = 0\n\nVolume fill using tetrahedral cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.real.html#real","title":"real","text":"real\n\n\n\nWrapRegion.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.SPACECLAIM.html#spaceclaim","title":"SPACECLAIM","text":"SPACECLAIM\n\n\n\nCadReaderRoute.SPACECLAIM = 3\n\nDenotes SpaceClaim as CAD reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeField.compute_volumetric.html#compute_volumetric","title":"compute_volumetric","text":"compute_volumetric\n\n\n\nSizeField.compute_volumetric(size_control_ids, volumetric_sizefield_params)\n\nComputes the volumetric size field using given size control ids.\n\nParameters\n\nsize_control_ids\n\nIterable[python:int]\n\nIds of size controls.\n\nReturn type\n\nVolumetricSizeFieldComputeResults\n\nExamples\n\n>>> size_field.compute_volumetric(\n>>>           [size_control.id for size_control in model.control_data.size_controls], volumetric_sizefield_params))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeField.compute_volumetric.html#examples-using-sizefieldcompute_volumetric","title":"compute_volumetric > Examples using SizeField.compute_volumetric","text":"Examples using SizeField.compute_volumetric\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nTopoSearchField.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractedFeatureIds.new_edge_zonelets.html#new_edge_zonelets","title":"new_edge_zonelets","text":"new_edge_zonelets\n\n\n\nproperty ExtractedFeatureIds.new_edge_zonelets: Iterable[int]\n\nIds of new edge zonelets extracted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_hard_sizing_params.html#get_hard_sizing_params","title":"get_hard_sizing_params","text":"get_hard_sizing_params\n\n\n\nSizeControl.get_hard_sizing_params()\n\nGet the hard sizing parameters of size control.\n\nReturns\n\n:\n\n\n\nHardSizingParams\n\nReturn the HardSizingParams.\n\nReturn type\n\nHardSizingParams\n\nExamples\n\n>>> params = size_control.get_hard_sizing_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrimeRuntimeError.html#primeruntimeerror","title":"PrimeRuntimeError","text":"PrimeRuntimeError\n\n\n\nexception ansys.meshing.prime.PrimeRuntimeError(message, error_code=None, error_locations=None)\n\nProvides runtime errors for PyPrimeMesh.\n\nParameters\n\nmessage\n\npython:str\n\nError message to show.\n\nerror_code\n\nErrorCode, optional\n\nID of the error. The default is None.\n\nerror_locations\n\nAny, optional\n\nLocation of the error. The default is None."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_hex_cells.html#n_hex_cells","title":"n_hex_cells","text":"n_hex_cells\n\n\n\nproperty PartSummaryResults.n_hex_cells: int\n\nNumber of hexahedral cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nMatchPairTargetType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ProjectOnGeometryResults.error_code: ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderSplitResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ScaffolderSplitResults.print_default()\n\nPrint the default values of ScaffolderSplitResults object.\n\nExamples\n\n>>> ScaffolderSplitResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchByThinStripResults.print_default()\n\nPrint the default values of SearchByThinStripResults object.\n\nExamples\n\n>>> SearchByThinStripResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapPairs.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic OverlapPairs.set_default(zone_id0=None, zone_id1=None)\n\nSet the default values of the OverlapPairs object.\n\nParameters\n\nzone_id0: int, optional\n\nId of one overlapping face zonelet.\n\nzone_id1: int, optional\n\nId of other overlapping face zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCdbAnalysisType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nIntersectionMask.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nTopoSearchField.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.NONE.html#none","title":"NONE","text":"NONE\n\n\n\nCadRefacetingMaxEdgeSizeLimit.NONE = 0\n\nDenotes no maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty FaceConnectivityResults.error_code: ErrorCode\n\nError code associated with the get face connectivity operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSweepMeshParams.thin_sweep.html#thin_sweep","title":"thin_sweep","text":"thin_sweep\n\n\n\nproperty MultiZoneSweepMeshParams.thin_sweep: bool\n\nThin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ComponentChildrenResults.print_default()\n\nPrint the default values of ComponentChildrenResults object.\n\nExamples\n\n>>> ComponentChildrenResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_second_order_prism_cells.html#n_second_order_prism_cells","title":"n_second_order_prism_cells","text":"n_second_order_prism_cells\n\n\n\nproperty PartSummaryResults.n_second_order_prism_cells: int\n\nNumber of second order prism cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nHexCoreCellElementType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSizingType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WrapperPatchFlowRegionsParams.set_default(base_size=None, suggested_part_name=None, number_of_threads=None, dead_regions=None, sizing_method=None, size_field_ids=None, patch_at_live=None)\n\nSet the default values of the WrapperPatchFlowRegionsParams object.\n\nParameters\n\nbase_size: float, optional\n\nBase size to define octree.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created patching surfaces.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading.\n\ndead_regions: List[DeadRegion], optional\n\nList of dead regions.\n\nsizing_method: SizeFieldType, optional\n\nUsed to define sizing method for patching.\n\nsize_field_ids: Iterable[int], optional\n\nUsed to define size field based octree refinement.\n\npatch_at_live: bool, optional\n\nCreates patches closer to live instead of dead."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesParams.keep_cutters.html#keep_cutters","title":"keep_cutters","text":"keep_cutters\n\n\n\nproperty SubtractVolumesParams.keep_cutters: bool\n\nOption to retain cutter volumes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nContactPatchAxis.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartialDefeatureParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PartialDefeatureParams.print_default()\n\nPrint the default values of PartialDefeatureParams object.\n\nExamples\n\n>>> PartialDefeatureParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.ASPECTRATIO.html#aspectratio","title":"ASPECTRATIO","text":"ASPECTRATIO\n\n\n\nShellBLOffsetType.ASPECTRATIO = 0\n\nOption to set ShellBL offset type as Aspect Ratio.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.num_nodes_per_edge_zonelet.html#num_nodes_per_edge_zonelet","title":"num_nodes_per_edge_zonelet","text":"num_nodes_per_edge_zonelet\n\n\n\nproperty EdgeConnectivityResults.num_nodes_per_edge_zonelet: Iterable[int]\n\nNumber of nodes per edge zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.ZONELETBOUNDARY.html#zoneletboundary","title":"ZONELETBOUNDARY","text":"ZONELETBOUNDARY\n\n\n\nSurfaceFeatureType.ZONELETBOUNDARY = 4\n\nFace edges at zonelet boundary are considered as feature."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeParams.enable_multi_threading.html#enable_multi_threading","title":"enable_multi_threading","text":"enable_multi_threading\n\n\n\nproperty VolumetricSizeFieldComputeParams.enable_multi_threading: bool\n\nOption to compute volumetric size field in parallel using multithreads."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nBCsVolumetricModality.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.CUBICC0.html#cubicc0","title":"CUBICC0","text":"CUBICC0\n\n\n\nSplineContinuityType.CUBICC0 = 0\n\nSpline use cubic C0 continuity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.get_live_material_points.html#get_live_material_points","title":"get_live_material_points","text":"get_live_material_points\n\n\n\nWrapperControl.get_live_material_points()\n\nGets list of material point names.\n\nReturns\n\n:\n\n\n\nList[python:str]\n\nReturns the list of material point names.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> live_material_point_names = wrapper_control.get_live_material_points()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ComponentChildrenParams.set_default()\n\nSet the default values of the ComponentChildrenParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTFLUENTCASEFAILED.html#exportfluentcasefailed","title":"EXPORTFLUENTCASEFAILED","text":"EXPORTFLUENTCASEFAILED\n\n\n\nErrorCode.EXPORTFLUENTCASEFAILED = 526\n\nExport fluent case failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.topo_volumes.html#topo_volumes","title":"topo_volumes","text":"topo_volumes\n\n\n\nproperty ComputeTopoVolumesResults.topo_volumes: Iterable[int]\n\nIds of all topovolumes computed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.PERVOLUME.html#pervolume","title":"PERVOLUME","text":"PERVOLUME\n\n\n\nCreateVolumeZonesType.PERVOLUME = 1\n\nOption to create volume zone per volume. Suffix is added to volume zone name, if same name is identified for different volumes using face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.X.html#x","title":"X","text":"X\n\n\n\nContactPatchAxis.X = 1\n\nFlow or wake inflation in the X direction for BOI creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.repair_edges_params.html#repair_edges_params","title":"repair_edges_params","text":"repair_edges_params\n\n\n\nproperty RepairTopologyParams.repair_edges_params: RepairEdgesParams\n\nParameters for repair edges operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.export_fasteners_as_swgen.html#export_fasteners_as_swgen","title":"export_fasteners_as_swgen","text":"export_fasteners_as_swgen\n\n\n\nproperty ExportMapdlCdbParams.export_fasteners_as_swgen: bool\n\nOption to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nBOIType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.html#fuseparams","title":"FuseParams","text":"FuseParams\n\n\n\nclass ansys.meshing.prime.FuseParams(model=None, use_absolute_tolerance=None, gap_tolerance=None, side_tolerance=None, check_interior=None, fuse_option=None, check_orientation=None, dump_mesh=None, local_remesh=None, n_layers=None, separate=None, angle=None, fuse_edges_only=None, json_data=None, **kwargs)\n\nParameters for fuse operation.\n\nParameters\n\nmodel: Model\n\nModel to create a FuseParams object with default parameters.\n\nuse_absolute_tolerance: bool, optional\n\nOption to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ngap_tolerance: float, optional\n\nGap tolerance between faces to be fused. The default value is 0.05.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nside_tolerance: float, optional\n\nSide tolerance for fusing to the side edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncheck_interior: bool, optional\n\nOption to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfuse_option: FuseOption, optional\n\nOption for treatment of fused surfaces. The default value is None.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncheck_orientation: bool, optional\n\nOption to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndump_mesh: bool, optional\n\nOption to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nlocal_remesh: bool, optional\n\nOption to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nn_layers: int, optional\n\nFace layers around region to be fused. The default value is 2.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nseparate: bool, optional\n\nOption to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nangle: float, optional\n\nFaces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfuse_edges_only: bool, optional\n\nOption to fuse edges. The default value is false. When fuse edges only is true, only edges are fused.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a FuseParams object with provided parameters.\n\nExamples\n\n>>> fuse_params = prime.FuseParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_topo_faces.html#n_topo_faces","title":"n_topo_faces","text":"n_topo_faces\n\n\n\nproperty PartSummaryResults.n_topo_faces: int\n\nNumber of topofaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ZEROELEMENTSFORCDBEXPORT.html#zeroelementsforcdbexport","title":"ZEROELEMENTSFORCDBEXPORT","text":"ZEROELEMENTSFORCDBEXPORT\n\n\n\nErrorCode.ZEROELEMENTSFORCDBEXPORT = 16600\n\nNo elements found for cdb export.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesher.defeature_topology.html#defeature_topology","title":"defeature_topology","text":"defeature_topology\n\n\n\nAutoQuadMesher.defeature_topology(part_id, topo_face_ids, params)\n\nDefeature topology with given parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of the Part.\n\ntopo_face_ids\n\nIterable[python:int]\n\nIds of topofaces.\n\nparams\n\nDefeatureTopologyParams\n\nParameters of defeature topology.\n\nReturns\n\n:\n\n\n\nAutoQuadMesherResults\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.defeature_topology(part_id, topo_face_ids, params);"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nScopeEntity.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.GETSTATISTICSFAILED.html#getstatisticsfailed","title":"GETSTATISTICSFAILED","text":"GETSTATISTICSFAILED\n\n\n\nErrorCode.GETSTATISTICSFAILED = 250\n\nFailed to get mesh statistics."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_FAILED.html#stacker_failed","title":"STACKER_FAILED","text":"STACKER_FAILED\n\n\n\nErrorCode.STACKER_FAILED = 10104\n\nStacker failed to mesh the model."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.small_features.html#small_features","title":"small_features","text":"small_features\n\n\n\nproperty MeshStackerResults.small_features: Iterable[int]\n\nList of features edges smaller than input tolerance."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.generate_quads.html#generate_quads","title":"generate_quads","text":"generate_quads\n\n\n\nproperty SurferParams.generate_quads: bool\n\nOption to generate quadrilateral surface mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.delete_topology.html#delete_topology","title":"delete_topology","text":"delete_topology\n\n\n\nMesh.delete_topology(part_expression='*', delete_edges=True)\n\nDelete topology in one or more parts.\n\nParameters\n\npart_expression\n\npython:str, optional\n\nExpression of the parts where the topology must be deleted.\nThe default is \"*\".\n\ndelete_edges\n\nbool, optional\n\nWhether to delete edge zonelets. The default is True."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.html#hexcorecellelementtype","title":"HexCoreCellElementType","text":"HexCoreCellElementType\n\n\n\nclass ansys.meshing.prime.HexCoreCellElementType(*values)\n\nCell element type of hex-shaped cells.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSweepMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MultiZoneSweepMeshParams.set_default(source_and_target_scope=None, sweep_mesh_size=None, n_divisions=None, thin_sweep=None, sweep_type=None)\n\nSet the default values of the MultiZoneSweepMeshParams object.\n\nParameters\n\nsource_and_target_scope: ScopeDefinition, optional\n\nSource and target faces used to determine the direction of sweep in MultiZone meshing.\n\nsweep_mesh_size: float, optional\n\nSweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nn_divisions: int, optional\n\nNumber of divisions in the sweep direction.\n\nthin_sweep: bool, optional\n\nThin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nsweep_type: SweepType, optional\n\nOption to specify the sweep mesh decomposition type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.max_angle.html#max_angle","title":"max_angle","text":"max_angle\n\n\n\nproperty LocalSurferParams.max_angle: float\n\nMaximum feature angle limit used to identify and preserve features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nHexCoreCellElementType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PartSummaryResults.set_default(message=None, n_topo_edges=None, n_topo_faces=None, n_topo_volumes=None, n_edge_zonelets=None, n_face_zonelets=None, n_cell_zonelets=None, n_edge_zones=None, n_face_zones=None, n_volume_zones=None, n_labels=None, n_nodes=None, n_faces=None, n_cells=None, n_tri_faces=None, n_poly_faces=None, n_quad_faces=None, n_second_order_tri_faces=None, n_second_order_quad_faces=None, n_tet_cells=None, n_pyra_cells=None, n_prism_cells=None, n_poly_cells=None, n_hex_cells=None, n_second_order_tet_cells=None, n_second_order_pyra_cells=None, n_second_order_prism_cells=None, n_second_order_hex_cells=None, n_unmeshed_topo_faces=None)\n\nSet the default values of the PartSummaryResults object.\n\nParameters\n\nmessage: str, optional\n\nPart summary text.\n\nn_topo_edges: int, optional\n\nNumber of topoedges.\n\nn_topo_faces: int, optional\n\nNumber of topofaces.\n\nn_topo_volumes: int, optional\n\nNumber of topovolumes.\n\nn_edge_zonelets: int, optional\n\nNumber of edge zonelets.\n\nn_face_zonelets: int, optional\n\nNumber of face zonelets.\n\nn_cell_zonelets: int, optional\n\nNumber of cell zonelets.\n\nn_edge_zones: int, optional\n\nNumber of edge zones.\n\nn_face_zones: int, optional\n\nNumber of face zones.\n\nn_volume_zones: int, optional\n\nNumber of volume zones.\n\nn_labels: int, optional\n\nNumber of labels.\n\nn_nodes: int, optional\n\nNumber of nodes.\n\nn_faces: int, optional\n\nNumber of faces.\n\nn_cells: int, optional\n\nNumber of cells.\n\nn_tri_faces: int, optional\n\nNumber of triangular faces.\n\nn_poly_faces: int, optional\n\nNumber of polygonal faces.\n\nn_quad_faces: int, optional\n\nNumber of quadrilateral faces.\n\nn_second_order_tri_faces: int, optional\n\nNumber of second order triangular faces.\n\nn_second_order_quad_faces: int, optional\n\nNumber of second order quadrilateral faces.\n\nn_tet_cells: int, optional\n\nNumber of tetrahedral cells.\n\nn_pyra_cells: int, optional\n\nNumber of pyramid cells.\n\nn_prism_cells: int, optional\n\nNumber of prism cells.\n\nn_poly_cells: int, optional\n\nNumber of polyhedral cells.\n\nn_hex_cells: int, optional\n\nNumber of hexahedral cells.\n\nn_second_order_tet_cells: int, optional\n\nNumber of second order tetrahedral cells.\n\nn_second_order_pyra_cells: int, optional\n\nNumber of second order pyramid cells.\n\nn_second_order_prism_cells: int, optional\n\nNumber of second order prism cells.\n\nn_second_order_hex_cells: int, optional\n\nNumber of second order hexahedral cells.\n\nn_unmeshed_topo_faces: int, optional\n\nNumber of unmeshed topofaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairEdgesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic RepairEdgesParams.print_default()\n\nPrint the default values of RepairEdgesParams object.\n\nExamples\n\n>>> RepairEdgesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesParams.min_dihedral_angle.html#min_dihedral_angle","title":"min_dihedral_angle","text":"min_dihedral_angle\n\n\n\nproperty SmoothDihedralFaceNodesParams.min_dihedral_angle: float\n\nMinimum angle to be used to identify dihedral faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointParams.html#creatematerialpointparams","title":"CreateMaterialPointParams","text":"CreateMaterialPointParams\n\n\n\nclass ansys.meshing.prime.CreateMaterialPointParams(model=None, type=None, json_data=None, **kwargs)\n\nDefines parameters to create material point.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateMaterialPointParams object with default parameters.\n\ntype: MaterialPointType, optional\n\nDefines the type of material point.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateMaterialPointParams object with provided parameters.\n\nExamples\n\n>>> create_material_point_params = prime.CreateMaterialPointParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseResults.n_collapsed.html#n_collapsed","title":"n_collapsed","text":"n_collapsed\n\n\n\nproperty CollapseResults.n_collapsed: int\n\nNumber of face elements collapsed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.name.html#name","title":"name","text":"name\n\n\n\nproperty PrismControl.name\n\nGet the name of PrismControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nLSDynaFileFormatType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.error_codes_per_topo_volume.html#error_codes_per_topo_volume","title":"error_codes_per_topo_volume","text":"error_codes_per_topo_volume\n\n\n\nproperty MeshStackerResults.error_codes_per_topo_volume: Iterable[int]\n\nError codes associated with the topovolume-by-topovolume stacking."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ComputeVolumesResults.set_default(error_code=None, error_locations=None, volumes=None, material_point_volumes=None, external_open_face_zonelets=None, warning_codes=None)\n\nSet the default values of the ComputeVolumesResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nerror_locations: Iterable[float], optional\n\nCoordinates of problematic locations in the surface mesh.\n\nvolumes: Iterable[int], optional\n\nIds of computed volumes.\n\nmaterial_point_volumes: Iterable[int], optional\n\nIds of computed volumes enclosing material points.\n\nexternal_open_face_zonelets: Iterable[int], optional\n\nFace zonelet ids that are in external space and not part of any computed volumes.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the compute volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.AUTOMESHFAILED.html#automeshfailed","title":"AUTOMESHFAILED","text":"AUTOMESHFAILED\n\n\n\nErrorCode.AUTOMESHFAILED = 100\n\nAuto meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.edge_connect_type.html#edge_connect_type","title":"edge_connect_type","text":"edge_connect_type\n\n\n\nproperty RepairTopologyParams.edge_connect_type: int\n\nEdge connection type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.search_zonelets_by_invalid_normals.html#search_zonelets_by_invalid_normals","title":"search_zonelets_by_invalid_normals","text":"search_zonelets_by_invalid_normals\n\n\n\nSurfaceSearch.search_zonelets_by_invalid_normals(part_id, face_zonelets, register_id)\n\nSearch face zonelets to identify faces with invalid normals.\n\nSearch face zonelets to identify faces with invalid normals.\n\nParameters\n\npart_id\n\npython:int\n\nId of part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets.\n\nregister_id\n\npython:int\n\nId of register.\n\nReturns\n\n:\n\n\n\nSearchByInvalidNormalsResults\n\nReturns the SearchByInvalidNormalsResults.\n\nReturn type\n\nSearchByInvalidNormalsResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_invalid_normals(part_id, face_zonelets, register_id)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.real.html#real","title":"real","text":"real\n\n\n\nMaterialPointType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERSURFACEHASHOLES.html#wrappersurfacehasholes","title":"WRAPPERSURFACEHASHOLES","text":"WRAPPERSURFACEHASHOLES\n\n\n\nErrorCode.WRAPPERSURFACEHASHOLES = 3410\n\nWrapper surface has holes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsResults.html#searchbyfoldsresults","title":"SearchByFoldsResults","text":"SearchByFoldsResults\n\n\n\nclass ansys.meshing.prime.SearchByFoldsResults(model=None, n_found=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated with search folds operation.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchByFoldsResults object with default parameters.\n\nn_found: int, optional\n\nNumber of folds identified.\n\nerror_code: ErrorCode, optional\n\nError code associated with search folds operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchByFoldsResults object with provided parameters.\n\nExamples\n\n>>> search_by_folds_results = prime.SearchByFoldsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nFaceQualityMeasure.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsParams.contact_tolerance.html#contact_tolerance","title":"contact_tolerance","text":"contact_tolerance\n\n\n\nproperty RefineAtContactsParams.contact_tolerance: float\n\nMaximum tolerance used to identify face elements as contacts."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteInteriorNodesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteInteriorNodesParams.print_default()\n\nPrint the default values of DeleteInteriorNodesParams object.\n\nExamples\n\n>>> DeleteInteriorNodesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessResults.html#addthicknessresults","title":"AddThicknessResults","text":"AddThicknessResults\n\n\n\nclass ansys.meshing.prime.AddThicknessResults(model=None, error_code=None, part_id=None, json_data=None, **kwargs)\n\nResult structure associated with add thickness zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a AddThicknessResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\npart_id: int, optional\n\nThe created thickness part id.\n\njson_data: dict, optional\n\nJSON dictionary to create a AddThicknessResults object with provided parameters.\n\nExamples\n\n>>> add_thickness_results = prime.AddThicknessResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_topo_volumes.html#n_topo_volumes","title":"n_topo_volumes","text":"n_topo_volumes\n\n\n\nproperty PartSummaryResults.n_topo_volumes: int\n\nNumber of topovolumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.enable_multi_threading.html#enable_multi_threading","title":"enable_multi_threading","text":"enable_multi_threading\n\n\n\nproperty SurferParams.enable_multi_threading: bool\n\nOption to perform surface meshing in parallel using multithreads."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.html#ansysmeshingprimelucid","title":"ansys.meshing.prime.lucid","text":"ansys.meshing.prime.lucid\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.new_topo_volumes.html#new_topo_volumes","title":"new_topo_volumes","text":"new_topo_volumes\n\n\n\nproperty ComputeTopoVolumesResults.new_topo_volumes: Iterable[int]\n\nIds of new topovolumes computed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic HexCoreParams.print_default()\n\nPrint the default values of HexCoreParams object.\n\nExamples\n\n>>> HexCoreParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty SubtractVolumesResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the volume subtract operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByInvalidNormalsResults.html#searchbyinvalidnormalsresults","title":"SearchByInvalidNormalsResults","text":"SearchByInvalidNormalsResults\n\n\n\nclass ansys.meshing.prime.SearchByInvalidNormalsResults(model=None, n_found=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated with search invalid normals operation.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchByInvalidNormalsResults object with default parameters.\n\nn_found: int, optional\n\nNumber of invalid normals identified.\n\nerror_code: ErrorCode, optional\n\nError code associated with search invalid normals operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchByInvalidNormalsResults object with provided parameters.\n\nExamples\n\n>>> search_by_invalid_normals_results = prime.SearchByInvalidNormalsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSizingType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineSplineParams.refine_flag_w.html#refine_flag_w","title":"refine_flag_w","text":"refine_flag_w\n\n\n\nproperty RefineSplineParams.refine_flag_w: bool\n\nIndicates whether refinement is applied in w direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty FaceAndEdgeConnectivityResults.error_code: ErrorCode\n\nError code associated with the get face and edge connectivity operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.repair_edges.html#repair_edges","title":"repair_edges","text":"repair_edges\n\n\n\nproperty RepairTopologyParams.repair_edges: bool\n\nOption to repair edges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOTSUPPORTEDFORNONQUADFACEZONE.html#notsupportedfornonquadfacezone","title":"NOTSUPPORTEDFORNONQUADFACEZONE","text":"NOTSUPPORTEDFORNONQUADFACEZONE\n\n\n\nErrorCode.NOTSUPPORTEDFORNONQUADFACEZONE = 1203\n\nOperation supports only quads."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.number_of_threads.html#number_of_threads","title":"number_of_threads","text":"number_of_threads\n\n\n\nproperty WrapperImproveQualityParams.number_of_threads: int\n\nNumber of threads for multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatCircularFacesParams.surface_mesh_constant_size.html#surface_mesh_constant_size","title":"surface_mesh_constant_size","text":"surface_mesh_constant_size\n\n\n\nproperty DetectAndTreatCircularFacesParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod BodyQueryType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.resolve_spikes.html#resolve_spikes","title":"resolve_spikes","text":"resolve_spikes\n\n\n\nproperty WrapperImproveQualityParams.resolve_spikes: bool\n\nControl to perform removing spikes or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSizingParams.min_size.html#min_size","title":"min_size","text":"min_size\n\n\n\nproperty MultiZoneSizingParams.min_size: float\n\nDefines global minimum mesh size.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.imag.html#imag","title":"imag","text":"imag\n\n\n\nVolumeNamingType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.imag.html#imag","title":"imag","text":"imag\n\n\n\nScaffolderRepairMode.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CellStatisticsParams.print_default()\n\nPrint the default values of CellStatisticsParams object.\n\nExamples\n\n>>> CellStatisticsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineSplineParams.html#refinesplineparams","title":"RefineSplineParams","text":"RefineSplineParams\n\n\n\nclass ansys.meshing.prime.RefineSplineParams(model=None, refine_flag_u=None, refine_flag_v=None, refine_flag_w=None, spline_refinement_type=None, json_data=None, **kwargs)\n\nSpline refinement parameters.\n\nParameters\n\nmodel: Model\n\nModel to create a RefineSplineParams object with default parameters.\n\nrefine_flag_u: bool, optional\n\nIndicates whether refinement is applied in u direction.\n\nrefine_flag_v: bool, optional\n\nIndicates whether refinement is applied in v direction.\n\nrefine_flag_w: bool, optional\n\nIndicates whether refinement is applied in w direction.\n\nspline_refinement_type: SplineRefinementType, optional\n\nType of spline refinement. Currently, supports h-refinement and p-refinement.\n\njson_data: dict, optional\n\nJSON dictionary to create a RefineSplineParams object with provided parameters.\n\nExamples\n\n>>> refine_spline_params = prime.RefineSplineParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismStairStep.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PrismStairStep.set_default(check_proximity=None, gap_factor_scale=None)\n\nSet the default values of the PrismStairStep object.\n\nParameters\n\ncheck_proximity: bool, optional\n\nCheck whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\ngap_factor_scale: float, optional\n\nScale factor for prism proximity detection gap factor."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.QUADRATICTETNOTSUPPORTEDINPARALLEL.html#quadratictetnotsupportedinparallel","title":"QUADRATICTETNOTSUPPORTEDINPARALLEL","text":"QUADRATICTETNOTSUPPORTEDINPARALLEL\n\n\n\nErrorCode.QUADRATICTETNOTSUPPORTEDINPARALLEL = 130\n\nQuadratic tetrahedal meshing is not supported in parallel mode."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.imag.html#imag","title":"imag","text":"imag\n\n\n\nScopeExpressionType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.html#topodata","title":"TopoData","text":"TopoData\n\n\n\nclass ansys.meshing.prime.TopoData(model, id, object_id, name)\n\nTopodata has all information about connectivity of nodes, edges, elements and more.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create TopoData object.\n\nid\n\npython:int\n\nId of the TopoData.\n\nobject_id\n\npython:int\n\nObject id of the TopoData.\n\nname\n\npython:str\n\nName of the TopoData.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.normal_angle.html#normal_angle","title":"normal_angle","text":"normal_angle\n\n\n\nproperty CurvatureSizingParams.normal_angle: float\n\nMaximum allowable angle at which one element edge may span."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CollapseResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesParams.html#deletetopoentitiesparams","title":"DeleteTopoEntitiesParams","text":"DeleteTopoEntitiesParams\n\n\n\nclass ansys.meshing.prime.DeleteTopoEntitiesParams(model=None, delete_geom_zonelets=None, delete_mesh_zonelets=None, json_data=None, **kwargs)\n\nParameters to control delete topoentities.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteTopoEntitiesParams object with default parameters.\n\ndelete_geom_zonelets: bool, optional\n\nOption to delete geometry zonelets of topology.\n\ndelete_mesh_zonelets: bool, optional\n\nOption to delete mesh zonelets of topology.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteTopoEntitiesParams object with provided parameters.\n\nExamples\n\n>>> delete_topo_entities_params = prime.DeleteTopoEntitiesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesParams.html#examples-using-deletetopoentitiesparams","title":"DeleteTopoEntitiesParams > Examples using DeleteTopoEntitiesParams","text":"Examples using DeleteTopoEntitiesParams\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.set_volume_scope.html#set_volume_scope","title":"set_volume_scope","text":"set_volume_scope\n\n\n\nMultiZoneControl.set_volume_scope(scope_info)\n\nSets the scope for volume in terms of topovolumes.The topovolumes given by the scope are imported by MultiZone to generate MultiZone mesh on it.\n\nParameters\n\nscope_info\n\nScopeDefinition\n\nScoped topovolumes.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_volume_scope(scope_info)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.INVALIDBOUNDARYTOPOFACES.html#invalidboundarytopofaces","title":"INVALIDBOUNDARYTOPOFACES","text":"INVALIDBOUNDARYTOPOFACES\n\n\n\nTopoSearchField.INVALIDBOUNDARYTOPOFACES = 5\n\nDiagnoses topofaces with incorrect bounding edge orientation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.set_volume_scope.html#set_volume_scope","title":"set_volume_scope","text":"set_volume_scope\n\n\n\nThinVolumeControl.set_volume_scope(entities)\n\nSets the volume scope of thin volume control.\n\nParameters\n\nentities\n\nScopeDefinition\n\nScope definition for volume entities.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = thin_vol_ctrl.set_volume_scope(entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineTetMeshParams.nist.html#nist","title":"nist","text":"nist\n\n\n\nproperty RefineTetMeshParams.nist: int\n\nInterpolation elements in the local t-direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectFacesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ConnectFacesParams.print_default()\n\nPrint the default values of ConnectFacesParams object.\n\nExamples\n\n>>> ConnectFacesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetFeatureRecoveriesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SetFeatureRecoveriesResults.set_default(ids=None, error_code=None)\n\nSet the default values of the SetFeatureRecoveriesResults object.\n\nParameters\n\nids: Iterable[int], optional\n\nIds of added feature recovery controls.\n\nerror_code: ErrorCode, optional\n\nError code associated with the set feature recoveries."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityParams.reorder_face_zonelets_mid_nodes.html#reorder_face_zonelets_mid_nodes","title":"reorder_face_zonelets_mid_nodes","text":"reorder_face_zonelets_mid_nodes\n\n\n\nproperty FaceAndEdgeConnectivityParams.reorder_face_zonelets_mid_nodes: bool\n\nOption to reorder mid nodes for quadratic faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseResults.html#collapseresults","title":"CollapseResults","text":"CollapseResults\n\n\n\nclass ansys.meshing.prime.CollapseResults(model=None, error_code=None, n_collapsed=None, n_splits=None, json_data=None, **kwargs)\n\nResults associated with collapse face elements.\n\nParameters\n\nmodel: Model\n\nModel to create a CollapseResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nn_collapsed: int, optional\n\nNumber of face elements collapsed.\n\nn_splits: int, optional\n\nNumber of face elements split.\n\njson_data: dict, optional\n\nJSON dictionary to create a CollapseResults object with provided parameters.\n\nExamples\n\n>>> collapse_results = prime.CollapseResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripResults.html#searchbythinstripresults","title":"SearchByThinStripResults","text":"SearchByThinStripResults\n\n\n\nclass ansys.meshing.prime.SearchByThinStripResults(model=None, n_found=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with search by thin strip of face elements.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchByThinStripResults object with default parameters.\n\nn_found: int, optional\n\nNumber of face elements identified as thin strips.\n\nerror_code: ErrorCode, optional\n\nError code associated with search thin strips operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchByThinStripResults object with provided parameters.\n\nExamples\n\n>>> search_by_thin_strip_results = prime.SearchByThinStripResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.html#autonodemoveparams","title":"AutoNodeMoveParams","text":"AutoNodeMoveParams\n\n\n\nclass ansys.meshing.prime.AutoNodeMoveParams(model=None, quality_measure=None, target_quality=None, dihedral_angle=None, n_iterations_per_node=None, restrict_boundary_nodes_along_surface=None, n_attempts=None, json_data=None, **kwargs)\n\nParameters used to improve volume mesh by auto node move.\n\nParameters\n\nmodel: Model\n\nModel to create a AutoNodeMoveParams object with default parameters.\n\nquality_measure: CellQualityMeasure, optional\n\nSpecify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\ntarget_quality: float, optional\n\nSpecify target quality used for the mesh improvement based on specified quality measure.\n\ndihedral_angle: float, optional\n\nDihedral angle used to mantain features of boundary face zonelets.\n\nn_iterations_per_node: int, optional\n\nNumber of iterations per node to be moved.\n\nrestrict_boundary_nodes_along_surface: bool, optional\n\nOption to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\nn_attempts: int, optional\n\nNumber of attempts to improve specified quality measure by node movement.\n\njson_data: dict, optional\n\nJSON dictionary to create a AutoNodeMoveParams object with provided parameters.\n\nExamples\n\n>>> auto_node_move_params = prime.AutoNodeMoveParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.html#examples-using-autonodemoveparams","title":"AutoNodeMoveParams > Examples using AutoNodeMoveParams","text":"Examples using AutoNodeMoveParams\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchMorphParams.html#matchmorphparams","title":"MatchMorphParams","text":"MatchMorphParams\n\n\n\nclass ansys.meshing.prime.MatchMorphParams(model=None, json_data=None, **kwargs)\n\nMatchMorphParams describes the parameters required for match morphing.\n\nParameters\n\nmodel: Model\n\nModel to create a MatchMorphParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a MatchMorphParams object with provided parameters.\n\nExamples\n\n>>> match_morph_params = prime.MatchMorphParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchMorphParams.html#examples-using-matchmorphparams","title":"MatchMorphParams > Examples using MatchMorphParams","text":"Examples using MatchMorphParams\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WrapperCloseGapsResult.set_default(error_code=None, part_id=None)\n\nSet the default values of the WrapperCloseGapsResult object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with a close gaps operation.\n\npart_id: int, optional\n\nId of part created with gap cover patches."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CollapseResults.print_default()\n\nPrint the default values of CollapseResults object.\n\nExamples\n\n>>> CollapseResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nLabelToZoneMethod.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCdbSimulationType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactElementTypeParams.contact_pair_surf_to_surf.html#contact_pair_surf_to_surf","title":"contact_pair_surf_to_surf","text":"contact_pair_surf_to_surf\n\n\n\nproperty ContactElementTypeParams.contact_pair_surf_to_surf: int\n\nElement type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.export_mapdl_cdb.html#export_mapdl_cdb","title":"export_mapdl_cdb","text":"export_mapdl_cdb\n\n\n\nFileIO.export_mapdl_cdb(file_name, params)\n\nExport an MAPDL CDB file.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the CDB file on disk.\n\nparams\n\nExportMapdlCdbParams\n\nParameters for exporting the CDB file.\n\nReturns\n\n:\n\n\n\nExportMapdlCdbResults\n\nResults from exporting the CDB file.\n\nReturn type\n\nExportMapdlCdbResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams(model=model)\n>>> results = file_io.export_mapdl_cdb(\"/tmp/file.cdb\", params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.export_mapdl_cdb.html#examples-using-fileioexport_mapdl_cdb","title":"export_mapdl_cdb > Examples using FileIO.export_mapdl_cdb","text":"Examples using FileIO.export_mapdl_cdb\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.Y.html#y","title":"Y","text":"Y\n\n\n\nContactPatchAxis.Y = 2\n\nFlow or wake inflation in the Y direction for BOI creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.logger.html#logger","title":"logger","text":"logger\n\n\n\nproperty Model.logger: PrimeLogger\n\nGet PyPrimeMesh’s logger instance.\n\nPyPrimeMesh’s logger instance can be used to save the logs to a file,\nredirect the logs to the given stream, control the verbosity\nof messages printed by PyPrimeMesh and more.\n\nReturns\n\nPrimeLogger\n\nPyPrimeMesh’s logger instance.\n\nExamples\n\nSave logs to a file.\n\n>>> model.logger.add_file_handler(logs_dir=r\"./tmp\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetParams.html#tetparams","title":"TetParams","text":"TetParams\n\n\n\nclass ansys.meshing.prime.TetParams(model=None, quadratic=None, json_data=None, **kwargs)\n\nParameters to control tetrahedral mesh generation.\n\nParameters\n\nmodel: Model\n\nModel to create a TetParams object with default parameters.\n\nquadratic: bool, optional\n\nOption to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh.\n\njson_data: dict, optional\n\nJSON dictionary to create a TetParams object with provided parameters.\n\nExamples\n\n>>> tet_params = prime.TetParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SearchByQualityResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControlSummaryParams.html#sizecontrolsummaryparams","title":"SizeControlSummaryParams","text":"SizeControlSummaryParams\n\n\n\nclass ansys.meshing.prime.SizeControlSummaryParams(model=None, json_data=None, **kwargs)\n\nParameters used to get size control summary.\n\nParameters\n\nmodel: Model\n\nModel to create a SizeControlSummaryParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a SizeControlSummaryParams object with provided parameters.\n\nExamples\n\n>>> size_control_summary_params = prime.SizeControlSummaryParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSpline.create_tet_mesh_on_trimmed_solid_spline.html#create_tet_mesh_on_trimmed_solid_spline","title":"create_tet_mesh_on_trimmed_solid_spline","text":"create_tet_mesh_on_trimmed_solid_spline\n\n\n\nTrimmedSpline.create_tet_mesh_on_trimmed_solid_spline(part_id, mesh_params)\n\nCreates tetrahedral mesh on trimmed solid spline.\n\nParameters\n\npart_id\n\npython:int\n\nPart on which the tetrahedral meshing is performed.\n\nmesh_params\n\nTetMeshSplineParams\n\nParameters to configure the meshing.\n\nReturns\n\n:\n\n\n\nTrimmedSplineResults\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.CreateTetMeshOnTrimmedSolidSpline(part_id, mesh_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureExtraction.create_intersection_edge_loops.html#create_intersection_edge_loops","title":"create_intersection_edge_loops","text":"create_intersection_edge_loops\n\n\n\nFeatureExtraction.create_intersection_edge_loops(part_face_zonelets, intersecting_part_face_zonelets, params)\n\nFinds the edge zonelets formed by intersection of two face zonelets. Performs n to n intersection of face zonelets present in part face zonelets with those in intersecting part face zonelets depending on the input parameters. Order of input does not matter.\n\nParameters\n\npart_face_zonelets\n\nPartZoneletsArray\n\nList of part zonelets to be intersected.\n\nintersecting_part_face_zonelets\n\nPartZoneletsArray\n\nList of part zonelets to intersect with.\n\nparams\n\nCreateIntersectionEdgeLoopsParams\n\nParameter to control edge extraction.\n\nReturns\n\n:\n\n\n\nCreateIntersectionEdgeLoopsResults\n\nReturns the CreateIntersectionEdgeLoopsResults.\n\nReturn type\n\nCreateIntersectionEdgeLoopsResults\n\nExamples\n\n>>> results = feature_extraction.create_intersection_edge_loops(part_face_zonelets, intersecting_part_face_zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_edge_zones.html#get_edge_zones","title":"get_edge_zones","text":"get_edge_zones\n\n\n\nPart.get_edge_zones()\n\nGet all the edge zones of the part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn ids of edge zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> edge_zones = part.get_edge_zones()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod TopoSearchField.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFACESEARCHPARTWITHMESHNOTFOUND.html#surfacesearchpartwithmeshnotfound","title":"SURFACESEARCHPARTWITHMESHNOTFOUND","text":"SURFACESEARCHPARTWITHMESHNOTFOUND\n\n\n\nErrorCode.SURFACESEARCHPARTWITHMESHNOTFOUND = 2803\n\nPart with mesh not found for surface quality check."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDCMBLOCKFORMAT.html#invalidcmblockformat","title":"INVALIDCMBLOCKFORMAT","text":"INVALIDCMBLOCKFORMAT\n\n\n\nErrorCode.INVALIDCMBLOCKFORMAT = 16502\n\nCMBLOCK command format error in CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.ASPECTRATIO.html#aspectratio","title":"ASPECTRATIO","text":"ASPECTRATIO\n\n\n\nCellQualityMeasure.ASPECTRATIO = 5\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.html#wrapperclosegapsparams","title":"WrapperCloseGapsParams","text":"WrapperCloseGapsParams\n\n\n\nclass ansys.meshing.prime.WrapperCloseGapsParams(model=None, target=None, gap_size=None, material_point_name=None, suggested_part_name=None, number_of_threads=None, create_new_part=None, resolution_factor=None, json_data=None, **kwargs)\n\nWrapperCloseGapsParams to define parameters for close gaps operation.\n\nParameters\n\nmodel: Model\n\nModel to create a WrapperCloseGapsParams object with default parameters.\n\ntarget: ScopeDefinition, optional\n\nScope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope.\n\ngap_size: float, optional\n\nMaximum gap size to be closed.\n\nmaterial_point_name: str, optional\n\nMaterial point name near the gaps to be closed.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created patching surfaces.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading.\n\ncreate_new_part: bool, optional\n\nCreates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\nresolution_factor: float, optional\n\nFactor to resolve the smallest gap for the given gap size.\n\njson_data: dict, optional\n\nJSON dictionary to create a WrapperCloseGapsParams object with provided parameters.\n\nExamples\n\n>>> wrapper_close_gaps_params = prime.WrapperCloseGapsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.aggressive_edge_merge.html#aggressive_edge_merge","title":"aggressive_edge_merge","text":"aggressive_edge_merge\n\n\n\nproperty DefeatureTopologyParams.aggressive_edge_merge: bool\n\nIndicate whether to allow aggressive edge merge while performing partial defeature.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileReadParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FileReadParams.set_default(append=None)\n\nSet the default values of the FileReadParams object.\n\nParameters\n\nappend: bool, optional\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsParams.trace_edges.html#trace_edges","title":"trace_edges","text":"trace_edges\n\n\n\nproperty SubtractZoneletsParams.trace_edges: bool\n\nTrace edges of intersection on target. Only works if extractEdges is true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.refinement_fraction_u.html#refinement_fraction_u","title":"refinement_fraction_u","text":"refinement_fraction_u\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_u: float\n\nFraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty MergeZoneletsResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.NOHOLESFOUNDONPLANE.html#noholesfoundonplane","title":"NOHOLESFOUNDONPLANE","text":"NOHOLESFOUNDONPLANE\n\n\n\nWarningCode.NOHOLESFOUNDONPLANE = 5501\n\nProvides warning when no closed holes are found in the given face zonelets at given plane."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.html#faceconnectivityresults","title":"FaceConnectivityResults","text":"FaceConnectivityResults\n\n\n\nclass ansys.meshing.prime.FaceConnectivityResults(model=None, error_code=None, face_zonelet_ids=None, topo_face_ids=None, mesh_face_ids=None, face_zone_ids=None, face_zone_names=None, num_nodes_per_face_zonelet=None, node_coords=None, num_face_list_per_face_zonelet=None, face_list=None, json_data=None, **kwargs)\n\nResult of the face connectivity information.\n\nParameters\n\nmodel: Model\n\nModel to create a FaceConnectivityResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the get face connectivity operation.\n\nface_zonelet_ids: Iterable[int], optional\n\nFace zonelet ids for which connectivity data is available.\n\ntopo_face_ids: Iterable[int], optional\n\nTopoFace ids corresponding to each face zonelet id for topology based mesh.\n\nmesh_face_ids: Iterable[int], optional\n\nMesh face ids corresponding to each topoface.\n\nface_zone_ids: Iterable[int], optional\n\nFace zone id corresponding to each topoface or face zonelet.\n\nface_zone_names: List[str], optional\n\nFace zone name corresponding to each topoface or face zonelet.\n\nnum_nodes_per_face_zonelet: Iterable[int], optional\n\nNumber of nodes per face zonelet.\n\nnode_coords: Iterable[float], optional\n\nNode coordinates describing faces of face zonelet.\n\nnum_face_list_per_face_zonelet: Iterable[int], optional\n\nNumber of face list per face zonelet.\n\nface_list: Iterable[int], optional\n\nFace list describing connectivity of node coordinates.\n\njson_data: dict, optional\n\nJSON dictionary to create a FaceConnectivityResults object with provided parameters.\n\nExamples\n\n>>> face_connectivity_results = prime.FaceConnectivityResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.number_of_threads.html#number_of_threads","title":"number_of_threads","text":"number_of_threads\n\n\n\nproperty WrapParams.number_of_threads: int\n\nNumber of threads for multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferResults.topofaces_not_projected_on_geometry.html#topofaces_not_projected_on_geometry","title":"topofaces_not_projected_on_geometry","text":"topofaces_not_projected_on_geometry\n\n\n\nproperty SurferResults.topofaces_not_projected_on_geometry: Iterable[int]\n\nIds of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.compute_multi_edges.html#compute_multi_edges","title":"compute_multi_edges","text":"compute_multi_edges\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_multi_edges: bool\n\nControl to identify multi face edges are present or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentCaseResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportFluentCaseResults.set_default(error_code=None)\n\nSet the default values of the ImportFluentCaseResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.html#exportlsdynakeywordfileparams","title":"ExportLSDynaKeywordFileParams","text":"ExportLSDynaKeywordFileParams\n\n\n\nclass ansys.meshing.prime.ExportLSDynaKeywordFileParams(model=None, material_properties=None, database_keywords=None, output_format=None, analysis_type=None, compute_spotweld_thickness=None, write_thickness_file=None, output_controls_d3_part=None, json_data=None, **kwargs)\n\nParameters to control LS-DYNA keyword file export settings.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportLSDynaKeywordFileParams object with default parameters.\n\nmaterial_properties: str, optional\n\nMaterials in LS-DYNA format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndatabase_keywords: str, optional\n\nDatabase keywords in LS-DYNA format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\noutput_format: LSDynaFileFormatType, optional\n\nOutput file format used to write LS-DYNA file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nanalysis_type: LSDynaAnalysisType, optional\n\nOption to specify LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncompute_spotweld_thickness: bool, optional\n\nOption to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwrite_thickness_file: bool, optional\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\noutput_controls_d3_part: bool, optional\n\nOption to create D3Part card in output controls.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportLSDynaKeywordFileParams object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_keyword_file_params = prime.ExportLSDynaKeywordFileParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.measure_name.html#measure_name","title":"measure_name","text":"measure_name\n\n\n\nproperty SurfaceQualityResult.measure_name: str\n\nName of the face quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.set_shadow_geometry_scope.html#set_shadow_geometry_scope","title":"set_shadow_geometry_scope","text":"set_shadow_geometry_scope\n\n\n\nWrapperControl.set_shadow_geometry_scope(scope)\n\nSets shadow geometry scope to given scope.\n\nParameters\n\nscope\n\nScopeDefinition\n\nScopeDefinition to scope shadow entities for wrapping.\n\nExamples\n\n>>> wrapper_control.set_shadow_geometry_scope(scope)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nThinStripType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshResults.html#deletemeshresults","title":"DeleteMeshResults","text":"DeleteMeshResults\n\n\n\nclass ansys.meshing.prime.DeleteMeshResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated with delete mesh on topofaces.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteMeshResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteMeshResults object with provided parameters.\n\nExamples\n\n>>> delete_mesh_results = prime.DeleteMeshResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.real.html#real","title":"real","text":"real\n\n\n\nCreateVolumeZonesType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.PART.html#part","title":"PART","text":"PART\n\n\n\nPartCreationType.PART = 2\n\nDenotes a part per CAD Part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.CUBICC1.html#cubicc1","title":"CUBICC1","text":"CUBICC1\n\n\n\nSplineContinuityType.CUBICC1 = 1\n\nSpline use cubic C1 continuity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nJoinSeparateMethod.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nControlPointSelection.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDREGISTERID.html#invalidregisterid","title":"INVALIDREGISTERID","text":"INVALIDREGISTERID\n\n\n\nErrorCode.INVALIDREGISTERID = 2806\n\nInvalid register id provided. Register ids between 1 to 28 are valid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ExtractVolumesResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the compute volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteUnwettedParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteUnwettedParams.print_default()\n\nPrint the default values of DeleteUnwettedParams object.\n\nExamples\n\n>>> DeleteUnwettedParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.set_surface_scope.html#set_surface_scope","title":"set_surface_scope","text":"set_surface_scope\n\n\n\nPrismControl.set_surface_scope(entities)\n\nSets the surface control scope.\n\nParameters\n\nentities\n\nScopeDefinition\n\nScope definition entities.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = prism_control.set_surface_scope(entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.set_surface_scope.html#examples-using-prismcontrolset_surface_scope","title":"set_surface_scope > Examples using PrismControl.set_surface_scope","text":"Examples using PrismControl.set_surface_scope\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TriangulateResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TriangulateResults.set_default(error_code=None, n_faces_triangulated=None)\n\nSet the default values of the TriangulateResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of the operation.\n\nn_faces_triangulated: int, optional\n\nNumber of faces that were triangulated."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic AddThicknessResults.print_default()\n\nPrint the default values of AddThicknessResults object.\n\nExamples\n\n>>> AddThicknessResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.REMOVEOVERLAPWITHINTERSECT.html#removeoverlapwithintersect","title":"REMOVEOVERLAPWITHINTERSECT","text":"REMOVEOVERLAPWITHINTERSECT\n\n\n\nWarningCode.REMOVEOVERLAPWITHINTERSECT = 4501\n\nSelf intersections found. Use Intersect operation to remove it."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesResults.n_nodes_smoothed.html#n_nodes_smoothed","title":"n_nodes_smoothed","text":"n_nodes_smoothed\n\n\n\nproperty SmoothDihedralFaceNodesResults.n_nodes_smoothed: int\n\nNumber of dihedral face nodes smoothed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapResult.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty WrapResult.warning_codes: List[WarningCode]\n\nWarning codes associated with the wrap operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectHolesParams.allow_curved_topo_faces.html#allow_curved_topo_faces","title":"allow_curved_topo_faces","text":"allow_curved_topo_faces\n\n\n\nproperty DetectHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.base_size.html#base_size","title":"base_size","text":"base_size\n\n\n\nproperty WrapParams.base_size: float\n\nBase size to define octree."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.html#surfacefeaturetype","title":"SurfaceFeatureType","text":"SurfaceFeatureType\n\n\n\nclass ansys.meshing.prime.SurfaceFeatureType(*values)\n\nType of face edges considered as features.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.set_multi_zone_sizing_params.html#set_multi_zone_sizing_params","title":"set_multi_zone_sizing_params","text":"set_multi_zone_sizing_params\n\n\n\nMultiZoneControl.set_multi_zone_sizing_params(params)\n\nSets the MultiZone parameters.\n\nParameters\n\nparams\n\nMultiZoneSizingParams\n\nParameters required for MultiZone mesh.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_multi_zone_params(params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Wrapper.close_gaps.html#close_gaps","title":"close_gaps","text":"close_gaps\n\n\n\nWrapper.close_gaps(scope, params)\n\nClose gaps.\n\nClosing gaps creates patching surfaces within the face zonelets specified\nby scope using gap size.\n\nParameters\n\nscope\n\nScopeDefinition\n\nScope definition of the face zonelets.\n\nparams\n\nWrapperCloseGapsParams\n\nWrapper providing close gap parameters.\n\nReturns\n\n:\n\n\n\nWrapperCloseGapsResult\n\nResults from the wrapper for closing gaps.\n\nReturn type\n\nWrapperCloseGapsResult\n\nExamples\n\n>>> result = wrapper.close_gaps(scope, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.real.html#real","title":"real","text":"real\n\n\n\nEdgeMergeControl.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PARTNOTMESHED.html#partnotmeshed","title":"PARTNOTMESHED","text":"PARTNOTMESHED\n\n\n\nErrorCode.PARTNOTMESHED = 304\n\nPart is not meshed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.set_growth_params.html#set_growth_params","title":"set_growth_params","text":"set_growth_params\n\n\n\nShellBLControl.set_growth_params(params)\n\nSets growth parameters for ShellBL control.\n\nParameters\n\nparams\n\nShellBLControlGrowthParams\n\nParameters to set ShellBL growth.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_growth_params(ShellBLControlGrowthParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_zone_by_name.html#get_zone_by_name","title":"get_zone_by_name","text":"get_zone_by_name\n\n\n\nModel.get_zone_by_name(zone_name)\n\nGets the zone with the provided name.\n\nParameters\n\nzone_name\n\npython:str\n\nName of the zone.\n\nReturns\n\n:\n\n\n\npython:int\n\nReturns id of the zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> zone_id = model.get_zone_by_name(\"inlet\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.cad_faceter.html#cad_faceter","title":"cad_faceter","text":"cad_faceter\n\n\n\nproperty CadRefacetingParams.cad_faceter: CadFaceter\n\nACIS faceter is being deprecated from 25R1).\n\nType\n\nSpecify the available choices for faceter. The available option is Parasolid. (Note"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoftSizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SoftSizingParams.print_default()\n\nPrint the default values of SoftSizingParams object.\n\nExamples\n\n>>> SoftSizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateIntersectionEdgeLoopsParams.set_default(label_name=None)\n\nSet the default values of the CreateIntersectionEdgeLoopsParams object.\n\nParameters\n\nlabel_name: str, optional\n\nLabel name to be assigned to extracted features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMaterialPointResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty DeleteMaterialPointResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zones.html#get_face_zones","title":"get_face_zones","text":"get_face_zones\n\n\n\nPart.get_face_zones()\n\nGet all the face zones of the part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn ids of face zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zones = part.get_face_zones()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zones.html#examples-using-partget_face_zones","title":"get_face_zones > Examples using Part.get_face_zones","text":"Examples using Part.get_face_zones\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoiSizingParams.radius.html#radius","title":"radius","text":"radius\n\n\n\nproperty SoiSizingParams.radius: float\n\nRadius of the sphere within which the size is limited to the specified max value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoftSizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SoftSizingParams.set_default(max=None, growth_rate=None)\n\nSet the default values of the SoftSizingParams object.\n\nParameters\n\nmax: float, optional\n\nMaximum size used for computing edge and face size using soft size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod WrapRegion.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.IGNORE.html#ignore","title":"IGNORE","text":"IGNORE\n\n\n\nSplineFeatureCaptureType.IGNORE = 0\n\nIgnores feature capture in spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCellQualityMeasure.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.wrap_size.html#wrap_size","title":"wrap_size","text":"wrap_size\n\n\n\nproperty CreateBOIParams.wrap_size: float\n\nSet wrap size greater than the largest gap size in the input when performing_initial_wrap is true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_LEAKPREVENTIONMPTCANNOTBELIVE.html#wrappercontrol_leakpreventionmptcannotbelive","title":"WRAPPERCONTROL_LEAKPREVENTIONMPTCANNOTBELIVE","text":"WRAPPERCONTROL_LEAKPREVENTIONMPTCANNOTBELIVE\n\n\n\nErrorCode.WRAPPERCONTROL_LEAKPREVENTIONMPTCANNOTBELIVE = 3426\n\nDead material point cannot be same as live."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSweepType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Wrapper.html#wrapper","title":"Wrapper","text":"Wrapper\n\n\n\nclass ansys.meshing.prime.Wrapper(model)\n\nProvides operations for generating a surface mesh using wrapper technology.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create Wrapper object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.html#volumecontrol","title":"VolumeControl","text":"VolumeControl\n\n\n\nclass ansys.meshing.prime.VolumeControl(model, id, object_id, name, local=False)\n\nDefines the scope and type of volume mesh to generate.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create VolumeControl object.\n\nid\n\npython:int\n\nId of the VolumeControl.\n\nobject_id\n\npython:int\n\nObject id of the VolumeControl.\n\nname\n\npython:str\n\nName of the VolumeControl.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.html#examples-using-volumecontrol","title":"VolumeControl > Examples using VolumeControl","text":"Examples using VolumeControl\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControlSummaryResult.message.html#message","title":"message","text":"message\n\n\n\nproperty SizeControlSummaryResult.message: str\n\nSize control summary text."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nShellBLOffsetType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nLengthUnit.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteFringesAndOverlapsResults.print_default()\n\nPrint the default values of DeleteFringesAndOverlapsResults object.\n\nExamples\n\n>>> DeleteFringesAndOverlapsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.SIMPLE.html#simple","title":"SIMPLE","text":"SIMPLE\n\n\n\nLabelToZoneMethod.SIMPLE = 0\n\nSimple method for creating zones from labels.\n\nEntities are queried using labels, and zones are created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesResults.html#mergevolumesresults","title":"MergeVolumesResults","text":"MergeVolumesResults\n\n\n\nclass ansys.meshing.prime.MergeVolumesResults(model=None, merged_volumes=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with merge volumes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a MergeVolumesResults object with default parameters.\n\nmerged_volumes: Iterable[int], optional\n\nIds of volumes to which input volumes are merged.\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume merge operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a MergeVolumesResults object with provided parameters.\n\nExamples\n\n>>> merge_volumes_results = prime.MergeVolumesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.surface_mesh.html#surface_mesh","title":"surface_mesh","text":"surface_mesh\n\n\n\nMesh.surface_mesh(min_size=None, max_size=None, generate_quads=False, scope=<ansys.meshing.prime.lucid.scope.SurfaceScope object>)\n\nGenerate a surface mesh on a scope.\n\nThis method is used to generate a surface mesh of a constant or variable\nsize. It supports generating quad dominant or triangular elements.\n\nIf minimum and maximum sizes are provided, a variable size mesh is generated\nbetween the minimum size and maximum size by applying sizes based on curvature.\n\nIf only the minimum size or maximum size is provided, a constant size mesh\nis generated with the provided size.\n\nIf neither minimum size or maximum size is provided, the global maximum setting\nis used to generate a constant size mesh.\n\nParameters\n\nmin_size\n\npython:float, optional\n\nMinimum edge length of the mesh. The default is None.\n\nmax_size\n\npython:float, optional\n\nMaximum edge length of the mesh. The default is None.\n\ngenerate_quads\n\nbool, optional\n\nWhether to generate a quad dominant mesh. The default is\nFalse, in which case a triangular mesh is generated.\n\nscope\n\nSurfaceScope\n\nScope for generating the surface mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.surface_mesh.html#examples-using-meshsurface_mesh","title":"surface_mesh > Examples using Mesh.surface_mesh","text":"Examples using Mesh.surface_mesh\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.real.html#real","title":"real","text":"real\n\n\n\nAdvancedSurferSetup.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectResults.html#connectresults","title":"ConnectResults","text":"ConnectResults\n\n\n\nclass ansys.meshing.prime.ConnectResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the connection operations.\n\nParameters\n\nmodel: Model\n\nModel to create a ConnectResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError Code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a ConnectResults object with provided parameters.\n\nExamples\n\n>>> connect_results = prime.ConnectResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_unstructured_spline_solid.html#get_unstructured_spline_solid","title":"get_unstructured_spline_solid","text":"get_unstructured_spline_solid\n\n\n\nPart.get_unstructured_spline_solid()\n\nGets the unstructured solid spline for the part.\n\nReturns\n\n:\n\n\n\nIGAUnstructuredSplineSolid\n\nReturns the solid spline structure.\n\nReturn type\n\nIGAUnstructuredSplineSolid\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> spline = part.GetUnstructuredSplineSolid()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATECAPONFACEZONELETSFAILED.html#createcaponfacezoneletsfailed","title":"CREATECAPONFACEZONELETSFAILED","text":"CREATECAPONFACEZONELETSFAILED\n\n\n\nErrorCode.CREATECAPONFACEZONELETSFAILED = 2906\n\nFailed to create cap on face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsParams.merged_part_suggested_name.html#merged_part_suggested_name","title":"merged_part_suggested_name","text":"merged_part_suggested_name\n\n\n\nproperty MergePartsParams.merged_part_suggested_name: str\n\nSuggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CdbAnalysisType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphBCParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MorphBCParams.print_default()\n\nPrint the default values of MorphBCParams object.\n\nExamples\n\n>>> MorphBCParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.message.html#message","title":"message","text":"message\n\n\n\nproperty PartSummaryResults.message: str\n\nPart summary text."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic OptimizeQuadMeshParams.print_default()\n\nPrint the default values of OptimizeQuadMeshParams object.\n\nExamples\n\n>>> OptimizeQuadMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nMaterialPointType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCadRefacetingMaxEdgeSizeLimit.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.DEAD.html#dead","title":"DEAD","text":"DEAD\n\n\n\nCellZoneletType.DEAD = 0\n\nCell zonelet type is dead."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteUnwettedResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteUnwettedResult.set_default(error_code=None)\n\nSet the default values of the DeleteUnwettedResult object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with delete unwetted surfaces operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_volume_zones.html#get_volume_zones","title":"get_volume_zones","text":"get_volume_zones\n\n\n\nPart.get_volume_zones()\n\nGet all the volume zones of the part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn ids of volume zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volume_zones = part.get_volume_zones()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposerParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VTComposerParams.set_default(thin_stripes_tol=None)\n\nSet the default values of the VTComposerParams object.\n\nParameters\n\nthin_stripes_tol: float, optional\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentCaseParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportFluentCaseParams.set_default(cff_format=None)\n\nSet the default values of the ExportFluentCaseParams object.\n\nParameters\n\ncff_format: bool, optional\n\nOption to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_REPAIRSHARPCORNERANGLESFAILED.html#vt_repairsharpcorneranglesfailed","title":"VT_REPAIRSHARPCORNERANGLESFAILED","text":"VT_REPAIRSHARPCORNERANGLESFAILED\n\n\n\nErrorCode.VT_REPAIRSHARPCORNERANGLESFAILED = 3604\n\nRepair sharp corner angles operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.mesh_offset_faces.html#mesh_offset_faces","title":"mesh_offset_faces","text":"mesh_offset_faces\n\n\n\nproperty DetectAndTreatHolesParams.mesh_offset_faces: bool\n\nOption to mesh the offset holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic AutoMeshParams.print_default()\n\nPrint the default values of AutoMeshParams object.\n\nExamples\n\n>>> AutoMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ComputeVolumesResults.print_default()\n\nPrint the default values of ComputeVolumesResults object.\n\nExamples\n\n>>> ComputeVolumesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nBCPairType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.imag.html#imag","title":"imag","text":"imag\n\n\n\nHexCoreCellElementType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.DOORSLAM.html#doorslam","title":"DOORSLAM","text":"DOORSLAM\n\n\n\nLSDynaAnalysisType.DOORSLAM = 0\n\nOption to select doorslam as LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty DeleteVolumesResults.error_code: ErrorCode\n\nError code associated with the volume deletion operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_PINCHFACESFAILED.html#vt_pinchfacesfailed","title":"VT_PINCHFACESFAILED","text":"VT_PINCHFACESFAILED\n\n\n\nErrorCode.VT_PINCHFACESFAILED = 3605\n\nPinch faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.append.html#append","title":"append","text":"append\n\n\n\nproperty ImportCadParams.append: bool\n\nAppend imported CAD into existing model when true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneMeshResult.centroids.html#centroids","title":"centroids","text":"centroids\n\n\n\nproperty ZoneMeshResult.centroids: Iterable[float]\n\nFlattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…].\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_PREFINEMENTFAILED.html#iga_prefinementfailed","title":"IGA_PREFINEMENTFAILED","text":"IGA_PREFINEMENTFAILED\n\n\n\nErrorCode.IGA_PREFINEMENTFAILED = 2407\n\nP-refinement of spline failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nMergeNodeType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ComputeTopoVolumesResults.print_default()\n\nPrint the default values of ComputeTopoVolumesResults object.\n\nExamples\n\n>>> ComputeTopoVolumesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeField.html#sizefield","title":"SizeField","text":"SizeField\n\n\n\nclass ansys.meshing.prime.SizeField(model)\n\nThe size field is computed based on the size control defined.\n\nYou can remesh surfaces and edges based on the size field.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create SizeField object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeField.html#examples-using-sizefield","title":"SizeField > Examples using SizeField","text":"Examples using SizeField\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FixInvalidNormalNodeResults.set_default(error_code=None)\n\nSet the default values of the FixInvalidNormalNodeResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.n_duplicate_faces.html#n_duplicate_faces","title":"n_duplicate_faces","text":"n_duplicate_faces\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_duplicate_faces: int\n\nNumber of duplicate faces identified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.config_settings.html#config_settings","title":"config_settings","text":"config_settings\n\n\n\nproperty ExportMapdlCdbParams.config_settings: str\n\nMAPDL configuration settings in CDB format to be added at the beginning of the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.set_scope.html#set_scope","title":"set_scope","text":"set_scope\n\n\n\nPeriodicControl.set_scope(scope)\n\nSets the scope for periodic control to evaluate.\n\nPeriodic Control uses scope to evaluate entities for which periodic surface recovery must be carried out.\n\nParameters\n\nscope\n\nScopeDefinition\n\nScopeDefinition to scope entities for periodic surface recovery.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns the SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> surface_scope = prime.ScopeDefinition(model=model,\n>>>                     entity_type=prime.ScopeEntity.FACEZONELETS,\n>>>                     evaluation_type=prime.ScopeEvaluationType.LABELS,\n>>>                     label_expression=\"periodic-1\")\n>>> periodic_control.set_scope(surface_scope)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.dead_regions.html#dead_regions","title":"dead_regions","text":"dead_regions\n\n\n\nproperty WrapperPatchFlowRegionsParams.dead_regions: List[DeadRegion]\n\nList of dead regions.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.WRAPPER_SMALLERCONTACTPREVENTIONSIZE.html#wrapper_smallercontactpreventionsize","title":"WRAPPER_SMALLERCONTACTPREVENTIONSIZE","text":"WRAPPER_SMALLERCONTACTPREVENTIONSIZE\n\n\n\nWarningCode.WRAPPER_SMALLERCONTACTPREVENTIONSIZE = 6004\n\nContact prevention size is smaller than base size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.wrap.html#wrap","title":"wrap","text":"wrap\n\n\n\nMesh.wrap(min_size=None, max_size=None, growth_rate=1.2, elements_per_gap=None, normal_angle=18.0, input_parts='*', input_labels='*', keep_inputs=False, region_extract=WrapRegion.EXTERNAL, material_point=None, extract_features=True, create_intersection_loops=False, use_existing_features=False, enable_feature_octree_refinement=True, feature_angle=40.0, contact_prevention_size=None, number_of_threads=None, remesh_postwrap=True, recompute_remesh_sizes=False, use_existing_size_fields=False, size_fields=None, wrap_size_controls=None, remesh_size_controls=None, feature_recovery_params=None, contact_prevention_params=None, leak_prevention_params=None)\n\nWrap and remesh the input.\n\nThe default behavior is to perform an external wrap of all parts in the model\nusing curvature sizing and extracting features. The wrap is then remeshed\nto provide a surface mesh for the extracted region.\n\nGeodesic sizing is used only if soft and curvature controls are set.\nIf contact prevention size is set and geodesic sizing is available, contact\ndetection is used globally.\n\nIf minimum and maximum sizes are provided, variable size mesh is generated\nbetween the minimum size and maximum size by applying sizes based on curvature.\n\nIf either minimum size or maximum size is provided, constant size mesh\nis generated with the provided size.\n\nIf neither minimum size or maximum size is provided, global minimum and\nmaximum settings are used to generate a variable size mesh based on curvature.\n\nParameters\n\nmin_size\n\npython:float, optional\n\nMinimum edge length of the mesh. The default is None.\n\nmax_size\n\npython:float, optional\n\nMaximum edge length of the mesh. The default is None.\n\ngrowth_rate\n\npython:float, optional\n\nGrowth rate. The default is 1.2.\n\nelements_per_gap\n\npython:float, optional\n\nGlobal proximity size control elements per gap with self proximity.\nThe default is None.\n\nnormal_angle\n\npython:float, optional\n\nGlobal curvature size control normal angle. The default is 18.0.\n\ninput_parts\n\npython:str, optional\n\nParts to wrap. The default is \"*\".\n\ninput_labels\n\npython:str\n\nLabels to wrap. The default is \"*\".\n\nkeep_inputs\n\nbool, optional\n\nWhether to retain inputs. The default is False.\n\nregion_extract\n\nprime.WrapRegion\n\nRegion to wrap. The default is prime.WrapRegion.EXTERNAL.\n\nmaterial_point\n\nList[python:float], optional\n\nMaterial point if the region extraction method is set to\nmaterial point. The default is None.\n\nextract_features\n\nbool, optional\n\nWhether to extract feature edges using the feature angle. The\ndefault is True.\n\ncreate_intersection_loops\n\nbool, optional\n\nWhether to create intersection loops between all parts.\nThe default is False.\n\nuse_existing_features\n\nbool, optional\n\nWhether to maintain existing features on parts. The\ndefault is False.\n\nenable_feature_octree_refinement: bool, optional\n\nWhether to apply refinement to feature edges during the wrap.\nThe default is True.\n\nfeature_angle\n\npython:float, optional\n\nAngle to use for extracting features. The default is 40.0.\n\ncontact_prevention_size\n\npython:float, optional\n\nGlobal proximity size controls between all parts.\nThe default is None.\n\nnumber_of_threads\n\npython:int, optional\n\nNumber of threads. The default is None.\n\nremesh_postwrap\n\nbool, optional\n\nWhether to remesh the wrap. The default is True.\n\nrecompute_remesh_sizes\n\nbool, optional\n\nWhether to recompute sizes from global controls using\nthe wrap surface. The default is False.\n\nuse_existing_size_fields\n\nbool, optional\n\nWhether to use precomputed size fields. The default is False.\n\nsize_fields\n\nList[prime.SizeField], optional\n\nList of size fields to use. The default is None.\n\nwrap_size_controls\n\nList[prime.SizeControl], optional\n\nList of wrap size controls to use. The default is None.\n\nremesh_size_controls\n\nList[prime.SizeControl], optional\n\nList of remesh size controls to use. The default is None.\n\nfeature_recovery_params\n\nList[prime.FeatureRecoveryParams], optional\n\nList of feature recovery parameters to use. The default is None.\n\ncontact_prevention_params\n\nList[prime.ContactPreventionParams], optional\n\nList of contact prevention parameters to use. The default is None.\n\nleak_prevention_params\n\nList[prime.LeakPreventionParams], optional\n\nList of leak prevention parameters to use.  The default is None.\n\nReturns\n\n:\n\n\n\nWrapped part\n\nReturns Part.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> from ansys.meshing.prime import lucid\n>>> prime_client = prime.launch_prime()\n>>> model = prime_client.model\n>>> mesh = lucid.Mesh(model)\n>>> mesh.read(\"/my_geometry.stl\")\n>>> mesh.wrap(min_size=1, max_size=20, create_intersection_loops=True)\n>>> mesh.write(\"/mesh_output.pmdat\")\n>>> prime_client.exit()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.wrap.html#examples-using-meshwrap","title":"wrap > Examples using Mesh.wrap","text":"Examples using Mesh.wrap\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TOOLZONELETS_SELFINTERSECTING.html#toolzonelets_selfintersecting","title":"TOOLZONELETS_SELFINTERSECTING","text":"TOOLZONELETS_SELFINTERSECTING\n\n\n\nErrorCode.TOOLZONELETS_SELFINTERSECTING = 10004\n\nTool zonelets form a self intersecting volume."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportCadResults.set_default(error_code=None, cad_parameters=None)\n\nSet the default values of the ImportCadResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\ncad_parameters: Dict[str, Union[str, int, float, bool]], optional\n\nReturns the parameters associated with CAD. Available only with WorkBench CAD Reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseParams.html#collapseparams","title":"CollapseParams","text":"CollapseParams\n\n\n\nclass ansys.meshing.prime.CollapseParams(model=None, feature_type=None, collapse_ratio=None, preserve_quality=None, target_skewness=None, keep_edge_connectivity=None, json_data=None, **kwargs)\n\nParameters to collapse face elements.\n\nParameters\n\nmodel: Model\n\nModel to create a CollapseParams object with default parameters.\n\nfeature_type: SurfaceFeatureType, optional\n\nFeature type to be preserved when performing collapse.\n\ncollapse_ratio: float, optional\n\nMaximum ratio of shortest face edge length to longest face edge length.\n\npreserve_quality: bool, optional\n\nOption to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\ntarget_skewness: float, optional\n\nSkewness limit used as target to preserve quality. Better quality elements are skipped for collapse.\n\nkeep_edge_connectivity: bool, optional\n\nOption to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a CollapseParams object with provided parameters.\n\nExamples\n\n>>> collapse_params = prime.CollapseParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CONTACTPATCHRESULTSFAILED.html#contactpatchresultsfailed","title":"CONTACTPATCHRESULTSFAILED","text":"CONTACTPATCHRESULTSFAILED\n\n\n\nErrorCode.CONTACTPATCHRESULTSFAILED = 391\n\nContact patch creation process failed. Check the inputs."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nLabelToZoneMethod.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_EDGEPATHCOMPUTATIONFAILED.html#iga_edgepathcomputationfailed","title":"IGA_EDGEPATHCOMPUTATIONFAILED","text":"IGA_EDGEPATHCOMPUTATIONFAILED\n\n\n\nErrorCode.IGA_EDGEPATHCOMPUTATIONFAILED = 2414\n\nEdge path computation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty VolumetricSizeFieldComputeResults.error_code: ErrorCode\n\nError code associated with the compute volumetric size field operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPair.source_zonelet.html#source_zonelet","title":"source_zonelet","text":"source_zonelet\n\n\n\nproperty BCPair.source_zonelet: int\n\nId of source zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERPATCHFLOWREGIONS_EMPTYORINVALIDINPUT.html#wrapperpatchflowregions_emptyorinvalidinput","title":"WRAPPERPATCHFLOWREGIONS_EMPTYORINVALIDINPUT","text":"WRAPPERPATCHFLOWREGIONS_EMPTYORINVALIDINPUT\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_EMPTYORINVALIDINPUT = 3449\n\nEmpty or invalid input face zonelet ids.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.get_geom_zonelets_of_topo_edges.html#get_geom_zonelets_of_topo_edges","title":"get_geom_zonelets_of_topo_edges","text":"get_geom_zonelets_of_topo_edges\n\n\n\nTopoData.get_geom_zonelets_of_topo_edges(topo_edges)\n\nGet the geometry edge zonelets for the provided topoedge ids.\n\nParameters\n\ntopo_edges\n\nIterable[python:int]\n\nIds of the topoedges.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the geometry edge zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> geom_edge_zonelets = topo_data.get_geom_zonelets_of_topo_edges(topo_edges)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSizingType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty FixInvalidNormalNodeResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.imag.html#imag","title":"imag","text":"imag\n\n\n\nFlowDirection.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MERGESMALLZONELETSSUPPORTEDFORFACEZONELETS.html#mergesmallzoneletssupportedforfacezonelets","title":"MERGESMALLZONELETSSUPPORTEDFORFACEZONELETS","text":"MERGESMALLZONELETSSUPPORTEDFORFACEZONELETS\n\n\n\nErrorCode.MERGESMALLZONELETSSUPPORTEDFORFACEZONELETS = 1311\n\nMerge small zonelets option is supported for only face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FuseParams.print_default()\n\nPrint the default values of FuseParams object.\n\nExamples\n\n>>> FuseParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAResults.spline_ids.html#spline_ids","title":"spline_ids","text":"spline_ids\n\n\n\nproperty IGAResults.spline_ids: Iterable[int]\n\nIds of the created spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineSplineParams.spline_refinement_type.html#spline_refinement_type","title":"spline_refinement_type","text":"spline_refinement_type\n\n\n\nproperty RefineSplineParams.spline_refinement_type: SplineRefinementType\n\nType of spline refinement. Currently, supports h-refinement and p-refinement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nPrismControlOffsetType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.delete_mesh_on_topo_faces.html#delete_mesh_on_topo_faces","title":"delete_mesh_on_topo_faces","text":"delete_mesh_on_topo_faces\n\n\n\nTopoData.delete_mesh_on_topo_faces(topo_faces, params)\n\nDelete mesh on the provided topofaces.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of topofaces.\n\nparams\n\nDeleteMeshParams\n\nParameters to delete mesh on topofaces.\n\nReturns\n\n:\n\n\n\nDeleteMeshResults\n\nReturns the DeleteMeshResults.\n\nReturn type\n\nDeleteMeshResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prime.DeleteMeshParams(model = model)\n>>> result = topo_data.delete_mesh_on_topo_faces(top_faces, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseTool.html#collapsetool","title":"CollapseTool","text":"CollapseTool\n\n\n\nclass ansys.meshing.prime.CollapseTool(model)\n\nPerforms various collapse operations. For example, split and collapse on face zonelets.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create CollapseTool object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneParams.suggested_zone_name.html#suggested_zone_name","title":"suggested_zone_name","text":"suggested_zone_name\n\n\n\nproperty FillHolesAtPlaneParams.suggested_zone_name: str\n\nSuggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nVolumeNamingType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nShellBLOffsetType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCadRefacetingMaxEdgeSizeLimit.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSplineResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TrimmedSplineResults.set_default(error_code=None)\n\nSet the default values of the TrimmedSplineResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code if IGA operation is unsuccessful."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TopoFillHoleParams.print_default()\n\nPrint the default values of TopoFillHoleParams object.\n\nExamples\n\n>>> TopoFillHoleParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.BODY.html#body","title":"BODY","text":"BODY\n\n\n\nPartCreationType.BODY = 3\n\nDenotes a part per CAD Body."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.separate_by_zone.html#separate_by_zone","title":"separate_by_zone","text":"separate_by_zone\n\n\n\nproperty QuadToSplineParams.separate_by_zone: bool\n\nOption to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportSTLParams.html#exportstlparams","title":"ExportSTLParams","text":"ExportSTLParams\n\n\n\nclass ansys.meshing.prime.ExportSTLParams(model=None, part_ids=None, json_data=None, **kwargs)\n\nParameters to export STL file.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportSTLParams object with default parameters.\n\npart_ids: Iterable[int], optional\n\nIds of parts to export.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportSTLParams object with provided parameters.\n\nExamples\n\n>>> export_stlparams = prime.ExportSTLParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nIntersectionMask.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSolid.html#igaunstructuredsplinesolid","title":"IGAUnstructuredSplineSolid","text":"IGAUnstructuredSplineSolid\n\n\n\nclass ansys.meshing.prime.IGAUnstructuredSplineSolid(model=None, id=None, degree=None, invalid_jacobian_elements_count=None, json_data=None, **kwargs)\n\nInformation of unstructured spline solid.\n\nParameters\n\nmodel: Model\n\nModel to create a IGAUnstructuredSplineSolid object with default parameters.\n\nid: int, optional\n\nId of the unstructured spline solid.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndegree: int, optional\n\nDegree of the spline solid.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ninvalid_jacobian_elements_count: int, optional\n\nCount of elements with negative jacobian.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a IGAUnstructuredSplineSolid object with provided parameters.\n\nExamples\n\n>>> iga_unstructured_spline_solid = prime.IGAUnstructuredSplineSolid(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nThinStripType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PLANECOLLINEARPOINTS.html#planecollinearpoints","title":"PLANECOLLINEARPOINTS","text":"PLANECOLLINEARPOINTS\n\n\n\nErrorCode.PLANECOLLINEARPOINTS = 2805\n\nCollinear or duplicate points given to define plane."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MICROSTRUCTURESMOOTHNOTSUPPORTED.html#microstructuresmoothnotsupported","title":"MICROSTRUCTURESMOOTHNOTSUPPORTED","text":"MICROSTRUCTURESMOOTHNOTSUPPORTED\n\n\n\nErrorCode.MICROSTRUCTURESMOOTHNOTSUPPORTED = 13004\n\nSmoothing operation is not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.id.html#id","title":"id","text":"id\n\n\n\nproperty VolumeControl.id\n\nGet the id of VolumeControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.DownloadManager.html#downloadmanager","title":"DownloadManager","text":"DownloadManager\n\n\n\nclass ansys.meshing.prime.examples.DownloadManager(*args, **kwargs)\n\nManages downloads of example files.\n\nLocal paths are saved in this class so that a global cleanup\nof example files can be performed when the client is closed.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nMatchPairTargetType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.ALL.html#all","title":"ALL","text":"ALL\n\n\n\nBCsVolumetricModality.ALL = 2\n\nOption to identify all nodes expect fixed nodes as morphable nodes from the input volumetric mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nBCsVolumetricModality.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nBodyQueryType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.external_open_face_zonelets.html#external_open_face_zonelets","title":"external_open_face_zonelets","text":"external_open_face_zonelets\n\n\n\nproperty ComputeVolumesResults.external_open_face_zonelets: Iterable[int]\n\nFace zonelet ids that are in external space and not part of any computed volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateCapParams.html#createcapparams","title":"CreateCapParams","text":"CreateCapParams\n\n\n\nclass ansys.meshing.prime.CreateCapParams(model=None, json_data=None, **kwargs)\n\nParameters to create cap on face zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateCapParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateCapParams object with provided parameters.\n\nExamples\n\n>>> create_cap_params = prime.CreateCapParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.html#createcontactpatchparams","title":"CreateContactPatchParams","text":"CreateContactPatchParams\n\n\n\nclass ansys.meshing.prime.CreateContactPatchParams(model=None, contact_patch_axis=None, offset_distance=None, grouping_tolerance=None, suggested_part_name=None, suggested_label_prefix=None, json_data=None, **kwargs)\n\nParameters used for contact patch creation in the given axis.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateContactPatchParams object with default parameters.\n\ncontact_patch_axis: ContactPatchAxis, optional\n\nAssigns the contact patch direction.\n\noffset_distance: float, optional\n\nSource offset distance value.\n\ngrouping_tolerance: float, optional\n\nTolerance distance value to group regions for contact patch creation.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created contact patch surfaces.\n\nsuggested_label_prefix: str, optional\n\nSuggested label name for created contact patch surfaces.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateContactPatchParams object with provided parameters.\n\nExamples\n\n>>> create_contact_patch_params = prime.CreateContactPatchParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.html#examples-using-createcontactpatchparams","title":"CreateContactPatchParams > Examples using CreateContactPatchParams","text":"Examples using CreateContactPatchParams\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsParams.html#createintersectionedgeloopsparams","title":"CreateIntersectionEdgeLoopsParams","text":"CreateIntersectionEdgeLoopsParams\n\n\n\nclass ansys.meshing.prime.CreateIntersectionEdgeLoopsParams(model=None, label_name=None, json_data=None, **kwargs)\n\nParameters used to calculate edge loops created by intersection of two groups of face zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateIntersectionEdgeLoopsParams object with default parameters.\n\nlabel_name: str, optional\n\nLabel name to be assigned to extracted features.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateIntersectionEdgeLoopsParams object with provided parameters.\n\nExamples\n\n>>> create_intersection_edge_loops_params = prime.CreateIntersectionEdgeLoopsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteFringesAndOverlapsParams.print_default()\n\nPrint the default values of DeleteFringesAndOverlapsParams object.\n\nExamples\n\n>>> DeleteFringesAndOverlapsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nFlowDirection.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.DELETEBOTH.html#deleteboth","title":"DELETEBOTH","text":"DELETEBOTH\n\n\n\nHexCoreTransitionLayerType.DELETEBOTH = 3\n\nRemove neighboring hexes of different size by deleting both smaller and larger cell layers. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSizingType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IMPORTFLUENTCASEFAILED.html#importfluentcasefailed","title":"IMPORTFLUENTCASEFAILED","text":"IMPORTFLUENTCASEFAILED\n\n\n\nErrorCode.IMPORTFLUENTCASEFAILED = 529\n\nFailed to import fluent case file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VolumeQualitySummaryResults.print_default()\n\nPrint the default values of VolumeQualitySummaryResults object.\n\nExamples\n\n>>> VolumeQualitySummaryResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.html#computetopovolumesresults","title":"ComputeTopoVolumesResults","text":"ComputeTopoVolumesResults\n\n\n\nclass ansys.meshing.prime.ComputeTopoVolumesResults(model=None, error_code=None, error_locations=None, topo_volumes=None, material_point_topo_volumes=None, external_open_topo_faces=None, new_topo_volumes=None, deleted_topo_volumes=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with compute topovolumes.\n\nParameters\n\nmodel: Model\n\nModel to create a ComputeTopoVolumesResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nerror_locations: Iterable[float], optional\n\nCoordinates of problematic locations in the surface mesh.\n\ntopo_volumes: Iterable[int], optional\n\nIds of all topovolumes computed.\n\nmaterial_point_topo_volumes: Iterable[int], optional\n\nIds of topovolumes enclosing material points.\n\nexternal_open_topo_faces: Iterable[int], optional\n\nTopoface ids that are in external space and not part of any topovolumes.\n\nnew_topo_volumes: Iterable[int], optional\n\nIds of new topovolumes computed.\n\ndeleted_topo_volumes: Iterable[int], optional\n\nIds of existing topovolumes that got deleted.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the compute topovolumes.\n\njson_data: dict, optional\n\nJSON dictionary to create a ComputeTopoVolumesResults object with provided parameters.\n\nExamples\n\n>>> compute_topo_volumes_results = prime.ComputeTopoVolumesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TARGETWITHCELLZONELETS.html#targetwithcellzonelets","title":"TARGETWITHCELLZONELETS","text":"TARGETWITHCELLZONELETS\n\n\n\nErrorCode.TARGETWITHCELLZONELETS = 120\n\nTarget face zonelets with volume mesh on both side."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleResult.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty TopoFillHoleResult.error_code: ErrorCode\n\nError code associated with a wrap operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FaceConnectivityResults.set_default(error_code=None, face_zonelet_ids=None, topo_face_ids=None, mesh_face_ids=None, face_zone_ids=None, face_zone_names=None, num_nodes_per_face_zonelet=None, node_coords=None, num_face_list_per_face_zonelet=None, face_list=None)\n\nSet the default values of the FaceConnectivityResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the get face connectivity operation.\n\nface_zonelet_ids: Iterable[int], optional\n\nFace zonelet ids for which connectivity data is available.\n\ntopo_face_ids: Iterable[int], optional\n\nTopoFace ids corresponding to each face zonelet id for topology based mesh.\n\nmesh_face_ids: Iterable[int], optional\n\nMesh face ids corresponding to each topoface.\n\nface_zone_ids: Iterable[int], optional\n\nFace zone id corresponding to each topoface or face zonelet.\n\nface_zone_names: List[str], optional\n\nFace zone name corresponding to each topoface or face zonelet.\n\nnum_nodes_per_face_zonelet: Iterable[int], optional\n\nNumber of nodes per face zonelet.\n\nnode_coords: Iterable[float], optional\n\nNode coordinates describing faces of face zonelet.\n\nnum_face_list_per_face_zonelet: Iterable[int], optional\n\nNumber of face list per face zonelet.\n\nface_list: Iterable[int], optional\n\nFace list describing connectivity of node coordinates."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessParams.html#addthicknessparams","title":"AddThicknessParams","text":"AddThicknessParams\n\n\n\nclass ansys.meshing.prime.AddThicknessParams(model=None, thickness=None, reverse_face_normal=None, suggested_part_name=None, fix_intersections=None, json_data=None, **kwargs)\n\nParameters to add thickness for a given plane.\n\nParameters\n\nmodel: Model\n\nModel to create a AddThicknessParams object with default parameters.\n\nthickness: float, optional\n\nTo assign the offset distance of inflation.\n\nreverse_face_normal: bool, optional\n\nTo assign the direction of inflation.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created patching surfaces.\n\nfix_intersections: bool, optional\n\nFix intersections in concave regions.\n\njson_data: dict, optional\n\nJSON dictionary to create a AddThicknessParams object with provided parameters.\n\nExamples\n\n>>> add_thickness_params = prime.AddThicknessParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.set_surface_scope.html#set_surface_scope","title":"set_surface_scope","text":"set_surface_scope\n\n\n\nMultiZoneControl.set_surface_scope(scope_info)\n\nSets the scope for surface in terms of topofaces.\n\nParameters\n\nscope_info\n\nScopeDefinition\n\nScoped topofaces.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_surface_scope(scope_info)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.intersecting_locations.html#intersecting_locations","title":"intersecting_locations","text":"intersecting_locations\n\n\n\nproperty FuseResults.intersecting_locations: Iterable[float]\n\nLocations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ExportMapdlCdbResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_NEGATIVEJACOBIAN.html#iga_negativejacobian","title":"IGA_NEGATIVEJACOBIAN","text":"IGA_NEGATIVEJACOBIAN\n\n\n\nErrorCode.IGA_NEGATIVEJACOBIAN = 2404\n\nSpline has negative jacobian."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IMPRINTBOUNDARYEDGESFAILED.html#imprintboundaryedgesfailed","title":"IMPRINTBOUNDARYEDGESFAILED","text":"IMPRINTBOUNDARYEDGESFAILED\n\n\n\nErrorCode.IMPRINTBOUNDARYEDGESFAILED = 853\n\nImprint of boundary edges failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesher.html#autoquadmesher","title":"AutoQuadMesher","text":"AutoQuadMesher\n\n\n\nclass ansys.meshing.prime.AutoQuadMesher(model)\n\nGenerate full quad mesh.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create AutoQuadMesher object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.set_global_sizing_params.html#set_global_sizing_params","title":"set_global_sizing_params","text":"set_global_sizing_params\n\n\n\nModel.set_global_sizing_params(params)\n\nSet global sizing parameters.\n\nParameters\n\nparams\n\nGlobalSizingParams\n\nGlobal sizing parameters for initializing surfer parameters and\nvarious size control parameters.\n\nExamples\n\n>>> model = client.model\n>>> model.set_global_sizing_params(GlobalSizingParams(model=model,\n...                                          min=0.1,\n...                                          max=1.0,\n...                                          growth_rate=1.2))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.set_global_sizing_params.html#examples-using-modelset_global_sizing_params","title":"set_global_sizing_params > Examples using Model.set_global_sizing_params","text":"Examples using Model.set_global_sizing_params\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nScopeEvaluationType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControlGrowthParams.n_layers.html#n_layers","title":"n_layers","text":"n_layers\n\n\n\nproperty ShellBLControlGrowthParams.n_layers: int\n\nNumber of layers to be generated.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.STANDARD.html#standard","title":"STANDARD","text":"STANDARD\n\n\n\nSweepType.STANDARD = 1\n\nMultizone create mapped and swept blocks if possible (should be default).\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.plot.html#plot","title":"plot","text":"plot\n\n\n\nPrimePlotter.plot(plottable_object, scope=None, name_filter=None, update=False, **plotting_options)\n\nAdd an object to the plotter.\n\nAllowed types are PyPrime models or any PyVista plottable object.\n\nParameters\n\nplottable_object\n\nAny\n\nObject to add to the plotter.\n\nscope\n\nprime.ScopeDefinition, default: python:None\n\nScope to plot.\n\nname_filter\n\npython:str, default: python:None\n\nRegular expression with the desired name or names to include in the plotter.\n\nupdate: bool, default: False\n\nWhether to update the display. Required when any mesh is updated.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects.\n\nExamples\n\n>>> import pyvista as pv\n>>> from ansys.meshing.prime.graphics import PrimePlotter\n>>> import ansys.meshing.prime as prime\n>>> model = prime.launch_prime().model\n>>> prime.lucid.Mesh(model).read(prime.examples.download_block_model_fmd())\n>>> scope = prime.ScopeDefinition(model, label_expression=\"my_group\")\n>>> plotter = PrimePlotter()\n>>> # pyvista sphere with plotting options added for opacity and color\n>>> plotter.plot(plottable_object=pv.Sphere(radius=2.0), opacity=0.5, color=\"red\")\n>>> plotter.plot(plottable_object=model, scope=scope)\n>>> plotter.show()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.plot.html#examples-using-primeplotterplot","title":"plot > Examples using PrimePlotter.plot","text":"Examples using PrimePlotter.plot\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"user_guide/matchmorph.html#match-morphing","title":"Match morphing","text":"Match morphing\n\nMorpher.match_morph() method performs face to face entity matching, providing the ability to match face pairs using match pairs.\nThe method allows the source face to match with the corresponding target face. MatchPair allows you to specify sources and targets for\nmatch morphing.\n\nMatch pairs should have the same type of entities for matching.\n\nMorpher.match_morph() performs the following:\n\nMatches the boundaries of the source and targets using the specified boundary condition pairs.\n\nMatches the source entities to the target entities using the specified match pairs.\n\nEnsures the adjacent entities to the boundaries of the matched entities are adjusted to provide a quality mesh.\n\nThe below example shows how to match morph a cube of hexahedral mesh with quadratic elements to the shape of a sphere:\n\nGet the source and target faces from the source part and target part respectively.\n\nInitialize match morph parameters, morpher boundary condition parameters and morpher solver parameters.\n\nSet the source and target pairs for matching and specify the entity type of target surfaces.\n\nPerform match morphing using the match pairs, match morph parameters, boundary condition parameters and solver parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.n_refine.html#n_refine","title":"n_refine","text":"n_refine\n\n\n\nproperty BoundaryFittedSplineParams.n_refine: int\n\nSpline refinement level for rendering."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByIntersectionResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchByIntersectionResults.print_default()\n\nPrint the default values of SearchByIntersectionResults object.\n\nExamples\n\n>>> SearchByIntersectionResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MergeZoneletsParams.set_default(merge_small_zonelets_with_neighbors=None, element_count_limit=None)\n\nSet the default values of the MergeZoneletsParams object.\n\nParameters\n\nmerge_small_zonelets_with_neighbors: bool, optional\n\nMerge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes: Works better if zonelets are separated by region.\n\nelement_count_limit: int, optional\n\nElement count limit to identify small zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nPrismControlOffsetType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchBySpikeParams.set_default(spike_angle=None)\n\nSet the default values of the SearchBySpikeParams object.\n\nParameters\n\nspike_angle: float, optional\n\nThreshold angle for spike detection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty LocalSurferResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.wake_levels.html#wake_levels","title":"wake_levels","text":"wake_levels\n\n\n\nproperty CreateBOIParams.wake_levels: int\n\nBOI levels."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VolumetricSizeFieldComputeParams.print_default()\n\nPrint the default values of VolumetricSizeFieldComputeParams object.\n\nExamples\n\n>>> VolumetricSizeFieldComputeParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nEdgeMergeControl.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaIgaKeywordFileParams.html#exportlsdynaigakeywordfileparams","title":"ExportLSDynaIgaKeywordFileParams","text":"ExportLSDynaIgaKeywordFileParams\n\n\n\nclass ansys.meshing.prime.ExportLSDynaIgaKeywordFileParams(model=None, json_data=None, **kwargs)\n\nParameters for exporting LS-DYNA IGA keyword file.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportLSDynaIgaKeywordFileParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportLSDynaIgaKeywordFileParams object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_iga_keyword_file_params = prime.ExportLSDynaIgaKeywordFileParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_faces_of_component_body_name_pattern.html#get_topo_faces_of_component_body_name_pattern","title":"get_topo_faces_of_component_body_name_pattern","text":"get_topo_faces_of_component_body_name_pattern\n\n\n\nPart.get_topo_faces_of_component_body_name_pattern(component_body_name_pattern, type, name_pattern_params)\n\nGets topoface ids of component or bodies with name matching the given name pattern.\n\nParameters\n\ncomponent_body_name_pattern\n\npython:str\n\nName pattern to be matched with component or body name.\n\ntype\n\nBodyQueryType\n\nType of query used to match component or body name pattern.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match component or body name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_component_body_name_pattern(\n>>>                   component_body_name_pattern = \"body*\",\n>>>                   type = BodyQueryType_All,\n>>>                   params = prime.NamePatternParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StretchFreeBoundariesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic StretchFreeBoundariesParams.print_default()\n\nPrint the default values of StretchFreeBoundariesParams object.\n\nExamples\n\n>>> StretchFreeBoundariesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.INVALIDENTITIESNOTADDEDTOZONE.html#invalidentitiesnotaddedtozone","title":"INVALIDENTITIESNOTADDEDTOZONE","text":"INVALIDENTITIESNOTADDEDTOZONE\n\n\n\nWarningCode.INVALIDENTITIESNOTADDEDTOZONE = 6202\n\nEntities with invalid id or type not added to zone."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.get_growth_params.html#get_growth_params","title":"get_growth_params","text":"get_growth_params\n\n\n\nPrismControl.get_growth_params()\n\nGets the prism parameters for prism control.\n\nReturns\n\n:\n\n\n\nPrismControlGrowthParams\n\nReturns the PrismControlGrowthParams.\n\nReturn type\n\nPrismControlGrowthParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prism_ctrl.get_growth_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ZoneType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"user_guide/fileio.html#reading-and-writing-files","title":"Reading and writing files","text":"Reading and writing files\n\nThe FileIO class is used for all file-based data exchanges."},{"objectID":"Home","href":"user_guide/fileio.html#native-pmdat-format","title":"Reading and writing files > Native PMDAT format","text":"Native PMDAT format\n\nPMDAT is the native file format for PyPrimeMesh. It contains all data associated with the active model.\n\nThis includes geometry, mesh, topology, controls, labels, and zones.\n\nThe model data can be read from and written to the PMDAT format using the\nFileIO.read_pmdat() and\nFileIO.write_pmdat() methods\nwith parameters defined in the FileReadParams\nand FileWriteParams classes respectively.\n\nFiles can be read or imported based on file extension using the Mesh.read()\nmethod in the Lucid API. The method supports PyPrimeMesh’s native format, various CAD formats, and solver mesh files."},{"objectID":"Home","href":"user_guide/fileio.html#import-cad-files","title":"Reading and writing files > Import CAD files","text":"Import CAD files\n\nThe FileIO.import_cad() method allows\nyou to import CAD files and set parameters for importing files using the\nImportCadParams class."},{"objectID":"Home","href":"user_guide/fileio.html#cad-reader-routes","title":"Reading and writing files > CAD reader routes","text":"CAD reader routes\n\nYou can specify the import route for CAD files using the CadReaderRoute class.\n\nAlternatively, you can use the Mesh class in the Lucid API:\n\nFive CAD import routes are available in PyPrimeMesh:\n\nProgram controlled: Chooses the CAD reader route based on the extension of the provided CAD file as follows:\n\nNative for FMD, X_T, X_B, JT, PLMXML, and STL\n\nDiscovery for DSCO, SCDOC and SCDOCX\n\nWorkbench for all other extensions\n\nNative: Natively supported file format extensions are FMD,\nParasolid (X_T and X_B), JTOpen (JT and PLMXML), and STL.\n\nSpaceClaim: Uses SpaceClaim to import supported CAD files from the SpaceClaim reader. Only the\nWindows platform supports importing files using the SpaceClaim reader. Ensure to install\nSpaceClaim for SpaceClaim reader.\n\nDiscovery: Uses Discovery to import supported CAD files from the Discovery reader. Only the\nWindows platform supports importing files using the Discovery reader.\nEnsure to install Discovery for Discovery reader.\n\nWorkbench: Uses Workbench to import supported CAD files from the Workbench reader.\nEnsure to install Workbench for Workbench reader.\n\nTo view the CAD files supported for the Workbench route on different platforms, see\nCAD Support on the Ansys website.\n\nProgram controlled supports faceted data. Workbench supports BRep geometry(non-faceted) data.\nDiscovery or SpaceClaim supports both BRep geometry and faceted data.\n\nWhen deploying scripts using the Workbench CAD reader route, ensure that the user options for the installed\napplication are consistent in the deployed environment.\n\nWhen deploying scripts using the CAD configuration, ensure that the configuration is consistent in the deployed\nenvironment.\n\nYou must install and configure Workbench CAD readers or plug-ins (Ansys Geometry Interfaces)\nwhile installing Ansys Workbench.\n\nTo preserve shared topology, the Workbench CAD reader route must be used.\n\nPatterned name selections are not supported for the SpaceClaim or Discovery CAD reader routes.\nTo import patterned named selections, the Workbench CAD reader route can be used."},{"objectID":"Home","href":"user_guide/fileio.html#append-cad-files","title":"Reading and writing files > Append CAD files","text":"Append CAD files\n\nThe ImportCadParams.append parameter allows\nyou to append a CAD file to the model:\n\nAlternatively, you can use the Mesh class in\nthe Lucid API:"},{"objectID":"Home","href":"user_guide/fileio.html#parametric-cad-update","title":"Reading and writing files > Parametric CAD update","text":"Parametric CAD update\n\nParametric CAD update can be used while importing CAD files that have parameters defined that\ncan be accessed by Workbench CAD readers.\n\nThis code gets existing CAD parameters while importing:\n\nThis code sets the parameters that are used for the import:"},{"objectID":"Home","href":"user_guide/fileio.html#part-management-and-creation","title":"Reading and writing files > Part management and creation","text":"Part management and creation\n\nPyPrimeMesh has options for part management within the product structure while importing a CAD (Computer Aided Design) model.\nThe CAD model is the top in product hierarchy. A CAD model can have one or more CAD assemblies. The CAD assembly or\nsubassembly has different CAD parts. The CAD part has bodies or other geometric entities. Here is a typical CAD product\nstructure from SpaceClaim:\n\nThe PartCreationType class decides whether to create a part per:\n\nModel\n\nAssembly\n\nPart\n\nBody"},{"objectID":"Home","href":"user_guide/fileio.html#model","title":"Reading and writing files > Model","text":"Model\n\nWhen you import a CAD model and specify the PartCreationType parameter\nas MODEL, a single part is created that inherits its name from\nthe CAD model name. The number of zones within the part is identical to the number of bodies within the CAD model."},{"objectID":"Home","href":"user_guide/fileio.html#assembly","title":"Reading and writing files > Assembly","text":"Assembly\n\nWhen you import a CAD model and specify the PartCreationType parameter\nas ASSEMBLY, a part per CAD assembly is created where the part\nname is inherited from the CAD assembly name. The number of zones within each part is identical to the number of bodies\nwithin the CAD assembly."},{"objectID":"Home","href":"user_guide/fileio.html#part","title":"Reading and writing files > Part","text":"Part\n\nWhen you import a CAD model and specify the PartCreationType parameter\nas PART, a part per CAD part is created that inherits the part\nname from the CAD part name. The number of zones within a part is identical to the number of bodies within the CAD\npart."},{"objectID":"Home","href":"user_guide/fileio.html#body","title":"Reading and writing files > Body","text":"Body\n\nWhen you import a CAD model and specify the PartCreationType parameter\nas BODY, a part per CAD body is created that inherits the part name\nfrom the CAD body name. The number of parts is identical to the number of bodies."},{"objectID":"Home","href":"user_guide/fileio.html#import-and-export-solver-mesh-files","title":"Reading and writing files > Import and export solver mesh files","text":"Import and export solver mesh files\n\nFile extensions such as CAS (*.cas), MSH (*.msh, *.msh.gz), and CDB (*.cdb) can be imported\nusing the Mesh.read() method and exported using the\nMesh.write() method in the Lucid API."},{"objectID":"Home","href":"user_guide/fileio.html#import-solver-mesh-files","title":"Reading and writing files > Import solver mesh files","text":"Import solver mesh files\n\nThe FileIO.import_fluent_case() method allows you\nto import Fluent case (*.cas, *.cas.gz, *.cas.h5) files and set parameters for importing files using the\nImportFluentCaseParams class.\n\nThe FileIO.import_fluent_meshing_meshes() method\nallows you to import Fluent Meshing’s mesh files (*.msh, *.msh.gz) and set parameters for importing files\nusing the ImportFluentMeshingMeshParams class.\nYou can import multiple files in parallel using multithreading with the optional\nenable_multi_threading\nparameter.\n\nThe FileIO.import_mapdl_cdb() method allows you to\nimport MAPDL (*.cdb) files and set parameters for importing files using the\nImportMapdlCdbParams class. You can import quadratic mesh\nelements as linear with the optional drop_mid_nodes\nparameter.\n\nAll import methods have the optional parameter to append imported files to an existing model."},{"objectID":"Home","href":"user_guide/fileio.html#export-solver-mesh-files","title":"Reading and writing files > Export solver mesh files","text":"Export solver mesh files\n\nThe FileIO.export_fluent_case() method allows you to\nexport Fluent case (*.cas, *.cas.gz, *.cas.h5) files and set parameters for exporting files using the\nExportFluentCaseParams class.\n\nThe FileIO.export_fluent_meshing_meshes() method\nallows you to export Fluent Meshing’s mesh (*.msh) files and set parameters for exporting files\nusing the ExportFluentMeshingMeshParams class.\n\nThe FileIO.export_mapdl_cdb() method allows you to export\nMAPDL (*.cdb) files and set parameters for exporting files using the\nExportMapdlCdbParams class.\n\nThe FileIO.export_boundary_fitted_spline_kfile()\nmethod allows you to export IGA LS-DYNA keyword (*.k) files and set parameters for exporting boundary-fitted\nsplines using the ExportBoundaryFittedSplineParams class.\n\nThe FileIO.export_lsdyna_keyword_file()\nfunction allows you to write out an LS-DYNA Keyword (*.k) file that contains the mesh definition and other\nnecessary information to carry out the analysis run by the LS-DYNA solver.\nThe ExportLSDynaKeywordFileParams class allows\nyou to specify the application type (SEATBELT, DOORSLAM), indicate whether to compute\nthe spot weld thickness, append the material cards in the K file, provide the database cards\nto append in the K file, and specify the LS-DYNA data field format. You should specify the material\nproperties card and the database keywords card in LS-DYNA format.\n\nThe FileIO.export_lsdyna_keyword_file() function\nis a beta API. The behavior and implementation might change in the future."},{"objectID":"Home","href":"user_guide/fileio.html#read-and-write-size-field-files","title":"Reading and writing files > Read and write size field files","text":"Read and write size field files"},{"objectID":"Home","href":"user_guide/fileio.html#native-psf-format","title":"Reading and writing files > Native PSF format","text":"Native PSF format\n\nThe FileIO.read_size_field() method allows you to\nread Ansys Prime Server’s size field (*.psf, *.psf.gz) file and set parameters for reading this file\nusing the ReadSizeFieldParams class.\n\nThe FileIO.write_size_field() method allows you to\nwrite Ansys Prime Server’s size field (*.psf) file and set parameters for writing this file using the\nWriteSizeFieldParams class. You can write only active\nsize fields into the file with the optional write_only_active_size_fields\nparameter."},{"objectID":"Home","href":"user_guide/fileio.html#fluent-meshing-format","title":"Reading and writing files > Fluent Meshing format","text":"Fluent Meshing format\n\nThe FileIO.import_fluent_meshing_size_field()\nmethod allows you to import Fluent Meshing’s size field (*.sf, *.sf.gz) file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.launch_prime.html#launch_prime","title":"launch_prime","text":"launch_prime\n\n\n\nansys.meshing.prime.launch_prime(prime_root=None, ip='127.0.0.1', port=50055, timeout=20.0, n_procs=None, version=None, **kwargs)\n\nLaunch an instance of Ansys Prime Server and get a client for it.\n\nParameters\n\nprime_root: Optional[str]\n\nRoot directory for Ansys Prime Server.\n\nip: str\n\nIP address to start the server at. The default is 127.0.0.1.\n\nport: int\n\nPort at which the server is started. The default is 50055.\n\ntimeout: float\n\nMaximum time in seconds to wait for the client to connect to the server.\nThe default is 20.0.\n\nn_procs: Optional[int]\n\nWhen running in distributed mode, the number of distributed\nprocesses to spawn. The default is None, in which case\nthe server is launched as the only process (normal mode). The\nprocess marked as Node 0 hosts the gRPC server.\n\nReturns\n\n:\n\n\n\nClient\n\nInstance of the client that is connected to the launched server.\n\nRaises\n\nFileNotFoundError\n\nWhen there is an error in file paths used to launch the server.\n\nConnectionError\n\nWhen there is an error in connecting to the gRPC server."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.launch_prime.html#examples-using-launch_prime","title":"launch_prime > Examples using launch_prime","text":"Examples using launch_prime\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"user_guide/index.html#user-guide","title":"User guide","text":"User guide\n\nThis section provides an overview of how you use PyPrimeMesh for mesh preparation.\n\n"},{"objectID":"Home","href":"user_guide/index.html#overview","title":"User guide > Overview","text":"Overview\n\nThe launch_prime() method in PyPrimeMesh launches\nAnsys Prime Server and returns an instance of the Client\nclass. You can then send gRPC commands to Ansys Prime Server and receive responses\nfrom it."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.SurfaceScope.get_scope_definition.html#get_scope_definition","title":"get_scope_definition","text":"get_scope_definition\n\n\n\nSurfaceScope.get_scope_definition(model)\n\nGet the scope definition of the scope.\n\nParameters\n\nmodel\n\nModel\n\nPyPrimeMesh model.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the scope definition.\n\nReturn type\n\nScopeDefinition"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.html#automeshparams","title":"AutoMeshParams","text":"AutoMeshParams\n\n\n\nclass ansys.meshing.prime.AutoMeshParams(model=None, size_field_type=None, max_size=None, prism_control_ids=None, thin_volume_control_ids=None, multi_zone_control_ids=None, volume_fill_type=None, prism=None, tet=None, hexcore=None, volume_control_ids=None, periodic_control_ids=None, json_data=None, **kwargs)\n\nParameters for volume meshing.\n\nParameters\n\nmodel: Model\n\nModel to create a AutoMeshParams object with default parameters.\n\nsize_field_type: SizeFieldType, optional\n\nType of sizing to be used to generate volume mesh.\n\nmax_size: float, optional\n\nMaximum cell size.\n\nprism_control_ids: Iterable[int], optional\n\nSet prism control ids.\n\nthin_volume_control_ids: Iterable[int], optional\n\nSet thin volume control ids.\n\nmulti_zone_control_ids: Iterable[int], optional\n\nSet MultiZone control ids.\n\nvolume_fill_type: VolumeFillType, optional\n\nOption to fill volume.\n\nprism: PrismParams, optional\n\nPrism control parameters.\n\ntet: TetParams, optional\n\nParameters to control tetrahedral mesh generation.\n\nhexcore: HexCoreParams, optional\n\nParameters to control hexahedral mesh generation.\n\nvolume_control_ids: Iterable[int], optional\n\nIds of the volume controls.\n\nperiodic_control_ids: Iterable[int], optional\n\nIds of the periodic controls.\n\njson_data: dict, optional\n\nJSON dictionary to create a AutoMeshParams object with provided parameters.\n\nExamples\n\n>>> auto_mesh_params = prime.AutoMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.html#examples-using-automeshparams","title":"AutoMeshParams > Examples using AutoMeshParams","text":"Examples using AutoMeshParams\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCdbSimulationType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeParams.growth_rate_lower_bound.html#growth_rate_lower_bound","title":"growth_rate_lower_bound","text":"growth_rate_lower_bound\n\n\n\nproperty VolumetricSizeFieldComputeParams.growth_rate_lower_bound: float\n\nLower bound for growth rate.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.cad_reader_route.html#cad_reader_route","title":"cad_reader_route","text":"cad_reader_route\n\n\n\nproperty ImportCadParams.cad_reader_route: CadReaderRoute\n\nSpecify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nStitchType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointManager.delete_material_point.html#delete_material_point","title":"delete_material_point","text":"delete_material_point\n\n\n\nMaterialPointManager.delete_material_point(name)\n\nDeletes material point identified with the given name.\n\nParameters\n\nname\n\npython:str\n\nName of the material point to be deleted.\n\nReturns\n\n:\n\n\n\nDeleteMaterialPointResults\n\nReturns the DeleteMaterialPointResults.\n\nReturn type\n\nDeleteMaterialPointResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.material_point_data.delete_material_point(\"fluid\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_toy_car_scdoc.html#download_toy_car_scdoc","title":"download_toy_car_scdoc","text":"download_toy_car_scdoc\n\n\n\nansys.meshing.prime.examples.download_toy_car_scdoc(destination=None, force=False)\n\nDownload the SCDOC file for the toy car example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateBOIResults.set_default(error_code=None, part_id=None)\n\nSet the default values of the CreateBOIResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\npart_id: int, optional\n\nThe BOI part id."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nControlPointSelection.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.edge_merge_control.html#edge_merge_control","title":"edge_merge_control","text":"edge_merge_control\n\n\n\nproperty ScaffolderParams.edge_merge_control: int\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshToolResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VolumeMeshToolResults.set_default(error_code=None)\n\nSet the default values of the VolumeMeshToolResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume mesh tool operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetFeatureRecoveriesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SetFeatureRecoveriesResults.error_code: ErrorCode\n\nError code associated with the set feature recoveries."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.offset_type.html#offset_type","title":"offset_type","text":"offset_type\n\n\n\nproperty PrismControlGrowthParams.offset_type: PrismControlOffsetType\n\nOffset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.export_boundary_fitted_spline_kfile.html#export_boundary_fitted_spline_kfile","title":"export_boundary_fitted_spline_kfile","text":"export_boundary_fitted_spline_kfile\n\n\n\nFileIO.export_boundary_fitted_spline_kfile(file_name, export_params)\n\nExport the IGA LS-DYNA keyword file for a boundary fitted spline.\n\nParameters\n\nfile_name\n\npython:str\n\nName of the keyword file.\n\nexport_params\n\nExportBoundaryFittedSplineParams\n\nParameters for exporting the keyword file.\n\nReturns\n\n:\n\n\n\nFileWriteResults\n\nResults from exporting the keyword file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.export_boundary_fitted_spline_k_file(\n                file_name,\n                ExportBoundaryFittedSplineParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LeakPreventionParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic LeakPreventionParams.set_default(material_points=None, scope=None, max_hole_size=None, n_expansion_layers=None)\n\nSet the default values of the LeakPreventionParams object.\n\nParameters\n\nmaterial_points: List[str], optional\n\nMaterial points used for leak prevention control.\n\nscope: ScopeDefinition, optional\n\nScope used for leak prevention control.\n\nmax_hole_size: float, optional\n\nMaximum hole size to prevent leakage into region.\n\nn_expansion_layers: int, optional\n\nNumber of layers to expand leaking region."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.get_mesh_zonelets_of_topo_edges.html#get_mesh_zonelets_of_topo_edges","title":"get_mesh_zonelets_of_topo_edges","text":"get_mesh_zonelets_of_topo_edges\n\n\n\nTopoData.get_mesh_zonelets_of_topo_edges(topo_edges)\n\nGet the mesh edge zonelets for the provided topoedge ids.\n\nParameters\n\ntopo_edges\n\nIterable[python:int]\n\nIds of the topoedges.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the mesh edge zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> mesh_edge_zonelets = topo_data.get_mesh_zonelets_of_topo_edges(topo_edges)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.VT_SKIPPEDFREEEDGES.html#vt_skippedfreeedges","title":"VT_SKIPPEDFREEEDGES","text":"VT_SKIPPEDFREEEDGES\n\n\n\nWarningCode.VT_SKIPPEDFREEEDGES = 100003\n\nInput contains free edges which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSplineFeatureCaptureType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ScopeEntity.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.enable_face_based_labels.html#enable_face_based_labels","title":"enable_face_based_labels","text":"enable_face_based_labels\n\n\n\nproperty ExportMapdlCdbParams.enable_face_based_labels: bool\n\nUse LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.html#intersectionmask","title":"IntersectionMask","text":"IntersectionMask\n\n\n\nclass ansys.meshing.prime.IntersectionMask(*values)\n\nScaffold parameters use intersection mask to define nature of intersection computation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.html#examples-using-intersectionmask","title":"IntersectionMask > Examples using IntersectionMask","text":"Examples using IntersectionMask\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SHELLBLQUADS.html#shellblquads","title":"SHELLBLQUADS","text":"SHELLBLQUADS\n\n\n\nErrorCode.SHELLBLQUADS = 61\n\nShellBL quads.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.MODEL.html#model","title":"MODEL","text":"MODEL\n\n\n\nPartCreationType.MODEL = 0\n\nDenotes a part per CAD Model."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FaceAndEdgeConnectivityParams.set_default(reorder_face_zonelets_mid_nodes=None, reorder_edge_zonelets_mid_nodes=None)\n\nSet the default values of the FaceAndEdgeConnectivityParams object.\n\nParameters\n\nreorder_face_zonelets_mid_nodes: bool, optional\n\nOption to reorder mid nodes for quadratic faces.\n\nreorder_edge_zonelets_mid_nodes: bool, optional\n\nOption to reorder mid nodes for quadratic edges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_cell_zonelets.html#n_cell_zonelets","title":"n_cell_zonelets","text":"n_cell_zonelets\n\n\n\nproperty PartSummaryResults.n_cell_zonelets: int\n\nNumber of cell zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapPairs.zone_id0.html#zone_id0","title":"zone_id0","text":"zone_id0\n\n\n\nproperty OverlapPairs.zone_id0: int\n\nId of one overlapping face zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectNonCircularHolesParams.allow_curved_topo_faces.html#allow_curved_topo_faces","title":"allow_curved_topo_faces","text":"allow_curved_topo_faces\n\n\n\nproperty DetectNonCircularHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.READSIZEFIELDFAILED.html#readsizefieldfailed","title":"READSIZEFIELDFAILED","text":"READSIZEFIELDFAILED\n\n\n\nErrorCode.READSIZEFIELDFAILED = 503\n\nReading size field file failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.surface_mesh_with_size_controls.html#surface_mesh_with_size_controls","title":"surface_mesh_with_size_controls","text":"surface_mesh_with_size_controls\n\n\n\nMesh.surface_mesh_with_size_controls(size_control_names='*', generate_quads=False, scope=<ansys.meshing.prime.lucid.scope.SurfaceScope object>)\n\nGenerate a surface mesh on a scope using the given size controls.\n\nThis method supports generating quad dominant or triangular elements.\n\nParameters\n\nsize_control_names\n\npython:str, optional\n\nName pattern for the size controls. The default is \"*\".\n\ngenerate_quads\n\nbool, optional\n\nWhether to generate a quad dominant mesh. The default is\nFalse, in which case a triangular mesh is generated.\n\nscope\n\nSurfaceScope\n\nScope for generating the surface mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.surface_mesh_with_size_controls.html#examples-using-meshsurface_mesh_with_size_controls","title":"surface_mesh_with_size_controls > Examples using Mesh.surface_mesh_with_size_controls","text":"Examples using Mesh.surface_mesh_with_size_controls\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CopyZoneletsParams.print_default()\n\nPrint the default values of CopyZoneletsParams object.\n\nExamples\n\n>>> CopyZoneletsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.face_zone_names.html#face_zone_names","title":"face_zone_names","text":"face_zone_names\n\n\n\nproperty FaceConnectivityResults.face_zone_names: List[str]\n\nFace zone name corresponding to each topoface or face zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.surface_mesh_constant_size.html#surface_mesh_constant_size","title":"surface_mesh_constant_size","text":"surface_mesh_constant_size\n\n\n\nproperty OptimizeQuadMeshParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoUtilities.fill_hole.html#fill_hole","title":"fill_hole","text":"fill_hole\n\n\n\nTopoUtilities.fill_hole(topo_edges, params)\n\nFill holes bounded by given topoedges.\n\nParameters\n\ntopo_edges\n\nIterable[python:int]\n\nIds of topoedges to be used to find holes.\n\nparams\n\nTopoFillHoleParams\n\nParameters to fill holes.\n\nReturns\n\n:\n\n\n\nTopoFillHoleResult\n\nReturn the TopoFillHoleResult.\n\nReturn type\n\nTopoFillHoleResult\n\nExamples\n\n>>> results = topo_utils.fill_hole(topo_edges, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSizeFieldType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposer.html#vtcomposer","title":"VTComposer","text":"VTComposer\n\n\n\nclass ansys.meshing.prime.VTComposer(model, part_id)\n\nVTComposer is used for fix topology corrections like separate, pinch.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create VTComposer object.\n\npart_id\n\npython:int\n\nId of the part.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatCircularFacesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DetectAndTreatCircularFacesParams.print_default()\n\nPrint the default values of DetectAndTreatCircularFacesParams object.\n\nExamples\n\n>>> DetectAndTreatCircularFacesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.max.html#max","title":"max","text":"max\n\n\n\nproperty CurvatureSizingParams.max: float\n\nMaximum size used for computing edge and face size using curavture size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.set_suggested_size_field_name.html#set_suggested_size_field_name","title":"set_suggested_size_field_name","text":"set_suggested_size_field_name\n\n\n\nModel.set_suggested_size_field_name(size_field_id, name)\n\nSets the suggested name of size field with the given id.\n\nParameters\n\nsize_field_id\n\npython:int\n\nSize field id.\n\nname\n\npython:str\n\nName of the size field.\n\nReturn type\n\nSetNameResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> model = client.model\n>>> model.set_suggested_size_field_name(size_field_id, name)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.imag.html#imag","title":"imag","text":"imag\n\n\n\nTrimmedSolidSplineCutMode.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileReadResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FileReadResults.set_default(error_code=None)\n\nSet the default values of the FileReadResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code if file read operation was unsuccessful."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplitParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SplitParams.set_default(split_ratio=None)\n\nSet the default values of the SplitParams object.\n\nParameters\n\nsplit_ratio: float, optional\n\nMinimum ratio of split edge length to original edge length."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.html#volumenamingtype","title":"VolumeNamingType","text":"VolumeNamingType\n\n\n\nclass ansys.meshing.prime.VolumeNamingType(*values)\n\nIndicate source types used to name volume zones.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.volume_fill_type.html#volume_fill_type","title":"volume_fill_type","text":"volume_fill_type\n\n\n\nproperty AutoMeshParams.volume_fill_type: VolumeFillType\n\nOption to fill volume."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.DUPLICATEINPUT.html#duplicateinput","title":"DUPLICATEINPUT","text":"DUPLICATEINPUT\n\n\n\nWarningCode.DUPLICATEINPUT = 8001\n\nDuplicate items in input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MICROSTRUCTUREREMESHNOTSUPPORTED.html#microstructureremeshnotsupported","title":"MICROSTRUCTUREREMESHNOTSUPPORTED","text":"MICROSTRUCTUREREMESHNOTSUPPORTED\n\n\n\nErrorCode.MICROSTRUCTUREREMESHNOTSUPPORTED = 13005\n\nSurface remesh operation is not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.html#createboiparams","title":"CreateBOIParams","text":"CreateBOIParams\n\n\n\nclass ansys.meshing.prime.CreateBOIParams(model=None, boi_type=None, perform_initial_wrap=None, wrap_size=None, flow_dir=None, side_scale=None, wake_scale=None, wake_levels=None, suggested_part_name=None, suggested_label_prefix=None, number_of_threads=None, json_data=None, **kwargs)\n\nParameters used for BOI surface creation in the given axis.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateBOIParams object with default parameters.\n\nboi_type: BOIType, optional\n\nType of BOI offsetting.\n\nperform_initial_wrap: bool, optional\n\nPerform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\nwrap_size: float, optional\n\nSet wrap size greater than the largest gap size in the input when performing_initial_wrap is true.\n\nflow_dir: FlowDirection, optional\n\nAssigns the offset direction of inflation.\n\nside_scale: float, optional\n\nBOI side scaling factor.\n\nwake_scale: float, optional\n\nBOI flow direction scaling factor.\n\nwake_levels: int, optional\n\nBOI levels.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created BOI surfaces.\n\nsuggested_label_prefix: str, optional\n\nSuggested label name for created BOI surfaces.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateBOIParams object with provided parameters.\n\nExamples\n\n>>> create_boiparams = prime.CreateBOIParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.real.html#real","title":"real","text":"real\n\n\n\nFuseOption.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty CurvatureSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SIZEFIELDCOMPUTATIONFAILED.html#sizefieldcomputationfailed","title":"SIZEFIELDCOMPUTATIONFAILED","text":"SIZEFIELDCOMPUTATIONFAILED\n\n\n\nErrorCode.SIZEFIELDCOMPUTATIONFAILED = 400\n\nSize field computation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty LocalSurferParams.growth_rate: float\n\nGrowth rate to be used to propagate sizes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.html#smoothtype","title":"SmoothType","text":"SmoothType\n\n\n\nclass ansys.meshing.prime.SmoothType(*values)\n\nIndicates the the type of operation to be performed during the smooth dihedral face nodes operation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlSummaryResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PeriodicControlSummaryResult.print_default()\n\nPrint the default values of PeriodicControlSummaryResult object.\n\nExamples\n\n>>> PeriodicControlSummaryResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.html#solvertype","title":"SolverType","text":"SolverType\n\n\n\nclass ansys.meshing.prime.SolverType(*values)\n\nType of solver.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSurfaceFeatureType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod TrimmedSolidSplineCutMode.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TransformResults.html#transformresults","title":"TransformResults","text":"TransformResults\n\n\n\nclass ansys.meshing.prime.TransformResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with the transformation.\n\nParameters\n\nmodel: Model\n\nModel to create a TransformResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a TransformResults object with provided parameters.\n\nExamples\n\n>>> transform_results = prime.TransformResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairEdgesParams.constant_mesh_size.html#constant_mesh_size","title":"constant_mesh_size","text":"constant_mesh_size\n\n\n\nproperty RepairEdgesParams.constant_mesh_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.imag.html#imag","title":"imag","text":"imag\n\n\n\nContactPatchAxis.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportMapdlCdbResults.set_default(summary_log=None, zone_mesh_results=None, error_code=None, warning_codes=None)\n\nSet the default values of the ExportMapdlCdbResults object.\n\nParameters\n\nsummary_log: str, optional\n\nSummary log for the export operation in json format.\n\nzone_mesh_results: List[ZoneMeshResult], optional\n\nZone-wise mesh information for elements in the exported model.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.html#createvolumezonestype","title":"CreateVolumeZonesType","text":"CreateVolumeZonesType\n\n\n\nclass ansys.meshing.prime.CreateVolumeZonesType(*values)\n\nIndicate type to create volume zones for volumes.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposerParams.html#vtcomposerparams","title":"VTComposerParams","text":"VTComposerParams\n\n\n\nclass ansys.meshing.prime.VTComposerParams(model=None, thin_stripes_tol=None, json_data=None, **kwargs)\n\nParameters to control VTComposer operations.\n\nParameters\n\nmodel: Model\n\nModel to create a VTComposerParams object with default parameters.\n\nthin_stripes_tol: float, optional\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a VTComposerParams object with provided parameters.\n\nExamples\n\n>>> v_tcomposer_params = prime.VTComposerParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddToZoneResults.html#addtozoneresults","title":"AddToZoneResults","text":"AddToZoneResults\n\n\n\nclass ansys.meshing.prime.AddToZoneResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the add to zone operation.\n\nParameters\n\nmodel: Model\n\nModel to create a AddToZoneResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the add to zone operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a AddToZoneResults object with provided parameters.\n\nExamples\n\n>>> add_to_zone_results = prime.AddToZoneResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.NONE.html#none","title":"NONE","text":"NONE\n\n\n\nAdvancedSurferSetup.NONE = 0\n\nOption to define no advanced settings."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.WARP.html#warp","title":"WARP","text":"WARP\n\n\n\nFaceQualityMeasure.WARP = 7\n\nFace quality metric to check warping factor.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSolverType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshParams.append.html#append","title":"append","text":"append\n\n\n\nproperty ImportFluentMeshingMeshParams.append: bool\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateCapParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateCapParams.print_default()\n\nPrint the default values of CreateCapParams object.\n\nExamples\n\n>>> CreateCapParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleParams.edges_to_exclude.html#edges_to_exclude","title":"edges_to_exclude","text":"edges_to_exclude\n\n\n\nproperty TopoFillHoleParams.edges_to_exclude: Iterable[int]\n\nTopoEdges to be excluded for cap creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityResults.min_quality.html#min_quality","title":"min_quality","text":"min_quality\n\n\n\nproperty SearchByQualityResults.min_quality: float\n\nMinimum quality found by search."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nVolumeFillType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MATERIALPOINTWITHSAMENAMEEXISTS.html#materialpointwithsamenameexists","title":"MATERIALPOINTWITHSAMENAMEEXISTS","text":"MATERIALPOINTWITHSAMENAMEEXISTS\n\n\n\nWarningCode.MATERIALPOINTWITHSAMENAMEEXISTS = 6005\n\nMaterial point with the same name exists. Overriding with unique name."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.elements_count.html#elements_count","title":"elements_count","text":"elements_count\n\n\n\nproperty IGAUnstructuredSplineSurf.elements_count: int\n\nCount of shell elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WrapperImproveQualityParams.set_default(target_skewness=None, island_count=None, island_tol=None, overlap_count=None, overlap_tol=None, resolve_spikes=None, resolve_intersections=None, inflate_dihedral_face_nodes=None, resolve_invalid_node_normals=None, aggressively=None, sharp_angle=None, geom_zonelets=None, number_of_threads=None)\n\nSet the default values of the WrapperImproveQualityParams object.\n\nParameters\n\ntarget_skewness: float, optional\n\nTarget skewness.\n\nisland_count: int, optional\n\nFace count of smallest island.\n\nisland_tol: float, optional\n\nRelative face count of smallest island.\n\noverlap_count: int, optional\n\nFace count of non-manifold overlap.\n\noverlap_tol: float, optional\n\nRelative face count of non-manifold overlap.\n\nresolve_spikes: bool, optional\n\nControl to perform removing spikes or not.\n\nresolve_intersections: bool, optional\n\nControl to resolve face intersections or not.\n\ninflate_dihedral_face_nodes: bool, optional\n\nControl to resolve face dihedral angle by inflating opposite nodes or not.\n\nresolve_invalid_node_normals: bool, optional\n\nControl to resolve invalid node normals by inflating opposite nodes or not.\n\naggressively: bool, optional\n\nControl to improve surfaces aggressively or not.\n\nsharp_angle: float, optional\n\nMaximum off feature sharp node angle.\n\ngeom_zonelets: Iterable[int], optional\n\nAssociated underlying geometry zonelet ids.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.feature_capture_type.html#feature_capture_type","title":"feature_capture_type","text":"feature_capture_type\n\n\n\nproperty QuadToSplineParams.feature_capture_type: SplineFeatureCaptureType\n\nFeature capture options.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.numpy_array_optimization_enabled.html#numpy_array_optimization_enabled","title":"numpy_array_optimization_enabled","text":"numpy_array_optimization_enabled\n\n\n\nansys.meshing.prime.numpy_array_optimization_enabled()\n\nContext helper to execute code with numpy optimization enabled."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ADDINGPROVIDEDENTITIESNOTSUPPORTEDFORTOPOLOGYPART.html#addingprovidedentitiesnotsupportedfortopologypart","title":"ADDINGPROVIDEDENTITIESNOTSUPPORTEDFORTOPOLOGYPART","text":"ADDINGPROVIDEDENTITIESNOTSUPPORTEDFORTOPOLOGYPART\n\n\n\nErrorCode.ADDINGPROVIDEDENTITIESNOTSUPPORTEDFORTOPOLOGYPART = 1205\n\nAdding provided entities is not supported for part with topology data."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.SURFERLAYEREDQUADFAILED.html#surferlayeredquadfailed","title":"SURFERLAYEREDQUADFAILED","text":"SURFERLAYEREDQUADFAILED\n\n\n\nWarningCode.SURFERLAYEREDQUADFAILED = 1800\n\nLayered quad failed with surfer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateIntersectionEdgeLoopsParams.print_default()\n\nPrint the default values of CreateIntersectionEdgeLoopsParams object.\n\nExamples\n\n>>> CreateIntersectionEdgeLoopsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchMorphResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MatchMorphResults.set_default(error_code=None)\n\nSet the default values of the MatchMorphResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nErrorcode associated with match morph operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_pipe_tee_pmdat.html#download_pipe_tee_pmdat","title":"download_pipe_tee_pmdat","text":"download_pipe_tee_pmdat\n\n\n\nansys.meshing.prime.examples.download_pipe_tee_pmdat(destination=None, force=False)\n\nDownload the PMDAT file for the pipe tee example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(pipe_tee, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.NONE.html#none","title":"NONE","text":"NONE\n\n\n\nSurfaceFeatureType.NONE = 0\n\nNone of face edges are considered as feature."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nErrorCode.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSweeper.stack_base_face.html#stack_base_face","title":"stack_base_face","text":"stack_base_face\n\n\n\nVolumeSweeper.stack_base_face(part_id, base_face_ids, topo_volume_ids, params)\n\nGenerate volume mesh by stacking a meshed face.\n\nThis method generates volume mesh by stacking a meshed face, layer by layer, along\nthe given direction. It calculates the stack layers using size controls and global\nsize parameters.\n\nParameters\n\npart_id\n\npython:int\n\nID of the part.\n\nbase_face_ids: Iterable[int]\n\nIDs of the base faces to stack.\n\ntopo_volume_ids\n\nIterable[python:int]\n\nIDs of the volumes to mesh.\n\nparams\n\nMeshStackerParams\n\nMesh stacker parameters.\n\nReturns\n\n:\n\n\n\nMeshStackerResults\n\nResults from generating the volume mesh.\n\nReturn type\n\nMeshStackerResults\n\nExamples\n\n>>> results = volumesweeper.stack_base_face(part_id, base_face_ids, topo_volume_ids, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSweeper.stack_base_face.html#examples-using-volumesweeperstack_base_face","title":"stack_base_face > Examples using VolumeSweeper.stack_base_face","text":"Examples using VolumeSweeper.stack_base_face\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VOLUMENOTFOUND.html#volumenotfound","title":"VOLUMENOTFOUND","text":"VOLUMENOTFOUND\n\n\n\nErrorCode.VOLUMENOTFOUND = 307\n\nVolumes not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRITECDBFAILED.html#writecdbfailed","title":"WRITECDBFAILED","text":"WRITECDBFAILED\n\n\n\nErrorCode.WRITECDBFAILED = 506\n\nWriting CDB file failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.get_summary.html#get_summary","title":"get_summary","text":"get_summary\n\n\n\nPeriodicControl.get_summary(params)\n\nGet the periodic control summary along with the evaluated scope for the provided parameters.\n\nParameters\n\nparams\n\nPeriodicControlSummaryParams\n\nPeriodic control summary parameters.\n\nReturns\n\n:\n\n\n\nPeriodicControlSummaryResult\n\nReturn the PeriodicControlSummaryResult.\n\nReturn type\n\nPeriodicControlSummaryResult\n\nExamples\n\n>>> results = periodic_control.get_summary(prime.PeriodicControlSummaryParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSolverType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nShellBLOffsetType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.number_of_threads.html#number_of_threads","title":"number_of_threads","text":"number_of_threads\n\n\n\nproperty WrapperPatchFlowRegionsParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoftSizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty SoftSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nBodyQueryType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PrismControlGrowthParams.set_default(offset_type=None, n_layers=None, growth_rate=None, first_height=None, first_aspect_ratio=None, last_aspect_ratio=None, min_aspect_ratio=None)\n\nSet the default values of the PrismControlGrowthParams object.\n\nParameters\n\noffset_type: PrismControlOffsetType, optional\n\nOffset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height.\n\nn_layers: int, optional\n\nNumber of prism layers to be generated. It is used for all prism control offset types.\n\ngrowth_rate: float, optional\n\nGrowth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\nfirst_height: float, optional\n\nHeight to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\nfirst_aspect_ratio: float, optional\n\nAspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\nlast_aspect_ratio: float, optional\n\nApsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\nmin_aspect_ratio: float, optional\n\nMinimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nLSDynaAnalysisType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCellQualityMeasure.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nBOIType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentMeshingMeshParams.cff_format.html#cff_format","title":"cff_format","text":"cff_format\n\n\n\nproperty ExportFluentMeshingMeshParams.cff_format: bool\n\nOption to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz).\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_faces_of_label_name_pattern.html#get_topo_faces_of_label_name_pattern","title":"get_topo_faces_of_label_name_pattern","text":"get_topo_faces_of_label_name_pattern\n\n\n\nPart.get_topo_faces_of_label_name_pattern(label_name_pattern, name_pattern_params)\n\nGet topoface ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern\n\npython:str\n\nName pattern to be matched with label name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match label name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_label_name_pattern(\n>>>                   label_name_pattern = \"face_label\",\n>>>                   params = prime.NamePatternParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_faces_of_label_name_pattern.html#examples-using-partget_topo_faces_of_label_name_pattern","title":"get_topo_faces_of_label_name_pattern > Examples using Part.get_topo_faces_of_label_name_pattern","text":"Examples using Part.get_topo_faces_of_label_name_pattern\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEMESHFACESFAILED.html#deletemeshfacesfailed","title":"DELETEMESHFACESFAILED","text":"DELETEMESHFACESFAILED\n\n\n\nErrorCode.DELETEMESHFACESFAILED = 3200\n\nDelete Mesh faces failed"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_global_sizing_params.html#get_global_sizing_params","title":"get_global_sizing_params","text":"get_global_sizing_params\n\n\n\nModel.get_global_sizing_params()\n\nGet global sizing parameters.\n\nReturns\n\n:\n\n\n\nGlobalSizingParams\n\nGlobal sizing parameters.\n\nReturn type\n\nGlobalSizingParams\n\nExamples\n\n>>> model = client.model\n>>> sf_params = model.get_global_sizing_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nLSDynaAnalysisType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nLSDynaFileFormatType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_volumes_of_zone_name_pattern.html#get_volumes_of_zone_name_pattern","title":"get_volumes_of_zone_name_pattern","text":"get_volumes_of_zone_name_pattern\n\n\n\nPart.get_volumes_of_zone_name_pattern(zone_name_pattern, name_pattern_params)\n\nGet volume ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern\n\npython:str\n\nName pattern to be matched with zone name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match zone name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn volume ids of zones with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> volumes = part.get_volumes_of_zone_name_pattern(\"body*\", name_pattern_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.real.html#real","title":"real","text":"real\n\n\n\nSeparateBlocksFormatType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEVOLUMESFAILED.html#deletevolumesfailed","title":"DELETEVOLUMESFAILED","text":"DELETEVOLUMESFAILED\n\n\n\nErrorCode.DELETEVOLUMESFAILED = 134\n\nDelete volumes failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WrapParams.print_default()\n\nPrint the default values of WrapParams object.\n\nExamples\n\n>>> WrapParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nScopeExpressionType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDFIRSTASPECTRATIO.html#invalidfirstaspectratio","title":"INVALIDFIRSTASPECTRATIO","text":"INVALIDFIRSTASPECTRATIO\n\n\n\nErrorCode.INVALIDFIRSTASPECTRATIO = 124\n\nInvalid first aspect ratio."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXTRACTFEATURESBYANGLEFAILED.html#extractfeaturesbyanglefailed","title":"EXTRACTFEATURESBYANGLEFAILED","text":"EXTRACTFEATURESBYANGLEFAILED\n\n\n\nErrorCode.EXTRACTFEATURESBYANGLEFAILED = 1600\n\nFeature extraction by angle failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.split_topo_edges_at_apex_point.html#split_topo_edges_at_apex_point","title":"split_topo_edges_at_apex_point","text":"split_topo_edges_at_apex_point\n\n\n\nproperty RepairTopologyParams.split_topo_edges_at_apex_point: bool\n\nOption to split edges at apex point.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.create_zones_from_labels.html#create_zones_from_labels","title":"create_zones_from_labels","text":"create_zones_from_labels\n\n\n\nMesh.create_zones_from_labels(label_expression=None, conversion_method=LabelToZoneMethod.SIMPLE)\n\nCreate zones from labels.\n\nWhen exporting to various solvers, zones play a very important role.\nZones are where material properties and boundary conditions\ncan be set in respective solvers.\n\nZones allow downstream setting of boundary conditions or material properties.\n\nZone names in PyPrimeMesh are translated into equivalent concepts in the solver.\nCurrently, only one method is available to convert a zone to a label, and\nonly face zones are created.\n\nThe create_zones_from_labels method finds the entities by labels\nand then adds them to zones with the same names as the labels.\n\nIf the label_expression parameter is not provided, all labels are\nflattened to create zones. If overlaps occur, label names are combined, and\nseparate zones are created.\n\nFor example, if “LabelA” and “LabelB” have overlapping TopoFaces,\nthese zones are created: \"LabelA\", \"LabelB\", and\n\"LabelA_LabelB\" for the overlap.\n\nParameters\n\nlabel_expression\n\npython:str, optional\n\nExpression for the labels to convert to zones. The\ndefault is None.\n\nconversion_method\n\nLabelToZoneMethod, optional\n\nMethod for converting the labels to zones. The default\nis LabelToZoneMethod.SIMPLE.\n\nExamples\n\n>>> from ansys.meshing.prime import lucid\n>>> mesh_util = lucid.Mesh(model)\n>>> mesh_util.create_zones_from_labels()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.create_zones_from_labels.html#examples-using-meshcreate_zones_from_labels","title":"create_zones_from_labels > Examples using Mesh.create_zones_from_labels","text":"Examples using Mesh.create_zones_from_labels\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IMPORTABAQUSFAILEDWITHUNKNOWNERROR.html#importabaqusfailedwithunknownerror","title":"IMPORTABAQUSFAILEDWITHUNKNOWNERROR","text":"IMPORTABAQUSFAILEDWITHUNKNOWNERROR\n\n\n\nErrorCode.IMPORTABAQUSFAILEDWITHUNKNOWNERROR = 16200\n\nImport Abaqus failed. Failed with unknown error.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod LSDynaAnalysisType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripParams.feature_angle.html#feature_angle","title":"feature_angle","text":"feature_angle\n\n\n\nproperty SearchByThinStripParams.feature_angle: float\n\nAngle used to identify angle based features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_second_order_pyra_cells.html#n_second_order_pyra_cells","title":"n_second_order_pyra_cells","text":"n_second_order_pyra_cells\n\n\n\nproperty PartSummaryResults.n_second_order_pyra_cells: int\n\nNumber of second order pyramid cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CopyZoneletsResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshInfo.get_statistics_of_cell_zonelets.html#get_statistics_of_cell_zonelets","title":"get_statistics_of_cell_zonelets","text":"get_statistics_of_cell_zonelets\n\n\n\nMeshInfo.get_statistics_of_cell_zonelets(cell_zonelets, params)\n\nGets cell statistics of given cell zonelets using provided cell statistics parameters.\n\nParameters\n\ncell_zonelets\n\nIterable[python:int]\n\nIds of cell zonelets for which statistics are calculated.\n\nparams\n\nCellStatisticsParams\n\nParameters to get cells statistics.\n\nReturns\n\n:\n\n\n\nCellStatisticsResults\n\nReturns the CellStatisticsResults.\n\nReturn type\n\nCellStatisticsResults\n\nExamples\n\n>>> mesh_info = prime.MeshInfo(model)\n>>> part = model.get_part_by_name(\"part_name\")\n>>> result = mesh_info.get_statistics_of_cell_zonelets(part.get_cell_zonelets(),\n>>>                  prime.CellStatisticsParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SearchBySpikeResults.error_code: ErrorCode\n\nError code associated with search spikes operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_block_model_scdoc.html#download_block_model_scdoc","title":"download_block_model_scdoc","text":"download_block_model_scdoc\n\n\n\nansys.meshing.prime.examples.download_block_model_scdoc(destination=None, force=False)\n\nDownload CAD file for the block model example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(block_model, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.stretch_free_boundaries.html#stretch_free_boundaries","title":"stretch_free_boundaries","text":"stretch_free_boundaries\n\n\n\nSurfaceUtilities.stretch_free_boundaries(face_zonelet_ids, params)\n\nStretch free boundaries of each zonelet.\n\nParameters\n\nface_zonelet_ids\n\nIterable[python:int]\n\nIds of face zonelets.\n\nparams\n\nStretchFreeBoundariesParams\n\nParameters to control stretch free boundaries operation.\n\nReturns\n\n:\n\n\n\nStretchFreeBoundariesResults\n\nReturns the StretchFreeBoundariesResults.\n\nReturn type\n\nStretchFreeBoundariesResults\n\nExamples\n\n>>> result = surf_utils.stretch_free_boundaries(face_zonelet_ids, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.real.html#real","title":"real","text":"real\n\n\n\nShellBLOffsetType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SurfaceDiagnosticSummaryParams.print_default()\n\nPrint the default values of SurfaceDiagnosticSummaryParams object.\n\nExamples\n\n>>> SurfaceDiagnosticSummaryParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCadRefacetingMaxEdgeSizeLimit.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_faces_of_zone_name_pattern.html#get_topo_faces_of_zone_name_pattern","title":"get_topo_faces_of_zone_name_pattern","text":"get_topo_faces_of_zone_name_pattern\n\n\n\nPart.get_topo_faces_of_zone_name_pattern(zone_name_pattern, name_pattern_params)\n\nGet topoface ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern\n\npython:str\n\nName pattern to be matched with zone name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match zone name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn topoface ids of zones with name matching the name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> topo_faces = part.get_topo_faces_of_zone_name_pattern(\"wall*\", name_pattern_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_FILLHOLEFAILED.html#vt_fillholefailed","title":"VT_FILLHOLEFAILED","text":"VT_FILLHOLEFAILED\n\n\n\nErrorCode.VT_FILLHOLEFAILED = 3606\n\nFill hole operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SubtractVolumesResults.print_default()\n\nPrint the default values of SubtractVolumesResults object.\n\nExamples\n\n>>> SubtractVolumesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CheckMeshParams.set_default()\n\nSet the default values of the CheckMeshParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nFaceQualityMeasure.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.ELEMENTQUALITY.html#elementquality","title":"ELEMENTQUALITY","text":"ELEMENTQUALITY\n\n\n\nCellQualityMeasure.ELEMENTQUALITY = 50\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbResults.html#importmapdlcdbresults","title":"ImportMapdlCdbResults","text":"ImportMapdlCdbResults\n\n\n\nclass ansys.meshing.prime.ImportMapdlCdbResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the MAPDL CDB import.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportMapdlCdbResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportMapdlCdbResults object with provided parameters.\n\nExamples\n\n>>> import_mapdl_cdb_results = prime.ImportMapdlCdbResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.bad_spline_points_indices.html#bad_spline_points_indices","title":"bad_spline_points_indices","text":"bad_spline_points_indices\n\n\n\nproperty IGAUnstructuredSplineSurf.bad_spline_points_indices: Iterable[int]\n\nNode indices in the spline points list which has negative jacobian value."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Scaffolder.merge_overlapping_topo_faces.html#merge_overlapping_topo_faces","title":"merge_overlapping_topo_faces","text":"merge_overlapping_topo_faces\n\n\n\nScaffolder.merge_overlapping_topo_faces(topo_faces, params)\n\nMerge overlapping topofaces.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of topology faces.\n\nparams\n\nScaffolderParams\n\nScaffolder parameters.\n\nReturns\n\n:\n\n\n\nScaffolderMergeResults\n\nReturn results in ScaffolderMergeResults.\n\nReturn type\n\nScaffolderMergeResults\n\nExamples\n\n>>> results = scaffolder.MergeOverlappingTopoFaces([1,2,7,8], params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Scaffolder.merge_overlapping_topo_faces.html#examples-using-scaffoldermerge_overlapping_topo_faces","title":"merge_overlapping_topo_faces > Examples using Scaffolder.merge_overlapping_topo_faces","text":"Examples using Scaffolder.merge_overlapping_topo_faces\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.remove_zone_on_zonelets.html#remove_zone_on_zonelets","title":"remove_zone_on_zonelets","text":"remove_zone_on_zonelets\n\n\n\nPart.remove_zone_on_zonelets(zonelets)\n\nRemoves zone on the given zonelets.\n\nParameters\n\nzonelets\n\nIterable[python:int]\n\nZonelet ids whose zone is to be removed.\n\nReturns\n\n:\n\n\n\nRemoveZoneResults\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_zonelets(zonelets)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.suggested_part_name.html#suggested_part_name","title":"suggested_part_name","text":"suggested_part_name\n\n\n\nproperty CreateBOIParams.suggested_part_name: str\n\nSuggested part name for created BOI surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryResults.html#volumequalitysummaryresults","title":"VolumeQualitySummaryResults","text":"VolumeQualitySummaryResults\n\n\n\nclass ansys.meshing.prime.VolumeQualitySummaryResults(model=None, error_code=None, quality_results_part=None, message=None, json_data=None, **kwargs)\n\nResults of volume quality summary.\n\nParameters\n\nmodel: Model\n\nModel to create a VolumeQualitySummaryResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume quality summary.\n\nquality_results_part: List[VolumeQualityResultsPart], optional\n\nContains volume quality result per cell quality measure by parts specified in parameters.\n\nmessage: str, optional\n\nVolume quality summary text.\n\njson_data: dict, optional\n\nJSON dictionary to create a VolumeQualitySummaryResults object with provided parameters.\n\nExamples\n\n>>> volume_quality_summary_results = prime.VolumeQualitySummaryResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryResults.html#examples-using-volumequalitysummaryresults","title":"VolumeQualitySummaryResults > Examples using VolumeQualitySummaryResults","text":"Examples using VolumeQualitySummaryResults\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.degree_u.html#degree_u","title":"degree_u","text":"degree_u\n\n\n\nproperty BoundaryFittedSplineParams.degree_u: int\n\nDegree of spline in u direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.EDGE.html#edge","title":"EDGE","text":"EDGE\n\n\n\nZoneType.EDGE = 1\n\nDenotes the zone is edge zone."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesResults.deleted_volumes.html#deleted_volumes","title":"deleted_volumes","text":"deleted_volumes\n\n\n\nproperty DeleteVolumesResults.deleted_volumes: Iterable[int]\n\nIds of deleted volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERPATCHFLOWREGIONS_INVALIDHOLESIZE.html#wrapperpatchflowregions_invalidholesize","title":"WRAPPERPATCHFLOWREGIONS_INVALIDHOLESIZE","text":"WRAPPERPATCHFLOWREGIONS_INVALIDHOLESIZE\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_INVALIDHOLESIZE = 3445\n\nHole size specified for dead region should be positive double.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.NamePatternParams.html#namepatternparams","title":"NamePatternParams","text":"NamePatternParams\n\n\n\nclass ansys.meshing.prime.NamePatternParams(model=None, json_data=None, **kwargs)\n\nParameters to be used to match name pattern with names.\n\nParameters\n\nmodel: Model\n\nModel to create a NamePatternParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a NamePatternParams object with provided parameters.\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.NamePatternParams.html#examples-using-namepatternparams","title":"NamePatternParams > Examples using NamePatternParams","text":"Examples using NamePatternParams\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nWarningCode.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.html#ansysmeshingprime","title":"ansys.meshing.prime","text":"ansys.meshing.prime\n\n\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetNameResults.assigned_name.html#assigned_name","title":"assigned_name","text":"assigned_name\n\n\n\nproperty SetNameResults.assigned_name: str\n\nAssigned name of given entity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.html#cadrefacetingresolution","title":"CadRefacetingResolution","text":"CadRefacetingResolution\n\n\n\nclass ansys.meshing.prime.CadRefacetingResolution(*values)\n\nLevels of CAD faceting refinement.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CreateBOIResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneEdgeBiasingParams.bias_factor.html#bias_factor","title":"bias_factor","text":"bias_factor\n\n\n\nproperty MultiZoneEdgeBiasingParams.bias_factor: float\n\nBias factor used for MultiZone edge biasing control.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.imag.html#imag","title":"imag","text":"imag\n\n\n\nMatchPairTargetType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SurfaceFeatureType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.real.html#real","title":"real","text":"real\n\n\n\nIntersectionMask.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LeakPreventionParams.material_points.html#material_points","title":"material_points","text":"material_points\n\n\n\nproperty LeakPreventionParams.material_points: List[str]\n\nMaterial points used for leak prevention control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.BYFACENORMALS.html#byfacenormals","title":"BYFACENORMALS","text":"BYFACENORMALS\n\n\n\nVolumeNamingType.BYFACENORMALS = 4\n\nOption to use face normal as source to name volume zones. Here, the volume zones with face normal into the volume are considered as dead and volume zones with face normal outwards from the volume are considered as solid.."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_fmd.html#download_multi_layer_quad_mesh_pcb_fmd","title":"download_multi_layer_quad_mesh_pcb_fmd","text":"download_multi_layer_quad_mesh_pcb_fmd\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_fmd(destination=None, force=False)\n\nDownload the FMD file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nLabelToZoneMethod.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetContactPreventionsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SetContactPreventionsResults.error_code: ErrorCode\n\nError code associated with the set contact preventions."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchInfoByRegisterIdResults.set_default(error_code=None, n_found=None, locations_found=None, face_zonelets_found=None)\n\nSet the default values of the SearchInfoByRegisterIdResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the retreiving information based on register id.\n\nn_found: int, optional\n\nNumber of registered face elements.\n\nlocations_found: Iterable[float], optional\n\nLocations of each cluster of registered face elements.\n\nface_zonelets_found: Iterable[int], optional\n\nIds of the face zonelets containing atleast one registered face element."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.gap_size.html#gap_size","title":"gap_size","text":"gap_size\n\n\n\nproperty WrapperCloseGapsParams.gap_size: float\n\nMaximum gap size to be closed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneMeshResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ZoneMeshResult.set_default(zone_name=None, element_ids=None, centroids=None)\n\nSet the default values of the ZoneMeshResult object.\n\nParameters\n\nzone_name: str, optional\n\nName of the zone where the elements belong to.\n\nelement_ids: Iterable[int], optional\n\nList of element ids in the zone.\n\ncentroids: Iterable[float], optional\n\nFlattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…]."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportFluentMeshingMeshParams.set_default(append=None, enable_multi_threading=None)\n\nSet the default values of the ImportFluentMeshingMeshParams object.\n\nParameters\n\nappend: bool, optional\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nenable_multi_threading: bool, optional\n\nOption to import multiple files in parallel using multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshedSizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty MeshedSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.EXCLUDEVSHAPE.html#excludevshape","title":"EXCLUDEVSHAPE","text":"EXCLUDEVSHAPE\n\n\n\nThinStripType.EXCLUDEVSHAPE = 1\n\nThin strips of all, but not v shape."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.SKEWNESS.html#skewness","title":"SKEWNESS","text":"SKEWNESS\n\n\n\nFaceQualityMeasure.SKEWNESS = 0\n\nThe Skewness metric ranges between 0 (worst) and 1 (best). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nContactPatchAxis.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.MEDIALAXIS.html#medialaxis","title":"MEDIALAXIS","text":"MEDIALAXIS\n\n\n\nSweepType.MEDIALAXIS = 3\n\nCreates swept blocks on axisymmetric sweepable geometries.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.invalid_jacobian_elements_count.html#invalid_jacobian_elements_count","title":"invalid_jacobian_elements_count","text":"invalid_jacobian_elements_count\n\n\n\nproperty IGAUnstructuredSplineSurf.invalid_jacobian_elements_count: int\n\nCount of elements with negative jacobian."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MergeZoneletsParams.print_default()\n\nPrint the default values of MergeZoneletsParams object.\n\nExamples\n\n>>> MergeZoneletsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nFlowDirection.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.set_feature_recoveries.html#set_feature_recoveries","title":"set_feature_recoveries","text":"set_feature_recoveries\n\n\n\nWrapperControl.set_feature_recoveries(params)\n\nSet feature recoveries to the wrapper control.\n\nParameters\n\nparams\n\nFeatureRecoveryParamsArray\n\nList of feature recovery parameters.\n\nReturns\n\n:\n\n\n\nSetFeatureRecoveriesResults\n\nReturn the set feature recoveries results.\n\nReturn type\n\nSetFeatureRecoveriesResults\n\nExamples\n\n>>> set_feat_rec_results = wrapper_control.set_feature_recoveries([params])"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureRecoveryParams.enable_feature_octree_refinement.html#enable_feature_octree_refinement","title":"enable_feature_octree_refinement","text":"enable_feature_octree_refinement\n\n\n\nproperty FeatureRecoveryParams.enable_feature_octree_refinement: bool\n\nChecks whether to perform octree refinement at feature edges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.NOVOLUMESENCLOSINGMATERIALPOINT.html#novolumesenclosingmaterialpoint","title":"NOVOLUMESENCLOSINGMATERIALPOINT","text":"NOVOLUMESENCLOSINGMATERIALPOINT\n\n\n\nWarningCode.NOVOLUMESENCLOSINGMATERIALPOINT = 5602\n\nNo computed volumes enclosing material point."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PARTHASTOPOLOGY.html#parthastopology","title":"PARTHASTOPOLOGY","text":"PARTHASTOPOLOGY\n\n\n\nErrorCode.PARTHASTOPOLOGY = 2800\n\nPart has a topology."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsResult.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty WrapperCloseGapsResult.error_code: ErrorCode\n\nError code associated with a close gaps operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesParams.delete_geom_zonelets.html#delete_geom_zonelets","title":"delete_geom_zonelets","text":"delete_geom_zonelets\n\n\n\nproperty DeleteTopoEntitiesParams.delete_geom_zonelets: bool\n\nOption to delete geometry zonelets of topology."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.imag.html#imag","title":"imag","text":"imag\n\n\n\nErrorCode.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.html#lsdynaanalysistype","title":"LSDynaAnalysisType","text":"LSDynaAnalysisType\n\n\n\nclass ansys.meshing.prime.LSDynaAnalysisType(*values)\n\nProvides the LS-DYNA analysis type.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPair.html#bcpair","title":"BCPair","text":"BCPair\n\n\n\nclass ansys.meshing.prime.BCPair(model=None, source_zonelet=None, target_zonelet=None, type=None, json_data=None, **kwargs)\n\nUsed to define boundary conditions for match morphing.\n\nParameters\n\nmodel: Model\n\nModel to create a BCPair object with default parameters.\n\nsource_zonelet: int, optional\n\nId of source zonelet.\n\ntarget_zonelet: int, optional\n\nId of target zonelet.\n\ntype: BCPairType, optional\n\nOption to specify boundary condition pair type.\n\njson_data: dict, optional\n\nJSON dictionary to create a BCPair object with provided parameters.\n\nExamples\n\n>>> b_cpair = prime.BCPair(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPair.html#examples-using-bcpair","title":"BCPair > Examples using BCPair","text":"Examples using BCPair\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zone_of_zonelet.html#get_face_zone_of_zonelet","title":"get_face_zone_of_zonelet","text":"get_face_zone_of_zonelet\n\n\n\nPart.get_face_zone_of_zonelet(zonelet)\n\nGets the face zone of given zonelet.\n\nParameters\n\nzonelet\n\npython:int\n\nId of zonelet.\n\nReturns\n\n:\n\n\n\npython:int\n\nReturns the id of face zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> face_zone = part.get_face_zone_of_zonelet(zonelet)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.html#cadrefacetingparams","title":"CadRefacetingParams","text":"CadRefacetingParams\n\n\n\nclass ansys.meshing.prime.CadRefacetingParams(model=None, cad_faceter=None, faceting_resolution=None, custom_surface_deviation_tolerance=None, custom_normal_angle_tolerance=None, max_edge_size_limit=None, max_edge_size=None, json_data=None, **kwargs)\n\nParameters to refacet CAD during import.\n\nParameters\n\nmodel: Model\n\nModel to create a CadRefacetingParams object with default parameters.\n\ncad_faceter: CadFaceter, optional\n\nSpecify the available choices for faceter. The available option is Parasolid. (Note: ACIS faceter is being deprecated from 25R1).\n\nfaceting_resolution: CadRefacetingResolution, optional\n\nSet the faceting resolution.\n\ncustom_surface_deviation_tolerance: float, optional\n\nSet custom tolerance for surface deviation in specified length unit.\n\ncustom_normal_angle_tolerance: float, optional\n\nSet custom tolerance for normal angle in degree.\n\nmax_edge_size_limit: CadRefacetingMaxEdgeSizeLimit, optional\n\nSpecify maximum edge size limit for faceting.\n\nmax_edge_size: float, optional\n\nSet maximum edge size of the facets.\n\njson_data: dict, optional\n\nJSON dictionary to create a CadRefacetingParams object with provided parameters.\n\nExamples\n\n>>> cad_refaceting_params = prime.CadRefacetingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.html#examples-using-cadrefacetingparams","title":"CadRefacetingParams > Examples using CadRefacetingParams","text":"Examples using CadRefacetingParams\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CheckMeshResults.set_default(has_non_positive_volumes=None, has_non_positive_areas=None, has_invalid_shape=None, has_left_handed_faces=None, error_code=None, warning_codes=None)\n\nSet the default values of the CheckMeshResults object.\n\nParameters\n\nhas_non_positive_volumes: bool, optional\n\nIndicates whether mesh has non positive volumes.\n\nhas_non_positive_areas: bool, optional\n\nIndicates whether mesh has non positive areas.\n\nhas_invalid_shape: bool, optional\n\nIndicates whether mesh has invalid shape.\n\nhas_left_handed_faces: bool, optional\n\nIndicates whether mesh has left handed faces.\n\nerror_code: ErrorCode, optional\n\nError code associated with the check grid operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the check grid operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCadFaceter.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.create_thin_volume_control.html#create_thin_volume_control","title":"create_thin_volume_control","text":"create_thin_volume_control\n\n\n\nControlData.create_thin_volume_control()\n\nCreate a thin volume control.\n\nReturns\n\n:\n\n\n\nThinVolumeControl\n\nThin volume control.\n\nReturn type\n\nThinVolumeControl\n\nExamples\n\n>>> thin_volume_control = model.control_data.create_thin_volume_control()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.improve_by_auto_node_move.html#improve_by_auto_node_move","title":"improve_by_auto_node_move","text":"improve_by_auto_node_move\n\n\n\nVolumeMeshTool.improve_by_auto_node_move(part_id, cell_zonelets, boundary_zonelets, params)\n\nImprove volume mesh by auto node move.\n\nParameters\n\npart_id\n\npython:int\n\nId of a part.\n\ncell_zonelets\n\nIterable[python:int]\n\nIds of cell zonelets to be improved.\n\nboundary_zonelets\n\nIterable[python:int]\n\nIds of boundary face zonelets.\n\nparams\n\nAutoNodeMoveParams\n\nAuto node move parameters.\n\nReturns\n\n:\n\n\n\nVolumeMeshToolResults\n\nReturn the VolumeMeshToolResults.\n\nReturn type\n\nVolumeMeshToolResults\n\nExamples\n\n>>> results = volume_mesh_tool.improve_by_auto_node_move(part_id,\n>>>                                cell_zonelets,\n>>>                                boundary_zonelets,\n>>>                                prime.AutoNodeMoveParams(model =model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.improve_by_auto_node_move.html#examples-using-volumemeshtoolimprove_by_auto_node_move","title":"improve_by_auto_node_move > Examples using VolumeMeshTool.improve_by_auto_node_move","text":"Examples using VolumeMeshTool.improve_by_auto_node_move\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.html#wrapparams","title":"WrapParams","text":"WrapParams\n\n\n\nclass ansys.meshing.prime.WrapParams(model=None, sizing_method=None, base_size=None, size_control_ids=None, size_field_ids=None, wrap_region=None, number_of_threads=None, imprint_relative_range=None, imprint_iterations=None, json_data=None, **kwargs)\n\nWrapParams defines parameters for wrapping.\n\nParameters\n\nmodel: Model\n\nModel to create a WrapParams object with default parameters.\n\nsizing_method: SizeFieldType, optional\n\nUsed to define sizing method for wrapping.\n\nbase_size: float, optional\n\nBase size to define octree.\n\nsize_control_ids: Iterable[int], optional\n\nUsed to construct geodesic sizes for octree refinement.\n\nsize_field_ids: Iterable[int], optional\n\nUsed to define size field based octree refinement.\n\nwrap_region: WrapRegion, optional\n\nIndicates source type to extract wrapper region.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading.\n\nimprint_relative_range: float, optional\n\nUsed to define relative range in imprinting in wrapping.\n\nimprint_iterations: int, optional\n\nUsed to define number of imprint iterations in wrapping.\n\njson_data: dict, optional\n\nJSON dictionary to create a WrapParams object with provided parameters.\n\nExamples\n\n>>> wrap_params = prime.WrapParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.zmax.html#zmax","title":"zmax","text":"zmax\n\n\n\nproperty BoundingBox.zmax: float\n\nMaximal Z coordinate of the bounding box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.sizing_method.html#sizing_method","title":"sizing_method","text":"sizing_method\n\n\n\nproperty WrapperPatchFlowRegionsParams.sizing_method: SizeFieldType\n\nUsed to define sizing method for patching.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.imag.html#imag","title":"imag","text":"imag\n\n\n\nEdgeMergeControl.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nVolumeFillType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.imag.html#imag","title":"imag","text":"imag\n\n\n\nCadRefacetingMaxEdgeSizeLimit.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbParams.drop_mid_nodes.html#drop_mid_nodes","title":"drop_mid_nodes","text":"drop_mid_nodes\n\n\n\nproperty ImportMapdlCdbParams.drop_mid_nodes: bool\n\nOption to import quadratic mesh elements as linear by skipping mid nodes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveZoneResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic RemoveZoneResults.print_default()\n\nPrint the default values of RemoveZoneResults object.\n\nExamples\n\n>>> RemoveZoneResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_INCORRECTCONTROLPOINTSIZEWRTDEGREE.html#iga_incorrectcontrolpointsizewrtdegree","title":"IGA_INCORRECTCONTROLPOINTSIZEWRTDEGREE","text":"IGA_INCORRECTCONTROLPOINTSIZEWRTDEGREE\n\n\n\nErrorCode.IGA_INCORRECTCONTROLPOINTSIZEWRTDEGREE = 2401\n\nIncorrect control point size with respect to degree."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATEBOI_INVALIDSCOPE.html#createboi_invalidscope","title":"CREATEBOI_INVALIDSCOPE","text":"CREATEBOI_INVALIDSCOPE\n\n\n\nErrorCode.CREATEBOI_INVALIDSCOPE = 387\n\nBOI creation failed. Invalid face zonelets as input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaIgaKeywordFileParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportLSDynaIgaKeywordFileParams.print_default()\n\nPrint the default values of ExportLSDynaIgaKeywordFileParams object.\n\nExamples\n\n>>> ExportLSDynaIgaKeywordFileParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.html#separateblocksformattype","title":"SeparateBlocksFormatType","text":"SeparateBlocksFormatType\n\n\n\nclass ansys.meshing.prime.SeparateBlocksFormatType(*values)\n\nFormat type for separate element blocks. Only applicable when write_separate_blocks is true.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty VolumeQualitySummaryResults.error_code: ErrorCode\n\nError code associated with the volume quality summary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.ZONES.html#zones","title":"ZONES","text":"ZONES\n\n\n\nScopeEvaluationType.ZONES = 4\n\nUse zones to evaluate the scope."},{"objectID":"Home","href":"user_guide/expressions.html#expressions","title":"Expressions","text":"Expressions\n\nExpressions are used to gather named entities needed for various operations.\n\nThe special characters used are *, !, and spaces or commas. These characters\ncan be used within a string as follows:\n\nabc\\* collects all required entities with a name starting with abc.\n\n\\*abc collects all required entities with a name ending with abc.\n\n\\*abc* collects all required entities with a name containing abc.\n\n!abc\\* collects all required entities with a name that is not starting with abc.\n\n\\*abc,\\*xyz \\*abc \\*xyz collects all required entities with a name ending with abc or xyz. A comma or a space represents OR.\n\nThe following example uses expressions in the ScopeDefinition\nclass. The part_expression parameter\nis used to gather part entities to define a scope. You can provide the exact part name or use\nexpressions for more complex entity collections."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshParams.delete_mesh_on_connected_topo_edges.html#delete_mesh_on_connected_topo_edges","title":"delete_mesh_on_connected_topo_edges","text":"delete_mesh_on_connected_topo_edges\n\n\n\nproperty DeleteMeshParams.delete_mesh_on_connected_topo_edges: bool\n\nOption to delete mesh on topoedges connected only to provided topoentities.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.elements_per_gap.html#elements_per_gap","title":"elements_per_gap","text":"elements_per_gap\n\n\n\nproperty ProximitySizingParams.elements_per_gap: float\n\nThe number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nMatchPairTargetType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshInfo.html#meshinfo","title":"MeshInfo","text":"MeshInfo\n\n\n\nclass ansys.meshing.prime.MeshInfo(model)\n\nMeshInfo provides information about the mesh connectivity and more.\n\nMesh connectivity information is used in graphics rendering.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create MeshInfo object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod PrismControlOffsetType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControlGrowthParams.html#shellblcontrolgrowthparams","title":"ShellBLControlGrowthParams","text":"ShellBLControlGrowthParams\n\n\n\nclass ansys.meshing.prime.ShellBLControlGrowthParams(model=None, n_layers=None, offset_type=None, growth_rate=None, first_height=None, json_data=None, **kwargs)\n\nGrowth parameters for ShellBL control.\n\nParameters\n\nmodel: Model\n\nModel to create a ShellBLControlGrowthParams object with default parameters.\n\nn_layers: int, optional\n\nNumber of layers to be generated.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\noffset_type: ShellBLOffsetType, optional\n\nOffset type for ShellBL.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate: float, optional\n\nRatio of height of the current layer to the previous layer.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfirst_height: float, optional\n\nHeight of first layer of ShellBL.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ShellBLControlGrowthParams object with provided parameters.\n\nExamples\n\n>>> shell_bl_control_growth_params = prime.ShellBLControlGrowthParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.set_sweep_mesh_params.html#set_sweep_mesh_params","title":"set_sweep_mesh_params","text":"set_sweep_mesh_params\n\n\n\nMultiZoneControl.set_sweep_mesh_params(scope_info)\n\nSet the parameters for sweep meshing in terms of topofaces during MultiZone mesh.\n\nParameters\n\nscope_info\n\nMultiZoneSweepMeshParams\n\nInformation required for sweep meshing.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_sweep_mesh_params(scope_info)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic IntersectParams.set_default(tolerance=None, use_absolute_tolerance=None, remesh=None, collapse_feature_angle=None, collapse_target_skewness=None)\n\nSet the default values of the IntersectParams object.\n\nParameters\n\ntolerance: float, optional\n\nIntersection tolerance.\n\nuse_absolute_tolerance: bool, optional\n\nTrue if tolerance provided is absolute value.\n\nremesh: bool, optional\n\nLocal remesh at the intersection.\n\ncollapse_feature_angle: float, optional\n\nAngle to preserve features while performing collapse in improve operation.\n\ncollapse_target_skewness: float, optional\n\nPerform collapse on faces with skewness above the provided target skewness."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.SMOOTH.html#smooth","title":"SMOOTH","text":"SMOOTH\n\n\n\nSmoothType.SMOOTH = 1\n\nPerforms smoothing during the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MORPHER_COMPUTEBCS.html#morpher_computebcs","title":"MORPHER_COMPUTEBCS","text":"MORPHER_COMPUTEBCS\n\n\n\nErrorCode.MORPHER_COMPUTEBCS = 1410\n\nFailed to compute boundary conditions."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismParams.html#prismparams","title":"PrismParams","text":"PrismParams\n\n\n\nclass ansys.meshing.prime.PrismParams(model=None, stair_step=None, no_imprint_zonelets=None, json_data=None, **kwargs)\n\nParameters to control prism mesh generation.\n\nParameters\n\nmodel: Model\n\nModel to create a PrismParams object with default parameters.\n\nstair_step: PrismStairStep, optional\n\nPrism stairstep parameters.\n\nno_imprint_zonelets: Iterable[int], optional\n\nOption to specify zonelets to skip prism imprint.\n\njson_data: dict, optional\n\nJSON dictionary to create a PrismParams object with provided parameters.\n\nExamples\n\n>>> prism_params = prime.PrismParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MERGEZONELETSNOTSUPPORTEDFORTOPOLOGYPART.html#mergezoneletsnotsupportedfortopologypart","title":"MERGEZONELETSNOTSUPPORTEDFORTOPOLOGYPART","text":"MERGEZONELETSNOTSUPPORTEDFORTOPOLOGYPART\n\n\n\nErrorCode.MERGEZONELETSNOTSUPPORTEDFORTOPOLOGYPART = 1206\n\nMerge zonelets is not supported for part with topology data."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nControlPointSelection.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoiSizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic BoiSizingParams.print_default()\n\nPrint the default values of BoiSizingParams object.\n\nExamples\n\n>>> BoiSizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ComputeTopoVolumesResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the compute topovolumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchByThinStripResults.set_default(n_found=None, error_code=None)\n\nSet the default values of the SearchByThinStripResults object.\n\nParameters\n\nn_found: int, optional\n\nNumber of face elements identified as thin strips.\n\nerror_code: ErrorCode, optional\n\nError code associated with search thin strips operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCadReaderRoute.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportBoundaryFittedSplineParams.id_start.html#id_start","title":"id_start","text":"id_start\n\n\n\nproperty ExportBoundaryFittedSplineParams.id_start: int\n\nStart ids for IGA entities."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryParams.print_mesh.html#print_mesh","title":"print_mesh","text":"print_mesh\n\n\n\nproperty PartSummaryParams.print_mesh: bool\n\nBoolean to control print mesh information. The default is true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.add_model.html#add_model","title":"add_model","text":"add_model\n\n\n\nPrimePlotter.add_model(model, scope=None, update=False)\n\nAdd a Prime model to the plotter.\n\nParameters\n\nmodel\n\nModel\n\nPrime model to add.\n\nscope\n\nprime.ScopeDefinition, default: python:None\n\nScope to show, if any.\n\nupdate\n\nbool, default: python:False\n\nWhether to update the display.\n\nReturn type\n\nNone"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.add_model.html#examples-using-primeplotteradd_model","title":"add_model > Examples using PrimePlotter.add_model","text":"Examples using PrimePlotter.add_model\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ShellBLOffsetType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.triangles_coplanar_angle_cos.html#triangles_coplanar_angle_cos","title":"triangles_coplanar_angle_cos","text":"triangles_coplanar_angle_cos\n\n\n\nproperty ScaffolderParams.triangles_coplanar_angle_cos: float\n\nLower bound for cos angle to consider coplanar faces for scaffolding.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOCELLSSEPARATED.html#nocellsseparated","title":"NOCELLSSEPARATED","text":"NOCELLSSEPARATED\n\n\n\nErrorCode.NOCELLSSEPARATED = 6001\n\nNo cells separated based on given input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.shell_thickness.html#shell_thickness","title":"shell_thickness","text":"shell_thickness\n\n\n\nproperty QuadToSplineParams.shell_thickness: float\n\nThickness of shell.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeParams.enable_periodicity.html#enable_periodicity","title":"enable_periodicity","text":"enable_periodicity\n\n\n\nproperty VolumetricSizeFieldComputeParams.enable_periodicity: bool\n\nOption to enable periodic size field computations."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nBodyQueryType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.check_non_manifolds.html#check_non_manifolds","title":"check_non_manifolds","text":"check_non_manifolds\n\n\n\nproperty SurferParams.check_non_manifolds: bool\n\nOption to avoid new non-manifolds(multi-connection) if generated in surface mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.KEEPNONE.html#keepnone","title":"KEEPNONE","text":"KEEPNONE\n\n\n\nJoinSeparateMethod.KEEPNONE = 0\n\nRemove both overlapping zonelets after joining."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDINPUTVOLUMES.html#invalidinputvolumes","title":"INVALIDINPUTVOLUMES","text":"INVALIDINPUTVOLUMES\n\n\n\nErrorCode.INVALIDINPUTVOLUMES = 1312\n\nList of volume ids provided is empty or incorrect."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FuseParams.set_default(use_absolute_tolerance=None, gap_tolerance=None, side_tolerance=None, check_interior=None, fuse_option=None, check_orientation=None, dump_mesh=None, local_remesh=None, n_layers=None, separate=None, angle=None, fuse_edges_only=None)\n\nSet the default values of the FuseParams object.\n\nParameters\n\nuse_absolute_tolerance: bool, optional\n\nOption to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\ngap_tolerance: float, optional\n\nGap tolerance between faces to be fused. The default value is 0.05.\n\nside_tolerance: float, optional\n\nSide tolerance for fusing to the side edges.\n\ncheck_interior: bool, optional\n\nOption to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\nfuse_option: FuseOption, optional\n\nOption for treatment of fused surfaces. The default value is None.\n\ncheck_orientation: bool, optional\n\nOption to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\ndump_mesh: bool, optional\n\nOption to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nlocal_remesh: bool, optional\n\nOption to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nn_layers: int, optional\n\nFace layers around region to be fused. The default value is 2.\n\nseparate: bool, optional\n\nOption to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nangle: float, optional\n\nFaces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\nfuse_edges_only: bool, optional\n\nOption to fuse edges. The default value is false. When fuse edges only is true, only edges are fused."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactElementTypeParams.tie_surf_to_surf.html#tie_surf_to_surf","title":"tie_surf_to_surf","text":"tie_surf_to_surf\n\n\n\nproperty ContactElementTypeParams.tie_surf_to_surf: int\n\nElement type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.topo_edge_ids.html#topo_edge_ids","title":"topo_edge_ids","text":"topo_edge_ids\n\n\n\nproperty EdgeConnectivityResults.topo_edge_ids: Iterable[int]\n\nTopoEdge ids corresponding to each edge zonelet id for topology based mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripParams.html#searchbythinstripparams","title":"SearchByThinStripParams","text":"SearchByThinStripParams\n\n\n\nclass ansys.meshing.prime.SearchByThinStripParams(model=None, strip_height_limit=None, quality_limit=None, face_quality_measure=None, feature_type=None, feature_angle=None, json_data=None, **kwargs)\n\nParameters to search by thin strip of face elements.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchByThinStripParams object with default parameters.\n\nstrip_height_limit: float, optional\n\nAbsolute height limit to ignore strips with height more than provided limit.\n\nquality_limit: float, optional\n\nQuality limit used for search strip of face elements.\n\nface_quality_measure: FaceQualityMeasure, optional\n\nQuality measure used for search strip of face elements.\n\nfeature_type: SurfaceFeatureType, optional\n\nUsed to identify thin strip of face elements based on the provided feature type.\n\nfeature_angle: float, optional\n\nAngle used to identify angle based features.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchByThinStripParams object with provided parameters.\n\nExamples\n\n>>> search_by_thin_strip_params = prime.SearchByThinStripParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.face_zonelet_ids.html#face_zonelet_ids","title":"face_zonelet_ids","text":"face_zonelet_ids\n\n\n\nproperty FaceConnectivityResults.face_zonelet_ids: Iterable[int]\n\nFace zonelet ids for which connectivity data is available."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_INVALIDINPUTVOLUMES.html#stacker_invalidinputvolumes","title":"STACKER_INVALIDINPUTVOLUMES","text":"STACKER_INVALIDINPUTVOLUMES\n\n\n\nErrorCode.STACKER_INVALIDINPUTVOLUMES = 10101\n\nInvalid input volumes provided to stacker."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.LASTRATIO.html#lastratio","title":"LASTRATIO","text":"LASTRATIO\n\n\n\nPrismControlOffsetType.LASTRATIO = 2\n\nOption to grow prism layers based on first height and last aspect ratio."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.real.html#real","title":"real","text":"real\n\n\n\nErrorCode.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_INVALIDGEOMETRYSCOPE.html#wrappercontrol_invalidgeometryscope","title":"WRAPPERCONTROL_INVALIDGEOMETRYSCOPE","text":"WRAPPERCONTROL_INVALIDGEOMETRYSCOPE\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDGEOMETRYSCOPE = 3420\n\nGeometry scope specified under wrapper control is invalid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nVolumeFillType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SurfaceQualitySummaryParams.set_default(face_quality_measures=None, scope=None, quality_limit=None)\n\nSet the default values of the SurfaceQualitySummaryParams object.\n\nParameters\n\nface_quality_measures: List[FaceQualityMeasure], optional\n\nList of face quality measures for surface quality diagnostics.\n\nscope: ScopeDefinition, optional\n\nScope the face zonelets for surface quality diagnostics.\n\nquality_limit: Iterable[float], optional\n\nQuality limit per face quality measure. If the quality limit is not specified, the default quality limit is used."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.size_field_ids.html#size_field_ids","title":"size_field_ids","text":"size_field_ids\n\n\n\nproperty WrapParams.size_field_ids: Iterable[int]\n\nUsed to define size field based octree refinement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_elbow_pmdat.html#download_elbow_pmdat","title":"download_elbow_pmdat","text":"download_elbow_pmdat\n\n\n\nansys.meshing.prime.examples.download_elbow_pmdat(destination=None, force=False)\n\nDownload the PMDAT file for the mixing elbow example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(elbow, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentMeshingMeshParams.html#exportfluentmeshingmeshparams","title":"ExportFluentMeshingMeshParams","text":"ExportFluentMeshingMeshParams\n\n\n\nclass ansys.meshing.prime.ExportFluentMeshingMeshParams(model=None, cff_format=None, json_data=None, **kwargs)\n\nParameters used to export fluent meshing mesh.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportFluentMeshingMeshParams object with default parameters.\n\ncff_format: bool, optional\n\nOption to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz).\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportFluentMeshingMeshParams object with provided parameters.\n\nExamples\n\n>>> export_fluent_meshing_mesh_params = prime.ExportFluentMeshingMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_deformed_blade_scdoc.html#download_deformed_blade_scdoc","title":"download_deformed_blade_scdoc","text":"download_deformed_blade_scdoc\n\n\n\nansys.meshing.prime.examples.download_deformed_blade_scdoc(destination=None, force=False)\n\nDownload the SCDOC file for the turbine blade example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nScopeExpressionType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nContactPatchAxis.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.create_zone.html#create_zone","title":"create_zone","text":"create_zone\n\n\n\nModel.create_zone(suggested_name, type)\n\nCreates zone for the given zone type.\n\nParameters\n\nsuggested_name\n\npython:str\n\nSuggested name for the zone to be created.\n\ntype\n\nZoneType\n\nType of the zone to be created.\n\nReturns\n\n:\n\n\n\nCreateZoneResults\n\nReturns the CreateZoneResults.\n\nReturn type\n\nCreateZoneResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.create_zone(\"wall\", prime.ZoneType.FACE)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.NONE.html#none","title":"NONE","text":"NONE\n\n\n\nFuseOption.NONE = 0\n\nNo action to be taken for surfaces being fused."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nPartCreationType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.zone_expression.html#zone_expression","title":"zone_expression","text":"zone_expression\n\n\n\nproperty ScopeDefinition.zone_expression: str\n\nZone expression to scope entities when evaluation type is set to zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.real.html#real","title":"real","text":"real\n\n\n\nScopeEvaluationType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportMapdlCdbResults.print_default()\n\nPrint the default values of ImportMapdlCdbResults object.\n\nExamples\n\n>>> ImportMapdlCdbResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshParams.html#importfluentmeshingmeshparams","title":"ImportFluentMeshingMeshParams","text":"ImportFluentMeshingMeshParams\n\n\n\nclass ansys.meshing.prime.ImportFluentMeshingMeshParams(model=None, append=None, enable_multi_threading=None, json_data=None, **kwargs)\n\nParameters used to import fluent meshing mesh.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportFluentMeshingMeshParams object with default parameters.\n\nappend: bool, optional\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nenable_multi_threading: bool, optional\n\nOption to import multiple files in parallel using multithreading.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportFluentMeshingMeshParams object with provided parameters.\n\nExamples\n\n>>> import_fluent_meshing_mesh_params = prime.ImportFluentMeshingMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic AutoNodeMoveParams.print_default()\n\nPrint the default values of AutoNodeMoveParams object.\n\nExamples\n\n>>> AutoNodeMoveParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.TRIMONESIDE.html#trimoneside","title":"TRIMONESIDE","text":"TRIMONESIDE\n\n\n\nFuseOption.TRIMONESIDE = 3\n\nDelete faces to be fused on one side and merge nodes to be fused at middle locations (works only within a single part)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.info_actor_map.html#info_actor_map","title":"info_actor_map","text":"info_actor_map\n\n\n\nproperty PrimePlotter.info_actor_map: Dict\n\nGet the information actor map for the selected information widget.\n\nReturns\n\nDict\n\nInformation actor map."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nEdgeMergeControl.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismStairStep.gap_factor_scale.html#gap_factor_scale","title":"gap_factor_scale","text":"gap_factor_scale\n\n\n\nproperty PrismStairStep.gap_factor_scale: float\n\nScale factor for prism proximity detection gap factor."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CopyZoneletsResults.set_default(error_code=None, copied_zonelets=None, copied_face_zonelets=None)\n\nSet the default values of the CopyZoneletsResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\ncopied_zonelets: Iterable[int], optional\n\nIds of the copied zonelets.\n\ncopied_face_zonelets: Iterable[int], optional\n\nIds of the copied bounding faces of cell zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic AddThicknessResults.set_default(error_code=None, part_id=None)\n\nSet the default values of the AddThicknessResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\npart_id: int, optional\n\nThe created thickness part id."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceMeshSizeScaling.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SurfaceMeshSizeScaling.set_default(factor=None, size_range_min=None, size_range_max=None)\n\nSet the default values of the SurfaceMeshSizeScaling object.\n\nParameters\n\nfactor: float, optional\n\nValue by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_min: float, optional\n\nMinimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_max: float, optional\n\nMaximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.backend.html#backend","title":"backend","text":"backend\n\n\n\nproperty PrimePlotter.backend\n\nReturn the base plotter object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IMPROVESURFACEMESHQUALITYFAILED.html#improvesurfacemeshqualityfailed","title":"IMPROVESURFACEMESHQUALITYFAILED","text":"IMPROVESURFACEMESHQUALITYFAILED\n\n\n\nErrorCode.IMPROVESURFACEMESHQUALITYFAILED = 2102\n\nImprove surface mesh quality failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetFeatureRecoveriesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SetFeatureRecoveriesResults.print_default()\n\nPrint the default values of SetFeatureRecoveriesResults object.\n\nExamples\n\n>>> SetFeatureRecoveriesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControlSummaryResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SizeControlSummaryResult.print_default()\n\nPrint the default values of SizeControlSummaryResult object.\n\nExamples\n\n>>> SizeControlSummaryResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.fillet_max_radius.html#fillet_max_radius","title":"fillet_max_radius","text":"fillet_max_radius\n\n\n\nproperty RepairTopologyParams.fillet_max_radius: float\n\nMaximum radius of fillets to be detected.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StretchFreeBoundariesResults.html#stretchfreeboundariesresults","title":"StretchFreeBoundariesResults","text":"StretchFreeBoundariesResults\n\n\n\nclass ansys.meshing.prime.StretchFreeBoundariesResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with stretch free boundaries operation.\n\nParameters\n\nmodel: Model\n\nModel to create a StretchFreeBoundariesResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a StretchFreeBoundariesResults object with provided parameters.\n\nExamples\n\n>>> stretch_free_boundaries_results = prime.StretchFreeBoundariesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MergePartsResults.print_default()\n\nPrint the default values of MergePartsResults object.\n\nExamples\n\n>>> MergePartsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.real.html#real","title":"real","text":"real\n\n\n\nTopoSearchField.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nAdvancedSurferSetup.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.GETELEMENTCOUNTFAILED.html#getelementcountfailed","title":"GETELEMENTCOUNTFAILED","text":"GETELEMENTCOUNTFAILED\n\n\n\nErrorCode.GETELEMENTCOUNTFAILED = 251\n\nFailed to get element count."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.base_face_ids.html#base_face_ids","title":"base_face_ids","text":"base_face_ids\n\n\n\nproperty MeshStackerResults.base_face_ids: Iterable[int]\n\nList of base face ids after base creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.advanced_surfer_setup.html#advanced_surfer_setup","title":"advanced_surfer_setup","text":"advanced_surfer_setup\n\n\n\nproperty SurferParams.advanced_surfer_setup: AdvancedSurferSetup\n\nOption to define advanced settings for remeshing operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nLSDynaFileFormatType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControlSummaryParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SizeControlSummaryParams.set_default()\n\nSet the default values of the SizeControlSummaryParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesParams.material_point_names.html#material_point_names","title":"material_point_names","text":"material_point_names\n\n\n\nproperty ComputeVolumesParams.material_point_names: List[str]\n\nMaterial point names provided to identify volumes. Material point names will have precedence over the volume names."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCOULDNOTEXTRACTINTERFACE.html#wrappercouldnotextractinterface","title":"WRAPPERCOULDNOTEXTRACTINTERFACE","text":"WRAPPERCOULDNOTEXTRACTINTERFACE\n\n\n\nErrorCode.WRAPPERCOULDNOTEXTRACTINTERFACE = 3405\n\nFailed to extract wrapper interface."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenResults.component_names.html#component_names","title":"component_names","text":"component_names\n\n\n\nproperty ComponentChildrenResults.component_names: List[str]\n\nNames of components that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic RepairTopologyParams.set_default(connect_faces=None, repair_edges=None, split_topo_edges_at_apex_point=None, fillet_max_radius=None, smallest_edge_length=None, merge_edge_allow_self_close=None, suppress_shared_edges_when_merging=None, edge_connect_type=None, connect_faces_params=None, repair_edges_params=None)\n\nSet the default values of the RepairTopologyParams object.\n\nParameters\n\nconnect_faces: bool, optional\n\nOption to connect faces.\n\nrepair_edges: bool, optional\n\nOption to repair edges.\n\nsplit_topo_edges_at_apex_point: bool, optional\n\nOption to split edges at apex point.\n\nfillet_max_radius: float, optional\n\nMaximum radius of fillets to be detected.\n\nsmallest_edge_length: float, optional\n\nLength of smallest edge for which split is applied.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nsuppress_shared_edges_when_merging: bool, optional\n\nOption for suppressing shared edges when merging.\n\nedge_connect_type: int, optional\n\nEdge connection type.\n\nconnect_faces_params: ConnectFacesParams, optional\n\nParameters for connect faces operation.\n\nrepair_edges_params: RepairEdgesParams, optional\n\nParameters for repair edges operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nPartCreationType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic BoundaryFittedSplineParams.set_default(degree_u=None, degree_v=None, degree_w=None, refinement_fraction_u=None, refinement_fraction_v=None, refinement_fraction_w=None, control_points_count_u=None, control_points_count_v=None, control_points_count_w=None, n_refine=None, control_point_selection_type=None)\n\nSet the default values of the BoundaryFittedSplineParams object.\n\nParameters\n\ndegree_u: int, optional\n\nDegree of spline in u direction.\n\ndegree_v: int, optional\n\nDegree of spline in v direction.\n\ndegree_w: int, optional\n\nDegree of spline in w direction.\n\nrefinement_fraction_u: float, optional\n\nFraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_v: float, optional\n\nFraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_w: float, optional\n\nFraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode.\n\ncontrol_points_count_u: int, optional\n\nSpline control points count in U direction. Used in manual control points selection mode.\n\ncontrol_points_count_v: int, optional\n\nSpline control points count in V direction. Used in manual control points selection mode.\n\ncontrol_points_count_w: int, optional\n\nSpline control points count in W direction. Used in manual control points selection mode.\n\nn_refine: int, optional\n\nSpline refinement level for rendering.\n\ncontrol_point_selection_type: ControlPointSelection, optional\n\nSpline control points selection type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.node_coords.html#node_coords","title":"node_coords","text":"node_coords\n\n\n\nproperty EdgeConnectivityResults.node_coords: Iterable[float]\n\nNode coordinates describing edges of edge zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nIntersectionMask.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.offset_distance.html#offset_distance","title":"offset_distance","text":"offset_distance\n\n\n\nproperty CreateContactPatchParams.offset_distance: float\n\nSource offset distance value."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveZoneResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic RemoveZoneResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the RemoveZoneResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the remove zone operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectHolesParams.min_hole_length.html#min_hole_length","title":"min_hole_length","text":"min_hole_length\n\n\n\nproperty DetectHolesParams.min_hole_length: float\n\nMinimum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.max_size.html#max_size","title":"max_size","text":"max_size\n\n\n\nproperty SurferParams.max_size: float\n\nMaximum size to be used in sizing for the surfer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_second_order_quad_faces.html#n_second_order_quad_faces","title":"n_second_order_quad_faces","text":"n_second_order_quad_faces\n\n\n\nproperty PartSummaryResults.n_second_order_quad_faces: int\n\nNumber of second order quadrilateral faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SurferResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDSIZECONTROLS.html#invalidsizecontrols","title":"INVALIDSIZECONTROLS","text":"INVALIDSIZECONTROLS\n\n\n\nErrorCode.INVALIDSIZECONTROLS = 401\n\nInvalid size controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.smooth_boundary.html#smooth_boundary","title":"smooth_boundary","text":"smooth_boundary\n\n\n\nproperty LocalSurferParams.smooth_boundary: bool\n\nOption to extend local selection to get smooth boundary of selected elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nScopeEntity.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinParams.use_absolute_tolerance.html#use_absolute_tolerance","title":"use_absolute_tolerance","text":"use_absolute_tolerance\n\n\n\nproperty JoinParams.use_absolute_tolerance: bool\n\nTolerance provided is absolute value."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenResults.body_ids.html#body_ids","title":"body_ids","text":"body_ids\n\n\n\nproperty ComponentChildrenResults.body_ids: Iterable[int]\n\nIds of bodies that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoftSizingParams.html#softsizingparams","title":"SoftSizingParams","text":"SoftSizingParams\n\n\n\nclass ansys.meshing.prime.SoftSizingParams(model=None, max=None, growth_rate=None, json_data=None, **kwargs)\n\nSize field computed using soft size control enables you to set the maximum size on the scoped zonelets .\n\nWhen the soft sizing is computed for edges or faces, the size will be affected by size computed using other controls.\nThe minimum size on the zonelet will be determined based on the influence of other size controls,\nelse a uniform size will be maintained.\n\nParameters\n\nmodel: Model\n\nModel to create a SoftSizingParams object with default parameters.\n\nmax: float, optional\n\nMaximum size used for computing edge and face size using soft size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\njson_data: dict, optional\n\nJSON dictionary to create a SoftSizingParams object with provided parameters.\n\nExamples\n\n>>> soft_sizing_params = prime.SoftSizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoftSizingParams.html#examples-using-softsizingparams","title":"SoftSizingParams > Examples using SoftSizingParams","text":"Examples using SoftSizingParams\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MultiZoneSizingParams.print_default()\n\nPrint the default values of MultiZoneSizingParams object.\n\nExamples\n\n>>> MultiZoneSizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbResults.zone_mesh_results.html#zone_mesh_results","title":"zone_mesh_results","text":"zone_mesh_results\n\n\n\nproperty ExportMapdlCdbResults.zone_mesh_results: List[ZoneMeshResult]\n\nZone-wise mesh information for elements in the exported model.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WriteSizeFieldParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WriteSizeFieldParams.set_default(write_only_active_size_fields=None)\n\nSet the default values of the WriteSizeFieldParams object.\n\nParameters\n\nwrite_only_active_size_fields: bool, optional\n\nOption to write only active size fields into the file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod HexCoreCellElementType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.min_aspect_ratio.html#min_aspect_ratio","title":"min_aspect_ratio","text":"min_aspect_ratio\n\n\n\nproperty PrismControlGrowthParams.min_aspect_ratio: float\n\nMinimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.transition_layer_type.html#transition_layer_type","title":"transition_layer_type","text":"transition_layer_type\n\n\n\nproperty HexCoreParams.transition_layer_type: HexCoreTransitionLayerType\n\nHandle size transition of hex cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPreventionParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ContactPreventionParams.print_default()\n\nPrint the default values of ContactPreventionParams object.\n\nExamples\n\n>>> ContactPreventionParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_shell_bl_control_by_name.html#get_shell_bl_control_by_name","title":"get_shell_bl_control_by_name","text":"get_shell_bl_control_by_name\n\n\n\nControlData.get_shell_bl_control_by_name(name)\n\nGet a shell bl control by name.\n\nParameters\n\nname\n\npython:str\n\nName of the shell bl control.\n\nReturns\n\n:\n\n\n\nShellBLControl\n\nShell BL control.\n\nReturn type\n\nShellBLControl\n\nExamples\n\n>>> shell_bl_control = model.control_data.get_shell_bl_control_by_name(\"ShellBLControl-1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_scoped_polydata.html#get_scoped_polydata","title":"get_scoped_polydata","text":"get_scoped_polydata\n\n\n\nModel.get_scoped_polydata(scope, update=False)\n\nGet the scoped polydata of the model.\n\nParameters\n\nscope\n\nScope\n\nScope of the model.\n\nReturns\n\n:\n\n\n\nvtk.vtkPolyData\n\nScoped polydata of the model.\n\nExamples\n\n>>> scoped_polydata = model.get_scoped_polydata(scope)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TopoFillHoleResult.set_default(new_topo_faces_created=None, error_code=None)\n\nSet the default values of the TopoFillHoleResult object.\n\nParameters\n\nnew_topo_faces_created: Iterable[int], optional\n\nIds of new topofaces created.\n\nerror_code: ErrorCode, optional\n\nError code associated with a wrap operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSplineContinuityType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateShellBLResults.html#createshellblresults","title":"CreateShellBLResults","text":"CreateShellBLResults\n\n\n\nclass ansys.meshing.prime.CreateShellBLResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the ShellBL mesh.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateShellBLResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateShellBLResults object with provided parameters.\n\nExamples\n\n>>> create_shell_blresults = prime.CreateShellBLResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteInteriorNodesParams.html#deleteinteriornodesparams","title":"DeleteInteriorNodesParams","text":"DeleteInteriorNodesParams\n\n\n\nclass ansys.meshing.prime.DeleteInteriorNodesParams(model=None, merge_face_normals_angle=None, merge_edge_allow_self_close=None, edge_sharp_corner_angle=None, json_data=None, **kwargs)\n\nParameters for delete interior nodes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteInteriorNodesParams object with default parameters.\n\nmerge_face_normals_angle: float, optional\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nedge_sharp_corner_angle: float, optional\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteInteriorNodesParams object with provided parameters.\n\nExamples\n\n>>> delete_interior_nodes_params = prime.DeleteInteriorNodesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.set_suggested_zone_name.html#set_suggested_zone_name","title":"set_suggested_zone_name","text":"set_suggested_zone_name\n\n\n\nModel.set_suggested_zone_name(id, name)\n\nSets the unique name for zone with given id based on the suggested name.\n\nParameters\n\nid\n\npython:int\n\nId of the zone to set suggested name.\n\nname\n\npython:str\n\nSuggested name for the zone.\n\nReturns\n\n:\n\n\n\nSetNameResults\n\nReturns the SetNameResults. results.assignedName indicates the assigned name to the zone.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.set_suggested_zone_name(id = 5, name = \"zone1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDESUGGESTEDNAME.html#overridesuggestedname","title":"OVERRIDESUGGESTEDNAME","text":"OVERRIDESUGGESTEDNAME\n\n\n\nWarningCode.OVERRIDESUGGESTEDNAME = 301\n\nOverride name by suggested name."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.project_on_geometry.html#project_on_geometry","title":"project_on_geometry","text":"project_on_geometry\n\n\n\nproperty SurferParams.project_on_geometry: bool\n\nOption to project on CAD geometry when meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nThinStripType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDLAYERS.html#invalidlayers","title":"INVALIDLAYERS","text":"INVALIDLAYERS\n\n\n\nErrorCode.INVALIDLAYERS = 127\n\nInvalid number of layers."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderMergeResults.n_merged.html#n_merged","title":"n_merged","text":"n_merged\n\n\n\nproperty ScaffolderMergeResults.n_merged: int\n\nNumber of merged topofaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MATCHMORPH_BCPAIRINPUTTYPEMISMATCH.html#matchmorph_bcpairinputtypemismatch","title":"MATCHMORPH_BCPAIRINPUTTYPEMISMATCH","text":"MATCHMORPH_BCPAIRINPUTTYPEMISMATCH\n\n\n\nErrorCode.MATCHMORPH_BCPAIRINPUTTYPEMISMATCH = 1451\n\nEntity type does not match with input for defined boundary condition pair."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nJoinSeparateMethod.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nLSDynaAnalysisType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FixInvalidNormalNodeParams.print_default()\n\nPrint the default values of FixInvalidNormalNodeParams object.\n\nExamples\n\n>>> FixInvalidNormalNodeParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.FREEFREE.html#freefree","title":"FREEFREE","text":"FREEFREE\n\n\n\nMergeNodeType.FREEFREE = 1\n\nMerge only free nodes with free nodes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.PROGRAMCONTROLLED.html#programcontrolled","title":"PROGRAMCONTROLLED","text":"PROGRAMCONTROLLED\n\n\n\nSweepType.PROGRAMCONTROLLED = 4\n\nMultizone chooses the best decomposition method based on geometry analysis and decomposition tries.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapSearchResults.html#overlapsearchresults","title":"OverlapSearchResults","text":"OverlapSearchResults\n\n\n\nclass ansys.meshing.prime.OverlapSearchResults(model=None, n_pairs=None, overlap_pairs=None, error_code=None, json_data=None, **kwargs)\n\nProvides ids of a pair of overlapping face zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a OverlapSearchResults object with default parameters.\n\nn_pairs: int, optional\n\nNumber of pairs.\n\noverlap_pairs: List[OverlapPairs], optional\n\nIds corresponding to pairs of overlapping face zonelets.\n\nerror_code: ErrorCode, optional\n\nError Code associated with failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a OverlapSearchResults object with provided parameters.\n\nExamples\n\n>>> overlap_search_results = prime.OverlapSearchResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nVolumeFillType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileReadResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FileReadResults.print_default()\n\nPrint the default values of FileReadResults object.\n\nExamples\n\n>>> FileReadResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.quality_measure.html#quality_measure","title":"quality_measure","text":"quality_measure\n\n\n\nproperty AutoNodeMoveParams.quality_measure: CellQualityMeasure\n\nSpecify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityParams.reorder_edge_zonelets_mid_nodes.html#reorder_edge_zonelets_mid_nodes","title":"reorder_edge_zonelets_mid_nodes","text":"reorder_edge_zonelets_mid_nodes\n\n\n\nproperty FaceAndEdgeConnectivityParams.reorder_edge_zonelets_mid_nodes: bool\n\nOption to reorder mid nodes for quadratic edges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LeakPreventionParams.html#leakpreventionparams","title":"LeakPreventionParams","text":"LeakPreventionParams\n\n\n\nclass ansys.meshing.prime.LeakPreventionParams(model=None, material_points=None, scope=None, max_hole_size=None, n_expansion_layers=None, json_data=None, **kwargs)\n\nLeakPreventionParams defines leakage prevention control parameters for wrapper.\n\nParameters\n\nmodel: Model\n\nModel to create a LeakPreventionParams object with default parameters.\n\nmaterial_points: List[str], optional\n\nMaterial points used for leak prevention control.\n\nscope: ScopeDefinition, optional\n\nScope used for leak prevention control.\n\nmax_hole_size: float, optional\n\nMaximum hole size to prevent leakage into region.\n\nn_expansion_layers: int, optional\n\nNumber of layers to expand leaking region.\n\njson_data: dict, optional\n\nJSON dictionary to create a LeakPreventionParams object with provided parameters.\n\nExamples\n\n>>> leak_prevention_params = prime.LeakPreventionParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.get_geom_zonelets_of_topo_faces.html#get_geom_zonelets_of_topo_faces","title":"get_geom_zonelets_of_topo_faces","text":"get_geom_zonelets_of_topo_faces\n\n\n\nTopoData.get_geom_zonelets_of_topo_faces(topo_faces)\n\nGet the geometry face zonelets for the provided topoface ids.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of the topofaces.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the geometry face zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> geom_face_zonelets = topo_data.get_geom_zonelets_of_topo_faces(topo_faces)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsParams.fringe_element_count.html#fringe_element_count","title":"fringe_element_count","text":"fringe_element_count\n\n\n\nproperty DeleteFringesAndOverlapsParams.fringe_element_count: int\n\nMaximum count of free face elements identified as fringe to be deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.degree_w.html#degree_w","title":"degree_w","text":"degree_w\n\n\n\nproperty UniformSolidSplineCreationParams.degree_w: int\n\nDegree in w direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.real.html#real","title":"real","text":"real\n\n\n\nPartCreationType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_toy_car_fmd.html#download_toy_car_fmd","title":"download_toy_car_fmd","text":"download_toy_car_fmd\n\n\n\nansys.meshing.prime.examples.download_toy_car_fmd(destination=None, force=False)\n\nDownload the FMD file for the toy car example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_toy_car_fmd.html#examples-using-download_toy_car_fmd","title":"download_toy_car_fmd > Examples using download_toy_car_fmd","text":"Examples using download_toy_car_fmd\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.control_points_count_w.html#control_points_count_w","title":"control_points_count_w","text":"control_points_count_w\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_w: int\n\nSpline control points count in W direction. Used in manual control points selection mode."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesherResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty AutoQuadMesherResults.warning_codes: List[WarningCode]\n\nWarning code if AutoQuadMesher operation is partially successful.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ConnectResults.print_default()\n\nPrint the default values of ConnectResults object.\n\nExamples\n\n>>> ConnectResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SCAFFOLDERINVALIDABSOLUTEDISTOL.html#scaffolderinvalidabsolutedistol","title":"SCAFFOLDERINVALIDABSOLUTEDISTOL","text":"SCAFFOLDERINVALIDABSOLUTEDISTOL\n\n\n\nErrorCode.SCAFFOLDERINVALIDABSOLUTEDISTOL = 53\n\nInvalid absolute distance tolerance for scaffold operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nHexCoreCellElementType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinParams.remesh.html#remesh","title":"remesh","text":"remesh\n\n\n\nproperty JoinParams.remesh: bool\n\nRemesh at overlap surface boundary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.IN.html#in","title":"IN","text":"IN\n\n\n\nLengthUnit.IN = 5\n\nDenotes length unit is inches."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_INVALIDLEAKPREVENTIONID.html#wrappercontrol_invalidleakpreventionid","title":"WRAPPERCONTROL_INVALIDLEAKPREVENTIONID","text":"WRAPPERCONTROL_INVALIDLEAKPREVENTIONID\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDLEAKPREVENTIONID = 3423\n\nLeak prevention specified under wrapper control doesn’t exist."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.real.html#real","title":"real","text":"real\n\n\n\nScopeExpressionType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCreateVolumeZonesType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileReadParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FileReadParams.print_default()\n\nPrint the default values of FileReadParams object.\n\nExamples\n\n>>> FileReadParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_boi_sizing_params.html#get_boi_sizing_params","title":"get_boi_sizing_params","text":"get_boi_sizing_params\n\n\n\nSizeControl.get_boi_sizing_params()\n\nGet the body of influence sizing parameters of size control.\n\nReturns\n\n:\n\n\n\nBoiSizingParams\n\nReturn the BoiSizingParams.\n\nReturn type\n\nBoiSizingParams\n\nExamples\n\n>>> params = size_control.get_boi_sizing_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nErrorCode.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic QuadToSplineParams.set_default(feature_capture_type=None, feature_angle=None, corner_angle=None, shell_thickness=None, solid_shell=None, separate_by_zone=None, zone_name_shell_thickness_pairs=None, continuity=None, project_on_geometry=None, use_projection_scope=None, projection_scope=None)\n\nSet the default values of the QuadToSplineParams object.\n\nParameters\n\nfeature_capture_type: SplineFeatureCaptureType, optional\n\nFeature capture options.\n\nfeature_angle: float, optional\n\nAngle to capture the feature.\n\ncorner_angle: float, optional\n\nCorner angle of the feature.\n\nshell_thickness: float, optional\n\nThickness of shell.\n\nsolid_shell: bool, optional\n\nSolid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nseparate_by_zone: bool, optional\n\nOption to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nzone_name_shell_thickness_pairs: Dict[str, Union[str, int, float, bool]], optional\n\nZone name and thickness pair list. For example, {“Zone1Name”: Zone1Thickness, “Zone2Name”: Zone2Thickness, …}.\n\ncontinuity: SplineContinuityType, optional\n\nSpline Continuity options.\n\nproject_on_geometry: bool, optional\n\nOption to project on geometry.\n\nuse_projection_scope: bool, optional\n\nOption to use projection scope.\n\nprojection_scope: ScopeDefinition, optional\n\nScope to evaluate entities for projection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCdbSimulationType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.quality_limit.html#quality_limit","title":"quality_limit","text":"quality_limit\n\n\n\nproperty SurfaceQualityResult.quality_limit: float\n\nTarget quality limit used to find failures."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSplineContinuityType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveResult.unresolved_face_intersections.html#unresolved_face_intersections","title":"unresolved_face_intersections","text":"unresolved_face_intersections\n\n\n\nproperty WrapperImproveResult.unresolved_face_intersections: int\n\nNumber of remaining self intersections."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectParams.tolerance.html#tolerance","title":"tolerance","text":"tolerance\n\n\n\nproperty IntersectParams.tolerance: float\n\nIntersection tolerance."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.QUADRATICC0.html#quadraticc0","title":"QUADRATICC0","text":"QUADRATICC0\n\n\n\nSplineContinuityType.QUADRATICC0 = 2\n\nSpline use quadratic C0 continuity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.read_size_field.html#read_size_field","title":"read_size_field","text":"read_size_field\n\n\n\nFileIO.read_size_field(file_name, params)\n\nRead a PyPrimeMesh size field (PSF and PSF.GZ) file from disk.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the size field file on disk.\n\nparams\n\nReadSizeFieldParams\n\nParameters for reading size field file.\n\nReturns\n\n:\n\n\n\nSizeFieldFileReadResults\n\nResults from reading the size field file.\n\nReturn type\n\nSizeFieldFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ReadSizeFieldParams(model=model)\n>>> results = file_io.read_size_field(\"/tmp/my_prime_sizefield.psf\", params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.hexcore.html#hexcore","title":"hexcore","text":"hexcore\n\n\n\nproperty AutoMeshParams.hexcore: HexCoreParams\n\nParameters to control hexahedral mesh generation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nScaffolderRepairMode.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityResults.edge_connectivity_result_per_part.html#edge_connectivity_result_per_part","title":"edge_connectivity_result_per_part","text":"edge_connectivity_result_per_part\n\n\n\nproperty FaceAndEdgeConnectivityResults.edge_connectivity_result_per_part: List[EdgeConnectivityResults]\n\nEdge connectivity result per part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ADDTHICKNESSRESULTSFAILED.html#addthicknessresultsfailed","title":"ADDTHICKNESSRESULTSFAILED","text":"ADDTHICKNESSRESULTSFAILED\n\n\n\nErrorCode.ADDTHICKNESSRESULTSFAILED = 380\n\nAdding thickness failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SCAFFOLDERBADINPUTNOFREEFACES.html#scaffolderbadinputnofreefaces","title":"SCAFFOLDERBADINPUTNOFREEFACES","text":"SCAFFOLDERBADINPUTNOFREEFACES\n\n\n\nErrorCode.SCAFFOLDERBADINPUTNOFREEFACES = 51\n\nIncorrect input. No free faces in input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TOPODATANOTFOUND.html#topodatanotfound","title":"TOPODATANOTFOUND","text":"TOPODATANOTFOUND\n\n\n\nErrorCode.TOPODATANOTFOUND = 301\n\nTopoData not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.GEODESIC.html#geodesic","title":"GEODESIC","text":"GEODESIC\n\n\n\nSizeFieldType.GEODESIC = 2\n\nUses geodesic size field."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.contact_element_types.html#contact_element_types","title":"contact_element_types","text":"contact_element_types\n\n\n\nproperty ExportMapdlCdbParams.contact_element_types: ContactElementTypeParams\n\nParameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MergeBoundaryNodesResults.print_default()\n\nPrint the default values of MergeBoundaryNodesResults object.\n\nExamples\n\n>>> MergeBoundaryNodesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.imag.html#imag","title":"imag","text":"imag\n\n\n\nThinStripType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_wheel_ground_dsco.html#download_wheel_ground_dsco","title":"download_wheel_ground_dsco","text":"download_wheel_ground_dsco\n\n\n\nansys.meshing.prime.examples.download_wheel_ground_dsco(destination=None, force=False)\n\nDownload the DSCO file for the wheel ground contact patch example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTSTLFAILED.html#exportstlfailed","title":"EXPORTSTLFAILED","text":"EXPORTSTLFAILED\n\n\n\nErrorCode.EXPORTSTLFAILED = 549\n\nExport STL failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ScaffolderParams.set_default(absolute_dist_tol=None, repair_mode=None, size_field_type=None, intersection_control_mask=None, edge_merge_control=None, constant_mesh_size=None, remove_holes_critical_radius=None, remove_slivers_abs_dist_tol_ratio=None, triangles_coplanar_angle_cos=None)\n\nSet the default values of the ScaffolderParams object.\n\nParameters\n\nabsolute_dist_tol: float, optional\n\nDefines the maximum gap to connect.\n\nrepair_mode: ScaffolderRepairMode, optional\n\nDefines the mode to be used during repair or connect.\n\nsize_field_type: int, optional\n\nSpecifies the type of size field used for scaffolding.\n\nintersection_control_mask: IntersectionMask, optional\n\nSpecifies the nature of intersection to be computed.\n\nedge_merge_control: int, optional\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nconstant_mesh_size: float, optional\n\nDefines the constant edge mesh size to check connection.\n\nremove_holes_critical_radius: float, optional\n\nDefines the maximum radius of holes to be removed.\n\nremove_slivers_abs_dist_tol_ratio: float, optional\n\nDefines the maximum aspect ratio to remove sliver faces.\n\ntriangles_coplanar_angle_cos: float, optional\n\nLower bound for cos angle to consider coplanar faces for scaffolding."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryResults.quality_results.html#quality_results","title":"quality_results","text":"quality_results\n\n\n\nproperty SurfaceQualitySummaryResults.quality_results: List[SurfaceQualityResult]\n\nContains surface quality result per face quality measure specified in parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatCircularFacesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DetectAndTreatCircularFacesParams.set_default(edge_mesh_constant_size=None, surface_mesh_constant_size=None, merge_edge_allow_self_close=None, merge_face_normals_angle=None)\n\nSet the default values of the DetectAndTreatCircularFacesParams object.\n\nParameters\n\nedge_mesh_constant_size: float, optional\n\nConstant size used for edge meshing.\n\nsurface_mesh_constant_size: float, optional\n\nConstant size used for surface meshing.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nmerge_face_normals_angle: float, optional\n\nMerge faces when the normal angle between the faces is below the provided value."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveResult.n_skew_found.html#n_skew_found","title":"n_skew_found","text":"n_skew_found\n\n\n\nproperty WrapperImproveResult.n_skew_found: int\n\nNumber of skewed faces found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSweepType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.BELGIAN.html#belgian","title":"BELGIAN","text":"BELGIAN\n\n\n\nCdbAnalysisType.BELGIAN = 2\n\nOption to select Belgian as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TransformResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TransformResults.set_default(error_code=None)\n\nSet the default values of the TransformResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nLSDynaAnalysisType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERLEAKINGFLUIDREGIONS.html#wrapperleakingfluidregions","title":"WRAPPERLEAKINGFLUIDREGIONS","text":"WRAPPERLEAKINGFLUIDREGIONS\n\n\n\nErrorCode.WRAPPERLEAKINGFLUIDREGIONS = 3444\n\nTwo or more fluid regions leaking into each other.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportBoundaryFittedSplineParams.html#exportboundaryfittedsplineparams","title":"ExportBoundaryFittedSplineParams","text":"ExportBoundaryFittedSplineParams\n\n\n\nclass ansys.meshing.prime.ExportBoundaryFittedSplineParams(model=None, id_offset=None, id_start=None, json_data=None, **kwargs)\n\nParameters for exporting boundary fitted splines.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportBoundaryFittedSplineParams object with default parameters.\n\nid_offset: int, optional\n\nOffset value for IGA entity ids between parts.\n\nid_start: int, optional\n\nStart ids for IGA entities.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportBoundaryFittedSplineParams object with provided parameters.\n\nExamples\n\n>>> export_boundary_fitted_spline_params = prime.ExportBoundaryFittedSplineParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoiSizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty BoiSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.create_constant_size_control.html#create_constant_size_control","title":"create_constant_size_control","text":"create_constant_size_control\n\n\n\nMesh.create_constant_size_control(control_name='size_control', size=1.0, scope=<ansys.meshing.prime.lucid.scope.SurfaceScope object>)\n\nGenerate constant size control on a scope.\n\nParameters\n\ncontrol_name\n\npython:str\n\nName of the control.\n\nsize\n\npython:float, optional\n\nConstant edge length of the mesh. The default is 1.0.\n\nscope\n\nSurfaceScope\n\nScope for creating the size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.min.html#min","title":"min","text":"min\n\n\n\nproperty ProximitySizingParams.min: float\n\nMinimum size used for computing edge and face size using proximity size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.refine_at_contacts.html#refine_at_contacts","title":"refine_at_contacts","text":"refine_at_contacts\n\n\n\nSurfaceUtilities.refine_at_contacts(part_ids, params)\n\nRefine face elements in contact with other parts.\n\nParameters\n\npart_ids\n\nIterable[python:int]\n\nInput part ids.\n\nparams\n\nRefineAtContactsParams\n\nParameters to refine at contacts.\n\nReturns\n\n:\n\n\n\nRefineAtContactsResults\n\nReturns the RefineAtContactsResults.\n\nReturn type\n\nRefineAtContactsResults\n\nExamples\n\n>>> params = prime.RefineAtContactsParams(model = model)\n>>> result = surf_utils.refine_at_contacts(part_ids, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ControlPointSelection.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCadFaceter.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ErrorCode.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.periodic_controls.html#periodic_controls","title":"periodic_controls","text":"periodic_controls\n\n\n\nproperty ControlData.periodic_controls: List[PeriodicControl]\n\nGet the periodic controls.\n\nReturns\n\nList[PeriodicControl]\n\nList of periodic controls.\n\nExamples\n\n>>> periodic_controls = model.control_data.periodic_controls"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchInfoByRegisterIdParams.print_default()\n\nPrint the default values of SearchInfoByRegisterIdParams object.\n\nExamples\n\n>>> SearchInfoByRegisterIdParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ConnectResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the ConnectResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError Code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportLSDynaKeywordFileParams.set_default(material_properties=None, database_keywords=None, output_format=None, analysis_type=None, compute_spotweld_thickness=None, write_thickness_file=None, output_controls_d3_part=None)\n\nSet the default values of the ExportLSDynaKeywordFileParams object.\n\nParameters\n\nmaterial_properties: str, optional\n\nMaterials in LS-DYNA format to be added to the file.\n\ndatabase_keywords: str, optional\n\nDatabase keywords in LS-DYNA format to be added to the file.\n\noutput_format: LSDynaFileFormatType, optional\n\nOutput file format used to write LS-DYNA file.\n\nanalysis_type: LSDynaAnalysisType, optional\n\nOption to specify LS-DYNA analysis type.\n\ncompute_spotweld_thickness: bool, optional\n\nOption to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\nwrite_thickness_file: bool, optional\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\noutput_controls_d3_part: bool, optional\n\nOption to create D3Part card in output controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PARTNOTFOUND.html#partnotfound","title":"PARTNOTFOUND","text":"PARTNOTFOUND\n\n\n\nErrorCode.PARTNOTFOUND = 300\n\nGiven part not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.prism.html#prism","title":"prism","text":"prism\n\n\n\nproperty AutoMeshParams.prism: PrismParams\n\nPrism control parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportSTLParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportSTLParams.print_default()\n\nPrint the default values of ExportSTLParams object.\n\nExamples\n\n>>> ExportSTLParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityResults.max_quality.html#max_quality","title":"max_quality","text":"max_quality\n\n\n\nproperty SearchByQualityResults.max_quality: float\n\nMaximum quality found by search."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.ignore_self_proximity.html#ignore_self_proximity","title":"ignore_self_proximity","text":"ignore_self_proximity\n\n\n\nproperty ProximitySizingParams.ignore_self_proximity: bool\n\nIgnore proximity within zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractedFeatureIds.part_id.html#part_id","title":"part_id","text":"part_id\n\n\n\nproperty ExtractedFeatureIds.part_id: int\n\nId of the part from which edge zonelets are extracted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.extract_volumes.html#extract_volumes","title":"extract_volumes","text":"extract_volumes\n\n\n\nPart.extract_volumes(face_zonelets, params)\n\nExtract volumes connected to given face zonelets.\n\nParameters\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets connected to volumes.\n\nparams\n\nExtractVolumesParams\n\nParameters to compute volumes.\n\nReturns\n\n:\n\n\n\nExtractVolumesResults\n\nReturn the ExtractVolumesResults.\n\nReturn type\n\nExtractVolumesResults\n\nExamples\n\n>>> results = part.extract_volumes(face_zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nErrorCode.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nPartCreationType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_deformed_blade_dsco.html#download_deformed_blade_dsco","title":"download_deformed_blade_dsco","text":"download_deformed_blade_dsco\n\n\n\nansys.meshing.prime.examples.download_deformed_blade_dsco(destination=None, force=False)\n\nDownload the DSCO file for the turbine blade example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSolid.degree.html#degree","title":"degree","text":"degree\n\n\n\nproperty IGAUnstructuredSplineSolid.degree: int\n\nDegree of the spline solid.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MULTIZONEMESHER_MESHTRANSFERFAILED.html#multizonemesher_meshtransferfailed","title":"MULTIZONEMESHER_MESHTRANSFERFAILED","text":"MULTIZONEMESHER_MESHTRANSFERFAILED\n\n\n\nErrorCode.MULTIZONEMESHER_MESHTRANSFERFAILED = 2604\n\nMultiZone mesh transfer failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TetParams.set_default(quadratic=None)\n\nSet the default values of the TetParams object.\n\nParameters\n\nquadratic: bool, optional\n\nOption to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.get_abaqus_simulation_data.html#get_abaqus_simulation_data","title":"get_abaqus_simulation_data","text":"get_abaqus_simulation_data\n\n\n\nFileIO.get_abaqus_simulation_data(partId)\n\nGets simulation document generated by Abaqus import for a given part.\n\nThis method will return the JSON Simulation Document for a part if the part exists. Otherwise,\nit returns an empty string.\n\nParameters\n\npartId\n\npython:int\n\nPart Id.\n\nReturns\n\n:\n\n\n\npython:str\n\nReturns the string containing a JSON document for simulation data.\n\nReturn type\n\nstr\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> import json\n>>> simdata = json.loads(file_io.get_abaqus_simulation_data(2)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSolverType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphSolveParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MorphSolveParams.set_default()\n\nSet the default values of the MorphSolveParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeadRegion.face_zonelet_ids.html#face_zonelet_ids","title":"face_zonelet_ids","text":"face_zonelet_ids\n\n\n\nproperty DeadRegion.face_zonelet_ids: Iterable[int]\n\nFace zonelets enclosing dead region.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoiSizingParams.centers.html#centers","title":"centers","text":"centers\n\n\n\nproperty SoiSizingParams.centers: Iterable[float]\n\nCenters of the spheres within which the size is limited to the specified max value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteZoneResults.html#deletezoneresults","title":"DeleteZoneResults","text":"DeleteZoneResults\n\n\n\nclass ansys.meshing.prime.DeleteZoneResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with the delete zone.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteZoneResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the delete zone operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteZoneResults object with provided parameters.\n\nExamples\n\n>>> delete_zone_results = prime.DeleteZoneResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.n_control_points_w.html#n_control_points_w","title":"n_control_points_w","text":"n_control_points_w\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_w: int\n\nNumber of control points in w direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckTopologyParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CheckTopologyParams.print_default()\n\nPrint the default values of CheckTopologyParams object.\n\nExamples\n\n>>> CheckTopologyParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.SMALLTOPOEDGES.html#smalltopoedges","title":"SMALLTOPOEDGES","text":"SMALLTOPOEDGES\n\n\n\nTopoSearchField.SMALLTOPOEDGES = 6\n\nDiagnoses topofaces with small topoedges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.tet.html#tet","title":"tet","text":"tet\n\n\n\nproperty AutoMeshParams.tet: TetParams\n\nParameters to control tetrahedral mesh generation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryParams.cell_quality_measures.html#cell_quality_measures","title":"cell_quality_measures","text":"cell_quality_measures\n\n\n\nproperty VolumeQualitySummaryParams.cell_quality_measures: List[CellQualityMeasure]\n\nList of cell quality measures for volume quality diagnostics."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod BCPairType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSeparateBlocksFormatType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.real.html#real","title":"real","text":"real\n\n\n\nLSDynaFileFormatType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesResults.volumes.html#volumes","title":"volumes","text":"volumes\n\n\n\nproperty ExtractTopoVolumesResults.volumes: Iterable[int]\n\nIds of extracted flow topovolumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.overlap_tol.html#overlap_tol","title":"overlap_tol","text":"overlap_tol\n\n\n\nproperty WrapperImproveQualityParams.overlap_tol: float\n\nRelative face count of non-manifold overlap."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_MERGETHINEXTFAILED.html#vt_mergethinextfailed","title":"VT_MERGETHINEXTFAILED","text":"VT_MERGETHINEXTFAILED\n\n\n\nErrorCode.VT_MERGETHINEXTFAILED = 3603\n\nMerge thin extensions operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldFileReadResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SizeFieldFileReadResults.print_default()\n\nPrint the default values of SizeFieldFileReadResults object.\n\nExamples\n\n>>> SizeFieldFileReadResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.html#advancedsurfersetup","title":"AdvancedSurferSetup","text":"AdvancedSurferSetup\n\n\n\nclass ansys.meshing.prime.AdvancedSurferSetup(*values)\n\nDefine advanced settings for remeshing operation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSplineContinuityType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetLeakPreventionsResults.html#setleakpreventionsresults","title":"SetLeakPreventionsResults","text":"SetLeakPreventionsResults\n\n\n\nclass ansys.meshing.prime.SetLeakPreventionsResults(model=None, error_code=None, ids=None, json_data=None, **kwargs)\n\nResults associated with set leak preventions.\n\nParameters\n\nmodel: Model\n\nModel to create a SetLeakPreventionsResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the set leak preventions.\n\nids: Iterable[int], optional\n\nIds of added leak prevention controls.\n\njson_data: dict, optional\n\nJSON dictionary to create a SetLeakPreventionsResults object with provided parameters.\n\nExamples\n\n>>> set_leak_preventions_results = prime.SetLeakPreventionsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PROJECTONCADGEOMETRYFAILED.html#projectoncadgeometryfailed","title":"PROJECTONCADGEOMETRYFAILED","text":"PROJECTONCADGEOMETRYFAILED\n\n\n\nErrorCode.PROJECTONCADGEOMETRYFAILED = 351\n\nProjection on CAD Geometry failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nShellBLOffsetType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.fill_holes_at_plane.html#fill_holes_at_plane","title":"fill_holes_at_plane","text":"fill_holes_at_plane\n\n\n\nSurfaceUtilities.fill_holes_at_plane(part_id, face_zonelets, plane_points, params)\n\nFill holes in given face zonelets at given plane.\n\nParameters\n\npart_id\n\npython:int\n\nId of part to associate face zonelets created to fill hole.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets to be used to find holes.\n\nplane_points\n\nIterable[python:float]\n\nCoordinates of three points to define plane.\n\nparams\n\nFillHolesAtPlaneParams\n\nParameters to fill holes.\n\nReturns\n\n:\n\n\n\nFillHolesAtPlaneResults\n\nReturns the FillHolesAtPlaneResults.\n\nReturn type\n\nFillHolesAtPlaneResults\n\nExamples\n\n>>> params = prime.FillHolesAtPlaneParams(model = model)\n>>> results = surface_utils.fill_holes_at_plane(part_id, face_zonelets, plane_points, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MICROSTRUCTUREINVALIDSHAPETYPE.html#microstructureinvalidshapetype","title":"MICROSTRUCTUREINVALIDSHAPETYPE","text":"MICROSTRUCTUREINVALIDSHAPETYPE\n\n\n\nErrorCode.MICROSTRUCTUREINVALIDSHAPETYPE = 13001\n\nInvalid input provided. Invalid Shape."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MATERIALPOINTWITHGIVENIDDOESNTEXIST.html#materialpointwithgiveniddoesntexist","title":"MATERIALPOINTWITHGIVENIDDOESNTEXIST","text":"MATERIALPOINTWITHGIVENIDDOESNTEXIST\n\n\n\nErrorCode.MATERIALPOINTWITHGIVENIDDOESNTEXIST = 3302\n\nMaterial point with the given ID already exists."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MergeVolumesParams.print_default()\n\nPrint the default values of MergeVolumesParams object.\n\nExamples\n\n>>> MergeVolumesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_edge_zonelets.html#n_edge_zonelets","title":"n_edge_zonelets","text":"n_edge_zonelets\n\n\n\nproperty PartSummaryResults.n_edge_zonelets: int\n\nNumber of edge zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGASpline.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic IGASpline.print_default()\n\nPrint the default values of IGASpline object.\n\nExamples\n\n>>> IGASpline.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.id.html#id","title":"id","text":"id\n\n\n\nproperty IGAUnstructuredSplineSurf.id: int\n\nId of the unstructured spline surface."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nMergeNodeType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatCircularFacesParams.edge_mesh_constant_size.html#edge_mesh_constant_size","title":"edge_mesh_constant_size","text":"edge_mesh_constant_size\n\n\n\nproperty DetectAndTreatCircularFacesParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.imag.html#imag","title":"imag","text":"imag\n\n\n\nBCPairType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposerResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty VTComposerResults.error_code: ErrorCode\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nFuseOption.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.html#cdbanalysistype","title":"CdbAnalysisType","text":"CdbAnalysisType\n\n\n\nclass ansys.meshing.prime.CdbAnalysisType(*values)\n\nProvides the MAPDL CDB analysis type.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchByThinStripParams.set_default(strip_height_limit=None, quality_limit=None, face_quality_measure=None, feature_type=None, feature_angle=None)\n\nSet the default values of the SearchByThinStripParams object.\n\nParameters\n\nstrip_height_limit: float, optional\n\nAbsolute height limit to ignore strips with height more than provided limit.\n\nquality_limit: float, optional\n\nQuality limit used for search strip of face elements.\n\nface_quality_measure: FaceQualityMeasure, optional\n\nQuality measure used for search strip of face elements.\n\nfeature_type: SurfaceFeatureType, optional\n\nUsed to identify thin strip of face elements based on the provided feature type.\n\nfeature_angle: float, optional\n\nAngle used to identify angle based features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEZONELETSFAILED.html#deletezoneletsfailed","title":"DELETEZONELETSFAILED","text":"DELETEZONELETSFAILED\n\n\n\nErrorCode.DELETEZONELETSFAILED = 3205\n\nDelete zonelets failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SubtractVolumesParams.print_default()\n\nPrint the default values of SubtractVolumesParams object.\n\nExamples\n\n>>> SubtractVolumesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.BOX.html#box","title":"BOX","text":"BOX\n\n\n\nBCsVolumetricModality.BOX = 1\n\nOption to identify nodes enclosed by bounding box as morphable nodes from the input volumetric mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.delete_interior_nodes_params.html#delete_interior_nodes_params","title":"delete_interior_nodes_params","text":"delete_interior_nodes_params\n\n\n\nproperty OptimizeQuadMeshParams.delete_interior_nodes_params: DeleteInteriorNodesParams\n\nParameters to control delete interior nodes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineTetMeshParams.niss.html#niss","title":"niss","text":"niss\n\n\n\nproperty RefineTetMeshParams.niss: int\n\nInterpolation elements in the local s-direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_toy_car_dsco.html#download_toy_car_dsco","title":"download_toy_car_dsco","text":"download_toy_car_dsco\n\n\n\nansys.meshing.prime.examples.download_toy_car_dsco(destination=None, force=False)\n\nDownload the DSCO file for the toy car example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportFluentMeshingMeshResults.print_default()\n\nPrint the default values of ImportFluentMeshingMeshResults object.\n\nExamples\n\n>>> ImportFluentMeshingMeshResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneResults.created_face_zonelets.html#created_face_zonelets","title":"created_face_zonelets","text":"created_face_zonelets\n\n\n\nproperty FillHolesAtPlaneResults.created_face_zonelets: Iterable[int]\n\nIds of face zonelets created to fill the holes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nLSDynaAnalysisType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSmoothType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.html#detectandtreatholesparams","title":"DetectAndTreatHolesParams","text":"DetectAndTreatHolesParams\n\n\n\nclass ansys.meshing.prime.DetectAndTreatHolesParams(model=None, detect_and_defeature_edges_near_holes=None, detect_circular_holes=None, detect_non_circular_holes=None, offset_holes=None, mesh_offset_faces=None, detect_holes_params=None, detect_circular_holes_params=None, detect_non_circular_holes_params=None, hole_proximity_tolerance=None, merge_face_normals_angle=None, edge_sharp_corner_angle=None, fragmented_edge_tolerance=None, offset_distance=None, edge_mesh_constant_size=None, surface_mesh_constant_size=None, json_data=None, **kwargs)\n\nParameters for detect and treat holes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DetectAndTreatHolesParams object with default parameters.\n\ndetect_and_defeature_edges_near_holes: bool, optional\n\nOption to detect and defeature edges near all holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndetect_circular_holes: bool, optional\n\nOption to detect circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndetect_non_circular_holes: bool, optional\n\nOption to detect non-circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\noffset_holes: bool, optional\n\nOption to offset holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmesh_offset_faces: bool, optional\n\nOption to mesh the offset holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndetect_holes_params: DetectHolesParams, optional\n\nParameters for detect holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndetect_circular_holes_params: DetectCircularHolesParams, optional\n\nParameters for detect circular holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndetect_non_circular_holes_params: DetectNonCircularHolesParams, optional\n\nParameters for detect non circular holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nhole_proximity_tolerance: float, optional\n\nEdge proximity tolerance for holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle: float, optional\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nedge_sharp_corner_angle: float, optional\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfragmented_edge_tolerance: float, optional\n\nFragmented edge length tolerance for merging edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\noffset_distance: float, optional\n\nOffset distance for creating offset edge.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nedge_mesh_constant_size: float, optional\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size: float, optional\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DetectAndTreatHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_holes_params = prime.DetectAndTreatHolesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileWriteResults.html#filewriteresults","title":"FileWriteResults","text":"FileWriteResults\n\n\n\nclass ansys.meshing.prime.FileWriteResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults of file write operation.\n\nParameters\n\nmodel: Model\n\nModel to create a FileWriteResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code if file write operation is unsuccessful.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the file write operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a FileWriteResults object with provided parameters.\n\nExamples\n\n>>> file_write_results = prime.FileWriteResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LeakPreventionParams.max_hole_size.html#max_hole_size","title":"max_hole_size","text":"max_hole_size\n\n\n\nproperty LeakPreventionParams.max_hole_size: float\n\nMaximum hole size to prevent leakage into region."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nVolumeFillType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.number_of_threads.html#number_of_threads","title":"number_of_threads","text":"number_of_threads\n\n\n\nproperty WrapperCloseGapsParams.number_of_threads: int\n\nNumber of threads for multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_NURBSOPFAILED.html#iga_nurbsopfailed","title":"IGA_NURBSOPFAILED","text":"IGA_NURBSOPFAILED\n\n\n\nErrorCode.IGA_NURBSOPFAILED = 2400\n\nSpline operation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.local_remesh.html#local_remesh","title":"local_remesh","text":"local_remesh\n\n\n\nproperty FuseParams.local_remesh: bool\n\nOption to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesParams.merge_node_type.html#merge_node_type","title":"merge_node_type","text":"merge_node_type\n\n\n\nproperty MergeBoundaryNodesParams.merge_node_type: MergeNodeType\n\nType of nodes to be merged."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.ELEMENTQUALITY.html#elementquality","title":"ELEMENTQUALITY","text":"ELEMENTQUALITY\n\n\n\nFaceQualityMeasure.ELEMENTQUALITY = 50\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.RECOVERPERIODICSURFACESFAILED.html#recoverperiodicsurfacesfailed","title":"RECOVERPERIODICSURFACESFAILED","text":"RECOVERPERIODICSURFACESFAILED\n\n\n\nErrorCode.RECOVERPERIODICSURFACESFAILED = 2909\n\nUnable to recover periodic surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_f1_rw_end_plates_stl.html#download_f1_rw_end_plates_stl","title":"download_f1_rw_end_plates_stl","text":"download_f1_rw_end_plates_stl\n\n\n\nansys.meshing.prime.examples.download_f1_rw_end_plates_stl(destination=None, force=False)\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_end_plates = prime_examples.download_f1_rw_end_plates_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_end_plates, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_f1_rw_end_plates_stl.html#examples-using-download_f1_rw_end_plates_stl","title":"download_f1_rw_end_plates_stl > Examples using download_f1_rw_end_plates_stl","text":"Examples using download_f1_rw_end_plates_stl\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.spline_points.html#spline_points","title":"spline_points","text":"spline_points\n\n\n\nproperty IGAUnstructuredSplineSurf.spline_points: Iterable[float]\n\nCoordinates of the spline points."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsResults.merged_zonelets.html#merged_zonelets","title":"merged_zonelets","text":"merged_zonelets\n\n\n\nproperty MergeZoneletsResults.merged_zonelets: Iterable[int]\n\nIds of zonelets to which input zonelets are merged."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsParams.retain_cutter.html#retain_cutter","title":"retain_cutter","text":"retain_cutter\n\n\n\nproperty SubtractZoneletsParams.retain_cutter: bool\n\nRetain the zonelets used for removal."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#mesh-a-generic-f1-car-rear-wing-for-external-aero-simulation","title":"Mesh a generic F1 car rear wing for external aero simulation","text":"Mesh a generic F1 car rear wing for external aero simulation\n\nSummary: This example demonstrates how to generate a mesh for a generic F1 rear wing\nSTL file model."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#objective","title":"Mesh a generic F1 car rear wing for external aero simulation > Objective","text":"Objective\n\nThe example connects various parts of a rear wing from a generic F1 car\nand volume meshes the resulting model using a poly-hexcore mesh containing prisms.\nTo simplify the process and enhance convenience, this example uses multiple\nmeshing utilities provided in the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#procedure","title":"Mesh a generic F1 car rear wing for external aero simulation > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance.\n\nInstantiate the meshing utilities from the lucid class.\n\nImport and append the STL geometry files for each part of the F1 rear wing.\n\nMerge all imported components into a single part.\n\nUse the connect operation to join the components together.\n\nDefine local size controls on aero surfaces.\n\nGenerate a surface mesh with curvature sizing.\n\nCompute volume zones and define the fluid zone type.\n\nDefine the boundary layer.\n\nGenerate a volume mesh using poly-hexcore elements and apply boundary layer refinement.\n\nPrint statistics on the generated mesh.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#launch-ansys-prime-server","title":"Mesh a generic F1 car rear wing for external aero simulation > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#import-geometry","title":"Mesh a generic F1 car rear wing for external aero simulation > Import geometry","text":"Import geometry\n\nDownload the generic F1 rear wing geometries (STL files).\nImport each geometry and append to the model.\nDisplay the imported geometry.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#merge-parts","title":"Mesh a generic F1 car rear wing for external aero simulation > Merge parts","text":"Merge parts\n\nEstablish the global size parameter to regulate mesh refinement.\nMerge all individual parts into a unified part named f1_car_rear_wing."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#mesh-connect","title":"Mesh a generic F1 car rear wing for external aero simulation > Mesh connect","text":"Mesh connect\n\nTo generate a volume mesh for a closed domain, it is necessary to ensure\nthat the components of the rear wing are properly connected.\nTo achieve this, perform a connect operation using labels to join the components of\nthe rear wing.\nAfterward, inspect the mesh to detect any edges that are not connected."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#define-local-size-control-and-generate-size-field","title":"Mesh a generic F1 car rear wing for external aero simulation > Define local size control and generate size-field","text":"Define local size control and generate size-field\n\nTo accurately represent the physics of the DRS wing, a limitation of 8 mm\nis imposed on the mesh size of the wing.\nThis is accomplished by implementing a curvature size control, which refines the\nmesh according to the curvature of the DRS surfaces.\nAdditionally, to accurately capture the curved surfaces of other sections of the\nwing, curvature control is defined with a normal angle of 18 degrees.\nThese controls are used during surface mesh generation.\nA volumetric size field is then computed based on the defined size controls.\nThe volumetric size field plays a crucial role in controlling\nthe growth and refinement of the volume mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#generate-surface-mesh","title":"Mesh a generic F1 car rear wing for external aero simulation > Generate surface mesh","text":"Generate surface mesh\n\nCreate a surface mesh for the rear wing using the defined size controls.\nTo facilitate the definition of boundary conditions on the surfaces in the solver,\ngenerate face zones by utilizing the existing labels found in the rear wing model.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#compute-volumetric-regions","title":"Mesh a generic F1 car rear wing for external aero simulation > Compute volumetric regions","text":"Compute volumetric regions\n\nCompute the volume zones."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#define-volume-controls","title":"Mesh a generic F1 car rear wing for external aero simulation > Define volume controls","text":"Define volume controls\n\nTo prevent the generation of a volume mesh within the solid wing,\nthe type of a volume zone within the rear wing can be defined as “dead.”\nTo accomplish this, Volume Control is utilized to assign the type for the\nspecific volume zone.\nExpressions are employed to define the volume zones that need to be filled, with\n* !f1_rw_enclosure indicating that it applies to all volume zones except\nfor f1_rw_enclosure."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#define-prism-controls","title":"Mesh a generic F1 car rear wing for external aero simulation > Define prism controls","text":"Define prism controls\n\nA prism control can be used to define inflation layers on the external aero surfaces.\nSpecify the aero surfaces using labels. Here prism scope is defined on zones associated\nwith labels *drs* and *plane*.\nThe growth for the prism layer is controlled by defining the offset type to\nbe uniform with a first height of 0.5mm ."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#generate-volume-mesh","title":"Mesh a generic F1 car rear wing for external aero simulation > Generate volume mesh","text":"Generate volume mesh\n\nVolume mesh with hexcore polyhedral elements and boundary layer refinement."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#print-mesh-statistics","title":"Mesh a generic F1 car rear wing for external aero simulation > Print mesh statistics","text":"Print mesh statistics\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#write-mesh","title":"Mesh a generic F1 car rear wing for external aero simulation > Write mesh","text":"Write mesh\n\nExport as CAS file for external aero simulations."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#exit-pyprimemesh","title":"Mesh a generic F1 car rear wing for external aero simulation > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (1 minutes 38.404 seconds)\n\n\n\nDownload Jupyter notebook: 08_lucid_generic_f1_rear_wing.ipynb\n\nDownload Python source code: 08_lucid_generic_f1_rear_wing.py\n\nDownload zipped: 08_lucid_generic_f1_rear_wing.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCadReaderRoute.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCadFaceter.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectParams.html#intersectparams","title":"IntersectParams","text":"IntersectParams\n\n\n\nclass ansys.meshing.prime.IntersectParams(model=None, tolerance=None, use_absolute_tolerance=None, remesh=None, collapse_feature_angle=None, collapse_target_skewness=None, json_data=None, **kwargs)\n\nParameters used for intersection.\n\nParameters\n\nmodel: Model\n\nModel to create a IntersectParams object with default parameters.\n\ntolerance: float, optional\n\nIntersection tolerance.\n\nuse_absolute_tolerance: bool, optional\n\nTrue if tolerance provided is absolute value.\n\nremesh: bool, optional\n\nLocal remesh at the intersection.\n\ncollapse_feature_angle: float, optional\n\nAngle to preserve features while performing collapse in improve operation.\n\ncollapse_target_skewness: float, optional\n\nPerform collapse on faces with skewness above the provided target skewness.\n\njson_data: dict, optional\n\nJSON dictionary to create a IntersectParams object with provided parameters.\n\nExamples\n\n>>> intersect_params = prime.IntersectParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.html#prismcontrolgrowthparams","title":"PrismControlGrowthParams","text":"PrismControlGrowthParams\n\n\n\nclass ansys.meshing.prime.PrismControlGrowthParams(model=None, offset_type=None, n_layers=None, growth_rate=None, first_height=None, first_aspect_ratio=None, last_aspect_ratio=None, min_aspect_ratio=None, json_data=None, **kwargs)\n\nGrowth parameters for prism control.\n\nParameters\n\nmodel: Model\n\nModel to create a PrismControlGrowthParams object with default parameters.\n\noffset_type: PrismControlOffsetType, optional\n\nOffset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height.\n\nn_layers: int, optional\n\nNumber of prism layers to be generated. It is used for all prism control offset types.\n\ngrowth_rate: float, optional\n\nGrowth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\nfirst_height: float, optional\n\nHeight to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\nfirst_aspect_ratio: float, optional\n\nAspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\nlast_aspect_ratio: float, optional\n\nApsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\nmin_aspect_ratio: float, optional\n\nMinimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types.\n\njson_data: dict, optional\n\nJSON dictionary to create a PrismControlGrowthParams object with provided parameters.\n\nExamples\n\n>>> prism_control_growth_params = prime.PrismControlGrowthParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.html#examples-using-prismcontrolgrowthparams","title":"PrismControlGrowthParams > Examples using PrismControlGrowthParams","text":"Examples using PrismControlGrowthParams\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_curvature_sizing_params.html#set_curvature_sizing_params","title":"set_curvature_sizing_params","text":"set_curvature_sizing_params\n\n\n\nSizeControl.set_curvature_sizing_params(params)\n\nSet the curvature sizing parameters to compute volumetric size field.\n\nParameters\n\nparams\n\nCurvatureSizingParams\n\nParameters that enables you to set the normal angle as the maximum allowable angle at which one element edge may span.\n\nReturns\n\n:\n\n\n\nSetSizingResults\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_curvature_sizing_params(\n>>>                  prime.CurvatureSizingParams(model=model,\n>>>                  min = 0.1, max = 1.0, growth_rate = 1.2,\n>>>                  normal_angle = 18))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_curvature_sizing_params.html#examples-using-sizecontrolset_curvature_sizing_params","title":"set_curvature_sizing_params > Examples using SizeControl.set_curvature_sizing_params","text":"Examples using SizeControl.set_curvature_sizing_params\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic AutoMeshResults.set_default(error_code=None, warning_codes=None, error_locations=None)\n\nSet the default values of the AutoMeshResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nProvides error message when automesh fails.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\nerror_locations: Iterable[float], optional\n\nError location coordinates returned when automesh fails."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.AUTOQUADMESHER_INVALIDMINMAXSIZES.html#autoquadmesher_invalidminmaxsizes","title":"AUTOQUADMESHER_INVALIDMINMAXSIZES","text":"AUTOQUADMESHER_INVALIDMINMAXSIZES\n\n\n\nErrorCode.AUTOQUADMESHER_INVALIDMINMAXSIZES = 15001\n\nDifference in maximum value and minimum value is negative.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.export_stl.html#export_stl","title":"export_stl","text":"export_stl\n\n\n\nFileIO.export_stl(file_name, params)\n\nExport an STL file.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the STL file on disk.\n\nparams\n\nExportSTLParams\n\nParameters for exporting the STL file.\n\nReturns\n\n:\n\n\n\nFileWriteResults\n\nResults from exporting the STL file.\n\nReturn type\n\nFileWriteResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> model = prime.launch_prime().model\n>>> fileio = prime.FileIO(model=model)\n>>> out_file_path = r\"/tmp/output.stl\"\n>>> part_ids = [part.id for part in model.parts]\n>>> export_stl_params=prime.ExportSTLParams(model=model,part_ids=part_ids)\n>>> results = fileio.export_stl(out_file_path,export_stl_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointResults.html#creatematerialpointresults","title":"CreateMaterialPointResults","text":"CreateMaterialPointResults\n\n\n\nclass ansys.meshing.prime.CreateMaterialPointResults(model=None, id=None, assigned_name=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults structure associated with create material point operation.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateMaterialPointResults object with default parameters.\n\nid: int, optional\n\nId of the material point created.\n\nassigned_name: str, optional\n\nAssigned name of the material point created.\n\nerror_code: ErrorCode, optional\n\nError code associated with create material point operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with create material point operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateMaterialPointResults object with provided parameters.\n\nExamples\n\n>>> create_material_point_results = prime.CreateMaterialPointResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.SELFINTERSECTINGTOPOFACES.html#selfintersectingtopofaces","title":"SELFINTERSECTINGTOPOFACES","text":"SELFINTERSECTINGTOPOFACES\n\n\n\nTopoSearchField.SELFINTERSECTINGTOPOFACES = 2\n\nDiagnoses topofaces with self intersecting bounding edges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LeakPreventionParams.n_expansion_layers.html#n_expansion_layers","title":"n_expansion_layers","text":"n_expansion_layers\n\n\n\nproperty LeakPreventionParams.n_expansion_layers: int\n\nNumber of layers to expand leaking region."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenParams.html#componentchildrenparams","title":"ComponentChildrenParams","text":"ComponentChildrenParams\n\n\n\nclass ansys.meshing.prime.ComponentChildrenParams(model=None, json_data=None, **kwargs)\n\nParameters associated with querying child components.\n\nParameters\n\nmodel: Model\n\nModel to create a ComponentChildrenParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a ComponentChildrenParams object with provided parameters.\n\nExamples\n\n>>> component_children_params = prime.ComponentChildrenParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshToolResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty VolumeMeshToolResults.error_code: ErrorCode\n\nError code associated with the volume mesh tool operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismParams.no_imprint_zonelets.html#no_imprint_zonelets","title":"no_imprint_zonelets","text":"no_imprint_zonelets\n\n\n\nproperty PrismParams.no_imprint_zonelets: Iterable[int]\n\nOption to specify zonelets to skip prism imprint."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Client.exit.html#exit","title":"exit","text":"exit\n\n\n\nClient.exit()\n\nClose the connection with the server.\n\nIf the client has launched the server, this method also\nkills the server process.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> prime_client = prime.launch_prime() # This launches a server process.\n>>> model = prime_client.model\n>>> fileio = prime.FileIO(model)\n>>> result = fileio.read_pmdat('example.pmdat', prime.FileReadParams(model=model))\n>>> print(result)\n>>> prime_client.exit() # Sever connection with server and kill the server."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Client.exit.html#examples-using-clientexit","title":"exit > Examples using Client.exit","text":"Examples using Client.exit\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateCapResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateCapResults.set_default(error_code=None, created_face_zonelets=None)\n\nSet the default values of the CreateCapResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\ncreated_face_zonelets: Iterable[int], optional\n\nIds of cap face zonelets created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.ZONEBOUNDARY.html#zoneboundary","title":"ZONEBOUNDARY","text":"ZONEBOUNDARY\n\n\n\nSurfaceFeatureType.ZONEBOUNDARY = 1\n\nFace edges at zone boundary are considered as feature."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nMergeNodeType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesParams.check_cutters.html#check_cutters","title":"check_cutters","text":"check_cutters\n\n\n\nproperty SubtractVolumesParams.check_cutters: bool\n\nOption to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.constant_size.html#constant_size","title":"constant_size","text":"constant_size\n\n\n\nproperty SurferParams.constant_size: float\n\nSize used in constant size surface meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.length_unit.html#length_unit","title":"length_unit","text":"length_unit\n\n\n\nproperty ImportCadParams.length_unit: LengthUnit\n\nSpecify length unit for import."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.EXTERNAL.html#external","title":"EXTERNAL","text":"EXTERNAL\n\n\n\nWrapRegion.EXTERNAL = 1\n\nOption to extract exterior wrapper region."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshedSizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MeshedSizingParams.set_default(growth_rate=None)\n\nSet the default values of the MeshedSizingParams object.\n\nParameters\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.set_map_mesh_params.html#set_map_mesh_params","title":"set_map_mesh_params","text":"set_map_mesh_params\n\n\n\nMultiZoneControl.set_map_mesh_params(scope_info)\n\nSet the parameters for map meshing in terms of topofaces during MultiZone mesh.\n\nParameters\n\nscope_info\n\nMultiZoneMapMeshParams\n\nScoped topofaces to be map meshed.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_map_mesh_params(scope_info)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetNameResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SetNameResults.set_default(warning_code=None, assigned_name=None, error_code=None)\n\nSet the default values of the SetNameResults object.\n\nParameters\n\nwarning_code: WarningCode, optional\n\nWarning code associated with the set name of given entity.\n\nassigned_name: str, optional\n\nAssigned name of given entity.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#morph-a-hexahedral-mesh-of-a-turbine-blade-to-a-new-shape","title":"Morph a hexahedral mesh of a turbine blade to a new shape","text":"Morph a hexahedral mesh of a turbine blade to a new shape\n\nSummary: This example demonstrates how to morph a structural\nhexahedral mesh of a turbine blade to a new deformed shape\ndefined by a target geometry file."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#objective","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Objective","text":"Objective\n\nThis example appends a CDB mesh with a CAD geometry\nand match morphs the mesh to the geometry."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#procedure","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance and connect the PyPrimeMesh client.\n\nRead the mesh and append the new CAD geometry shape.\n\nDefine the mesh source faces and the target geometry faces to match morph.\n\nMatch morph the turbine blade mesh to the new CAD geometry shape.\n\nWrite the mesh for structural analysis."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#launch-ansys-prime-server","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch the Ansys Prime Server instance and connect the client.\nGet the client model and instantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#read-files","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Read files","text":"Read files\n\nDownload the turbine blade mesh file and CAD geometry.\nRead the mesh and append the geometry.\nDisplay the source and the target.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#define-source-and-target-faces","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Define source and target faces","text":"Define source and target faces"},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#match-morph-mesh","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Match morph mesh","text":"Match morph mesh\n\nSet the target type to be for topoface because the target is geometry.\nMorph the source face zonelets of source_part to the\ntarget topofaces of the geometry.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#write-mesh","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Write mesh","text":"Write mesh\n\nWrite the morphed CDB file. The geometry is ignored when exporting to a CDB\nfile."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#exit-pyprimemesh","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (1 minutes 6.645 seconds)\n\n\n\nDownload Jupyter notebook: 06_blade_morph.ipynb\n\nDownload Python source code: 06_blade_morph.py\n\nDownload zipped: 06_blade_morph.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.disable_optimizing_numpy_arrays.html#disable_optimizing_numpy_arrays","title":"disable_optimizing_numpy_arrays","text":"disable_optimizing_numpy_arrays\n\n\n\nansys.meshing.prime.disable_optimizing_numpy_arrays()\n\nDisable optimizing numpy arrays over the wire.\n\nThis method disables serialization optimization for numpy arrays when\nsending them over the wire. Typically, this is needed in case the\nperformance is limited by a saturated network. Disabling this flag\ncan provide some benefit for data transferred over the wire for\nmost arrays. The default for optimization is always True."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SETNAMEFAILED.html#setnamefailed","title":"SETNAMEFAILED","text":"SETNAMEFAILED\n\n\n\nErrorCode.SETNAMEFAILED = 1303\n\nSet name failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.real.html#real","title":"real","text":"real\n\n\n\nCdbSimulationType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nControlPointSelection.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.real.html#real","title":"real","text":"real\n\n\n\nLengthUnit.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationResults.maximum_deviation.html#maximum_deviation","title":"maximum_deviation","text":"maximum_deviation\n\n\n\nproperty CheckFaceDeviationResults.maximum_deviation: float\n\nMaximum deviation found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nEdgeConnectType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SHELLBLCONTROLFAILED.html#shellblcontrolfailed","title":"SHELLBLCONTROLFAILED","text":"SHELLBLCONTROLFAILED\n\n\n\nErrorCode.SHELLBLCONTROLFAILED = 566\n\nWrite ShellBL control failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.html#trimmedsolidsplinecutmode","title":"TrimmedSolidSplineCutMode","text":"TrimmedSolidSplineCutMode\n\n\n\nclass ansys.meshing.prime.TrimmedSolidSplineCutMode(*values)\n\nTypes of Cut modes used to generate Cartesian grid representing subdomains of trimmed solid spline.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneMeshResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ZoneMeshResult.print_default()\n\nPrint the default values of ZoneMeshResult object.\n\nExamples\n\n>>> ZoneMeshResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.max_size.html#max_size","title":"max_size","text":"max_size\n\n\n\nproperty AutoMeshParams.max_size: float\n\nMaximum cell size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshedSizingParams.html#meshedsizingparams","title":"MeshedSizingParams","text":"MeshedSizingParams\n\n\n\nclass ansys.meshing.prime.MeshedSizingParams(model=None, growth_rate=None, json_data=None, **kwargs)\n\nSize field computed using meshed size control enables you to set the size based on existing sizes.\n\nParameters\n\nmodel: Model\n\nModel to create a MeshedSizingParams object with default parameters.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\njson_data: dict, optional\n\nJSON dictionary to create a MeshedSizingParams object with provided parameters.\n\nExamples\n\n>>> meshed_sizing_params = prime.MeshedSizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.check_mesh.html#check_mesh","title":"check_mesh","text":"check_mesh\n\n\n\nVolumeMeshTool.check_mesh(part_id, params)\n\nChecks mesh of a part.\n\nParameters\n\npart_id\n\npython:int\n\nId of a part.\n\nparams\n\nCheckMeshParams\n\nParameters to check mesh.\n\nReturns\n\n:\n\n\n\nCheckMeshResults\n\nReturns the CheckMeshResults.\n\nReturn type\n\nCheckMeshResults\n\nExamples\n\n>>> results = volume_mesh_tool.check_mesh(part_id,\n>>>                                prime.CheckMeshParams(model =model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.check_mesh.html#examples-using-volumemeshtoolcheck_mesh","title":"check_mesh > Examples using VolumeMeshTool.check_mesh","text":"Examples using VolumeMeshTool.check_mesh\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INCREMENTALVOLUMEMESHINGNOTSUPPORTED.html#incrementalvolumemeshingnotsupported","title":"INCREMENTALVOLUMEMESHINGNOTSUPPORTED","text":"INCREMENTALVOLUMEMESHINGNOTSUPPORTED\n\n\n\nErrorCode.INCREMENTALVOLUMEMESHINGNOTSUPPORTED = 143\n\nIncremental volume meshing is not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.imag.html#imag","title":"imag","text":"imag\n\n\n\nCreateVolumeZonesType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsResults.size_field_id.html#size_field_id","title":"size_field_id","text":"size_field_id\n\n\n\nproperty RefineAtContactsResults.size_field_id: int\n\nId of size field created to refine at contacts."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.id.html#id","title":"id","text":"id\n\n\n\nproperty WrapperControl.id\n\nGet the id of WrapperControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_FILLANNULARHOLEFAILED.html#vt_fillannularholefailed","title":"VT_FILLANNULARHOLEFAILED","text":"VT_FILLANNULARHOLEFAILED\n\n\n\nErrorCode.VT_FILLANNULARHOLEFAILED = 3607\n\nFill annular hole operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.EDGEZONELETS.html#edgezonelets","title":"EDGEZONELETS","text":"EDGEZONELETS\n\n\n\nScopeEntity.EDGEZONELETS = 2\n\nEvaluate scope to get the edge zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Surfer.create_shell_bl_using_controls.html#create_shell_bl_using_controls","title":"create_shell_bl_using_controls","text":"create_shell_bl_using_controls\n\n\n\nSurfer.create_shell_bl_using_controls(part_id, shell_bl_control_ids, shell_bl_params)\n\nCreate ShellBL using data stored in controls.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nshell_bl_control_ids\n\nIterable[python:int]\n\nIds of ShellBL control.\n\nshell_bl_params\n\nShellBLParams\n\nParameters related to ShellBL.\n\nReturns\n\n:\n\n\n\nCreateShellBLResults\n\nReturns the CreateShellBLResults.\n\nReturn type\n\nCreateShellBLResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = surfer.create_shell_bl_using_controls(part_id,\n                                                    shell_bl_control_ids,\n                                                    shell_bl_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSizeFieldType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic IGAUnstructuredSplineSurf.set_default(id=None, degree=None, spline_refinement_level=None, control_points=None, spline_points=None, bad_spline_points_indices=None, deviation_array=None, invalid_jacobian_elements_count=None, average_mesh_size=None, elements_count=None, shell_thickness=None)\n\nSet the default values of the IGAUnstructuredSplineSurf object.\n\nParameters\n\nid: int, optional\n\nId of the unstructured spline surface.\n\ndegree: int, optional\n\nDegree of the spline surface.\n\nspline_refinement_level: int, optional\n\nRefinement level for rendering of spline points.\n\ncontrol_points: Iterable[float], optional\n\nCoordinates of the control points of the spline.\n\nspline_points: Iterable[float], optional\n\nCoordinates of the spline points.\n\nbad_spline_points_indices: Iterable[int], optional\n\nNode indices in the spline points list which has negative jacobian value.\n\ndeviation_array: Iterable[float], optional\n\nDeviation value from the spline point to the model geometry.\n\ninvalid_jacobian_elements_count: int, optional\n\nCount of elements with negative jacobian.\n\naverage_mesh_size: float, optional\n\nReference length to compute deviation.\n\nelements_count: int, optional\n\nCount of shell elements.\n\nshell_thickness: float, optional\n\nThickness of shell."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.connect_faces.html#connect_faces","title":"connect_faces","text":"connect_faces\n\n\n\nproperty RepairTopologyParams.connect_faces: bool\n\nOption to connect faces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceMeshSizeScaling.size_range_max.html#size_range_max","title":"size_range_max","text":"size_range_max\n\n\n\nproperty SurfaceMeshSizeScaling.size_range_max: float\n\nMaximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.sharp_angle.html#sharp_angle","title":"sharp_angle","text":"sharp_angle\n\n\n\nproperty WrapperImproveQualityParams.sharp_angle: float\n\nMaximum off feature sharp node angle."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CheckFaceDeviationResults.print_default()\n\nPrint the default values of CheckFaceDeviationResults object.\n\nExamples\n\n>>> CheckFaceDeviationResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.surface_mesh_constant_size.html#surface_mesh_constant_size","title":"surface_mesh_constant_size","text":"surface_mesh_constant_size\n\n\n\nproperty DetectAndTreatHolesParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDSCOPEENTITYTYPEINPUT.html#invalidscopeentitytypeinput","title":"INVALIDSCOPEENTITYTYPEINPUT","text":"INVALIDSCOPEENTITYTYPEINPUT\n\n\n\nErrorCode.INVALIDSCOPEENTITYTYPEINPUT = 1505\n\nInvalid input scope entity type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExtractFeatureResults.print_default()\n\nPrint the default values of ExtractFeatureResults object.\n\nExamples\n\n>>> ExtractFeatureResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SmoothDihedralFaceNodesResults.set_default(n_nodes_smoothed=None, error_code=None)\n\nSet the default values of the SmoothDihedralFaceNodesResults object.\n\nParameters\n\nn_nodes_smoothed: int, optional\n\nNumber of dihedral face nodes smoothed.\n\nerror_code: ErrorCode, optional\n\nError Code associated with creating offset surface."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.compute_duplicate_faces.html#compute_duplicate_faces","title":"compute_duplicate_faces","text":"compute_duplicate_faces\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_duplicate_faces: bool\n\nControl to identify duplicate faces are present or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.LARGESTINTERNAL.html#largestinternal","title":"LARGESTINTERNAL","text":"LARGESTINTERNAL\n\n\n\nWrapRegion.LARGESTINTERNAL = 2\n\nOption to extract largest internal wrapper region."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.part_expression.html#part_expression","title":"part_expression","text":"part_expression\n\n\n\nproperty ScopeDefinition.part_expression: str\n\nPart expression to scope parts while evaluating scope."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SearchInfoByRegisterIdResults.error_code: ErrorCode\n\nError code associated with the retreiving information based on register id."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WriteSizeFieldParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WriteSizeFieldParams.print_default()\n\nPrint the default values of WriteSizeFieldParams object.\n\nExamples\n\n>>> WriteSizeFieldParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusResults.html#importabaqusresults","title":"ImportAbaqusResults","text":"ImportAbaqusResults\n\n\n\nclass ansys.meshing.prime.ImportAbaqusResults(model=None, summary_log=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults of Abaqus import operation.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportAbaqusResults object with default parameters.\n\nsummary_log: str, optional\n\nSummary log for the import operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with Abaqus import operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportAbaqusResults object with provided parameters.\n\nExamples\n\n>>> import_abaqus_results = prime.ImportAbaqusResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityParams.quality_limit.html#quality_limit","title":"quality_limit","text":"quality_limit\n\n\n\nproperty SearchByQualityParams.quality_limit: float\n\nQuality limit used for search face elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SCAFFOLDERINVALIDCONSTANTMESHSIZE.html#scaffolderinvalidconstantmeshsize","title":"SCAFFOLDERINVALIDCONSTANTMESHSIZE","text":"SCAFFOLDERINVALIDCONSTANTMESHSIZE\n\n\n\nErrorCode.SCAFFOLDERINVALIDCONSTANTMESHSIZE = 54\n\nInvalid constant mesh size input for scaffold operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VOLUMEMESH_MIDNODESNOTSUPPORTED.html#volumemesh_midnodesnotsupported","title":"VOLUMEMESH_MIDNODESNOTSUPPORTED","text":"VOLUMEMESH_MIDNODESNOTSUPPORTED\n\n\n\nErrorCode.VOLUMEMESH_MIDNODESNOTSUPPORTED = 1800\n\nMid side nodes are not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.plot_iter.html#plot_iter","title":"plot_iter","text":"plot_iter\n\n\n\nPrimePlotter.plot_iter(plotting_list, name_filter=None, update=False, **plotting_options)\n\nAdd a list of any type of object to the scene.\n\nAllowed types are PyPrime models or any PyVista plottable object.\n\nParameters\n\nplotting_list\n\nList[Any]\n\nList of objects to plot.\n\nname_filter\n\npython:str, default: python:None\n\nRegular expression with the desired name or names to include in the plotter.\n\nupdate: bool, default: False\n\nWhether to update the display.\n\n**plotting_options\n\npython:dict, default: python:None\n\nKeyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects.\n\nReturn type\n\nNone"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.real.html#real","title":"real","text":"real\n\n\n\nHexCoreTransitionLayerType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ShellBLParams.set_default()\n\nSet the default values of the ShellBLParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.QUADRATICMESHSUPPORTEDONLYFORTETS.html#quadraticmeshsupportedonlyfortets","title":"QUADRATICMESHSUPPORTEDONLYFORTETS","text":"QUADRATICMESHSUPPORTEDONLYFORTETS\n\n\n\nErrorCode.QUADRATICMESHSUPPORTEDONLYFORTETS = 113\n\nQuadratic elements can only be generated for tetrahedral elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic BoundaryFittedSplineParams.print_default()\n\nPrint the default values of BoundaryFittedSplineParams object.\n\nExamples\n\n>>> BoundaryFittedSplineParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.html#warningcode","title":"WarningCode","text":"WarningCode\n\n\n\nclass ansys.meshing.prime.WarningCode(*values)\n\nWarning codes associated with the PyPrimeMesh operation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nThinStripType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesResults.face_zonelets_without_volumes.html#face_zonelets_without_volumes","title":"face_zonelets_without_volumes","text":"face_zonelets_without_volumes\n\n\n\nproperty ExtractVolumesResults.face_zonelets_without_volumes: Iterable[int]\n\nIds of face zonelets for which volumes were not extracted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TetParams.print_default()\n\nPrint the default values of TetParams object.\n\nExamples\n\n>>> TetParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_faces_of_topo_volumes.html#get_topo_faces_of_topo_volumes","title":"get_topo_faces_of_topo_volumes","text":"get_topo_faces_of_topo_volumes\n\n\n\nPart.get_topo_faces_of_topo_volumes(volumes)\n\nGets the topofaces of given topovolumes.\n\nParameters\n\nvolumes\n\nIterable[python:int]\n\nIds of topovolumes.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_topo_volumes(volumes)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.output_controls_d3_part.html#output_controls_d3_part","title":"output_controls_d3_part","text":"output_controls_d3_part\n\n\n\nproperty ExportLSDynaKeywordFileParams.output_controls_d3_part: bool\n\nOption to create D3Part card in output controls.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.delete_controls.html#delete_controls","title":"delete_controls","text":"delete_controls\n\n\n\nControlData.delete_controls(control_ids)\n\nDelete the control for one or more IDs.\n\nParameters\n\ncontrol_ids\n\nIterable[python:int]\n\nList of control IDs.\n\nReturns\n\n:\n\n\n\nDeleteResults\n\nDelete results.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = model.control_data.delete_controls([size_control.id, volume_control.id])"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectHolesParams.min_radius_circular_holes.html#min_radius_circular_holes","title":"min_radius_circular_holes","text":"min_radius_circular_holes\n\n\n\nproperty DetectHolesParams.min_radius_circular_holes: float\n\nMinimum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ComputeTopoVolumesResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeParams.html#volumetricsizefieldcomputeparams","title":"VolumetricSizeFieldComputeParams","text":"VolumetricSizeFieldComputeParams\n\n\n\nclass ansys.meshing.prime.VolumetricSizeFieldComputeParams(model=None, enable_multi_threading=None, enable_periodicity=None, periodic_params=None, growth_rate_lower_bound=None, json_data=None, **kwargs)\n\nParameters associated with the compute volumetric size field operation.\n\nParameters\n\nmodel: Model\n\nModel to create a VolumetricSizeFieldComputeParams object with default parameters.\n\nenable_multi_threading: bool, optional\n\nOption to compute volumetric size field in parallel using multithreads.\n\nenable_periodicity: bool, optional\n\nOption to enable periodic size field computations.\n\nperiodic_params: SFPeriodicParams, optional\n\nPeriodic parameters to compute the size field.\n\ngrowth_rate_lower_bound: float, optional\n\nLower bound for growth rate.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a VolumetricSizeFieldComputeParams object with provided parameters.\n\nExamples\n\n>>> volumetric_size_field_compute_params = prime.VolumetricSizeFieldComputeParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeParams.html#examples-using-volumetricsizefieldcomputeparams","title":"VolumetricSizeFieldComputeParams > Examples using VolumetricSizeFieldComputeParams","text":"Examples using VolumetricSizeFieldComputeParams\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty CreateMaterialPointResults.warning_codes: List[WarningCode]\n\nWarning codes associated with create material point operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportMapdlCdbResults.print_default()\n\nPrint the default values of ExportMapdlCdbResults object.\n\nExamples\n\n>>> ExportMapdlCdbResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.CURVATUREBASED.html#curvaturebased","title":"CURVATUREBASED","text":"CURVATUREBASED\n\n\n\nShellBLOffsetType.CURVATUREBASED = 4\n\nOption to set ShellBL offset type as CurvatureBased.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.imag.html#imag","title":"imag","text":"imag\n\n\n\nBodyQueryType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsResults.html#createintersectionedgeloopsresults","title":"CreateIntersectionEdgeLoopsResults","text":"CreateIntersectionEdgeLoopsResults\n\n\n\nclass ansys.meshing.prime.CreateIntersectionEdgeLoopsResults(model=None, processing_time=None, error_code=None, extracted_ids=None, json_data=None, **kwargs)\n\nResults for the edge loops created by intersection of two groups of face zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateIntersectionEdgeLoopsResults object with default parameters.\n\nprocessing_time: float, optional\n\nTime taken to extract edges formed by intersecting faces.\n\nerror_code: ErrorCode, optional\n\nError code returned by edge extraction function.\n\nextracted_ids: List[ExtractedFeatureIds], optional\n\nList of ExtractedFeatureIds that contains ids of extracted edges.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateIntersectionEdgeLoopsResults object with provided parameters.\n\nExamples\n\n>>> create_intersection_edge_loops_results = prime.CreateIntersectionEdgeLoopsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteTopoEntitiesResults.print_default()\n\nPrint the default values of DeleteTopoEntitiesResults object.\n\nExamples\n\n>>> DeleteTopoEntitiesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.html#surferparams","title":"SurferParams","text":"SurferParams\n\n\n\nclass ansys.meshing.prime.SurferParams(model=None, max_angle=None, size_field_type=None, min_size=None, max_size=None, growth_rate=None, constant_size=None, generate_quads=None, check_non_manifolds=None, avoid_corner_triangles=None, smooth_size_transition=None, advanced_surfer_setup=None, project_on_geometry=None, enable_multi_threading=None, json_data=None, **kwargs)\n\nParameters used to generate surface mesh.\n\nParameters\n\nmodel: Model\n\nModel to create a SurferParams object with default parameters.\n\nmax_angle: float, optional\n\nMaximum feature angle limit to be used to identify and preserve features.\n\nsize_field_type: SizeFieldType, optional\n\nSize field type used to generate surface mesh.\n\nmin_size: float, optional\n\nMinimum size to be used in sizing for the surfer.\n\nmax_size: float, optional\n\nMaximum size to be used in sizing for the surfer.\n\ngrowth_rate: float, optional\n\nGrowth rate to be used to propagate sizes.\n\nconstant_size: float, optional\n\nSize used in constant size surface meshing.\n\ngenerate_quads: bool, optional\n\nOption to generate quadrilateral surface mesh.\n\ncheck_non_manifolds: bool, optional\n\nOption to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\navoid_corner_triangles: bool, optional\n\nOption to avoid corner triangles(with all three boundary nodes) generated.\n\nsmooth_size_transition: bool, optional\n\nOption to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nadvanced_surfer_setup: AdvancedSurferSetup, optional\n\nOption to define advanced settings for remeshing operation.\n\nproject_on_geometry: bool, optional\n\nOption to project on CAD geometry when meshing.\n\nenable_multi_threading: bool, optional\n\nOption to perform surface meshing in parallel using multithreads.\n\njson_data: dict, optional\n\nJSON dictionary to create a SurferParams object with provided parameters.\n\nExamples\n\n>>> surfer_params = prime.SurferParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.html#examples-using-surferparams","title":"SurferParams > Examples using SurferParams","text":"Examples using SurferParams\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDPROXIMITYSIZINGINPUT.html#invalidproximitysizinginput","title":"INVALIDPROXIMITYSIZINGINPUT","text":"INVALIDPROXIMITYSIZINGINPUT\n\n\n\nErrorCode.INVALIDPROXIMITYSIZINGINPUT = 1504\n\nInvalid proximity sizing input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoiSizingParams.max.html#max","title":"max","text":"max\n\n\n\nproperty BoiSizingParams.max: float\n\nMaximum size used for computing edge and face size using boi size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.IGA_NOGEOMZONELETFORSPLINEFITTING.html#iga_nogeomzoneletforsplinefitting","title":"IGA_NOGEOMZONELETFORSPLINEFITTING","text":"IGA_NOGEOMZONELETFORSPLINEFITTING\n\n\n\nWarningCode.IGA_NOGEOMZONELETFORSPLINEFITTING = 5001\n\nInvalid input for IGA."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.ALIGN_OPERATIONINTERRUPTED.html#align_operationinterrupted","title":"ALIGN_OPERATIONINTERRUPTED","text":"ALIGN_OPERATIONINTERRUPTED\n\n\n\nWarningCode.ALIGN_OPERATIONINTERRUPTED = 1900\n\nAlign operation interrupted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoUtilities.html#topoutilities","title":"TopoUtilities","text":"TopoUtilities\n\n\n\nclass ansys.meshing.prime.TopoUtilities(model, part_id)\n\nPerforms various general topology utility algorithms. For example, fill hole.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create TopoUtilities object.\n\npart_id\n\npython:int\n\nId of the part.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlSummaryResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PeriodicControlSummaryResult.set_default(message=None)\n\nSet the default values of the PeriodicControlSummaryResult object.\n\nParameters\n\nmessage: str, optional\n\nString with the periodic control summary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nScaffolderRepairMode.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.real.html#real","title":"real","text":"real\n\n\n\nCadRefacetingMaxEdgeSizeLimit.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Surfer.mesh_topo_faces.html#mesh_topo_faces","title":"mesh_topo_faces","text":"mesh_topo_faces\n\n\n\nSurfer.mesh_topo_faces(part_id, topo_faces, params)\n\nPerform meshing on TopoFaces with given parameters.\n\nParameters\n\npart_id\n\npython:int\n\nID of part.\n\ntopo_faces\n\nIterable[python:int]\n\nIDs of the TopoFaces.\n\nparams\n\nSurferParams\n\nSurfer parameters.\n\nReturns\n\n:\n\n\n\nSurferResults\n\nResults from performing meshing on the TopoFaces.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = prime.SurferParams(model)\n>>> results = surfer.mesh_topo_faces(part_id, topo_faces, surfer_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDESURFACESCOPEENTITY.html#overridesurfacescopeentity","title":"OVERRIDESURFACESCOPEENTITY","text":"OVERRIDESURFACESCOPEENTITY\n\n\n\nWarningCode.OVERRIDESURFACESCOPEENTITY = 401\n\nOverride surface scope entity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchBySpikeResults.print_default()\n\nPrint the default values of SearchBySpikeResults object.\n\nExamples\n\n>>> SearchBySpikeResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.READKEYWORDFILEFAILED.html#readkeywordfilefailed","title":"READKEYWORDFILEFAILED","text":"READKEYWORDFILEFAILED\n\n\n\nErrorCode.READKEYWORDFILEFAILED = 517\n\nReading LS-Dyna Keyword file failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByInvalidNormalsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SearchByInvalidNormalsResults.error_code: ErrorCode\n\nError code associated with search invalid normals operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDEHARDSIZINGPARAMS.html#overridehardsizingparams","title":"OVERRIDEHARDSIZINGPARAMS","text":"OVERRIDEHARDSIZINGPARAMS\n\n\n\nWarningCode.OVERRIDEHARDSIZINGPARAMS = 203\n\nOverriding hard sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ResolveIntersectionResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ResolveIntersectionResult.print_default()\n\nPrint the default values of ResolveIntersectionResult object.\n\nExamples\n\n>>> ResolveIntersectionResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nBodyQueryType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SHELLBLFEWLAYERS.html#shellblfewlayers","title":"SHELLBLFEWLAYERS","text":"SHELLBLFEWLAYERS\n\n\n\nErrorCode.SHELLBLFEWLAYERS = 63\n\nOnly few ShellBL layers are created.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty RefineAtContactsResults.error_code: ErrorCode\n\nErrorCode associated with the refine contacts operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nLengthUnit.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.wake_scale.html#wake_scale","title":"wake_scale","text":"wake_scale\n\n\n\nproperty CreateBOIParams.wake_scale: float\n\nBOI flow direction scaling factor."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ProjectOnGeometryResults.warning_codes: List[WarningCode]\n\nWarning code associated with operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCLOSEGAPS_INVALIDRESOLUTIONFACTOR.html#wrapperclosegaps_invalidresolutionfactor","title":"WRAPPERCLOSEGAPS_INVALIDRESOLUTIONFACTOR","text":"WRAPPERCLOSEGAPS_INVALIDRESOLUTIONFACTOR\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDRESOLUTIONFACTOR = 3443\n\nResolution Factor should be greater than 0 but less than or equal to 1."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.real.html#real","title":"real","text":"real\n\n\n\nBCPairType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesParams.use_absolute_tolerance.html#use_absolute_tolerance","title":"use_absolute_tolerance","text":"use_absolute_tolerance\n\n\n\nproperty MergeBoundaryNodesParams.use_absolute_tolerance: bool\n\nIndicates whether the tolerance provided is an absolute value or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.assign_mesh_regions.html#assign_mesh_regions","title":"assign_mesh_regions","text":"assign_mesh_regions\n\n\n\nVolumeMeshTool.assign_mesh_regions(target_part_id, target_cell_zonelets, source_part_ids, small_regions_volume_fraction)\n\nAssigns a region id to the cells in target cell zonelets of target part id. The region id is based on their location within source part ids.\n\nParameters\n\ntarget_part_id\n\npython:int\n\nId of the target part.\n\ntarget_cell_zonelets\n\nIterable[python:int]\n\nIds of cell zonelets to be split into regions.\n\nsource_part_ids\n\nIterable[python:int]\n\nIds of solids used as a reference for assigning regions.\n\nsmall_regions_volume_fraction\n\npython:float\n\nRegions with volumes smaller than a specified fraction of the total volume are merged into their largest adjacent region.\nThis helps to eliminate isolated cells and thin regions from the output.\n\nReturns\n\n:\n\n\n\nVolumeMeshToolResults\n\nReturns the VolumeMeshToolResults.\n\nReturn type\n\nVolumeMeshToolResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = volume_mesh_tool.AssignMeshRegions(target_part_id, target_cell_zonelets, source_part_ids, small_regions_volume_fraction)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.html#checkmeshresults","title":"CheckMeshResults","text":"CheckMeshResults\n\n\n\nclass ansys.meshing.prime.CheckMeshResults(model=None, has_non_positive_volumes=None, has_non_positive_areas=None, has_invalid_shape=None, has_left_handed_faces=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResult associated with the check mesh operation.\n\nParameters\n\nmodel: Model\n\nModel to create a CheckMeshResults object with default parameters.\n\nhas_non_positive_volumes: bool, optional\n\nIndicates whether mesh has non positive volumes.\n\nhas_non_positive_areas: bool, optional\n\nIndicates whether mesh has non positive areas.\n\nhas_invalid_shape: bool, optional\n\nIndicates whether mesh has invalid shape.\n\nhas_left_handed_faces: bool, optional\n\nIndicates whether mesh has left handed faces.\n\nerror_code: ErrorCode, optional\n\nError code associated with the check grid operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the check grid operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a CheckMeshResults object with provided parameters.\n\nExamples\n\n>>> check_mesh_results = prime.CheckMeshResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.html#examples-using-checkmeshresults","title":"CheckMeshResults > Examples using CheckMeshResults","text":"Examples using CheckMeshResults\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSizingParams.html#multizonesizingparams","title":"MultiZoneSizingParams","text":"MultiZoneSizingParams\n\n\n\nclass ansys.meshing.prime.MultiZoneSizingParams(model=None, max_size=None, min_size=None, growth_rate=None, use_volumetric_size_field=None, json_data=None, **kwargs)\n\nParameters for MultiZone meshing.\n\nParameters\n\nmodel: Model\n\nModel to create a MultiZoneSizingParams object with default parameters.\n\nmax_size: float, optional\n\nDefines global maximum mesh size.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmin_size: float, optional\n\nDefines global minimum mesh size.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate: float, optional\n\nDefines growth rate.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nuse_volumetric_size_field: bool, optional\n\nDefines whether to use size field for MultiZone meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a MultiZoneSizingParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_sizing_params = prime.MultiZoneSizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.ignore_orientation.html#ignore_orientation","title":"ignore_orientation","text":"ignore_orientation\n\n\n\nproperty ProximitySizingParams.ignore_orientation: bool\n\nThe ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsParams.html#copyzoneletsparams","title":"CopyZoneletsParams","text":"CopyZoneletsParams\n\n\n\nclass ansys.meshing.prime.CopyZoneletsParams(model=None, copy_labels=None, copy_zones=None, json_data=None, **kwargs)\n\nParameters to copy zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a CopyZoneletsParams object with default parameters.\n\ncopy_labels: bool, optional\n\nOption to copy labels of input zonelets to the corresponding copied zonelets.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncopy_zones: bool, optional\n\nOption to copy zones of input zonelets to corresponding copied zonelets.\n\njson_data: dict, optional\n\nJSON dictionary to create a CopyZoneletsParams object with provided parameters.\n\nExamples\n\n>>> copy_zonelets_params = prime.CopyZoneletsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_pcb_pmdat.html#download_pcb_pmdat","title":"download_pcb_pmdat","text":"download_pcb_pmdat\n\n\n\nansys.meshing.prime.examples.download_pcb_pmdat(destination=None, force=False)\n\nDownload the PMDAT file for the PCB example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pcb = prime_examples.download_pcb_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(pcb, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_pcb_pmdat.html#examples-using-download_pcb_pmdat","title":"download_pcb_pmdat > Examples using download_pcb_pmdat","text":"Examples using download_pcb_pmdat\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py"},{"objectID":"Home","href":"user_guide/wrapper.html#surface-wrapping","title":"Surface wrapping","text":"Surface wrapping\n\nGeometries migrated from various CAD packages often contain gaps and overlaps between the surfaces due to algorithm and tolerance differences of the CAD packages.\nSurface wrapping provides the ability to create reliable meshes for such geometries without extensive manual clean up and reduces the time required for preprocessing.\n\nThe Wrapper class allows you to extract a closed watertight surface used to create a volume mesh from geometry where the inputs:\n\nAre not connected with overlaps\n\nHave holes, leaks, or gaps\n\nHave small features that need to be ignored or walked over\n\nThe wrapping operation uses an appropriate material point to identify the relevant surfaces of the selected objects. A coarse Cartesian grid is overlaid on the selected objects\nto create a contiguous region. This Cartesian grid is used to automatically clean the input geometry and to create the watertight representation. The Cartesian grid is then refined\nbased on the size functions to better represent the selected objects. The intersection between the Cartesian grid and the input geometry is calculated and the intersecting cells are\nidentified and marked.\n\nA watertight faceted representation (defined by quad faces of the Cartesian mesh) is created of the boundaries between the regions of interest (identified\nvia material points) and all other regions. The nodes on the faceted representation are then projected back to the input geometry, resulting into a wrapper surface closely\nrepresenting the input geometry. The edges are imprinted on the wrapped zones, and individual zones are recovered and rezoned based on the original geometry objects.\n\nThe wrapper surface quality is improved by post-wrapping operations. Surfaces are remeshed based on size functions or the size field.\n\nThe basic PyPrimeMesh wrapper-based workflow follows these steps:\n\nImport the geometry.\n\nDefine global sizing parameters and size controls with curvature refinement. Sizes are used for wrapper Octree construction.\n\nDefine the material points. Material points are used to define fluid regions or seal regions\ndepending on whether the status is LIVE or DEAD. A 3D coordinate describes the\nposition of the material point.\n\nCreate the wrapper control. The scope refers to which entities should be wrapped.\n\nExtract features with angle and face zonelets boundary for feature capture.\n\nAdd feature recovery control.\n\nWrap the model.\n\nApply diagnostics to compute free edges, multi edges, self-intersections,\nand duplicate faces after wrap. For more information, see ref_index_mesh_diagnostics.\n\nRemesh the model. For more information, see ref_index_surfer.\n\nYou can import Fluent Meshing’s size field file for remesh. For more information, see ref_index_reading_writing.\n\nImprove surface quality and resolve connectivity issues."},{"objectID":"Home","href":"user_guide/wrapper.html#patch-flow-region","title":"Surface wrapping > Patch flow region","text":"Patch flow region\n\nThis is a beta feature. API behavior and implementation might change in the future.\n\nThe Patch Flow Region class creates\npatching face zonelets for holes below a specified size\nthat exist between regions defined by live and dead material points. You can define\nmultiple dead regions but only one live region can be defined.\nThe WrapperPatchFlowRegionsParams class allows you to specify the base size and dead regions to create the patched surface.\nWhen you do not provide the base size, the global minimum size value is used.\nThe patched surface is created towards the dead material point region.\nWhen you create a patched surface, the mesh created is non-conformal.\nYou may have to perform wrapping to create a conformal mesh.\n\nThe following example demonstrates how to patch surfaces using dead and live material points.\n\nImport the model.\n\nSet the global sizing parameters. If you do not specify the base size, the value for the global minimum size is used.\n\nCreate the material points and define the type.\n\nDefine the scope, dead region, live region and specify the hole size, base size to be patched to perform patching.\n\nThe following image shows the defined dead material points and live material points in the model.\n\nCase 1: scope Dead_1, LIVE material points and specify the hole size to perform patching.\n\nCase 2: scope Dead_2, LIVE material points and specify the hole size and base size to perform patching.\n\nCase 3: scope Dead_1, Dead_2 and LIVE material points and specify the hole size and base size to perform patching."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.LABELS.html#labels","title":"LABELS","text":"LABELS\n\n\n\nScopeEvaluationType.LABELS = 3\n\nUse labels to evaluate the scope."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.DEFAULT.html#default","title":"DEFAULT","text":"DEFAULT\n\n\n\nScaffolderRepairMode.DEFAULT = 0\n\nRepairs edges using the distance tolerance parameter.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ZONELETSARENOTOFSAMEDIMENSION.html#zoneletsarenotofsamedimension","title":"ZONELETSARENOTOFSAMEDIMENSION","text":"ZONELETSARENOTOFSAMEDIMENSION\n\n\n\nErrorCode.ZONELETSARENOTOFSAMEDIMENSION = 374\n\nZonelets are not of same dimension."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSpline.create_trimmed_uniform_solid_spline_by_brep_mapping.html#create_trimmed_uniform_solid_spline_by_brep_mapping","title":"create_trimmed_uniform_solid_spline_by_brep_mapping","text":"create_trimmed_uniform_solid_spline_by_brep_mapping\n\n\n\nTrimmedSpline.create_trimmed_uniform_solid_spline_by_brep_mapping(part_id, spline_params)\n\nCreates uniform solid spline and maps the CAD geometry in its parametric space.\n\nParameters\n\npart_id\n\npython:int\n\nPart on which the spline is to be created.\n\nspline_params\n\nUniformSolidSplineCreationParams\n\nParameters used to create the spline.\n\nReturns\n\n:\n\n\n\nTrimmedSplineResults\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.CreateTrimmedUniformSolidSplineByBrepMapping(part_id, spline_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposerResults.html#vtcomposerresults","title":"VTComposerResults","text":"VTComposerResults\n\n\n\nclass ansys.meshing.prime.VTComposerResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResult struct associated to VTComposer operations.\n\nParameters\n\nmodel: Model\n\nModel to create a VTComposerResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a VTComposerResults object with provided parameters.\n\nExamples\n\n>>> v_tcomposer_results = prime.VTComposerResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.AUTOMESHHEXCOREFAILED.html#automeshhexcorefailed","title":"AUTOMESHHEXCOREFAILED","text":"AUTOMESHHEXCOREFAILED\n\n\n\nErrorCode.AUTOMESHHEXCOREFAILED = 117\n\nHex generation part of volume meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshParams.html#checkmeshparams","title":"CheckMeshParams","text":"CheckMeshParams\n\n\n\nclass ansys.meshing.prime.CheckMeshParams(model=None, json_data=None, **kwargs)\n\nParameters used to check mesh.\n\nParameters\n\nmodel: Model\n\nModel to create a CheckMeshParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a CheckMeshParams object with provided parameters.\n\nExamples\n\n>>> check_mesh_params = prime.CheckMeshParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshParams.html#examples-using-checkmeshparams","title":"CheckMeshParams > Examples using CheckMeshParams","text":"Examples using CheckMeshParams\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.create_curvature_size_control.html#create_curvature_size_control","title":"create_curvature_size_control","text":"create_curvature_size_control\n\n\n\nMesh.create_curvature_size_control(control_name='size_control', min=1.0, max=2.0, scope=<ansys.meshing.prime.lucid.scope.SurfaceScope object>)\n\nGenerate a curvature size control on a scope.\n\nParameters\n\ncontrol_name\n\npython:str, optional\n\nName of the control. The default is \"size_control\".\n\nmin\n\npython:float, optional\n\nMinimum edge length of the mesh. The default is 1.0.\n\nmax\n\npython:float\n\nMaximum edge length of the mesh. The default is 2.0.\n\nscope\n\nSurfaceScope\n\nScope for creating the size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CheckMeshResults.print_default()\n\nPrint the default values of CheckMeshResults object.\n\nExamples\n\n>>> CheckMeshResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.NOWARNING.html#nowarning","title":"NOWARNING","text":"NOWARNING\n\n\n\nWarningCode.NOWARNING = 0\n\nNo warnings."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nVolumeNamingType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"examples/gallery_examples/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n00:00.000 total execution time for 0 files from examples/gallery_examples:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nN/A\n\nN/A\n\nN/A"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.imag.html#imag","title":"imag","text":"imag\n\n\n\nBCsVolumetricModality.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.part_creation_type.html#part_creation_type","title":"part_creation_type","text":"part_creation_type\n\n\n\nproperty ImportCadParams.part_creation_type: PartCreationType\n\nCreate a part per CAD Model, Assembly, Part, Body."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneEdgeBiasingParams.n_divisions.html#n_divisions","title":"n_divisions","text":"n_divisions\n\n\n\nproperty MultiZoneEdgeBiasingParams.n_divisions: int\n\nNumber of divisions on the section where edge biasing is done.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.set_suggested_name.html#set_suggested_name","title":"set_suggested_name","text":"set_suggested_name\n\n\n\nVolumeControl.set_suggested_name(name)\n\nSet the unique name for the volume control based on a suggested name.\n\nParameters\n\nname\n\npython:str\n\nSuggested name for the volume control.\n\nReturns\n\n:\n\n\n\nSetNameResults\n\nNewly suggested name of the volume control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> volume_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERAUTOSIZEQUADUNSUPPORTED.html#surferautosizequadunsupported","title":"SURFERAUTOSIZEQUADUNSUPPORTED","text":"SURFERAUTOSIZEQUADUNSUPPORTED\n\n\n\nErrorCode.SURFERAUTOSIZEQUADUNSUPPORTED = 11\n\nAuto sizing for quad meshing is not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_proximity_sizing_params.html#set_proximity_sizing_params","title":"set_proximity_sizing_params","text":"set_proximity_sizing_params\n\n\n\nSizeControl.set_proximity_sizing_params(params)\n\nSet the proximity sizing parameters to compute volumetric size field.\n\nParameters\n\nparams\n\nProximitySizingParams\n\nParameters that enables you to specify number of elements in the gaps.\n\nReturns\n\n:\n\n\n\nSetSizingResults\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_proximity_sizing_params(\n>>>                  prime.ProximitySizingParams(model=model,\n>>>                  min = 0.1, max = 1.0, growth_rate = 1.2))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_INVALIDINPUT.html#vt_invalidinput","title":"VT_INVALIDINPUT","text":"VT_INVALIDINPUT\n\n\n\nErrorCode.VT_INVALIDINPUT = 3600\n\nInvalid input provided for VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatFeaturesParams.treat_circular_faces_params.html#treat_circular_faces_params","title":"treat_circular_faces_params","text":"treat_circular_faces_params\n\n\n\nproperty DetectAndTreatFeaturesParams.treat_circular_faces_params: DetectAndTreatCircularFacesParams\n\nParameters for detect and treat circular faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ImportMapdlCdbResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MergeBoundaryNodesParams.print_default()\n\nPrint the default values of MergeBoundaryNodesParams object.\n\nExamples\n\n>>> MergeBoundaryNodesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.imag.html#imag","title":"imag","text":"imag\n\n\n\nFaceQualityMeasure.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.buffer_layers.html#buffer_layers","title":"buffer_layers","text":"buffer_layers\n\n\n\nproperty HexCoreParams.buffer_layers: int\n\nMinimum number of cell layers of the same size before the cell size halves or doubles."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.html#splinefeaturecapturetype","title":"SplineFeatureCaptureType","text":"SplineFeatureCaptureType\n\n\n\nclass ansys.meshing.prime.SplineFeatureCaptureType(*values)\n\nOptions to capture features in spline.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nEdgeConnectType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nMatchPairTargetType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.FEATURE.html#feature","title":"FEATURE","text":"FEATURE\n\n\n\nSurfaceFeatureType.FEATURE = 2\n\nFace edges with normal angle more than threshold are considered as feature."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.NONFREE.html#nonfree","title":"NONFREE","text":"NONFREE\n\n\n\nBodyQueryType.NONFREE = 2\n\nReturns entities associated with non-free body in part.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.html#bcpairtype","title":"BCPairType","text":"BCPairType\n\n\n\nclass ansys.meshing.prime.BCPairType(*values)\n\nOption to specify boundary condition pair type.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.html#examples-using-bcpairtype","title":"BCPairType > Examples using BCPairType","text":"Examples using BCPairType\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.edge_sharp_corner_angle.html#edge_sharp_corner_angle","title":"edge_sharp_corner_angle","text":"edge_sharp_corner_angle\n\n\n\nproperty DetectAndTreatHolesParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesParams.priority_ordered_names.html#priority_ordered_names","title":"priority_ordered_names","text":"priority_ordered_names\n\n\n\nproperty ComputeVolumesParams.priority_ordered_names: List[str]\n\nZone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLINVALIDVOLUMESCOPE.html#thinvolumecontrolinvalidvolumescope","title":"THINVOLUMECONTROLINVALIDVOLUMESCOPE","text":"THINVOLUMECONTROLINVALIDVOLUMESCOPE\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDVOLUMESCOPE = 12109\n\nInvalid volume scope provided for thin volume control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.imag.html#imag","title":"imag","text":"imag\n\n\n\nCellQualityMeasure.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesParams.html#smoothdihedralfacenodesparams","title":"SmoothDihedralFaceNodesParams","text":"SmoothDihedralFaceNodesParams\n\n\n\nclass ansys.meshing.prime.SmoothDihedralFaceNodesParams(model=None, min_dihedral_angle=None, tolerance=None, type=None, json_data=None, **kwargs)\n\nParameters to smooth dihedral face nodes.\n\nParameters\n\nmodel: Model\n\nModel to create a SmoothDihedralFaceNodesParams object with default parameters.\n\nmin_dihedral_angle: float, optional\n\nMinimum angle to be used to identify dihedral faces.\n\ntolerance: float, optional\n\nTolerance relative to local mesh size to control smooth movement of nodes.\n\ntype: SmoothType, optional\n\nOption to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle.\n\njson_data: dict, optional\n\nJSON dictionary to create a SmoothDihedralFaceNodesParams object with provided parameters.\n\nExamples\n\n>>> smooth_dihedral_face_nodes_params = prime.SmoothDihedralFaceNodesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.search_zonelets_by_self_intersections.html#search_zonelets_by_self_intersections","title":"search_zonelets_by_self_intersections","text":"search_zonelets_by_self_intersections\n\n\n\nSurfaceSearch.search_zonelets_by_self_intersections(part_id, face_zonelets, register_id, params)\n\nSearch face zonelets to identify face elements intersecting with each other.\n\nParameters\n\npart_id\n\npython:int\n\nId of part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets.\n\nregister_id\n\npython:int\n\nId of register.\n\nparams\n\nSearchBySelfIntersectionParams\n\nParameters used to identify face elements by self intersection.\n\nReturns\n\n:\n\n\n\nSearchByIntersectionResults\n\nReturns the SearchByIntersectionResults.\n\nReturn type\n\nSearchByIntersectionResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_self_intersections(part_id, face_zonelets, register_id, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nWrapRegion.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshParams.enable_multi_threading.html#enable_multi_threading","title":"enable_multi_threading","text":"enable_multi_threading\n\n\n\nproperty ImportFluentMeshingMeshParams.enable_multi_threading: bool\n\nOption to import multiple files in parallel using multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckTopologyParams.topo_search_field_mask.html#topo_search_field_mask","title":"topo_search_field_mask","text":"topo_search_field_mask\n\n\n\nproperty CheckTopologyParams.topo_search_field_mask: int\n\nToposearch field option for topology check.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nPrismControlOffsetType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nWarningCode.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_components_by_path_expression.html#get_components_by_path_expression","title":"get_components_by_path_expression","text":"get_components_by_path_expression\n\n\n\nPart.get_components_by_path_expression(path_expression)\n\nGets component names with the provided path expression.\n\nParameters\n\npath_expression\n\npython:str\n\nPath expression to determine component names that should be returned.\n\nReturns\n\n:\n\n\n\nList[python:str]\n\nReturns a list of component names.\n\nReturn type\n\nList[str]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = part.get_components_by_path_expression(path_expression)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Scaffolder.scaffold_topo_faces_and_beams.html#scaffold_topo_faces_and_beams","title":"scaffold_topo_faces_and_beams","text":"scaffold_topo_faces_and_beams\n\n\n\nScaffolder.scaffold_topo_faces_and_beams(topo_faces, topo_beams, params)\n\nScaffold faces and beams with provided parameters.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of topology faces.\n\ntopo_beams\n\nIterable[python:int]\n\nIds of topology edges for beams.\n\nparams\n\nScaffolderParams\n\nScaffolding parameters.\n\nReturns\n\n:\n\n\n\nScaffolderResults\n\nReturn results in ScaffolderResults structure.\n\nReturn type\n\nScaffolderResults\n\nExamples\n\n>>> results = scaffolder.ScaffoldTopoFacesAndBeams([1,2], [7,8], params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Scaffolder.scaffold_topo_faces_and_beams.html#examples-using-scaffolderscaffold_topo_faces_and_beams","title":"scaffold_topo_faces_and_beams > Examples using Scaffolder.scaffold_topo_faces_and_beams","text":"Examples using Scaffolder.scaffold_topo_faces_and_beams\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic EdgeConnectivityResults.print_default()\n\nPrint the default values of EdgeConnectivityResults object.\n\nExamples\n\n>>> EdgeConnectivityResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControlSummaryResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SizeControlSummaryResult.set_default(message=None)\n\nSet the default values of the SizeControlSummaryResult object.\n\nParameters\n\nmessage: str, optional\n\nSize control summary text."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_scdoc.html#download_multi_layer_quad_mesh_pcb_scdoc","title":"download_multi_layer_quad_mesh_pcb_scdoc","text":"download_multi_layer_quad_mesh_pcb_scdoc\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_scdoc(destination=None, force=False)\n\nDownload the SCDOC file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.imag.html#imag","title":"imag","text":"imag\n\n\n\nJoinSeparateMethod.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nEdgeMergeControl.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.ASPECTRATIO.html#aspectratio","title":"ASPECTRATIO","text":"ASPECTRATIO\n\n\n\nPrismControlOffsetType.ASPECTRATIO = 1\n\nOption to grow prism layers based on first aspect ratio specified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesParams.zone_name.html#zone_name","title":"zone_name","text":"zone_name\n\n\n\nproperty ExtractTopoVolumesParams.zone_name: str\n\nSpecifies zone name to associate extracted flow topovolumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.flow_dir.html#flow_dir","title":"flow_dir","text":"flow_dir\n\n\n\nproperty CreateBOIParams.flow_dir: FlowDirection\n\nAssigns the offset direction of inflation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.imag.html#imag","title":"imag","text":"imag\n\n\n\nCdbSimulationType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.ALLTOALL.html#alltoall","title":"ALLTOALL","text":"ALLTOALL\n\n\n\nEdgeMergeControl.ALLTOALL = 1\n\nAllows to merge all types of edges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSmoothType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.size_field_type.html#size_field_type","title":"size_field_type","text":"size_field_type\n\n\n\nproperty AutoMeshParams.size_field_type: SizeFieldType\n\nType of sizing to be used to generate volume mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.VolumeScope.html#volumescope","title":"VolumeScope","text":"VolumeScope\n\n\n\nclass ansys.meshing.prime.lucid.VolumeScope(part_expression='*', entity_expression='*', scope_evaluation_type=ScopeEvaluationType.ZONES)\n\nVolumeScope is one of the classes in Lucid API.\n\nThis class is meant for beginners to meshing. This class is used to define\na scope for operation on volumes.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.VolumeScope.html#examples-using-volumescope","title":"VolumeScope > Examples using VolumeScope","text":"Examples using VolumeScope\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nFaceQualityMeasure.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportLSDynaResults.set_default(summary_log=None, zone_mesh_results=None, error_code=None, warning_codes=None)\n\nSet the default values of the ExportLSDynaResults object.\n\nParameters\n\nsummary_log: str, optional\n\nSummary log for the import operation in json format.\n\nzone_mesh_results: List[ZoneMeshResult], optional\n\nZone-wise mesh information for elements in the exported model.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchMorphResults.html#matchmorphresults","title":"MatchMorphResults","text":"MatchMorphResults\n\n\n\nclass ansys.meshing.prime.MatchMorphResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with match morph operation.\n\nParameters\n\nmodel: Model\n\nModel to create a MatchMorphResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nErrorcode associated with match morph operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a MatchMorphResults object with provided parameters.\n\nExamples\n\n>>> match_morph_results = prime.MatchMorphResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetSizingResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty SetSizingResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the set sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateIntersectionEdgeLoopsResults.set_default(processing_time=None, error_code=None, extracted_ids=None)\n\nSet the default values of the CreateIntersectionEdgeLoopsResults object.\n\nParameters\n\nprocessing_time: float, optional\n\nTime taken to extract edges formed by intersecting faces.\n\nerror_code: ErrorCode, optional\n\nError code returned by edge extraction function.\n\nextracted_ids: List[ExtractedFeatureIds], optional\n\nList of ExtractedFeatureIds that contains ids of extracted edges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.fillet_spanning_angle.html#fillet_spanning_angle","title":"fillet_spanning_angle","text":"fillet_spanning_angle\n\n\n\nproperty DefeatureTopologyParams.fillet_spanning_angle: float\n\nAngular threshold for detecting fillets with spanning angles below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchResults.html#createcontactpatchresults","title":"CreateContactPatchResults","text":"CreateContactPatchResults\n\n\n\nclass ansys.meshing.prime.CreateContactPatchResults(model=None, error_code=None, part_id=None, json_data=None, **kwargs)\n\nResult structure associated with created contact patch zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateContactPatchResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the contact patch creation operation.\n\npart_id: int, optional\n\nContact patch part id.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateContactPatchResults object with provided parameters.\n\nExamples\n\n>>> create_contact_patch_results = prime.CreateContactPatchResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchResults.html#examples-using-createcontactpatchresults","title":"CreateContactPatchResults > Examples using CreateContactPatchResults","text":"Examples using CreateContactPatchResults\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ScaffolderParams.print_default()\n\nPrint the default values of ScaffolderParams object.\n\nExamples\n\n>>> ScaffolderParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSpline.convert_quad_to_spline.html#convert_quad_to_spline","title":"convert_quad_to_spline","text":"convert_quad_to_spline\n\n\n\nQuadToSpline.convert_quad_to_spline(input_scope, quad_to_spline_params)\n\nConverts fully quad mesh with topology to spline with the given conversion parameters.\n\nParameters\n\ninput_scope\n\nScopeDefinition\n\nScope definition for input quad mesh.\n\nquad_to_spline_params\n\nQuadToSplineParams\n\nParameters to convert quad to spline.\n\nReturns\n\n:\n\n\n\nIGAResults\n\nReturns the IGAResults structure.\n\nReturn type\n\nIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = quadToSpline.convert_quad_to_spline(input_scope, quad_to_spline_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSurfaceFeatureType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControlParams.skip_hexcore.html#skip_hexcore","title":"skip_hexcore","text":"skip_hexcore\n\n\n\nproperty VolumeControlParams.skip_hexcore: bool\n\nCheck whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapResult.html#wrapresult","title":"WrapResult","text":"WrapResult\n\n\n\nclass ansys.meshing.prime.WrapResult(model=None, warning_codes=None, error_code=None, id=None, name=None, json_data=None, **kwargs)\n\nResult structure associated to Wrap operation.\n\nParameters\n\nmodel: Model\n\nModel to create a WrapResult object with default parameters.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the wrap operation.\n\nerror_code: ErrorCode, optional\n\nError code associated with a wrap operation.\n\nid: int, optional\n\nId of the wrapper part created.\n\nname: str, optional\n\nName of wrapper part created.\n\njson_data: dict, optional\n\nJSON dictionary to create a WrapResult object with provided parameters.\n\nExamples\n\n>>> wrap_result = prime.WrapResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CONTROLNOTFOUND.html#controlnotfound","title":"CONTROLNOTFOUND","text":"CONTROLNOTFOUND\n\n\n\nErrorCode.CONTROLNOTFOUND = 1304\n\nControl not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineSplineParams.refine_flag_v.html#refine_flag_v","title":"refine_flag_v","text":"refine_flag_v\n\n\n\nproperty RefineSplineParams.refine_flag_v: bool\n\nIndicates whether refinement is applied in v direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nHexCoreCellElementType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCadFaceter.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"examples/gallery_examples/index.html#examples","title":"Examples","text":"Examples\n\nThese examples show how to use PyPrimeMesh to prepare meshes.\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_12_import_from_pygeometry.py"},{"objectID":"Home","href":"examples/gallery_examples/index.html#examples-using-beta-apis","title":"Examples > Examples using beta APIs","text":"Examples using beta APIs\n\nThese examples use beta APIs and as such their behavior and implementation may change in future.\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"examples/gallery_examples/index.html#miscellaneous-examples","title":"Examples > Miscellaneous examples","text":"Miscellaneous examples\n\nThese examples provide tips and tricks for using PyPrimeMesh.\n\nsphx_glr_examples_gallery_examples_misc_example_template.py\n\n\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryResults.html#projectongeometryresults","title":"ProjectOnGeometryResults","text":"ProjectOnGeometryResults\n\n\n\nclass ansys.meshing.prime.ProjectOnGeometryResults(model=None, success=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with projection of topofaces nodes on its geometry.\n\nParameters\n\nmodel: Model\n\nModel to create a ProjectOnGeometryResults object with default parameters.\n\nsuccess: bool, optional\n\nDefines the operation was successful or not.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes: List[WarningCode], optional\n\nWarning code associated with operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ProjectOnGeometryResults object with provided parameters.\n\nExamples\n\n>>> project_on_geometry_results = prime.ProjectOnGeometryResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.get_params.html#get_params","title":"get_params","text":"get_params\n\n\n\nVolumeControl.get_params()\n\nGet the parameters of the volume control.\n\nReturns\n\n:\n\n\n\nVolumeControlParams\n\nReturn parameters of the volume control.\n\nReturn type\n\nVolumeControlParams\n\nExamples\n\n>>> params = volume_control.get_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.html#lsdynafileformattype","title":"LSDynaFileFormatType","text":"LSDynaFileFormatType\n\n\n\nclass ansys.meshing.prime.LSDynaFileFormatType(*values)\n\nProvides the format type to write the LS-DYNA file.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaIGAResults.html#exportlsdynaigaresults","title":"ExportLSDynaIGAResults","text":"ExportLSDynaIGAResults\n\n\n\nclass ansys.meshing.prime.ExportLSDynaIGAResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the LS-DYNA export.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportLSDynaIGAResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportLSDynaIGAResults object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_igaesults = prime.ExportLSDynaIGAResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPair.source_surfaces.html#source_surfaces","title":"source_surfaces","text":"source_surfaces\n\n\n\nproperty MatchPair.source_surfaces: Iterable[int]\n\nIds of source surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.material_point_data.html#material_point_data","title":"material_point_data","text":"material_point_data\n\n\n\nproperty Model.material_point_data: MaterialPointManager\n\nGet material point data for the model.\n\nThe Material Point Manager is used to create, delete, and manage material points.\n\nReturns\n\nMaterialPointManager\n\nMaterial Point Manager.\n\nExamples\n\n>>> mpt_data = model.material_point_data"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TransformParams.transformation_matrix.html#transformation_matrix","title":"transformation_matrix","text":"transformation_matrix\n\n\n\nproperty TransformParams.transformation_matrix: Iterable[float]\n\nTransformation matrix(4x4) to be used to transform."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.side_tolerance.html#side_tolerance","title":"side_tolerance","text":"side_tolerance\n\n\n\nproperty FuseParams.side_tolerance: float\n\nSide tolerance for fusing to the side edges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinParams.overlap_zone_name.html#overlap_zone_name","title":"overlap_zone_name","text":"overlap_zone_name\n\n\n\nproperty JoinParams.overlap_zone_name: str\n\nZone id to be assigned to overlap zonelets belonging to different zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MERGEZONELETSFAILED.html#mergezoneletsfailed","title":"MERGEZONELETSFAILED","text":"MERGEZONELETSFAILED\n\n\n\nErrorCode.MERGEZONELETSFAILED = 1310\n\nMerge zonelets failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesParams.type.html#type","title":"type","text":"type\n\n\n\nproperty SmoothDihedralFaceNodesParams.type: SmoothType\n\nOption to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExtractTopoVolumesResults.set_default(volumes=None, error_code=None)\n\nSet the default values of the ExtractTopoVolumesResults object.\n\nParameters\n\nvolumes: Iterable[int], optional\n\nIds of extracted flow topovolumes.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOTSUPPORTEDFORHIGHERORDERMESHPART.html#notsupportedforhigherordermeshpart","title":"NOTSUPPORTEDFORHIGHERORDERMESHPART","text":"NOTSUPPORTEDFORHIGHERORDERMESHPART\n\n\n\nErrorCode.NOTSUPPORTEDFORHIGHERORDERMESHPART = 1201\n\nOperation does not support higher order elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.get_topo_volumes_of_topo_faces.html#get_topo_volumes_of_topo_faces","title":"get_topo_volumes_of_topo_faces","text":"get_topo_volumes_of_topo_faces\n\n\n\nTopoData.get_topo_volumes_of_topo_faces(topo_faces)\n\nGets the topovolumes of the given topofaces.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of the topofaces.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of topovolume ids.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topovolumes = topo_data.get_topo_volumes_of_topo_faces(topo_faces)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_labels.html#n_labels","title":"n_labels","text":"n_labels\n\n\n\nproperty PartSummaryResults.n_labels: int\n\nNumber of labels."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.INVERSEORTHOGONAL_V2.html#inverseorthogonal_v2","title":"INVERSEORTHOGONAL_V2","text":"INVERSEORTHOGONAL_V2\n\n\n\nCellQualityMeasure.INVERSEORTHOGONAL_V2 = 25\n\nThe advanced inverse orthogonal metric ranges between 0 (best) and 1 (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ScaffolderResults.print_default()\n\nPrint the default values of ScaffolderResults object.\n\nExamples\n\n>>> ScaffolderResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeResults.html#searchbyspikeresults","title":"SearchBySpikeResults","text":"SearchBySpikeResults\n\n\n\nclass ansys.meshing.prime.SearchBySpikeResults(model=None, n_found=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated with search spikes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchBySpikeResults object with default parameters.\n\nn_found: int, optional\n\nNumber of spikes detected.\n\nerror_code: ErrorCode, optional\n\nError code associated with search spikes operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchBySpikeResults object with provided parameters.\n\nExamples\n\n>>> search_by_spike_results = prime.SearchBySpikeResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.projection_scope.html#projection_scope","title":"projection_scope","text":"projection_scope\n\n\n\nproperty QuadToSplineParams.projection_scope: ScopeDefinition\n\nScope to evaluate entities for projection.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.dihedral_angle.html#dihedral_angle","title":"dihedral_angle","text":"dihedral_angle\n\n\n\nproperty AutoNodeMoveParams.dihedral_angle: float\n\nDihedral angle used to mantain features of boundary face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ComputeVolumesResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ConnectResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectCircularHolesParams.html#detectcircularholesparams","title":"DetectCircularHolesParams","text":"DetectCircularHolesParams\n\n\n\nclass ansys.meshing.prime.DetectCircularHolesParams(model=None, allow_curved_topo_faces=None, max_radius_circular_holes=None, min_radius_circular_holes=None, merge_edge_allow_self_close=None, json_data=None, **kwargs)\n\nParameters for detect circular holes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DetectCircularHolesParams object with default parameters.\n\nallow_curved_topo_faces: bool, optional\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmax_radius_circular_holes: float, optional\n\nMaximum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmin_radius_circular_holes: float, optional\n\nMinimum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DetectCircularHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_circular_holes_params = prime.DetectCircularHolesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteMeshParams.print_default()\n\nPrint the default values of DeleteMeshParams object.\n\nExamples\n\n>>> DeleteMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.real.html#real","title":"real","text":"real\n\n\n\nScopeEntity.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDINPUTPOINT.html#invalidinputpoint","title":"INVALIDINPUTPOINT","text":"INVALIDINPUTPOINT\n\n\n\nErrorCode.INVALIDINPUTPOINT = 16000\n\nInvalid input point.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryResults.summary.html#summary","title":"summary","text":"summary\n\n\n\nproperty SurfaceQualitySummaryResults.summary: str\n\nSurface quality summary text."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MERGEVOLUMESNOTSUPPORTEDFORTOPOLOGYPART.html#mergevolumesnotsupportedfortopologypart","title":"MERGEVOLUMESNOTSUPPORTEDFORTOPOLOGYPART","text":"MERGEVOLUMESNOTSUPPORTEDFORTOPOLOGYPART\n\n\n\nErrorCode.MERGEVOLUMESNOTSUPPORTEDFORTOPOLOGYPART = 1207\n\nMerge volumes is not supported for part with topology data."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.NamePatternParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic NamePatternParams.print_default()\n\nPrint the default values of NamePatternParams object.\n\nExamples\n\n>>> NamePatternParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSpline.html#trimmedspline","title":"TrimmedSpline","text":"TrimmedSpline\n\n\n\nclass ansys.meshing.prime.TrimmedSpline(model)\n\nHandles creation and meshing of trimmed spline.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create TrimmedSpline object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MergePartsParams.print_default()\n\nPrint the default values of MergePartsParams object.\n\nExamples\n\n>>> MergePartsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposerParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VTComposerParams.print_default()\n\nPrint the default values of VTComposerParams object.\n\nExamples\n\n>>> VTComposerParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.size_controls.html#size_controls","title":"size_controls","text":"size_controls\n\n\n\nproperty ControlData.size_controls: List[SizeControl]\n\nGet the size controls.\n\nReturns\n\nList[SizeControl]\n\nList of size controls.\n\nExamples\n\n>>> size_controls = model.control_data.size_controls"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.FUSEINTERIORFAILED.html#fuseinteriorfailed","title":"FUSEINTERIORFAILED","text":"FUSEINTERIORFAILED\n\n\n\nErrorCode.FUSEINTERIORFAILED = 855\n\nFusing interior region of overlap failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.PROXIMITY.html#proximity","title":"PROXIMITY","text":"PROXIMITY\n\n\n\nSizingType.PROXIMITY = 1\n\nDenotes the size control type is proximity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SEPARATIONRESULTSFAILED.html#separationresultsfailed","title":"SEPARATIONRESULTSFAILED","text":"SEPARATIONRESULTSFAILED\n\n\n\nErrorCode.SEPARATIONRESULTSFAILED = 360\n\nSeparation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CadRefacetingMaxEdgeSizeLimit.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsParams.overlap_element_count.html#overlap_element_count","title":"overlap_element_count","text":"overlap_element_count\n\n\n\nproperty DeleteFringesAndOverlapsParams.overlap_element_count: int\n\nMaximum count of overlapping face elements identified as overlap to be deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_deformed_blade_fmd.html#download_deformed_blade_fmd","title":"download_deformed_blade_fmd","text":"download_deformed_blade_fmd\n\n\n\nansys.meshing.prime.examples.download_deformed_blade_fmd(destination=None, force=False)\n\nDownload the FMD file for the turbine blade example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_deformed_blade_fmd.html#examples-using-download_deformed_blade_fmd","title":"download_deformed_blade_fmd > Examples using download_deformed_blade_fmd","text":"Examples using download_deformed_blade_fmd\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_second_order_tri_faces.html#n_second_order_tri_faces","title":"n_second_order_tri_faces","text":"n_second_order_tri_faces\n\n\n\nproperty PartSummaryResults.n_second_order_tri_faces: int\n\nNumber of second order triangular faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesParams.html#deletevolumesparams","title":"DeleteVolumesParams","text":"DeleteVolumesParams\n\n\n\nclass ansys.meshing.prime.DeleteVolumesParams(model=None, delete_small_volumes=None, volume_limit=None, json_data=None, **kwargs)\n\nParameters to delete volumes.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteVolumesParams object with default parameters.\n\ndelete_small_volumes: bool, optional\n\nOption to delete only volumes smaller than provided volume limit.\n\nvolume_limit: float, optional\n\nMaximum volume limit to identify smaller volumes to be deleted.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteVolumesParams object with provided parameters.\n\nExamples\n\n>>> delete_volumes_params = prime.DeleteVolumesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.offset_holes.html#offset_holes","title":"offset_holes","text":"offset_holes\n\n\n\nproperty DetectAndTreatHolesParams.offset_holes: bool\n\nOption to offset holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.id.html#id","title":"id","text":"id\n\n\n\nproperty PeriodicControl.id\n\nGet the id of PeriodicControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SMOOTHSIZETRANSITIONNOTSUPPORTEDFORTOPO.html#smoothsizetransitionnotsupportedfortopo","title":"SMOOTHSIZETRANSITIONNOTSUPPORTEDFORTOPO","text":"SMOOTHSIZETRANSITIONNOTSUPPORTEDFORTOPO\n\n\n\nErrorCode.SMOOTHSIZETRANSITIONNOTSUPPORTEDFORTOPO = 43\n\nSmooth size transition option is not supported for topology surface meshing yet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteFringesAndOverlapsResults.set_default(error_code=None, n_deleted=None)\n\nSet the default values of the DeleteFringesAndOverlapsResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nn_deleted: int, optional\n\nNumber of face elements deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nWrapRegion.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nZoneType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WrapParams.set_default(sizing_method=None, base_size=None, size_control_ids=None, size_field_ids=None, wrap_region=None, number_of_threads=None, imprint_relative_range=None, imprint_iterations=None)\n\nSet the default values of the WrapParams object.\n\nParameters\n\nsizing_method: SizeFieldType, optional\n\nUsed to define sizing method for wrapping.\n\nbase_size: float, optional\n\nBase size to define octree.\n\nsize_control_ids: Iterable[int], optional\n\nUsed to construct geodesic sizes for octree refinement.\n\nsize_field_ids: Iterable[int], optional\n\nUsed to define size field based octree refinement.\n\nwrap_region: WrapRegion, optional\n\nIndicates source type to extract wrapper region.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading.\n\nimprint_relative_range: float, optional\n\nUsed to define relative range in imprinting in wrapping.\n\nimprint_iterations: int, optional\n\nUsed to define number of imprint iterations in wrapping."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFACESEARCHFAILED.html#surfacesearchfailed","title":"SURFACESEARCHFAILED","text":"SURFACESEARCHFAILED\n\n\n\nErrorCode.SURFACESEARCHFAILED = 2802\n\nSurface search failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty AutoMeshResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FuseResults.set_default(fused_pairs=None, fused_area=None, error_code=None, warning_codes=None, intersecting_locations=None, intersecting_zonelet_pairs=None)\n\nSet the default values of the FuseResults object.\n\nParameters\n\nfused_pairs: int, optional\n\nNumber of face region pairs that were fused.\n\nfused_area: float, optional\n\nTotal area of fused regions from both source and target faces.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of the fuse operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the fuse operation.\n\nintersecting_locations: Iterable[float], optional\n\nLocations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nintersecting_zonelet_pairs: List[OverlapPairs], optional\n\nContains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_nodes.html#n_nodes","title":"n_nodes","text":"n_nodes\n\n\n\nproperty PartSummaryResults.n_nodes: int\n\nNumber of nodes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.set_suggested_wrapper_part_name.html#set_suggested_wrapper_part_name","title":"set_suggested_wrapper_part_name","text":"set_suggested_wrapper_part_name\n\n\n\nWrapperControl.set_suggested_wrapper_part_name(name)\n\nSets the given name for the created wrapper part  after wrapping with the wrapper control.\n\nParameters\n\nname\n\npython:str\n\nSuggested name of the wrapper part to be created.\n\nExamples\n\n>>> wrapper_control.set_suggested_wrapper_part_name(\"wrap\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.max_edge_size_limit.html#max_edge_size_limit","title":"max_edge_size_limit","text":"max_edge_size_limit\n\n\n\nproperty CadRefacetingParams.max_edge_size_limit: CadRefacetingMaxEdgeSizeLimit\n\nSpecify maximum edge size limit for faceting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MATCHMORPH_INVALIDSOURCEINPUT.html#matchmorph_invalidsourceinput","title":"MATCHMORPH_INVALIDSOURCEINPUT","text":"MATCHMORPH_INVALIDSOURCEINPUT\n\n\n\nErrorCode.MATCHMORPH_INVALIDSOURCEINPUT = 1450\n\nInvalid source input for match morphing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TriangulateResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty TriangulateResults.error_code: ErrorCode\n\nError code associated with failure of the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.ALL.html#all","title":"ALL","text":"ALL\n\n\n\nBodyQueryType.ALL = 0\n\nReturns all entities in part.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_meshed_sizing_params.html#get_meshed_sizing_params","title":"get_meshed_sizing_params","text":"get_meshed_sizing_params\n\n\n\nSizeControl.get_meshed_sizing_params()\n\nGet the meshed sizing parameters of size control.\n\nReturns\n\n:\n\n\n\nMeshedSizingParams\n\nReturn the MeshedSizingParams.\n\nReturn type\n\nMeshedSizingParams\n\nExamples\n\n>>> params = size_control.get_meshed_sizing_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WrapperCloseGapsParams.set_default(target=None, gap_size=None, material_point_name=None, suggested_part_name=None, number_of_threads=None, create_new_part=None, resolution_factor=None)\n\nSet the default values of the WrapperCloseGapsParams object.\n\nParameters\n\ntarget: ScopeDefinition, optional\n\nScope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope.\n\ngap_size: float, optional\n\nMaximum gap size to be closed.\n\nmaterial_point_name: str, optional\n\nMaterial point name near the gaps to be closed.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created patching surfaces.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading.\n\ncreate_new_part: bool, optional\n\nCreates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\nresolution_factor: float, optional\n\nFactor to resolve the smallest gap for the given gap size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySelfIntersectionParams.html#searchbyselfintersectionparams","title":"SearchBySelfIntersectionParams","text":"SearchBySelfIntersectionParams\n\n\n\nclass ansys.meshing.prime.SearchBySelfIntersectionParams(model=None, json_data=None, **kwargs)\n\nParameters to search by face element intersection.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchBySelfIntersectionParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchBySelfIntersectionParams object with provided parameters.\n\nExamples\n\n>>> search_by_self_intersection_params = prime.SearchBySelfIntersectionParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.delete_unwetted_surfaces.html#delete_unwetted_surfaces","title":"delete_unwetted_surfaces","text":"delete_unwetted_surfaces\n\n\n\nSurfaceUtilities.delete_unwetted_surfaces(face_zonelet_ids, live_material_point_names, params)\n\nDelete unwetted surfaces based on material point list.\n\nParameters\n\nface_zonelet_ids\n\nIterable[python:int]\n\nIds of face zonelets.\n\nlive_material_point_names\n\nList[python:str]\n\nNames of material points.\n\nparams\n\nDeleteUnwettedParams\n\nDeleteUnwettedParams to define material points.\n\nReturns\n\n:\n\n\n\nDeleteUnwettedResult\n\nReturns a DeleteUnwettedResult.\n\nReturn type\n\nDeleteUnwettedResult\n\nExamples\n\n>>> result = surf_utils.delete_unwetted_surfaces(zonelets, live_mpt_names, prime.DeleteUnwettedParams(model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_edges_of_label_name_pattern.html#get_topo_edges_of_label_name_pattern","title":"get_topo_edges_of_label_name_pattern","text":"get_topo_edges_of_label_name_pattern\n\n\n\nPart.get_topo_edges_of_label_name_pattern(label_name_pattern, name_pattern_params)\n\nGet topoedge ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern\n\npython:str\n\nName pattern to be matched with label name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match label name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of topoedges.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges = part.get_topo_edges_of_label_name_pattern(\n>>>                   label_name_pattern = \"edge_label\",\n>>>                   params = prime.NamePatternParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_pipe_tee_scdoc.html#download_pipe_tee_scdoc","title":"download_pipe_tee_scdoc","text":"download_pipe_tee_scdoc\n\n\n\nansys.meshing.prime.examples.download_pipe_tee_scdoc(destination=None, force=False)\n\nDownload the SCDOC file for the pipe tee example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.ALLALL.html#allall","title":"ALLALL","text":"ALLALL\n\n\n\nMergeNodeType.ALLALL = 0\n\nMerge any type of nodes with any type of nodes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPair.type.html#type","title":"type","text":"type\n\n\n\nproperty BCPair.type: BCPairType\n\nOption to specify boundary condition pair type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.html#labeltozonemethod","title":"LabelToZoneMethod","text":"LabelToZoneMethod\n\n\n\nclass ansys.meshing.prime.lucid.LabelToZoneMethod(*values)\n\nProvides for creating zones from labels.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveResult.remaining_skew_faces.html#remaining_skew_faces","title":"remaining_skew_faces","text":"remaining_skew_faces\n\n\n\nproperty WrapperImproveResult.remaining_skew_faces: int\n\nNumber of remaining skew faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.local_model.html#local_model","title":"local_model","text":"local_model\n\n\n\nansys.meshing.prime.local_model()\n\nGet local model\n:rtype: Model\n\nUSE IN DEVELOPMENT ONLY\n\nThis imports the Ansys Prime Server environment into the Python process. It will\nerror unless proper environment is set up to support Ansys Prime Server.\n\nReturns\n\n:\n\n\n\nModel\n\nThe local model"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nWarningCode.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_volumes_of_zone_name_pattern.html#get_topo_volumes_of_zone_name_pattern","title":"get_topo_volumes_of_zone_name_pattern","text":"get_topo_volumes_of_zone_name_pattern\n\n\n\nPart.get_topo_volumes_of_zone_name_pattern(zone_name_pattern, name_pattern_params)\n\nGets the topovolume ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern\n\npython:str\n\nName pattern to be matched with zone name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match zone name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns topovolume ids of zones with name matching the name pattern.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_volumes = part.get_topo_volumes_of_zone_name_pattern(zone_name_pattern = \"solid*\",\nname_pattern_params = prime.NamePatternParams(model = model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nAdvancedSurferSetup.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.read.html#read","title":"read","text":"read\n\n\n\nMesh.read(file_name, append=False, cad_reader_route=None)\n\nRead or import files of different formats based on file extensions.\n\nThis method supports reading and importing these file formats:\n\nReading PyPrimeMesh’s native PMDAT files\n\nImporting various types of CAD files\n\nImporting Fluent Meshing’s MSH files\n\nImporting Fluent’s CAS files\n\nImporting MAPDL’s CDB files\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the file to read or import.\n\nappend\n\nbool, optional\n\nWhether to append to the file. The default is False, in which case\n\nthe file is overwritten.\n\ncad_reader_route\n\nprime.CadReaderRoute, optional\n\nRoute of the CAD reader. The default is None."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.read.html#examples-using-meshread","title":"read > Examples using Mesh.read","text":"Examples using Mesh.read\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchByThinStripParams.print_default()\n\nPrint the default values of SearchByThinStripParams object.\n\nExamples\n\n>>> SearchByThinStripParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateMaterialPointParams.print_default()\n\nPrint the default values of CreateMaterialPointParams object.\n\nExamples\n\n>>> CreateMaterialPointParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.BYFACELABEL.html#byfacelabel","title":"BYFACELABEL","text":"BYFACELABEL\n\n\n\nVolumeNamingType.BYFACELABEL = 1\n\nOption to use face label name as source to name volume zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CellZoneletType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.triangulate_face_zonelets.html#triangulate_face_zonelets","title":"triangulate_face_zonelets","text":"triangulate_face_zonelets\n\n\n\nSurfaceUtilities.triangulate_face_zonelets(face_zonelet_ids, params)\n\nSplit faces in zonelets to get triangular faces.\n\nParameters\n\nface_zonelet_ids\n\nIterable[python:int]\n\nIds of face zonelets.\n\nparams\n\nTriangulateParams\n\nParameters to control the split operation.\n\nReturns\n\n:\n\n\n\nTriangulateResults\n\nReturns the TriangulateResults.\n\nReturn type\n\nTriangulateResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> result = surf_utils.triangulate_face_zonelets(face_zonelet_ids, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nScopeExpressionType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.control_points.html#control_points","title":"control_points","text":"control_points\n\n\n\nproperty IGAUnstructuredSplineSurf.control_points: Iterable[float]\n\nCoordinates of the control points of the spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ExtractVolumesResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshInfo.get_face_and_edge_connectivity.html#get_face_and_edge_connectivity","title":"get_face_and_edge_connectivity","text":"get_face_and_edge_connectivity\n\n\n\nMeshInfo.get_face_and_edge_connectivity(part_ids, params)\n\nGets the connectivity of face and edge zonelets of the given part ids.\n\nConnectivity result is used in graphics rendering.\n\nParameters\n\npart_ids\n\nIterable[python:int]\n\nIds of the part.\n\nparams\n\nFaceAndEdgeConnectivityParams\n\nParameters to get connectivity of face zonelets and edge zonelets.\n\nReturns\n\n:\n\n\n\nFaceAndEdgeConnectivityResults\n\nReturns the FaceAndEdgeConnectivityResults.\n\nReturn type\n\nFaceAndEdgeConnectivityResults\n\nExamples\n\n>>> mesh_info = prime.MeshInfo(model)\n>>> part_ids = [part.id for part in model.parts]\n>>> result = mesh_info.get_face_and_edge_connectivity(part_ids,\n>>>                  prime.FaceAndEdgeConnectivityParams(model =model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineTetMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic RefineTetMeshParams.set_default(nisr=None, niss=None, nist=None, tolerance=None)\n\nSet the default values of the RefineTetMeshParams object.\n\nParameters\n\nnisr: int, optional\n\nInterpolation elements in the local r-direction.\n\nniss: int, optional\n\nInterpolation elements in the local s-direction.\n\nnist: int, optional\n\nInterpolation elements in the local t-direction.\n\ntolerance: float, optional\n\nTolerance for boundary refinement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetFeatureRecoveriesResults.ids.html#ids","title":"ids","text":"ids\n\n\n\nproperty SetFeatureRecoveriesResults.ids: Iterable[int]\n\nIds of added feature recovery controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.degree_v.html#degree_v","title":"degree_v","text":"degree_v\n\n\n\nproperty UniformSolidSplineCreationParams.degree_v: int\n\nDegree in v direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nVolumeNamingType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.WRITINGCONTACTPAIRSSKIPPED.html#writingcontactpairsskipped","title":"WRITINGCONTACTPAIRSSKIPPED","text":"WRITINGCONTACTPAIRSSKIPPED\n\n\n\nWarningCode.WRITINGCONTACTPAIRSSKIPPED = 11102\n\nWriting of contact pairs skipped."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.generate_quads.html#generate_quads","title":"generate_quads","text":"generate_quads\n\n\n\nproperty OptimizeQuadMeshParams.generate_quads: bool\n\nOption to generate quadrilateral surface mesh.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MATERIALPOINTWITHGIVENNAMEDOESNTEXIST.html#materialpointwithgivennamedoesntexist","title":"MATERIALPOINTWITHGIVENNAMEDOESNTEXIST","text":"MATERIALPOINTWITHGIVENNAMEDOESNTEXIST\n\n\n\nErrorCode.MATERIALPOINTWITHGIVENNAMEDOESNTEXIST = 3301\n\nMaterial point with the given name does not exist."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_labels.html#get_labels","title":"get_labels","text":"get_labels\n\n\n\nPart.get_labels()\n\nGet all labels on entities of part.\n\nReturns\n\n:\n\n\n\nList[python:str]\n\nReturn labels on entities of part.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> part.get_labels()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_labels.html#examples-using-partget_labels","title":"get_labels > Examples using Part.get_labels","text":"Examples using Part.get_labels\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentCaseParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportFluentCaseParams.print_default()\n\nPrint the default values of ImportFluentCaseParams object.\n\nExamples\n\n>>> ImportFluentCaseParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.STANDARD.html#standard","title":"STANDARD","text":"STANDARD\n\n\n\nSeparateBlocksFormatType.STANDARD = 0\n\nStandard format for element blocks.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.origin.html#origin","title":"origin","text":"origin\n\n\n\nproperty MeshStackerParams.origin: Iterable[float]\n\nOrigin coordinate list of stacker."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlParams.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty PeriodicControlParams.angle: float\n\nAngle in degrees."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERINVALIDANGLES.html#surferinvalidangles","title":"SURFERINVALIDANGLES","text":"SURFERINVALIDANGLES\n\n\n\nErrorCode.SURFERINVALIDANGLES = 42\n\nInvalid Corner angle or min angle more than max angle specified for surface meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchBySpikeParams.print_default()\n\nPrint the default values of SearchBySpikeParams object.\n\nExamples\n\n>>> SearchBySpikeParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nEdgeConnectType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSizeFieldType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.BROKENLOOPTOPOFACES.html#brokenlooptopofaces","title":"BROKENLOOPTOPOFACES","text":"BROKENLOOPTOPOFACES\n\n\n\nTopoSearchField.BROKENLOOPTOPOFACES = 3\n\nDiagnoses topofaces with open or broken bounding edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckTopologyParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CheckTopologyParams.set_default(topo_search_field_mask=None)\n\nSet the default values of the CheckTopologyParams object.\n\nParameters\n\ntopo_search_field_mask: int, optional\n\nToposearch field option for topology check."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DUPLICATENODESFOUND.html#duplicatenodesfound","title":"DUPLICATENODESFOUND","text":"DUPLICATENODESFOUND\n\n\n\nErrorCode.DUPLICATENODESFOUND = 103\n\nDuplicate nodes found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.OUTERPANELSTIFFNESS.html#outerpanelstiffness","title":"OUTERPANELSTIFFNESS","text":"OUTERPANELSTIFFNESS\n\n\n\nCdbAnalysisType.OUTERPANELSTIFFNESS = 1\n\nOption to select Outer Panel Stiffness as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCellQualityMeasure.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSplineFeatureCaptureType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapSearchResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic OverlapSearchResults.print_default()\n\nPrint the default values of OverlapSearchResults object.\n\nExamples\n\n>>> OverlapSearchResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SHELLBLNOMESH.html#shellblnomesh","title":"SHELLBLNOMESH","text":"SHELLBLNOMESH\n\n\n\nErrorCode.SHELLBLNOMESH = 62\n\nShellBL is not supported for unmeshed topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.suggested_part_name.html#suggested_part_name","title":"suggested_part_name","text":"suggested_part_name\n\n\n\nproperty WrapperCloseGapsParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectHolesParams.max_radius_circular_holes.html#max_radius_circular_holes","title":"max_radius_circular_holes","text":"max_radius_circular_holes\n\n\n\nproperty DetectHolesParams.max_radius_circular_holes: float\n\nMaximum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INTERSECTIONINTARGETVOLUMES.html#intersectionintargetvolumes","title":"INTERSECTIONINTARGETVOLUMES","text":"INTERSECTIONINTARGETVOLUMES\n\n\n\nErrorCode.INTERSECTIONINTARGETVOLUMES = 48\n\nFound overlapping or intersecting target volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCellZoneletType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.repair_mode.html#repair_mode","title":"repair_mode","text":"repair_mode\n\n\n\nproperty ScaffolderParams.repair_mode: ScaffolderRepairMode\n\nDefines the mode to be used during repair or connect.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.html#edgeconnecttype","title":"EdgeConnectType","text":"EdgeConnectType\n\n\n\nclass ansys.meshing.prime.EdgeConnectType(*values)\n\nEdge connect type to define the type of connection between edges .\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ReadSizeFieldParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ReadSizeFieldParams.print_default()\n\nPrint the default values of ReadSizeFieldParams object.\n\nExamples\n\n>>> ReadSizeFieldParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetScopeResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SetScopeResults.error_code: ErrorCode\n\nError code associated with the set scope."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LeakPreventionParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic LeakPreventionParams.print_default()\n\nPrint the default values of LeakPreventionParams object.\n\nExamples\n\n>>> LeakPreventionParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.html#boundingbox","title":"BoundingBox","text":"BoundingBox\n\n\n\nclass ansys.meshing.prime.BoundingBox(model=None, xmin=None, ymin=None, zmin=None, xmax=None, ymax=None, zmax=None, json_data=None, **kwargs)\n\nProvides information about the definition of a bounding box.\n\nParameters\n\nmodel: Model\n\nModel to create a BoundingBox object with default parameters.\n\nxmin: float, optional\n\nMinimal X coordinate of the bounding box.\n\nymin: float, optional\n\nMinimal Y coordinate of the bounding box.\n\nzmin: float, optional\n\nMinimal Z coordinate of the bounding box.\n\nxmax: float, optional\n\nMaximal X coordinate of the bounding box.\n\nymax: float, optional\n\nMaximal Y coordinate of the bounding box.\n\nzmax: float, optional\n\nMaximal Z coordinate of the bounding box.\n\njson_data: dict, optional\n\nJSON dictionary to create a BoundingBox object with provided parameters.\n\nExamples\n\n>>> bounding_box = prime.BoundingBox(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.html#examples-using-boundingbox","title":"BoundingBox > Examples using BoundingBox","text":"Examples using BoundingBox\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERPATCHFLOWREGIONS_INVALIDBASESIZE.html#wrapperpatchflowregions_invalidbasesize","title":"WRAPPERPATCHFLOWREGIONS_INVALIDBASESIZE","text":"WRAPPERPATCHFLOWREGIONS_INVALIDBASESIZE\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_INVALIDBASESIZE = 3448\n\nBase size specified for patching should be positive double.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.get_geometry_scope.html#get_geometry_scope","title":"get_geometry_scope","text":"get_geometry_scope\n\n\n\nWrapperControl.get_geometry_scope()\n\nGets geometry scope of wrapper control.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns ScopeDefinition to scope entities from wrapper control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> geom_scope = wrapper_control.get_geometry_scope()"},{"objectID":"Home","href":"examples/gallery_examples/gallery/index.html#examples","title":"Examples","text":"Examples\n\nThese examples show how to use PyPrimeMesh to prepare meshes.\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_12_import_from_pygeometry.py\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.DownloadManager.clear_download_cache.html#clear_download_cache","title":"clear_download_cache","text":"clear_download_cache\n\n\n\nDownloadManager.clear_download_cache()\n\nRemove downloaded example files from the local path."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteResults.set_default(error_code=None)\n\nSet the default values of the DeleteResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseParams.preserve_quality.html#preserve_quality","title":"preserve_quality","text":"preserve_quality\n\n\n\nproperty CollapseParams.preserve_quality: bool\n\nOption to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#mesh-a-mixing-elbow-for-a-flow-analysis","title":"Mesh a mixing elbow for a flow analysis","text":"Mesh a mixing elbow for a flow analysis\n\nSummary: This example demonstrates how to mesh a mixing elbow for a flow analysis."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#objective","title":"Mesh a mixing elbow for a flow analysis > Objective","text":"Objective\n\nThis example meshes a mixing elbow with polyhedral elements and wall boundary\nlayer refinement. It uses several meshing utilities available in the lucid class for\nconvenience and ease."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#procedure","title":"Mesh a mixing elbow for a flow analysis > Procedure","text":"Procedure\n\nLaunch Ansys Prime Server and instantiate meshing utilities from the lucid class.\n\nImport the geometry and create face zones from labels imported from the geometry.\n\nSurface mesh geometry with curvature sizing.\n\nVolume mesh with polyhedral elements and boundary layer refinement.\n\nPrint statistics on the generated mesh.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#launch-ansys-prime-server","title":"Mesh a mixing elbow for a flow analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#import-geometry","title":"Mesh a mixing elbow for a flow analysis > Import geometry","text":"Import geometry\n\nDownload the elbow geometry (FMD) file exported by SpaceClaim.\nImport the geometry.\nCreate face zones from labels imported from the geometry for use in Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#surface-mesh","title":"Mesh a mixing elbow for a flow analysis > Surface mesh","text":"Surface mesh\n\nSurface mesh the geometry setting minimum and maximum sizing\nto use for curvature refinement."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#volume-mesh","title":"Mesh a mixing elbow for a flow analysis > Volume mesh","text":"Volume mesh\n\nVolume mesh with polyhedral elements and boundary layer refinement.\nFill the volume with polyhedral and prism mesh\nspecifying the location and number of layers for prisms.\nUse expressions to define the surfaces to have prisms grown\nwhere * !inlet !outlet states all not inlet or outlet.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#print-mesh-statistics","title":"Mesh a mixing elbow for a flow analysis > Print mesh statistics","text":"Print mesh statistics"},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#write-mesh","title":"Mesh a mixing elbow for a flow analysis > Write mesh","text":"Write mesh\n\nWrite a CAS file for use in the Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#exit-pyprimemesh","title":"Mesh a mixing elbow for a flow analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (0 minutes 20.037 seconds)\n\n\n\nDownload Jupyter notebook: 02_lucid_mixing_elbow.ipynb\n\nDownload Python source code: 02_lucid_mixing_elbow.py\n\nDownload zipped: 02_lucid_mixing_elbow.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FixInvalidNormalNodeResults.print_default()\n\nPrint the default values of FixInvalidNormalNodeResults object.\n\nExamples\n\n>>> FixInvalidNormalNodeResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectHolesParams.max_hole_length.html#max_hole_length","title":"max_hole_length","text":"max_hole_length\n\n\n\nproperty DetectHolesParams.max_hole_length: float\n\nMaximum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSweepMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MultiZoneSweepMeshParams.print_default()\n\nPrint the default values of MultiZoneSweepMeshParams object.\n\nExamples\n\n>>> MultiZoneSweepMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControlSummaryResult.html#sizecontrolsummaryresult","title":"SizeControlSummaryResult","text":"SizeControlSummaryResult\n\n\n\nclass ansys.meshing.prime.SizeControlSummaryResult(model=None, message=None, json_data=None, **kwargs)\n\nResults of size control summary.\n\nParameters\n\nmodel: Model\n\nModel to create a SizeControlSummaryResult object with default parameters.\n\nmessage: str, optional\n\nSize control summary text.\n\njson_data: dict, optional\n\nJSON dictionary to create a SizeControlSummaryResult object with provided parameters.\n\nExamples\n\n>>> size_control_summary_result = prime.SizeControlSummaryResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSpline.create_boundary_fitted_spline.html#create_boundary_fitted_spline","title":"create_boundary_fitted_spline","text":"create_boundary_fitted_spline\n\n\n\nBoundaryFittedSpline.create_boundary_fitted_spline(part_id, cell_zonelet_ids, boundary_fitted_spline_params)\n\nCreate boundary fitted spline for structured hex-mesh.\n\nThe hex-mesh can be structured in blocks but must be conformally connected.\nThat is, each block must have six sided volume and must be connected to other blocks through unique face.\nThe degree and number of control points of the spline can be set in the fitting parameter structure.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\ncell_zonelet_ids\n\nIterable[python:int]\n\nIds of the cell zonelets on which spline will be fit.\n\nboundary_fitted_spline_params\n\nBoundaryFittedSplineParams\n\nStructure containing spline fitting parameters.\n\nReturns\n\n:\n\n\n\nIGAResults\n\nReturns the IGAResults.\n\nReturn type\n\nIGAResults\n\nExamples\n\n>>> from ansys.meshing.prime import BoundaryFittedSpline\n>>> #connect client to server and get model from it\n>>> client = Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> boundary_fitted_spline = BoundaryFittedSpline(model = model)\n>>> results = boundary_fitted_spline.create_boundary_fitted_spline(part_id, cell_zonelet_ids, boundary_fitted_spline_params)"},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#wrap-a-toy-car-for-a-flow-analysis","title":"Wrap a toy car for a flow analysis","text":"Wrap a toy car for a flow analysis\n\nSummary: This example demonstrates how to wrap a toy car for a flow analysis."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#objective","title":"Wrap a toy car for a flow analysis > Objective","text":"Objective\n\nThis example wraps a toy car and volume meshes with a tetrahedral mesh with prisms.\nIt uses several meshing utilities available in the lucid class for convenience and ease."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#procedure","title":"Wrap a toy car for a flow analysis > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance.\n\nInstantiate the meshing utilities from the lucid class.\n\nImport the geometry.\n\nCoarse wrap parts with holes to clean up.\n\nExtract the fluid region using a wrapper.\n\nCheck that the wrap surface is closed and that the quality is suitable.\n\nMesh only fluid with tetrahedral elements and boundary layer refinement.\n\nCreate face zones from labels imported from the geometry.\n\nPrint statistics on the generated mesh.\n\nImprove the mesh quality.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#launch-ansys-prime-server","title":"Wrap a toy car for a flow analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules and launch an instance of Ansys Prime Server.\nFrom the PyPrimeMesh client get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#import-geometry","title":"Wrap a toy car for a flow analysis > Import geometry","text":"Import geometry\n\nDownload the toy car geometry (FMD) file exported by SpaceClaim.\nImport the geometry and display everything except the tunnel.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#close-holes","title":"Wrap a toy car for a flow analysis > Close holes","text":"Close holes\n\nSeveral parts are open surfaces (with holes).\nCoarse wrap to close the holes and delete the originals.\nYou could use leakage detection to close these regions.\nThis example uses a coarse wrap and disables feature edge refinement to walk over the holes.\nAs this is not the final wrap, this example does not remesh after the wrap.\nWrapping each object in turn avoids coarse wrap bridging across narrow gaps.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#extract-fluid-using-a-wrapper","title":"Wrap a toy car for a flow analysis > Extract fluid using a wrapper","text":"Extract fluid using a wrapper\n\nWrap the full model and extract the largest internal region as the fluid.\nCreate edges at intersecting regions to improve the quality.\nRefine mesh to avoid contact between different parts.\nThe new wrap object replaces all original geometry unless keep_input\nis set to True.  Volumes are generated from the wrap for use later."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#check-wrap","title":"Wrap a toy car for a flow analysis > Check wrap","text":"Check wrap\n\nCheck that the wrap surface is closed and that the quality is suitable to use\nas surface mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#create-zones","title":"Wrap a toy car for a flow analysis > Create zones","text":"Create zones\n\nCreate face zones from labels imported from the geometry that can be used\nin the solver to define boundary conditions.\nIf specifying individual labels to create zones, the order is important.\nThe last label in the list wins.\nProviding no label_expression flattens all labels into zones.\nFor example, if LabelA and LabelB are overlapping, three zones are\ncreated: LabelA, LabelB, and LabelA_LabelB."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#volume-mesh","title":"Wrap a toy car for a flow analysis > Volume mesh","text":"Volume mesh\n\nMesh only fluid volume with tetrahedral elements and boundary layer refinement.\nThis example does not mesh other volumetric regions.\nVolume zones exist already for volume meshing and passing to the solver.\nThe largest face zonelet is used by default to define volume zone names at creation.\nAfter volume meshing, you can see that you have a cell zonelet in the part summary.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#print-mesh-stats","title":"Wrap a toy car for a flow analysis > Print mesh stats","text":"Print mesh stats\n\nPrint statistics on the generated mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#improve-quality","title":"Wrap a toy car for a flow analysis > Improve quality","text":"Improve quality\n\nBecause the mesh quality is poor, use the improve_by_auto_node_move method\nto improve the mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#write-mesh","title":"Wrap a toy car for a flow analysis > Write mesh","text":"Write mesh\n\nWrite a CAS file for use in the Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#exit-pyprimemesh","title":"Wrap a toy car for a flow analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (3 minutes 30.556 seconds)\n\n\n\nDownload Jupyter notebook: 04_lucid_toy_car.ipynb\n\nDownload Python source code: 04_lucid_toy_car.py\n\nDownload zipped: 04_lucid_toy_car.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.refinement_fraction_w.html#refinement_fraction_w","title":"refinement_fraction_w","text":"refinement_fraction_w\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_w: float\n\nFraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByIntersectionResults.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty SearchByIntersectionResults.n_found: int\n\nNumber of face elements identified by intersection(face elements interfering with each other)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.VT_SKIPPEDPROTECTEDENTITIES.html#vt_skippedprotectedentities","title":"VT_SKIPPEDPROTECTEDENTITIES","text":"VT_SKIPPEDPROTECTEDENTITIES\n\n\n\nWarningCode.VT_SKIPPEDPROTECTEDENTITIES = 100001\n\nInput contains protected entities which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddLabelResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic AddLabelResults.set_default(error_code=None)\n\nSet the default values of the AddLabelResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the add label operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesher.optimize_quad_mesh.html#optimize_quad_mesh","title":"optimize_quad_mesh","text":"optimize_quad_mesh\n\n\n\nAutoQuadMesher.optimize_quad_mesh(part_id, topo_face_ids, params)\n\nOptimize quad faces with given parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of the Part.\n\ntopo_face_ids\n\nIterable[python:int]\n\nIds of topofaces.\n\nparams\n\nOptimizeQuadMeshParams\n\nParameters of optimize quad mesh.\n\nReturns\n\n:\n\n\n\nAutoQuadMesherResults\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.optimize_quad_mesh(part_id, topo_face_ids, params);"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.HYBRID.html#hybrid","title":"HYBRID","text":"HYBRID\n\n\n\nTrimmedSolidSplineCutMode.HYBRID = 0\n\nThis is faster mode and may defeature the input mesh to represent each subdomain.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.FREETOALL.html#freetoall","title":"FREETOALL","text":"FREETOALL\n\n\n\nEdgeMergeControl.FREETOALL = 2\n\nAllows to merge only free edges into all edges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.aggressively.html#aggressively","title":"aggressively","text":"aggressively\n\n\n\nproperty WrapperImproveQualityParams.aggressively: bool\n\nControl to improve surfaces aggressively or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.print_mesh.html#print_mesh","title":"print_mesh","text":"print_mesh\n\n\n\nproperty Part.print_mesh: bool\n\nWhether the mesh summary is set to print along with the part summary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.custom_normal_angle_tolerance.html#custom_normal_angle_tolerance","title":"custom_normal_angle_tolerance","text":"custom_normal_angle_tolerance\n\n\n\nproperty CadRefacetingParams.custom_normal_angle_tolerance: float\n\nSet custom tolerance for normal angle in degree."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.FINE.html#fine","title":"FINE","text":"FINE\n\n\n\nCadRefacetingResolution.FINE = 2\n\nDenotes fine resolution of CAD faceting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nVolumeNamingType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCadRefacetingMaxEdgeSizeLimit.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VolumetricSizeFieldComputeResults.set_default(error_code=None, size_field_id=None)\n\nSet the default values of the VolumetricSizeFieldComputeResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the compute volumetric size field operation.\n\nsize_field_id: int, optional\n\nId of the computed size field."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsResults.n_deleted.html#n_deleted","title":"n_deleted","text":"n_deleted\n\n\n\nproperty DeleteFringesAndOverlapsResults.n_deleted: int\n\nNumber of face elements deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VOLUMESEARCHFAILED.html#volumesearchfailed","title":"VOLUMESEARCHFAILED","text":"VOLUMESEARCHFAILED\n\n\n\nErrorCode.VOLUMESEARCHFAILED = 2851\n\nVolume search failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VolumeQualitySummaryParams.set_default(cell_quality_measures=None, scope=None, quality_limit=None)\n\nSet the default values of the VolumeQualitySummaryParams object.\n\nParameters\n\ncell_quality_measures: List[CellQualityMeasure], optional\n\nList of cell quality measures for volume quality diagnostics.\n\nscope: ScopeDefinition, optional\n\nScope of the cell zonelets for volume quality diagnostics.\n\nquality_limit: Iterable[float], optional\n\nQuality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.real.html#real","title":"real","text":"real\n\n\n\nVolumeNamingType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nZoneType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteUnwettedResult.html#deleteunwettedresult","title":"DeleteUnwettedResult","text":"DeleteUnwettedResult\n\n\n\nclass ansys.meshing.prime.DeleteUnwettedResult(model=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated with delete unwetted surfaces operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteUnwettedResult object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with delete unwetted surfaces operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteUnwettedResult object with provided parameters.\n\nExamples\n\n>>> delete_unwetted_result = prime.DeleteUnwettedResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nWrapRegion.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nJoinSeparateMethod.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.FREE.html#free","title":"FREE","text":"FREE\n\n\n\nBodyQueryType.FREE = 1\n\nReturns only free entities in part.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_active_volumetric_size_fields.html#get_active_volumetric_size_fields","title":"get_active_volumetric_size_fields","text":"get_active_volumetric_size_fields\n\n\n\nModel.get_active_volumetric_size_fields()\n\nGet the active sizefield ids.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the list of active sizefield ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> model = client.model\n>>> active_size_field_ids = model.get_active_volumetric_size_fields()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetNameResults.html#setnameresults","title":"SetNameResults","text":"SetNameResults\n\n\n\nclass ansys.meshing.prime.SetNameResults(model=None, warning_code=None, assigned_name=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with the set name.\n\nParameters\n\nmodel: Model\n\nModel to create a SetNameResults object with default parameters.\n\nwarning_code: WarningCode, optional\n\nWarning code associated with the set name of given entity.\n\nassigned_name: str, optional\n\nAssigned name of given entity.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SetNameResults object with provided parameters.\n\nExamples\n\n>>> set_name_results = prime.SetNameResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SCALINGFAILED.html#scalingfailed","title":"SCALINGFAILED","text":"SCALINGFAILED\n\n\n\nErrorCode.SCALINGFAILED = 3001\n\nScaling failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod EdgeMergeControl.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SubtractZoneletsResults.error_code: ErrorCode\n\nError Code associated with subtract operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportLSDynaKeywordFileParams.print_default()\n\nPrint the default values of ExportLSDynaKeywordFileParams object.\n\nExamples\n\n>>> ExportLSDynaKeywordFileParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.export_lsdyna_keyword_file.html#export_lsdyna_keyword_file","title":"export_lsdyna_keyword_file","text":"export_lsdyna_keyword_file\n\n\n\nFileIO.export_lsdyna_keyword_file(file_name, params)\n\nExport FEA LS-DYNA Keyword file for solid, surface mesh, or both.\n\nParameters\n\nfile_name\n\npython:str\n\nName of the file.\n\nparams\n\nExportLSDynaKeywordFileParams\n\nParameters for FEA LS-DYNA Keyword file export.\n\nReturns\n\n:\n\n\n\nExportLSDynaResults\n\nReturns ExportLSDynaResults.\n\nReturn type\n\nExportLSDynaResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.export_lsdyna_keyword_file(\n    file_name, ExportLSDynaKeywordFileParams(model=model)\n)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchParams.html#stitchparams","title":"StitchParams","text":"StitchParams\n\n\n\nclass ansys.meshing.prime.StitchParams(model=None, tolerance=None, use_absolute_tolerance=None, remesh=None, enable_multi_threading=None, type=None, json_data=None, **kwargs)\n\nParameters used for stitch operation.\n\nParameters\n\nmodel: Model\n\nModel to create a StitchParams object with default parameters.\n\ntolerance: float, optional\n\nDistance tolerance for stitching boundaries.\n\nuse_absolute_tolerance: bool, optional\n\nTrue if tolerance provided is absolute value.\n\nremesh: bool, optional\n\nRemesh at stitch connection.\n\nenable_multi_threading: bool, optional\n\nOption to run stitch in parallel using multithread.\n\ntype: StitchType, optional\n\nStitch type depending on nature of surface boundary edges to be stitched.\n\njson_data: dict, optional\n\nJSON dictionary to create a StitchParams object with provided parameters.\n\nExamples\n\n>>> stitch_params = prime.StitchParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.multi_zone_controls.html#multi_zone_controls","title":"multi_zone_controls","text":"multi_zone_controls\n\n\n\nproperty ControlData.multi_zone_controls: List[MultiZoneControl]\n\nGet the multizone controls.\n\nReturns\n\nList[MultiZoneControl]\n\nReturns the list of multizone controls.\n\nExamples\n\n>>> multi_zone_control = model.control_data.multi_zone_controls"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nScopeEvaluationType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartialDefeatureParams.merge_edge_allow_self_close.html#merge_edge_allow_self_close","title":"merge_edge_allow_self_close","text":"merge_edge_allow_self_close\n\n\n\nproperty PartialDefeatureParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetMeshSplineParams.decimation_factor.html#decimation_factor","title":"decimation_factor","text":"decimation_factor\n\n\n\nproperty TetMeshSplineParams.decimation_factor: float\n\nDecimation factor used in meshing of the solid spline.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEZONELETSCONNECTEDTOCELLS.html#deletezoneletsconnectedtocells","title":"DELETEZONELETSCONNECTEDTOCELLS","text":"DELETEZONELETSCONNECTEDTOCELLS\n\n\n\nErrorCode.DELETEZONELETSCONNECTEDTOCELLS = 3204\n\nCannot delete zonelets connected to volume mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMaterialPointResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteMaterialPointResults.set_default(error_code=None)\n\nSet the default values of the DeleteMaterialPointResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.check_interior.html#check_interior","title":"check_interior","text":"check_interior\n\n\n\nproperty FuseParams.check_interior: bool\n\nOption to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty PrismControlGrowthParams.growth_rate: float\n\nGrowth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IMPORTABAQUSFAILEDDURINGMESHCREATION.html#importabaqusfailedduringmeshcreation","title":"IMPORTABAQUSFAILEDDURINGMESHCREATION","text":"IMPORTABAQUSFAILEDDURINGMESHCREATION\n\n\n\nErrorCode.IMPORTABAQUSFAILEDDURINGMESHCREATION = 16202\n\nImport Abaqus failed. Failed to create mesh entities.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nTrimmedSolidSplineCutMode.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportMapdlCdbParams.print_default()\n\nPrint the default values of ExportMapdlCdbParams object.\n\nExamples\n\n>>> ExportMapdlCdbParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.shell_bl_controls.html#shell_bl_controls","title":"shell_bl_controls","text":"shell_bl_controls\n\n\n\nproperty ControlData.shell_bl_controls: List[ShellBLControl]\n\nGet the shell bl controls.\n\nReturns\n\nList[ShellBLControl]\n\nList of shell bl controls.\n\nExamples\n\n>>> shell_bl_control = model.control_data.shell_bl_controls"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.html#mergenodetype","title":"MergeNodeType","text":"MergeNodeType\n\n\n\nclass ansys.meshing.prime.MergeNodeType(*values)\n\nType of nodes to be merged.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSweepMeshParams.sweep_mesh_size.html#sweep_mesh_size","title":"sweep_mesh_size","text":"sweep_mesh_size\n\n\n\nproperty MultiZoneSweepMeshParams.sweep_mesh_size: float\n\nSweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nPrismControlOffsetType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateBOIParams.set_default(boi_type=None, perform_initial_wrap=None, wrap_size=None, flow_dir=None, side_scale=None, wake_scale=None, wake_levels=None, suggested_part_name=None, suggested_label_prefix=None, number_of_threads=None)\n\nSet the default values of the CreateBOIParams object.\n\nParameters\n\nboi_type: BOIType, optional\n\nType of BOI offsetting.\n\nperform_initial_wrap: bool, optional\n\nPerform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\nwrap_size: float, optional\n\nSet wrap size greater than the largest gap size in the input when performing_initial_wrap is true.\n\nflow_dir: FlowDirection, optional\n\nAssigns the offset direction of inflation.\n\nside_scale: float, optional\n\nBOI side scaling factor.\n\nwake_scale: float, optional\n\nBOI flow direction scaling factor.\n\nwake_levels: int, optional\n\nBOI levels.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created BOI surfaces.\n\nsuggested_label_prefix: str, optional\n\nSuggested label name for created BOI surfaces.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.get_source_scope.html#get_source_scope","title":"get_source_scope","text":"get_source_scope\n\n\n\nThinVolumeControl.get_source_scope()\n\nGets the source of thin volume control scope.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_source_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TransformParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TransformParams.print_default()\n\nPrint the default values of TransformParams object.\n\nExamples\n\n>>> TransformParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTool.html#deletetool","title":"DeleteTool","text":"DeleteTool\n\n\n\nclass ansys.meshing.prime.DeleteTool(model)\n\nPerforms various delete operation. For example, delete fringes and overlapping faces.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create DeleteTool object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nAdvancedSurferSetup.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#mesh-a-generic-pcb-geometry-with-multiple-hexa-layers","title":"Mesh a generic PCB geometry with multiple hexa layers","text":"Mesh a generic PCB geometry with multiple hexa layers\n\nSummary: This example demonstrates how to set the base mesh size and number of\nlayers for each solid in a generic PCB geometry and then generate a mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#objective","title":"Mesh a generic PCB geometry with multiple hexa layers > Objective","text":"Objective\n\nThe example uses PyPrimeMesh to discretize a PCB CAD geometry by means of the\nstacker technology. You can easily set up the mesh size of the base face (xy plane\nin this example) and the number of mesh layers along the sweep direction (z axis in this example).\nThe CAD edges along the z direction are assigned with a named selection at a CAD level in Ansys\nDiscovery/SpaceClaim.\n\nThe following image provides a snapshot of the Discovery tree to help you to understand the model’s\norganization. Share topology in Discovery/SpaceClaim guarantees the generation of a conformal mesh\nbetween the solids. Named selections of edges allow you to specify the number of mesh elements to\ngenerate along the sweep direction. To simplify the process and enhance convenience, this example\nuses multiple meshing utilities provided in the lucid class.\n\nThe resulting mesh with three layers per solid looks like this:"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#procedure","title":"Mesh a generic PCB geometry with multiple hexa layers > Procedure","text":"Procedure\n\nImport the fundamental libraries that are necessary to run the script.\n\nLaunch an Ansys Prime Server instance.\n\nInstantiate the meshing utilities from the lucid class.\n\nDefine the base mesh size and number of layers along the sweep direction.\n\nImport the CAD geometry.\n\nDefine the edge sizing along the sweep direction using existing edge named selections.\n\nDefine the parameters for the volume sweeper.\n\nSet up, generate, and mesh the base face.\n\nStack the base face along the sweep direction.\n\nSet up the zone naming before the mesh output.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#import-all-necessary-modules","title":"Mesh a generic PCB geometry with multiple hexa layers > Import all necessary modules","text":"Import all necessary modules\n\nNotice that you must install the PyVista library to be able to run the visualization\ntools included in this script."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#launch-prime-server-and-instantiate-the-lucid-class","title":"Mesh a generic PCB geometry with multiple hexa layers > Launch Prime server and instantiate the lucid class","text":"Launch Prime server and instantiate the lucid class\n\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#define-cad-file-and-mesh-settings","title":"Mesh a generic PCB geometry with multiple hexa layers > Define CAD file and mesh settings","text":"Define CAD file and mesh settings\n\nDefine the number of layers per solid.\nDefine the size in mm of the quad-dominant mesh on the base size.\nDefine the path to the CAD file to mesh.\nDownload the example CAD file using the prime.examples function. Otherwise,\nwrite the path to the desired CAD file on your machine. Supported file types\nare SCDOC, DSCO, and PMDB."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#import-geometry","title":"Mesh a generic PCB geometry with multiple hexa layers > Import geometry","text":"Import geometry\n\nImport the geometry into Prime server.\nUse the Workbench CadReaderRoute to ensure that the shared topology is kept."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#display-the-imported-cad-in-a-pyvista-window","title":"Mesh a generic PCB geometry with multiple hexa layers > Display the imported CAD in a PyVista window","text":"Display the imported CAD in a PyVista window\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#define-edge-sizing-constraints","title":"Mesh a generic PCB geometry with multiple hexa layers > Define edge sizing constraints","text":"Define edge sizing constraints\n\nSet generic global sizing from 0.002mm to 2mm.\nExtract the the edge’s length from the named selections, such as “edge_1_0.50_mm”\n(extract 0.5 mm length) or “edge_23_0.27_mm” (extract 0.27mm length).\nOn each edge, assign a size equal to the edge’s length divided by the\npredefined number of layers per solid."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#define-controls-for-volume-sweeper","title":"Mesh a generic PCB geometry with multiple hexa layers > Define controls for volume sweeper","text":"Define controls for volume sweeper\n\nSet the sweep direction vector.\nSet up the geometric tolerances for lateral and stacking defeature.\nSelect the sweep direction as the z axis (0,0,1).\nAppend the IDs of the soft local sizings that have been previously defined on\nthe edges."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#set-up-generate-and-mesh-the-base-face","title":"Mesh a generic PCB geometry with multiple hexa layers > Set up, generate, and mesh the base face","text":"Set up, generate, and mesh the base face\n\nCreate a soft sizing control.\nAssign the previously defined base_face_size function to the soft sizing.\nCreate the base face.\nMesh the base face.\nDisplay the base face."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#display-the-meshed-base-face-in-a-pyvista-window","title":"Mesh a generic PCB geometry with multiple hexa layers > Display the meshed base face in a PyVista window","text":"Display the meshed base face in a PyVista window\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#stack-the-base-face-using-the-volume-sweeper","title":"Mesh a generic PCB geometry with multiple hexa layers > Stack the base face using the volume sweeper","text":"Stack the base face using the volume sweeper\n\nUse the volume sweeper to stack the base face along the previously defined sweep\ndirection.\nInclude the previously defined stacker parameters.\nDisplay the final volume mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#display-the-final-pcb-mesh-in-a-pyvista-window","title":"Mesh a generic PCB geometry with multiple hexa layers > Display the final PCB mesh in a PyVista window","text":"Display the final PCB mesh in a PyVista window\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#set-up-the-zone-naming-before-the-mesh-output","title":"Mesh a generic PCB geometry with multiple hexa layers > Set up the zone naming before the mesh output","text":"Set up the zone naming before the mesh output\n\nDelete the unnecessary topo entities.\nName the walls of solid as wall_solid. For example, if the solid’s name is A, then\nname the walls surrounding the solid wall_A).\nConvert the labels to mesh zones."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#mesh-output","title":"Mesh a generic PCB geometry with multiple hexa layers > Mesh output","text":"Mesh output\n\nCreate a temporary folder and use it to output the mesh to a CAS file."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#exit-pyprimemesh","title":"Mesh a generic PCB geometry with multiple hexa layers > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (1 minutes 8.914 seconds)\n\n\n\nDownload Jupyter notebook: 09_multi_layer_quad_mesh_pcb.ipynb\n\nDownload Python source code: 09_multi_layer_quad_mesh_pcb.py\n\nDownload zipped: 09_multi_layer_quad_mesh_pcb.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.imag.html#imag","title":"imag","text":"imag\n\n\n\nIntersectionMask.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_CREATELEADINGEDGEFAILED.html#vt_createleadingedgefailed","title":"VT_CREATELEADINGEDGEFAILED","text":"VT_CREATELEADINGEDGEFAILED\n\n\n\nErrorCode.VT_CREATELEADINGEDGEFAILED = 3610\n\nCreate leading edge operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposer.separate_faces_with_interior_edges.html#separate_faces_with_interior_edges","title":"separate_faces_with_interior_edges","text":"separate_faces_with_interior_edges\n\n\n\nVTComposer.separate_faces_with_interior_edges(topo_faces, params)\n\nSeparates the given topofaces having interior edges using the given VT Composer parameters.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of input topofaces.\n\nparams\n\nVTComposerParams\n\nVT composer parameters.\n\nReturns\n\n:\n\n\n\nVTComposerResults\n\nReturn results in VTComposerResults.\n\nReturn type\n\nVTComposerResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = vtcomposer.separate_faces_with_interior_edges([1,2,3,4,5], params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic AutoMeshResults.print_default()\n\nPrint the default values of AutoMeshResults object.\n\nExamples\n\n>>> AutoMeshResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TETIMPROVEFAILED.html#tetimprovefailed","title":"TETIMPROVEFAILED","text":"TETIMPROVEFAILED\n\n\n\nErrorCode.TETIMPROVEFAILED = 106\n\nTet improve failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleParams.html#topofillholeparams","title":"TopoFillHoleParams","text":"TopoFillHoleParams\n\n\n\nclass ansys.meshing.prime.TopoFillHoleParams(model=None, edges_to_exclude=None, suppress_boundary_after_hole_fill=None, fill_annular_hole=None, json_data=None, **kwargs)\n\nParameters used to fill holes in topology.\n\nParameters\n\nmodel: Model\n\nModel to create a TopoFillHoleParams object with default parameters.\n\nedges_to_exclude: Iterable[int], optional\n\nTopoEdges to be excluded for cap creation.\n\nsuppress_boundary_after_hole_fill: bool, optional\n\nOption to preserve or suppress hole-boundary after filling holes.\n\nfill_annular_hole: bool, optional\n\nOption for filling holes with annular bounding loops.\n\njson_data: dict, optional\n\nJSON dictionary to create a TopoFillHoleParams object with provided parameters.\n\nExamples\n\n>>> topo_fill_hole_params = prime.TopoFillHoleParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetScopeResults.html#setscoperesults","title":"SetScopeResults","text":"SetScopeResults\n\n\n\nclass ansys.meshing.prime.SetScopeResults(model=None, error_code=None, warning_code=None, json_data=None, **kwargs)\n\nResults associated with the set scope operation.\n\nParameters\n\nmodel: Model\n\nModel to create a SetScopeResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the set scope.\n\nwarning_code: WarningCode, optional\n\nWarning code associated with the set scope.\n\njson_data: dict, optional\n\nJSON dictionary to create a SetScopeResults object with provided parameters.\n\nExamples\n\n>>> set_scope_results = prime.SetScopeResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.GEOMETRIC.html#geometric","title":"GEOMETRIC","text":"GEOMETRIC\n\n\n\nSizeFieldType.GEOMETRIC = 0\n\nGeometric size field."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.max_quality.html#max_quality","title":"max_quality","text":"max_quality\n\n\n\nproperty SurfaceQualityResult.max_quality: float\n\nMaximum value of quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.pre_solution_settings.html#pre_solution_settings","title":"pre_solution_settings","text":"pre_solution_settings\n\n\n\nproperty ExportMapdlCdbParams.pre_solution_settings: str\n\nMAPDL Settings in CDB format to be added before the solution block in the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.html#surfacesearch","title":"SurfaceSearch","text":"SurfaceSearch\n\n\n\nclass ansys.meshing.prime.SurfaceSearch(model)\n\nSurfaceSearch allows you to check surface mesh quality.\n\nSurfaceSearch performs surface mesh quality check based on different face quality measures.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create SurfaceSearch object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.html#examples-using-surfacesearch","title":"SurfaceSearch > Examples using SurfaceSearch","text":"Examples using SurfaceSearch\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PLUGINLOADFAILURE.html#pluginloadfailure","title":"PLUGINLOADFAILURE","text":"PLUGINLOADFAILURE\n\n\n\nErrorCode.PLUGINLOADFAILURE = 10001\n\nFailed to load Surface Editor plugin."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.non_stackable_faces.html#non_stackable_faces","title":"non_stackable_faces","text":"non_stackable_faces\n\n\n\nproperty MeshStackerResults.non_stackable_faces: Iterable[int]\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nType\n\nList of non-stackable faces. Note"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.html#boitype","title":"BOIType","text":"BOIType\n\n\n\nclass ansys.meshing.prime.BOIType(*values)\n\nBOI type for BOI creation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"examples/gallery_examples/misc/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n00:18.472 total execution time for 1 file from examples/gallery_examples/misc:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_misc_example_template.py (example_template.py)\n\n00:18.472\n\n0.0"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_MESHEDFACESFOUND.html#stacker_meshedfacesfound","title":"STACKER_MESHEDFACESFOUND","text":"STACKER_MESHEDFACESFOUND\n\n\n\nErrorCode.STACKER_MESHEDFACESFOUND = 10106\n\nSome faces in the input model have existing mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.set_params.html#set_params","title":"set_params","text":"set_params\n\n\n\nVolumeControl.set_params(volume_control_params)\n\nSets the volume control parameters.\n\nParameters\n\nvolume_control_params\n\nVolumeControlParams\n\nParameters to control volume.\n\nExamples\n\n>>> volume_control.set_params(\n>>>                  prime.VolumeControlParams(model=model,\n>>>                  cell_zonelet_type = prime.CellZoneletType.FLUID))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.set_params.html#examples-using-volumecontrolset_params","title":"set_params > Examples using VolumeControl.set_params","text":"Examples using VolumeControl.set_params\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nBCsVolumetricModality.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsResults.html#mergepartsresults","title":"MergePartsResults","text":"MergePartsResults\n\n\n\nclass ansys.meshing.prime.MergePartsResults(model=None, error_code=None, merged_part_assigned_name=None, merged_part_id=None, json_data=None, **kwargs)\n\nParameters to merge parts.\n\nParameters\n\nmodel: Model\n\nModel to create a MergePartsResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nmerged_part_assigned_name: str, optional\n\nName assigned to merged part. Suffix is added to suggested name if the name not available.\n\nmerged_part_id: int, optional\n\nId assigned to merged part.\n\njson_data: dict, optional\n\nJSON dictionary to create a MergePartsResults object with provided parameters.\n\nExamples\n\n>>> merge_parts_results = prime.MergePartsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsResults.html#examples-using-mergepartsresults","title":"MergePartsResults > Examples using MergePartsResults","text":"Examples using MergePartsResults\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeadRegion.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeadRegion.print_default()\n\nPrint the default values of DeadRegion object.\n\nExamples\n\n>>> DeadRegion.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.html#model","title":"Model","text":"Model\n\n\n\nclass ansys.meshing.prime.Model(comm, id, object_id, name)\n\nModel is the nucleus of Prime. Model forms the base and contains all the information about Prime.\n\nYou can access any information in Prime only through Model.\nModel allows you to query TopoData, ControlData, Parts, SizeFields and more.\n\nParameters\n\ncomm\n\nCommunicator\n\nCommunicator to connect with the Ansys Prime server.\n\nid\n\npython:int\n\nId of the Model.\n\nobject_id\n\npython:int\n\nObject id of the Model.\n\nname\n\npython:str\n\nName of the Model.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.html#examples-using-model","title":"Model > Examples using Model","text":"Examples using Model\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zonelets_of_component_body_name_pattern.html#get_face_zonelets_of_component_body_name_pattern","title":"get_face_zonelets_of_component_body_name_pattern","text":"get_face_zonelets_of_component_body_name_pattern\n\n\n\nPart.get_face_zonelets_of_component_body_name_pattern(component_body_name_pattern, type, name_pattern_params)\n\nGets face zonelet ids belonging to components or bodies with name matching the given name pattern.\n\nParameters\n\ncomponent_body_name_pattern\n\npython:str\n\nName pattern to be matched with component or body names.\n\ntype\n\nBodyQueryType\n\nType of query used to match component or body name pattern.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match component or body name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns face zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_component_body_pattern(\"/body*\", type, name_pattern_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.CURVATURE.html#curvature","title":"CURVATURE","text":"CURVATURE\n\n\n\nSizingType.CURVATURE = 0\n\nDenotes the size control type is curvature."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PREPAREFORVOLUMEMESHINGFAILED.html#prepareforvolumemeshingfailed","title":"PREPAREFORVOLUMEMESHINGFAILED","text":"PREPAREFORVOLUMEMESHINGFAILED\n\n\n\nErrorCode.PREPAREFORVOLUMEMESHINGFAILED = 2000\n\nPrepare for volume meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.html#quadtosplineparams","title":"QuadToSplineParams","text":"QuadToSplineParams\n\n\n\nclass ansys.meshing.prime.QuadToSplineParams(model=None, feature_capture_type=None, feature_angle=None, corner_angle=None, shell_thickness=None, solid_shell=None, separate_by_zone=None, zone_name_shell_thickness_pairs=None, continuity=None, project_on_geometry=None, use_projection_scope=None, projection_scope=None, json_data=None, **kwargs)\n\nParameters to control conversion of quadrilateral mesh to spline.\n\nParameters\n\nmodel: Model\n\nModel to create a QuadToSplineParams object with default parameters.\n\nfeature_capture_type: SplineFeatureCaptureType, optional\n\nFeature capture options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfeature_angle: float, optional\n\nAngle to capture the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncorner_angle: float, optional\n\nCorner angle of the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nshell_thickness: float, optional\n\nThickness of shell.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsolid_shell: bool, optional\n\nSolid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nseparate_by_zone: bool, optional\n\nOption to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nzone_name_shell_thickness_pairs: Dict[str, Union[str, int, float, bool]], optional\n\nZone name and thickness pair list. For example, {“Zone1Name”: Zone1Thickness, “Zone2Name”: Zone2Thickness, …}.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncontinuity: SplineContinuityType, optional\n\nSpline Continuity options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry: bool, optional\n\nOption to project on geometry.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nuse_projection_scope: bool, optional\n\nOption to use projection scope.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nprojection_scope: ScopeDefinition, optional\n\nScope to evaluate entities for projection.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a QuadToSplineParams object with provided parameters.\n\nExamples\n\n>>> quad_to_spline_params = prime.QuadToSplineParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointParams.type.html#type","title":"type","text":"type\n\n\n\nproperty CreateMaterialPointParams.type: MaterialPointType\n\nDefines the type of material point."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ScaffolderRepairMode.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetParams.quadratic.html#quadratic","title":"quadratic","text":"quadratic\n\n\n\nproperty TetParams.quadratic: bool\n\nOption to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDINPUTZONELETS.html#invalidinputzonelets","title":"INVALIDINPUTZONELETS","text":"INVALIDINPUTZONELETS\n\n\n\nErrorCode.INVALIDINPUTZONELETS = 1309\n\nInvalid input zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.search_zonelets_by_folds.html#search_zonelets_by_folds","title":"search_zonelets_by_folds","text":"search_zonelets_by_folds\n\n\n\nSurfaceSearch.search_zonelets_by_folds(part_id, face_zonelets, register_id, params)\n\nSearch face zonelets to identify folds.\n\nSearch face zonelets to identify folds with provided folds parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets.\n\nregister_id\n\npython:int\n\nId of register.\n\nparams\n\nSearchByFoldsParams\n\nParameters used to identify folds.\n\nReturns\n\n:\n\n\n\nSearchByFoldsResults\n\nReturns the SearchByFoldsResults.\n\nReturn type\n\nSearchByFoldsResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_folds(part_id, face_zonelets, register_id, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseResults.n_splits.html#n_splits","title":"n_splits","text":"n_splits\n\n\n\nproperty CollapseResults.n_splits: int\n\nNumber of face elements split."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentMeshingMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportFluentMeshingMeshParams.print_default()\n\nPrint the default values of ExportFluentMeshingMeshParams object.\n\nExamples\n\n>>> ExportFluentMeshingMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSplineRefinementType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MULTIZONEMESHER_MESHINGFAILED.html#multizonemesher_meshingfailed","title":"MULTIZONEMESHER_MESHINGFAILED","text":"MULTIZONEMESHER_MESHINGFAILED\n\n\n\nErrorCode.MULTIZONEMESHER_MESHINGFAILED = 2603\n\nGenerating MultiZone mesh failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCdbSimulationType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod FuseOption.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n02:25.534 total execution time for 1 file from examples/gallery_examples/gallery_beta:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py (11_solder_ball.py)\n\n02:25.534\n\n0.0"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StretchFreeBoundariesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty StretchFreeBoundariesResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveZoneResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty RemoveZoneResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the remove zone operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.real.html#real","title":"real","text":"real\n\n\n\nSplineRefinementType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdat.html#download_multi_layer_quad_mesh_pcb_pmdat","title":"download_multi_layer_quad_mesh_pcb_pmdat","text":"download_multi_layer_quad_mesh_pcb_pmdat\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdat(destination=None, force=False)\n\nDownload the PMDAT file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(cad_file, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdat.html#examples-using-download_multi_layer_quad_mesh_pcb_pmdat","title":"download_multi_layer_quad_mesh_pcb_pmdat > Examples using download_multi_layer_quad_mesh_pcb_pmdat","text":"Examples using download_multi_layer_quad_mesh_pcb_pmdat\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.compute_spotweld_thickness.html#compute_spotweld_thickness","title":"compute_spotweld_thickness","text":"compute_spotweld_thickness\n\n\n\nproperty ExportLSDynaKeywordFileParams.compute_spotweld_thickness: bool\n\nOption to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SearchByThinStripResults.error_code: ErrorCode\n\nError code associated with search thin strips operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nScopeEvaluationType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.project_on_geometry.html#project_on_geometry","title":"project_on_geometry","text":"project_on_geometry\n\n\n\nproperty QuadToSplineParams.project_on_geometry: bool\n\nOption to project on geometry.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.add_thickness.html#add_thickness","title":"add_thickness","text":"add_thickness\n\n\n\nSurfaceUtilities.add_thickness(zonelets, params)\n\nAdd thicknesss to input face zonelets.\n\nParameters\n\nzonelets\n\nIterable[python:int]\n\nList of input face zonelet IDs.\n\nparams\n\nAddThicknessParams\n\nParameters for controlling the addition of thickness.\n\nReturns\n\n:\n\n\n\nAddThicknessResults\n\nResults for adding thickness.\n\nReturn type\n\nAddThicknessResults\n\nExamples\n\n>>> result = surf_utils.add_thickness(zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoftSizingParams.max.html#max","title":"max","text":"max\n\n\n\nproperty SoftSizingParams.max: float\n\nMaximum size used for computing edge and face size using soft size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.html#localsurferparams","title":"LocalSurferParams","text":"LocalSurferParams\n\n\n\nclass ansys.meshing.prime.LocalSurferParams(model=None, min_angle=None, max_angle=None, size_field_type=None, min_size=None, max_size=None, growth_rate=None, constant_size=None, smooth_boundary=None, n_rings=None, json_data=None, **kwargs)\n\nParameters to perform local surface remeshing.\n\nParameters\n\nmodel: Model\n\nModel to create a LocalSurferParams object with default parameters.\n\nmin_angle: float, optional\n\nMinimum feature angle limit used to identify and preserve features.\n\nmax_angle: float, optional\n\nMaximum feature angle limit used to identify and preserve features.\n\nsize_field_type: SizeFieldType, optional\n\nSize field type used to generate surface mesh.\n\nmin_size: float, optional\n\nMinimum size to be used in sizing for the surfer.\n\nmax_size: float, optional\n\nMaximum size to be used in sizing for the surfer.\n\ngrowth_rate: float, optional\n\nGrowth rate to be used to propagate sizes.\n\nconstant_size: float, optional\n\nConstant size to be used in case of constant size field.\n\nsmooth_boundary: bool, optional\n\nOption to extend local selection to get smooth boundary of selected elements.\n\nn_rings: int, optional\n\nNumber of rings to extend the registered face selection for remeshing.\n\njson_data: dict, optional\n\nJSON dictionary to create a LocalSurferParams object with provided parameters.\n\nExamples\n\n>>> local_surfer_params = prime.LocalSurferParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentCaseResults.html#importfluentcaseresults","title":"ImportFluentCaseResults","text":"ImportFluentCaseResults\n\n\n\nclass ansys.meshing.prime.ImportFluentCaseResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with fluent case import.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportFluentCaseResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportFluentCaseResults object with provided parameters.\n\nExamples\n\n>>> import_fluent_case_results = prime.ImportFluentCaseResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.OCTREELIMITREACHED.html#octreelimitreached","title":"OCTREELIMITREACHED","text":"OCTREELIMITREACHED\n\n\n\nErrorCode.OCTREELIMITREACHED = 3350\n\nLimit reached for the number of octants supported.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.write_components_with_element_blocks.html#write_components_with_element_blocks","title":"write_components_with_element_blocks","text":"write_components_with_element_blocks\n\n\n\nproperty ExportMapdlCdbParams.write_components_with_element_blocks: bool\n\nControls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.FACEZONELETSHAVECELLSCONNECTED.html#facezoneletshavecellsconnected","title":"FACEZONELETSHAVECELLSCONNECTED","text":"FACEZONELETSHAVECELLSCONNECTED\n\n\n\nErrorCode.FACEZONELETSHAVECELLSCONNECTED = 10205\n\nFace zonelets have cells connected."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.create_shell_bl_control.html#create_shell_bl_control","title":"create_shell_bl_control","text":"create_shell_bl_control\n\n\n\nControlData.create_shell_bl_control()\n\nCreate a ShellBL control.\n\nReturns\n\n:\n\n\n\nShellBLControl\n\nShellBL Control.\n\nReturn type\n\nShellBLControl\n\nExamples\n\n>>> shell_bl_control = model.control_data.create_shell_bl_control()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SHELLBLWRONGTOPO.html#shellblwrongtopo","title":"SHELLBLWRONGTOPO","text":"SHELLBLWRONGTOPO\n\n\n\nErrorCode.SHELLBLWRONGTOPO = 64\n\nFound topofaces with invalid topology.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.html#periodiccontrol","title":"PeriodicControl","text":"PeriodicControl\n\n\n\nclass ansys.meshing.prime.PeriodicControl(model, id, object_id, name)\n\nPeriodic controls provide settings for the recovery of periodic surfaces.\n\nA periodic control is specified by the scope (source surfaces) and the transformation parameters: the center, axis and angle.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create PeriodicControl object.\n\nid\n\npython:int\n\nId of the PeriodicControl.\n\nobject_id\n\npython:int\n\nObject id of the PeriodicControl.\n\nname\n\npython:str\n\nName of the PeriodicControl.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderResults.html#scaffolderresults","title":"ScaffolderResults","text":"ScaffolderResults\n\n\n\nclass ansys.meshing.prime.ScaffolderResults(model=None, n_incomplete_topo_faces=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated to scaffold operation.\n\nParameters\n\nmodel: Model\n\nModel to create a ScaffolderResults object with default parameters.\n\nn_incomplete_topo_faces: int, optional\n\nNumber of topofaces failed in scaffold operation.\n\nerror_code: ErrorCode, optional\n\nError code associated with scaffold operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a ScaffolderResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_results = prime.ScaffolderResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderResults.html#examples-using-scaffolderresults","title":"ScaffolderResults > Examples using ScaffolderResults","text":"Examples using ScaffolderResults\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.id.html#id","title":"id","text":"id\n\n\n\nproperty TopoData.id\n\nGet the id of TopoData."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusParams.html#importabaqusparams","title":"ImportAbaqusParams","text":"ImportAbaqusParams\n\n\n\nclass ansys.meshing.prime.ImportAbaqusParams(model=None, json_data=None, **kwargs)\n\nParameters for importing Abaqus solver input files.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportAbaqusParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportAbaqusParams object with provided parameters.\n\nExamples\n\n>>> import_abaqus_params = prime.ImportAbaqusParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MERGEPARTSFAILED.html#mergepartsfailed","title":"MERGEPARTSFAILED","text":"MERGEPARTSFAILED\n\n\n\nErrorCode.MERGEPARTSFAILED = 1301\n\nMerge parts failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.cell_element_type.html#cell_element_type","title":"cell_element_type","text":"cell_element_type\n\n\n\nproperty HexCoreParams.cell_element_type: HexCoreCellElementType\n\nCell element type of hex-shaped cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGASpline.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic IGASpline.set_default(id=None)\n\nSet the default values of the IGASpline object.\n\nParameters\n\nid: int, optional\n\nUnique id of the spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.simulation_type.html#simulation_type","title":"simulation_type","text":"simulation_type\n\n\n\nproperty ExportMapdlCdbParams.simulation_type: CdbSimulationType\n\nSimulation type for the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.real.html#real","title":"real","text":"real\n\n\n\nTrimmedSolidSplineCutMode.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDGLOBALMINMAX.html#invalidglobalminmax","title":"INVALIDGLOBALMINMAX","text":"INVALIDGLOBALMINMAX\n\n\n\nErrorCode.INVALIDGLOBALMINMAX = 1500\n\nInvalid global min and max value."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CellStatisticsResults.print_default()\n\nPrint the default values of CellStatisticsResults object.\n\nExamples\n\n>>> CellStatisticsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryParams.face_quality_measures.html#face_quality_measures","title":"face_quality_measures","text":"face_quality_measures\n\n\n\nproperty SurfaceQualitySummaryParams.face_quality_measures: List[FaceQualityMeasure]\n\nList of face quality measures for surface quality diagnostics."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairEdgesParams.absolute_tolerance.html#absolute_tolerance","title":"absolute_tolerance","text":"absolute_tolerance\n\n\n\nproperty RepairEdgesParams.absolute_tolerance: float\n\nAbsolute distance tolerance between nodes or edges for repair edges operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.VT_CANNOTMERGENODES.html#vt_cannotmergenodes","title":"VT_CANNOTMERGENODES","text":"VT_CANNOTMERGENODES\n\n\n\nWarningCode.VT_CANNOTMERGENODES = 100006\n\nCannot merge nodes during VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.create_flow_volume.html#create_flow_volume","title":"create_flow_volume","text":"create_flow_volume\n\n\n\nMesh.create_flow_volume(flow_volume_zone_name='flow_volume', cap_scope=<ansys.meshing.prime.lucid.scope.SurfaceScope object>)\n\nCreate flow volume by the face labels defining the boundary of the volume.\n\nParameters\n\nflow_volume_zone_name\n\npython:str, optional\n\nName for the volume zone of the created flow volume. The default is\n\"flow_volume\".\n\ncap_scope\n\nSurfaceScope\n\nScope defining the face zonelets where the cap for flow volume must\nbe created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectHolesParams.html#detectholesparams","title":"DetectHolesParams","text":"DetectHolesParams\n\n\n\nclass ansys.meshing.prime.DetectHolesParams(model=None, max_radius_circular_holes=None, min_radius_circular_holes=None, max_hole_length=None, min_hole_length=None, allow_curved_topo_faces=None, json_data=None, **kwargs)\n\nParameters for detect holes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DetectHolesParams object with default parameters.\n\nmax_radius_circular_holes: float, optional\n\nMaximum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmin_radius_circular_holes: float, optional\n\nMinimum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmax_hole_length: float, optional\n\nMaximum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmin_hole_length: float, optional\n\nMinimum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nallow_curved_topo_faces: bool, optional\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DetectHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_holes_params = prime.DetectHolesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty MultiZoneSizingParams.growth_rate: float\n\nDefines growth rate.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.FLUID.html#fluid","title":"FLUID","text":"FLUID\n\n\n\nCellZoneletType.FLUID = 1\n\nCell zonelet type is fluid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeadRegion.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeadRegion.set_default(face_zonelet_ids=None, dead_material_points=None, hole_size=None)\n\nSet the default values of the DeadRegion object.\n\nParameters\n\nface_zonelet_ids: Iterable[int], optional\n\nFace zonelets enclosing dead region.\n\ndead_material_points: List[str], optional\n\nMaterial points to identify dead region.\n\nhole_size: float, optional\n\nMaximum hole size used for patching."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCadFaceter.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricScaffolderParams.only_check_exact_overlaps.html#only_check_exact_overlaps","title":"only_check_exact_overlaps","text":"only_check_exact_overlaps\n\n\n\nproperty VolumetricScaffolderParams.only_check_exact_overlaps: bool\n\nCheck only for fully overlapping topofaces when true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDCURVATURESIZINGINPUT.html#invalidcurvaturesizinginput","title":"INVALIDCURVATURESIZINGINPUT","text":"INVALIDCURVATURESIZINGINPUT\n\n\n\nErrorCode.INVALIDCURVATURESIZINGINPUT = 1503\n\nInvalid curvature sizing input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nScopeEvaluationType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nEdgeMergeControl.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeResults.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty SearchBySpikeResults.n_found: int\n\nNumber of spikes detected."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONNECTFAILED.html#wrapperconnectfailed","title":"WRAPPERCONNECTFAILED","text":"WRAPPERCONNECTFAILED\n\n\n\nErrorCode.WRAPPERCONNECTFAILED = 3402\n\nWrapper connect failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.mesh_face_ids.html#mesh_face_ids","title":"mesh_face_ids","text":"mesh_face_ids\n\n\n\nproperty FaceConnectivityResults.mesh_face_ids: Iterable[int]\n\nMesh face ids corresponding to each topoface."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchByFoldsResults.set_default(n_found=None, error_code=None)\n\nSet the default values of the SearchByFoldsResults object.\n\nParameters\n\nn_found: int, optional\n\nNumber of folds identified.\n\nerror_code: ErrorCode, optional\n\nError code associated with search folds operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WrapResult.print_default()\n\nPrint the default values of WrapResult object.\n\nExamples\n\n>>> WrapResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsParams.html#subtractzoneletsparams","title":"SubtractZoneletsParams","text":"SubtractZoneletsParams\n\n\n\nclass ansys.meshing.prime.SubtractZoneletsParams(model=None, retain_cutter=None, extract_edges=None, trace_edges=None, json_data=None, **kwargs)\n\nParameters to use when subtracting zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a SubtractZoneletsParams object with default parameters.\n\nretain_cutter: bool, optional\n\nRetain the zonelets used for removal.\n\nextract_edges: bool, optional\n\nExtract edges of intersection during subtract.\n\ntrace_edges: bool, optional\n\nTrace edges of intersection on target. Only works if extractEdges is true.\n\njson_data: dict, optional\n\nJSON dictionary to create a SubtractZoneletsParams object with provided parameters.\n\nExamples\n\n>>> subtract_zonelets_params = prime.SubtractZoneletsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WrapperPatchFlowRegionsParams.print_default()\n\nPrint the default values of WrapperPatchFlowRegionsParams object.\n\nExamples\n\n>>> WrapperPatchFlowRegionsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXTRACTFEATURESBYEDGESFAILED.html#extractfeaturesbyedgesfailed","title":"EXTRACTFEATURESBYEDGESFAILED","text":"EXTRACTFEATURESBYEDGESFAILED\n\n\n\nErrorCode.EXTRACTFEATURESBYEDGESFAILED = 1601\n\nExtracting features by angle failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentCaseResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportFluentCaseResults.print_default()\n\nPrint the default values of ImportFluentCaseResults object.\n\nExamples\n\n>>> ImportFluentCaseResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Connect.html#connect","title":"Connect","text":"Connect\n\n\n\nclass ansys.meshing.prime.Connect(model)\n\nConnect face zonelets.\n\nPerform surface connection using various connect algorithms on face zonelets.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create Connect object.\n\nNotes\n\nConnect operations support only computational mesh, which is mesh with reasonable size changes and quality. Faceted geometry, which is STL-like mesh that can have extreme size changes and many sliver elements, not supported.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nMergeNodeType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.TOPOFACE.html#topoface","title":"TOPOFACE","text":"TOPOFACE\n\n\n\nMatchPairTargetType.TOPOFACE = 2\n\nOption to specify topoface as target."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.id.html#id","title":"id","text":"id\n\n\n\nproperty ShellBLControl.id\n\nGet the id of ShellBLControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.merge_parts.html#merge_parts","title":"merge_parts","text":"merge_parts\n\n\n\nModel.merge_parts(part_ids, params)\n\nMerge multiple parts into a single part.\n\nParameters\n\npart_ids\n\nIterable[python:int]\n\nIDs of the parts to merge.\n\nparams\n\nMergePartsParams\n\nParameters for merging parts.\n\nReturns\n\n:\n\n\n\nMergePartsResults\n\nResults for merging the parts into a single part.\n\nReturn type\n\nMergePartsResults\n\nExamples\n\n>>> params = prime.MergePartsParams(model = model)\n>>> results = model.merge_parts(part_ids, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.merge_parts.html#examples-using-modelmerge_parts","title":"merge_parts > Examples using Model.merge_parts","text":"Examples using Model.merge_parts\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.DISCOVERY.html#discovery","title":"DISCOVERY","text":"DISCOVERY\n\n\n\nCadReaderRoute.DISCOVERY = 4\n\nDenotes Discovery as CAD reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSpline.html#quadtospline","title":"QuadToSpline","text":"QuadToSpline\n\n\n\nclass ansys.meshing.prime.QuadToSpline(model)\n\nConverts all-quad mesh to spline.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create QuadToSpline object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.html#mesh","title":"Mesh","text":"Mesh\n\n\n\nclass ansys.meshing.prime.lucid.Mesh(model)\n\nProvides methods for users who are new to meshing.\n\nThis class also serves as a tutorial for commonly used meshing workflows.\n\nThe Mesh class provides these functionalities:\n\nSurface meshing with constant and variable sizing with triangle\nor quad dominant mesh\n\nVolume meshing with prism, tetrahedral, and polyhedral elements\n\nSurface wrapping\n\nHelper method for creating zones from labels\n\nHelper methods for reading and writing files\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.html#examples-using-mesh","title":"Mesh > Examples using Mesh","text":"Examples using Mesh\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nLSDynaFileFormatType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSmoothType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveZoneResults.html#removezoneresults","title":"RemoveZoneResults","text":"RemoveZoneResults\n\n\n\nclass ansys.meshing.prime.RemoveZoneResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the remove zone operation.\n\nParameters\n\nmodel: Model\n\nModel to create a RemoveZoneResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the remove zone operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a RemoveZoneResults object with provided parameters.\n\nExamples\n\n>>> remove_zone_results = prime.RemoveZoneResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDWRAPPERCONTROL.html#invalidwrappercontrol","title":"INVALIDWRAPPERCONTROL","text":"INVALIDWRAPPERCONTROL\n\n\n\nErrorCode.INVALIDWRAPPERCONTROL = 3427\n\nInvalid wrapper control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOTSUPPORTEDFORDISTRIBUTEMESHING.html#notsupportedfordistributemeshing","title":"NOTSUPPORTEDFORDISTRIBUTEMESHING","text":"NOTSUPPORTEDFORDISTRIBUTEMESHING\n\n\n\nErrorCode.NOTSUPPORTEDFORDISTRIBUTEMESHING = 2001\n\nMethod not supported for distributed meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.WRAPPER_PATCHFLOWREGIONS_NOHOLESFOUND.html#wrapper_patchflowregions_noholesfound","title":"WRAPPER_PATCHFLOWREGIONS_NOHOLESFOUND","text":"WRAPPER_PATCHFLOWREGIONS_NOHOLESFOUND\n\n\n\nWarningCode.WRAPPER_PATCHFLOWREGIONS_NOHOLESFOUND = 6006\n\nNo holes detected to patch.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLINVALIDSOURCESCOPEENTITY.html#thinvolumecontrolinvalidsourcescopeentity","title":"THINVOLUMECONTROLINVALIDSOURCESCOPEENTITY","text":"THINVOLUMECONTROLINVALIDSOURCESCOPEENTITY\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSOURCESCOPEENTITY = 12105\n\nInvalid source scope entity provided for thin volume control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderMergeResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ScaffolderMergeResults.set_default(n_merged=None, error_code=None)\n\nSet the default values of the ScaffolderMergeResults object.\n\nParameters\n\nn_merged: int, optional\n\nNumber of merged topofaces.\n\nerror_code: ErrorCode, optional\n\nError code associated with merge overlapping topofaces operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SizingType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_meshed_sizing_params.html#set_meshed_sizing_params","title":"set_meshed_sizing_params","text":"set_meshed_sizing_params\n\n\n\nSizeControl.set_meshed_sizing_params(params)\n\nSet the meshed sizing parameters to compute volumetric size field.\n\nParameters\n\nparams\n\nMeshedSizingParams\n\nParameters that enables you to set the sizes based on existing sizes.\n\nReturns\n\n:\n\n\n\nSetSizingResults\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_meshed_sizing_params(\n>>>                  prime.MeshedSizingParams(model=model,\n>>>                  growth_rate = 1.2))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectFacesParams.absolute_tolerance.html#absolute_tolerance","title":"absolute_tolerance","text":"absolute_tolerance\n\n\n\nproperty ConnectFacesParams.absolute_tolerance: float\n\nAbsolute distance tolerance between edges or faces for connect faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SurfaceQualityResult.print_default()\n\nPrint the default values of SurfaceQualityResult object.\n\nExamples\n\n>>> SurfaceQualityResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nVolumeNamingType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.set_scope.html#set_scope","title":"set_scope","text":"set_scope\n\n\n\nVolumeControl.set_scope(scope)\n\nSets the scope for volume control to evaluate.\n\nVolume control uses scope to evaluate entities for which volume mesh needs to be generated.\n\nParameters\n\nscope\n\nScopeDefinition\n\nScopeDefinition to scope entities for volume mesh generation.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns a SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> volume_control.set_scope(prime.ScopeDefinition(model=model,\n>>>                        entity_type = ScopeEntity.VOLUMES,\n>>>                        evaluation_type = ScopeEvaluationType.ZONES,\n>>>                        zone_expression = \"vol_in\"))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.set_scope.html#examples-using-volumecontrolset_scope","title":"set_scope > Examples using VolumeControl.set_scope","text":"Examples using VolumeControl.set_scope\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod LSDynaFileFormatType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nHexCoreTransitionLayerType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatFeaturesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DetectAndTreatFeaturesParams.set_default(detect_and_treat_holes=None, detect_and_treat_circular_faces=None, treat_holes_params=None, treat_circular_faces_params=None)\n\nSet the default values of the DetectAndTreatFeaturesParams object.\n\nParameters\n\ndetect_and_treat_holes: bool, optional\n\nOption to detect and treat holes.\n\ndetect_and_treat_circular_faces: bool, optional\n\nOption to detect and treat circular faces.\n\ntreat_holes_params: DetectAndTreatHolesParams, optional\n\nParameters for detect and treat holes operation.\n\ntreat_circular_faces_params: DetectAndTreatCircularFacesParams, optional\n\nParameters for detect and treat circular faces operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSmoothType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.real.html#real","title":"real","text":"real\n\n\n\nSweepType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.imag.html#imag","title":"imag","text":"imag\n\n\n\nLengthUnit.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.write_pmdat.html#write_pmdat","title":"write_pmdat","text":"write_pmdat\n\n\n\nFileIO.write_pmdat(file_name, file_write_params)\n\nWrite a PyPrimeMesh data (PMDAT) file.\n\nParameters\n\nfile_name\n\npython:str\n\nPath for writing the data file on disk.\n\nfile_write_params\n\nFileWriteParams\n\nParameters for writing the data file.\n\nReturns\n\n:\n\n\n\nFileWriteResults\n\nResults from writing the data file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.write_pmdat(\"/tmp/prime_mesh_data.pmdat\",\n                                  prime.FileWriteParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.set_num_threads.html#set_num_threads","title":"set_num_threads","text":"set_num_threads\n\n\n\nModel.set_num_threads(num)\n\nSets the number of threads for multithreaded operation.\n\nParameters\n\nnum\n\npython:int\n\nNumber of threads.\n\nExamples\n\n>>> model = client.model\n>>> model.set_num_threads(4)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.num_edge_list_per_edge_zonelet.html#num_edge_list_per_edge_zonelet","title":"num_edge_list_per_edge_zonelet","text":"num_edge_list_per_edge_zonelet\n\n\n\nproperty EdgeConnectivityResults.num_edge_list_per_edge_zonelet: Iterable[int]\n\nNumber of edge list per edge zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nShellBLOffsetType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.imag.html#imag","title":"imag","text":"imag\n\n\n\nCadFaceter.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCellZoneletType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSolverType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDSHELLBLCONTROLS.html#invalidshellblcontrols","title":"INVALIDSHELLBLCONTROLS","text":"INVALIDSHELLBLCONTROLS\n\n\n\nErrorCode.INVALIDSHELLBLCONTROLS = 67\n\nInvalid ShellBL controls.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshResults.error_locations.html#error_locations","title":"error_locations","text":"error_locations\n\n\n\nproperty AutoMeshResults.error_locations: Iterable[float]\n\nError location coordinates returned when automesh fails."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.name.html#name","title":"name","text":"name\n\n\n\nproperty VolumeControl.name\n\nGet the name of the volume control.\n\nReturns\n\npython:str\n\nName of the volume control.\n\nExamples\n\n>>> print(volume_control.name)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HardSizingParams.min.html#min","title":"min","text":"min\n\n\n\nproperty HardSizingParams.min: float\n\nMinimum size used for computing edge and face size using hard size control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveLabelResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty RemoveLabelResults.error_code: ErrorCode\n\nError code associated with the remove label operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLINVALIDSCOPE.html#thinvolumecontrolinvalidscope","title":"THINVOLUMECONTROLINVALIDSCOPE","text":"THINVOLUMECONTROLINVALIDSCOPE\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSCOPE = 12104\n\nSame source and target scope provided for thin volume control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureResults.processing_time.html#processing_time","title":"processing_time","text":"processing_time\n\n\n\nproperty ExtractFeatureResults.processing_time: float\n\nTime taken for edge extraction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.GlobalSizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty GlobalSizingParams.growth_rate: float\n\nGrowth rate of global sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.html#scopeexpressiontype","title":"ScopeExpressionType","text":"ScopeExpressionType\n\n\n\nclass ansys.meshing.prime.ScopeExpressionType(*values)\n\nScopeExpressionType uses expression type to evaluate the scope.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"contributing/index.html#contribute","title":"Contribute","text":"Contribute\n\nOverall guidance on contributing to a PyAnsys library appears in the\nContributing topic\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyPrimeMesh.\n\nThe following contribution information is specific to PyPrimeMesh."},{"objectID":"Home","href":"contributing/index.html#clone-the-repository","title":"Contribute > Clone the repository","text":"Clone the repository\n\nYou can clone the PyPrimeMesh repository from GitHub and install the latest version in\ndevelopment mode with this code:\n\n>>> git clone https://github.com/ansys/pyprimemesh\n>>> cd pyprimemesh\n>>> pip install -e .[graphics]"},{"objectID":"Home","href":"contributing/index.html#post-issues","title":"Contribute > Post issues","text":"Post issues\n\nUse the PyPrimeMesh Issues\npage to submit questions, report bugs, and request new features.\n\nTo reach the support team, email pyansys.core@ansys.com."},{"objectID":"Home","href":"contributing/index.html#view-pyprimemesh-documentation","title":"Contribute > View PyPrimeMesh documentation","text":"View PyPrimeMesh documentation\n\nDocumentation for the latest stable release of PyPrimeMesh is hosted at\nPyPrimeMesh Documentation.\n\nIn the upper right corner of the documentation’s title bar, there is an option\nfor switching from viewing the documentation for the latest stable release\nto viewing the documentation for the development version or previously\nreleased versions."},{"objectID":"Home","href":"contributing/index.html#code-structure-and-contributions","title":"Contribute > Code structure and contributions","text":"Code structure and contributions\n\nThe PyPrimeMesh code base is primarily auto-generated from Ansys Prime Server. For the auto-generated\ncode, contributions are limited to raising issues and enhancement requests.\n\nYou should not modify files marked as auto-generated.\n\nContributions from pull requests can be included in files in these directories of the\nPyPrimeMesh repository:\n\nexamples, which provides examples\nof how you use PyPrimeMesh.\n\ngraphics,\nwhich provides graphics capabilities and image files.\n\nlucid, which\nprovides high-level APIs.\n\nIf you have an idea on how to enhance PyPrimeMesh, consider first creating an issue as a feature request\nThe PyPrimeMesh team can then use the request as a discussion thread to work on implementing the contribution."},{"objectID":"Home","href":"contributing/index.html#code-style","title":"Contribute > Code style","text":"Code style\n\nPyPrimeMesh follows PEP8 standard as outlined in the PyAnsys Development Guide and implements style checking using\npre-commit.\n\nTo ensure your code meets minimum code styling standards, run these commands:\n\nYou can also install this as a pre-commit hook by running this command:\n\nThis way, it’s not possible for you to push code that fails the style checks. For example,\ncall code styling standards must pass:"},{"objectID":"Home","href":"contributing/index.html#licensing","title":"Contribute > Licensing","text":"Licensing\n\nAll contributed code is licensed under the MIT License found in the repository.\nIf you did not write the code yourself, it is your responsibility to ensure that the existing license is compatible\nand included in the contributed files or you obtain permission from the original author to relicense the code."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.html#surfacediagnosticsummaryparams","title":"SurfaceDiagnosticSummaryParams","text":"SurfaceDiagnosticSummaryParams\n\n\n\nclass ansys.meshing.prime.SurfaceDiagnosticSummaryParams(model=None, scope=None, compute_self_intersections=None, compute_free_edges=None, compute_multi_edges=None, compute_duplicate_faces=None, json_data=None, **kwargs)\n\nParameters to control surface diagnostics summary results.\n\nParameters\n\nmodel: Model\n\nModel to create a SurfaceDiagnosticSummaryParams object with default parameters.\n\nscope: ScopeDefinition, optional\n\nScope the face zonelets for surface diagnostics.\n\ncompute_self_intersections: bool, optional\n\nControl to identify face intersections are present or not.\n\ncompute_free_edges: bool, optional\n\nControl to identify free face edges are present or not.\n\ncompute_multi_edges: bool, optional\n\nControl to identify multi face edges are present or not.\n\ncompute_duplicate_faces: bool, optional\n\nControl to identify duplicate faces are present or not.\n\njson_data: dict, optional\n\nJSON dictionary to create a SurfaceDiagnosticSummaryParams object with provided parameters.\n\nExamples\n\n>>> surface_diagnostic_summary_params = prime.SurfaceDiagnosticSummaryParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.html#examples-using-surfacediagnosticsummaryparams","title":"SurfaceDiagnosticSummaryParams > Examples using SurfaceDiagnosticSummaryParams","text":"Examples using SurfaceDiagnosticSummaryParams\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.CUSTOM.html#custom","title":"CUSTOM","text":"CUSTOM\n\n\n\nCadRefacetingResolution.CUSTOM = 3\n\nDenotes custom resolution of CAD faceting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlSummaryResult.message.html#message","title":"message","text":"message\n\n\n\nproperty PeriodicControlSummaryResult.message: str\n\nString with the periodic control summary."},{"objectID":"Home","href":"index.html#pyprimemesh-documentation-0100dev2","title":"PyPrimeMesh documentation 0.10.0.dev2","text":"PyPrimeMesh documentation 0.10.0.dev2\n\n"},{"objectID":"Home","href":"index.html#introduction","title":"PyPrimeMesh documentation 0.10.0.dev2 > Introduction","text":"Introduction\n\nPyPrimeMesh is part of the PyAnsys effort to facilitate the use of Ansys technologies directly\nfrom Python. PyPrimeMesh consists of various Python modules that help you to acquire geometry and\nprepare surface and volume meshes for multiple solvers. Its primary package is ansys-meshing-prime.\n\nPyPrimeMesh enables you to perform these tasks:\n\nGenerate quad dominant and triangular surface meshes.\n\nGenerate surface meshes with various sizing options like volumetric and constant.\n\nGenerate volume meshes with linear and quadratic elements of various shapes like tetrahedra, polyhedra,\nhexcore, pyramids, and prisms.\n\nGenerate volume meshes with a single process or distributed process.\n\nCheck mesh quality to provide the best solution for the problem and improve predictive\ncapabilities.\n\nPerform mesh diagnostics for free, multi-connected edges, self-intersection, and overlapping faces\nin the model.\n\nModularize meshing algorithms, components, and services for easier reuse in other applications.\n\nExpose microservices and APIs for meshing operations to promote meshing workflow prototyping.\n\nPyPrimeMesh integrates the meshing capabilities of Ansys Prime Server directly into client apps.\nPyPrimeMesh provides a Python-friendly interface to drive the software that manages the\nsubmission of low-level Prime commands, while exchanging data through high-performance gRPC\ninterfaces.\n\nPyPrimeMesh enables you to serve the meshing needs of the industry, providing solutions to complex\nissues. PyPrimeMesh, along with the general-purpose Python code, effortlessly manages your meshing needs.\nPyPrimeMesh is open source. Contributions are welcome."},{"objectID":"Home","href":"index.html#pyprimemesh-features","title":"PyPrimeMesh documentation 0.10.0.dev2 > PyPrimeMesh features","text":"PyPrimeMesh features\n\nPyPrimeMesh consists of many robust APIs. Some APIs do many jobs when called once. Some APIs\ndo only one job when called. These APIs also enable you to query the model and allow you to\nbuild complex models based on the underlying queries. PyPrimeMesh, which is easy to set up\nand execute, has some distinct features:\n\nSupports simple and complex models\n\nSupports CAD import\n\nExports meshes in solver format\n\nSupports parallel processing, like distributed parallel and threaded parallel, and multiple servers\ndriven from Python"},{"objectID":"Home","href":"index.html#quick-code","title":"PyPrimeMesh documentation 0.10.0.dev2 > Quick code","text":"Quick code\n\nHere is a brief example of how you use PyPrimeMesh:\n\nTo launch PyPrimeMesh, you use this code:\n\nTo read a mesh file, you use this code:"},{"objectID":"Home","href":"index.html#documentation-and-issues","title":"PyPrimeMesh documentation 0.10.0.dev2 > Documentation and issues","text":"Documentation and issues\n\nDocumentation for the latest stable release of PyPrimeMesh is hosted at PyPrimeMesh documentation.\n\nIn the upper right corner of the documentation’s title bar, there is an option for switching from\nviewing the documentation for the latest stable release to viewing the documentation for the\ndevelopment version or previously released versions.\n\nYou can also view or\ndownload the\nPyPrimeMesh cheat sheet. This one-page reference provides syntax rules and commands\nfor using PyPrimeMesh.\n\nOn the PyPrimeMesh Issues page,\nyou can create issues to report bugs and request new features. On the PyPrimeMesh Discussions page or the Discussions\npage on the Ansys Developer portal, you can post questions, share ideas, and get community feedback.\n\nTo reach the project support team, email pyansys.core@ansys.com."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SFPeriodicParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SFPeriodicParams.print_default()\n\nPrint the default values of SFPeriodicParams object.\n\nExamples\n\n>>> SFPeriodicParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineTetMeshParams.nisr.html#nisr","title":"nisr","text":"nisr\n\n\n\nproperty RefineTetMeshParams.nisr: int\n\nInterpolation elements in the local r-direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSolverType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic BoundingBox.set_default(xmin=None, ymin=None, zmin=None, xmax=None, ymax=None, zmax=None)\n\nSet the default values of the BoundingBox object.\n\nParameters\n\nxmin: float, optional\n\nMinimal X coordinate of the bounding box.\n\nymin: float, optional\n\nMinimal Y coordinate of the bounding box.\n\nzmin: float, optional\n\nMinimal Z coordinate of the bounding box.\n\nxmax: float, optional\n\nMaximal X coordinate of the bounding box.\n\nymax: float, optional\n\nMaximal Y coordinate of the bounding box.\n\nzmax: float, optional\n\nMaximal Z coordinate of the bounding box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSplineRefinementType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.solid_shell.html#solid_shell","title":"solid_shell","text":"solid_shell\n\n\n\nproperty QuadToSplineParams.solid_shell: bool\n\nSolid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseParams.collapse_ratio.html#collapse_ratio","title":"collapse_ratio","text":"collapse_ratio\n\n\n\nproperty CollapseParams.collapse_ratio: float\n\nMaximum ratio of shortest face edge length to longest face edge length."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPreventionParams.html#contactpreventionparams","title":"ContactPreventionParams","text":"ContactPreventionParams\n\n\n\nclass ansys.meshing.prime.ContactPreventionParams(model=None, source_scope=None, target_scope=None, size=None, json_data=None, **kwargs)\n\nContactPreventionParams defines contact prevention control parameters for wrapper.\n\nParameters\n\nmodel: Model\n\nModel to create a ContactPreventionParams object with default parameters.\n\nsource_scope: ScopeDefinition, optional\n\nSource scope used for contact prevention control.\n\ntarget_scope: ScopeDefinition, optional\n\nTarget scope used for contact prevention control.\n\nsize: float, optional\n\nMinimum gap size (gap/4) to resolve contact between source and target.\n\njson_data: dict, optional\n\nJSON dictionary to create a ContactPreventionParams object with provided parameters.\n\nExamples\n\n>>> contact_prevention_params = prime.ContactPreventionParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MergeVolumesParams.set_default(merge_to_neighbor_volume=None, neighbor_volumes=None)\n\nSet the default values of the MergeVolumesParams object.\n\nParameters\n\nmerge_to_neighbor_volume: bool, optional\n\nOption to merge given volumes to their neighbor volume.\n\nneighbor_volumes: Iterable[int], optional\n\nIds of volume that are neighbors to given volumes for merging."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TOPOFACESREMESHFAILED.html#topofacesremeshfailed","title":"TOPOFACESREMESHFAILED","text":"TOPOFACESREMESHFAILED\n\n\n\nErrorCode.TOPOFACESREMESHFAILED = 4\n\nFailed to remesh topofaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_volume_zones.html#n_volume_zones","title":"n_volume_zones","text":"n_volume_zones\n\n\n\nproperty PartSummaryResults.n_volume_zones: int\n\nNumber of volume zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty DeleteFringesAndOverlapsResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldFileReadResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SizeFieldFileReadResults.set_default(error_code=None, size_field_ids=None)\n\nSet the default values of the SizeFieldFileReadResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code if size field file read operation was unsuccessful.\n\nsize_field_ids: Iterable[int], optional\n\nIds of size fields read by read size field operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSplineContinuityType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCdbAnalysisType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTCASE.html#unsupportedfileextensionforfluentcase","title":"UNSUPPORTEDFILEEXTENSIONFORFLUENTCASE","text":"UNSUPPORTEDFILEEXTENSIONFORFLUENTCASE\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTCASE = 9003\n\nProvided file extension is not supported. Supported extensions are .cas, .cas.gz and .cas.h5."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nZoneType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CheckMeshParams.print_default()\n\nPrint the default values of CheckMeshParams object.\n\nExamples\n\n>>> CheckMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.html#ansysmeshingprimegraphics","title":"ansys.meshing.prime.graphics","text":"ansys.meshing.prime.graphics\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSurfaceFeatureType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty EdgeConnectivityResults.error_code: ErrorCode\n\nError code associated with the get edge connectivity operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.WRAPPER.html#wrapper","title":"WRAPPER","text":"WRAPPER\n\n\n\nAdvancedSurferSetup.WRAPPER = 1\n\nOption to define advanced settings for wrapper surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nHexCoreTransitionLayerType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VolumeQualitySummaryParams.print_default()\n\nPrint the default values of VolumeQualitySummaryParams object.\n\nExamples\n\n>>> VolumeQualitySummaryParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.absolute_dist_tol.html#absolute_dist_tol","title":"absolute_dist_tol","text":"absolute_dist_tol\n\n\n\nproperty ScaffolderParams.absolute_dist_tol: float\n\nDefines the maximum gap to connect."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaAnalysisType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nLSDynaAnalysisType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.number_of_threads.html#number_of_threads","title":"number_of_threads","text":"number_of_threads\n\n\n\nproperty ExtractFeatureParams.number_of_threads: int\n\nNumber of threads used for multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.number_of_threads.html#number_of_threads","title":"number_of_threads","text":"number_of_threads\n\n\n\nproperty CreateBOIParams.number_of_threads: int\n\nNumber of threads for multithreading."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ScopeEvaluationType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismStairStep.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PrismStairStep.print_default()\n\nPrint the default values of PrismStairStep object.\n\nExamples\n\n>>> PrismStairStep.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSeparateBlocksFormatType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.AUTOMESHINVALIDMAXSIZE.html#automeshinvalidmaxsize","title":"AUTOMESHINVALIDMAXSIZE","text":"AUTOMESHINVALIDMAXSIZE\n\n\n\nErrorCode.AUTOMESHINVALIDMAXSIZE = 116\n\nInvalid max size for auto volume meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.real.html#real","title":"real","text":"real\n\n\n\nBodyQueryType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.imag.html#imag","title":"imag","text":"imag\n\n\n\nEdgeConnectType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nLengthUnit.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCadRefacetingResolution.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.print_id.html#print_id","title":"print_id","text":"print_id\n\n\n\nproperty Part.print_id: bool\n\nWhether IDs of TopoEntities or zonelets are set to print along with the part summary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.html#computevolumesresults","title":"ComputeVolumesResults","text":"ComputeVolumesResults\n\n\n\nclass ansys.meshing.prime.ComputeVolumesResults(model=None, error_code=None, error_locations=None, volumes=None, material_point_volumes=None, external_open_face_zonelets=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with compute volumes.\n\nParameters\n\nmodel: Model\n\nModel to create a ComputeVolumesResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nerror_locations: Iterable[float], optional\n\nCoordinates of problematic locations in the surface mesh.\n\nvolumes: Iterable[int], optional\n\nIds of computed volumes.\n\nmaterial_point_volumes: Iterable[int], optional\n\nIds of computed volumes enclosing material points.\n\nexternal_open_face_zonelets: Iterable[int], optional\n\nFace zonelet ids that are in external space and not part of any computed volumes.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the compute volumes.\n\njson_data: dict, optional\n\nJSON dictionary to create a ComputeVolumesResults object with provided parameters.\n\nExamples\n\n>>> compute_volumes_results = prime.ComputeVolumesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nLabelToZoneMethod.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nCadReaderRoute.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MICROSTRUCTUREQUADRATICHEXREQUIREDQUADRATICVOXELGRID.html#microstructurequadratichexrequiredquadraticvoxelgrid","title":"MICROSTRUCTUREQUADRATICHEXREQUIREDQUADRATICVOXELGRID","text":"MICROSTRUCTUREQUADRATICHEXREQUIREDQUADRATICVOXELGRID\n\n\n\nErrorCode.MICROSTRUCTUREQUADRATICHEXREQUIREDQUADRATICVOXELGRID = 13006\n\nVolume mesh generation for hexahedra requires generation of a quadratic voxel grid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileReadResults.html#filereadresults","title":"FileReadResults","text":"FileReadResults\n\n\n\nclass ansys.meshing.prime.FileReadResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults of file read operation.\n\nParameters\n\nmodel: Model\n\nModel to create a FileReadResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code if file read operation was unsuccessful.\n\njson_data: dict, optional\n\nJSON dictionary to create a FileReadResults object with provided parameters.\n\nExamples\n\n>>> file_read_results = prime.FileReadResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.set_live_material_points.html#set_live_material_points","title":"set_live_material_points","text":"set_live_material_points\n\n\n\nWrapperControl.set_live_material_points(material_point_names)\n\nSet live material points to the wrapper control.\n\nParameters\n\nmaterial_point_names\n\nList[python:str]\n\nList of live material points.\n\nExamples\n\n>>> wrapper_control.set_live_material_points([\"Fluid1\"])"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.DELETESMALL.html#deletesmall","title":"DELETESMALL","text":"DELETESMALL\n\n\n\nHexCoreTransitionLayerType.DELETESMALL = 1\n\nRemove neighboring hexes of different size by deleting a layer of smaller cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateCapParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateCapParams.set_default()\n\nSet the default values of the CreateCapParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_NOFACEFOUNDINVOLUMES.html#stacker_nofacefoundinvolumes","title":"STACKER_NOFACEFOUNDINVOLUMES","text":"STACKER_NOFACEFOUNDINVOLUMES\n\n\n\nErrorCode.STACKER_NOFACEFOUNDINVOLUMES = 10105\n\nNo faces are found in the specified volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ResolveIntersectionsParams.number_of_threads.html#number_of_threads","title":"number_of_threads","text":"number_of_threads\n\n\n\nproperty ResolveIntersectionsParams.number_of_threads: int\n\nNumber of threads for resolve intersections multithreaded operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoiSizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SoiSizingParams.print_default()\n\nPrint the default values of SoiSizingParams object.\n\nExamples\n\n>>> SoiSizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nBCsVolumetricModality.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSizingType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesParams.create_zone.html#create_zone","title":"create_zone","text":"create_zone\n\n\n\nproperty ExtractVolumesParams.create_zone: bool\n\nOption to create zone for flow volumes extracted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SizeFieldType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SUBTRACTZONELETSFAILED.html#subtractzoneletsfailed","title":"SUBTRACTZONELETSFAILED","text":"SUBTRACTZONELETSFAILED\n\n\n\nErrorCode.SUBTRACTZONELETSFAILED = 2903\n\nUnable to subtract cutters from input zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.create_boi.html#create_boi","title":"create_boi","text":"create_boi\n\n\n\nSurfaceUtilities.create_boi(face_zonelet_ids, params)\n\nCreate BOI to input face zonelets.\n\nParameters\n\nface_zonelet_ids\n\nIterable[python:int]\n\nList of input face zonelet IDs.\n\nparams\n\nCreateBOIParams\n\nParameters for controlling BOI creation.\n\nReturns\n\n:\n\n\n\nCreateBOIResults\n\nResults from creating BOI.\n\nReturn type\n\nCreateBOIResults\n\nExamples\n\n>>> result = surf_utils.create_boi(zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.FACEZONELETSFEATURESNOTUPTODATE.html#facezoneletsfeaturesnotuptodate","title":"FACEZONELETSFEATURESNOTUPTODATE","text":"FACEZONELETSFEATURESNOTUPTODATE\n\n\n\nErrorCode.FACEZONELETSFEATURESNOTUPTODATE = 10\n\nFace zonelets features are not up to date."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.INCONSISTENTNORMALORIENTATIONTOPOFACES.html#inconsistentnormalorientationtopofaces","title":"INCONSISTENTNORMALORIENTATIONTOPOFACES","text":"INCONSISTENTNORMALORIENTATIONTOPOFACES\n\n\n\nTopoSearchField.INCONSISTENTNORMALORIENTATIONTOPOFACES = 8\n\nDiagnoses topofaces with inconsistent normal orientations.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SPLITANDCOLLAPSEFACEELEMENTSFAILED.html#splitandcollapsefaceelementsfailed","title":"SPLITANDCOLLAPSEFACEELEMENTSFAILED","text":"SPLITANDCOLLAPSEFACEELEMENTSFAILED\n\n\n\nErrorCode.SPLITANDCOLLAPSEFACEELEMENTSFAILED = 2101\n\nFailed to split and collapse face element(s)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ExportLSDynaResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PrismParams.set_default(stair_step=None, no_imprint_zonelets=None)\n\nSet the default values of the PrismParams object.\n\nParameters\n\nstair_step: PrismStairStep, optional\n\nPrism stairstep parameters.\n\nno_imprint_zonelets: Iterable[int], optional\n\nOption to specify zonelets to skip prism imprint."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Connect.stitch_face_zonelets.html#stitch_face_zonelets","title":"stitch_face_zonelets","text":"stitch_face_zonelets\n\n\n\nConnect.stitch_face_zonelets(part_id, face_zonelet_ids, with_face_zonelet_ids, params)\n\nStitches a set of face zonelets with another set of face zonelets.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nface_zonelet_ids\n\nIterable[python:int]\n\nFace zonelets to be stitched.\n\nwith_face_zonelet_ids\n\nIterable[python:int]\n\nFace zonelets to be stitched with.\n\nparams\n\nStitchParams\n\nParameters for stitch.\n\nReturns\n\n:\n\n\n\nConnectResults\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.stitch_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, stitch_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapResult.name.html#name","title":"name","text":"name\n\n\n\nproperty WrapResult.name: str\n\nName of wrapper part created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.delete_volumetric_size_fields.html#delete_volumetric_size_fields","title":"delete_volumetric_size_fields","text":"delete_volumetric_size_fields\n\n\n\nModel.delete_volumetric_size_fields(size_field_ids)\n\nDelete the sizefields identified by the given sizefield ids.\n\nParameters\n\nsize_field_ids\n\nIterable[python:int]\n\nList of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.delete_volumetric_size_fields(size_field_ids)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.detect_non_circular_holes_params.html#detect_non_circular_holes_params","title":"detect_non_circular_holes_params","text":"detect_non_circular_holes_params\n\n\n\nproperty DetectAndTreatHolesParams.detect_non_circular_holes_params: DetectNonCircularHolesParams\n\nParameters for detect non circular holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.REFINEATCONTACTSFAILED.html#refineatcontactsfailed","title":"REFINEATCONTACTSFAILED","text":"REFINEATCONTACTSFAILED\n\n\n\nErrorCode.REFINEATCONTACTSFAILED = 2908\n\nFailed to refine at contacts."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.html#volumefilltype","title":"VolumeFillType","text":"VolumeFillType\n\n\n\nclass ansys.meshing.prime.VolumeFillType(*values)\n\nTypes of volume fill options.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.html#examples-using-volumefilltype","title":"VolumeFillType > Examples using VolumeFillType","text":"Examples using VolumeFillType\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.cad_update_parameters.html#cad_update_parameters","title":"cad_update_parameters","text":"cad_update_parameters\n\n\n\nproperty ImportCadParams.cad_update_parameters: Dict[str, str | int | float | bool]\n\nSpecify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceMeshSizeScaling.html#surfacemeshsizescaling","title":"SurfaceMeshSizeScaling","text":"SurfaceMeshSizeScaling\n\n\n\nclass ansys.meshing.prime.SurfaceMeshSizeScaling(model=None, factor=None, size_range_min=None, size_range_max=None, json_data=None, **kwargs)\n\nSettings related to scaling of surface mesh size for hexcore refinement.\n\nParameters\n\nmodel: Model\n\nModel to create a SurfaceMeshSizeScaling object with default parameters.\n\nfactor: float, optional\n\nValue by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_min: float, optional\n\nMinimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_max: float, optional\n\nMaximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\njson_data: dict, optional\n\nJSON dictionary to create a SurfaceMeshSizeScaling object with provided parameters.\n\nExamples\n\n>>> surface_mesh_size_scaling = prime.SurfaceMeshSizeScaling(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSolid.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic IGAUnstructuredSplineSolid.set_default(id=None, degree=None, invalid_jacobian_elements_count=None)\n\nSet the default values of the IGAUnstructuredSplineSolid object.\n\nParameters\n\nid: int, optional\n\nId of the unstructured spline solid.\n\ndegree: int, optional\n\nDegree of the spline solid.\n\ninvalid_jacobian_elements_count: int, optional\n\nCount of elements with negative jacobian."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesParams.neighbor_volumes.html#neighbor_volumes","title":"neighbor_volumes","text":"neighbor_volumes\n\n\n\nproperty MergeVolumesParams.neighbor_volumes: Iterable[int]\n\nIds of volume that are neighbors to given volumes for merging."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetLeakPreventionsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SetLeakPreventionsResults.print_default()\n\nPrint the default values of SetLeakPreventionsResults object.\n\nExamples\n\n>>> SetLeakPreventionsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplitParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SplitParams.print_default()\n\nPrint the default values of SplitParams object.\n\nExamples\n\n>>> SplitParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CellStatisticsParams.set_default(get_volume=None)\n\nSet the default values of the CellStatisticsParams object.\n\nParameters\n\nget_volume: bool, optional\n\nProvides option to compute and get cumulative cell volume of all element."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleParams.fill_annular_hole.html#fill_annular_hole","title":"fill_annular_hole","text":"fill_annular_hole\n\n\n\nproperty TopoFillHoleParams.fill_annular_hole: bool\n\nOption for filling holes with annular bounding loops."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CurvatureSizingParams.set_default(min=None, max=None, growth_rate=None, normal_angle=None, use_cad_curvature=None)\n\nSet the default values of the CurvatureSizingParams object.\n\nParameters\n\nmin: float, optional\n\nMinimum size used for computing edge and face size using curavture size control.\n\nmax: float, optional\n\nMaximum size used for computing edge and face size using curavture size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nnormal_angle: float, optional\n\nMaximum allowable angle at which one element edge may span.\n\nuse_cad_curvature: bool, optional\n\nOption to enable use of CAD curvature for computing edge and face size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.get_scalar_colors.html#get_scalar_colors","title":"get_scalar_colors","text":"get_scalar_colors\n\n\n\nPrimePlotter.get_scalar_colors(mesh_info)\n\nGet the scalar colors for the mesh.\n\nParameters\n\nmesh_info\n\nDisplayMeshInfo\n\nMesh information that generates an appropriate color.\n\nReturns\n\n:\n\n\n\nnp.ndarray\n\nScalar colors for the mesh.\n\nReturn type\n\nndarray"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeParams.html#fixinvalidnormalnodeparams","title":"FixInvalidNormalNodeParams","text":"FixInvalidNormalNodeParams\n\n\n\nclass ansys.meshing.prime.FixInvalidNormalNodeParams(model=None, nugget_size=None, nugget_mesh_size=None, label=None, json_data=None, **kwargs)\n\nParameters to fix invalid average face normal at nodes by creating a nugget.\n\nParameters\n\nmodel: Model\n\nModel to create a FixInvalidNormalNodeParams object with default parameters.\n\nnugget_size: float, optional\n\nRelative size used to create nugget at invalid normal node. The size is relative to mesh size at the node.\n\nnugget_mesh_size: float, optional\n\nRelative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\nlabel: str, optional\n\nLabel to set on new face zonelets created.\n\njson_data: dict, optional\n\nJSON dictionary to create a FixInvalidNormalNodeParams object with provided parameters.\n\nExamples\n\n>>> fix_invalid_normal_node_params = prime.FixInvalidNormalNodeParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentCaseParams.html#exportfluentcaseparams","title":"ExportFluentCaseParams","text":"ExportFluentCaseParams\n\n\n\nclass ansys.meshing.prime.ExportFluentCaseParams(model=None, cff_format=None, json_data=None, **kwargs)\n\nParameters to export fluent case file.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportFluentCaseParams object with default parameters.\n\ncff_format: bool, optional\n\nOption to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz).\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportFluentCaseParams object with provided parameters.\n\nExamples\n\n>>> export_fluent_case_params = prime.ExportFluentCaseParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentCaseParams.html#examples-using-exportfluentcaseparams","title":"ExportFluentCaseParams > Examples using ExportFluentCaseParams","text":"Examples using ExportFluentCaseParams\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaResults.summary_log.html#summary_log","title":"summary_log","text":"summary_log\n\n\n\nproperty ExportLSDynaResults.summary_log: str\n\nSummary log for the import operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nLSDynaFileFormatType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSpline.refine_spline.html#refine_spline","title":"refine_spline","text":"refine_spline\n\n\n\nBoundaryFittedSpline.refine_spline(part_id, spline_ids, refine_spline_params)\n\nRefine boundary fitted splines.\n\nNow H and P refinement are supported.\nRefinement along one or more dimension can be suppressed using refinement parameters in the input.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nspline_ids\n\nIterable[python:int]\n\nIds of the splines on which refinement is performed.\n\nrefine_spline_params\n\nRefineSplineParams\n\nStructure containing parameters for spline refinement.\n\nReturns\n\n:\n\n\n\nIGAResults\n\nReturns the IGAResults Structure.\n\nReturn type\n\nIGAResults\n\nExamples\n\n>>> from ansys.meshing.prime import BoundaryFittedSpline\n>>> #connect client to server and get model from it\n>>> client = Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> boundary_fitted_spline = BoundaryFittedSpline(model = model)\n>>> results = boundary_fitted_spline.refine_spline(part_id, spline_ids, refine_spline_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCdbSimulationType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SoiSizingParams.max.html#max","title":"max","text":"max\n\n\n\nproperty SoiSizingParams.max: float\n\nMaximum size within the sphere.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchMorphResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MatchMorphResults.print_default()\n\nPrint the default values of MatchMorphResults object.\n\nExamples\n\n>>> MatchMorphResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.real.html#real","title":"real","text":"real\n\n\n\nCadFaceter.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.PrimePlotter.add_model_pd.html#add_model_pd","title":"add_model_pd","text":"add_model_pd\n\n\n\nPrimePlotter.add_model_pd(model_pd)\n\nAdd a model to the plotter.\n\nParameters\n\nmodel\n\nModel\n\nModel to add to the plotter.\n\nReturn type\n\nNone"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.constant_mesh_size.html#constant_mesh_size","title":"constant_mesh_size","text":"constant_mesh_size\n\n\n\nproperty ScaffolderParams.constant_mesh_size: float\n\nDefines the constant edge mesh size to check connection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nWarningCode.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNITEZONELETSFAILED.html#unitezoneletsfailed","title":"UNITEZONELETSFAILED","text":"UNITEZONELETSFAILED\n\n\n\nErrorCode.UNITEZONELETSFAILED = 2907\n\nFailed to unite input zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeadRegion.dead_material_points.html#dead_material_points","title":"dead_material_points","text":"dead_material_points\n\n\n\nproperty DeadRegion.dead_material_points: List[str]\n\nMaterial points to identify dead region.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSeparateBlocksFormatType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSeparateBlocksFormatType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nWrapRegion.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.READPMDATFAILED.html#readpmdatfailed","title":"READPMDATFAILED","text":"READPMDATFAILED\n\n\n\nErrorCode.READPMDATFAILED = 525\n\nPMDAT file read failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectHolesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DetectHolesParams.set_default(max_radius_circular_holes=None, min_radius_circular_holes=None, max_hole_length=None, min_hole_length=None, allow_curved_topo_faces=None)\n\nSet the default values of the DetectHolesParams object.\n\nParameters\n\nmax_radius_circular_holes: float, optional\n\nMaximum radius of circular holes.\n\nmin_radius_circular_holes: float, optional\n\nMinimum radius of circular holes.\n\nmax_hole_length: float, optional\n\nMaximum length of holes.\n\nmin_hole_length: float, optional\n\nMinimum length of holes.\n\nallow_curved_topo_faces: bool, optional\n\nOption to allow holes in curved topoface."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCellZoneletType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_part.html#get_part","title":"get_part","text":"get_part\n\n\n\nModel.get_part(id)\n\nGet the part by ID.\n\nParameters\n\nid\n\npython:int\n\nID of the part.\n\nReturns\n\n:\n\n\n\nPart\n\nPart or None if the given part ID doesn’t exist.\n\nReturn type\n\nPart\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part(2)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_part.html#examples-using-modelget_part","title":"get_part > Examples using Model.get_part","text":"Examples using Model.get_part\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismStairStep.html#prismstairstep","title":"PrismStairStep","text":"PrismStairStep\n\n\n\nclass ansys.meshing.prime.PrismStairStep(model=None, check_proximity=None, gap_factor_scale=None, json_data=None, **kwargs)\n\nParameters to control prism stairsteping.\n\nParameters\n\nmodel: Model\n\nModel to create a PrismStairStep object with default parameters.\n\ncheck_proximity: bool, optional\n\nCheck whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\ngap_factor_scale: float, optional\n\nScale factor for prism proximity detection gap factor.\n\njson_data: dict, optional\n\nJSON dictionary to create a PrismStairStep object with provided parameters.\n\nExamples\n\n>>> prism_stair_step = prime.PrismStairStep(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FaceAndEdgeConnectivityParams.print_default()\n\nPrint the default values of FaceAndEdgeConnectivityParams object.\n\nExamples\n\n>>> FaceAndEdgeConnectivityParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaKeywordFileParams.material_properties.html#material_properties","title":"material_properties","text":"material_properties\n\n\n\nproperty ExportLSDynaKeywordFileParams.material_properties: str\n\nMaterials in LS-DYNA format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.rel_peel_layer_offset.html#rel_peel_layer_offset","title":"rel_peel_layer_offset","text":"rel_peel_layer_offset\n\n\n\nproperty HexCoreParams.rel_peel_layer_offset: float\n\nGap between hexahedral core and geometry surface relative to the surface mesh size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.num_face_list_per_face_zonelet.html#num_face_list_per_face_zonelet","title":"num_face_list_per_face_zonelet","text":"num_face_list_per_face_zonelet\n\n\n\nproperty FaceConnectivityResults.num_face_list_per_face_zonelet: Iterable[int]\n\nNumber of face list per face zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LabelExportParams.label_expression_for_nodal_components.html#label_expression_for_nodal_components","title":"label_expression_for_nodal_components","text":"label_expression_for_nodal_components\n\n\n\nproperty LabelExportParams.label_expression_for_nodal_components: str\n\nLabel expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsParams.delete_overlaps.html#delete_overlaps","title":"delete_overlaps","text":"delete_overlaps\n\n\n\nproperty DeleteFringesAndOverlapsParams.delete_overlaps: bool\n\nOption to delete overlaps. The default is false."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoiSizingParams.html#boisizingparams","title":"BoiSizingParams","text":"BoiSizingParams\n\n\n\nclass ansys.meshing.prime.BoiSizingParams(model=None, max=None, growth_rate=None, json_data=None, **kwargs)\n\nSize field computed using body of influence size control enables you to specify a body of influence(that is, a region for sizing control).\n\nThe maximum mesh size will be equal to the specified size within the body of influence.\nThe minimum size will be determined based on the influence of other size controls.\n\nParameters\n\nmodel: Model\n\nModel to create a BoiSizingParams object with default parameters.\n\nmax: float, optional\n\nMaximum size used for computing edge and face size using boi size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\njson_data: dict, optional\n\nJSON dictionary to create a BoiSizingParams object with provided parameters.\n\nExamples\n\n>>> boi_sizing_params = prime.BoiSizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCadRefacetingResolution.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nFlowDirection.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSmoothType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_topo_edges.html#n_topo_edges","title":"n_topo_edges","text":"n_topo_edges\n\n\n\nproperty PartSummaryResults.n_topo_edges: int\n\nNumber of topoedges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FaceAndEdgeConnectivityResults.print_default()\n\nPrint the default values of FaceAndEdgeConnectivityResults object.\n\nExamples\n\n>>> FaceAndEdgeConnectivityResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.initialize_cdb_export_params.html#initialize_cdb_export_params","title":"initialize_cdb_export_params","text":"initialize_cdb_export_params\n\n\n\nFileIO.initialize_cdb_export_params(params, major_version, minor_version)\n\nInitialize specific CDB export parameters based on the given version.\n\nThis function sets the separate_blocks_format_type, export_fasteners_as_swgen and\nexport_rigid_bodies_as_rbgen parameters of the provided ExportMapdlCdbParams\nobject based on the given major and minor version numbers.\nOther parameters remain unchanged.\n\nParameters\n\nparams\n\nExportMapdlCdbParams\n\nThe CDB export parameters object to be modified.\n\nmajor_version\n\npython:int\n\nThe major version number.\n\nminor_version\n\npython:int\n\nThe minor version number.\n\nReturns\n\n:\n\n\n\nExportMapdlCdbParams\n\nThe modified CDB export parameters object.\n\nReturn type\n\nExportMapdlCdbParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nThe version is formed as “<major_version>r<minor_version>”, e.g., “24r1”, “25r2”.\nIf the version is greater than or equal to “25r1”, write_separate_blocks is set to True\nwith COMPACT format, and export_fasteners_as_swgen and export_rigid_bodies_as_rbgen\nparameters are set to True. Otherwise, they are set to False.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams()\n>>> params = file_io.initialize_cdb_export_params(params, 24, 1)\n>>> params.write_separate_blocks\nFalse\n>>> params.export_fasteners_as_swgen\nFalse\n>>> params.export_rigid_bodies_as_swgen\nFalse\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams()\n>>> params = file_io.initialize_cdb_export_params(params, 25, 2)\n>>> params.write_separate_blocks\nTrue\n>>> params.separate_blocks_format_type\nSeparateBlocksFormatType.COMPACT\n>>> params.export_fasteners_as_swgen\nTrue\n>>> params.export_rigid_bodies_as_swgen\nTrue"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.set_volume_scope.html#set_volume_scope","title":"set_volume_scope","text":"set_volume_scope\n\n\n\nPrismControl.set_volume_scope(entities)\n\nSets the volume control scope.\n\nParameters\n\nentities\n\nScopeDefinition\n\nScope definition entities.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = prism_control.set_volume_scope(entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.set_volume_scope.html#examples-using-prismcontrolset_volume_scope","title":"set_volume_scope > Examples using PrismControl.set_volume_scope","text":"Examples using PrismControl.set_volume_scope\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FaceConnectivityResults.print_default()\n\nPrint the default values of FaceConnectivityResults object.\n\nExamples\n\n>>> FaceConnectivityResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.html#shellbloffsettype","title":"ShellBLOffsetType","text":"ShellBLOffsetType\n\n\n\nclass ansys.meshing.prime.ShellBLOffsetType(*values)\n\nType of offset method during ShellBL generation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STITCHWITHPRESERVEDENTITIESFAILED.html#stitchwithpreservedentitiesfailed","title":"STITCHWITHPRESERVEDENTITIESFAILED","text":"STITCHWITHPRESERVEDENTITIESFAILED\n\n\n\nErrorCode.STITCHWITHPRESERVEDENTITIESFAILED = 858\n\nStitch with preserved entities failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_INVALIDFEATURERECOVERYCONTROLID.html#wrappercontrol_invalidfeaturerecoverycontrolid","title":"WRAPPERCONTROL_INVALIDFEATURERECOVERYCONTROLID","text":"WRAPPERCONTROL_INVALIDFEATURERECOVERYCONTROLID\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDFEATURERECOVERYCONTROLID = 3425\n\nFeature recovery control specified under wrapper control doesn’t exist."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod PartCreationType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.add_volumes_to_zone.html#add_volumes_to_zone","title":"add_volumes_to_zone","text":"add_volumes_to_zone\n\n\n\nPart.add_volumes_to_zone(zone_id, volumes)\n\nAdd volumes to zone.\n\nParameters\n\nzone_id\n\npython:int\n\nId of a zone .\n\nvolumes\n\nIterable[python:int]\n\nIds of volumes to be added.\n\nReturns\n\n:\n\n\n\nAddToZoneResults\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_volumes_to_zone(zone_id, volumes)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.merge_volumes.html#merge_volumes","title":"merge_volumes","text":"merge_volumes\n\n\n\nPart.merge_volumes(volumes, params)\n\nMerge volumes by removing shared face zonelets.\n\nParameters\n\nvolumes\n\nIterable[python:int]\n\nIds of volumes to be merged.\n\nparams\n\nMergeVolumesParams\n\nParameters to merge volumes.\n\nReturns\n\n:\n\n\n\nMergeVolumesResults\n\nReturns the MergeVolumesResults.\n\nReturn type\n\nMergeVolumesResults\n\nExamples\n\nparams = prime.MergeVolumesParams(model = model)\nresults = part.merge_volumes(volumes, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.n_rings.html#n_rings","title":"n_rings","text":"n_rings\n\n\n\nproperty LocalSurferParams.n_rings: int\n\nNumber of rings to extend the registered face selection for remeshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.FREETOFREE.html#freetofree","title":"FREETOFREE","text":"FREETOFREE\n\n\n\nEdgeMergeControl.FREETOFREE = 3\n\nAllows to merge free edge into other free edge only.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.remove_zone_on_topo_entities.html#remove_zone_on_topo_entities","title":"remove_zone_on_topo_entities","text":"remove_zone_on_topo_entities\n\n\n\nPart.remove_zone_on_topo_entities(topo_entities)\n\nRemoves zone on the given topoentities.\n\nParameters\n\ntopo_entities\n\nIterable[python:int]\n\nTopoentity ids whose zone is to be removed.\n\nReturns\n\n:\n\n\n\nRemoveZoneResults\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_topo_entities(topo_entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.get_adjacent_topo_edges_of_topo_edges.html#get_adjacent_topo_edges_of_topo_edges","title":"get_adjacent_topo_edges_of_topo_edges","text":"get_adjacent_topo_edges_of_topo_edges\n\n\n\nTopoData.get_adjacent_topo_edges_of_topo_edges(topo_edges)\n\nGet the adjacent topoedges for the provided topoedge ids.\n\nParameters\n\ntopo_edges\n\nIterable[python:int]\n\nIds of the topoedge.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of adjacent topoedge ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges_of_topo_edges = topo_data.get_adjacent_topo_edges_of_topo_edges(topo_edges)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateContactPatchParams.set_default(contact_patch_axis=None, offset_distance=None, grouping_tolerance=None, suggested_part_name=None, suggested_label_prefix=None)\n\nSet the default values of the CreateContactPatchParams object.\n\nParameters\n\ncontact_patch_axis: ContactPatchAxis, optional\n\nAssigns the contact patch direction.\n\noffset_distance: float, optional\n\nSource offset distance value.\n\ngrouping_tolerance: float, optional\n\nTolerance distance value to group regions for contact patch creation.\n\nsuggested_part_name: str, optional\n\nSuggested part name for created contact patch surfaces.\n\nsuggested_label_prefix: str, optional\n\nSuggested label name for created contact patch surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.intersecting_zonelet_pairs.html#intersecting_zonelet_pairs","title":"intersecting_zonelet_pairs","text":"intersecting_zonelet_pairs\n\n\n\nproperty FuseResults.intersecting_zonelet_pairs: List[OverlapPairs]\n\nContains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTSTLFAILEDWITHHIGHERORDERMESH.html#exportstlfailedwithhigherordermesh","title":"EXPORTSTLFAILEDWITHHIGHERORDERMESH","text":"EXPORTSTLFAILEDWITHHIGHERORDERMESH\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHHIGHERORDERMESH = 556\n\nExport STL not supported for higher order mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDEGROWTHRATEPARAM.html#overridegrowthrateparam","title":"OVERRIDEGROWTHRATEPARAM","text":"OVERRIDEGROWTHRATEPARAM\n\n\n\nWarningCode.OVERRIDEGROWTHRATEPARAM = 209\n\nOverriding growth rate parameter."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.html#fuseresults","title":"FuseResults","text":"FuseResults\n\n\n\nclass ansys.meshing.prime.FuseResults(model=None, fused_pairs=None, fused_area=None, error_code=None, warning_codes=None, intersecting_locations=None, intersecting_zonelet_pairs=None, json_data=None, **kwargs)\n\nResults associated with the fuse operations.\n\nParameters\n\nmodel: Model\n\nModel to create a FuseResults object with default parameters.\n\nfused_pairs: int, optional\n\nNumber of face region pairs that were fused.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfused_area: float, optional\n\nTotal area of fused regions from both source and target faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of the fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nintersecting_locations: Iterable[float], optional\n\nLocations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nintersecting_zonelet_pairs: List[OverlapPairs], optional\n\nContains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a FuseResults object with provided parameters.\n\nExamples\n\n>>> fuse_results = prime.FuseResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERAUTOSIZEMUSTBEVOLUMETRIC.html#surferautosizemustbevolumetric","title":"SURFERAUTOSIZEMUSTBEVOLUMETRIC","text":"SURFERAUTOSIZEMUSTBEVOLUMETRIC\n\n\n\nErrorCode.SURFERAUTOSIZEMUSTBEVOLUMETRIC = 12\n\nAuto sizing must be of volumetric type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.numpy_array_optimization_disabled.html#numpy_array_optimization_disabled","title":"numpy_array_optimization_disabled","text":"numpy_array_optimization_disabled\n\n\n\nansys.meshing.prime.numpy_array_optimization_disabled()\n\nContext helper to execute code with numpy optimization disabled."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nIntersectionMask.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ReadSizeFieldParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ReadSizeFieldParams.set_default(append=None)\n\nSet the default values of the ReadSizeFieldParams object.\n\nParameters\n\nappend: bool, optional\n\nOption to append the size fields from file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.quality_limit.html#quality_limit","title":"quality_limit","text":"quality_limit\n\n\n\nproperty VolumeQualityResultsPart.quality_limit: float\n\nTarget quality limit used to find failures."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SIZEFIELDNOTFOUND.html#sizefieldnotfound","title":"SIZEFIELDNOTFOUND","text":"SIZEFIELDNOTFOUND\n\n\n\nErrorCode.SIZEFIELDNOTFOUND = 302\n\nSize field not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SUBTRACTVOLUMEFAILED.html#subtractvolumefailed","title":"SUBTRACTVOLUMEFAILED","text":"SUBTRACTVOLUMEFAILED\n\n\n\nErrorCode.SUBTRACTVOLUMEFAILED = 47\n\nFailed to subtract volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportMapdlCdbResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the ImportMapdlCdbResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetSizingResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SetSizingResults.error_code: ErrorCode\n\nError code associated with the set sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectHolesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DetectHolesParams.print_default()\n\nPrint the default values of DetectHolesParams object.\n\nExamples\n\n>>> DetectHolesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.imag.html#imag","title":"imag","text":"imag\n\n\n\nFuseOption.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderParams.remove_holes_critical_radius.html#remove_holes_critical_radius","title":"remove_holes_critical_radius","text":"remove_holes_critical_radius\n\n\n\nproperty ScaffolderParams.remove_holes_critical_radius: float\n\nDefines the maximum radius of holes to be removed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nScopeEntity.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ENTITIESSHOULDBEADDEDTOZONEUSINGPARTITBELONGS.html#entitiesshouldbeaddedtozoneusingpartitbelongs","title":"ENTITIESSHOULDBEADDEDTOZONEUSINGPARTITBELONGS","text":"ENTITIESSHOULDBEADDEDTOZONEUSINGPARTITBELONGS\n\n\n\nErrorCode.ENTITIESSHOULDBEADDEDTOZONEUSINGPARTITBELONGS = 309\n\nEntities should be added to zone using part it belongs."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ImportMapdlCdbResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis section gives an overview of all API classes, methods, and parameters present in PyPrimeMesh.\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteMeshResults.set_default(error_code=None)\n\nSet the default values of the DeleteMeshResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.from_geometry.html#from_geometry","title":"from_geometry","text":"from_geometry\n\n\n\nMesh.from_geometry(design, import_type=ImportTypes.FMD)\n\nImport geometry from an Ansys Design object.\n\nParameters\n\ndesign\n\nansys.geometry.core.Design\n\nAnsys Design object to import geometry from.\n\nimport_type\n\nImportTypes, optional\n\nType of import. The default is ImportTypes.FMD."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSolverType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nShellBLOffsetType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryParams.html#volumequalitysummaryparams","title":"VolumeQualitySummaryParams","text":"VolumeQualitySummaryParams\n\n\n\nclass ansys.meshing.prime.VolumeQualitySummaryParams(model=None, cell_quality_measures=None, scope=None, quality_limit=None, json_data=None, **kwargs)\n\nParameters to control volume quality summary results.\n\nParameters\n\nmodel: Model\n\nModel to create a VolumeQualitySummaryParams object with default parameters.\n\ncell_quality_measures: List[CellQualityMeasure], optional\n\nList of cell quality measures for volume quality diagnostics.\n\nscope: ScopeDefinition, optional\n\nScope of the cell zonelets for volume quality diagnostics.\n\nquality_limit: Iterable[float], optional\n\nQuality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used.\n\njson_data: dict, optional\n\nJSON dictionary to create a VolumeQualitySummaryParams object with provided parameters.\n\nExamples\n\n>>> volume_quality_summary_params = prime.VolumeQualitySummaryParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryParams.html#examples-using-volumequalitysummaryparams","title":"VolumeQualitySummaryParams > Examples using VolumeQualitySummaryParams","text":"Examples using VolumeQualitySummaryParams\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.first_height.html#first_height","title":"first_height","text":"first_height\n\n\n\nproperty PrismControlGrowthParams.first_height: float\n\nHeight to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.min_quality.html#min_quality","title":"min_quality","text":"min_quality\n\n\n\nproperty VolumeQualityResultsPart.min_quality: float\n\nMinimum value of quality measure."},{"objectID":"Home","href":"user_guide/lucid.html#common-meshing-tasks-and-the-lucid-module","title":"Common meshing tasks and the Lucid module","text":"Common meshing tasks and the Lucid module\n\nThe lucid module defines high-level methods to abstract\nand simplify common meshing tasks. Methods contained in this module are intended to demonstrate\nhow the low-level APIs can be combined to execute meshing workflows flexibly and with minimal\nneed for understanding PyPrimeMesh-specific concepts. The methods use global automatic defaults\nwhere possible to reduce effort in creating general purpose operations.\n\nMany common meshing tasks and workflows can be tackled easily using the functions provided.\n\nHere is an example of meshing the mixing elbow case for a fluid flow analysis:"},{"objectID":"Home","href":"user_guide/lucid.html#remesh-surface-using-the-lucid-module","title":"Common meshing tasks and the Lucid module > Remesh surface using the Lucid module","text":"Remesh surface using the Lucid module\n\nThis code shows how to remesh the surface using the Lucid module:"},{"objectID":"Home","href":"user_guide/lucid.html#surface-wrapping-using-the-lucidmesh-class","title":"Common meshing tasks and the Lucid module > Surface wrapping using the lucid.Mesh class","text":"Surface wrapping using the lucid.Mesh class\n\nThis example shows you surface wrapping using lucid to get the desired surface mesh results:"},{"objectID":"Home","href":"user_guide/lucid.html#prism-controls-for-polyhedral-mesh-using-the-lucid-module","title":"Common meshing tasks and the Lucid module > Prism controls for polyhedral mesh using the Lucid module","text":"Prism controls for polyhedral mesh using the Lucid module\n\nThis example shows how to generate poly prism method using the Lucid module:"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdResults.locations_found.html#locations_found","title":"locations_found","text":"locations_found\n\n\n\nproperty SearchInfoByRegisterIdResults.locations_found: Iterable[float]\n\nLocations of each cluster of registered face elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTMESHINGMESH.html#unsupportedfileextensionforfluentmeshingmesh","title":"UNSUPPORTEDFILEEXTENSIONFORFLUENTMESHINGMESH","text":"UNSUPPORTEDFILEEXTENSIONFORFLUENTMESHINGMESH\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTMESHINGMESH = 9002\n\nProvided file extension is not supported. Supported extensions are .msh and .msh.gz."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic StitchParams.print_default()\n\nPrint the default values of StitchParams object.\n\nExamples\n\n>>> StitchParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATEBOI_INVALIDFLOWDIRECTION.html#createboi_invalidflowdirection","title":"CREATEBOI_INVALIDFLOWDIRECTION","text":"CREATEBOI_INVALIDFLOWDIRECTION\n\n\n\nErrorCode.CREATEBOI_INVALIDFLOWDIRECTION = 383\n\nBOI creation failed. Invalid flow or wake direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartZonelets.html#partzonelets","title":"PartZonelets","text":"PartZonelets\n\n\n\nclass ansys.meshing.prime.PartZonelets(model=None, part_id=None, face_zonelets=None, json_data=None, **kwargs)\n\nA structure containing some or all face zonelet ids available in a part.\n\nParameters\n\nmodel: Model\n\nModel to create a PartZonelets object with default parameters.\n\npart_id: int, optional\n\nId of part.\n\nface_zonelets: Iterable[int], optional\n\nList of face zonelet ids available in the part.\n\njson_data: dict, optional\n\nJSON dictionary to create a PartZonelets object with provided parameters.\n\nExamples\n\n>>> part_zonelets = prime.PartZonelets(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetLeakPreventionsResults.ids.html#ids","title":"ids","text":"ids\n\n\n\nproperty SetLeakPreventionsResults.ids: Iterable[int]\n\nIds of added leak prevention controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCreateVolumeZonesType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.base_size.html#base_size","title":"base_size","text":"base_size\n\n\n\nproperty WrapperPatchFlowRegionsParams.base_size: float\n\nBase size to define octree.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.size_field_type.html#size_field_type","title":"size_field_type","text":"size_field_type\n\n\n\nproperty SurferParams.size_field_type: SizeFieldType\n\nSize field type used to generate surface mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.allow_curved_topo_faces.html#allow_curved_topo_faces","title":"allow_curved_topo_faces","text":"allow_curved_topo_faces\n\n\n\nproperty DefeatureTopologyParams.allow_curved_topo_faces: bool\n\nOption to allow curved topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SubtractVolumesResults.error_code: ErrorCode\n\nError code associated with the volume subtract operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.name.html#name","title":"name","text":"name\n\n\n\nproperty Model.name\n\nGet the name of Model."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SplineFeatureCaptureType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SOURCEORTARGETNOTSPECIFIED.html#sourceortargetnotspecified","title":"SOURCEORTARGETNOTSPECIFIED","text":"SOURCEORTARGETNOTSPECIFIED\n\n\n\nErrorCode.SOURCEORTARGETNOTSPECIFIED = 857\n\nNo target or source faces specified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.HEXANDPOLY.html#hexandpoly","title":"HEXANDPOLY","text":"HEXANDPOLY\n\n\n\nHexCoreCellElementType.HEXANDPOLY = 2\n\nGenerates a mix of poly type and hex type cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CollapseResults.set_default(error_code=None, n_collapsed=None, n_splits=None)\n\nSet the default values of the CollapseResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nn_collapsed: int, optional\n\nNumber of face elements collapsed.\n\nn_splits: int, optional\n\nNumber of face elements split."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nIntersectionMask.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CadRefacetingParams.print_default()\n\nPrint the default values of CadRefacetingParams object.\n\nExamples\n\n>>> CadRefacetingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneResults.created_zone_id.html#created_zone_id","title":"created_zone_id","text":"created_zone_id\n\n\n\nproperty FillHolesAtPlaneResults.created_zone_id: int\n\nId assigned to zone created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceMeshSizeScaling.factor.html#factor","title":"factor","text":"factor\n\n\n\nproperty SurfaceMeshSizeScaling.factor: float\n\nValue by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.suggested_part_name.html#suggested_part_name","title":"suggested_part_name","text":"suggested_part_name\n\n\n\nproperty CreateContactPatchParams.suggested_part_name: str\n\nSuggested part name for created contact patch surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.html#importcadparams","title":"ImportCadParams","text":"ImportCadParams\n\n\n\nclass ansys.meshing.prime.ImportCadParams(model=None, append=None, ansys_release=None, cad_reader_route=None, part_creation_type=None, geometry_transfer=None, length_unit=None, refacet=None, cad_refaceting_params=None, stitch_tolerance=None, cad_update_parameters=None, validate_shared_topology=None, json_data=None, **kwargs)\n\nParameters to control CAD import settings.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportCadParams object with default parameters.\n\nappend: bool, optional\n\nAppend imported CAD into existing model when true.\n\nansys_release: str, optional\n\nConfigures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\ncad_reader_route: CadReaderRoute, optional\n\nSpecify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\npart_creation_type: PartCreationType, optional\n\nCreate a part per CAD Model, Assembly, Part, Body.\n\ngeometry_transfer: bool, optional\n\nOption to enable transfer of geometry data (NURBS).\n\nlength_unit: LengthUnit, optional\n\nSpecify length unit for import.\n\nrefacet: bool, optional\n\nRefine or coarsen the CAD faceting based on refaceting parameters when true.\n\ncad_refaceting_params: CadRefacetingParams, optional\n\nSpecify refaceting parameters.\n\nstitch_tolerance: float, optional\n\nStitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\ncad_update_parameters: Dict[str, Union[str, int, float, bool]], optional\n\nSpecify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\nvalidate_shared_topology: bool, optional\n\nSpecify whether to validate the shared topology information.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportCadParams object with provided parameters.\n\nExamples\n\n>>> import_cad_params = prime.ImportCadParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.html#examples-using-importcadparams","title":"ImportCadParams > Examples using ImportCadParams","text":"Examples using ImportCadParams\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsParams.html#deletefringesandoverlapsparams","title":"DeleteFringesAndOverlapsParams","text":"DeleteFringesAndOverlapsParams\n\n\n\nclass ansys.meshing.prime.DeleteFringesAndOverlapsParams(model=None, fringe_element_count=None, overlap_element_count=None, delete_fringes=None, delete_overlaps=None, json_data=None, **kwargs)\n\nParameters to delete fringes and overlapping faces.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteFringesAndOverlapsParams object with default parameters.\n\nfringe_element_count: int, optional\n\nMaximum count of free face elements identified as fringe to be deleted.\n\noverlap_element_count: int, optional\n\nMaximum count of overlapping face elements identified as overlap to be deleted.\n\ndelete_fringes: bool, optional\n\nOption to delete fringes. The default is true.\n\ndelete_overlaps: bool, optional\n\nOption to delete overlaps. The default is false.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteFringesAndOverlapsParams object with provided parameters.\n\nExamples\n\n>>> delete_fringes_and_overlaps_params = prime.DeleteFringesAndOverlapsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nLengthUnit.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.COMPUTEVOLUMESFAILED.html#computevolumesfailed","title":"COMPUTEVOLUMESFAILED","text":"COMPUTEVOLUMESFAILED\n\n\n\nErrorCode.COMPUTEVOLUMESFAILED = 129\n\nCompute volumes failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_face_zones.html#n_face_zones","title":"n_face_zones","text":"n_face_zones\n\n\n\nproperty PartSummaryResults.n_face_zones: int\n\nNumber of face zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSplineContinuityType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.add_zonelets_to_zone.html#add_zonelets_to_zone","title":"add_zonelets_to_zone","text":"add_zonelets_to_zone\n\n\n\nPart.add_zonelets_to_zone(zone_id, zonelets)\n\nAdd zonelets to zone.\n\nParameters\n\nzone_id\n\npython:int\n\nId of a zone .\n\nzonelets\n\nIterable[python:int]\n\nIds of zonelets to be added.\n\nReturns\n\n:\n\n\n\nAddToZoneResults\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_zonelets_to_zone(zone_id, zonelets)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteUnwettedResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteUnwettedResult.print_default()\n\nPrint the default values of DeleteUnwettedResult object.\n\nExamples\n\n>>> DeleteUnwettedResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nScopeExpressionType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.LOCALSURFERNOFACEREGISTERED.html#localsurfernofaceregistered","title":"LOCALSURFERNOFACEREGISTERED","text":"LOCALSURFERNOFACEREGISTERED\n\n\n\nWarningCode.LOCALSURFERNOFACEREGISTERED = 7001\n\nNo face registered with the given register id."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.html#wrappercontrol","title":"WrapperControl","text":"WrapperControl\n\n\n\nclass ansys.meshing.prime.WrapperControl(model, id, object_id, name)\n\nWrapper Control to describe all parameters and controls used for wrapping..\n\nParameters\n\nmodel\n\nModel\n\nServer model to create WrapperControl object.\n\nid\n\npython:int\n\nId of the WrapperControl.\n\nobject_id\n\npython:int\n\nObject id of the WrapperControl.\n\nname\n\npython:str\n\nName of the WrapperControl.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.import_mapdl_cdb.html#import_mapdl_cdb","title":"import_mapdl_cdb","text":"import_mapdl_cdb\n\n\n\nFileIO.import_mapdl_cdb(file_name, params)\n\nImport an MAPDL CDB file.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the CDB file on disk.\n\nparams\n\nImportMapdlCdbParams\n\nParameters for importing the CDB file.\n\nReturns\n\n:\n\n\n\nImportMapdlCdbResults\n\nResults from importing the CDB file.\n\nReturn type\n\nImportMapdlCdbResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> # connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportMapdlCdbParams(model=model)\n>>> results = file_io.import_mapdl_cdb(\"/tmp/file.cdb\", params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SubtractZoneletsParams.set_default(retain_cutter=None, extract_edges=None, trace_edges=None)\n\nSet the default values of the SubtractZoneletsParams object.\n\nParameters\n\nretain_cutter: bool, optional\n\nRetain the zonelets used for removal.\n\nextract_edges: bool, optional\n\nExtract edges of intersection during subtract.\n\ntrace_edges: bool, optional\n\nTrace edges of intersection on target. Only works if extractEdges is true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Wrapper.connect.html#connect","title":"connect","text":"connect\n\n\n\nWrapper.connect(wrapper_part, target_labels, source_parts, source_labels)\n\nPerform a label-controlled connection.\n\nThis method performs a label-controlled connection of wrapper part face zonelets to\nface zonelets of source parts.\n\nParameters\n\nwrapper_part\n\nPart\n\nWrapper part.\n\ntarget_labels\n\nList[python:str]\n\nList of target zonelet labels to connect.\n\nsource_parts\n\nList[Part]\n\nList of source parts to connect with.\n\nsource_labels\n\nList[Part]\n\nList of source zonelet labels to connect.\n\nExamples\n\n>>> wrapper.connect(wrapper_part, target_labels, source_parts, source_labels)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesherResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic AutoQuadMesherResults.print_default()\n\nPrint the default values of AutoQuadMesherResults object.\n\nExamples\n\n>>> AutoQuadMesherResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SmoothDihedralFaceNodesParams.print_default()\n\nPrint the default values of SmoothDihedralFaceNodesParams object.\n\nExamples\n\n>>> SmoothDihedralFaceNodesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.write_cells.html#write_cells","title":"write_cells","text":"write_cells\n\n\n\nproperty ExportMapdlCdbParams.write_cells: bool\n\nOption to write out cells as part of the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLINVALIDTARGETSCOPE.html#thinvolumecontrolinvalidtargetscope","title":"THINVOLUMECONTROLINVALIDTARGETSCOPE","text":"THINVOLUMECONTROLINVALIDTARGETSCOPE\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDTARGETSCOPE = 12103\n\nInvalid target scope provided for thin volume control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nAdvancedSurferSetup.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nMaterialPointType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.set_edge_scope.html#set_edge_scope","title":"set_edge_scope","text":"set_edge_scope\n\n\n\nShellBLControl.set_edge_scope(entities)\n\nSets the edge scope.\n\nParameters\n\nentities\n\nScopeDefinition\n\nScope definition entities.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_edge_scope(entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatCircularFacesParams.merge_edge_allow_self_close.html#merge_edge_allow_self_close","title":"merge_edge_allow_self_close","text":"merge_edge_allow_self_close\n\n\n\nproperty DetectAndTreatCircularFacesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphSolveParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MorphSolveParams.print_default()\n\nPrint the default values of MorphSolveParams object.\n\nExamples\n\n>>> MorphSolveParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.Z.html#z","title":"Z","text":"Z\n\n\n\nContactPatchAxis.Z = 3\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartZonelets.part_id.html#part_id","title":"part_id","text":"part_id\n\n\n\nproperty PartZonelets.part_id: int\n\nId of part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ZERONODESREADFROMCDBFILE.html#zeronodesreadfromcdbfile","title":"ZERONODESREADFROMCDBFILE","text":"ZERONODESREADFROMCDBFILE\n\n\n\nErrorCode.ZERONODESREADFROMCDBFILE = 16501\n\nNo nodes read from CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nMergeNodeType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.imag.html#imag","title":"imag","text":"imag\n\n\n\nShellBLOffsetType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.use_cad_curvature.html#use_cad_curvature","title":"use_cad_curvature","text":"use_cad_curvature\n\n\n\nproperty CurvatureSizingParams.use_cad_curvature: bool\n\nOption to enable use of CAD curvature for computing edge and face size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_CREATEMIDEDGEFAILED.html#vt_createmidedgefailed","title":"VT_CREATEMIDEDGEFAILED","text":"VT_CREATEMIDEDGEFAILED\n\n\n\nErrorCode.VT_CREATEMIDEDGEFAILED = 3611\n\nCreate mid edge operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nBodyQueryType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.MESHED.html#meshed","title":"MESHED","text":"MESHED\n\n\n\nSizingType.MESHED = 4\n\nDenotes the size control type is meshed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.VolumeScope.get_scope_definition.html#get_scope_definition","title":"get_scope_definition","text":"get_scope_definition\n\n\n\nVolumeScope.get_scope_definition(model)\n\nGet the scope definition of the scope.\n\nParameters\n\nmodel\n\nModel\n\nPyPrimeMesh model.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the scope definition.\n\nReturn type\n\nScopeDefinition"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateShellBLResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty CreateShellBLResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SurferParams.print_default()\n\nPrint the default values of SurferParams object.\n\nExamples\n\n>>> SurferParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_bracket_fmd.html#download_bracket_fmd","title":"download_bracket_fmd","text":"download_bracket_fmd\n\n\n\nansys.meshing.prime.examples.download_bracket_fmd(destination=None, force=False)\n\nDownload the FMD file for the bracket scaffold example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_bracket_fmd.html#examples-using-download_bracket_fmd","title":"download_bracket_fmd > Examples using download_bracket_fmd","text":"Examples using download_bracket_fmd\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTSTLFAILEDWITHTOPOLOGY.html#exportstlfailedwithtopology","title":"EXPORTSTLFAILEDWITHTOPOLOGY","text":"EXPORTSTLFAILEDWITHTOPOLOGY\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHTOPOLOGY = 553\n\nExport STL not supported for part with topology data."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.has_invalid_shape.html#has_invalid_shape","title":"has_invalid_shape","text":"has_invalid_shape\n\n\n\nproperty CheckMeshResults.has_invalid_shape: bool\n\nIndicates whether mesh has invalid shape."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneMapMeshParams.scope.html#scope","title":"scope","text":"scope\n\n\n\nproperty MultiZoneMapMeshParams.scope: ScopeDefinition\n\nScope used for MultiZone map mesh control.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nScopeExpressionType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.degree.html#degree","title":"degree","text":"degree\n\n\n\nproperty IGAUnstructuredSplineSurf.degree: int\n\nDegree of the spline surface.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.num_edges_per_edge_zonelet.html#num_edges_per_edge_zonelet","title":"num_edges_per_edge_zonelet","text":"num_edges_per_edge_zonelet\n\n\n\nproperty EdgeConnectivityResults.num_edges_per_edge_zonelet: Iterable[int]\n\nNumber of edges per edge zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.real.html#real","title":"real","text":"real\n\n\n\nVolumeFillType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_scope_parts.html#get_scope_parts","title":"get_scope_parts","text":"get_scope_parts\n\n\n\nControlData.get_scope_parts(scope)\n\nGet the part ids for the given scope.\n\nParameters\n\nscope\n\nScopeDefinition\n\nScope definition to evaluate the part ids.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of parts.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> part_ids = model.control_data.get_scope_parts(\n>>>                 prime.ScopeDefinition(model = model,\n>>>                 part_expression = \"*\"),\n>>>                 prime.ScopeZoneletParams(model =model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileWriteResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty FileWriteResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the file write operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsParams.project_on_geometry.html#project_on_geometry","title":"project_on_geometry","text":"project_on_geometry\n\n\n\nproperty RefineAtContactsParams.project_on_geometry: bool\n\nProject on geometry on remesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCadReaderRoute.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveResult.html#wrapperimproveresult","title":"WrapperImproveResult","text":"WrapperImproveResult\n\n\n\nclass ansys.meshing.prime.WrapperImproveResult(model=None, error_code=None, n_skew_found=None, remaining_skew_faces=None, n_face_intersections_found=None, unresolved_face_intersections=None, json_data=None, **kwargs)\n\nResults structure associated to improve quality.\n\nParameters\n\nmodel: Model\n\nModel to create a WrapperImproveResult object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with a wrapper operation.\n\nn_skew_found: int, optional\n\nNumber of skewed faces found.\n\nremaining_skew_faces: int, optional\n\nNumber of remaining skew faces.\n\nn_face_intersections_found: int, optional\n\nNumber of self intersections found.\n\nunresolved_face_intersections: int, optional\n\nNumber of remaining self intersections.\n\njson_data: dict, optional\n\nJSON dictionary to create a WrapperImproveResult object with provided parameters.\n\nExamples\n\n>>> wrapper_improve_result = prime.WrapperImproveResult(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControlSummaryParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SizeControlSummaryParams.print_default()\n\nPrint the default values of SizeControlSummaryParams object.\n\nExamples\n\n>>> SizeControlSummaryParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAResults.warning_code.html#warning_code","title":"warning_code","text":"warning_code\n\n\n\nproperty IGAResults.warning_code: WarningCode\n\nWarning code if IGA operation is partially successful."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesherResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty AutoQuadMesherResults.error_code: ErrorCode\n\nError code if AutoQuadMesher operation is unsuccessful.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERSIZEFIELDSNOTDEFINED.html#wrappersizefieldsnotdefined","title":"WRAPPERSIZEFIELDSNOTDEFINED","text":"WRAPPERSIZEFIELDSNOTDEFINED\n\n\n\nErrorCode.WRAPPERSIZEFIELDSNOTDEFINED = 3419\n\nNo size field ids provided for wrapping."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlSummaryParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PeriodicControlSummaryParams.set_default()\n\nSet the default values of the PeriodicControlSummaryParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.imag.html#imag","title":"imag","text":"imag\n\n\n\nWarningCode.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSweepType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SmoothType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSeparateBlocksFormatType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDTRANSFORMATIONMATRIX.html#invalidtransformationmatrix","title":"INVALIDTRANSFORMATIONMATRIX","text":"INVALIDTRANSFORMATIONMATRIX\n\n\n\nErrorCode.INVALIDTRANSFORMATIONMATRIX = 3003\n\nInvalid transformation matrix."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERSIZINGMETHODNOTSUPPORTED.html#wrappersizingmethodnotsupported","title":"WRAPPERSIZINGMETHODNOTSUPPORTED","text":"WRAPPERSIZINGMETHODNOTSUPPORTED\n\n\n\nErrorCode.WRAPPERSIZINGMETHODNOTSUPPORTED = 3415\n\nSizing method is not supported for wrapper."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.ALL.html#all","title":"ALL","text":"ALL\n\n\n\nThinStripType.ALL = 0\n\nThin strips of all shapes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic JoinParams.print_default()\n\nPrint the default values of JoinParams object.\n\nExamples\n\n>>> JoinParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessParams.suggested_part_name.html#suggested_part_name","title":"suggested_part_name","text":"suggested_part_name\n\n\n\nproperty AddThicknessParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDEEDGESCOPEENTITY.html#overrideedgescopeentity","title":"OVERRIDEEDGESCOPEENTITY","text":"OVERRIDEEDGESCOPEENTITY\n\n\n\nWarningCode.OVERRIDEEDGESCOPEENTITY = 404\n\nOverride edge scope entity.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualityResult.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty SurfaceQualityResult.n_found: int\n\nNumber of failed faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATECONTACTPATCH_INVALIDCONTACTPATCHAXIS.html#createcontactpatch_invalidcontactpatchaxis","title":"CREATECONTACTPATCH_INVALIDCONTACTPATCHAXIS","text":"CREATECONTACTPATCH_INVALIDCONTACTPATCHAXIS\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDCONTACTPATCHAXIS = 390\n\nContact patch creation process failed. Invalid contact patch creation axis."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSolid.invalid_jacobian_elements_count.html#invalid_jacobian_elements_count","title":"invalid_jacobian_elements_count","text":"invalid_jacobian_elements_count\n\n\n\nproperty IGAUnstructuredSplineSolid.invalid_jacobian_elements_count: int\n\nCount of elements with negative jacobian.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessParams.reverse_face_normal.html#reverse_face_normal","title":"reverse_face_normal","text":"reverse_face_normal\n\n\n\nproperty AddThicknessParams.reverse_face_normal: bool\n\nTo assign the direction of inflation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.prism_controls.html#prism_controls","title":"prism_controls","text":"prism_controls\n\n\n\nproperty ControlData.prism_controls: List[PrismControl]\n\nGet the prism controls.\n\nReturns\n\nList[PrismControl]\n\nList of prism controls.\n\nExamples\n\n>>> prism_control = model.control_data.prism_controls"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nWarningCode.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergePartsResults.merged_part_id.html#merged_part_id","title":"merged_part_id","text":"merged_part_id\n\n\n\nproperty MergePartsResults.merged_part_id: int\n\nId assigned to merged part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_pcb_scdoc.html#download_pcb_scdoc","title":"download_pcb_scdoc","text":"download_pcb_scdoc\n\n\n\nansys.meshing.prime.examples.download_pcb_scdoc(destination=None, force=False)\n\nDownload SCDOC file for the pcb example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pcb = prime_examples.download_pcb_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pcb, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.LabelToZoneMethod.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nLabelToZoneMethod.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FaceAndEdgeConnectivityResults.set_default(error_code=None, part_ids=None, face_connectivity_result_per_part=None, edge_connectivity_result_per_part=None)\n\nSet the default values of the FaceAndEdgeConnectivityResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the get face and edge connectivity operation.\n\npart_ids: Iterable[int], optional\n\nPart ids for which face and edge connectivity data is available.\n\nface_connectivity_result_per_part: List[FaceConnectivityResults], optional\n\nFace connectivity result per part.\n\nedge_connectivity_result_per_part: List[EdgeConnectivityResults], optional\n\nEdge connectivity result per part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nZoneType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseTool.split_and_collapse_on_zonelets.html#split_and_collapse_on_zonelets","title":"split_and_collapse_on_zonelets","text":"split_and_collapse_on_zonelets\n\n\n\nCollapseTool.split_and_collapse_on_zonelets(part_id, face_zonelets, register_id, split_params, collapse_params)\n\nSplit and collapse elements on face zonelets with the specified register id.\n\nParameters\n\npart_id\n\npython:int\n\nId of a part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets.\n\nregister_id\n\npython:int\n\nId used to identify face elements to split and collapse.\n\nsplit_params\n\nSplitParams\n\nParameters to split longest edge of face elements before collapse.\n\ncollapse_params\n\nCollapseParams\n\nParameters to collapse shortest edge of face elements.\n\nReturns\n\n:\n\n\n\nCollapseResults\n\nReturns the CollapseResults.\n\nReturn type\n\nCollapseResults\n\nExamples\n\n>>> collapse_tool = prime.CollapseTool(model = model)\n>>> results = collapse_tool.split_and_collapse_on_zonelets(\n>>>     part_id=part.id,\n>>>     face_zonelets=part.get_face_zonelets(),\n>>>     register_id=register_id,\n>>>     split_params=prime.SplitParams(model=model),\n>>>     collapse_params=prime.CollapseParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSplineFeatureCaptureType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.imag.html#imag","title":"imag","text":"imag\n\n\n\nSweepType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_num_threads.html#get_num_threads","title":"get_num_threads","text":"get_num_threads\n\n\n\nModel.get_num_threads()\n\nGet the number of threads enabled for multithreaded operation.\n\nReturns\n\n:\n\n\n\npython:int\n\nReturns the number of threads.\n\nReturn type\n\nint\n\nExamples\n\n>>> model = client.model\n>>> num_threads = model.get_num_threads()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nEdgeConnectType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StretchFreeBoundariesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic StretchFreeBoundariesResults.set_default(error_code=None)\n\nSet the default values of the StretchFreeBoundariesResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoNodeMoveParams.n_attempts.html#n_attempts","title":"n_attempts","text":"n_attempts\n\n\n\nproperty AutoNodeMoveParams.n_attempts: int\n\nNumber of attempts to improve specified quality measure by node movement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_INVALIDINPUTFILEFORSTRUCTUREDHEXMESHFITTING.html#iga_invalidinputfileforstructuredhexmeshfitting","title":"IGA_INVALIDINPUTFILEFORSTRUCTUREDHEXMESHFITTING","text":"IGA_INVALIDINPUTFILEFORSTRUCTUREDHEXMESHFITTING\n\n\n\nErrorCode.IGA_INVALIDINPUTFILEFORSTRUCTUREDHEXMESHFITTING = 2411\n\nInvalid model for structured hex-mesh spline fitting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSmoothType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.get_search_info_by_register_id.html#get_search_info_by_register_id","title":"get_search_info_by_register_id","text":"get_search_info_by_register_id\n\n\n\nSurfaceSearch.get_search_info_by_register_id(face_zonelets, register_id, params)\n\nGets search information regarding registered face elements of provided zonelets using a register id.\n\nParameters\n\nface_zonelets\n\nIterable[python:int]\n\nIds of the face zonelets to search in.\n\nregister_id\n\npython:int\n\nAn integer register id.\n\nparams\n\nSearchInfoByRegisterIdParams\n\nParameters for retrieveing information on registered faces.\n\nReturns\n\n:\n\n\n\nSearchInfoByRegisterIdResults\n\nReturns the SearchInfoByRegisterIdResults.\n\nReturn type\n\nSearchInfoByRegisterIdResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> params = prime.SearchInfoByRegisterIdParams(model=model)\n>>> results = surf_search.get_search_info_by_register_id(face_zonelets, register_id, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.real.html#real","title":"real","text":"real\n\n\n\nZoneType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CollapseParams.set_default(feature_type=None, collapse_ratio=None, preserve_quality=None, target_skewness=None, keep_edge_connectivity=None)\n\nSet the default values of the CollapseParams object.\n\nParameters\n\nfeature_type: SurfaceFeatureType, optional\n\nFeature type to be preserved when performing collapse.\n\ncollapse_ratio: float, optional\n\nMaximum ratio of shortest face edge length to longest face edge length.\n\npreserve_quality: bool, optional\n\nOption to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\ntarget_skewness: float, optional\n\nSkewness limit used as target to preserve quality. Better quality elements are skipped for collapse.\n\nkeep_edge_connectivity: bool, optional\n\nOption to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.compute_volumes.html#compute_volumes","title":"compute_volumes","text":"compute_volumes\n\n\n\nMesh.compute_volumes(part_expression='*', create_zones_per_volume=True)\n\nCompute volumes in the parts defined by the part expression.\n\nParameters\n\npart_expression\n\npython:str, optional\n\nExpression of the parts where the topology must be deleted.\nThe default is \"*\".\n\ncreate_zones_per_volume\n\nbool, optional\n\nWhether to create volume zones for each volume. The default\nis True."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.compute_volumes.html#examples-using-meshcompute_volumes","title":"compute_volumes > Examples using Mesh.compute_volumes","text":"Examples using Mesh.compute_volumes\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSplineRefinementType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.html#scopedefinition","title":"ScopeDefinition","text":"ScopeDefinition\n\n\n\nclass ansys.meshing.prime.ScopeDefinition(model=None, entity_type=None, evaluation_type=None, part_expression=None, label_expression=None, zone_expression=None, json_data=None, **kwargs)\n\nScopeDefinition to scope entities based on entity and evaluation type.\n\nParameters\n\nmodel: Model\n\nModel to create a ScopeDefinition object with default parameters.\n\nentity_type: ScopeEntity, optional\n\nEntity type for which scope needs to be evaluated. The default is set to face zonelets.\n\nevaluation_type: ScopeEvaluationType, optional\n\nEvaluation type to scope entities. The default is set to labels.\n\npart_expression: str, optional\n\nPart expression to scope parts while evaluating scope.\n\nlabel_expression: str, optional\n\nLabel expression to scope entities when evaluation type is set to labels.\n\nzone_expression: str, optional\n\nZone expression to scope entities when evaluation type is set to zones.\n\njson_data: dict, optional\n\nJSON dictionary to create a ScopeDefinition object with provided parameters.\n\nExamples\n\n>>> scope_definition = prime.ScopeDefinition(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.html#examples-using-scopedefinition","title":"ScopeDefinition > Examples using ScopeDefinition","text":"Examples using ScopeDefinition\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.degree_u.html#degree_u","title":"degree_u","text":"degree_u\n\n\n\nproperty UniformSolidSplineCreationParams.degree_u: int\n\nDegree in u direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.real.html#real","title":"real","text":"real\n\n\n\nCadReaderRoute.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateZoneResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateZoneResults.set_default(error_code=None, zone_id=None, assigned_name=None)\n\nSet the default values of the CreateZoneResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the create zone operation.\n\nzone_id: int, optional\n\nId of newly created zone.\n\nassigned_name: str, optional\n\nAssigned name of newly created zone."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.is_optimizing_numpy_arrays.html#is_optimizing_numpy_arrays","title":"is_optimizing_numpy_arrays","text":"is_optimizing_numpy_arrays\n\n\n\nansys.meshing.prime.is_optimizing_numpy_arrays()\n\nDetermine if serialization of numpy arrays is enabled.\n\nThe default for optimization is always True.\n\nReturns\n\n:\n\n\n\nbool\n\nBoolean flag indicating if optimizing of numpy arrays is enabled."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic RefineAtContactsResults.set_default(n_refined=None, size_field_id=None, error_code=None)\n\nSet the default values of the RefineAtContactsResults object.\n\nParameters\n\nn_refined: int, optional\n\nNumber of face elements identified for refinement.\n\nsize_field_id: int, optional\n\nId of size field created to refine at contacts.\n\nerror_code: ErrorCode, optional\n\nErrorCode associated with the refine contacts operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WrapperImproveQualityParams.print_default()\n\nPrint the default values of WrapperImproveQualityParams object.\n\nExamples\n\n>>> WrapperImproveQualityParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.real.html#real","title":"real","text":"real\n\n\n\nControlPointSelection.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneMapMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MultiZoneMapMeshParams.set_default(scope=None)\n\nSet the default values of the MultiZoneMapMeshParams object.\n\nParameters\n\nscope: ScopeDefinition, optional\n\nScope used for MultiZone map mesh control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nBCPairType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"user_guide/sizing.html#sizing","title":"Sizing","text":"Sizing\n\nPyPrimeMesh provides various sizing controls to help you define how the mesh size is distributed on a surface or within the volume."},{"objectID":"Home","href":"user_guide/sizing.html#sizing-control","title":"Sizing > Sizing control","text":"Sizing control\n\nMesh quality and resolution are important factors for capturing physics accurately and efficiently. Size controls allows you to get the desired mesh distribution.\nPyPrimeMesh specifies the sizing requirements using sizing controls. The sizing controls in PyPrimeMesh have the following:\n\nScope\n\nMaximum rate of change of size\n\nRange within which the sizes should be on or within the scope\n\nThe SizingType class has control types for defining sizing requirements:\n\nCurvature\n\nProximity\n\nHard\n\nSoft\n\nMeshed\n\nBody of influence"},{"objectID":"Home","href":"user_guide/sizing.html#curvature-sizing","title":"Sizing > Curvature sizing","text":"Curvature sizing\n\nIn the SizingType class, selecting the CURVATURE\nparameter sizes based on the scope on the local curvature. The size is small when the local curvature is large and vice versa.\nThis code shows how to use the CurvatureSizingParams class to specify\nthe minimum and maximum size, growth rate, and normal angle:\n\nThe normal angle parameter is the maximum allowable angle that one element edge may span. For example, a value of 5 implies that a division are made when the angle change along the curve is 5 degrees. Hence, a 90 degree arc is divided into approximately 18 segments."},{"objectID":"Home","href":"user_guide/sizing.html#proximity-sizing","title":"Sizing > Proximity sizing","text":"Proximity sizing\n\nIn the SizingType class, selecting the\nPROXIMITY parameter sizes based on the closeness of\nthe surfaces or edges specified in the scope. This code shows how to use the\nProximitySizingParams class to specify the\nminimum and maximum size, growth rate, and the number of element per gap:\n\nThe ignore_self_proximity\nand ignore_orientation\nparameters are also considered for proximity sizing. The ignore_self_proximity parameter\nis set to True if proximity between faces in the same face zonelet is to be ignored. The\nignore_orientation parameter allows you to ignore the face normal orientation during the\nproximity calculation. This Boolean parameter is set to False by default. In general,\nthe proximity depends on the direction of face normals.\n\nThis example explains the use of the ignore_orientation parameter for face proximity.\nThe normals on the grooved box point inward. With the default setting of False, the\nproximity size function does not refine the surface along the entire groove length.\nIf the ignore_orientation is set to True, the surface is refined along the groove length"},{"objectID":"Home","href":"user_guide/sizing.html#hard-sizing","title":"Sizing > Hard sizing","text":"Hard sizing\n\nIn the SizingType class, selecting the\nHARD parameter sizes on the scope based on a uniform\nvalue while meshing. This code shows how to use the HardSizingParams\nclass to specify the minimum size and growth rate:"},{"objectID":"Home","href":"user_guide/sizing.html#soft-sizing","title":"Sizing > Soft sizing","text":"Soft sizing\n\nIn the SizingType class, selecting the\nSOFT parameter sizes on the scope based on a\ncertain maximum value that should not be exceeded while meshing. This code shows how\nto use the SoftSizingParams class to specify\nthe maximum size and growth rate:"},{"objectID":"Home","href":"user_guide/sizing.html#meshed-sizing","title":"Sizing > Meshed sizing","text":"Meshed sizing\n\nIn the SizingType class, selecting the\nMESHED parameter sizes based on existing local sizes.\nThis example shows how to use the MeshedSizingParams\nclass to specify the growth rate:"},{"objectID":"Home","href":"user_guide/sizing.html#body-of-influence-sizing","title":"Sizing > Body of influence sizing","text":"Body of influence sizing\n\nIn the SizingType class, selecting the\nBOI parameter sizes inside a closed volume scope\nthat is not to exceed a certain maximum value. This code shows how to use the\nBoiSizingParams class to specify the maximum size and growth rate:"},{"objectID":"Home","href":"user_guide/sizing.html#size-fields","title":"Sizing > Size fields","text":"Size fields\n\nThe SizeFieldType class helps you to fetch the element size\nat a given location. These size field types are available in PyPrimeMesh:\n\nConstant\n\nVolumetric\n\nGeodesic\n\nGeometric\n\nMeshedgeodesic\n\nThe Volumetric and  Geodesic size fields can process and respect the size control that you define.\nThe Volumetric size field can be computed using the Compute volumetric\nmethod and then surface and volume meshing can be applied. The remaining size field types are computed as\npart of various surface and volume meshing operations."},{"objectID":"Home","href":"user_guide/sizing.html#constant-size-field","title":"Sizing > Constant size field","text":"Constant size field\n\nIn the SizeFieldType class, selecting the\nCONSTANT parameter computes the size field\nbased on the size controls specified."},{"objectID":"Home","href":"user_guide/sizing.html#volumetric-size-field","title":"Sizing > Volumetric size field","text":"Volumetric size field\n\nIn the SizeFieldType class, selecting the\nVOLUMETRIC parameter computes the size field\nbased on the size controls specified."},{"objectID":"Home","href":"user_guide/sizing.html#geodesic-size-field","title":"Sizing > Geodesic size field","text":"Geodesic size field\n\nIn the SizeFieldType class, selecting the\nGEODESIC parameter computes the size field\non face nodes based on the size controls specified. Sizes are defined along a surface rather than\nthe volume. Geodesic sizing enables you to confine sizes to surfaces and avoid problems like\ndead space refinement."},{"objectID":"Home","href":"user_guide/sizing.html#geometric-size-field","title":"Sizing > Geometric size field","text":"Geometric size field\n\nIn the SizeFieldType class, selecting the\nGEOMETRIC parameter computes the size field\nbased on existing boundary sizes. Sizes can gradually increase from the minimum size to the\nmaximum size based on the growth rate."},{"objectID":"Home","href":"user_guide/sizing.html#meshedgeodesic-size-field","title":"Sizing > Meshedgeodesic size field","text":"Meshedgeodesic size field\n\nIn the SizeFieldType class, selecting the\nMESHEDGEODESIC parameter computes\nthe size field using average mesh edge lengths and is diffused geodesical."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.VT_SKIPPEDFEATUREENTITIES.html#vt_skippedfeatureentities","title":"VT_SKIPPEDFEATUREENTITIES","text":"VT_SKIPPEDFEATUREENTITIES\n\n\n\nWarningCode.VT_SKIPPEDFEATUREENTITIES = 100002\n\nInput contains feature entities which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckTopologyParams.html#checktopologyparams","title":"CheckTopologyParams","text":"CheckTopologyParams\n\n\n\nclass ansys.meshing.prime.CheckTopologyParams(model=None, topo_search_field_mask=None, json_data=None, **kwargs)\n\nParameters for check topology operations.\n\nParameters\n\nmodel: Model\n\nModel to create a CheckTopologyParams object with default parameters.\n\ntopo_search_field_mask: int, optional\n\nToposearch field option for topology check.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a CheckTopologyParams object with provided parameters.\n\nExamples\n\n>>> check_topology_params = prime.CheckTopologyParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nScopeEvaluationType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.search_zonelets_by_spikes.html#search_zonelets_by_spikes","title":"search_zonelets_by_spikes","text":"search_zonelets_by_spikes\n\n\n\nSurfaceSearch.search_zonelets_by_spikes(part_id, face_zonelets, register_id, params)\n\nSearch face zonelets to identify spikes.\n\nSearch face zonelets to identify spikes with provided spike parameters\n\nParameters\n\npart_id\n\npython:int\n\nId of part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets.\n\nregister_id\n\npython:int\n\nId of register.\n\nparams\n\nSearchBySpikeParams\n\nParameters used to identify spikes.\n\nReturns\n\n:\n\n\n\nSearchBySpikeResults\n\nReturns the SearchBySpikeResults.\n\nReturn type\n\nSearchBySpikeResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_spikes(part_id, face_zonelets, register_id, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.label_export_params.html#label_export_params","title":"label_export_params","text":"label_export_params\n\n\n\nproperty ExportMapdlCdbParams.label_export_params: LabelExportParams\n\nParameters to control the export of labels as Nodal or Element Components in CDB.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.fuse_option.html#fuse_option","title":"fuse_option","text":"fuse_option\n\n\n\nproperty FuseParams.fuse_option: FuseOption\n\nOption for treatment of fused surfaces. The default value is None.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.face_list.html#face_list","title":"face_list","text":"face_list\n\n\n\nproperty FaceConnectivityResults.face_list: Iterable[int]\n\nFace list describing connectivity of node coordinates."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.detect_and_defeature_edges_near_holes.html#detect_and_defeature_edges_near_holes","title":"detect_and_defeature_edges_near_holes","text":"detect_and_defeature_edges_near_holes\n\n\n\nproperty DetectAndTreatHolesParams.detect_and_defeature_edges_near_holes: bool\n\nOption to detect and defeature edges near all holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSeparateBlocksFormatType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.compute_free_edges.html#compute_free_edges","title":"compute_free_edges","text":"compute_free_edges\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_free_edges: bool\n\nControl to identify free face edges are present or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_face_zonelets.html#n_face_zonelets","title":"n_face_zonelets","text":"n_face_zonelets\n\n\n\nproperty PartSummaryResults.n_face_zonelets: int\n\nNumber of face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.imag.html#imag","title":"imag","text":"imag\n\n\n\nVolumeFillType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveLabelResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic RemoveLabelResults.print_default()\n\nPrint the default values of RemoveLabelResults object.\n\nExamples\n\n>>> RemoveLabelResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.hole_proximity_tolerance.html#hole_proximity_tolerance","title":"hole_proximity_tolerance","text":"hole_proximity_tolerance\n\n\n\nproperty DetectAndTreatHolesParams.hole_proximity_tolerance: float\n\nEdge proximity tolerance for holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectCircularHolesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DetectCircularHolesParams.set_default(allow_curved_topo_faces=None, max_radius_circular_holes=None, min_radius_circular_holes=None, merge_edge_allow_self_close=None)\n\nSet the default values of the DetectCircularHolesParams object.\n\nParameters\n\nallow_curved_topo_faces: bool, optional\n\nOption to allow holes in curved topoface.\n\nmax_radius_circular_holes: float, optional\n\nMaximum radius of circular holes.\n\nmin_radius_circular_holes: float, optional\n\nMinimum radius of circular holes.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesParams.merge_to_neighbor_volume.html#merge_to_neighbor_volume","title":"merge_to_neighbor_volume","text":"merge_to_neighbor_volume\n\n\n\nproperty MergeVolumesParams.merge_to_neighbor_volume: bool\n\nOption to merge given volumes to their neighbor volume."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_pipe_tee_dsco.html#download_pipe_tee_dsco","title":"download_pipe_tee_dsco","text":"download_pipe_tee_dsco\n\n\n\nansys.meshing.prime.examples.download_pipe_tee_dsco(destination=None, force=False)\n\nDownload the DSCO file for the pipe tee example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.TRIMTWOSIDES.html#trimtwosides","title":"TRIMTWOSIDES","text":"TRIMTWOSIDES\n\n\n\nFuseOption.TRIMTWOSIDES = 4\n\nDelete faces to be fused on both sides and merge nodes to be fused at middle locations (works only within a single part)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurferParams.avoid_corner_triangles.html#avoid_corner_triangles","title":"avoid_corner_triangles","text":"avoid_corner_triangles\n\n\n\nproperty SurferParams.avoid_corner_triangles: bool\n\nOption to avoid corner triangles(with all three boundary nodes) generated."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nWarningCode.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"user_guide/automesh.html#volumetric-meshing","title":"Volumetric meshing","text":"Volumetric meshing\n\nThe AutoMesh class enables you to\nautomatically create the volume mesh using different volume meshing algorithms. This class\ngenerates the volume mesh for all computed volumetric regions of the mesh object.\nFor example, it creates mesh objects from the imported geometry. The\nAutoMesh.mesh() method allows you to perform\nvolumetric meshing with given meshing parameters.\n\nThe starting point for the volumetric meshing procedure is a valid surface mesh defining any number of computed volumetric regions. If overlapping meshed faces are present then the mesh method may fail due to duplicate nodes on the face. Consider if the overlapping faces are intended to be in the same part and what the expected connectivity between the faces should be. If meshing adjacent volumes with disconnected overlapping faces between the volumes it is recommended that the volumes be in different parts.\n\nVolume mesh can be generated using the Mesh.volume_mesh()\nmethod in the Lucid API."},{"objectID":"Home","href":"user_guide/automesh.html#second-order-tetrahedral-mesh","title":"Volumetric meshing > Second-order tetrahedral mesh","text":"Second-order tetrahedral mesh\n\nThis code shows how to initialize the AutoMeshParams class\nand generate the volume mesh on meshed TopoFaces:\n\nThis code prints the automatic mesh parameters so that you can review them:\n\nThis code generates the volume mesh:"},{"objectID":"Home","href":"user_guide/automesh.html#prism-controls-for-polyhedral-mesh","title":"Volumetric meshing > Prism controls for polyhedral mesh","text":"Prism controls for polyhedral mesh\n\nThe PrismControl class helps you to control prism mesh generation\nbased on the face scope, volume scope and growth rate. You can use one or more prism controls. Each prism control\ndefinition is applied to one or more boundary zones and affects the height distribution and number of layers of\nthe prism cells in the adjacent boundary layers.\n\nThis example shows how to perform these steps:\n\nCreate the prism control and specify the boundary layer setting.\n\nPerform volume meshing with polyhedral elements.\n\nCheck volume mesh quality based on cell quality measures. For more information, see ref_index_mesh_diagnostics.\n\nThis code prints the volume quality summary:"},{"objectID":"Home","href":"user_guide/automesh.html#prism-controls-for-polyhedral-mesh-using-the-lucid-module","title":"Volumetric meshing > Prism controls for polyhedral mesh using the Lucid module","text":"Prism controls for polyhedral mesh using the Lucid module\n\nThis example shows how to generate the preceding poly prism method using the Lucid module:"},{"objectID":"Home","href":"user_guide/automesh.html#volume-specific-mesh-controls","title":"Volumetric meshing > Volume-specific mesh controls","text":"Volume-specific mesh controls\n\nThe VolumeControl class helps you to control volume mesh zonelets and elements.\nVolume mesh zonelets include fluids, solid, and dead. Elements include tetrahedrons and polyhedrons. This class\nallows you to define the scope and generate the various types of volume mesh.\n\nThis example shows how to perform these steps:\n\nCreate volume control and set zone-specific parameters.\n\nPerform volume meshing with tetrahedral elements."},{"objectID":"Home","href":"user_guide/automesh.html#thin-volume-mesh-controls","title":"Volumetric meshing > Thin volume mesh controls","text":"Thin volume mesh controls\n\nThe ThinVolumeControl class creates prisms from a source face mesh projecting to a target with the specified number of layers.\n\nThin volume controls can only be applied on the meshed surfaces.\n\nSome guidelines for the thin volume mesh controls:\n\nSource and target face zonelets should not be the same.\n\nThe number of prism layers to be created between source and target must be greater than zero.\n\nA source face zonelet cannot be a target face zonelet in a subsequent control.\n\nA source can only belong to two thin volume controls.\n\nAlways choose the one with most features as the source.\n\nTarget face zonelets cannot be adjacent to regions with cells whereas source face zonelets can.\n\nSides of the new thin volume control cannot be adjacent to regions with existing cells.\n\nSides of one thin volume control can only be a source to another thin volume control.\n\nThe below example shows how to:\n\nCreate a thin volume control and set source and target.\n\nSet the thin volume mesh parameters and perform volume meshing.\n\nLayers of thin volume mesh created between the source and target surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod JoinSeparateMethod.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.html#flowdirection","title":"FlowDirection","text":"FlowDirection\n\n\n\nclass ansys.meshing.prime.FlowDirection(*values)\n\nFlow or wake direction for BOI creation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSweepMeshParams.n_divisions.html#n_divisions","title":"n_divisions","text":"n_divisions\n\n\n\nproperty MultiZoneSweepMeshParams.n_divisions: int\n\nNumber of divisions in the sweep direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.set_surface_scope.html#set_surface_scope","title":"set_surface_scope","text":"set_surface_scope\n\n\n\nShellBLControl.set_surface_scope(entities)\n\nSets the face zonelet scope.\n\nParameters\n\nentities\n\nScopeDefinition\n\nScope definition entities.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_surface_scope(entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLOffsetType.LASTRATIO.html#lastratio","title":"LASTRATIO","text":"LASTRATIO\n\n\n\nShellBLOffsetType.LASTRATIO = 1\n\nOption to set ShellBL offset type as Last Ratio.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WrapperPatchFlowRegionsResult.print_default()\n\nPrint the default values of WrapperPatchFlowRegionsResult object.\n\nExamples\n\n>>> WrapperPatchFlowRegionsResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGASpline.html#igaspline","title":"IGASpline","text":"IGASpline\n\n\n\nclass ansys.meshing.prime.IGASpline(model=None, id=None, json_data=None, **kwargs)\n\nInformation of the spline.\n\nParameters\n\nmodel: Model\n\nModel to create a IGASpline object with default parameters.\n\nid: int, optional\n\nUnique id of the spline.\n\njson_data: dict, optional\n\nJSON dictionary to create a IGASpline object with provided parameters.\n\nExamples\n\n>>> iga_spline = prime.IGASpline(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.check_orientation.html#check_orientation","title":"check_orientation","text":"check_orientation\n\n\n\nproperty FuseParams.check_orientation: bool\n\nOption to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ComputeTopoVolumesResults.set_default(error_code=None, error_locations=None, topo_volumes=None, material_point_topo_volumes=None, external_open_topo_faces=None, new_topo_volumes=None, deleted_topo_volumes=None, warning_codes=None)\n\nSet the default values of the ComputeTopoVolumesResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nerror_locations: Iterable[float], optional\n\nCoordinates of problematic locations in the surface mesh.\n\ntopo_volumes: Iterable[int], optional\n\nIds of all topovolumes computed.\n\nmaterial_point_topo_volumes: Iterable[int], optional\n\nIds of topovolumes enclosing material points.\n\nexternal_open_topo_faces: Iterable[int], optional\n\nTopoface ids that are in external space and not part of any topovolumes.\n\nnew_topo_volumes: Iterable[int], optional\n\nIds of new topovolumes computed.\n\ndeleted_topo_volumes: Iterable[int], optional\n\nIds of existing topovolumes that got deleted.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the compute topovolumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.zone_name_shell_thickness_pairs.html#zone_name_shell_thickness_pairs","title":"zone_name_shell_thickness_pairs","text":"zone_name_shell_thickness_pairs\n\n\n\nproperty QuadToSplineParams.zone_name_shell_thickness_pairs: Dict[str, str | int | float | bool]\n\nZone2Thickness, …}.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nType\n\nZone name and thickness pair list. For example, {“Zone1Name”\n\nType\n\nZone1Thickness, “Zone2Name”"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSurfaceFeatureType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleParams.suppress_boundary_after_hole_fill.html#suppress_boundary_after_hole_fill","title":"suppress_boundary_after_hole_fill","text":"suppress_boundary_after_hole_fill\n\n\n\nproperty TopoFillHoleParams.suppress_boundary_after_hole_fill: bool\n\nOption to preserve or suppress hole-boundary after filling holes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.has_non_positive_volumes.html#has_non_positive_volumes","title":"has_non_positive_volumes","text":"has_non_positive_volumes\n\n\n\nproperty CheckMeshResults.has_non_positive_volumes: bool\n\nIndicates whether mesh has non positive volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_f1_rw_enclosure_stl.html#download_f1_rw_enclosure_stl","title":"download_f1_rw_enclosure_stl","text":"download_f1_rw_enclosure_stl\n\n\n\nansys.meshing.prime.examples.download_f1_rw_enclosure_stl(destination=None, force=False)\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_enclosure = prime_examples.download_f1_rw_enclosure_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_enclosure, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_f1_rw_enclosure_stl.html#examples-using-download_f1_rw_enclosure_stl","title":"download_f1_rw_enclosure_stl > Examples using download_f1_rw_enclosure_stl","text":"Examples using download_f1_rw_enclosure_stl\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nTopoSearchField.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityResults.html#faceandedgeconnectivityresults","title":"FaceAndEdgeConnectivityResults","text":"FaceAndEdgeConnectivityResults\n\n\n\nclass ansys.meshing.prime.FaceAndEdgeConnectivityResults(model=None, error_code=None, part_ids=None, face_connectivity_result_per_part=None, edge_connectivity_result_per_part=None, json_data=None, **kwargs)\n\nResult of the face and edge connectivity information.\n\nParameters\n\nmodel: Model\n\nModel to create a FaceAndEdgeConnectivityResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the get face and edge connectivity operation.\n\npart_ids: Iterable[int], optional\n\nPart ids for which face and edge connectivity data is available.\n\nface_connectivity_result_per_part: List[FaceConnectivityResults], optional\n\nFace connectivity result per part.\n\nedge_connectivity_result_per_part: List[EdgeConnectivityResults], optional\n\nEdge connectivity result per part.\n\njson_data: dict, optional\n\nJSON dictionary to create a FaceAndEdgeConnectivityResults object with provided parameters.\n\nExamples\n\n>>> face_and_edge_connectivity_results = prime.FaceAndEdgeConnectivityResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointManager.id.html#id","title":"id","text":"id\n\n\n\nproperty MaterialPointManager.id\n\nGet the id of MaterialPointManager."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateZoneResults.assigned_name.html#assigned_name","title":"assigned_name","text":"assigned_name\n\n\n\nproperty CreateZoneResults.assigned_name: str\n\nAssigned name of newly created zone."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.ACIS.html#acis","title":"ACIS","text":"ACIS\n\n\n\nCadFaceter.ACIS = 0\n\nDenotes CAD faceter is Acis."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ContactPatchAxis.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.ASSEMBLY.html#assembly","title":"ASSEMBLY","text":"ASSEMBLY\n\n\n\nPartCreationType.ASSEMBLY = 1\n\nDenotes a part per CAD Assembly."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoiSizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic BoiSizingParams.set_default(max=None, growth_rate=None)\n\nSet the default values of the BoiSizingParams object.\n\nParameters\n\nmax: float, optional\n\nMaximum size used for computing edge and face size using boi size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.real.html#real","title":"real","text":"real\n\n\n\nBCsVolumetricModality.real\n\nthe real part of a complex number"},{"objectID":"Computation times","href":"sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n17:10.251 total execution time for 14 files from all galleries:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py (../../examples/gallery/04_lucid_toy_car.py)\n\n03:30.556\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py (../../examples/gallery/10_wheel_ground_contact_patch.py)\n\n02:31.499\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py (../../examples/gallery/03_lucid_pipe_tee.py)\n\n02:28.691\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py (../../examples/gallery_beta/11_solder_ball.py)\n\n02:25.534\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py (../../examples/gallery/08_lucid_generic_f1_rear_wing.py)\n\n01:38.404\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py (../../examples/gallery/09_multi_layer_quad_mesh_pcb.py)\n\n01:08.914\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py (../../examples/gallery/06_blade_morph.py)\n\n01:06.645\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py (../../examples/gallery/05_pcb_stacker.py)\n\n00:30.783\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py (../../examples/gallery/07_saddle_bracket.py)\n\n00:24.739\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py (../../examples/gallery/01_bracket_scaffold.py)\n\n00:23.089\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py (../../examples/gallery/00_lucid_file_IO.py)\n\n00:22.888\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py (../../examples/gallery/02_lucid_mixing_elbow.py)\n\n00:20.037\n\n0.0\n\nsphx_glr_examples_gallery_examples_misc_example_template.py (../../examples/misc/example_template.py)\n\n00:18.472\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_12_import_from_pygeometry.py (../../examples/gallery/12_import_from_pygeometry.py)\n\n00:00.000\n\n0.0"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesResults.html#deletevolumesresults","title":"DeleteVolumesResults","text":"DeleteVolumesResults\n\n\n\nclass ansys.meshing.prime.DeleteVolumesResults(model=None, deleted_volumes=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with delete volumes operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteVolumesResults object with default parameters.\n\ndeleted_volumes: Iterable[int], optional\n\nIds of deleted volumes.\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume deletion operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteVolumesResults object with provided parameters.\n\nExamples\n\n>>> delete_volumes_results = prime.DeleteVolumesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetMeshSplineParams.html#tetmeshsplineparams","title":"TetMeshSplineParams","text":"TetMeshSplineParams\n\n\n\nclass ansys.meshing.prime.TetMeshSplineParams(model=None, feature_angle=None, mode=None, decimation_factor=None, json_data=None, **kwargs)\n\nParameters for meshing the solid spline.\n\nParameters\n\nmodel: Model\n\nModel to create a TetMeshSplineParams object with default parameters.\n\nfeature_angle: float, optional\n\nFeature angle used in meshing of the solid spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmode: TrimmedSolidSplineCutMode, optional\n\nCut mode to specify rule for mesh cell selection in the volume mesh.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndecimation_factor: float, optional\n\nDecimation factor used in meshing of the solid spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a TetMeshSplineParams object with provided parameters.\n\nExamples\n\n>>> tet_mesh_spline_params = prime.TetMeshSplineParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nContactPatchAxis.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphBCParams.morphable_layers.html#morphable_layers","title":"morphable_layers","text":"morphable_layers\n\n\n\nproperty MorphBCParams.morphable_layers: int\n\nNumber of layers around defined boundary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.html#curvaturesizingparams","title":"CurvatureSizingParams","text":"CurvatureSizingParams\n\n\n\nclass ansys.meshing.prime.CurvatureSizingParams(model=None, min=None, max=None, growth_rate=None, normal_angle=None, use_cad_curvature=None, json_data=None, **kwargs)\n\nSize field using curvature size control computes edge and face sizes using their size and normal angle parameters.\n\nThe curvature size control uses the normal angle parameter as the maximum allowable angle that one element edge may span.\nFor example, a value of 5 implies that a division will be made when the angle change along the curve is 5 degrees.\nHence, a 90 degree arc will be divided into approximately 18 segments.\n\nParameters\n\nmodel: Model\n\nModel to create a CurvatureSizingParams object with default parameters.\n\nmin: float, optional\n\nMinimum size used for computing edge and face size using curavture size control.\n\nmax: float, optional\n\nMaximum size used for computing edge and face size using curavture size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nnormal_angle: float, optional\n\nMaximum allowable angle at which one element edge may span.\n\nuse_cad_curvature: bool, optional\n\nOption to enable use of CAD curvature for computing edge and face size.\n\njson_data: dict, optional\n\nJSON dictionary to create a CurvatureSizingParams object with provided parameters.\n\nExamples\n\n>>> curvature_sizing_params = prime.CurvatureSizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CurvatureSizingParams.html#examples-using-curvaturesizingparams","title":"CurvatureSizingParams > Examples using CurvatureSizingParams","text":"Examples using CurvatureSizingParams\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TARGETZONELETS_NOTWATERTIGHT.html#targetzonelets_notwatertight","title":"TARGETZONELETS_NOTWATERTIGHT","text":"TARGETZONELETS_NOTWATERTIGHT\n\n\n\nErrorCode.TARGETZONELETS_NOTWATERTIGHT = 10003\n\nTarget zonelets do not form a watertight volume."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportFluentCaseParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportFluentCaseParams.print_default()\n\nPrint the default values of ExportFluentCaseParams object.\n\nExamples\n\n>>> ExportFluentCaseParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.get_scope.html#get_scope","title":"get_scope","text":"get_scope\n\n\n\nPeriodicControl.get_scope()\n\nGets the scope for the periodic control.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the scope of the periodic control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope_definition = periodic_control.get_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetSizingResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SetSizingResults.print_default()\n\nPrint the default values of SetSizingResults object.\n\nExamples\n\n>>> SetSizingResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCellZoneletType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nBOIType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nFuseOption.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ImportFluentMeshingMeshResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SurfaceDiagnosticSummaryResults.set_default(error_code=None, n_self_intersections=None, n_free_edges=None, n_multi_edges=None, n_duplicate_faces=None)\n\nSet the default values of the SurfaceDiagnosticSummaryResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the surface diagnostic summary.\n\nn_self_intersections: int, optional\n\nNumber of self intersecting faces identified.\n\nn_free_edges: int, optional\n\nNumber of free face edges identified.\n\nn_multi_edges: int, optional\n\nNumber of multi face edges identified.\n\nn_duplicate_faces: int, optional\n\nNumber of duplicate faces identified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeMeshParams.n_ignore_rings.html#n_ignore_rings","title":"n_ignore_rings","text":"n_ignore_rings\n\n\n\nproperty ThinVolumeMeshParams.n_ignore_rings: int\n\nNumber of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryParams.project_on_facets_if_cadnot_found.html#project_on_facets_if_cadnot_found","title":"project_on_facets_if_cadnot_found","text":"project_on_facets_if_cadnot_found\n\n\n\nproperty ProjectOnGeometryParams.project_on_facets_if_cadnot_found: bool\n\nOption to project on facet if geometry is not found.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MAXOFPRISMCONTROLSMINASPECTRATIO.html#maxofprismcontrolsminaspectratio","title":"MAXOFPRISMCONTROLSMINASPECTRATIO","text":"MAXOFPRISMCONTROLSMINASPECTRATIO\n\n\n\nWarningCode.MAXOFPRISMCONTROLSMINASPECTRATIO = 403\n\nMaximum value of min aspect ratio from selected prism controls is considered for all selected prism controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSmoothType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.UM.html#um","title":"UM","text":"UM\n\n\n\nLengthUnit.UM = 3\n\nDenotes length unit is micrometers."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SeparateBlocksFormatType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSeparateBlocksFormatType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.create_cap_on_face_zonelets.html#create_cap_on_face_zonelets","title":"create_cap_on_face_zonelets","text":"create_cap_on_face_zonelets\n\n\n\nSurfaceUtilities.create_cap_on_face_zonelets(part_id, face_zonelets, params)\n\nCreate caps on the given face zonelets.\n\nParameters\n\npart_id\n\npython:int\n\nId of part to associate face zonelets created to cap.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets to be used to find caps.\n\nparams\n\nCreateCapParams\n\nParameters to create caps.\n\nReturns\n\n:\n\n\n\nCreateCapResults\n\nReturns the CreateCapResults.\n\nReturn type\n\nCreateCapResults\n\nExamples\n\n>>> params = prime.CreateCapParams(model = model)\n>>> results = surface_utils.cap_face_zonelets(part_id, face_zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ProximitySizingParams.print_default()\n\nPrint the default values of ProximitySizingParams object.\n\nExamples\n\n>>> ProximitySizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_faces.html#get_topo_faces","title":"get_topo_faces","text":"get_topo_faces\n\n\n\nPart.get_topo_faces()\n\nGet the topofaces of a part.\n\nReturns\n\nIterable[python:int]\n\nReturn the ids of topofaces.\n\nReturn the ids of topofaces.\n\n\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_faces = part.get_topo_faces()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_faces.html#examples-using-partget_topo_faces","title":"get_topo_faces > Examples using Part.get_topo_faces","text":"Examples using Part.get_topo_faces\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.n_layers.html#n_layers","title":"n_layers","text":"n_layers\n\n\n\nproperty PrismControlGrowthParams.n_layers: int\n\nNumber of prism layers to be generated. It is used for all prism control offset types."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportSTLParams.part_ids.html#part_ids","title":"part_ids","text":"part_ids\n\n\n\nproperty ExportSTLParams.part_ids: Iterable[int]\n\nIds of parts to export."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nTopoSearchField.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MULTIZONEMESHER_DEFEATUREDTOPOEDGES.html#multizonemesher_defeaturedtopoedges","title":"MULTIZONEMESHER_DEFEATUREDTOPOEDGES","text":"MULTIZONEMESHER_DEFEATUREDTOPOEDGES\n\n\n\nWarningCode.MULTIZONEMESHER_DEFEATUREDTOPOEDGES = 110002\n\nTopoEdges that got defeatured in the MultiZone mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.html#fileio","title":"FileIO","text":"FileIO\n\n\n\nclass ansys.meshing.prime.FileIO(model)\n\nHandles reading or writing files from the disk.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create FileIO object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.html#examples-using-fileio","title":"FileIO > Examples using FileIO","text":"Examples using FileIO\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.external_open_topo_faces.html#external_open_topo_faces","title":"external_open_topo_faces","text":"external_open_topo_faces\n\n\n\nproperty ComputeTopoVolumesResults.external_open_topo_faces: Iterable[int]\n\nTopoface ids that are in external space and not part of any topovolumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WrapResult.set_default(warning_codes=None, error_code=None, id=None, name=None)\n\nSet the default values of the WrapResult object.\n\nParameters\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the wrap operation.\n\nerror_code: ErrorCode, optional\n\nError code associated with a wrap operation.\n\nid: int, optional\n\nId of the wrapper part created.\n\nname: str, optional\n\nName of wrapper part created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PartSummaryParams.set_default(print_id=None, print_mesh=None)\n\nSet the default values of the PartSummaryParams object.\n\nParameters\n\nprint_id: bool, optional\n\nBoolean to control print ids. The default is false.\n\nprint_mesh: bool, optional\n\nBoolean to control print mesh information. The default is true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.name.html#name","title":"name","text":"name\n\n\n\nproperty SizeControl.name\n\nGet the name of size control.\n\nReturns\n\npython:str\n\nName of the size control.\n\nExamples\n\n>>> print(size_control.name)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDESOFTSIZINGPARAMS.html#overridesoftsizingparams","title":"OVERRIDESOFTSIZINGPARAMS","text":"OVERRIDESOFTSIZINGPARAMS\n\n\n\nWarningCode.OVERRIDESOFTSIZINGPARAMS = 202\n\nOverriding soft sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.activate_volumetric_size_fields.html#activate_volumetric_size_fields","title":"activate_volumetric_size_fields","text":"activate_volumetric_size_fields\n\n\n\nModel.activate_volumetric_size_fields(size_field_ids)\n\nActivate the sizefields identified by the given sizefield ids.\n\nParameters\n\nsize_field_ids\n\nIterable[python:int]\n\nList of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.activate_volumetric_size_fields(size_field_ids)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.separate_blocks_format_type.html#separate_blocks_format_type","title":"separate_blocks_format_type","text":"separate_blocks_format_type\n\n\n\nproperty ExportMapdlCdbParams.separate_blocks_format_type: SeparateBlocksFormatType\n\nControls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.QUADRATICTETNOTSUPPORTEDWITHPRISMS.html#quadratictetnotsupportedwithprisms","title":"QUADRATICTETNOTSUPPORTEDWITHPRISMS","text":"QUADRATICTETNOTSUPPORTEDWITHPRISMS\n\n\n\nErrorCode.QUADRATICTETNOTSUPPORTEDWITHPRISMS = 131\n\nQuadratic tetrahedral meshing is not supported with prism."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportAbaqusResults.print_default()\n\nPrint the default values of ImportAbaqusResults object.\n\nExamples\n\n>>> ImportAbaqusResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.COLOCATEFUSEDNODESFAILED.html#colocatefusednodesfailed","title":"COLOCATEFUSEDNODESFAILED","text":"COLOCATEFUSEDNODESFAILED\n\n\n\nErrorCode.COLOCATEFUSEDNODESFAILED = 851\n\nColocation of fused nodes failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERPROJECTIONFAILED.html#wrapperprojectionfailed","title":"WRAPPERPROJECTIONFAILED","text":"WRAPPERPROJECTIONFAILED\n\n\n\nErrorCode.WRAPPERPROJECTIONFAILED = 3412\n\nProjection failed for wrapper."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlGrowthParams.last_aspect_ratio.html#last_aspect_ratio","title":"last_aspect_ratio","text":"last_aspect_ratio\n\n\n\nproperty PrismControlGrowthParams.last_aspect_ratio: float\n\nApsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.connect_faces.html#connect_faces","title":"connect_faces","text":"connect_faces\n\n\n\nMesh.connect_faces(part_expression='*', face_labels='*', target_face_labels='*', tolerance=0.05)\n\nConnect face zonelets with a label name pattern within a given tolerance.\n\nThis method connects face zonelets with a label name pattern to\nface zonelets with target face labels within a given tolerance. The connection\nhappens within the part. Face zonelets of a part are connected with face zonelets\nof the same part only.\n\nParameters\n\npart_expression\n\npython:str, optional\n\nName pattern of the parts to use for connecting the face zonelets. The\ndefault is \"*\".\n\nface_labels\n\npython:str, optional\n\nName pattern of the face labels used for connecting the face zonelets.\nThe default is \"*\".\n\ntarget_face_labels\n\npython:str, optional\n\nName pattern of the face labels to connect. The default is \"*\".\n\ntolerance: float, optional\n\nTolerance for the connection. The default is 0.05."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.Mesh.connect_faces.html#examples-using-meshconnect_faces","title":"connect_faces > Examples using Mesh.connect_faces","text":"Examples using Mesh.connect_faces\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.name.html#name","title":"name","text":"name\n\n\n\nproperty TopoData.name\n\nGet the name of TopoData."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.html#sizecontrol","title":"SizeControl","text":"SizeControl\n\n\n\nclass ansys.meshing.prime.SizeControl(model, id, object_id, name, local=False)\n\nSize control is used to compute the size field.\n\nThe size field is computed based on the size control defined.\nDifferent type of size controls provide control over how the mesh size is distributed on a\nsurface or within the volume.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create SizeControl object.\n\nid\n\npython:int\n\nId of the SizeControl.\n\nobject_id\n\npython:int\n\nObject id of the SizeControl.\n\nname\n\npython:str\n\nName of the SizeControl..\n\nlocal\n\nbool, optional\n\nUnused. The default is False.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.html#examples-using-sizecontrol","title":"SizeControl > Examples using SizeControl","text":"Examples using SizeControl\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsResults.copied_zonelets.html#copied_zonelets","title":"copied_zonelets","text":"copied_zonelets\n\n\n\nproperty CopyZoneletsResults.copied_zonelets: Iterable[int]\n\nIds of the copied zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.SKEWNESS.html#skewness","title":"SKEWNESS","text":"SKEWNESS\n\n\n\nCellQualityMeasure.SKEWNESS = 0\n\nThe Skewness metric ranges between 0 (best) and 1 (worst). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureResults.new_edge_zonelets.html#new_edge_zonelets","title":"new_edge_zonelets","text":"new_edge_zonelets\n\n\n\nproperty ExtractFeatureResults.new_edge_zonelets: Iterable[int]\n\nIds of new edge zonelets extracted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ScopeDefinition.set_default(entity_type=None, evaluation_type=None, part_expression=None, label_expression=None, zone_expression=None)\n\nSet the default values of the ScopeDefinition object.\n\nParameters\n\nentity_type: ScopeEntity, optional\n\nEntity type for which scope needs to be evaluated. The default is set to face zonelets.\n\nevaluation_type: ScopeEvaluationType, optional\n\nEvaluation type to scope entities. The default is set to labels.\n\npart_expression: str, optional\n\nPart expression to scope parts while evaluating scope.\n\nlabel_expression: str, optional\n\nLabel expression to scope entities when evaluation type is set to labels.\n\nzone_expression: str, optional\n\nZone expression to scope entities when evaluation type is set to zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.NOVOLUMESCOMPUTED.html#novolumescomputed","title":"NOVOLUMESCOMPUTED","text":"NOVOLUMESCOMPUTED\n\n\n\nWarningCode.NOVOLUMESCOMPUTED = 5600\n\nThere are no volumes found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SPLITTOTRIFAILED.html#splittotrifailed","title":"SPLITTOTRIFAILED","text":"SPLITTOTRIFAILED\n\n\n\nErrorCode.SPLITTOTRIFAILED = 66\n\nShellBL quads split to triangles failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.perform_initial_wrap.html#perform_initial_wrap","title":"perform_initial_wrap","text":"perform_initial_wrap\n\n\n\nproperty CreateBOIParams.perform_initial_wrap: bool\n\nPerform an initial wrap to create a BOI if BOI type is OFFSETSURFACE."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSweepMeshParams.sweep_type.html#sweep_type","title":"sweep_type","text":"sweep_type\n\n\n\nproperty MultiZoneSweepMeshParams.sweep_type: SweepType\n\nOption to specify the sweep mesh decomposition type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLSAMESOURCEFORMORETHANTWOCONTROL.html#thinvolumecontrolsamesourceformorethantwocontrol","title":"THINVOLUMECONTROLSAMESOURCEFORMORETHANTWOCONTROL","text":"THINVOLUMECONTROLSAMESOURCEFORMORETHANTWOCONTROL\n\n\n\nErrorCode.THINVOLUMECONTROLSAMESOURCEFORMORETHANTWOCONTROL = 12111\n\nSame face scope is set as source for more than two thin volume controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.grouping_tolerance.html#grouping_tolerance","title":"grouping_tolerance","text":"grouping_tolerance\n\n\n\nproperty CreateContactPatchParams.grouping_tolerance: float\n\nTolerance distance value to group regions for contact patch creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AdvancedSurferSetup.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nAdvancedSurferSetup.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_NOCELLZONELETS.html#iga_nocellzonelets","title":"IGA_NOCELLZONELETS","text":"IGA_NOCELLZONELETS\n\n\n\nErrorCode.IGA_NOCELLZONELETS = 2410\n\nNo cell zonelets found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.html#sizefieldtype","title":"SizeFieldType","text":"SizeFieldType\n\n\n\nclass ansys.meshing.prime.SizeFieldType(*values)\n\nThe type of sizing field to be used to fetch element size at given location.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.html#examples-using-sizefieldtype","title":"SizeFieldType > Examples using SizeFieldType","text":"Examples using SizeFieldType\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.OVERLAPPINGTOPOFACES.html#overlappingtopofaces","title":"OVERLAPPINGTOPOFACES","text":"OVERLAPPINGTOPOFACES\n\n\n\nTopoSearchField.OVERLAPPINGTOPOFACES = 0\n\nDiagnoses overlapping or partially overlapping topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty IGAResults.error_code: ErrorCode\n\nError code if IGA operation is unsuccessful."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.gap_tolerance.html#gap_tolerance","title":"gap_tolerance","text":"gap_tolerance\n\n\n\nproperty FuseParams.gap_tolerance: float\n\nGap tolerance between faces to be fused. The default value is 0.05.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SOURCETARGETZONELETSNOTFIT.html#sourcetargetzoneletsnotfit","title":"SOURCETARGETZONELETSNOTFIT","text":"SOURCETARGETZONELETSNOTFIT\n\n\n\nErrorCode.SOURCETARGETZONELETSNOTFIT = 122\n\nSource and target zonelets do not fit to thin volume mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.POLY.html#poly","title":"POLY","text":"POLY\n\n\n\nVolumeFillType.POLY = 1\n\nVolume fill using polyhedral cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nThinStripType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nTrimmedSolidSplineCutMode.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.resolve_intersections.html#resolve_intersections","title":"resolve_intersections","text":"resolve_intersections\n\n\n\nproperty WrapperImproveQualityParams.resolve_intersections: bool\n\nControl to resolve face intersections or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_elbow_scdoc.html#download_elbow_scdoc","title":"download_elbow_scdoc","text":"download_elbow_scdoc\n\n\n\nansys.meshing.prime.examples.download_elbow_scdoc(destination=None, force=False)\n\nDownload the SCDOC file for the mixing elbow example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEvaluationType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nScopeEvaluationType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatFeaturesParams.html#detectandtreatfeaturesparams","title":"DetectAndTreatFeaturesParams","text":"DetectAndTreatFeaturesParams\n\n\n\nclass ansys.meshing.prime.DetectAndTreatFeaturesParams(model=None, detect_and_treat_holes=None, detect_and_treat_circular_faces=None, treat_holes_params=None, treat_circular_faces_params=None, json_data=None, **kwargs)\n\nParameters for detect and treat features operations.\n\nParameters\n\nmodel: Model\n\nModel to create a DetectAndTreatFeaturesParams object with default parameters.\n\ndetect_and_treat_holes: bool, optional\n\nOption to detect and treat holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndetect_and_treat_circular_faces: bool, optional\n\nOption to detect and treat circular faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ntreat_holes_params: DetectAndTreatHolesParams, optional\n\nParameters for detect and treat holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ntreat_circular_faces_params: DetectAndTreatCircularFacesParams, optional\n\nParameters for detect and treat circular faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DetectAndTreatFeaturesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_features_params = prime.DetectAndTreatFeaturesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.MM.html#mm","title":"MM","text":"MM\n\n\n\nLengthUnit.MM = 2\n\nDenotes length unit is milimeters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSpline.html#boundaryfittedspline","title":"BoundaryFittedSpline","text":"BoundaryFittedSpline\n\n\n\nclass ansys.meshing.prime.BoundaryFittedSpline(model)\n\nBoundaryFittedSpline helps you to create splines for structured hex-mesh model.\n\nBoundaryFittedSpline allows you to perform H and P refinement.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create BoundaryFittedSpline object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFEROPENINITIALFRONTLOOP.html#surferopeninitialfrontloop","title":"SURFEROPENINITIALFRONTLOOP","text":"SURFEROPENINITIALFRONTLOOP\n\n\n\nErrorCode.SURFEROPENINITIALFRONTLOOP = 16\n\nOpen initial front loop for meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.delete_interior_nodes_params.html#delete_interior_nodes_params","title":"delete_interior_nodes_params","text":"delete_interior_nodes_params\n\n\n\nproperty DefeatureTopologyParams.delete_interior_nodes_params: DeleteInteriorNodesParams\n\nParameters for delete interior nodes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nJoinSeparateMethod.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CollapseParams.keep_edge_connectivity.html#keep_edge_connectivity","title":"keep_edge_connectivity","text":"keep_edge_connectivity\n\n\n\nproperty CollapseParams.keep_edge_connectivity: bool\n\nOption to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MergeVolumesResults.print_default()\n\nPrint the default values of MergeVolumesResults object.\n\nExamples\n\n>>> MergeVolumesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.create_contact_patch.html#create_contact_patch","title":"create_contact_patch","text":"create_contact_patch\n\n\n\nSurfaceUtilities.create_contact_patch(source_zonelets, target_zonelets, params)\n\nCreate a contact patch by offsetting the target zonelets.\n\nParameters\n\nsource_zonelets\n\nIterable[python:int]\n\nIDS for the source face zonelets.\n\ntarget_zonelets\n\nIterable[python:int]\n\nIDs for the target face zonelets.\n\nparams\n\nCreateContactPatchParams\n\nParameters for controlling the contact patch creation.\n\nReturns\n\n:\n\n\n\nCreateContactPatchResults\n\nResults from creating the contact patch.\n\nReturn type\n\nCreateContactPatchResults\n\nExamples\n\n>>> result = surf_utils.create_contact_patch(zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEFRINGESANDOVERLAPSFAILED.html#deletefringesandoverlapsfailed","title":"DELETEFRINGESANDOVERLAPSFAILED","text":"DELETEFRINGESANDOVERLAPSFAILED\n\n\n\nErrorCode.DELETEFRINGESANDOVERLAPSFAILED = 3203\n\nDeleting fringes and overlaps failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WriteSizeFieldParams.html#writesizefieldparams","title":"WriteSizeFieldParams","text":"WriteSizeFieldParams\n\n\n\nclass ansys.meshing.prime.WriteSizeFieldParams(model=None, write_only_active_size_fields=None, json_data=None, **kwargs)\n\nParameters used to write size field file.\n\nParameters\n\nmodel: Model\n\nModel to create a WriteSizeFieldParams object with default parameters.\n\nwrite_only_active_size_fields: bool, optional\n\nOption to write only active size fields into the file.\n\njson_data: dict, optional\n\nJSON dictionary to create a WriteSizeFieldParams object with provided parameters.\n\nExamples\n\n>>> write_size_field_params = prime.WriteSizeFieldParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineSplineParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic RefineSplineParams.print_default()\n\nPrint the default values of RefineSplineParams object.\n\nExamples\n\n>>> RefineSplineParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTSTLFAILEDWITHPOLYFACES.html#exportstlfailedwithpolyfaces","title":"EXPORTSTLFAILEDWITHPOLYFACES","text":"EXPORTSTLFAILEDWITHPOLYFACES\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHPOLYFACES = 555\n\nExport STL not supported for mesh with poly faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.set_geometry_scope.html#set_geometry_scope","title":"set_geometry_scope","text":"set_geometry_scope\n\n\n\nWrapperControl.set_geometry_scope(scope)\n\nSets geometry scope to given scope.\n\nParameters\n\nscope\n\nScopeDefinition\n\nScopeDefinition to scope entities for wrapping.\n\nExamples\n\n>>> wrapper_control.set_geometry_scope(scope)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_BASEFACEUNMESHED.html#stacker_basefaceunmeshed","title":"STACKER_BASEFACEUNMESHED","text":"STACKER_BASEFACEUNMESHED\n\n\n\nErrorCode.STACKER_BASEFACEUNMESHED = 10111\n\nBase face list input has unmeshed topofaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic AddThicknessParams.print_default()\n\nPrint the default values of AddThicknessParams object.\n\nExamples\n\n>>> AddThicknessParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSplineFeatureCaptureType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SurfaceDiagnosticSummaryResults.error_code: ErrorCode\n\nError code associated with the surface diagnostic summary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.deleted_topo_volumes.html#deleted_topo_volumes","title":"deleted_topo_volumes","text":"deleted_topo_volumes\n\n\n\nproperty ComputeTopoVolumesResults.deleted_topo_volumes: Iterable[int]\n\nIds of existing topovolumes that got deleted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.html#igaunstructuredsplinesurf","title":"IGAUnstructuredSplineSurf","text":"IGAUnstructuredSplineSurf\n\n\n\nclass ansys.meshing.prime.IGAUnstructuredSplineSurf(model=None, id=None, degree=None, spline_refinement_level=None, control_points=None, spline_points=None, bad_spline_points_indices=None, deviation_array=None, invalid_jacobian_elements_count=None, average_mesh_size=None, elements_count=None, shell_thickness=None, json_data=None, **kwargs)\n\nInformation of unstructured spline surface.\n\nParameters\n\nmodel: Model\n\nModel to create a IGAUnstructuredSplineSurf object with default parameters.\n\nid: int, optional\n\nId of the unstructured spline surface.\n\ndegree: int, optional\n\nDegree of the spline surface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nspline_refinement_level: int, optional\n\nRefinement level for rendering of spline points.\n\ncontrol_points: Iterable[float], optional\n\nCoordinates of the control points of the spline.\n\nspline_points: Iterable[float], optional\n\nCoordinates of the spline points.\n\nbad_spline_points_indices: Iterable[int], optional\n\nNode indices in the spline points list which has negative jacobian value.\n\ndeviation_array: Iterable[float], optional\n\nDeviation value from the spline point to the model geometry.\n\ninvalid_jacobian_elements_count: int, optional\n\nCount of elements with negative jacobian.\n\naverage_mesh_size: float, optional\n\nReference length to compute deviation.\n\nelements_count: int, optional\n\nCount of shell elements.\n\nshell_thickness: float, optional\n\nThickness of shell.\n\njson_data: dict, optional\n\nJSON dictionary to create a IGAUnstructuredSplineSurf object with provided parameters.\n\nExamples\n\n>>> iga_unstructured_spline_surf = prime.IGAUnstructuredSplineSurf(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.disconnect_with_faces.html#disconnect_with_faces","title":"disconnect_with_faces","text":"disconnect_with_faces\n\n\n\nproperty ExtractFeatureParams.disconnect_with_faces: bool\n\nOption to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.html#splinerefinementtype","title":"SplineRefinementType","text":"SplineRefinementType\n\n\n\nclass ansys.meshing.prime.SplineRefinementType(*values)\n\nType of spline refinement. Currently, supports h-refinement and p-refinement.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.html#cellqualitymeasure","title":"CellQualityMeasure","text":"CellQualityMeasure\n\n\n\nclass ansys.meshing.prime.CellQualityMeasure(*values)\n\nThe type of cell quality measures to check cell quality metrics.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.html#examples-using-cellqualitymeasure","title":"CellQualityMeasure > Examples using CellQualityMeasure","text":"Examples using CellQualityMeasure\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSweepType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteZoneResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty DeleteZoneResults.error_code: ErrorCode\n\nError code associated with the delete zone operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPair.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic BCPair.print_default()\n\nPrint the default values of BCPair object.\n\nExamples\n\n>>> BCPair.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.export_fluent_case.html#export_fluent_case","title":"export_fluent_case","text":"export_fluent_case\n\n\n\nFileIO.export_fluent_case(file_name, export_fluent_case_params)\n\nExport a Fluent case (CAS) file.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the case file on disk.\n\nexport_fluent_case_params\n\nExportFluentCaseParams\n\nParameters for exporting the case file.\n\nReturns\n\n:\n\n\n\nFileWriteResults\n\nResults from exporting the case file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> file_io = FileIO(model=model)\n>>> results = file_io.export_fluent_case(\n                \"/tmp/fluent.cas\",\n                prime.ExportFluentCaseParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_pyra_cells.html#n_pyra_cells","title":"n_pyra_cells","text":"n_pyra_cells\n\n\n\nproperty PartSummaryResults.n_pyra_cells: int\n\nNumber of pyramid cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.html#hexcoretransitionlayertype","title":"HexCoreTransitionLayerType","text":"HexCoreTransitionLayerType\n\n\n\nclass ansys.meshing.prime.HexCoreTransitionLayerType(*values)\n\nHandle size transition of hex cells.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OverlapSearchResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty OverlapSearchResults.error_code: ErrorCode\n\nError Code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSplineContinuityType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.imag.html#imag","title":"imag","text":"imag\n\n\n\nHexCoreTransitionLayerType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ReadSizeFieldParams.html#readsizefieldparams","title":"ReadSizeFieldParams","text":"ReadSizeFieldParams\n\n\n\nclass ansys.meshing.prime.ReadSizeFieldParams(model=None, append=None, json_data=None, **kwargs)\n\nParameters used to read size field file.\n\nParameters\n\nmodel: Model\n\nModel to create a ReadSizeFieldParams object with default parameters.\n\nappend: bool, optional\n\nOption to append the size fields from file.\n\njson_data: dict, optional\n\nJSON dictionary to create a ReadSizeFieldParams object with provided parameters.\n\nExamples\n\n>>> read_size_field_params = prime.ReadSizeFieldParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TARGETZONELETS_SELFINTERSECTING.html#targetzonelets_selfintersecting","title":"TARGETZONELETS_SELFINTERSECTING","text":"TARGETZONELETS_SELFINTERSECTING\n\n\n\nErrorCode.TARGETZONELETS_SELFINTERSECTING = 10002\n\nTarget zonelets form a self intersecting volume."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.FACE.html#face","title":"FACE","text":"FACE\n\n\n\nBCPairType.FACE = 1\n\nOption to specify face zonelet as boundary condition pair."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SurfaceDiagnosticSummaryParams.set_default(scope=None, compute_self_intersections=None, compute_free_edges=None, compute_multi_edges=None, compute_duplicate_faces=None)\n\nSet the default values of the SurfaceDiagnosticSummaryParams object.\n\nParameters\n\nscope: ScopeDefinition, optional\n\nScope the face zonelets for surface diagnostics.\n\ncompute_self_intersections: bool, optional\n\nControl to identify face intersections are present or not.\n\ncompute_free_edges: bool, optional\n\nControl to identify free face edges are present or not.\n\ncompute_multi_edges: bool, optional\n\nControl to identify multi face edges are present or not.\n\ncompute_duplicate_faces: bool, optional\n\nControl to identify duplicate faces are present or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERPATCHFLOWREGIONS_TOOSMALLHOLESIZE.html#wrapperpatchflowregions_toosmallholesize","title":"WRAPPERPATCHFLOWREGIONS_TOOSMALLHOLESIZE","text":"WRAPPERPATCHFLOWREGIONS_TOOSMALLHOLESIZE\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_TOOSMALLHOLESIZE = 3447\n\nToo small hole size provided for dead region.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.GlobalSizingParams.max.html#max","title":"max","text":"max\n\n\n\nproperty GlobalSizingParams.max: float\n\nMaximum value of global sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic UniformSolidSplineCreationParams.print_default()\n\nPrint the default values of UniformSolidSplineCreationParams object.\n\nExamples\n\n>>> UniformSolidSplineCreationParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.DownloadManager.add_file.html#add_file","title":"add_file","text":"add_file\n\n\n\nDownloadManager.add_file(file_path)\n\nAdd the path for a downloaded example file to a list.\n\nThis list keeps track of where example files are\ndownloaded so that a global cleanup of these files can be\nperformed when the client is closed.\n\nParameters\n\nfile_path\n\npython:str\n\nLocal path of the downloaded example file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Connect.subtract_volumes.html#subtract_volumes","title":"subtract_volumes","text":"subtract_volumes\n\n\n\nConnect.subtract_volumes(part_id, target_volumes, cutter_volumes, params)\n\nSubtract cutter volumes from target volumes. Volumes should be computed prior to calling this function. If multiple parts are being merged to form a single part, then volumes should be computed for each part prior to merging. Use compute_closed_volumes to do so. Volumes involved in this operation should not have self intersections. You can use SearchZoneletsBySelfIntersections to check self intersections in the volume.\n\nParameters\n\npart_id\n\npython:int\n\nId of part containing target and cutter volumes for subtract operation.\n\ntarget_volumes\n\nIterable[python:int]\n\nIds of target volumes.\n\ncutter_volumes\n\nIterable[python:int]\n\nIds of cutter volumes.\n\nparams\n\nSubtractVolumesParams\n\nParameters to control subtraction of volumes.\n\nReturns\n\n:\n\n\n\nSubtractVolumesResults\n\nReturns the SubtractVolumesResults.\n\nReturn type\n\nSubtractVolumesResults\n\nExamples\n\n>>> results = connect.subtract_volumes(part_id, target_volumes, cutter_volumes, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSpline.convert_hex_to_spline.html#convert_hex_to_spline","title":"convert_hex_to_spline","text":"convert_hex_to_spline\n\n\n\nHexToSpline.convert_hex_to_spline(input_scope, hex_to_spline_params)\n\nConverts fully hex mesh with topology to spline.\n\nParameters\n\ninput_scope\n\nScopeDefinition\n\nScope definition for input hex mesh.\n\nhex_to_spline_params\n\nHexToSplineParams\n\nParameters to convert hex to spline.\n\nReturns\n\n:\n\n\n\nIGAResults\n\nReturns the IGAResults structure.\n\nReturn type\n\nIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = hexToSpline.ConvertHexToSpline(input_scope, hex_to_spline_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic RefineAtContactsResults.print_default()\n\nPrint the default values of RefineAtContactsResults object.\n\nExamples\n\n>>> RefineAtContactsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRITEPMDATFAILED.html#writepmdatfailed","title":"WRITEPMDATFAILED","text":"WRITEPMDATFAILED\n\n\n\nErrorCode.WRITEPMDATFAILED = 530\n\nFailed to write PMDAT file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDTHINVOLUMECONTROLS.html#invalidthinvolumecontrols","title":"INVALIDTHINVOLUMECONTROLS","text":"INVALIDTHINVOLUMECONTROLS\n\n\n\nErrorCode.INVALIDTHINVOLUMECONTROLS = 12101\n\nInvalid input provided for thin volume control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nCellZoneletType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphSolveParams.html#morphsolveparams","title":"MorphSolveParams","text":"MorphSolveParams\n\n\n\nclass ansys.meshing.prime.MorphSolveParams(model=None, json_data=None, **kwargs)\n\nMorpher solve parameters.\n\nParameters\n\nmodel: Model\n\nModel to create a MorphSolveParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a MorphSolveParams object with provided parameters.\n\nExamples\n\n>>> morph_solve_params = prime.MorphSolveParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphSolveParams.html#examples-using-morphsolveparams","title":"MorphSolveParams > Examples using MorphSolveParams","text":"Examples using MorphSolveParams\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nBodyQueryType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.name.html#name","title":"name","text":"name\n\n\n\nproperty ThinVolumeControl.name\n\nGet the name of ThinVolumeControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IMPORTFLUENTMESHINGMSHFAILED.html#importfluentmeshingmshfailed","title":"IMPORTFLUENTMESHINGMSHFAILED","text":"IMPORTFLUENTMESHINGMSHFAILED\n\n\n\nErrorCode.IMPORTFLUENTMESHINGMSHFAILED = 528\n\nFailed to import fluent meshing mesh file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshedSizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MeshedSizingParams.print_default()\n\nPrint the default values of MeshedSizingParams object.\n\nExamples\n\n>>> MeshedSizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nBCsVolumetricModality.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.html#repairtopologyparams","title":"RepairTopologyParams","text":"RepairTopologyParams\n\n\n\nclass ansys.meshing.prime.RepairTopologyParams(model=None, connect_faces=None, repair_edges=None, split_topo_edges_at_apex_point=None, fillet_max_radius=None, smallest_edge_length=None, merge_edge_allow_self_close=None, suppress_shared_edges_when_merging=None, edge_connect_type=None, connect_faces_params=None, repair_edges_params=None, json_data=None, **kwargs)\n\nParameters for repair topology operations.\n\nParameters\n\nmodel: Model\n\nModel to create a RepairTopologyParams object with default parameters.\n\nconnect_faces: bool, optional\n\nOption to connect faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nrepair_edges: bool, optional\n\nOption to repair edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsplit_topo_edges_at_apex_point: bool, optional\n\nOption to split edges at apex point.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nfillet_max_radius: float, optional\n\nMaximum radius of fillets to be detected.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsmallest_edge_length: float, optional\n\nLength of smallest edge for which split is applied.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsuppress_shared_edges_when_merging: bool, optional\n\nOption for suppressing shared edges when merging.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nedge_connect_type: int, optional\n\nEdge connection type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nconnect_faces_params: ConnectFacesParams, optional\n\nParameters for connect faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nrepair_edges_params: RepairEdgesParams, optional\n\nParameters for repair edges operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a RepairTopologyParams object with provided parameters.\n\nExamples\n\n>>> repair_topology_params = prime.RepairTopologyParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod FaceQualityMeasure.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_COLLAPSESHORTEDGESFAILED.html#vt_collapseshortedgesfailed","title":"VT_COLLAPSESHORTEDGESFAILED","text":"VT_COLLAPSESHORTEDGESFAILED\n\n\n\nErrorCode.VT_COLLAPSESHORTEDGESFAILED = 3608\n\nCollapse short edges operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.stacking_defeature_tolerance.html#stacking_defeature_tolerance","title":"stacking_defeature_tolerance","text":"stacking_defeature_tolerance\n\n\n\nproperty MeshStackerParams.stacking_defeature_tolerance: float\n\nAbsolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileWriteResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FileWriteResults.print_default()\n\nPrint the default values of FileWriteResults object.\n\nExamples\n\n>>> FileWriteResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nStitchType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddToZoneResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty AddToZoneResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TriangulateParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TriangulateParams.print_default()\n\nPrint the default values of TriangulateParams object.\n\nExamples\n\n>>> TriangulateParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CheckFaceDeviationParams.print_default()\n\nPrint the default values of CheckFaceDeviationParams object.\n\nExamples\n\n>>> CheckFaceDeviationParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.id.html#id","title":"id","text":"id\n\n\n\nproperty PrismControl.id\n\nGet the id of PrismControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.NOCADGEOMETRYFOUND.html#nocadgeometryfound","title":"NOCADGEOMETRYFOUND","text":"NOCADGEOMETRYFOUND\n\n\n\nWarningCode.NOCADGEOMETRYFOUND = 7500\n\nCAD geometry not found for some or all topo entities. Skipped projection for those topo entities."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByInvalidNormalsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchByInvalidNormalsResults.set_default(n_found=None, error_code=None)\n\nSet the default values of the SearchByInvalidNormalsResults object.\n\nParameters\n\nn_found: int, optional\n\nNumber of invalid normals identified.\n\nerror_code: ErrorCode, optional\n\nError code associated with search invalid normals operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartialDefeatureParams.edge_sharp_corner_angle.html#edge_sharp_corner_angle","title":"edge_sharp_corner_angle","text":"edge_sharp_corner_angle\n\n\n\nproperty PartialDefeatureParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_SEPARATEFACESFAILED.html#vt_separatefacesfailed","title":"VT_SEPARATEFACESFAILED","text":"VT_SEPARATEFACESFAILED\n\n\n\nErrorCode.VT_SEPARATEFACESFAILED = 3609\n\nSeparate faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_NOFACEZONELETS.html#iga_nofacezonelets","title":"IGA_NOFACEZONELETS","text":"IGA_NOFACEZONELETS\n\n\n\nErrorCode.IGA_NOFACEZONELETS = 2413\n\nNo face zonelets found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nZoneType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSplineRefinementType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.add_labels_on_topo_entities.html#add_labels_on_topo_entities","title":"add_labels_on_topo_entities","text":"add_labels_on_topo_entities\n\n\n\nPart.add_labels_on_topo_entities(labels, topo_entities)\n\nAdd the given labels on the provided topoentities.\n\nParameters\n\nlabels\n\nList[python:str]\n\nLabels to be added on topoentities.\n\ntopo_entities\n\nIterable[python:int]\n\nIds of topoentities.\n\nReturns\n\n:\n\n\n\nAddLabelResults\n\nReturns the AddLabelResults.\n\nReturn type\n\nAddLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.add_labels_on_topo_entities(labels, topo_entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.add_labels_on_topo_entities.html#examples-using-partadd_labels_on_topo_entities","title":"add_labels_on_topo_entities > Examples using Part.add_labels_on_topo_entities","text":"Examples using Part.add_labels_on_topo_entities\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderMergeResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ScaffolderMergeResults.print_default()\n\nPrint the default values of ScaffolderMergeResults object.\n\nExamples\n\n>>> ScaffolderMergeResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CopyZoneletsParams.set_default(copy_labels=None, copy_zones=None)\n\nSet the default values of the CopyZoneletsParams object.\n\nParameters\n\ncopy_labels: bool, optional\n\nOption to copy labels of input zonelets to the corresponding copied zonelets.\n\ncopy_zones: bool, optional\n\nOption to copy zones of input zonelets to corresponding copied zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.html#hexcoreparams","title":"HexCoreParams","text":"HexCoreParams\n\n\n\nclass ansys.meshing.prime.HexCoreParams(model=None, transition_size_field_type=None, buffer_layers=None, rel_peel_layer_offset=None, transition_layer_type=None, cell_element_type=None, surface_mesh_size_scaling=None, enable_region_based_hexcore=None, json_data=None, **kwargs)\n\nParameters to control hexahedral mesh generation.\n\nParameters\n\nmodel: Model\n\nModel to create a HexCoreParams object with default parameters.\n\ntransition_size_field_type: SizeFieldType, optional\n\nSize field type to be used for transition volume (volume between hexcore and boundary).\n\nbuffer_layers: int, optional\n\nMinimum number of cell layers of the same size before the cell size halves or doubles.\n\nrel_peel_layer_offset: float, optional\n\nGap between hexahedral core and geometry surface relative to the surface mesh size.\n\ntransition_layer_type: HexCoreTransitionLayerType, optional\n\nHandle size transition of hex cells.\n\ncell_element_type: HexCoreCellElementType, optional\n\nCell element type of hex-shaped cells.\n\nsurface_mesh_size_scaling: SurfaceMeshSizeScaling, optional\n\nSetting for scaling surface mesh size for hexcore refinement.\n\nenable_region_based_hexcore: bool, optional\n\nChecks whether to enable region based hexcore or not.\n\njson_data: dict, optional\n\nJSON dictionary to create a HexCoreParams object with provided parameters.\n\nExamples\n\n>>> hex_core_params = prime.HexCoreParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Scaffolder.split_topo_faces_by_mesh_region.html#split_topo_faces_by_mesh_region","title":"split_topo_faces_by_mesh_region","text":"split_topo_faces_by_mesh_region\n\n\n\nScaffolder.split_topo_faces_by_mesh_region(topo_faces)\n\nSplit input topofaces by mesh region.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of topology faces.\n\nReturns\n\n:\n\n\n\nScaffolderSplitResults\n\nReturn results in ScaffolderSplitResults type.\n\nReturn type\n\nScaffolderSplitResults\n\nExamples\n\n>>> results = scaffolder.split_topo_faces_by_mesh_region([1,2,7,8])"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WrapperImproveResult.set_default(error_code=None, n_skew_found=None, remaining_skew_faces=None, n_face_intersections_found=None, unresolved_face_intersections=None)\n\nSet the default values of the WrapperImproveResult object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with a wrapper operation.\n\nn_skew_found: int, optional\n\nNumber of skewed faces found.\n\nremaining_skew_faces: int, optional\n\nNumber of remaining skew faces.\n\nn_face_intersections_found: int, optional\n\nNumber of self intersections found.\n\nunresolved_face_intersections: int, optional\n\nNumber of remaining self intersections."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSizingType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.python_logger.html#python_logger","title":"python_logger","text":"python_logger\n\n\n\nproperty Model.python_logger\n\nGet python standard logger from PyPrimeMesh’s logger instance.\n\nPyPrimeMesh’s python standard logger instance can be used to control\nthe verbosity of messages printed by PyPrimeMesh and more.\n\nReturns\n\nlogging.Logger\n\nPyPrimeMesh’s python standard logger instance.\n\nExamples\n\nSet log level to debug.\n\n>>> model.python_logger.setLevel(logging.DEBUG)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TriangulateParams.html#triangulateparams","title":"TriangulateParams","text":"TriangulateParams\n\n\n\nclass ansys.meshing.prime.TriangulateParams(model=None, json_data=None, **kwargs)\n\nProvides the parameters used for triangulation operation.\n\nParameters\n\nmodel: Model\n\nModel to create a TriangulateParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a TriangulateParams object with provided parameters.\n\nExamples\n\n>>> triangulate_params = prime.TriangulateParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchBySpikeResults.set_default(n_found=None, error_code=None)\n\nSet the default values of the SearchBySpikeResults object.\n\nParameters\n\nn_found: int, optional\n\nNumber of spikes detected.\n\nerror_code: ErrorCode, optional\n\nError code associated with search spikes operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.start_distributed_meshing.html#start_distributed_meshing","title":"start_distributed_meshing","text":"start_distributed_meshing\n\n\n\nModel.start_distributed_meshing()\n\nEnables distributed meshing mode.\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> model.start_distributed_meshing()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.copy_face_zonelets.html#copy_face_zonelets","title":"copy_face_zonelets","text":"copy_face_zonelets\n\n\n\nSurfaceUtilities.copy_face_zonelets(face_zonelets, target_part_id, params)\n\nCopy face zonelets.\n\nParameters\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets to be copied.\n\ntarget_part_id\n\npython:int\n\nPart id to be used to move the copied zonelets.\n\nparams\n\nCopyZoneletsParams\n\nParameters to copy face zonelets.\n\nReturns\n\n:\n\n\n\nCopyZoneletsResults\n\nReturns the CopyZoneletsResults.\n\nReturn type\n\nCopyZoneletsResults\n\nExamples\n\n>>>> surfaceutil = SurfaceUtilities(model = model)\n>>>> surfaceutil = surfaceutil.copy_face_zonelets(face_zonelets, target_part_id = new_part.id, prime.CopyZoneletsParams(model = model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetScopeResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SetScopeResults.print_default()\n\nPrint the default values of SetScopeResults object.\n\nExamples\n\n>>> SetScopeResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_saddle_bracket_scdoc.html#download_saddle_bracket_scdoc","title":"download_saddle_bracket_scdoc","text":"download_saddle_bracket_scdoc\n\n\n\nansys.meshing.prime.examples.download_saddle_bracket_scdoc(destination=None, force=False)\n\nDownload SCDOC file for the saddle bracket example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HardSizingParams.growth_rate.html#growth_rate","title":"growth_rate","text":"growth_rate\n\n\n\nproperty HardSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.corner_angle.html#corner_angle","title":"corner_angle","text":"corner_angle\n\n\n\nproperty QuadToSplineParams.corner_angle: float\n\nCorner angle of the feature.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.html#thinstriptype","title":"ThinStripType","text":"ThinStripType\n\n\n\nclass ansys.meshing.prime.ThinStripType(*values)\n\nThe type to identify strip of face elements as thin strips using shape formed by features around the strip of face elements.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.suggested_part_name.html#suggested_part_name","title":"suggested_part_name","text":"suggested_part_name\n\n\n\nproperty WrapperPatchFlowRegionsParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.html#bcsvolumetricmodality","title":"BCsVolumetricModality","text":"BCsVolumetricModality\n\n\n\nclass ansys.meshing.prime.BCsVolumetricModality(*values)\n\nIndicate options to identify morphable region in input volumetric mesh.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.html#surfaceutilities","title":"SurfaceUtilities","text":"SurfaceUtilities\n\n\n\nclass ansys.meshing.prime.SurfaceUtilities(model)\n\nPerforms various general surface utilities algorithms.\n\nFor example, copy zonelets, resolve surface intersections.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create SurfaceUtilities object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.html#examples-using-surfaceutilities","title":"SurfaceUtilities > Examples using SurfaceUtilities","text":"Examples using SurfaceUtilities\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.EXPORTMAPDLANALYSISSETTINGSFAILED.html#exportmapdlanalysissettingsfailed","title":"EXPORTMAPDLANALYSISSETTINGSFAILED","text":"EXPORTMAPDLANALYSISSETTINGSFAILED\n\n\n\nWarningCode.EXPORTMAPDLANALYSISSETTINGSFAILED = 11101\n\nExport MAPDL analysis settings failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TriangulateResults.html#triangulateresults","title":"TriangulateResults","text":"TriangulateResults\n\n\n\nclass ansys.meshing.prime.TriangulateResults(model=None, error_code=None, n_faces_triangulated=None, json_data=None, **kwargs)\n\nResults associated with triangulate operation.\n\nParameters\n\nmodel: Model\n\nModel to create a TriangulateResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nn_faces_triangulated: int, optional\n\nNumber of faces that were triangulated.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a TriangulateResults object with provided parameters.\n\nExamples\n\n>>> triangulate_results = prime.TriangulateResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nPartCreationType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlParams.html#periodiccontrolparams","title":"PeriodicControlParams","text":"PeriodicControlParams\n\n\n\nclass ansys.meshing.prime.PeriodicControlParams(model=None, center=None, axis=None, angle=None, json_data=None, **kwargs)\n\nPeriodicControlParams contains the parameters for periodic surface recovery.  Parameters like center, axis and angle determine the transformation from  one surface to its matching periodic surface.\n\nParameters\n\nmodel: Model\n\nModel to create a PeriodicControlParams object with default parameters.\n\ncenter: Iterable[float], optional\n\nCenter coordinates.\n\naxis: Iterable[float], optional\n\nAxis vector coordinates.\n\nangle: float, optional\n\nAngle in degrees.\n\njson_data: dict, optional\n\nJSON dictionary to create a PeriodicControlParams object with provided parameters.\n\nExamples\n\n>>> periodic_control_params = prime.PeriodicControlParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.html#contactpatchaxis","title":"ContactPatchAxis","text":"ContactPatchAxis\n\n\n\nclass ansys.meshing.prime.ContactPatchAxis(*values)\n\nFlow or wake direction for BOI creation.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.html#examples-using-contactpatchaxis","title":"ContactPatchAxis > Examples using ContactPatchAxis","text":"Examples using ContactPatchAxis\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERLAYEREDQUADFAILED.html#surferlayeredquadfailed","title":"SURFERLAYEREDQUADFAILED","text":"SURFERLAYEREDQUADFAILED\n\n\n\nErrorCode.SURFERLAYEREDQUADFAILED = 6\n\nFailed to layer quad meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic BoundingBox.print_default()\n\nPrint the default values of BoundingBox object.\n\nExamples\n\n>>> BoundingBox.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCellZoneletType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLINPUTS.html#wrappercontrol_invalidcontactpreventioncontrolinputs","title":"WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLINPUTS","text":"WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLINPUTS\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLINPUTS = 3422\n\nContact prevention control specified under wrapper is invalid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty LocalSurferResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.imag.html#imag","title":"imag","text":"imag\n\n\n\nMergeNodeType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PATHNOTFOUND.html#pathnotfound","title":"PATHNOTFOUND","text":"PATHNOTFOUND\n\n\n\nErrorCode.PATHNOTFOUND = 511\n\nInvalid path."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.SurfaceScope.get_parts.html#get_parts","title":"get_parts","text":"get_parts\n\n\n\nSurfaceScope.get_parts(model)\n\nGet the list of part ids in the scope.\n\nParameters\n\nmodel\n\nModel\n\nPyPrimeMesh model.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of part ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> part_ids = su.get_parts()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneMapMeshParams.html#multizonemapmeshparams","title":"MultiZoneMapMeshParams","text":"MultiZoneMapMeshParams\n\n\n\nclass ansys.meshing.prime.MultiZoneMapMeshParams(model=None, scope=None, json_data=None, **kwargs)\n\nDefine controlling parameters for the map mesh using MultiZone.\n\nParameters\n\nmodel: Model\n\nModel to create a MultiZoneMapMeshParams object with default parameters.\n\nscope: ScopeDefinition, optional\n\nScope used for MultiZone map mesh control.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a MultiZoneMapMeshParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_map_mesh_params = prime.MultiZoneMapMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactPatchAxis.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nContactPatchAxis.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.has_left_handed_faces.html#has_left_handed_faces","title":"has_left_handed_faces","text":"has_left_handed_faces\n\n\n\nproperty CheckMeshResults.has_left_handed_faces: bool\n\nIndicates whether mesh has left handed faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdParams.html#searchinfobyregisteridparams","title":"SearchInfoByRegisterIdParams","text":"SearchInfoByRegisterIdParams\n\n\n\nclass ansys.meshing.prime.SearchInfoByRegisterIdParams(model=None, json_data=None, **kwargs)\n\nParameters to retrieve information on registered faces.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchInfoByRegisterIdParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchInfoByRegisterIdParams object with provided parameters.\n\nExamples\n\n>>> search_info_by_register_id_params = prime.SearchInfoByRegisterIdParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.ENTITIESNOTBELONGTOANYZONE.html#entitiesnotbelongtoanyzone","title":"ENTITIESNOTBELONGTOANYZONE","text":"ENTITIESNOTBELONGTOANYZONE\n\n\n\nWarningCode.ENTITIESNOTBELONGTOANYZONE = 6201\n\nEntities do not belong to any zone."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CheckFaceDeviationResults.set_default(n_deviated=None, maximum_deviation=None)\n\nSet the default values of the CheckFaceDeviationResults object.\n\nParameters\n\nn_deviated: int, optional\n\nNumber of faces with deviation.\n\nmaximum_deviation: float, optional\n\nMaximum deviation found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ZONENOTFOUND.html#zonenotfound","title":"ZONENOTFOUND","text":"ZONENOTFOUND\n\n\n\nErrorCode.ZONENOTFOUND = 308\n\nGiven zone not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.analysis_settings.html#analysis_settings","title":"analysis_settings","text":"analysis_settings\n\n\n\nproperty ExportMapdlCdbParams.analysis_settings: str\n\nBoundary conditions can be included into analysis settings.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nType\n\nMAPDL analysis settings in CDB format to be added after the solution block in the file. Note"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSplineRefinementType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EDGEINTERSECTINGFACEFOUND.html#edgeintersectingfacefound","title":"EDGEINTERSECTINGFACEFOUND","text":"EDGEINTERSECTINGFACEFOUND\n\n\n\nErrorCode.EDGEINTERSECTINGFACEFOUND = 104\n\nEdge intersecting face found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.custom_surface_deviation_tolerance.html#custom_surface_deviation_tolerance","title":"custom_surface_deviation_tolerance","text":"custom_surface_deviation_tolerance\n\n\n\nproperty CadRefacetingParams.custom_surface_deviation_tolerance: float\n\nSet custom tolerance for surface deviation in specified length unit."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.DEAD.html#dead","title":"DEAD","text":"DEAD\n\n\n\nMaterialPointType.DEAD = 0\n\nUsed to define dead material point."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.NUMERICPARTNAMERENAMETOALPHANUMERIC.html#numericpartnamerenametoalphanumeric","title":"NUMERICPARTNAMERENAMETOALPHANUMERIC","text":"NUMERICPARTNAMERENAMETOALPHANUMERIC\n\n\n\nWarningCode.NUMERICPARTNAMERENAMETOALPHANUMERIC = 701\n\nNumeric part name renamed to alphanumeric name."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactElementTypeParams.html#contactelementtypeparams","title":"ContactElementTypeParams","text":"ContactElementTypeParams\n\n\n\nclass ansys.meshing.prime.ContactElementTypeParams(model=None, tie_surf_to_surf=None, tie_node_to_surf=None, contact_pair_surf_to_surf=None, contact_pair_node_to_surf=None, json_data=None, **kwargs)\n\nParameters to control element type choices for contact surfaces in TIEs and CONTACT PAIRs.\n\nParameters\n\nmodel: Model\n\nModel to create a ContactElementTypeParams object with default parameters.\n\ntie_surf_to_surf: int, optional\n\nElement type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ntie_node_to_surf: int, optional\n\nElement type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncontact_pair_surf_to_surf: int, optional\n\nElement type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncontact_pair_node_to_surf: int, optional\n\nElement type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ContactElementTypeParams object with provided parameters.\n\nExamples\n\n>>> contact_element_type_params = prime.ContactElementTypeParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureRecoveryParams.size_at_features.html#size_at_features","title":"size_at_features","text":"size_at_features\n\n\n\nproperty FeatureRecoveryParams.size_at_features: float\n\nRefinement size at features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_volume_zones_of_name_pattern.html#get_volume_zones_of_name_pattern","title":"get_volume_zones_of_name_pattern","text":"get_volume_zones_of_name_pattern\n\n\n\nPart.get_volume_zones_of_name_pattern(zone_name_pattern, name_pattern_params)\n\nGet ids of volume zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern\n\npython:str\n\nName pattern to be matched with zone name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match zone name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns a list of volume zone ids matching the zone name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> zones = part.get_volume_zones_of_name_pattern(\"solid*\", name_pattern_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nVolumeFillType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_edge_zones.html#n_edge_zones","title":"n_edge_zones","text":"n_edge_zones\n\n\n\nproperty PartSummaryResults.n_edge_zones: int\n\nNumber of edge zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nWarningCode.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.LOCALSURFERINVALIDNUMRINGS.html#localsurferinvalidnumrings","title":"LOCALSURFERINVALIDNUMRINGS","text":"LOCALSURFERINVALIDNUMRINGS\n\n\n\nErrorCode.LOCALSURFERINVALIDNUMRINGS = 44\n\nInvalid number of rings input for the local surface mesh operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsParams.html#searchbyfoldsparams","title":"SearchByFoldsParams","text":"SearchByFoldsParams\n\n\n\nclass ansys.meshing.prime.SearchByFoldsParams(model=None, critical_angle=None, json_data=None, **kwargs)\n\nParameters to control fold detection.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchByFoldsParams object with default parameters.\n\ncritical_angle: float, optional\n\nThreshold angle for fold detection.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchByFoldsParams object with provided parameters.\n\nExamples\n\n>>> search_by_folds_params = prime.SearchByFoldsParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nFaceQualityMeasure.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.material_point_name.html#material_point_name","title":"material_point_name","text":"material_point_name\n\n\n\nproperty WrapperCloseGapsParams.material_point_name: str\n\nMaterial point name near the gaps to be closed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCadFaceter.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplitParams.split_ratio.html#split_ratio","title":"split_ratio","text":"split_ratio\n\n\n\nproperty SplitParams.split_ratio: float\n\nMinimum ratio of split edge length to original edge length."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nStitchType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Wrapper.improve_quality.html#improve_quality","title":"improve_quality","text":"improve_quality\n\n\n\nWrapper.improve_quality(part_id, params)\n\nImprove the surface quality and resolve connectivity issues like intersections, multi, free, spikes, point contacts and so on.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nparams\n\nWrapperImproveQualityParams\n\nWrapper improve quality parameters.\n\nReturns\n\n:\n\n\n\nWrapperImproveResult\n\nReturn the Wrapper improve result.\n\nReturn type\n\nWrapperImproveResult\n\nExamples\n\n>>> result = wrapper.improve_quality(part_id, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SplineRefinementType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.html#zonetype","title":"ZoneType","text":"ZoneType\n\n\n\nclass ansys.meshing.prime.ZoneType(*values)\n\nZoneType decides the type of zone.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderSplitResults.new_faces.html#new_faces","title":"new_faces","text":"new_faces\n\n\n\nproperty ScaffolderSplitResults.new_faces: Iterable[int]\n\nTopofaces created after split operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nTopoSearchField.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryParams.print_id.html#print_id","title":"print_id","text":"print_id\n\n\n\nproperty PartSummaryParams.print_id: bool\n\nBoolean to control print ids. The default is false."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_saddle_bracket_dsco.html#download_saddle_bracket_dsco","title":"download_saddle_bracket_dsco","text":"download_saddle_bracket_dsco\n\n\n\nansys.meshing.prime.examples.download_saddle_bracket_dsco(destination=None, force=False)\n\nDownload DSCO file for the saddle bracket example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.ALLALL.html#allall","title":"ALLALL","text":"ALLALL\n\n\n\nStitchType.ALLALL = 0\n\nStitch surfaces at boundary edges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.HEXCOREPOLY.html#hexcorepoly","title":"HEXCOREPOLY","text":"HEXCOREPOLY\n\n\n\nVolumeFillType.HEXCOREPOLY = 3\n\nVolume fill using hexahedral cells in the core and polyhedral cells near the boundary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.html#cadrefacetingmaxedgesizelimit","title":"CadRefacetingMaxEdgeSizeLimit","text":"CadRefacetingMaxEdgeSizeLimit\n\n\n\nclass ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit(*values)\n\nTypes of maximum edge size limit for CAD faceting.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit.html#examples-using-cadrefacetingmaxedgesizelimit","title":"CadRefacetingMaxEdgeSizeLimit > Examples using CadRefacetingMaxEdgeSizeLimit","text":"Examples using CadRefacetingMaxEdgeSizeLimit\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_elbow_fmd.html#download_elbow_fmd","title":"download_elbow_fmd","text":"download_elbow_fmd\n\n\n\nansys.meshing.prime.examples.download_elbow_fmd(destination=None, force=False)\n\nDownload the FMD file for the mixing elbow example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_elbow_fmd.html#examples-using-download_elbow_fmd","title":"download_elbow_fmd > Examples using download_elbow_fmd","text":"Examples using download_elbow_fmd\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_misc_example_template.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.seed_faces.html#seed_faces","title":"seed_faces","text":"seed_faces\n\n\n\nproperty MeshStackerParams.seed_faces: Iterable[int]\n\nList of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.get_topo_edges_of_topo_faces.html#get_topo_edges_of_topo_faces","title":"get_topo_edges_of_topo_faces","text":"get_topo_edges_of_topo_faces\n\n\n\nTopoData.get_topo_edges_of_topo_faces(topo_faces)\n\nGet the topoedges of the provided topoface ids.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of the topoface.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of topoedge ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges_of_topo_faces = topo_data.get_topo_edges_of_topo_faces(topo_faces)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineTetMeshParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic RefineTetMeshParams.print_default()\n\nPrint the default values of RefineTetMeshParams object.\n\nExamples\n\n>>> RefineTetMeshParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointManager.html#materialpointmanager","title":"MaterialPointManager","text":"MaterialPointManager\n\n\n\nclass ansys.meshing.prime.MaterialPointManager(model, id, object_id, name)\n\nProvide functions for material point creation, deletion and queries.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create MaterialPointManager object.\n\nid\n\npython:int\n\nId of the MaterialPointManager.\n\nobject_id\n\npython:int\n\nObject id of the MaterialPointManager.\n\nname\n\npython:str\n\nName of the MaterialPointManager.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.PARTNOTINPARTSCOPE.html#partnotinpartscope","title":"PARTNOTINPARTSCOPE","text":"PARTNOTINPARTSCOPE\n\n\n\nWarningCode.PARTNOTINPARTSCOPE = 601\n\nSelected part is not in the part scope of the periodic control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesParams.delete_mesh_zonelets.html#delete_mesh_zonelets","title":"delete_mesh_zonelets","text":"delete_mesh_zonelets\n\n\n\nproperty DeleteTopoEntitiesParams.delete_mesh_zonelets: bool\n\nOption to delete mesh zonelets of topology."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATEBOI_INVALIDSCALE.html#createboi_invalidscale","title":"CREATEBOI_INVALIDSCALE","text":"CREATEBOI_INVALIDSCALE\n\n\n\nErrorCode.CREATEBOI_INVALIDSCALE = 382\n\nBOI creation failed. Scale factors should not be less than one."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nScaffolderRepairMode.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nVolumeFillType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSplineRefinementType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.VT_SKIPPEDNONMANIFOLDEDGES.html#vt_skippednonmanifoldedges","title":"VT_SKIPPEDNONMANIFOLDEDGES","text":"VT_SKIPPEDNONMANIFOLDEDGES\n\n\n\nWarningCode.VT_SKIPPEDNONMANIFOLDEDGES = 100004\n\nInput contains non-manifold edges which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.html#volumequalityresultspart","title":"VolumeQualityResultsPart","text":"VolumeQualityResultsPart\n\n\n\nclass ansys.meshing.prime.VolumeQualityResultsPart(model=None, cell_quality_measure=None, measure_name=None, part_id=None, quality_limit=None, n_found=None, max_quality=None, min_quality=None, json_data=None, **kwargs)\n\nResult of volume quality of part.\n\nParameters\n\nmodel: Model\n\nModel to create a VolumeQualityResultsPart object with default parameters.\n\ncell_quality_measure: CellQualityMeasure, optional\n\nType of the cell quality measure.\n\nmeasure_name: str, optional\n\nName of the cell quality measure.\n\npart_id: int, optional\n\nId of the part for which quality is computed.\n\nquality_limit: float, optional\n\nTarget quality limit used to find failures.\n\nn_found: int, optional\n\nNumber of failed cells.\n\nmax_quality: float, optional\n\nMaximum value of quality measure.\n\nmin_quality: float, optional\n\nMinimum value of quality measure.\n\njson_data: dict, optional\n\nJSON dictionary to create a VolumeQualityResultsPart object with provided parameters.\n\nExamples\n\n>>> volume_quality_results_part = prime.VolumeQualityResultsPart(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.html#examples-using-volumequalityresultspart","title":"VolumeQualityResultsPart > Examples using VolumeQualityResultsPart","text":"Examples using VolumeQualityResultsPart\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic RefineAtContactsParams.set_default(contact_tolerance=None, relative_tolerance=None, refine_max_size=None, project_on_geometry=None)\n\nSet the default values of the RefineAtContactsParams object.\n\nParameters\n\ncontact_tolerance: float, optional\n\nMaximum tolerance used to identify face elements as contacts.\n\nrelative_tolerance: bool, optional\n\nOption to specify the contact tolerance is relative or absolute.\n\nrefine_max_size: float, optional\n\nMaximum size used to refine contact face elements.\n\nproject_on_geometry: bool, optional\n\nProject on geometry on remesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDEBOISIZINGPARAMS.html#overrideboisizingparams","title":"OVERRIDEBOISIZINGPARAMS","text":"OVERRIDEBOISIZINGPARAMS\n\n\n\nWarningCode.OVERRIDEBOISIZINGPARAMS = 205\n\nOverriding BOI sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchByQualityParams.print_default()\n\nPrint the default values of SearchByQualityParams object.\n\nExamples\n\n>>> SearchByQualityParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TRIANGULATIONFAILED.html#triangulationfailed","title":"TRIANGULATIONFAILED","text":"TRIANGULATIONFAILED\n\n\n\nErrorCode.TRIANGULATIONFAILED = 102\n\nTriangulation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SIZEFIELDTYPENOTSUPPORTED.html#sizefieldtypenotsupported","title":"SIZEFIELDTYPENOTSUPPORTED","text":"SIZEFIELDTYPENOTSUPPORTED\n\n\n\nErrorCode.SIZEFIELDTYPENOTSUPPORTED = 8001\n\nProvided Size Field Type is not supported by this operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.FILENOTFOUND.html#filenotfound","title":"FILENOTFOUND","text":"FILENOTFOUND\n\n\n\nErrorCode.FILENOTFOUND = 524\n\nFile path or name not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.detect_circular_holes.html#detect_circular_holes","title":"detect_circular_holes","text":"detect_circular_holes\n\n\n\nproperty DetectAndTreatHolesParams.detect_circular_holes: bool\n\nOption to detect circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExtractTopoVolumesResults.print_default()\n\nPrint the default values of ExtractTopoVolumesResults object.\n\nExamples\n\n>>> ExtractTopoVolumesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.merge_face_normals_angle.html#merge_face_normals_angle","title":"merge_face_normals_angle","text":"merge_face_normals_angle\n\n\n\nproperty DetectAndTreatHolesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DUPLICATEFACESFOUND.html#duplicatefacesfound","title":"DUPLICATEFACESFOUND","text":"DUPLICATEFACESFOUND\n\n\n\nErrorCode.DUPLICATEFACESFOUND = 105\n\nDuplicate faces found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOERROR.html#noerror","title":"NOERROR","text":"NOERROR\n\n\n\nErrorCode.NOERROR = 0\n\nNo error."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetContactPreventionsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SetContactPreventionsResults.set_default(error_code=None, ids=None)\n\nSet the default values of the SetContactPreventionsResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the set contact preventions.\n\nids: Iterable[int], optional\n\nIds of added contact prevention controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeMergeControl.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nEdgeMergeControl.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddLabelResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic AddLabelResults.print_default()\n\nPrint the default values of AddLabelResults object.\n\nExamples\n\n>>> AddLabelResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PERIODICRECOVERYFORALREADYVOLUMEMESHEDPART.html#periodicrecoveryforalreadyvolumemeshedpart","title":"PERIODICRECOVERYFORALREADYVOLUMEMESHEDPART","text":"PERIODICRECOVERYFORALREADYVOLUMEMESHEDPART\n\n\n\nErrorCode.PERIODICRECOVERYFORALREADYVOLUMEMESHEDPART = 2913\n\nPeriodic recovery unsupported for already volume meshed part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportFluentMeshingMeshResults.set_default(error_code=None, new_parts_created=None)\n\nSet the default values of the ImportFluentMeshingMeshResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nnew_parts_created: Iterable[int], optional\n\nIds of new parts created for each file unreferenced fluent meshing mesh zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeZoneletParams.html#scopezoneletparams","title":"ScopeZoneletParams","text":"ScopeZoneletParams\n\n\n\nclass ansys.meshing.prime.ScopeZoneletParams(model=None, json_data=None, **kwargs)\n\nParameters used to get the scoped face or edge zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a ScopeZoneletParams object with default parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a ScopeZoneletParams object with provided parameters.\n\nExamples\n\n>>> scope_zonelet_params = prime.ScopeZoneletParams(model = model)\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapParams.wrap_region.html#wrap_region","title":"wrap_region","text":"wrap_region\n\n\n\nproperty WrapParams.wrap_region: WrapRegion\n\nIndicates source type to extract wrapper region."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic LocalSurferResults.print_default()\n\nPrint the default values of LocalSurferResults object.\n\nExamples\n\n>>> LocalSurferResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.refacet.html#refacet","title":"refacet","text":"refacet\n\n\n\nproperty ImportCadParams.refacet: bool\n\nRefine or coarsen the CAD faceting based on refaceting parameters when true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.BYFACEZONE.html#byfacezone","title":"BYFACEZONE","text":"BYFACEZONE\n\n\n\nVolumeNamingType.BYFACEZONE = 2\n\nOption to use face zone name as source to name volume zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TOLERANCEVALUEINVALID.html#tolerancevalueinvalid","title":"TOLERANCEVALUEINVALID","text":"TOLERANCEVALUEINVALID\n\n\n\nErrorCode.TOLERANCEVALUEINVALID = 856\n\nInvalid tolerance value specified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.use_projection_scope.html#use_projection_scope","title":"use_projection_scope","text":"use_projection_scope\n\n\n\nproperty HexToSplineParams.use_projection_scope: bool\n\nOption to use projection scope.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeFillType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nVolumeFillType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.html#cadfaceter","title":"CadFaceter","text":"CadFaceter\n\n\n\nclass ansys.meshing.prime.CadFaceter(*values)\n\nTypes of CAD faceter.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.html#examples-using-cadfaceter","title":"CadFaceter > Examples using CadFaceter","text":"Examples using CadFaceter\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nWrapRegion.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLINVALIDNUMBEROFLAYER.html#thinvolumecontrolinvalidnumberoflayer","title":"THINVOLUMECONTROLINVALIDNUMBEROFLAYER","text":"THINVOLUMECONTROLINVALIDNUMBEROFLAYER\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDNUMBEROFLAYER = 12107\n\nInvalid number of layers provided for thin volume control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.TRANSFORMATIONFAILED.html#transformationfailed","title":"TRANSFORMATIONFAILED","text":"TRANSFORMATIONFAILED\n\n\n\nErrorCode.TRANSFORMATIONFAILED = 3000\n\nTransformation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DefeatureTopologyParams.print_default()\n\nPrint the default values of DefeatureTopologyParams object.\n\nExamples\n\n>>> DefeatureTopologyParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ShellBLControl.name.html#name","title":"name","text":"name\n\n\n\nproperty ShellBLControl.name\n\nGet the name of ShellBLControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.NOBOUNDARYLOOPTOPOFACES.html#noboundarylooptopofaces","title":"NOBOUNDARYLOOPTOPOFACES","text":"NOBOUNDARYLOOPTOPOFACES\n\n\n\nTopoSearchField.NOBOUNDARYLOOPTOPOFACES = 4\n\nDiagnoses topofaces without bounding edges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERCANNOTREMESHPERIODICZONELETS.html#surfercannotremeshperiodiczonelets","title":"SURFERCANNOTREMESHPERIODICZONELETS","text":"SURFERCANNOTREMESHPERIODICZONELETS\n\n\n\nErrorCode.SURFERCANNOTREMESHPERIODICZONELETS = 45\n\nCannot remesh periodic face zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSmoothType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeMeshParams.n_layers.html#n_layers","title":"n_layers","text":"n_layers\n\n\n\nproperty ThinVolumeMeshParams.n_layers: int\n\nNumber of thin volume layers to be generated."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateMaterialPointParams.set_default(type=None)\n\nSet the default values of the CreateMaterialPointParams object.\n\nParameters\n\ntype: MaterialPointType, optional\n\nDefines the type of material point."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.NATIVE.html#native","title":"NATIVE","text":"NATIVE\n\n\n\nCadReaderRoute.NATIVE = 1\n\nDenotes native CAD reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nMergeNodeType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.html#facequalitymeasure","title":"FaceQualityMeasure","text":"FaceQualityMeasure\n\n\n\nclass ansys.meshing.prime.FaceQualityMeasure(*values)\n\nThe type of face quality measures to check face quality metrics.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.html#examples-using-facequalitymeasure","title":"FaceQualityMeasure > Examples using FaceQualityMeasure","text":"Examples using FaceQualityMeasure\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.INVALIDSIZECONTROLSCOPE.html#invalidsizecontrolscope","title":"INVALIDSIZECONTROLSCOPE","text":"INVALIDSIZECONTROLSCOPE\n\n\n\nWarningCode.INVALIDSIZECONTROLSCOPE = 208\n\nInvalid size control type provided."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.M.html#m","title":"M","text":"M\n\n\n\nLengthUnit.M = 0\n\nDenotes length unit is meters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_thin_volume_control_by_name.html#get_thin_volume_control_by_name","title":"get_thin_volume_control_by_name","text":"get_thin_volume_control_by_name\n\n\n\nControlData.get_thin_volume_control_by_name(name)\n\nGet a thin volume control by name.\n\nParameters\n\nname\n\npython:str\n\nName of the thin volume control.\n\nReturns\n\n:\n\n\n\nThinVolumeControl\n\nThin volume control.\n\nReturn type\n\nThinVolumeControl\n\nExamples\n\n>>> contorl_data = model.control_data\n>>> thin_volume_control = control_data.get_thin_volume_control_by_name(\n                                             \"ThinVolumeControl-1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.real.html#real","title":"real","text":"real\n\n\n\nSplineContinuityType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSurfaceFeatureType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesParams.tolerance.html#tolerance","title":"tolerance","text":"tolerance\n\n\n\nproperty SmoothDihedralFaceNodesParams.tolerance: float\n\nTolerance relative to local mesh size to control smooth movement of nodes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nScaffolderRepairMode.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_test_examples.html#download_test_examples","title":"download_test_examples","text":"download_test_examples\n\n\n\nansys.meshing.prime.examples.download_test_examples(destination=None, force=False)\n\nDownload the example files necessary for unit testing.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the test example files to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to always download the test example files. The default is\nFalse, in which case if the test example files are cached, they\nare reused.\n\nReturns\n\n:\n\n\n\nList[python:str]\n\nLocal paths to the downloaded test example files.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     examples = prime_examples.unit_test_examples.download_test_examples()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.ALLPOLY.html#allpoly","title":"ALLPOLY","text":"ALLPOLY\n\n\n\nHexCoreCellElementType.ALLPOLY = 0\n\nGenerates poly type cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadResults.cad_parameters.html#cad_parameters","title":"cad_parameters","text":"cad_parameters\n\n\n\nproperty ImportCadResults.cad_parameters: Dict[str, str | int | float | bool]\n\nReturns the parameters associated with CAD. Available only with WorkBench CAD Reader route."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetFeatureRecoveriesResults.html#setfeaturerecoveriesresults","title":"SetFeatureRecoveriesResults","text":"SetFeatureRecoveriesResults\n\n\n\nclass ansys.meshing.prime.SetFeatureRecoveriesResults(model=None, ids=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with set feature recoveries.\n\nParameters\n\nmodel: Model\n\nModel to create a SetFeatureRecoveriesResults object with default parameters.\n\nids: Iterable[int], optional\n\nIds of added feature recovery controls.\n\nerror_code: ErrorCode, optional\n\nError code associated with the set feature recoveries.\n\njson_data: dict, optional\n\nJSON dictionary to create a SetFeatureRecoveriesResults object with provided parameters.\n\nExamples\n\n>>> set_feature_recoveries_results = prime.SetFeatureRecoveriesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ComponentChildrenParams.print_default()\n\nPrint the default values of ComponentChildrenParams object.\n\nExamples\n\n>>> ComponentChildrenParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineSplineParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic RefineSplineParams.set_default(refine_flag_u=None, refine_flag_v=None, refine_flag_w=None, spline_refinement_type=None)\n\nSet the default values of the RefineSplineParams object.\n\nParameters\n\nrefine_flag_u: bool, optional\n\nIndicates whether refinement is applied in u direction.\n\nrefine_flag_v: bool, optional\n\nIndicates whether refinement is applied in v direction.\n\nrefine_flag_w: bool, optional\n\nIndicates whether refinement is applied in w direction.\n\nspline_refinement_type: SplineRefinementType, optional\n\nType of spline refinement. Currently, supports h-refinement and p-refinement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_volumes.html#get_volumes","title":"get_volumes","text":"get_volumes\n\n\n\nPart.get_volumes()\n\nGet all the volumes of the part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn ids of volumes.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volumes = part.get_volumes()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_volumes.html#examples-using-partget_volumes","title":"get_volumes > Examples using Part.get_volumes","text":"Examples using Part.get_volumes\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.export_rigid_bodies_as_rbgen.html#export_rigid_bodies_as_rbgen","title":"export_rigid_bodies_as_rbgen","text":"export_rigid_bodies_as_rbgen\n\n\n\nproperty ExportMapdlCdbParams.export_rigid_bodies_as_rbgen: bool\n\nOption to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.import_fluent_case.html#import_fluent_case","title":"import_fluent_case","text":"import_fluent_case\n\n\n\nFileIO.import_fluent_case(file_name, import_fluent_case_params)\n\nImport a Fluent case (CAS) file from disk.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the case file on disk.\n\nimport_fluent_case_params\n\nImportFluentCaseParams\n\nParameters for importing the case file.\n\nReturns\n\n:\n\n\n\nImportFluentCaseResults\n\nResults from importing the case file.\n\nReturn type\n\nImportFluentCaseResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportFluentCaseParams(model=model)\n>>> results = file_io.import_fluent_case(\"/tmp/fluent.cas\", params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldFileReadResults.html#sizefieldfilereadresults","title":"SizeFieldFileReadResults","text":"SizeFieldFileReadResults\n\n\n\nclass ansys.meshing.prime.SizeFieldFileReadResults(model=None, error_code=None, size_field_ids=None, json_data=None, **kwargs)\n\nResults of size field file read operation.\n\nParameters\n\nmodel: Model\n\nModel to create a SizeFieldFileReadResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code if size field file read operation was unsuccessful.\n\nsize_field_ids: Iterable[int], optional\n\nIds of size fields read by read size field operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SizeFieldFileReadResults object with provided parameters.\n\nExamples\n\n>>> size_field_file_read_results = prime.SizeFieldFileReadResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeParams.nugget_size.html#nugget_size","title":"nugget_size","text":"nugget_size\n\n\n\nproperty FixInvalidNormalNodeParams.nugget_size: float\n\nRelative size used to create nugget at invalid normal node. The size is relative to mesh size at the node."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteVolumesParams.print_default()\n\nPrint the default values of DeleteVolumesParams object.\n\nExamples\n\n>>> DeleteVolumesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_faces.html#n_faces","title":"n_faces","text":"n_faces\n\n\n\nproperty PartSummaryResults.n_faces: int\n\nNumber of faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.partial_defeature_params.html#partial_defeature_params","title":"partial_defeature_params","text":"partial_defeature_params\n\n\n\nproperty DefeatureTopologyParams.partial_defeature_params: PartialDefeatureParams\n\nParameters for partial defeature operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.has_non_positive_areas.html#has_non_positive_areas","title":"has_non_positive_areas","text":"has_non_positive_areas\n\n\n\nproperty CheckMeshResults.has_non_positive_areas: bool\n\nIndicates whether mesh has non positive areas."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TopoFillHoleParams.set_default(edges_to_exclude=None, suppress_boundary_after_hole_fill=None, fill_annular_hole=None)\n\nSet the default values of the TopoFillHoleParams object.\n\nParameters\n\nedges_to_exclude: Iterable[int], optional\n\nTopoEdges to be excluded for cap creation.\n\nsuppress_boundary_after_hole_fill: bool, optional\n\nOption to preserve or suppress hole-boundary after filling holes.\n\nfill_annular_hole: bool, optional\n\nOption for filling holes with annular bounding loops."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nHexCoreTransitionLayerType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty DeleteResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MeshStackerParams.set_default(origin=None, direction=None, lateral_defeature_tolerance=None, stacking_defeature_tolerance=None, max_offset_size=None, size_control_ids=None, seed_faces=None, delete_base=None)\n\nSet the default values of the MeshStackerParams object.\n\nParameters\n\norigin: Iterable[float], optional\n\nOrigin coordinate list of stacker.\n\ndirection: Iterable[float], optional\n\nDirection vector of stacker.\n\nlateral_defeature_tolerance: float, optional\n\nAbsolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nstacking_defeature_tolerance: float, optional\n\nAbsolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nmax_offset_size: float, optional\n\nMaximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\nsize_control_ids: Iterable[int], optional\n\nList of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\nseed_faces: Iterable[int], optional\n\nList of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\ndelete_base: bool, optional\n\nOption to delete base face at the end of stacking. The default is false."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_edge_zonelets.html#get_edge_zonelets","title":"get_edge_zonelets","text":"get_edge_zonelets\n\n\n\nPart.get_edge_zonelets()\n\nGet the edge zonelets of a part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of edge zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> edge_zonelets = part.get_edge_zonelets()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_edge_zonelets.html#examples-using-partget_edge_zonelets","title":"get_edge_zonelets > Examples using Part.get_edge_zonelets","text":"Examples using Part.get_edge_zonelets\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nMaterialPointType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchByQualityResults.print_default()\n\nPrint the default values of SearchByQualityResults object.\n\nExamples\n\n>>> SearchByQualityResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatCircularFacesParams.html#detectandtreatcircularfacesparams","title":"DetectAndTreatCircularFacesParams","text":"DetectAndTreatCircularFacesParams\n\n\n\nclass ansys.meshing.prime.DetectAndTreatCircularFacesParams(model=None, edge_mesh_constant_size=None, surface_mesh_constant_size=None, merge_edge_allow_self_close=None, merge_face_normals_angle=None, json_data=None, **kwargs)\n\nParameters for detect and treat circular faces operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DetectAndTreatCircularFacesParams object with default parameters.\n\nedge_mesh_constant_size: float, optional\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size: float, optional\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle: float, optional\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DetectAndTreatCircularFacesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_circular_faces_params = prime.DetectAndTreatCircularFacesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeParams.nugget_mesh_size.html#nugget_mesh_size","title":"nugget_mesh_size","text":"nugget_mesh_size\n\n\n\nproperty FixInvalidNormalNodeParams.nugget_mesh_size: float\n\nRelative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FlowDirection.Z.html#z","title":"Z","text":"Z\n\n\n\nFlowDirection.Z = 3\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INPUTNOTCOMPLETE.html#inputnotcomplete","title":"INPUTNOTCOMPLETE","text":"INPUTNOTCOMPLETE\n\n\n\nErrorCode.INPUTNOTCOMPLETE = 1308\n\nInput provided is incomplete."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.real.html#real","title":"real","text":"real\n\n\n\nSolverType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nHexCoreTransitionLayerType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetContactPreventionsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SetContactPreventionsResults.print_default()\n\nPrint the default values of SetContactPreventionsResults object.\n\nExamples\n\n>>> SetContactPreventionsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellQualityMeasure.FLUENTASPECTRATIO.html#fluentaspectratio","title":"FLUENTASPECTRATIO","text":"FLUENTASPECTRATIO\n\n\n\nCellQualityMeasure.FLUENTASPECTRATIO = 13\n\nThe Fluent aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst)."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_solder_ball_fmd.html#download_solder_ball_fmd","title":"download_solder_ball_fmd","text":"download_solder_ball_fmd\n\n\n\nansys.meshing.prime.examples.download_solder_ball_fmd(destination=None, force=False)\n\nDownload a FMD file for the solder ball example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     solder_ball = prime_examples.download_solder_ball_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(solder_ball, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_solder_ball_fmd.html#examples-using-download_solder_ball_fmd","title":"download_solder_ball_fmd > Examples using download_solder_ball_fmd","text":"Examples using download_solder_ball_fmd\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.READSIZECONTROLFAILED.html#readsizecontrolfailed","title":"READSIZECONTROLFAILED","text":"READSIZECONTROLFAILED\n\n\n\nErrorCode.READSIZECONTROLFAILED = 522\n\nReading size control file failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nHexCoreTransitionLayerType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nWrapRegion.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic HexToSplineParams.set_default(feature_capture_type=None, feature_angle=None, corner_angle=None, continuity=None, project_on_geometry=None, use_projection_scope=None, projection_scope=None)\n\nSet the default values of the HexToSplineParams object.\n\nParameters\n\nfeature_capture_type: SplineFeatureCaptureType, optional\n\nFeature capture options.\n\nfeature_angle: float, optional\n\nAngle to capture the feature.\n\ncorner_angle: float, optional\n\nCorner angle of the feature.\n\ncontinuity: SplineContinuityType, optional\n\nSpline Continuity options.\n\nproject_on_geometry: bool, optional\n\nOption to project on geometry.\n\nuse_projection_scope: bool, optional\n\nOption to use projection scope.\n\nprojection_scope: ScopeDefinition, optional\n\nScope to evaluate entities for projection."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ExportMapdlCdbResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.get_soft_sizing_params.html#get_soft_sizing_params","title":"get_soft_sizing_params","text":"get_soft_sizing_params\n\n\n\nSizeControl.get_soft_sizing_params()\n\nGet the soft sizing parameters of size control.\n\nReturns\n\n:\n\n\n\nSoftSizingParams\n\nReturn the SoftSizingParams.\n\nReturn type\n\nSoftSizingParams\n\nExamples\n\n>>> params = size_control.get_soft_sizing_params()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellStatisticsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CellStatisticsResults.error_code: ErrorCode\n\nError code associated with the cell statistics function."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySpikeParams.html#searchbyspikeparams","title":"SearchBySpikeParams","text":"SearchBySpikeParams\n\n\n\nclass ansys.meshing.prime.SearchBySpikeParams(model=None, spike_angle=None, json_data=None, **kwargs)\n\nParameters to control spike detection.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchBySpikeParams object with default parameters.\n\nspike_angle: float, optional\n\nThreshold angle for spike detection.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchBySpikeParams object with provided parameters.\n\nExamples\n\n>>> search_by_spike_params = prime.SearchBySpikeParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.dump_mesh.html#dump_mesh","title":"dump_mesh","text":"dump_mesh\n\n\n\nproperty FuseParams.dump_mesh: bool\n\nOption to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#mesh-diagnostics","title":"Mesh diagnostics","text":"Mesh diagnostics"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#mesh-statistics-and-quality","title":"Mesh diagnostics > Mesh statistics and quality","text":"Mesh statistics and quality\n\nYou can use a set of quality metrics to measure the mesh quality. The SurfaceSearch\nand VolumeSearch classes allow you to verify surface and volume mesh quality, respectively."},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#connectivity-checks","title":"Mesh diagnostics > Connectivity checks","text":"Connectivity checks\n\nSurface diagnostics are important prior to generating a volume mesh. You can get a surface diagnostic summary by using\nthe SurfaceSearch.get_surface_diagnostic_summary()\nmethod. The SurfaceDiagnosticSummaryParams class provides for\ndiagnosing surface connectivity for the given scope and controls:\n\nDuplicate faces\n\nFree face edges\n\nMulti face edges\n\nSelf intersections\n\nThis code determines if a wrap surface is closed:\n\nThis code prints the results of the surface diagnostic summary:"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#face-metrics","title":"Mesh diagnostics > Face metrics","text":"Face metrics\n\nThe FaceQualityMeasure class offers various types\nof measures to verify face quality metrics.\n\nThe SKEWNESS metric ranges between 0 (ideal) and 1 (worst).\n\nThe ASPECTRATIO metric is greater than 1. The smaller\nthe aspect ratio, the higher the quality of an element.\n\nThe ELEMENTQUALITY metric ranges between\n0 (worst) and 1 (ideal).\n\nThis code gets face quality measures:\n\nThis code prints face quality summary results:"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#cell-metrics","title":"Mesh diagnostics > Cell metrics","text":"Cell metrics\n\nThe CellQualityMeasure class offers various types\nof measures to verify cell quality metrics.\n\nThe SKEWNESS metric ranges between\n0 (ideal) and 1 (worst).\n\nThe ASPECTRATIO metric\nis greater than 1. The smaller the aspect ratio, the higher the quality of an element.\n\nThe FLUENTASPECTRATIO metric\nis greater than 1. The smaller the Fluent aspect ratio, the higher the quality of an element.\n\nThe ELEMENTQUALITY metric ranges\nbetween 0 (worst) and 1 (ideal).\n\nThis code gets cell quality measures:\n\nThis code prints cell quality summary results:"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#mesh-counts","title":"Mesh diagnostics > Mesh counts","text":"Mesh counts\n\nThe Part.get_summary() method provides the\nnumber of nodes, faces, or cells after meshing with the given parameters.\n\nThis code gets mesh counts:\n\nThis code prints mesh counts:"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#mesh-improvement","title":"Mesh diagnostics > Mesh improvement","text":"Mesh improvement\n\nWhen the metrics show that the mesh quality is low, the VolumeMeshTool\nclass provides various volume mesh improvement algorithms for improving the mesh."},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#auto-node-move","title":"Mesh diagnostics > Auto node move","text":"Auto node move\n\nYou can improve volume mesh by auto node move using the\nVolumeMeshTool.improve_by_auto_node_move()\nmethod with given parameters. In addition, you can verify the mesh using the\nVolumeMeshTool.check_mesh() method.\n\nThis code improves and checks the volume mesh:\n\nThis code prints the results of checking mesh operation:"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TetMeshSplineParams.mode.html#mode","title":"mode","text":"mode\n\n\n\nproperty TetMeshSplineParams.mode: TrimmedSolidSplineCutMode\n\nCut mode to specify rule for mesh cell selection in the volume mesh.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.BOI.html#boi","title":"BOI","text":"BOI\n\n\n\nSizingType.BOI = 5\n\nDenotes the size control type is body of influence."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.control_data.html#control_data","title":"control_data","text":"control_data\n\n\n\nproperty Model.control_data: ControlData\n\nGet the control data for the model.\n\nReturns\n\nControlData\n\nControl data for the model.\n\nExamples\n\n>>> control_data = model.control_data"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.face_zone_ids.html#face_zone_ids","title":"face_zone_ids","text":"face_zone_ids\n\n\n\nproperty FaceConnectivityResults.face_zone_ids: Iterable[int]\n\nFace zone id corresponding to each topoface or face zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDCELLQUALITYLIMIT.html#invalidcellqualitylimit","title":"INVALIDCELLQUALITYLIMIT","text":"INVALIDCELLQUALITYLIMIT\n\n\n\nErrorCode.INVALIDCELLQUALITYLIMIT = 2852\n\nInvalid cell quality limit."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.SEATRETRACTOR.html#seatretractor","title":"SEATRETRACTOR","text":"SEATRETRACTOR\n\n\n\nCdbAnalysisType.SEATRETRACTOR = 3\n\nOption to select Seat Retractor as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ResolveIntersectionResult.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ResolveIntersectionResult.error_code: ErrorCode\n\nErrror code associated with a resolve intersections operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.n_control_points_v.html#n_control_points_v","title":"n_control_points_v","text":"n_control_points_v\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_v: int\n\nNumber of control points in v direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureRecoveryParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic FeatureRecoveryParams.print_default()\n\nPrint the default values of FeatureRecoveryParams object.\n\nExamples\n\n>>> FeatureRecoveryParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PeriodicControlParams.print_default()\n\nPrint the default values of PeriodicControlParams object.\n\nExamples\n\n>>> PeriodicControlParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nBOIType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.REMESHFACEZONELETSNOTSUPPORTEDFORTOPOLOGYPART.html#remeshfacezoneletsnotsupportedfortopologypart","title":"REMESHFACEZONELETSNOTSUPPORTEDFORTOPOLOGYPART","text":"REMESHFACEZONELETSNOTSUPPORTEDFORTOPOLOGYPART\n\n\n\nErrorCode.REMESHFACEZONELETSNOTSUPPORTEDFORTOPOLOGYPART = 31\n\nRemesh face zonelets is not supported for topology part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentMeshingMeshResults.new_parts_created.html#new_parts_created","title":"new_parts_created","text":"new_parts_created\n\n\n\nproperty ImportFluentMeshingMeshResults.new_parts_created: Iterable[int]\n\nIds of new parts created for each file unreferenced fluent meshing mesh zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERNONMANIFOLDEDGE.html#surfernonmanifoldedge","title":"SURFERNONMANIFOLDEDGE","text":"SURFERNONMANIFOLDEDGE\n\n\n\nErrorCode.SURFERNONMANIFOLDEDGE = 14\n\nNon manifold edge for meshing."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.FLUENT.html#fluent","title":"FLUENT","text":"FLUENT\n\n\n\nSolverType.FLUENT = 1\n\nSolver type is Fluent. Creates a group of face quality measures mostly used in Fluent."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Connect.join_face_zonelets.html#join_face_zonelets","title":"join_face_zonelets","text":"join_face_zonelets\n\n\n\nConnect.join_face_zonelets(part_id, face_zonelet_ids, with_face_zonelet_ids, params)\n\nJoins a set of face zones with another set of face zones.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nface_zonelet_ids\n\nIterable[python:int]\n\nFace zonelets to be joined.\n\nwith_face_zonelet_ids\n\nIterable[python:int]\n\nFace zonelets to be joined with.\n\nparams\n\nJoinParams\n\nParameters for join.\n\nReturns\n\n:\n\n\n\nConnectResults\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.join_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CreateVolumeZonesType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic OptimizeQuadMeshParams.set_default(suppress_topo_edge_and_mesh_cleanup=None, edge_mesh_constant_size=None, surface_mesh_constant_size=None, generate_quads=None, project_on_geometry=None, delete_interior_nodes_params=None)\n\nSet the default values of the OptimizeQuadMeshParams object.\n\nParameters\n\nsuppress_topo_edge_and_mesh_cleanup: bool, optional\n\nOption to suppress topoedges and clean up mesh.\n\nedge_mesh_constant_size: float, optional\n\nConstant size used for edge meshing.\n\nsurface_mesh_constant_size: float, optional\n\nConstant size used for surface meshing.\n\ngenerate_quads: bool, optional\n\nOption to generate quadrilateral surface mesh.\n\nproject_on_geometry: bool, optional\n\nOption to project on geometry when meshing.\n\ndelete_interior_nodes_params: DeleteInteriorNodesParams, optional\n\nParameters to control delete interior nodes operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CreateContactPatchResults.set_default(error_code=None, part_id=None)\n\nSet the default values of the CreateContactPatchResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the contact patch creation operation.\n\npart_id: int, optional\n\nContact patch part id."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_part_zonelets.html#get_part_zonelets","title":"get_part_zonelets","text":"get_part_zonelets\n\n\n\nControlData.get_part_zonelets(scope)\n\nCreates an array of part zonelet structure using the input ScopeDefinition.\n\nParameters\n\nscope\n\nScopeDefinition\n\nInput ScopeDefinition.\n\nReturns\n\n:\n\n\n\nList[PartZonelets]\n\nReturns a list of PartZonelets.\n\nReturn type\n\nList[PartZonelets]\n\nExamples\n\n>>> results = control_data.get_part_zonelets(scope)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty AddThicknessResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCreateVolumeZonesType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaResults.html#exportlsdynaresults","title":"ExportLSDynaResults","text":"ExportLSDynaResults\n\n\n\nclass ansys.meshing.prime.ExportLSDynaResults(model=None, summary_log=None, zone_mesh_results=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the LS-DYNA export.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportLSDynaResults object with default parameters.\n\nsummary_log: str, optional\n\nSummary log for the import operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nzone_mesh_results: List[ZoneMeshResult], optional\n\nZone-wise mesh information for elements in the exported model.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportLSDynaResults object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_results = prime.ExportLSDynaResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nMatchPairTargetType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.html#sizingtype","title":"SizingType","text":"SizingType\n\n\n\nclass ansys.meshing.prime.SizingType(*values)\n\nSizing type decides the type of size control.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.html#examples-using-sizingtype","title":"SizingType > Examples using SizingType","text":"Examples using SizingType\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.FEATUREORZONEBOUNDARY.html#featureorzoneboundary","title":"FEATUREORZONEBOUNDARY","text":"FEATUREORZONEBOUNDARY\n\n\n\nSurfaceFeatureType.FEATUREORZONEBOUNDARY = 3\n\nFace edges at zone boundary or with normal angle more than threshold are considered as feature."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_wheel_ground_fmd.html#download_wheel_ground_fmd","title":"download_wheel_ground_fmd","text":"download_wheel_ground_fmd\n\n\n\nansys.meshing.prime.examples.download_wheel_ground_fmd(destination=None, force=False)\n\nDownload the FMD file for the wheel ground contact patch example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_wheel_ground_fmd.html#examples-using-download_wheel_ground_fmd","title":"download_wheel_ground_fmd > Examples using download_wheel_ground_fmd","text":"Examples using download_wheel_ground_fmd\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.real.html#real","title":"real","text":"real\n\n\n\nEdgeConnectType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.GlobalSizingParams.min.html#min","title":"min","text":"min\n\n\n\nproperty GlobalSizingParams.min: float\n\nMinimum value of global sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod MergeNodeType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadReaderRoute.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCadReaderRoute.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeZoneletParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ScopeZoneletParams.print_default()\n\nPrint the default values of ScopeZoneletParams object.\n\nExamples\n\n>>> ScopeZoneletParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ResolveIntersectionsParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ResolveIntersectionsParams.set_default(number_of_threads=None)\n\nSet the default values of the ResolveIntersectionsParams object.\n\nParameters\n\nnumber_of_threads: int, optional\n\nNumber of threads for resolve intersections multithreaded operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty DeleteTopoEntitiesResults.error_code: ErrorCode\n\nError code associated with delete topoentities."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.THINSWEEP.html#thinsweep","title":"THINSWEEP","text":"THINSWEEP\n\n\n\nSweepType.THINSWEEP = 2\n\nCreates swept blocks on thin wall geometries.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.non_stackable_edges.html#non_stackable_edges","title":"non_stackable_edges","text":"non_stackable_edges\n\n\n\nproperty MeshStackerResults.non_stackable_edges: Iterable[int]\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nType\n\nList of non-stackable edges. Note"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsResult.part_id.html#part_id","title":"part_id","text":"part_id\n\n\n\nproperty WrapperCloseGapsResult.part_id: int\n\nId of part created with gap cover patches."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RemoveZoneResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty RemoveZoneResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchBySelfIntersectionParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchBySelfIntersectionParams.print_default()\n\nPrint the default values of SearchBySelfIntersectionParams object.\n\nExamples\n\n>>> SearchBySelfIntersectionParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.AITOVERLAPALONGMULTIFOUND.html#aitoverlapalongmultifound","title":"AITOVERLAPALONGMULTIFOUND","text":"AITOVERLAPALONGMULTIFOUND\n\n\n\nErrorCode.AITOVERLAPALONGMULTIFOUND = 101\n\nTopology identification failed because of overlapping faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbResults.html#exportmapdlcdbresults","title":"ExportMapdlCdbResults","text":"ExportMapdlCdbResults\n\n\n\nclass ansys.meshing.prime.ExportMapdlCdbResults(model=None, summary_log=None, zone_mesh_results=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults associated with the MAPDL CDB export.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportMapdlCdbResults object with default parameters.\n\nsummary_log: str, optional\n\nSummary log for the export operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nzone_mesh_results: List[ZoneMeshResult], optional\n\nZone-wise mesh information for elements in the exported model.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportMapdlCdbResults object with provided parameters.\n\nExamples\n\n>>> export_mapdl_cdb_results = prime.ExportMapdlCdbResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothType.real.html#real","title":"real","text":"real\n\n\n\nSmoothType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsResult.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty WrapperPatchFlowRegionsResult.warning_codes: List[WarningCode]\n\nWarning codes associated with the patch holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INCLUDEKFILENOTFOUND.html#includekfilenotfound","title":"INCLUDEKFILENOTFOUND","text":"INCLUDEKFILENOTFOUND\n\n\n\nErrorCode.INCLUDEKFILENOTFOUND = 520\n\nInclude keyword file not found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.READSHELLBLCONTROLFAILED.html#readshellblcontrolfailed","title":"READSHELLBLCONTROLFAILED","text":"READSHELLBLCONTROLFAILED\n\n\n\nErrorCode.READSHELLBLCONTROLFAILED = 567\n\nRead thin ShellBL control failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CreateMaterialPointResults.error_code: ErrorCode\n\nError code associated with create material point operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.NUMBEROFFIELDS.html#numberoffields","title":"NUMBEROFFIELDS","text":"NUMBEROFFIELDS\n\n\n\nTopoSearchField.NUMBEROFFIELDS = 9\n\nDiagnoses all topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapResult.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty WrapResult.error_code: ErrorCode\n\nError code associated with a wrap operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.deviation_array.html#deviation_array","title":"deviation_array","text":"deviation_array\n\n\n\nproperty IGAUnstructuredSplineSurf.deviation_array: Iterable[float]\n\nDeviation value from the spline point to the model geometry."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.real.html#real","title":"real","text":"real\n\n\n\nCdbAnalysisType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.NONE.html#none","title":"NONE","text":"NONE\n\n\n\nCreateVolumeZonesType.NONE = 0\n\nOption to not create volume zones."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nErrorCode.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.SurfaceScope.html#surfacescope","title":"SurfaceScope","text":"SurfaceScope\n\n\n\nclass ansys.meshing.prime.lucid.SurfaceScope(part_expression='*', entity_expression='*', scope_evaluation_type=ScopeEvaluationType.LABELS)\n\nSurfaceScope is one of the classes in Lucid API.\n\nThis class is meant for beginners to meshing. This class is used to define\na scope for operation on surfaces.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.SurfaceScope.html#examples-using-surfacescope","title":"SurfaceScope > Examples using SurfaceScope","text":"Examples using SurfaceScope\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExtractVolumesParams.print_default()\n\nPrint the default values of ExtractVolumesParams object.\n\nExamples\n\n>>> ExtractVolumesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusResults.summary_log.html#summary_log","title":"summary_log","text":"summary_log\n\n\n\nproperty ImportAbaqusResults.summary_log: str\n\nSummary log for the import operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty MergeVolumesResults.error_code: ErrorCode\n\nError code associated with the volume merge operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeZoneletParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ScopeZoneletParams.set_default()\n\nSet the default values of the ScopeZoneletParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.write_separate_blocks.html#write_separate_blocks","title":"write_separate_blocks","text":"write_separate_blocks\n\n\n\nproperty ExportMapdlCdbParams.write_separate_blocks: bool\n\nControls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDEVOLUMESCOPEENTITY.html#overridevolumescopeentity","title":"OVERRIDEVOLUMESCOPEENTITY","text":"OVERRIDEVOLUMESCOPEENTITY\n\n\n\nWarningCode.OVERRIDEVOLUMESCOPEENTITY = 402\n\nOverride volume scope entity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PERIODICEDGESNOTSUPPORTEDFORSHELLBL.html#periodicedgesnotsupportedforshellbl","title":"PERIODICEDGESNOTSUPPORTEDFORSHELLBL","text":"PERIODICEDGESNOTSUPPORTEDFORSHELLBL\n\n\n\nErrorCode.PERIODICEDGESNOTSUPPORTEDFORSHELLBL = 69\n\nPeriodic surfaces selected for ShellBL generation are not supported.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchParams.tolerance.html#tolerance","title":"tolerance","text":"tolerance\n\n\n\nproperty StitchParams.tolerance: float\n\nDistance tolerance for stitching boundaries."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.id.html#id","title":"id","text":"id\n\n\n\nproperty MultiZoneControl.id\n\nGet the id of MultiZoneControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.boi_type.html#boi_type","title":"boi_type","text":"boi_type\n\n\n\nproperty CreateBOIParams.boi_type: BOIType\n\nType of BOI offsetting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.add_labels_on_zonelets.html#add_labels_on_zonelets","title":"add_labels_on_zonelets","text":"add_labels_on_zonelets\n\n\n\nPart.add_labels_on_zonelets(labels, zonelets)\n\nAdd the given labels on the provided zonelets.\n\nParameters\n\nlabels\n\nList[python:str]\n\nLabels to be added on zonelets.\n\nzonelets\n\nIterable[python:int]\n\nIds of zonelets.\n\nReturns\n\n:\n\n\n\nAddLabelResults\n\nReturns the AddLabelResults.\n\nReturn type\n\nAddLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.add_labels_on_zonelets(labels, zonelets)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.add_labels_on_zonelets.html#examples-using-partadd_labels_on_zonelets","title":"add_labels_on_zonelets > Examples using Part.add_labels_on_zonelets","text":"Examples using Part.add_labels_on_zonelets\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SIGSEGV.html#sigsegv","title":"SIGSEGV","text":"SIGSEGV\n\n\n\nErrorCode.SIGSEGV = 2\n\nSegmentation violation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.MAPDL.html#mapdl","title":"MAPDL","text":"MAPDL\n\n\n\nSolverType.MAPDL = 2\n\nSolver type is MAPDL. Creates a group of face quality measures mostly used in MAPDL."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_volumetric_size_fields.html#get_volumetric_size_fields","title":"get_volumetric_size_fields","text":"get_volumetric_size_fields\n\n\n\nModel.get_volumetric_size_fields()\n\nGet the sizefield ids.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the list of sizefield ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> model = client.model\n>>> size_field_ids = model.get_volumetric_size_fields()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VolumetricSizeFieldComputeResults.print_default()\n\nPrint the default values of VolumetricSizeFieldComputeResults object.\n\nExamples\n\n>>> VolumetricSizeFieldComputeResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERRESOLVEINTERSECTIONFAILED.html#wrapperresolveintersectionfailed","title":"WRAPPERRESOLVEINTERSECTIONFAILED","text":"WRAPPERRESOLVEINTERSECTIONFAILED\n\n\n\nErrorCode.WRAPPERRESOLVEINTERSECTIONFAILED = 3401\n\nResolving intersections failed for wrapper."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureExtraction.extract_features_on_face_zonelets.html#extract_features_on_face_zonelets","title":"extract_features_on_face_zonelets","text":"extract_features_on_face_zonelets\n\n\n\nFeatureExtraction.extract_features_on_face_zonelets(part_id, face_zonelets, params)\n\nExtract edges by angle and face zonelet boundary using given extract feature parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of input part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of input face zonelets.\n\nparams\n\nExtractFeatureParams\n\nParameters used to extract edges.\n\nReturns\n\n:\n\n\n\nExtractFeatureResults\n\nReturns a ExtractFeatureResults.\n\nReturn type\n\nExtractFeatureResults\n\nExamples\n\n>>> results = feature_extraction.extract_features_on_face_zonelets(part_id, face_zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProximitySizingParams.html#proximitysizingparams","title":"ProximitySizingParams","text":"ProximitySizingParams\n\n\n\nclass ansys.meshing.prime.ProximitySizingParams(model=None, min=None, max=None, growth_rate=None, elements_per_gap=None, ignore_self_proximity=None, ignore_orientation=None, json_data=None, **kwargs)\n\nSize field using proximity size control computes edge and face sizes in gaps using the specified minimum number of element layers.\n\nParameters\n\nmodel: Model\n\nModel to create a ProximitySizingParams object with default parameters.\n\nmin: float, optional\n\nMinimum size used for computing edge and face size using proximity size control.\n\nmax: float, optional\n\nMaximum size used for computing edge and face size using proximity size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nelements_per_gap: float, optional\n\nThe number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\nignore_self_proximity: bool, optional\n\nIgnore proximity within zonelets.\n\nignore_orientation: bool, optional\n\nThe ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false.\n\njson_data: dict, optional\n\nJSON dictionary to create a ProximitySizingParams object with provided parameters.\n\nExamples\n\n>>> proximity_sizing_params = prime.ProximitySizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.mortar_contact_for_ties.html#mortar_contact_for_ties","title":"mortar_contact_for_ties","text":"mortar_contact_for_ties\n\n\n\nproperty ExportMapdlCdbParams.mortar_contact_for_ties: bool\n\nOption to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectCircularHolesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DetectCircularHolesParams.print_default()\n\nPrint the default values of DetectCircularHolesParams object.\n\nExamples\n\n>>> DetectCircularHolesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ExtractFeatureResults.error_code: ErrorCode\n\nError code returned by edge extraction function."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ProjectOnGeometryParams.project_only_mid_nodes.html#project_only_mid_nodes","title":"project_only_mid_nodes","text":"project_only_mid_nodes\n\n\n\nproperty ProjectOnGeometryParams.project_only_mid_nodes: bool\n\nOption to project only the mid nodes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsResults.html#refineatcontactsresults","title":"RefineAtContactsResults","text":"RefineAtContactsResults\n\n\n\nclass ansys.meshing.prime.RefineAtContactsResults(model=None, n_refined=None, size_field_id=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated with refine face elements in contact.\n\nParameters\n\nmodel: Model\n\nModel to create a RefineAtContactsResults object with default parameters.\n\nn_refined: int, optional\n\nNumber of face elements identified for refinement.\n\nsize_field_id: int, optional\n\nId of size field created to refine at contacts.\n\nerror_code: ErrorCode, optional\n\nErrorCode associated with the refine contacts operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a RefineAtContactsResults object with provided parameters.\n\nExamples\n\n>>> refine_at_contacts_results = prime.RefineAtContactsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nMatchPairTargetType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.FACE.html#face","title":"FACE","text":"FACE\n\n\n\nZoneType.FACE = 2\n\nDenotes the zone is face zone."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nSizingType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.FREEZEMESHERROR.html#freezemesherror","title":"FREEZEMESHERROR","text":"FREEZEMESHERROR\n\n\n\nErrorCode.FREEZEMESHERROR = 30\n\nCannot remesh freezed mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.real.html#real","title":"real","text":"real\n\n\n\nSplineFeatureCaptureType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nCadRefacetingResolution.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckMeshResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty CheckMeshResults.error_code: ErrorCode\n\nError code associated with the check grid operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeResults.html#volumetricsizefieldcomputeresults","title":"VolumetricSizeFieldComputeResults","text":"VolumetricSizeFieldComputeResults\n\n\n\nclass ansys.meshing.prime.VolumetricSizeFieldComputeResults(model=None, error_code=None, size_field_id=None, json_data=None, **kwargs)\n\nResults associated with the compute volumetric size field operation.\n\nParameters\n\nmodel: Model\n\nModel to create a VolumetricSizeFieldComputeResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the compute volumetric size field operation.\n\nsize_field_id: int, optional\n\nId of the computed size field.\n\njson_data: dict, optional\n\nJSON dictionary to create a VolumetricSizeFieldComputeResults object with provided parameters.\n\nExamples\n\n>>> volumetric_size_field_compute_results = prime.VolumetricSizeFieldComputeResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.imag.html#imag","title":"imag","text":"imag\n\n\n\nPrismControlOffsetType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectNonCircularHolesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DetectNonCircularHolesParams.print_default()\n\nPrint the default values of DetectNonCircularHolesParams object.\n\nExamples\n\n>>> DetectNonCircularHolesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesResults.volumes.html#volumes","title":"volumes","text":"volumes\n\n\n\nproperty ExtractVolumesResults.volumes: Iterable[int]\n\nIds of computed volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CadFaceter.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.CM.html#cm","title":"CM","text":"CM\n\n\n\nLengthUnit.CM = 1\n\nDenotes length unit is centimeters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Surfer.remesh_face_zonelets_locally.html#remesh_face_zonelets_locally","title":"remesh_face_zonelets_locally","text":"remesh_face_zonelets_locally\n\n\n\nSurfer.remesh_face_zonelets_locally(part_id, face_zonelets, register_id, local_surfer_params)\n\nRemesh face zonelets locally at the registered faces with given parameters.\n\nParameters\n\npart_id\n\npython:int\n\nID of part.\n\nface_zonelets\n\nIterable[python:int]\n\nIDs of the face zonelets.\n\nregister_id\n\npython:int\n\nRegister ID of the target faces.\n\nlocal_surfer_params\n\nLocalSurferParams\n\nLocal surfer parameters.\n\nReturns\n\n:\n\n\n\nLocalSurferResults\n\nResults from remeshing the face zonelets.\n\nReturn type\n\nLocalSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> local_surfer_params = prime.LocalSurferParams(model)\n>>> results = surfer.remesh_face_zonelets_locally(part_id,\n                face_zonelets, register_id, local_surfer_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nTrimmedSolidSplineCutMode.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMesh.mesh.html#mesh","title":"mesh","text":"mesh\n\n\n\nAutoMesh.mesh(part_id, automesh_params)\n\nPerforms volume meshing on the part with the given meshing parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nautomesh_params\n\nAutoMeshParams\n\nParameters for auto mesh.\n\nReturns\n\n:\n\n\n\nAutoMeshResults\n\nReturns the AutomeshResults.\n\nReturn type\n\nAutoMeshResults\n\nExamples\n\n>>> auto_mesh = AutoMesh(model = model)\n>>> automesh_params = AutoMeshParams(model = model)\n>>> results = auto_mesh.mesh(part_id, automesh_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMesh.mesh.html#examples-using-automeshmesh","title":"mesh > Examples using AutoMesh.mesh","text":"Examples using AutoMesh.mesh\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nCadRefacetingResolution.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.set_params.html#set_params","title":"set_params","text":"set_params\n\n\n\nPeriodicControl.set_params(periodic_control_params)\n\nSet the periodic control parameters.\n\nParameters\n\nperiodic_control_params\n\nPeriodicControlParams\n\nParameters to control periodic surface recovery.\n\nReturn type\n\nSetParamsResults\n\nExamples\n\n>>> periodic_control.set_params(\n>>>                  PeriodicControlParams(model=model,\n>>>                     center=[0,0,0], axis=[0,1,0], angle=180))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderSplitResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ScaffolderSplitResults.error_code: ErrorCode\n\nError code associated with split topofaces operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DetectAndTreatHolesParams.print_default()\n\nPrint the default values of DetectAndTreatHolesParams object.\n\nExamples\n\n>>> DetectAndTreatHolesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeNodeType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nMergeNodeType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CADIMPORTFAILED.html#cadimportfailed","title":"CADIMPORTFAILED","text":"CADIMPORTFAILED\n\n\n\nErrorCode.CADIMPORTFAILED = 502\n\nCAD import failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComponentChildrenResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ComponentChildrenResults.set_default(component_ids=None, component_names=None, body_ids=None, body_names=None)\n\nSet the default values of the ComponentChildrenResults object.\n\nParameters\n\ncomponent_ids: Iterable[int], optional\n\nIds of components that are queried.\n\ncomponent_names: List[str], optional\n\nNames of components that are queried.\n\nbody_ids: Iterable[int], optional\n\nIds of bodies that are queried.\n\nbody_names: List[str], optional\n\nNames of bodies that are queried."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.control_points_count_u.html#control_points_count_u","title":"control_points_count_u","text":"control_points_count_u\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_u: int\n\nSpline control points count in U direction. Used in manual control points selection mode."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nMaterialPointType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_volumes.html#get_topo_volumes","title":"get_topo_volumes","text":"get_topo_volumes\n\n\n\nPart.get_topo_volumes()\n\nGet topovolumes of part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of topovolume ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> results = part.get_topo_volumes()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_topo_volumes.html#examples-using-partget_topo_volumes","title":"get_topo_volumes > Examples using Part.get_topo_volumes","text":"Examples using Part.get_topo_volumes\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.SURFERDEGENERATEFACE.html#surferdegenerateface","title":"SURFERDEGENERATEFACE","text":"SURFERDEGENERATEFACE\n\n\n\nWarningCode.SURFERDEGENERATEFACE = 1801\n\nDegenerate input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.write_component_based_ties.html#write_component_based_ties","title":"write_component_based_ties","text":"write_component_based_ties\n\n\n\nproperty ExportMapdlCdbParams.write_component_based_ties: bool\n\nOption to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartCreationType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nPartCreationType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointResults.id.html#id","title":"id","text":"id\n\n\n\nproperty CreateMaterialPointResults.id: int\n\nId of the material point created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.html#thinvolumecontrol","title":"ThinVolumeControl","text":"ThinVolumeControl\n\n\n\nclass ansys.meshing.prime.ThinVolumeControl(model, id, object_id, name)\n\nThinVolumeControl allows you to generate prisms in the space between surfaces.\n\nThinVolumeControl allows you to control generation of prisms in the thin space between surfaces. Controls include setting the source face scope, target face scope and thin volume mesh parameters.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create ThinVolumeControl object.\n\nid\n\npython:int\n\nId of the ThinVolumeControl.\n\nobject_id\n\npython:int\n\nObject id of the ThinVolumeControl.\n\nname\n\npython:str\n\nName of the ThinVolumeControl.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.html#examples-using-thinvolumecontrol","title":"ThinVolumeControl > Examples using ThinVolumeControl","text":"Examples using ThinVolumeControl\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic PrismParams.print_default()\n\nPrint the default values of PrismParams object.\n\nExamples\n\n>>> PrismParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.search_zonelets_by_thin_strips.html#search_zonelets_by_thin_strips","title":"search_zonelets_by_thin_strips","text":"search_zonelets_by_thin_strips\n\n\n\nSurfaceSearch.search_zonelets_by_thin_strips(part_id, face_zonelets, register_id, params)\n\nSearch face zonelets to identify face element of thin strips(single layer of triangles between features).\n\nParameters\n\npart_id\n\npython:int\n\nId of part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets.\n\nregister_id\n\npython:int\n\nId of register.\n\nparams\n\nSearchByThinStripParams\n\nParameters used to identify face elements of thin strips.\n\nReturns\n\n:\n\n\n\nSearchByThinStripResults\n\nReturns the SearchByThinStripResults.\n\nReturn type\n\nSearchByThinStripResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_thin_strips(part_id, face_zonelets, register_id, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.FAILEDTOUPDATEVOLUMES.html#failedtoupdatevolumes","title":"FAILEDTOUPDATEVOLUMES","text":"FAILEDTOUPDATEVOLUMES\n\n\n\nWarningCode.FAILEDTOUPDATEVOLUMES = 5606\n\nVolumes are not updated after performing the operation. Compute the volumes again."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CopyZoneletsResults.copied_face_zonelets.html#copied_face_zonelets","title":"copied_face_zonelets","text":"copied_face_zonelets\n\n\n\nproperty CopyZoneletsResults.copied_face_zonelets: Iterable[int]\n\nIds of the copied bounding faces of cell zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_QUADTOSPLINEBASISFAILED.html#iga_quadtosplinebasisfailed","title":"IGA_QUADTOSPLINEBASISFAILED","text":"IGA_QUADTOSPLINEBASISFAILED\n\n\n\nErrorCode.IGA_QUADTOSPLINEBASISFAILED = 2421\n\nQuad to spline operation failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod WarningCode.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCsVolumetricModality.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod BCsVolumetricModality.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPair.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic BCPair.set_default(source_zonelet=None, target_zonelet=None, type=None)\n\nSet the default values of the BCPair object.\n\nParameters\n\nsource_zonelet: int, optional\n\nId of source zonelet.\n\ntarget_zonelet: int, optional\n\nId of target zonelet.\n\ntype: BCPairType, optional\n\nOption to specify boundary condition pair type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LeakPreventionParams.scope.html#scope","title":"scope","text":"scope\n\n\n\nproperty LeakPreventionParams.scope: ScopeDefinition\n\nScope used for leak prevention control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdResults.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty SearchInfoByRegisterIdResults.n_found: int\n\nNumber of registered face elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ThinVolumeMeshParams.set_default(n_layers=None, imprint_sides=None, n_ignore_rings=None)\n\nSet the default values of the ThinVolumeMeshParams object.\n\nParameters\n\nn_layers: int, optional\n\nNumber of thin volume layers to be generated.\n\nimprint_sides: bool, optional\n\nChecks whether to imprint quad faces on side zonelets.\n\nn_ignore_rings: int, optional\n\nNumber of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.delete_topo_entities.html#delete_topo_entities","title":"delete_topo_entities","text":"delete_topo_entities\n\n\n\nPart.delete_topo_entities(params)\n\nDelete topoentities of part controled by parameters.\n\nParameters\n\nparams\n\nDeleteTopoEntitiesParams\n\nParameters for control delete topoentities operation.\n\nReturns\n\n:\n\n\n\nDeleteTopoEntitiesResults\n\nReturn results of delete topoentities.\n\nReturn type\n\nDeleteTopoEntitiesResults\n\nExamples\n\n>>> results = part.delete_topo_entities(params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.delete_topo_entities.html#examples-using-partdelete_topo_entities","title":"delete_topo_entities > Examples using Part.delete_topo_entities","text":"Examples using Part.delete_topo_entities\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNSUPPORTEDFILEEXTENSIONFORKEYWORDFILE.html#unsupportedfileextensionforkeywordfile","title":"UNSUPPORTEDFILEEXTENSIONFORKEYWORDFILE","text":"UNSUPPORTEDFILEEXTENSIONFORKEYWORDFILE\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORKEYWORDFILE = 9004\n\nProvided file extension is not supported. Supported extensions are .k and .key."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_bracket_dsco.html#download_bracket_dsco","title":"download_bracket_dsco","text":"download_bracket_dsco\n\n\n\nansys.meshing.prime.examples.download_bracket_dsco(destination=None, force=False)\n\nDownload the DSCO file for the bracket scaffold example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatCircularFacesParams.merge_face_normals_angle.html#merge_face_normals_angle","title":"merge_face_normals_angle","text":"merge_face_normals_angle\n\n\n\nproperty DetectAndTreatCircularFacesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nErrorCode.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportCadParams.print_default()\n\nPrint the default values of ImportCadParams object.\n\nExamples\n\n>>> ImportCadParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartialDefeatureParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PartialDefeatureParams.set_default(edge_sharp_corner_angle=None, merge_face_normals_angle=None, merge_edge_allow_self_close=None)\n\nSet the default values of the PartialDefeatureParams object.\n\nParameters\n\nedge_sharp_corner_angle: float, optional\n\nMerge edges when the angle between the edges are below the provided value.\n\nmerge_face_normals_angle: float, optional\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateContactPatchParams.suggested_label_prefix.html#suggested_label_prefix","title":"suggested_label_prefix","text":"suggested_label_prefix\n\n\n\nproperty CreateContactPatchParams.suggested_label_prefix: str\n\nSuggested label name for created contact patch surfaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.html#edgeconnectivityresults","title":"EdgeConnectivityResults","text":"EdgeConnectivityResults\n\n\n\nclass ansys.meshing.prime.EdgeConnectivityResults(model=None, error_code=None, edge_zonelet_ids=None, topo_edge_ids=None, mesh_edge_ids=None, topo_edge_types=None, num_nodes_per_edge_zonelet=None, node_coords=None, num_edge_list_per_edge_zonelet=None, edge_list=None, num_edges_per_edge_zonelet=None, json_data=None, **kwargs)\n\nResult of the edge connectivity information.\n\nParameters\n\nmodel: Model\n\nModel to create a EdgeConnectivityResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the get edge connectivity operation.\n\nedge_zonelet_ids: Iterable[int], optional\n\nEdge zonelet ids for which connectivity data is available.\n\ntopo_edge_ids: Iterable[int], optional\n\nTopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\nmesh_edge_ids: Iterable[int], optional\n\nMesh edge ids corresponding to each topoedge.\n\ntopo_edge_types: Iterable[int], optional\n\nTopoEdge type corresponding to each topoedge.\n\nnum_nodes_per_edge_zonelet: Iterable[int], optional\n\nNumber of nodes per edge zonelet.\n\nnode_coords: Iterable[float], optional\n\nNode coordinates describing edges of edge zonelet.\n\nnum_edge_list_per_edge_zonelet: Iterable[int], optional\n\nNumber of edge list per edge zonelet.\n\nedge_list: Iterable[int], optional\n\nEdge list describing connectivity of node coordinates.\n\nnum_edges_per_edge_zonelet: Iterable[int], optional\n\nNumber of edges per edge zonelet.\n\njson_data: dict, optional\n\nJSON dictionary to create a EdgeConnectivityResults object with provided parameters.\n\nExamples\n\n>>> edge_connectivity_results = prime.EdgeConnectivityResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.SOI.html#soi","title":"SOI","text":"SOI\n\n\n\nSizingType.SOI = 6\n\nDenotes the size control type is sphere of influence.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.consider_general_connectors_as_spot_weld.html#consider_general_connectors_as_spot_weld","title":"consider_general_connectors_as_spot_weld","text":"consider_general_connectors_as_spot_weld\n\n\n\nproperty ExportMapdlCdbParams.consider_general_connectors_as_spot_weld: bool\n\nOption to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.n_self_intersections.html#n_self_intersections","title":"n_self_intersections","text":"n_self_intersections\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_self_intersections: int\n\nNumber of self intersecting faces identified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesherResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic AutoQuadMesherResults.set_default(error_code=None, warning_codes=None, failed_topo_face_ids=None)\n\nSet the default values of the AutoQuadMesherResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code if AutoQuadMesher operation is unsuccessful.\n\nwarning_codes: List[WarningCode], optional\n\nWarning code if AutoQuadMesher operation is partially successful.\n\nfailed_topo_face_ids: Iterable[int], optional\n\nIds of the failed topofaces during topology check."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ComputeVolumesParams.print_default()\n\nPrint the default values of ComputeVolumesParams object.\n\nExamples\n\n>>> ComputeVolumesParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactElementTypeParams.tie_node_to_surf.html#tie_node_to_surf","title":"tie_node_to_surf","text":"tie_node_to_surf\n\n\n\nproperty ContactElementTypeParams.tie_node_to_surf: int\n\nElement type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteFringesAndOverlapsParams.delete_fringes.html#delete_fringes","title":"delete_fringes","text":"delete_fringes\n\n\n\nproperty DeleteFringesAndOverlapsParams.delete_fringes: bool\n\nOption to delete fringes. The default is true."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nFuseOption.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphBCParams.morph_region_method.html#morph_region_method","title":"morph_region_method","text":"morph_region_method\n\n\n\nproperty MorphBCParams.morph_region_method: BCsVolumetricModality\n\nIndicate options to identify morphable regions in the input volumetric mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_INVALIDPARAMS.html#stacker_invalidparams","title":"STACKER_INVALIDPARAMS","text":"STACKER_INVALIDPARAMS\n\n\n\nErrorCode.STACKER_INVALIDPARAMS = 10102\n\nInvalid parameters provided to stacker."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetContactPreventionsResults.html#setcontactpreventionsresults","title":"SetContactPreventionsResults","text":"SetContactPreventionsResults\n\n\n\nclass ansys.meshing.prime.SetContactPreventionsResults(model=None, error_code=None, ids=None, json_data=None, **kwargs)\n\nResults associated with set contact preventions.\n\nParameters\n\nmodel: Model\n\nModel to create a SetContactPreventionsResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the set contact preventions.\n\nids: Iterable[int], optional\n\nIds of added contact prevention controls.\n\njson_data: dict, optional\n\nJSON dictionary to create a SetContactPreventionsResults object with provided parameters.\n\nExamples\n\n>>> set_contact_preventions_results = prime.SetContactPreventionsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphBCParams.morph_region_box_extension.html#morph_region_box_extension","title":"morph_region_box_extension","text":"morph_region_box_extension\n\n\n\nproperty MorphBCParams.morph_region_box_extension: float\n\nPercentage extension for the volumetric box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.volume_controls.html#volume_controls","title":"volume_controls","text":"volume_controls\n\n\n\nproperty ControlData.volume_controls: List[VolumeControl]\n\nGet the volume controls.\n\nReturns\n\nList[VolumeControl]\n\nList of volume controls.\n\nExamples\n\n>>> volume_controls = model.control_data.volume_controls"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_prism_control_by_name.html#get_prism_control_by_name","title":"get_prism_control_by_name","text":"get_prism_control_by_name\n\n\n\nControlData.get_prism_control_by_name(name)\n\nGet a prism control by name.\n\nParameters\n\nname\n\npython:str\n\nName of the prism control.\n\nReturns\n\n:\n\n\n\nPrismControl\n\nPrism control.\n\nReturn type\n\nPrismControl\n\nExamples\n\n>>> prism_control = model.control_data.get_prism_control_by_name(\"PrismControl-1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceQualityMeasure.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nFaceQualityMeasure.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic HexCoreParams.set_default(transition_size_field_type=None, buffer_layers=None, rel_peel_layer_offset=None, transition_layer_type=None, cell_element_type=None, surface_mesh_size_scaling=None, enable_region_based_hexcore=None)\n\nSet the default values of the HexCoreParams object.\n\nParameters\n\ntransition_size_field_type: SizeFieldType, optional\n\nSize field type to be used for transition volume (volume between hexcore and boundary).\n\nbuffer_layers: int, optional\n\nMinimum number of cell layers of the same size before the cell size halves or doubles.\n\nrel_peel_layer_offset: float, optional\n\nGap between hexahedral core and geometry surface relative to the surface mesh size.\n\ntransition_layer_type: HexCoreTransitionLayerType, optional\n\nHandle size transition of hex cells.\n\ncell_element_type: HexCoreCellElementType, optional\n\nCell element type of hex-shaped cells.\n\nsurface_mesh_size_scaling: SurfaceMeshSizeScaling, optional\n\nSetting for scaling surface mesh size for hexcore refinement.\n\nenable_region_based_hexcore: bool, optional\n\nChecks whether to enable region based hexcore or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.ALLHEX.html#allhex","title":"ALLHEX","text":"ALLHEX\n\n\n\nHexCoreCellElementType.ALLHEX = 1\n\nGenerates hex type cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeVolumesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MergeVolumesResults.set_default(merged_volumes=None, error_code=None)\n\nSet the default values of the MergeVolumesResults object.\n\nParameters\n\nmerged_volumes: Iterable[int], optional\n\nIds of volumes to which input volumes are merged.\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume merge operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CadRefacetingParams.set_default(cad_faceter=None, faceting_resolution=None, custom_surface_deviation_tolerance=None, custom_normal_angle_tolerance=None, max_edge_size_limit=None, max_edge_size=None)\n\nSet the default values of the CadRefacetingParams object.\n\nParameters\n\ncad_faceter: CadFaceter, optional\n\nSpecify the available choices for faceter. The available option is Parasolid. (Note: ACIS faceter is being deprecated from 25R1).\n\nfaceting_resolution: CadRefacetingResolution, optional\n\nSet the faceting resolution.\n\ncustom_surface_deviation_tolerance: float, optional\n\nSet custom tolerance for surface deviation in specified length unit.\n\ncustom_normal_angle_tolerance: float, optional\n\nSet custom tolerance for normal angle in degree.\n\nmax_edge_size_limit: CadRefacetingMaxEdgeSizeLimit, optional\n\nSpecify maximum edge size limit for faceting.\n\nmax_edge_size: float, optional\n\nSet maximum edge size of the facets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSizeFieldType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControl.get_scope.html#get_scope","title":"get_scope","text":"get_scope\n\n\n\nVolumeControl.get_scope()\n\nGets the scope for the volume control.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns scope of the volume control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope_definition = volume_control.get_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nEdgeConnectType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsResults.html#subtractzoneletsresults","title":"SubtractZoneletsResults","text":"SubtractZoneletsResults\n\n\n\nclass ansys.meshing.prime.SubtractZoneletsResults(model=None, processing_time=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated with subtracting zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a SubtractZoneletsResults object with default parameters.\n\nprocessing_time: float, optional\n\nProcessing time for subtract operation.\n\nerror_code: ErrorCode, optional\n\nError Code associated with subtract operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a SubtractZoneletsResults object with provided parameters.\n\nExamples\n\n>>> subtract_zonelets_results = prime.SubtractZoneletsResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.copy_cell_zonelets.html#copy_cell_zonelets","title":"copy_cell_zonelets","text":"copy_cell_zonelets\n\n\n\nVolumeMeshTool.copy_cell_zonelets(cell_zonelets, target_part_id, params)\n\nCopy cell zonelets and face zonelets connected to the cell zonelets.\n\nParameters\n\ncell_zonelets\n\nIterable[python:int]\n\nIds of cell zonelets to be copied.\n\ntarget_part_id\n\npython:int\n\nPart id used to move the copied zonelets.\n\nparams\n\nCopyZoneletsParams\n\nParameters to copy cell zonelets.\n\nReturns\n\n:\n\n\n\nCopyZoneletsResults\n\nReturns the CopyZoneletsResults.\n\nReturn type\n\nCopyZoneletsResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>>> results = volume_mesh_tool.copy_cell_zonelets(cell_zonelets, target_part_id = new_part.id, prime.CopyZoneletsParams(model = model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripParams.quality_limit.html#quality_limit","title":"quality_limit","text":"quality_limit\n\n\n\nproperty SearchByThinStripParams.quality_limit: float\n\nQuality limit used for search strip of face elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSplineRefinementType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.cad_refaceting_params.html#cad_refaceting_params","title":"cad_refaceting_params","text":"cad_refaceting_params\n\n\n\nproperty ImportCadParams.cad_refaceting_params: CadRefacetingParams\n\nSpecify refaceting parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SearchByFoldsResults.error_code: ErrorCode\n\nError code associated with search folds operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.scope.html#scope","title":"scope","text":"scope\n\n\n\nproperty SurfaceDiagnosticSummaryParams.scope: ScopeDefinition\n\nScope the face zonelets for surface diagnostics."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DetectAndTreatHolesParams.set_default(detect_and_defeature_edges_near_holes=None, detect_circular_holes=None, detect_non_circular_holes=None, offset_holes=None, mesh_offset_faces=None, detect_holes_params=None, detect_circular_holes_params=None, detect_non_circular_holes_params=None, hole_proximity_tolerance=None, merge_face_normals_angle=None, edge_sharp_corner_angle=None, fragmented_edge_tolerance=None, offset_distance=None, edge_mesh_constant_size=None, surface_mesh_constant_size=None)\n\nSet the default values of the DetectAndTreatHolesParams object.\n\nParameters\n\ndetect_and_defeature_edges_near_holes: bool, optional\n\nOption to detect and defeature edges near all holes.\n\ndetect_circular_holes: bool, optional\n\nOption to detect circular holes.\n\ndetect_non_circular_holes: bool, optional\n\nOption to detect non-circular holes.\n\noffset_holes: bool, optional\n\nOption to offset holes.\n\nmesh_offset_faces: bool, optional\n\nOption to mesh the offset holes.\n\ndetect_holes_params: DetectHolesParams, optional\n\nParameters for detect holes operation.\n\ndetect_circular_holes_params: DetectCircularHolesParams, optional\n\nParameters for detect circular holes operation.\n\ndetect_non_circular_holes_params: DetectNonCircularHolesParams, optional\n\nParameters for detect non circular holes operation.\n\nhole_proximity_tolerance: float, optional\n\nEdge proximity tolerance for holes.\n\nmerge_face_normals_angle: float, optional\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nedge_sharp_corner_angle: float, optional\n\nMerge edges when the angle between the edges are below the provided value.\n\nfragmented_edge_tolerance: float, optional\n\nFragmented edge length tolerance for merging edges.\n\noffset_distance: float, optional\n\nOffset distance for creating offset edge.\n\nedge_mesh_constant_size: float, optional\n\nConstant size used for edge meshing.\n\nsurface_mesh_constant_size: float, optional\n\nConstant size used for surface meshing."},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#mesh-a-set-of-solder-balls-beta","title":"Mesh a set of solder balls (beta)","text":"Mesh a set of solder balls (beta)\n\nSummary: This example demonstrates how to mesh a set of solder balls with mainly\nhexahedral elements. The solder is initially modelled as cylindrical to allow meshing\nusing stacker and then local match morph controls are applied to recover the\nspherical shapes.\n\nThis example contains a beta API. The behavior and implementation may change in future."},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#objective","title":"Mesh a set of solder balls (beta) > Objective","text":"Objective\n\nThis example uses locally defined match morphing controls to morph a hexahedral mesh,\ncreated using volume sweep, to many spherical solder balls."},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#procedure","title":"Mesh a set of solder balls (beta) > Procedure","text":"Procedure\n\nImport libraries necessary to run the script.\n\nLaunch an Ansys Prime Server instance.\n\nImport stackable simplified CAD geometry with refaceting.\n\nConnect the geometry using scaffolding.\n\nMesh with hex dominant elements using the volume sweeper.\n\nImport the target CAD geometry for the solders for match morphing.\n\nLocally match morph the simplified mesh to the target spherical solders.\n\nDelete the target and export the morphed mesh.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#import-modules","title":"Mesh a set of solder balls (beta) > Import modules","text":"Import modules\n\nImport libraries necessary to run the script."},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#launch-ansys-prime-server","title":"Mesh a set of solder balls (beta) > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model."},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#import-cad-geometry","title":"Mesh a set of solder balls (beta) > Import CAD geometry","text":"Import CAD geometry\n\nFMD is exported from SpaceClaim for the geometry.\nGeometry consists of multiple non overlapping and disconnected volumes.\nThe model has multiple layers either side of several solder balls with pads\nand contains an infill volume around the solder. During import, the part\ncreation type is set to BODY so that each body in the CAD is imported as a\nseparate part. Refaceting is specified for more control of the scaffolding\noperation. Consistent faceting for the curved surfaces to be joined can be\nobtained by specifying CadRefacetingMaxEdgeSizeLimit as ABSOLUTE. To avoid\nover refinement of the faceting the max_edge_size is allowed to reach a size\nof 1.0. Labels can be assigned to manage the entities of each volume.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#connect-geometry","title":"Mesh a set of solder balls (beta) > Connect geometry","text":"Connect geometry\n\nMerge all parts into a single part so they can be connected.\nImprint adjacent topo faces by connecting topo faces and topo edges.\nMesh all topo faces to allow splitting the imprinted topo faces by mesh regions.\nDelete mesh on topo faces after splitting.\nMerge newly created overlapping topo faces so only a single topo face exists\nbetween connected volumes.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#volume-sweeper","title":"Mesh a set of solder balls (beta) > Volume sweeper","text":"Volume sweeper\n\nSetup a size control to refine the mesh around the solder.\nSetup stacker parameters to define the volume sweep mesh.\nCreate the base face to quad surface mesh and use for sweeping.\nStack the base face to create the volume mesh.\nDelete topology on mesh part to allow use of surface utilities and feature extraction.\nA large lateral defeature tolerance of 0.1 is used to avoid additional topo nodes\nfrom scaffolding impacting the final mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#import-sphere-geometry-for-match-morphing","title":"Mesh a set of solder balls (beta) > Import sphere geometry for match morphing","text":"Import sphere geometry for match morphing\n\nCreate a single part on CAD import by setting the part creation type to MODEL.\nConvert topology to mesh face zonelets to use surface utilities.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#match-morph-the-mesh-to-the-spherical-solder","title":"Mesh a set of solder balls (beta) > Match morph the mesh to the spherical solder","text":"Match morph the mesh to the spherical solder\n\nDelete feature edge zonelets on the mesh source.\nGet lists of the source and target face zonelets for the match morph.\nPair source and target faces based on overlapping bounding box locations.\nFor each source face extract feature edges with nodes attached to faces.\nDefine edge pairs for each match pair control as a morph boundary condition.\nMatch morph solder faces and edges.\nDelete target sphere part and retain the morphed mesh for export.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#export-mesh","title":"Mesh a set of solder balls (beta) > Export mesh","text":"Export mesh\n\nExport a CDB file."},{"objectID":"Home","href":"examples/gallery_examples/gallery_beta/11_solder_ball.html#exit-pyprimemesh","title":"Mesh a set of solder balls (beta) > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (2 minutes 25.534 seconds)\n\n\n\nDownload Jupyter notebook: 11_solder_ball.ipynb\n\nDownload Python source code: 11_solder_ball.py\n\nDownload zipped: 11_solder_ball.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSolid.id.html#id","title":"id","text":"id\n\n\n\nproperty IGAUnstructuredSplineSolid.id: int\n\nId of the unstructured spline solid.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSweeper.create_base_face.html#create_base_face","title":"create_base_face","text":"create_base_face\n\n\n\nVolumeSweeper.create_base_face(part_id, topo_volume_ids, params)\n\nCreate a face at the specified origin.\n\nThis method creates a face at the specified origin and perpendicular to the\nspecified direction. Also, it imprints model edges on the face, makes necessary\nedge repairs, and duplicates relevant size controls on the base face.\n\nParameters\n\npart_id\n\npython:int\n\nID of part.\n\ntopo_volume_ids\n\nIterable[python:int]\n\nIDs of the volumes to mesh.\n\nparams\n\nMeshStackerParams\n\nMesh stacker parameters.\n\nReturns\n\n:\n\n\n\nMeshStackerResults\n\nResults from creating the face.\n\nReturn type\n\nMeshStackerResults\n\nExamples\n\n>>> results = volumesweeper.create_base_face(part_id, topo_volume_ids, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeSweeper.create_base_face.html#examples-using-volumesweepercreate_base_face","title":"create_base_face > Examples using VolumeSweeper.create_base_face","text":"Examples using VolumeSweeper.create_base_face\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneControl.html#multizonecontrol","title":"MultiZoneControl","text":"MultiZoneControl\n\n\n\nclass ansys.meshing.prime.MultiZoneControl(model, id, object_id, name)\n\nMultiZoneControl provides a way to gather all the information required for MultiZone meshing.\n\nThe MultiZone meshing provides hex meshing capabilities.\nDifferent type of mesh can be generated using MultiZoneControl. For example, sweep mesh, map mesh and edge biased mesh.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create MultiZoneControl object.\n\nid\n\npython:int\n\nId of the MultiZoneControl.\n\nobject_id\n\npython:int\n\nObject id of the MultiZoneControl.\n\nname\n\npython:str\n\nName of the MultiZoneControl.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportBoundaryFittedSplineParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExportBoundaryFittedSplineParams.print_default()\n\nPrint the default values of ExportBoundaryFittedSplineParams object.\n\nExamples\n\n>>> ExportBoundaryFittedSplineParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ImportAbaqusResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentCaseParams.html#importfluentcaseparams","title":"ImportFluentCaseParams","text":"ImportFluentCaseParams\n\n\n\nclass ansys.meshing.prime.ImportFluentCaseParams(model=None, append=None, json_data=None, **kwargs)\n\nParameters to import fluent case file.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportFluentCaseParams object with default parameters.\n\nappend: bool, optional\n\nOption to append imported case instead of resetting model to imported case.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportFluentCaseParams object with provided parameters.\n\nExamples\n\n>>> import_fluent_case_params = prime.ImportFluentCaseParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.continuity.html#continuity","title":"continuity","text":"continuity\n\n\n\nproperty HexToSplineParams.continuity: SplineContinuityType\n\nSpline Continuity options.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.separate_features.html#separate_features","title":"separate_features","text":"separate_features\n\n\n\nproperty ExtractFeatureParams.separate_features: bool\n\nOption to separate extracted features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.id.html#id","title":"id","text":"id\n\n\n\nproperty SizeControl.id\n\nGet the id of SizeControl."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_size_control_by_name.html#get_size_control_by_name","title":"get_size_control_by_name","text":"get_size_control_by_name\n\n\n\nControlData.get_size_control_by_name(name)\n\nGet a size control by name.\n\nParameters\n\nname\n\npython:str\n\nName of the size control.\n\nReturns\n\n:\n\n\n\nSizeControl\n\nSize control.\n\nReturn type\n\nSizeControl\n\nExamples\n\n>>> size_control = model.control_data.get_size_control_by_name(\"SizeControl-1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.imag.html#imag","title":"imag","text":"imag\n\n\n\nControlPointSelection.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaIGAResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ExportLSDynaIGAResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nMatchPairTargetType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseOption.html#fuseoption","title":"FuseOption","text":"FuseOption\n\n\n\nclass ansys.meshing.prime.FuseOption(*values)\n\nType to specify treatment of surfaces for fusing.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricScaffolderParams.absolute_dist_tol.html#absolute_dist_tol","title":"absolute_dist_tol","text":"absolute_dist_tol\n\n\n\nproperty VolumetricScaffolderParams.absolute_dist_tol: float\n\nSpecify distance tolerance between overlapping faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.part_id.html#part_id","title":"part_id","text":"part_id\n\n\n\nproperty VolumeQualityResultsPart.part_id: int\n\nId of the part for which quality is computed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMEMESHFAILED.html#thinvolumemeshfailed","title":"THINVOLUMEMESHFAILED","text":"THINVOLUMEMESHFAILED\n\n\n\nErrorCode.THINVOLUMEMESHFAILED = 137\n\nThin volume meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SPLITINTERSECTINGBOUNDARYEDGESFAILED.html#splitintersectingboundaryedgesfailed","title":"SPLITINTERSECTINGBOUNDARYEDGESFAILED","text":"SPLITINTERSECTINGBOUNDARYEDGESFAILED\n\n\n\nErrorCode.SPLITINTERSECTINGBOUNDARYEDGESFAILED = 854\n\nSplitting of intersecting boundary edges failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.UNKNOWN.html#unknown","title":"UNKNOWN","text":"UNKNOWN\n\n\n\nWarningCode.UNKNOWN = 1\n\nUnknown warning."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleResult.new_topo_faces_created.html#new_topo_faces_created","title":"new_topo_faces_created","text":"new_topo_faces_created\n\n\n\nproperty TopoFillHoleResult.new_topo_faces_created: Iterable[int]\n\nIds of new topofaces created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateIntersectionEdgeLoopsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateIntersectionEdgeLoopsResults.print_default()\n\nPrint the default values of CreateIntersectionEdgeLoopsResults object.\n\nExamples\n\n>>> CreateIntersectionEdgeLoopsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_labels_on_zonelet.html#get_labels_on_zonelet","title":"get_labels_on_zonelet","text":"get_labels_on_zonelet\n\n\n\nPart.get_labels_on_zonelet(zonelet_id)\n\nGets labels associated with zonelet.\n\nParameters\n\nzonelet_id\n\npython:int\n\nId of zonelet for which label is queried.\n\nReturns\n\n:\n\n\n\nList[python:str]\n\nReturns labels associated with zonelet.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> results = part.get_labels_on_zonelet(zonelet_id)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.parts.html#parts","title":"parts","text":"parts\n\n\n\nproperty Model.parts: List[Part]\n\nGet the list of parts for the model.\n\nReturns\n\nList[Part]\n\nList of parts for the model.\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> parts = model.parts"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.surface_mesh_size_scaling.html#surface_mesh_size_scaling","title":"surface_mesh_size_scaling","text":"surface_mesh_size_scaling\n\n\n\nproperty HexCoreParams.surface_mesh_size_scaling: SurfaceMeshSizeScaling\n\nSetting for scaling surface mesh size for hexcore refinement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nWarningCode.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.WRAPPER_SMALLERSIZEATFEAURES.html#wrapper_smallersizeatfeaures","title":"WRAPPER_SMALLERSIZEATFEAURES","text":"WRAPPER_SMALLERSIZEATFEAURES\n\n\n\nWarningCode.WRAPPER_SMALLERSIZEATFEAURES = 6003\n\nSize at features is smaller than base size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TriangulateParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic TriangulateParams.set_default()\n\nSet the default values of the TriangulateParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nVolumeNamingType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WrapperImproveResult.print_default()\n\nPrint the default values of WrapperImproveResult object.\n\nExamples\n\n>>> WrapperImproveResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.import_fluent_meshing_size_field.html#import_fluent_meshing_size_field","title":"import_fluent_meshing_size_field","text":"import_fluent_meshing_size_field\n\n\n\nFileIO.import_fluent_meshing_size_field(file_name)\n\nImport a Fluent Meshing size field (SF and SF.GZ) file from disk.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the size field file on disk.\n\nReturns\n\n:\n\n\n\nSizeFieldFileReadResults\n\nResults from reading the size field file.\n\nReturn type\n\nSizeFieldFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> results = file_io.import_fluent_meshing_size_field(\"/tmp/my_sizefield.sf\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MESHHASNONPOSITIVEAREAS.html#meshhasnonpositiveareas","title":"MESHHASNONPOSITIVEAREAS","text":"MESHHASNONPOSITIVEAREAS\n\n\n\nWarningCode.MESHHASNONPOSITIVEAREAS = 7105\n\nMesh has non positive areas."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureRecoveryParams.scope.html#scope","title":"scope","text":"scope\n\n\n\nproperty FeatureRecoveryParams.scope: ScopeDefinition\n\nScope used for feature recovery control."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ZONESARENOTSUPPORTEDFORCELLZONELETS.html#zonesarenotsupportedforcellzonelets","title":"ZONESARENOTSUPPORTEDFORCELLZONELETS","text":"ZONESARENOTSUPPORTEDFORCELLZONELETS\n\n\n\nErrorCode.ZONESARENOTSUPPORTEDFORCELLZONELETS = 311\n\nZones are not supported for cell zonelets."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOACTIVESFFOUND.html#noactivesffound","title":"NOACTIVESFFOUND","text":"NOACTIVESFFOUND\n\n\n\nErrorCode.NOACTIVESFFOUND = 114\n\nNo active size fields found."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.GlobalSizingParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic GlobalSizingParams.print_default()\n\nPrint the default values of GlobalSizingParams object.\n\nExamples\n\n>>> GlobalSizingParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.html#scaffolderrepairmode","title":"ScaffolderRepairMode","text":"ScaffolderRepairMode\n\n\n\nclass ansys.meshing.prime.ScaffolderRepairMode(*values)\n\nMode of Scaffolder repair to be used.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.get_parts_for_points.html#get_parts_for_points","title":"get_parts_for_points","text":"get_parts_for_points\n\n\n\nVolumeMeshTool.get_parts_for_points(points, params)\n\nFinds parts enclosing the given list of points.\n\nParameters\n\npoints\n\nIterable[python:float]\n\nCoordinates of points for which parts need to be found.\n\nparams\n\nPartsForPointsParams\n\nParameters for searching parts.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns array containing information about parts enclosing the points.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = volume_mesh_tool.get_parts_for_points([0., 0., 0.], params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nSurfaceFeatureType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nStitchType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.real.html#real","title":"real","text":"real\n\n\n\nScaffolderRepairMode.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateVolumeZonesType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCreateVolumeZonesType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsParams.merge_small_zonelets_with_neighbors.html#merge_small_zonelets_with_neighbors","title":"merge_small_zonelets_with_neighbors","text":"merge_small_zonelets_with_neighbors\n\n\n\nproperty MergeZoneletsParams.merge_small_zonelets_with_neighbors: bool\n\nWorks better if zonelets are separated by region.\n\nType\n\nMerge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartZonelets.face_zonelets.html#face_zonelets","title":"face_zonelets","text":"face_zonelets\n\n\n\nproperty PartZonelets.face_zonelets: Iterable[int]\n\nList of face zonelet ids available in the part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectType.NONE.html#none","title":"NONE","text":"NONE\n\n\n\nEdgeConnectType.NONE = 0\n\nPerform no connection.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nScopeExpressionType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlParams.axis.html#axis","title":"axis","text":"axis\n\n\n\nproperty PeriodicControlParams.axis: Iterable[float]\n\nAxis vector coordinates."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByInvalidNormalsResults.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty SearchByInvalidNormalsResults.n_found: int\n\nNumber of invalid normals identified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERGLOBALSETTINGSNOTSET.html#wrapperglobalsettingsnotset","title":"WRAPPERGLOBALSETTINGSNOTSET","text":"WRAPPERGLOBALSETTINGSNOTSET\n\n\n\nErrorCode.WRAPPERGLOBALSETTINGSNOTSET = 3400\n\nGlobal settings for wrapper not set."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nJoinSeparateMethod.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.SurfaceScope.get_topo_faces.html#get_topo_faces","title":"get_topo_faces","text":"get_topo_faces\n\n\n\nSurfaceScope.get_topo_faces(model, part_id)\n\nGet the list of topofaces for the given part in the scope.\n\nParameters\n\nmodel\n\nModel\n\nPyPrimeMesh model.\n\npart_id\n\npython:int\n\nId of the part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> topo_faces = su.get_topo_faces(model, 2)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.boundary_conditions.html#boundary_conditions","title":"boundary_conditions","text":"boundary_conditions\n\n\n\nproperty ExportMapdlCdbParams.boundary_conditions: str\n\nBoundary conditions in CDB format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.import_cad.html#import_cad","title":"import_cad","text":"import_cad\n\n\n\nFileIO.import_cad(file_name, params)\n\nImport a CAD file from disk.\n\nSupported CAD file formats on Windows are:\n\n*.scdoc *.scdocx *.dsco *.fmd *.agdb *.pmdb *.meshdat *.mechdat *.dsdb *.cmdb\n*.sat *.sab *.dwg *.dxf *.model *.exp *.CATPart *.CATProduct *.cgr *.3dxml\n*.prt* *.asm* *.iges *.igs *.ipt *.iam *.jt *.prt *.x_t *.x_b *.par *.psm\n*.asm *.sldprt *.sldasm *.step *.stp *.stl *.plmxml *.tgf\n\nSupported CAD file formats on Linux are:\n\n*.fmd *.agdb *.pmdb *.meshdat *.mechdat *.dsdb *.cmdb *.sat *.sab\n*.CATPart *.CATProduct *.iges *.igs *.jt *.x_t *.x_b *.step *.stp\n*.stl *.plmxml *.tgf\n\nRefer Reading and writing files section in User guide for a\ncomprehensive list of supported formats.\n\nParameters\n\nfile_name\n\npython:str\n\nPath to the CAD file on disk.\n\nparams\n\nImportCadParams\n\nParameters for importing the CAD file.\n\nReturns\n\n:\n\n\n\nImportCadResults\n\nResults from importing the CAD file.\n\nReturn type\n\nImportCadResults\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> prime_client = prime.launch_prime()\n>>> model = prime_client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportCadParams(model=model)\n>>> results = file_io.import_cad(\"/tmp/my_cad.x_t\", params=params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileIO.import_cad.html#examples-using-fileioimport_cad","title":"import_cad > Examples using FileIO.import_cad","text":"Examples using FileIO.import_cad\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DeleteMeshParams.set_default(delete_mesh_on_connected_topo_edges=None)\n\nSet the default values of the DeleteMeshParams object.\n\nParameters\n\ndelete_mesh_on_connected_topo_edges: bool, optional\n\nOption to delete mesh on topoedges connected only to provided topoentities."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.inflate_dihedral_face_nodes.html#inflate_dihedral_face_nodes","title":"inflate_dihedral_face_nodes","text":"inflate_dihedral_face_nodes\n\n\n\nproperty WrapperImproveQualityParams.inflate_dihedral_face_nodes: bool\n\nControl to resolve face dihedral angle by inflating opposite nodes or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Client.run_on_server.html#run_on_server","title":"run_on_server","text":"run_on_server\n\n\n\nClient.run_on_server(recipe)\n\nRun a recipe on the server.\n\nParameters\n\nrecipe: str\n\nRecipe to run. This must be a valid Python script."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMaterialPointResults.html#deletematerialpointresults","title":"DeleteMaterialPointResults","text":"DeleteMaterialPointResults\n\n\n\nclass ansys.meshing.prime.DeleteMaterialPointResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with delete material point operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteMaterialPointResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteMaterialPointResults object with provided parameters.\n\nExamples\n\n>>> delete_material_point_results = prime.DeleteMaterialPointResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BodyQueryType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nBodyQueryType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SIDEZONELETSNOTFIT.html#sidezoneletsnotfit","title":"SIDEZONELETSNOTFIT","text":"SIDEZONELETSNOTFIT\n\n\n\nErrorCode.SIDEZONELETSNOTFIT = 121\n\nSide face zonelets are not sweepable for thin volume mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod BOIType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSizingType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineRefinementType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSplineRefinementType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SubtractZoneletsResults.print_default()\n\nPrint the default values of SubtractZoneletsResults object.\n\nExamples\n\n>>> SubtractZoneletsResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.create_wrapper_control.html#create_wrapper_control","title":"create_wrapper_control","text":"create_wrapper_control\n\n\n\nControlData.create_wrapper_control()\n\nCreate a wrapper control with default values.\n\nReturns\n\n:\n\n\n\nWrapperControl\n\nWrapper control.\n\nReturn type\n\nWrapperControl\n\nNotes\n\nA wrapper control with default values is created on calling this method.\n\nExamples\n\n>>> wrapper_control = model.control_data.create_wrapper_control()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismParams.stair_step.html#stair_step","title":"stair_step","text":"stair_step\n\n\n\nproperty PrismParams.stair_step: PrismStairStep\n\nPrism stairstep parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Morpher.match_morph.html#match_morph","title":"match_morph","text":"match_morph\n\n\n\nMorpher.match_morph(part_id, match_pairs, match_morph_params, bc_params, solve_params)\n\nMatches source and target zonelets defined using match pairs with prescribed boundary conditions for each pair. Also, solves boundary condition parameters to define uniform surface and volume regions in source neighborhood.\n\nParameters\n\npart_id\n\npython:int\n\nId of source part.\n\nmatch_pairs\n\nMatchPairArray\n\nArray of  source and target match pairs.\n\nmatch_morph_params\n\nMatchMorphParams\n\nMatch morph parameters.\n\nbc_params\n\nMorphBCParams\n\nMorph boundary condition parameters.\n\nsolve_params\n\nMorphSolveParams\n\nMorpher solve parameters.\n\nReturns\n\n:\n\n\n\nMatchMorphResults\n\nReturns the MatchMorphResults.\n\nReturn type\n\nMatchMorphResults\n\nExamples\n\n>>> result = morph.match_morph([match_pair1, match_pair2], match_morph_params, bc_params, solve_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Morpher.match_morph.html#examples-using-morphermatch_morph","title":"match_morph > Examples using Morpher.match_morph","text":"Examples using Morpher.match_morph\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferParams.min_size.html#min_size","title":"min_size","text":"min_size\n\n\n\nproperty LocalSurferParams.min_size: float\n\nMinimum size to be used in sizing for the surfer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HardSizingParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic HardSizingParams.set_default(min=None, growth_rate=None)\n\nSet the default values of the HardSizingParams object.\n\nParameters\n\nmin: float, optional\n\nMinimum size used for computing edge and face size using hard size control.\n\ngrowth_rate: float, optional\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ImportMapdlCdbParams.print_default()\n\nPrint the default values of ImportMapdlCdbParams object.\n\nExamples\n\n>>> ImportMapdlCdbParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.create_multi_zone_control.html#create_multi_zone_control","title":"create_multi_zone_control","text":"create_multi_zone_control\n\n\n\nControlData.create_multi_zone_control()\n\nCreate multizone control with defaults.\n\nReturns\n\n:\n\n\n\nmultizone\n\nReturns the multizone control.\n\nReturn type\n\nMultiZoneControl\n\nExamples\n\n>>> multizone = model.control_data.create_wrapper_control()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.html#meshstackerresults","title":"MeshStackerResults","text":"MeshStackerResults\n\n\n\nclass ansys.meshing.prime.MeshStackerResults(model=None, error_code=None, error_codes_per_topo_volume=None, non_stackable_faces=None, non_stackable_edges=None, small_features=None, base_face_ids=None, size_control_ids=None, json_data=None, **kwargs)\n\nResults associated with the mesh stacker operations.\n\nParameters\n\nmodel: Model\n\nModel to create a MeshStackerResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the operation.\n\nerror_codes_per_topo_volume: Iterable[int], optional\n\nError codes associated with the topovolume-by-topovolume stacking.\n\nnon_stackable_faces: Iterable[int], optional\n\nList of non-stackable faces. Note: Under-resolved faceting can also create non-stackable geometry.\n\nnon_stackable_edges: Iterable[int], optional\n\nList of non-stackable edges. Note: Under-resolved faceting can also create non-stackable geometry.\n\nsmall_features: Iterable[int], optional\n\nList of features edges smaller than input tolerance.\n\nbase_face_ids: Iterable[int], optional\n\nList of base face ids after base creation.\n\nsize_control_ids: Iterable[int], optional\n\nList of ids of newly created size controls.\n\njson_data: dict, optional\n\nJSON dictionary to create a MeshStackerResults object with provided parameters.\n\nExamples\n\n>>> mesh_stacker_results = prime.MeshStackerResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.html#examples-using-meshstackerresults","title":"MeshStackerResults > Examples using MeshStackerResults","text":"Examples using MeshStackerResults\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.edge_zonelet_ids.html#edge_zonelet_ids","title":"edge_zonelet_ids","text":"edge_zonelet_ids\n\n\n\nproperty EdgeConnectivityResults.edge_zonelet_ids: Iterable[int]\n\nEdge zonelet ids for which connectivity data is available."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod VolumeNamingType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.GlobalSizingParams.html#globalsizingparams","title":"GlobalSizingParams","text":"GlobalSizingParams\n\n\n\nclass ansys.meshing.prime.GlobalSizingParams(model=None, min=None, max=None, growth_rate=None, json_data=None, **kwargs)\n\nGlobal sizing parameters.\n\nParameters\n\nmodel: Model\n\nModel to create a GlobalSizingParams object with default parameters.\n\nmin: float, optional\n\nMinimum value of global sizing parameters.\n\nmax: float, optional\n\nMaximum value of global sizing parameters.\n\ngrowth_rate: float, optional\n\nGrowth rate of global sizing parameters.\n\njson_data: dict, optional\n\nJSON dictionary to create a GlobalSizingParams object with provided parameters.\n\nExamples\n\n>>> global_sizing_params = prime.GlobalSizingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.GlobalSizingParams.html#examples-using-globalsizingparams","title":"GlobalSizingParams > Examples using GlobalSizingParams","text":"Examples using GlobalSizingParams\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nIntersectionMask.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.SOLID.html#solid","title":"SOLID","text":"SOLID\n\n\n\nCellZoneletType.SOLID = 17\n\nCell zonelet type is solid."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileWriteResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty FileWriteResults.error_code: ErrorCode\n\nError code if file write operation is unsuccessful."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.get_volume_scope.html#get_volume_scope","title":"get_volume_scope","text":"get_volume_scope\n\n\n\nThinVolumeControl.get_volume_scope()\n\nGets the volume scope of thin volume control.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_volume_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty ComputeVolumesResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the compute volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.EdgeConnectivityResults.mesh_edge_ids.html#mesh_edge_ids","title":"mesh_edge_ids","text":"mesh_edge_ids\n\n\n\nproperty EdgeConnectivityResults.mesh_edge_ids: Iterable[int]\n\nMesh edge ids corresponding to each topoedge."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.patch_at_live.html#patch_at_live","title":"patch_at_live","text":"patch_at_live\n\n\n\nproperty WrapperPatchFlowRegionsParams.patch_at_live: bool\n\nCreates patches closer to live instead of dead.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_edge_zonelets_of_label_name_pattern.html#get_edge_zonelets_of_label_name_pattern","title":"get_edge_zonelets_of_label_name_pattern","text":"get_edge_zonelets_of_label_name_pattern\n\n\n\nPart.get_edge_zonelets_of_label_name_pattern(label_name_pattern, name_pattern_params)\n\nGet edge zonelet ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern\n\npython:str\n\nName pattern to be matched with label name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match label name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn edge zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> edge_zonelets = part.get_edge_zonelets_of_label_name_pattern(\"wall*\", name_pattern_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSplineResults.html#trimmedsplineresults","title":"TrimmedSplineResults","text":"TrimmedSplineResults\n\n\n\nclass ansys.meshing.prime.TrimmedSplineResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults of IGA operations.\n\nParameters\n\nmodel: Model\n\nModel to create a TrimmedSplineResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code if IGA operation is unsuccessful.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a TrimmedSplineResults object with provided parameters.\n\nExamples\n\n>>> trimmed_spline_results = prime.TrimmedSplineResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.add_topo_entities_to_zone.html#add_topo_entities_to_zone","title":"add_topo_entities_to_zone","text":"add_topo_entities_to_zone\n\n\n\nPart.add_topo_entities_to_zone(zone_id, topo_entities)\n\nAdd topoentities to zone.\n\nParameters\n\nzone_id\n\npython:int\n\nId of a zone .\n\ntopo_entities\n\nIterable[python:int]\n\nIds of topoentities to be added.\n\nReturns\n\n:\n\n\n\nAddToZoneResults\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_topo_entities_to_zone(zone_id, topo_entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectCircularHolesParams.min_radius_circular_holes.html#min_radius_circular_holes","title":"min_radius_circular_holes","text":"min_radius_circular_holes\n\n\n\nproperty DetectCircularHolesParams.min_radius_circular_holes: float\n\nMinimum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEPARTSFAILED.html#deletepartsfailed","title":"DELETEPARTSFAILED","text":"DELETEPARTSFAILED\n\n\n\nErrorCode.DELETEPARTSFAILED = 1306\n\nDelete parts failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.THINVOLUMECONTROLINVALIDCONTROL.html#thinvolumecontrolinvalidcontrol","title":"THINVOLUMECONTROLINVALIDCONTROL","text":"THINVOLUMECONTROLINVALIDCONTROL\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDCONTROL = 12110\n\nSame face scope is set as target for multiple thin volume controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FixInvalidNormalNodeParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FixInvalidNormalNodeParams.set_default(nugget_size=None, nugget_mesh_size=None, label=None)\n\nSet the default values of the FixInvalidNormalNodeParams object.\n\nParameters\n\nnugget_size: float, optional\n\nRelative size used to create nugget at invalid normal node. The size is relative to mesh size at the node.\n\nnugget_mesh_size: float, optional\n\nRelative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\nlabel: str, optional\n\nLabel to set on new face zonelets created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic DeleteMeshResults.print_default()\n\nPrint the default values of DeleteMeshResults object.\n\nExamples\n\n>>> DeleteMeshResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ResolveIntersectionResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ResolveIntersectionResult.set_default(error_code=None)\n\nSet the default values of the ResolveIntersectionResult object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nErrror code associated with a resolve intersections operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FileReadParams.append.html#append","title":"append","text":"append\n\n\n\nproperty FileReadParams.append: bool\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nSplineContinuityType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.EXPORTSTLFAILEDWITHQUADFACES.html#exportstlfailedwithquadfaces","title":"EXPORTSTLFAILEDWITHQUADFACES","text":"EXPORTSTLFAILEDWITHQUADFACES\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHQUADFACES = 554\n\nExport STL not supported for mesh with quad faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nScopeEntity.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectFacesParams.html#connectfacesparams","title":"ConnectFacesParams","text":"ConnectFacesParams\n\n\n\nclass ansys.meshing.prime.ConnectFacesParams(model=None, constant_mesh_size=None, absolute_tolerance=None, json_data=None, **kwargs)\n\nParameters for connect faces operation.\n\nParameters\n\nmodel: Model\n\nModel to create a ConnectFacesParams object with default parameters.\n\nconstant_mesh_size: float, optional\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nabsolute_tolerance: float, optional\n\nAbsolute distance tolerance between edges or faces for connect faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ConnectFacesParams object with provided parameters.\n\nExamples\n\n>>> connect_faces_params = prime.ConnectFacesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zonelets_of_zone_name_pattern.html#get_face_zonelets_of_zone_name_pattern","title":"get_face_zonelets_of_zone_name_pattern","text":"get_face_zonelets_of_zone_name_pattern\n\n\n\nPart.get_face_zonelets_of_zone_name_pattern(zone_name_pattern, name_pattern_params)\n\nGet ids of face zonelets of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern\n\npython:str\n\nName pattern to be matched with zone name.\n\nname_pattern_params\n\nNamePatternParams\n\nName pattern parameters used to match zone name pattern.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn face zonelet ids of zones with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_zone_name_pattern(\"wall*\", name_pattern_params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.AUTOQUADMESHER_NEGATIVEINPUTPARAMETER.html#autoquadmesher_negativeinputparameter","title":"AUTOQUADMESHER_NEGATIVEINPUTPARAMETER","text":"AUTOQUADMESHER_NEGATIVEINPUTPARAMETER\n\n\n\nErrorCode.AUTOQUADMESHER_NEGATIVEINPUTPARAMETER = 15000\n\nAutoquadmesher error codes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityParams.html#faceandedgeconnectivityparams","title":"FaceAndEdgeConnectivityParams","text":"FaceAndEdgeConnectivityParams\n\n\n\nclass ansys.meshing.prime.FaceAndEdgeConnectivityParams(model=None, reorder_face_zonelets_mid_nodes=None, reorder_edge_zonelets_mid_nodes=None, json_data=None, **kwargs)\n\nParameters to get face and edge connectivity information.\n\nParameters\n\nmodel: Model\n\nModel to create a FaceAndEdgeConnectivityParams object with default parameters.\n\nreorder_face_zonelets_mid_nodes: bool, optional\n\nOption to reorder mid nodes for quadratic faces.\n\nreorder_edge_zonelets_mid_nodes: bool, optional\n\nOption to reorder mid nodes for quadratic edges.\n\njson_data: dict, optional\n\nJSON dictionary to create a FaceAndEdgeConnectivityParams object with provided parameters.\n\nExamples\n\n>>> face_and_edge_connectivity_params = prime.FaceAndEdgeConnectivityParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingParams.faceting_resolution.html#faceting_resolution","title":"faceting_resolution","text":"faceting_resolution\n\n\n\nproperty CadRefacetingParams.faceting_resolution: CadRefacetingResolution\n\nSet the faceting resolution."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SURFERQUADFAILED.html#surferquadfailed","title":"SURFERQUADFAILED","text":"SURFERQUADFAILED\n\n\n\nErrorCode.SURFERQUADFAILED = 8\n\nQuad surface meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceSearch.get_surface_quality_summary.html#get_surface_quality_summary","title":"get_surface_quality_summary","text":"get_surface_quality_summary\n\n\n\nSurfaceSearch.get_surface_quality_summary(params)\n\nGets the surface quality summary.\n\nDiagnose surface quality for the given scope and face quality measures provided by the surface quality summary parameters.\nUses default quality limit if not specified with params.\n\nParameters\n\nparams\n\nSurfaceQualitySummaryParams\n\nSurface quality summary parameters.\n\nReturns\n\n:\n\n\n\nSurfaceQualitySummaryResults\n\nReturns the SurfaceQualitySummaryResults.\n\nReturn type\n\nSurfaceQualitySummaryResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.get_surface_quality_summary(SurfaceQualitySummaryParams(model=model))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VT_MERGETHINSTRIPESFAILED.html#vt_mergethinstripesfailed","title":"VT_MERGETHINSTRIPESFAILED","text":"VT_MERGETHINSTRIPESFAILED\n\n\n\nErrorCode.VT_MERGETHINSTRIPESFAILED = 3602\n\nMerge thin stripes operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrimeRuntimeWarning.html#primeruntimewarning","title":"PrimeRuntimeWarning","text":"PrimeRuntimeWarning\n\n\n\nexception ansys.meshing.prime.PrimeRuntimeWarning(message)\n\nProvides the runtime warning for PyPrimeMesh.\n\nParameters\n\nmessage\n\npython:str\n\nMessage to show."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractZoneletsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SubtractZoneletsParams.print_default()\n\nPrint the default values of SubtractZoneletsParams object.\n\nExamples\n\n>>> SubtractZoneletsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BOIType.real.html#real","title":"real","text":"real\n\n\n\nBOIType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointResults.assigned_name.html#assigned_name","title":"assigned_name","text":"assigned_name\n\n\n\nproperty CreateMaterialPointResults.assigned_name: str\n\nAssigned name of the material point created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CellZoneletType.imag.html#imag","title":"imag","text":"imag\n\n\n\nCellZoneletType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexToSplineParams.corner_angle.html#corner_angle","title":"corner_angle","text":"corner_angle\n\n\n\nproperty HexToSplineParams.corner_angle: float\n\nCorner angle of the feature.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERUNSUPPORTEDWRAPREGION.html#wrapperunsupportedwrapregion","title":"WRAPPERUNSUPPORTEDWRAPREGION","text":"WRAPPERUNSUPPORTEDWRAPREGION\n\n\n\nErrorCode.WRAPPERUNSUPPORTEDWRAPREGION = 3407\n\nWrap region option provided does not support wrap operation."},{"objectID":"Home","href":"user_guide/iga.html#isogeometric-analysis","title":"Isogeometric analysis","text":"Isogeometric analysis\n\nThis is a beta feature. API behavior and implementation might change in the future.\n\nIsogeometric Analysis (IGA) is a new approach using NURBS to capture the CAD geometry accurately than the FE analysis.\nThe FE analysis discretize the CAD geometry approximately into smaller elements to capture the features.\nThis approximation may affect the accuracy of the result and increase the computational cost.\nIGA uses spline to exactly represent the  CAD geometry to analyse the geometry and solver solves on the splines.\n\nIn PyPrimeMesh, IGA-Quad to Spline allows you to extract control points and splines based on the input quadrilateral surface mesh and export it as LS-DYNA IGA K file for the IGA solver.\n\nThe prerequisites required for preparing Input CAD Model for Quad to Spline conversion:\n\nClean up the input geometry in PyPrimeMesh.\n\nGenerates full quad mesh on the input geometry.\n\nPerform mesh edit operations to reduce the triangles.\n\nIGA Quad to Spline performs the following:\n\nExecute quad to spline operation using any of the following options:\n\nWhen you provide Ignore Features, ignores all the features while converting the input geometry to spline.\n\nWhen you provide Use Angle, captures the provided angle while creating the spline for the input geometry.\n\nWhen you provide Use Edges, uses the provided edges while creating spline for the input geometry.\n\nChecks if any Negative Jacobian values are present while creating splines.\n\nExport Splines as LS-DYNA IGA K file if no Negative Jacobian values are present in the input geometry.\n\nProvides the file to the LS-DYNA IGA solver.\n\nThe below example shows IGA Quad to spline conversion:\n\nImport the geometry.\n\nCheck whether the model is a topology or mesh part.\n\nOutput:\n\nDefine the input scope for the geometry or mesh part.\n\nInitialize QuadToSpline and provide the required parameters in QuadToSplineParams to perform the quad to spline conversion.\n\nOutput:\n\nGet the unstructured spline created.\n\nOutput:\n\nCheck the quality of the created spline.\n\nOutput:\n\nWrite the created .k file to the specified location and export to LS-DYNA."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.fused_area.html#fused_area","title":"fused_area","text":"fused_area\n\n\n\nproperty FuseResults.fused_area: float\n\nTotal area of fused regions from both source and target faces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportSTLParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportSTLParams.set_default(part_ids=None)\n\nSet the default values of the ExportSTLParams object.\n\nParameters\n\npart_ids: Iterable[int], optional\n\nIds of parts to export."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SubtractVolumesParams.set_default(ignore_face_zonelets=None, check_cutters=None, keep_cutters=None)\n\nSet the default values of the SubtractVolumesParams object.\n\nParameters\n\nignore_face_zonelets: Iterable[int], optional\n\nFace zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\ncheck_cutters: bool, optional\n\nOption to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\nkeep_cutters: bool, optional\n\nOption to retain cutter volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeadRegion.html#deadregion","title":"DeadRegion","text":"DeadRegion\n\n\n\nclass ansys.meshing.prime.DeadRegion(model=None, face_zonelet_ids=None, dead_material_points=None, hole_size=None, json_data=None, **kwargs)\n\nDeadRegion defines a dead region for patch flow regions operation.\n\nParameters\n\nmodel: Model\n\nModel to create a DeadRegion object with default parameters.\n\nface_zonelet_ids: Iterable[int], optional\n\nFace zonelets enclosing dead region.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndead_material_points: List[str], optional\n\nMaterial points to identify dead region.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nhole_size: float, optional\n\nMaximum hole size used for patching.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeadRegion object with provided parameters.\n\nExamples\n\n>>> dead_region = prime.DeadRegion(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.OVERRIDESOISIZINGPARAMS.html#overridesoisizingparams","title":"OVERRIDESOISIZINGPARAMS","text":"OVERRIDESOISIZINGPARAMS\n\n\n\nWarningCode.OVERRIDESOISIZINGPARAMS = 207\n\nOverriding SOI sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nSplineFeatureCaptureType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeFieldType.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nSizeFieldType.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WrapperCloseGapsParams.print_default()\n\nPrint the default values of WrapperCloseGapsParams object.\n\nExamples\n\n>>> WrapperCloseGapsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOTSUPPORTEDFORNONTRIFACEZONE.html#notsupportedfornontrifacezone","title":"NOTSUPPORTEDFORNONTRIFACEZONE","text":"NOTSUPPORTEDFORNONTRIFACEZONE\n\n\n\nErrorCode.NOTSUPPORTEDFORNONTRIFACEZONE = 1202\n\nOnly triangular face zone is supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractTopoVolumesResults.html#extracttopovolumesresults","title":"ExtractTopoVolumesResults","text":"ExtractTopoVolumesResults\n\n\n\nclass ansys.meshing.prime.ExtractTopoVolumesResults(model=None, volumes=None, error_code=None, json_data=None, **kwargs)\n\nParameters to extract flow topovolumes.\n\nParameters\n\nmodel: Model\n\nModel to create a ExtractTopoVolumesResults object with default parameters.\n\nvolumes: Iterable[int], optional\n\nIds of extracted flow topovolumes.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExtractTopoVolumesResults object with provided parameters.\n\nExamples\n\n>>> extract_topo_volumes_results = prime.ExtractTopoVolumesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic RefineAtContactsParams.print_default()\n\nPrint the default values of RefineAtContactsParams object.\n\nExamples\n\n>>> RefineAtContactsParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WriteSizeFieldParams.write_only_active_size_fields.html#write_only_active_size_fields","title":"write_only_active_size_fields","text":"write_only_active_size_fields\n\n\n\nproperty WriteSizeFieldParams.write_only_active_size_fields: bool\n\nOption to write only active size fields into the file."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualitySummaryResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VolumeQualitySummaryResults.set_default(error_code=None, quality_results_part=None, message=None)\n\nSet the default values of the VolumeQualitySummaryResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume quality summary.\n\nquality_results_part: List[VolumeQualityResultsPart], optional\n\nContains volume quality result per cell quality measure by parts specified in parameters.\n\nmessage: str, optional\n\nVolume quality summary text."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.get_target_scope.html#get_target_scope","title":"get_target_scope","text":"get_target_scope\n\n\n\nThinVolumeControl.get_target_scope()\n\nGets the target of thin volume control scope.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_target_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCLOSEGAPS_INVALIDGAPSIZE.html#wrapperclosegaps_invalidgapsize","title":"WRAPPERCLOSEGAPS_INVALIDGAPSIZE","text":"WRAPPERCLOSEGAPS_INVALIDGAPSIZE\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDGAPSIZE = 3440\n\nGap size specified for patching should be positive double."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRITEKEYWORDFILEFAILED.html#writekeywordfilefailed","title":"WRITEKEYWORDFILEFAILED","text":"WRITEKEYWORDFILEFAILED\n\n\n\nErrorCode.WRITEKEYWORDFILEFAILED = 518\n\nWriting LS-Dyna Keyword file failed."},{"objectID":"Home","href":"user_guide/stacker.html#volume-sweeping","title":"Volume sweeping","text":"Volume sweeping\n\nThe VolumeSweeper class creates a volume mesh on 2.5D models, stacking faces\nor edge zonelets one above the other in layers. This volume sweeping technology stacks each of the input topovolumes individually.\n\nA 2.5D or stackable geometry is any closed volume or set of closed volumes that can be obtained by successive extrusion of a series of 2D geometries, along the area normal of the 2D geometries.\n\nA geometry is stackable only when there is a direction called stacking direction, to which all surfaces are either perpendicular or parallel.\n\nThe hex-dominant mesh created by volume sweeper can only be applied to 2.5D models. Only conformal mesh within a part is supported.\n\nVolume sweeping workflow involves the following:\n\nCreate imprints of model edges on the base face.\n\nSurface mesh the imprinted base face.\n\nExtrude the base face mesh at the selected origin by stacking the face layer by layer along the specified direction to generate a volume mesh."},{"objectID":"Home","href":"user_guide/stacker.html#hex-dominant-meshing-for-25d-geometry","title":"Volume sweeping > Hex-dominant meshing for 2.5D geometry","text":"Hex-dominant meshing for 2.5D geometry\n\nThe following example shows how to mesh a thin disc using volume sweeper:\n\nDefine stacking parameters:\n\nSet origin and direction vector for stacking orientation\n\nOption to set defeaturing tolerance for edge imprints\n\nOption to set maximum stack size allowed for stacking\n\nOption to delete base face after stacking\n\nDefault global max size is used for stacking parameters if you are not providing the max size.\n\nDefault lateral_defeature_tolerance and stacking_defeature_tolerance are set to (global min size/4).\n\nPrint the results of stacking parameters so that you can review them:\n\nCreate base face:\n\nThe topovolume cannot have meshed topofaces.\n\nCompute volumetric size field and perform surface meshing on the base face:\n\nStack the base face:"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.DownloadManager.download_file.html#download_file","title":"download_file","text":"download_file\n\n\n\nDownloadManager.download_file(filename, *directory, destination=None, force=False)\n\nDownload an example file from the PyPrimeMesh repository.\n\nParameters\n\nfilename\n\npython:str\n\nName of the example file to download.\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to always download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\ndirectory\n\npython:tuple[python:str]\n\nPath under the PyAnsys Github examples repository.\n\nReturns\n\n:\n\n\n\npython:tuple[python:str, python:str]\n\nTuple containing the filepath to use and the local filepath of the downloaded\ndirectory. The two are different in case of containers.\n\nReturn type\n\nstr"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERCONTROL_LIVEMATERIALPOINTDOESNTEXIST.html#wrappercontrol_livematerialpointdoesntexist","title":"WRAPPERCONTROL_LIVEMATERIALPOINTDOESNTEXIST","text":"WRAPPERCONTROL_LIVEMATERIALPOINTDOESNTEXIST\n\n\n\nErrorCode.WRAPPERCONTROL_LIVEMATERIALPOINTDOESNTEXIST = 3414\n\nLive material point does not exist for wrapper."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControlParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VolumeControlParams.print_default()\n\nPrint the default values of VolumeControlParams object.\n\nExamples\n\n>>> VolumeControlParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_multi_zone_control_by_name.html#get_multi_zone_control_by_name","title":"get_multi_zone_control_by_name","text":"get_multi_zone_control_by_name\n\n\n\nControlData.get_multi_zone_control_by_name(name)\n\nGet the multizone control by name.\n\nParameters\n\nname\n\npython:str\n\nName of the multizone control.\n\nReturns\n\n:\n\n\n\nMultiZoneControl\n\nReturns the multizone control.\n\nReturn type\n\nMultiZoneControl\n\nExamples\n\n>>> multi_zone_control = model.control_data.get_multi_zone_control_by_name(\"mzcontrol-1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ContactElementTypeParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ContactElementTypeParams.print_default()\n\nPrint the default values of ContactElementTypeParams object.\n\nExamples\n\n>>> ContactElementTypeParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateZoneResults.zone_id.html#zone_id","title":"zone_id","text":"zone_id\n\n\n\nproperty CreateZoneResults.zone_id: int\n\nId of newly created zone."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControl.set_suggested_name.html#set_suggested_name","title":"set_suggested_name","text":"set_suggested_name\n\n\n\nPeriodicControl.set_suggested_name(name)\n\nSets the unique name for the periodic control based on the suggested name.\n\nParameters\n\nname\n\npython:str\n\nSuggested name for the periodic control.\n\nReturns\n\n:\n\n\n\nSetNameResults\n\nReturns the name of the periodic control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> periodic_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMeshParams.periodic_control_ids.html#periodic_control_ids","title":"periodic_control_ids","text":"periodic_control_ids\n\n\n\nproperty AutoMeshParams.periodic_control_ids: Iterable[int]\n\nIds of the periodic controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsResults.n_refined.html#n_refined","title":"n_refined","text":"n_refined\n\n\n\nproperty RefineAtContactsResults.n_refined: int\n\nNumber of face elements identified for refinement."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceConnectivityResults.node_coords.html#node_coords","title":"node_coords","text":"node_coords\n\n\n\nproperty FaceConnectivityResults.node_coords: Iterable[float]\n\nNode coordinates describing faces of face zonelet."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoQuadMesher.detect_and_treat_features.html#detect_and_treat_features","title":"detect_and_treat_features","text":"detect_and_treat_features\n\n\n\nAutoQuadMesher.detect_and_treat_features(part_id, topo_face_ids, params)\n\nDetect features in topology and treat them with given parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of the Part.\n\ntopo_face_ids\n\nIterable[python:int]\n\nIds of topofaces.\n\nparams\n\nDetectAndTreatFeaturesParams\n\nParameters of detect and treat features.\n\nReturns\n\n:\n\n\n\nAutoQuadMesherResults\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.detect_and_treat_features(part_id, topo_face_ids, params);"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.remove_zone_on_volumes.html#remove_zone_on_volumes","title":"remove_zone_on_volumes","text":"remove_zone_on_volumes\n\n\n\nPart.remove_zone_on_volumes(volumes)\n\nRemoves zone on the given volumes.\n\nParameters\n\nvolumes\n\nIterable[python:int]\n\nVolume ids whose zone is to be removed.\n\nReturns\n\n:\n\n\n\nRemoveZoneResults\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_volumes(volumes)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IntersectionMask.FACEFACEANDEDGEEDGE.html#facefaceandedgeedge","title":"FACEFACEANDEDGEEDGE","text":"FACEFACEANDEDGEEDGE\n\n\n\nIntersectionMask.FACEFACEANDEDGEEDGE = 3\n\nPerform face to face and edge to edge intersections."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadFaceter.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nCadFaceter.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_tet_cells.html#n_tet_cells","title":"n_tet_cells","text":"n_tet_cells\n\n\n\nproperty PartSummaryResults.n_tet_cells: int\n\nNumber of tetrahedral cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SFPeriodicParams.html#sfperiodicparams","title":"SFPeriodicParams","text":"SFPeriodicParams\n\n\n\nclass ansys.meshing.prime.SFPeriodicParams(model=None, axis=None, angle=None, center=None, json_data=None, **kwargs)\n\nParameters for setting periodic size fields.\n\nParameters\n\nmodel: Model\n\nModel to create a SFPeriodicParams object with default parameters.\n\naxis: Iterable[float], optional\n\nAxis vector coordinates.\n\nangle: float, optional\n\nAngle in degrees.\n\ncenter: Iterable[float], optional\n\nCenter coordinates.\n\njson_data: dict, optional\n\nJSON dictionary to create a SFPeriodicParams object with provided parameters.\n\nExamples\n\n>>> s_fperiodic_params = prime.SFPeriodicParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.html#scopeentity","title":"ScopeEntity","text":"ScopeEntity\n\n\n\nclass ansys.meshing.prime.ScopeEntity(*values)\n\nScopeDefinition uses entity type to scope entities.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.html#examples-using-scopeentity","title":"ScopeEntity > Examples using ScopeEntity","text":"Examples using ScopeEntity\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.thin_stripes_tolerance.html#thin_stripes_tolerance","title":"thin_stripes_tolerance","text":"thin_stripes_tolerance\n\n\n\nproperty DefeatureTopologyParams.thin_stripes_tolerance: float\n\nTopoface width tolerance to detect thin faces below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SurfaceQualitySummaryResults.set_default(error_code=None, quality_results=None, summary=None)\n\nSet the default values of the SurfaceQualitySummaryResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the surface quality summary.\n\nquality_results: List[SurfaceQualityResult], optional\n\nContains surface quality result per face quality measure specified in parameters.\n\nsummary: str, optional\n\nSurface quality summary text."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairEdgesParams.html#repairedgesparams","title":"RepairEdgesParams","text":"RepairEdgesParams\n\n\n\nclass ansys.meshing.prime.RepairEdgesParams(model=None, constant_mesh_size=None, absolute_tolerance=None, json_data=None, **kwargs)\n\nParameters for repair edges operation.\n\nParameters\n\nmodel: Model\n\nModel to create a RepairEdgesParams object with default parameters.\n\nconstant_mesh_size: float, optional\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nabsolute_tolerance: float, optional\n\nAbsolute distance tolerance between nodes or edges for repair edges operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a RepairEdgesParams object with provided parameters.\n\nExamples\n\n>>> repair_edges_params = prime.RepairEdgesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.fragmented_edge_tolerance.html#fragmented_edge_tolerance","title":"fragmented_edge_tolerance","text":"fragmented_edge_tolerance\n\n\n\nproperty DetectAndTreatHolesParams.fragmented_edge_tolerance: float\n\nFragmented edge length tolerance for merging edges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControlOffsetType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nPrismControlOffsetType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.AUTONODEMOVEFAILED.html#autonodemovefailed","title":"AUTONODEMOVEFAILED","text":"AUTONODEMOVEFAILED\n\n\n\nErrorCode.AUTONODEMOVEFAILED = 107\n\nAuto node move failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nLSDynaFileFormatType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneType.imag.html#imag","title":"imag","text":"imag\n\n\n\nZoneType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SmoothDihedralFaceNodesResults.html#smoothdihedralfacenodesresults","title":"SmoothDihedralFaceNodesResults","text":"SmoothDihedralFaceNodesResults\n\n\n\nclass ansys.meshing.prime.SmoothDihedralFaceNodesResults(model=None, n_nodes_smoothed=None, error_code=None, json_data=None, **kwargs)\n\nResults structure associated with smooth dihedral face nodes.\n\nParameters\n\nmodel: Model\n\nModel to create a SmoothDihedralFaceNodesResults object with default parameters.\n\nn_nodes_smoothed: int, optional\n\nNumber of dihedral face nodes smoothed.\n\nerror_code: ErrorCode, optional\n\nError Code associated with creating offset surface.\n\njson_data: dict, optional\n\nJSON dictionary to create a SmoothDihedralFaceNodesResults object with provided parameters.\n\nExamples\n\n>>> smooth_dihedral_face_nodes_results = prime.SmoothDihedralFaceNodesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_unmeshed_topo_faces.html#n_unmeshed_topo_faces","title":"n_unmeshed_topo_faces","text":"n_unmeshed_topo_faces\n\n\n\nproperty PartSummaryResults.n_unmeshed_topo_faces: int\n\nNumber of unmeshed topofaces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchMorphParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MatchMorphParams.print_default()\n\nPrint the default values of MatchMorphParams object.\n\nExamples\n\n>>> MatchMorphParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nCdbAnalysisType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic MeshStackerParams.print_default()\n\nPrint the default values of MeshStackerParams object.\n\nExamples\n\n>>> MeshStackerParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SurfaceQualitySummaryParams.print_default()\n\nPrint the default values of SurfaceQualitySummaryParams object.\n\nExamples\n\n>>> SurfaceQualitySummaryParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.separation_angle.html#separation_angle","title":"separation_angle","text":"separation_angle\n\n\n\nproperty ExtractFeatureParams.separation_angle: float\n\nAngle used to separate extracted features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PYRAMIDMESHFAILED.html#pyramidmeshfailed","title":"PYRAMIDMESHFAILED","text":"PYRAMIDMESHFAILED\n\n\n\nErrorCode.PYRAMIDMESHFAILED = 141\n\nPyramid meshing failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.bit_count.html#bit_count","title":"bit_count","text":"bit_count\n\n\n\nHexCoreCellElementType.bit_count(/)\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateCapResults.created_face_zonelets.html#created_face_zonelets","title":"created_face_zonelets","text":"created_face_zonelets\n\n\n\nproperty CreateCapResults.created_face_zonelets: Iterable[int]\n\nIds of cap face zonelets created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDNEIGHBORVOLUMES.html#invalidneighborvolumes","title":"INVALIDNEIGHBORVOLUMES","text":"INVALIDNEIGHBORVOLUMES\n\n\n\nErrorCode.INVALIDNEIGHBORVOLUMES = 136\n\nInvalid neighbor volumes selected to merge volumes."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceFeatureType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSurfaceFeatureType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDSHELLBLCONTROLS_INCORRECTSCOPEENTITY.html#invalidshellblcontrols_incorrectscopeentity","title":"INVALIDSHELLBLCONTROLS_INCORRECTSCOPEENTITY","text":"INVALIDSHELLBLCONTROLS_INCORRECTSCOPEENTITY\n\n\n\nErrorCode.INVALIDSHELLBLCONTROLS_INCORRECTSCOPEENTITY = 68\n\nInvalid scope entity.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureExtraction.html#featureextraction","title":"FeatureExtraction","text":"FeatureExtraction\n\n\n\nclass ansys.meshing.prime.FeatureExtraction(model)\n\nProvide functions for all feature extraction operations like extracting edges zonlelets, tracing node paths.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create FeatureExtraction object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FeatureExtraction.html#examples-using-featureextraction","title":"FeatureExtraction > Examples using FeatureExtraction","text":"Examples using FeatureExtraction\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.suppress_topo_edge_and_mesh_cleanup.html#suppress_topo_edge_and_mesh_cleanup","title":"suppress_topo_edge_and_mesh_cleanup","text":"suppress_topo_edge_and_mesh_cleanup\n\n\n\nproperty OptimizeQuadMeshParams.suppress_topo_edge_and_mesh_cleanup: bool\n\nOption to suppress topoedges and clean up mesh.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.n_multi_edges.html#n_multi_edges","title":"n_multi_edges","text":"n_multi_edges\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_multi_edges: int\n\nNumber of multi face edges identified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.extract_topo_volumes.html#extract_topo_volumes","title":"extract_topo_volumes","text":"extract_topo_volumes\n\n\n\nPart.extract_topo_volumes(topo_faces, params)\n\nExtract topovolumes connected to given cap topofaces.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of topofaces connected to topovolumes.\n\nparams\n\nExtractTopoVolumesParams\n\nParameters to compute topovolumes.\n\nReturns\n\n:\n\n\n\nExtractTopoVolumesResults\n\nReturn the ExtractTopoVolumesResults.\n\nReturn type\n\nExtractTopoVolumesResults\n\nExamples\n\n>>> results = part.extract_flow_topo_volumes(topo_faces, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_pipe_tee_fmd.html#download_pipe_tee_fmd","title":"download_pipe_tee_fmd","text":"download_pipe_tee_fmd\n\n\n\nansys.meshing.prime.examples.download_pipe_tee_fmd(destination=None, force=False)\n\nDownload the FMD file for the pipe tee example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nOption to  download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_pipe_tee_fmd.html#examples-using-download_pipe_tee_fmd","title":"download_pipe_tee_fmd > Examples using download_pipe_tee_fmd","text":"Examples using download_pipe_tee_fmd\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DefeatureTopologyParams.delete_interior_nodes.html#delete_interior_nodes","title":"delete_interior_nodes","text":"delete_interior_nodes\n\n\n\nproperty DefeatureTopologyParams.delete_interior_nodes: bool\n\nOption to delete interior nodes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryResults.n_free_edges.html#n_free_edges","title":"n_free_edges","text":"n_free_edges\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_free_edges: int\n\nNumber of free face edges identified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeExpressionType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod ScopeExpressionType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectFacesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ConnectFacesParams.set_default(constant_mesh_size=None, absolute_tolerance=None)\n\nSet the default values of the ConnectFacesParams object.\n\nParameters\n\nconstant_mesh_size: float, optional\n\nConstant size used for surface meshing.\n\nabsolute_tolerance: float, optional\n\nAbsolute distance tolerance between edges or faces for connect faces operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneEdgeBiasingParams.html#multizoneedgebiasingparams","title":"MultiZoneEdgeBiasingParams","text":"MultiZoneEdgeBiasingParams\n\n\n\nclass ansys.meshing.prime.MultiZoneEdgeBiasingParams(model=None, face_scope=None, edge_scope=None, bias_factor=None, n_divisions=None, json_data=None, **kwargs)\n\nDefines MultiZone edge biasing control parameters.\n\nParameters\n\nmodel: Model\n\nModel to create a MultiZoneEdgeBiasingParams object with default parameters.\n\nface_scope: ScopeDefinition, optional\n\nReference face zonelets to control mesh clustering orientation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nedge_scope: ScopeDefinition, optional\n\nEdge zonelets to control the expanse of edge biasing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nbias_factor: float, optional\n\nBias factor used for MultiZone edge biasing control.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nn_divisions: int, optional\n\nNumber of divisions on the section where edge biasing is done.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a MultiZoneEdgeBiasingParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_edge_biasing_params = prime.MultiZoneEdgeBiasingParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic IGAResults.set_default(error_code=None, warning_code=None, spline_ids=None)\n\nSet the default values of the IGAResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code if IGA operation is unsuccessful.\n\nwarning_code: WarningCode, optional\n\nWarning code if IGA operation is partially successful.\n\nspline_ids: Iterable[int], optional\n\nIds of the created spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteVolumesParams.delete_small_volumes.html#delete_small_volumes","title":"delete_small_volumes","text":"delete_small_volumes\n\n\n\nproperty DeleteVolumesParams.delete_small_volumes: bool\n\nOption to delete only volumes smaller than provided volume limit."},{"objectID":"Home","href":"user_guide/logging.html#logging","title":"Logging","text":"Logging\n\nA logger can be attached to a session to handle streamed output from PyPrimeMesh.\n\nThis code attaches a logger and formats the output as needed:"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlPointSelection.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nControlPointSelection.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.NONE.html#none","title":"NONE","text":"NONE\n\n\n\nCdbAnalysisType.NONE = 0\n\nOption to select no analysis type. This is the default option.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteInteriorNodesParams.edge_sharp_corner_angle.html#edge_sharp_corner_angle","title":"edge_sharp_corner_angle","text":"edge_sharp_corner_angle\n\n\n\nproperty DeleteInteriorNodesParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeTopoVolumesResults.error_locations.html#error_locations","title":"error_locations","text":"error_locations\n\n\n\nproperty ComputeTopoVolumesResults.error_locations: Iterable[float]\n\nCoordinates of problematic locations in the surface mesh."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.CREATEBOI_INVALIDTYPEFORWRAP.html#createboi_invalidtypeforwrap","title":"CREATEBOI_INVALIDTYPEFORWRAP","text":"CREATEBOI_INVALIDTYPEFORWRAP\n\n\n\nErrorCode.CREATEBOI_INVALIDTYPEFORWRAP = 386\n\nBOI creation failed. Wrapping is invalid for this BOI type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod MatchPairTargetType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Connect.merge_boundary_nodes.html#merge_boundary_nodes","title":"merge_boundary_nodes","text":"merge_boundary_nodes\n\n\n\nConnect.merge_boundary_nodes(part_id, face_zonelet_ids, with_face_zonelet_ids, params)\n\nMerges boundary nodes of source face zonelets with boundary nodes of target face zonelets according to the provided parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part where merging has to take place.\n\nface_zonelet_ids\n\nIterable[python:int]\n\nIds of the source face zonelets.\n\nwith_face_zonelet_ids\n\nIterable[python:int]\n\nIds of the target face zonelets.\n\nparams\n\nMergeBoundaryNodesParams\n\nParameters for merging boundary nodes.\n\nReturns\n\n:\n\n\n\nMergeBoundaryNodesResults\n\nReturns the MergeBoundaryNodesResults.\n\nReturn type\n\nMergeBoundaryNodesResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.MergeBoundaryNodes(2, [2,3], [4,5], params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.real.html#real","title":"real","text":"real\n\n\n\nJoinSeparateMethod.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.set_suggested_name.html#set_suggested_name","title":"set_suggested_name","text":"set_suggested_name\n\n\n\nPrismControl.set_suggested_name(name)\n\nSets the unique name for the prism control based on the suggested name.\n\nParameters\n\nname\n\npython:str\n\nSuggested name for the prism control.\n\nReturns\n\n:\n\n\n\nSetNameResults\n\nReturns the SetNameResults.\n\nReturn type\n\nSetNameResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> prism_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeDefinition.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ScopeDefinition.print_default()\n\nPrint the default values of ScopeDefinition object.\n\nExamples\n\n>>> ScopeDefinition.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.real.html#real","title":"real","text":"real\n\n\n\nThinStripType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeBoundaryNodesResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty MergeBoundaryNodesResults.error_code: ErrorCode\n\nError Code associated with failure of merge nodes operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundaryFittedSplineParams.degree_w.html#degree_w","title":"degree_w","text":"degree_w\n\n\n\nproperty BoundaryFittedSplineParams.degree_w: int\n\nDegree of spline in w direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDPRISMCONTROLS_INCORRECTSCOPEENTITY.html#invalidprismcontrols_incorrectscopeentity","title":"INVALIDPRISMCONTROLS_INCORRECTSCOPEENTITY","text":"INVALIDPRISMCONTROLS_INCORRECTSCOPEENTITY\n\n\n\nErrorCode.INVALIDPRISMCONTROLS_INCORRECTSCOPEENTITY = 123\n\nInvalid scope entity."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nScopeEntity.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoSearchField.INCORRECTBOUNDARYORIENTATIONTOPOFACES.html#incorrectboundaryorientationtopofaces","title":"INCORRECTBOUNDARYORIENTATIONTOPOFACES","text":"INCORRECTBOUNDARYORIENTATIONTOPOFACES\n\n\n\nTopoSearchField.INCORRECTBOUNDARYORIENTATIONTOPOFACES = 7\n\nDiagnoses topofaces with incorrect boundary orientations.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposerParams.thin_stripes_tol.html#thin_stripes_tol","title":"thin_stripes_tol","text":"thin_stripes_tol\n\n\n\nproperty VTComposerParams.thin_stripes_tol: float\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.html#volumemeshtool","title":"VolumeMeshTool","text":"VolumeMeshTool\n\n\n\nclass ansys.meshing.prime.VolumeMeshTool(model)\n\nVolumeMeshTool allows you to check grid and improve volume mesh quality.\n\nVolumeMeshTool provides various volume mesh improvement algorithms.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create VolumeMeshTool object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeMeshTool.html#examples-using-volumemeshtool","title":"VolumeMeshTool > Examples using VolumeMeshTool","text":"Examples using VolumeMeshTool\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.MESHHASINVALIDSHAPE.html#meshhasinvalidshape","title":"MESHHASINVALIDSHAPE","text":"MESHHASINVALIDSHAPE\n\n\n\nWarningCode.MESHHASINVALIDSHAPE = 7106\n\nMesh has invalid shape."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.DELETEMESHFAILED.html#deletemeshfailed","title":"DELETEMESHFAILED","text":"DELETEMESHFAILED\n\n\n\nErrorCode.DELETEMESHFAILED = 142\n\nDeleting mesh failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByIntersectionResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SearchByIntersectionResults.set_default(n_found=None, error_code=None)\n\nSet the default values of the SearchByIntersectionResults object.\n\nParameters\n\nn_found: int, optional\n\nNumber of face elements identified by intersection(face elements interfering with each other).\n\nerror_code: ErrorCode, optional\n\nError code associated with search intersection operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.SCAFFOLDERBADINPUTEMPTYTOPO.html#scaffolderbadinputemptytopo","title":"SCAFFOLDERBADINPUTEMPTYTOPO","text":"SCAFFOLDERBADINPUTEMPTYTOPO\n\n\n\nErrorCode.SCAFFOLDERBADINPUTEMPTYTOPO = 50\n\nIncorrect input. No topo faces or edges in input."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty FuseResults.warning_codes: List[WarningCode]\n\nWarning codes associated with the fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LocalSurferResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic LocalSurferResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the LocalSurferResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.SHELLBLGAPFACTORMINLIMIT.html#shellblgapfactorminlimit","title":"SHELLBLGAPFACTORMINLIMIT","text":"SHELLBLGAPFACTORMINLIMIT\n\n\n\nWarningCode.SHELLBLGAPFACTORMINLIMIT = 405\n\nAdjusted ShellBL gap factor to 0.001. As 0.001 is minimum value supported.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.graphics.Graphics.html#graphics","title":"Graphics","text":"Graphics\n\n\n\nclass ansys.meshing.prime.graphics.Graphics(model, use_trame=False)\n\nManages graphics in PyPrime.\n\nDeprecated since version 0.6.0: Use PrimePlotter instead.\n\nParameters\n\nmodel\n\nprime.Model\n\nModel to show.\n\nuse_trame\n\nbool, default: python:False\n\nWhether to use the Trame visualizer.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportCadParams.set_default(append=None, ansys_release=None, cad_reader_route=None, part_creation_type=None, geometry_transfer=None, length_unit=None, refacet=None, cad_refaceting_params=None, stitch_tolerance=None, cad_update_parameters=None, validate_shared_topology=None)\n\nSet the default values of the ImportCadParams object.\n\nParameters\n\nappend: bool, optional\n\nAppend imported CAD into existing model when true.\n\nansys_release: str, optional\n\nConfigures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\ncad_reader_route: CadReaderRoute, optional\n\nSpecify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\npart_creation_type: PartCreationType, optional\n\nCreate a part per CAD Model, Assembly, Part, Body.\n\ngeometry_transfer: bool, optional\n\nOption to enable transfer of geometry data (NURBS).\n\nlength_unit: LengthUnit, optional\n\nSpecify length unit for import.\n\nrefacet: bool, optional\n\nRefine or coarsen the CAD faceting based on refaceting parameters when true.\n\ncad_refaceting_params: CadRefacetingParams, optional\n\nSpecify refaceting parameters.\n\nstitch_tolerance: float, optional\n\nStitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\ncad_update_parameters: Dict[str, Union[str, int, float, bool]], optional\n\nSpecify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\nvalidate_shared_topology: bool, optional\n\nSpecify whether to validate the shared topology information."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FuseParams.use_absolute_tolerance.html#use_absolute_tolerance","title":"use_absolute_tolerance","text":"use_absolute_tolerance\n\n\n\nproperty FuseParams.use_absolute_tolerance: bool\n\nOption to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.WRAPPERLEAKPREVENTIONFAILED.html#wrapperleakpreventionfailed","title":"WRAPPERLEAKPREVENTIONFAILED","text":"WRAPPERLEAKPREVENTIONFAILED\n\n\n\nErrorCode.WRAPPERLEAKPREVENTIONFAILED = 3406\n\nWrapper leak prevention failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_INVALIDINPUTFILEFORGENUSZEROFITTING.html#iga_invalidinputfileforgenuszerofitting","title":"IGA_INVALIDINPUTFILEFORGENUSZEROFITTING","text":"IGA_INVALIDINPUTFILEFORGENUSZEROFITTING\n\n\n\nErrorCode.IGA_INVALIDINPUTFILEFORGENUSZEROFITTING = 2412\n\nInvalid model for genus-zero spline fitting."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaIGAResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportLSDynaIGAResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the ExportLSDynaIGAResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByThinStripParams.face_quality_measure.html#face_quality_measure","title":"face_quality_measure","text":"face_quality_measure\n\n\n\nproperty SearchByThinStripParams.face_quality_measure: FaceQualityMeasure\n\nQuality measure used for search strip of face elements."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MERGEPARTSWANDWOTOPO.html#mergepartswandwotopo","title":"MERGEPARTSWANDWOTOPO","text":"MERGEPARTSWANDWOTOPO\n\n\n\nErrorCode.MERGEPARTSWANDWOTOPO = 1302\n\nMerge parts with topology and parts without topology are not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMesh.html#automesh","title":"AutoMesh","text":"AutoMesh\n\n\n\nclass ansys.meshing.prime.AutoMesh(model)\n\nGenerates volume mesh.\n\nPerforms volume meshing using various volume meshing algorithms.\nFor example, with prisms.\n\nParameters\n\nmodel\n\nModel\n\nServer model to create AutoMesh object.\n\nMethods\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AutoMesh.html#examples-using-automesh","title":"AutoMesh > Examples using AutoMesh","text":"Examples using AutoMesh\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.imag.html#imag","title":"imag","text":"imag\n\n\n\nLSDynaFileFormatType.imag\n\nthe imaginary part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerResults.size_control_ids.html#size_control_ids","title":"size_control_ids","text":"size_control_ids\n\n\n\nproperty MeshStackerResults.size_control_ids: Iterable[int]\n\nList of ids of newly created size controls."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nScopeEntity.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.html#ansysmeshingprimeexamples","title":"ansys.meshing.prime.examples","text":"ansys.meshing.prime.examples\n\n\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nWrapRegion.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TrimmedSolidSplineCutMode.conjugate.html#conjugate","title":"conjugate","text":"conjugate\n\n\n\nTrimmedSolidSplineCutMode.conjugate(/)\n\nReturns self, the complex conjugate of any int."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricScaffolderParams.html#volumetricscaffolderparams","title":"VolumetricScaffolderParams","text":"VolumetricScaffolderParams\n\n\n\nclass ansys.meshing.prime.VolumetricScaffolderParams(model=None, absolute_dist_tol=None, only_check_exact_overlaps=None, json_data=None, **kwargs)\n\nParameters to control delete shadowed topofaces operation.\n\nParameters\n\nmodel: Model\n\nModel to create a VolumetricScaffolderParams object with default parameters.\n\nabsolute_dist_tol: float, optional\n\nSpecify distance tolerance between overlapping faces.\n\nonly_check_exact_overlaps: bool, optional\n\nCheck only for fully overlapping topofaces when true.\n\njson_data: dict, optional\n\nJSON dictionary to create a VolumetricScaffolderParams object with provided parameters.\n\nExamples\n\n>>> volumetric_scaffolder_params = prime.VolumetricScaffolderParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByFoldsResults.n_found.html#n_found","title":"n_found","text":"n_found\n\n\n\nproperty SearchByFoldsResults.n_found: int\n\nNumber of folds identified."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddThicknessResults.part_id.html#part_id","title":"part_id","text":"part_id\n\n\n\nproperty AddThicknessResults.part_id: int\n\nThe created thickness part id."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinStripType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nThinStripType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.KEEPBOTH.html#keepboth","title":"KEEPBOTH","text":"KEEPBOTH\n\n\n\nJoinSeparateMethod.KEEPBOTH = 2\n\nKeep both overlapping zonelets after joining."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryParams.html#surfacequalitysummaryparams","title":"SurfaceQualitySummaryParams","text":"SurfaceQualitySummaryParams\n\n\n\nclass ansys.meshing.prime.SurfaceQualitySummaryParams(model=None, face_quality_measures=None, scope=None, quality_limit=None, json_data=None, **kwargs)\n\nParameters to control surface quality summary results.\n\nParameters\n\nmodel: Model\n\nModel to create a SurfaceQualitySummaryParams object with default parameters.\n\nface_quality_measures: List[FaceQualityMeasure], optional\n\nList of face quality measures for surface quality diagnostics.\n\nscope: ScopeDefinition, optional\n\nScope the face zonelets for surface quality diagnostics.\n\nquality_limit: Iterable[float], optional\n\nQuality limit per face quality measure. If the quality limit is not specified, the default quality limit is used.\n\njson_data: dict, optional\n\nJSON dictionary to create a SurfaceQualitySummaryParams object with provided parameters.\n\nExamples\n\n>>> surface_quality_summary_params = prime.SurfaceQualitySummaryParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryParams.html#examples-using-surfacequalitysummaryparams","title":"SurfaceQualitySummaryParams > Examples using SurfaceQualitySummaryParams","text":"Examples using SurfaceQualitySummaryParams\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.smooth_dihedral_face_nodes.html#smooth_dihedral_face_nodes","title":"smooth_dihedral_face_nodes","text":"smooth_dihedral_face_nodes\n\n\n\nSurfaceUtilities.smooth_dihedral_face_nodes(zonelets, params)\n\nPerform a smoothing operation to eliminate sharp corners at locations where the input face zonelets intersect.\n\nParameters\n\nzonelets\n\nIterable[python:int]\n\nList of input face zonelet ids.\n\nparams\n\nSmoothDihedralFaceNodesParams\n\nParameters to control the smoothing operation.\n\nReturns\n\n:\n\n\n\nSmoothDihedralFaceNodesResults\n\nReturns a SmoothDihedralFaceNodesResults.\n\nReturn type\n\nSmoothDihedralFaceNodesResults\n\nExamples\n\n>>> result = surf_utils.smooth_dihedral_face_nodes(zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbAnalysisType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCdbAnalysisType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.BYANGLE.html#byangle","title":"BYANGLE","text":"BYANGLE\n\n\n\nSplineFeatureCaptureType.BYANGLE = 1\n\nUses angle for capturing features in spline."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectNonCircularHolesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic DetectNonCircularHolesParams.set_default(allow_curved_topo_faces=None, max_hole_length=None, min_hole_length=None, merge_edge_allow_self_close=None)\n\nSet the default values of the DetectNonCircularHolesParams object.\n\nParameters\n\nallow_curved_topo_faces: bool, optional\n\nOption to allow holes in curved topoface.\n\nmax_hole_length: float, optional\n\nMaximum length of holes.\n\nmin_hole_length: float, optional\n\nMinimum length of holes.\n\nmerge_edge_allow_self_close: bool, optional\n\nOption for merging self-closing edge loops."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneResults.warning_codes.html#warning_codes","title":"warning_codes","text":"warning_codes\n\n\n\nproperty FillHolesAtPlaneResults.warning_codes: List[WarningCode]\n\nWarning codes associated with operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BoundingBox.ymin.html#ymin","title":"ymin","text":"ymin\n\n\n\nproperty BoundingBox.ymin: float\n\nMinimal Y coordinate of the bounding box."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchParams.type.html#type","title":"type","text":"type\n\n\n\nproperty StitchParams.type: StitchType\n\nStitch type depending on nature of surface boundary edges to be stitched."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MeshStackerParams.max_offset_size.html#max_offset_size","title":"max_offset_size","text":"max_offset_size\n\n\n\nproperty MeshStackerParams.max_offset_size: float\n\nMaximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ControlData.get_periodic_control_by_name.html#get_periodic_control_by_name","title":"get_periodic_control_by_name","text":"get_periodic_control_by_name\n\n\n\nControlData.get_periodic_control_by_name(name)\n\nGet a periodic control by name.\n\nParameters\n\nname\n\npython:str\n\nName of the periodic control.\n\nReturns\n\n:\n\n\n\nPeriodicControl\n\nPeriodic control.\n\nReturn type\n\nPeriodicControl\n\nExamples\n\n>>> periodic_control = model.control_data.get_periodic_control_by_name(\"PeriodicControl-1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveResult.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty WrapperImproveResult.error_code: ErrorCode\n\nError code associated with a wrapper operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportMapdlCdbParams.html#importmapdlcdbparams","title":"ImportMapdlCdbParams","text":"ImportMapdlCdbParams\n\n\n\nclass ansys.meshing.prime.ImportMapdlCdbParams(model=None, drop_mid_nodes=None, append=None, json_data=None, **kwargs)\n\nParameters to control MAPDL CDB import settings.\n\nParameters\n\nmodel: Model\n\nModel to create a ImportMapdlCdbParams object with default parameters.\n\ndrop_mid_nodes: bool, optional\n\nOption to import quadratic mesh elements as linear by skipping mid nodes.\n\nappend: bool, optional\n\nOption to append imported cdb into existing model.\n\njson_data: dict, optional\n\nJSON dictionary to create a ImportMapdlCdbParams object with provided parameters.\n\nExamples\n\n>>> import_mapdl_cdb_params = prime.ImportMapdlCdbParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExtractFeatureParams.print_default()\n\nPrint the default values of ExtractFeatureParams object.\n\nExamples\n\n>>> ExtractFeatureParams.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperControl.set_suggested_name.html#set_suggested_name","title":"set_suggested_name","text":"set_suggested_name\n\n\n\nWrapperControl.set_suggested_name(name)\n\nSet the unique name for the wrapper control based on a suggested name.\n\nParameters\n\nname\n\npython:str\n\nSuggested name for the wrapper control.\n\nReturns\n\n:\n\n\n\nSetNameResults\n\nNewly assigned name of the wrapper control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> wrapper_control.set_suggested_name(\"wrapper_control1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.QuadToSplineParams.continuity.html#continuity","title":"continuity","text":"continuity\n\n\n\nproperty QuadToSplineParams.continuity: SplineContinuityType\n\nSpline Continuity options.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportBoundaryFittedSplineParams.id_offset.html#id_offset","title":"id_offset","text":"id_offset\n\n\n\nproperty ExportBoundaryFittedSplineParams.id_offset: int\n\nOffset value for IGA entity ids between parts."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.WRAPPER_SIZECONTROLNOTDEFINED.html#wrapper_sizecontrolnotdefined","title":"WRAPPER_SIZECONTROLNOTDEFINED","text":"WRAPPER_SIZECONTROLNOTDEFINED\n\n\n\nWarningCode.WRAPPER_SIZECONTROLNOTDEFINED = 6001\n\nNo size controls provided for wrapper."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FaceAndEdgeConnectivityResults.part_ids.html#part_ids","title":"part_ids","text":"part_ids\n\n\n\nproperty FaceAndEdgeConnectivityResults.part_ids: Iterable[int]\n\nPart ids for which face and edge connectivity data is available."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_scope.html#set_scope","title":"set_scope","text":"set_scope\n\n\n\nSizeControl.set_scope(scope)\n\nSet the scope for size control to evaluate.\n\nSize control uses scope to evaluate entities for which size field needs to be computed.\n\nParameters\n\nscope\n\nScopeDefinition\n\nScopeDefinition to scope entities for size field computation.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturn a SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> size_control.set_scope(prime.ScopeDefinition(model=model,\n>>>                        entity_type = ScopeEntity.FACEZONELETS,\n>>>                        evaluation_type = ScopeEvaluationType.LABELS,\n>>>                        label_expression = \"inlet\"))"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizeControl.set_scope.html#examples-using-sizecontrolset_scope","title":"set_scope > Examples using SizeControl.set_scope","text":"Examples using SizeControl.set_scope\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nSweepType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesParams.html#extractvolumesparams","title":"ExtractVolumesParams","text":"ExtractVolumesParams\n\n\n\nclass ansys.meshing.prime.ExtractVolumesParams(model=None, create_zone=None, suggested_zone_name=None, json_data=None, **kwargs)\n\nParameters to extract flow volumes.\n\nParameters\n\nmodel: Model\n\nModel to create a ExtractVolumesParams object with default parameters.\n\ncreate_zone: bool, optional\n\nOption to create zone for flow volumes extracted.\n\nsuggested_zone_name: str, optional\n\nName suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExtractVolumesParams object with provided parameters.\n\nExamples\n\n>>> extract_volumes_params = prime.ExtractVolumesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.real.html#real","title":"real","text":"real\n\n\n\nSizingType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_splines.html#get_splines","title":"get_splines","text":"get_splines\n\n\n\nPart.get_splines()\n\nGets the list of spline ids.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of spline ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> results = part.get_splines()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.INVALIDLASTASPECTRATIO.html#invalidlastaspectratio","title":"INVALIDLASTASPECTRATIO","text":"INVALIDLASTASPECTRATIO\n\n\n\nErrorCode.INVALIDLASTASPECTRATIO = 125\n\nInvalid last aspect ratio."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IMPORTABAQUSFAILEDWITHPARSINGFAILURE.html#importabaqusfailedwithparsingfailure","title":"IMPORTABAQUSFAILEDWITHPARSINGFAILURE","text":"IMPORTABAQUSFAILEDWITHPARSINGFAILURE\n\n\n\nErrorCode.IMPORTABAQUSFAILEDWITHPARSINGFAILURE = 16201\n\nImport Abaqus failed. Failed to parse file.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_second_order_hex_cells.html#n_second_order_hex_cells","title":"n_second_order_hex_cells","text":"n_second_order_hex_cells\n\n\n\nproperty PartSummaryResults.n_second_order_hex_cells: int\n\nNumber of second order hexahedral cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshParams.html#deletemeshparams","title":"DeleteMeshParams","text":"DeleteMeshParams\n\n\n\nclass ansys.meshing.prime.DeleteMeshParams(model=None, delete_mesh_on_connected_topo_edges=None, json_data=None, **kwargs)\n\nParameters to delete mesh on topoentities.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteMeshParams object with default parameters.\n\ndelete_mesh_on_connected_topo_edges: bool, optional\n\nOption to delete mesh on topoedges connected only to provided topoentities.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteMeshParams object with provided parameters.\n\nExamples\n\n>>> delete_mesh_params = prime.DeleteMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteMeshParams.html#examples-using-deletemeshparams","title":"DeleteMeshParams > Examples using DeleteMeshParams","text":"Examples using DeleteMeshParams\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineFeatureCaptureType.numerator.html#numerator","title":"numerator","text":"numerator\n\n\n\nSplineFeatureCaptureType.numerator\n\nthe numerator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetSizingResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic SetSizingResults.set_default(warning_codes=None, error_code=None)\n\nSet the default values of the SetSizingResults object.\n\nParameters\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the set sizing parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the set sizing parameters."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperCloseGapsResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic WrapperCloseGapsResult.print_default()\n\nPrint the default values of WrapperCloseGapsResult object.\n\nExamples\n\n>>> WrapperCloseGapsResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.UNSUPPORTEDFILEEXTENSIONFORMAPDLCDB.html#unsupportedfileextensionformapdlcdb","title":"UNSUPPORTEDFILEEXTENSIONFORMAPDLCDB","text":"UNSUPPORTEDFILEEXTENSIONFORMAPDLCDB\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORMAPDLCDB = 9007\n\nProvided file extension is not supported. Supported extension is .cdb."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.lucid.SurfaceScope.get_face_zonelets.html#get_face_zonelets","title":"get_face_zonelets","text":"get_face_zonelets\n\n\n\nSurfaceScope.get_face_zonelets(model, part_id)\n\nGet the list of face zonelets for the given part in the scope.\n\nParameters\n\nmodel\n\nModel\n\nPyPrimeMesh model.\n\npart_id\n\npython:int\n\nId of the part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturns the list of zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> face_zonelets = su.get_face_zonelets(model, 2)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.offset_distance.html#offset_distance","title":"offset_distance","text":"offset_distance\n\n\n\nproperty DetectAndTreatHolesParams.offset_distance: float\n\nOffset distance for creating offset edge.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#mesh-a-mid-surfaced-bracket-for-a-structural-analysis","title":"Mesh a mid-surfaced bracket for a structural analysis","text":"Mesh a mid-surfaced bracket for a structural analysis\n\nSummary: This example demonstrates how to use topology-based connection\nto generate conformal surface mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#objective","title":"Mesh a mid-surfaced bracket for a structural analysis > Objective","text":"Objective\n\nTo create conformal surface mesh, you can scaffold topofaces, topoedges, or both to\nconnect all the surface bodies and mesh the bracket with quad elements."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#procedure","title":"Mesh a mid-surfaced bracket for a structural analysis > Procedure","text":"Procedure\n\nLaunch Ansys Prime Server.\n\nImport the CAD geometry and create the part per the CAD model.\n\nScaffold topofaces and topoedges with a tolerance parameter.\n\nSurface mesh topofaces with a constant size and generate quad elements.\n\nWrite a CDB file for use in the APDL solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#launch-ansys-prime-server","title":"Mesh a mid-surfaced bracket for a structural analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#import-cad-geometry","title":"Mesh a mid-surfaced bracket for a structural analysis > Import CAD geometry","text":"Import CAD geometry\n\nDownload the bracket geometry (FMD) file exported by SpaceClaim.\nImport the CAD geometry.\nCreate the part per the CAD model for the topology-based connection."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#review-the-part","title":"Mesh a mid-surfaced bracket for a structural analysis > Review the part","text":"Review the part\n\nGet the part summary.\nDisplay the model to show edges by connection.\nUse keyboard shortcuts to switch between\nthe surface (s) and wireframe (w) representations.\nColor code for edge connectivity:\n\nRed: free\n\nBlack: double\n\nPurple: triple\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#connection","title":"Mesh a mid-surfaced bracket for a structural analysis > Connection","text":"Connection\n\nInitialize the connection tolerance and other parameters. (The connection\ntolerance is smaller than the target element size.)\nScaffold the topofaces, topoedges, or both with connection parameters."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#surface-mesh","title":"Mesh a mid-surfaced bracket for a structural analysis > Surface mesh","text":"Surface mesh\n\nInitialize surface meshing parameters.\nMesh topofaces with the constant size and generate quad elements.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#write-mesh","title":"Mesh a mid-surfaced bracket for a structural analysis > Write mesh","text":"Write mesh\n\nWrite a CDB file for use in the APDL solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#exit-the-pyprimemesh-session","title":"Mesh a mid-surfaced bracket for a structural analysis > Exit the PyPrimeMesh session","text":"Exit the PyPrimeMesh session\n\nTotal running time of the script: (0 minutes 23.089 seconds)\n\n\n\nDownload Jupyter notebook: 01_bracket_scaffold.ipynb\n\nDownload Python source code: 01_bracket_scaffold.py\n\nDownload zipped: 01_bracket_scaffold.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.STACKER_NONSTACKABLEVOLUMESFOUND.html#stacker_nonstackablevolumesfound","title":"STACKER_NONSTACKABLEVOLUMESFOUND","text":"STACKER_NONSTACKABLEVOLUMESFOUND\n\n\n\nErrorCode.STACKER_NONSTACKABLEVOLUMESFOUND = 10109\n\nSome volumes are not aligned in the stacking direction."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.cell_quality_measure.html#cell_quality_measure","title":"cell_quality_measure","text":"cell_quality_measure\n\n\n\nproperty VolumeQualityResultsPart.cell_quality_measure: CellQualityMeasure\n\nType of the cell quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.set_suggested_name.html#set_suggested_name","title":"set_suggested_name","text":"set_suggested_name\n\n\n\nPart.set_suggested_name(name)\n\nSet the unique name for the part to a suggested name.\n\nParameters\n\nname\n\npython:str\n\nSuggested name for the part.\n\nReturns\n\n:\n\n\n\nSetNameResults\n\nNewly suggested name for the part.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> part.set_suggested_name(\"part1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoFillHoleResult.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TopoFillHoleResult.print_default()\n\nPrint the default values of TopoFillHoleResult object.\n\nExamples\n\n>>> TopoFillHoleResult.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nSplineContinuityType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByIntersectionResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SearchByIntersectionResults.error_code: ErrorCode\n\nError code associated with search intersection operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.ALREADYVOLUMEMESHED.html#alreadyvolumemeshed","title":"ALREADYVOLUMEMESHED","text":"ALREADYVOLUMEMESHED\n\n\n\nErrorCode.ALREADYVOLUMEMESHED = 110\n\nVolume is already meshed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.OGRIDREFINEFAILED.html#ogridrefinefailed","title":"OGRIDREFINEFAILED","text":"OGRIDREFINEFAILED\n\n\n\nErrorCode.OGRIDREFINEFAILED = 65\n\nPost refinement of ShellBl quads failed.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic ExtractVolumesResults.print_default()\n\nPrint the default values of ExtractVolumesResults object.\n\nExamples\n\n>>> ExtractVolumesResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.RECOVERPERIODICSURFACESINVALIDSCOPE.html#recoverperiodicsurfacesinvalidscope","title":"RECOVERPERIODICSURFACESINVALIDSCOPE","text":"RECOVERPERIODICSURFACESINVALIDSCOPE\n\n\n\nErrorCode.RECOVERPERIODICSURFACESINVALIDSCOPE = 2910\n\nInvalid scope input for periodic surface recovery."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Connect.intersect_face_zonelets.html#intersect_face_zonelets","title":"intersect_face_zonelets","text":"intersect_face_zonelets\n\n\n\nConnect.intersect_face_zonelets(part_id, face_zonelet_ids, with_face_zonelet_ids, params)\n\nPerform intersection between specified face zonelets of the part with the given intersect parameters.\n\nParameters\n\npart_id\n\npython:int\n\nId of the part.\n\nface_zonelet_ids\n\nIterable[python:int]\n\nFace zonelets to be intersected.\n\nwith_face_zonelet_ids\n\nIterable[python:int]\n\nFace zonelets to be intersected with.\n\nparams\n\nIntersectParams\n\nParameters for intersection.\n\nReturns\n\n:\n\n\n\nConnectResults\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.intersect_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SFPeriodicParams.angle.html#angle","title":"angle","text":"angle\n\n\n\nproperty SFPeriodicParams.angle: float\n\nAngle in degrees."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_block_model_fmd.html#download_block_model_fmd","title":"download_block_model_fmd","text":"download_block_model_fmd\n\n\n\nansys.meshing.prime.examples.download_block_model_fmd(destination=None, force=False)\n\nDownload CAD file for the block model example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(block_model, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_block_model_fmd.html#examples-using-download_block_model_fmd","title":"download_block_model_fmd > Examples using download_block_model_fmd","text":"Examples using download_block_model_fmd\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py"},{"objectID":"Home","href":"examples/gallery_examples/gallery/12_import_from_pygeometry.html#import-a-geometry-from-pygeometry","title":"Import a geometry from PyGeometry","text":"Import a geometry from PyGeometry\n\nSummary: This example demonstrates how to create a simple geometry using\nPyGeometry and import it into PyPrimeMesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/12_import_from_pygeometry.html#procedure","title":"Import a geometry from PyGeometry > Procedure","text":"Procedure\n\nLaunch the Geometry service and create a simple geometry.\n\nLaunch Ansys Prime Server.\n\nCreate a CAD geometry with PyGeometry.\n\nImport the geometry into PyPrimeMesh.\n\nMesh and display the imported geometry.\n\nExit the PyPrimeMesh and PyGeometry sessions."},{"objectID":"Home","href":"examples/gallery_examples/gallery/12_import_from_pygeometry.html#create-the-geometry","title":"Import a geometry from PyGeometry > Create the geometry","text":"Create the geometry\n\nFirst we create a simple geometry using PyGeometry. The geometry is a plate\nwith a hole in the center:"},{"objectID":"Home","href":"examples/gallery_examples/gallery/12_import_from_pygeometry.html#import-the-geometry-into-pyprimemesh","title":"Import a geometry from PyGeometry > Import the geometry into PyPrimeMesh","text":"Import the geometry into PyPrimeMesh\n\nOnce the geometry is created, we can pass the Design object to PyPrimeMesh to\ncreate a mesh:"},{"objectID":"Home","href":"examples/gallery_examples/gallery/12_import_from_pygeometry.html#mesh-the-geometry-and-display-it","title":"Import a geometry from PyGeometry > Mesh the geometry and display it","text":"Mesh the geometry and display it\n\nWith the geometry imported, we can now mesh it and display the mesh:\n\nTotal running time of the script: (0 minutes 0.000 seconds)\n\n\n\nDownload Jupyter notebook: 12_import_from_pygeometry.ipynb\n\nDownload Python source code: 12_import_from_pygeometry.py\n\nDownload zipped: 12_import_from_pygeometry.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsResult.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic WrapperPatchFlowRegionsResult.set_default(warning_codes=None, error_code=None, id=None, name=None)\n\nSet the default values of the WrapperPatchFlowRegionsResult object.\n\nParameters\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the patch holes operation.\n\nerror_code: ErrorCode, optional\n\nError code associated with a patch holes operation.\n\nid: int, optional\n\nId of part created with hole patches.\n\nname: str, optional\n\nName of part created with hole patches."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MICROSTRUCTUREINVALIDELEMENTTYPE.html#microstructureinvalidelementtype","title":"MICROSTRUCTUREINVALIDELEMENTTYPE","text":"MICROSTRUCTUREINVALIDELEMENTTYPE\n\n\n\nErrorCode.MICROSTRUCTUREINVALIDELEMENTTYPE = 13000\n\nInvalid input provided. Invalid Element Type."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MergeZoneletsResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MergeZoneletsResults.set_default(merged_zonelets=None, error_code=None)\n\nSet the default values of the MergeZoneletsResults object.\n\nParameters\n\nmerged_zonelets: Iterable[int], optional\n\nIds of zonelets to which input zonelets are merged.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty FillHolesAtPlaneResults.error_code: ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LengthUnit.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod LengthUnit.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.id.html#id","title":"id","text":"id\n\n\n\nproperty Part.id\n\nGet the id of Part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationParams.html#checkfacedeviationparams","title":"CheckFaceDeviationParams","text":"CheckFaceDeviationParams\n\n\n\nclass ansys.meshing.prime.CheckFaceDeviationParams(model=None, distance=None, json_data=None, **kwargs)\n\nParameters used for check face deviation operations.\n\nParameters\n\nmodel: Model\n\nModel to create a CheckFaceDeviationParams object with default parameters.\n\ndistance: float, optional\n\nDistance above which deviated entities are collected.\n\njson_data: dict, optional\n\nJSON dictionary to create a CheckFaceDeviationParams object with provided parameters.\n\nExamples\n\n>>> check_face_deviation_params = prime.CheckFaceDeviationParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderRepairMode.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nScaffolderRepairMode.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPair.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic MatchPair.set_default(source_surfaces=None, target_surfaces=None, target_type=None, bc_pairs=None)\n\nSet the default values of the MatchPair object.\n\nParameters\n\nsource_surfaces: Iterable[int], optional\n\nIds of source surfaces.\n\ntarget_surfaces: Iterable[int], optional\n\nIds of target surfaces.\n\ntarget_type: MatchPairTargetType, optional\n\nOption to specify target surface type.\n\nbc_pairs: List[BCPair], optional\n\nArray of boundary condition pairs."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.project_on_geometry.html#project_on_geometry","title":"project_on_geometry","text":"project_on_geometry\n\n\n\nproperty OptimizeQuadMeshParams.project_on_geometry: bool\n\nOption to project on geometry when meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TransformResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TransformResults.print_default()\n\nPrint the default values of TransformResults object.\n\nExamples\n\n>>> TransformResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ComputeVolumesParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ComputeVolumesParams.set_default(volume_naming_type=None, create_zones_type=None, priority_ordered_names=None, material_point_names=None)\n\nSet the default values of the ComputeVolumesParams object.\n\nParameters\n\nvolume_naming_type: VolumeNamingType, optional\n\nIndicates source type used to compute zone name for volumes.\n\ncreate_zones_type: CreateVolumeZonesType, optional\n\nOption to control volume zone creation for volumes.\n\npriority_ordered_names: List[str], optional\n\nZone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\nmaterial_point_names: List[str], optional\n\nMaterial point names provided to identify volumes. Material point names will have precedence over the volume names."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MaterialPointManager.create_material_point.html#create_material_point","title":"create_material_point","text":"create_material_point\n\n\n\nMaterialPointManager.create_material_point(suggested_name, coords, params)\n\nCreates a material point at the given coordinates.\n\nParameters\n\nsuggested_name\n\npython:str\n\nName suggested for the material point.\n\ncoords\n\nIterable[python:float]\n\nCoordinates of material point.\n\nparams\n\nCreateMaterialPointParams\n\nParameters used to create material point.\n\nReturns\n\n:\n\n\n\nCreateMaterialPointResults\n\nReturns the result with material point name and id.\n\nReturn type\n\nCreateMaterialPointResults\n\nNotes\n\nA material point is created on calling this API.\n\nExamples\n\n>>> material_point_results = model.control_data.create_material_point(\"Fluid\", [1.0,2,0,3.0], params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.label_name.html#label_name","title":"label_name","text":"label_name\n\n\n\nproperty ExtractFeatureParams.label_name: str\n\nLabel name to be assigned to extracted features."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SizingType.HARD.html#hard","title":"HARD","text":"HARD\n\n\n\nSizingType.HARD = 2\n\nDenotes the size control type is hard."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdResults.html#searchinfobyregisteridresults","title":"SearchInfoByRegisterIdResults","text":"SearchInfoByRegisterIdResults\n\n\n\nclass ansys.meshing.prime.SearchInfoByRegisterIdResults(model=None, error_code=None, n_found=None, locations_found=None, face_zonelets_found=None, json_data=None, **kwargs)\n\nResult structure containing information on registered face elements.\n\nParameters\n\nmodel: Model\n\nModel to create a SearchInfoByRegisterIdResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the retreiving information based on register id.\n\nn_found: int, optional\n\nNumber of registered face elements.\n\nlocations_found: Iterable[float], optional\n\nLocations of each cluster of registered face elements.\n\nface_zonelets_found: Iterable[int], optional\n\nIds of the face zonelets containing atleast one registered face element.\n\njson_data: dict, optional\n\nJSON dictionary to create a SearchInfoByRegisterIdResults object with provided parameters.\n\nExamples\n\n>>> search_info_by_register_id_results = prime.SearchInfoByRegisterIdResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TopoData.get_mesh_zonelets_of_topo_faces.html#get_mesh_zonelets_of_topo_faces","title":"get_mesh_zonelets_of_topo_faces","text":"get_mesh_zonelets_of_topo_faces\n\n\n\nTopoData.get_mesh_zonelets_of_topo_faces(topo_faces)\n\nGet the mesh face zonelets for the provided topoface ids.\n\nParameters\n\ntopo_faces\n\nIterable[python:int]\n\nIds of the topofaces.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the mesh face zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> mesh_face_zonelets = topo_data.get_mesh_zonelets_of_topo_faces(topo_faces)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperPatchFlowRegionsParams.size_field_ids.html#size_field_ids","title":"size_field_ids","text":"size_field_ids\n\n\n\nproperty WrapperPatchFlowRegionsParams.size_field_ids: Iterable[int]\n\nUsed to define size field based octree refinement.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.set_target_scope.html#set_target_scope","title":"set_target_scope","text":"set_target_scope\n\n\n\nThinVolumeControl.set_target_scope(entities)\n\nSets the target surface scope of thin volume control.\n\nParameters\n\nentities\n\nScopeDefinition\n\nScope definition for target face entities.\n\nReturns\n\n:\n\n\n\nSetScopeResults\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = thin_vol_ctrl.set_target_scope(entities)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ThinVolumeControl.set_target_scope.html#examples-using-thinvolumecontrolset_target_scope","title":"set_target_scope > Examples using ThinVolumeControl.set_target_scope","text":"Examples using ThinVolumeControl.set_target_scope\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ConnectResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ConnectResults.error_code: ErrorCode\n\nError Code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.shell_thickness.html#shell_thickness","title":"shell_thickness","text":"shell_thickness\n\n\n\nproperty IGAUnstructuredSplineSurf.shell_thickness: float\n\nThickness of shell."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceDiagnosticSummaryParams.compute_self_intersections.html#compute_self_intersections","title":"compute_self_intersections","text":"compute_self_intersections\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_self_intersections: bool\n\nControl to identify face intersections are present or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreCellElementType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nHexCoreCellElementType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartZonelets.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic PartZonelets.set_default(part_id=None, face_zonelets=None)\n\nSet the default values of the PartZonelets object.\n\nParameters\n\npart_id: int, optional\n\nId of part.\n\nface_zonelets: Iterable[int], optional\n\nList of face zonelet ids available in the part."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RefineAtContactsParams.relative_tolerance.html#relative_tolerance","title":"relative_tolerance","text":"relative_tolerance\n\n\n\nproperty RefineAtContactsParams.relative_tolerance: bool\n\nOption to specify the contact tolerance is relative or absolute."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.NOTSUPPORTEDFORTOPOLOGYPART.html#notsupportedfortopologypart","title":"NOTSUPPORTEDFORTOPOLOGYPART","text":"NOTSUPPORTEDFORTOPOLOGYPART\n\n\n\nErrorCode.NOTSUPPORTEDFORTOPOLOGYPART = 1200\n\nNot supported for part with topology data."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.merge_zonelets.html#merge_zonelets","title":"merge_zonelets","text":"merge_zonelets\n\n\n\nPart.merge_zonelets(zonelets, params)\n\nMerge zonelets.\n\nParameters\n\nzonelets\n\nIterable[python:int]\n\nIds of zonelets to be merged.\n\nparams\n\nMergeZoneletsParams\n\nParameters to merge zonelets.\n\nReturns\n\n:\n\n\n\nMergeZoneletsResults\n\nReturns the MergeZoneletsResults.\n\nReturn type\n\nMergeZoneletsResults\n\nExamples\n\nparams = prime.MergeZoneletsParams(model = model)\nresults = part.merge_zonelets(zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIResults.html#createboiresults","title":"CreateBOIResults","text":"CreateBOIResults\n\n\n\nclass ansys.meshing.prime.CreateBOIResults(model=None, error_code=None, part_id=None, json_data=None, **kwargs)\n\nResult structure associated with BOI creation of zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateBOIResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\npart_id: int, optional\n\nThe BOI part id.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateBOIResults object with provided parameters.\n\nExamples\n\n>>> create_boiresults = prime.CreateBOIResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.compute_topo_volumes.html#compute_topo_volumes","title":"compute_topo_volumes","text":"compute_topo_volumes\n\n\n\nPart.compute_topo_volumes(params)\n\nCompute topovolumes by identifying closed volumes defined by topofaces of the part.\n\nParameters\n\nparams\n\nComputeVolumesParams\n\nParameters to compute topovolumes.\n\nReturns\n\n:\n\n\n\nComputeTopoVolumesResults\n\nReturn the ComputeTopoVolumesResults.\n\nReturn type\n\nComputeTopoVolumesResults\n\nExamples\n\n>>> params = prime.ComputeVolumesParams(model = model, create_zones_type = prime.CreateVolumeZonesType.PERVOLUME)\n>>> results = part.compute_topo_volumes(params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_tri_faces.html#n_tri_faces","title":"n_tri_faces","text":"n_tri_faces\n\n\n\nproperty PartSummaryResults.n_tri_faces: int\n\nNumber of triangular faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScopeEntity.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nScopeEntity.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchInfoByRegisterIdResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic SearchInfoByRegisterIdResults.print_default()\n\nPrint the default values of SearchInfoByRegisterIdResults object.\n\nExamples\n\n>>> SearchInfoByRegisterIdResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateMaterialPointResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic CreateMaterialPointResults.print_default()\n\nPrint the default values of CreateMaterialPointResults object.\n\nExamples\n\n>>> CreateMaterialPointResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PeriodicControlParams.center.html#center","title":"center","text":"center\n\n\n\nproperty PeriodicControlParams.center: Iterable[float]\n\nCenter coordinates."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PartSummaryResults.n_second_order_tet_cells.html#n_second_order_tet_cells","title":"n_second_order_tet_cells","text":"n_second_order_tet_cells\n\n\n\nproperty PartSummaryResults.n_second_order_tet_cells: int\n\nNumber of second order tetrahedral cells."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.deactivate_volumetric_size_fields.html#deactivate_volumetric_size_fields","title":"deactivate_volumetric_size_fields","text":"deactivate_volumetric_size_fields\n\n\n\nModel.deactivate_volumetric_size_fields(size_field_ids)\n\nDeactivate the size fields with the given size field ids.\n\nParameters\n\nsize_field_ids\n\nIterable[python:int]\n\nList of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.deactivate_volumetric_size_fields(size_field_ids)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.island_tol.html#island_tol","title":"island_tol","text":"island_tol\n\n\n\nproperty WrapperImproveQualityParams.island_tol: float\n\nRelative face count of smallest island."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeNamingType.is_integer.html#is_integer","title":"is_integer","text":"is_integer\n\n\n\nVolumeNamingType.is_integer(/)\n\nReturns True. Exists for duck type compatibility with float.is_integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.NOCADGEOMETRYPROJECTONFACETS.html#nocadgeometryprojectonfacets","title":"NOCADGEOMETRYPROJECTONFACETS","text":"NOCADGEOMETRYPROJECTONFACETS\n\n\n\nWarningCode.NOCADGEOMETRYPROJECTONFACETS = 7501\n\nCAD geometry not found for some or all topo entities. Projected on facets for those topo entites."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportAbaqusResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ImportAbaqusResults.set_default(summary_log=None, error_code=None, warning_codes=None)\n\nSet the default values of the ImportAbaqusResults object.\n\nParameters\n\nsummary_log: str, optional\n\nSummary log for the import operation in json format.\n\nerror_code: ErrorCode, optional\n\nError code associated with failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with Abaqus import operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreTransitionLayerType.denominator.html#denominator","title":"denominator","text":"denominator\n\n\n\nHexCoreTransitionLayerType.denominator\n\nthe denominator of a rational number in lowest terms"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.TriangulateResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic TriangulateResults.print_default()\n\nPrint the default values of TriangulateResults object.\n\nExamples\n\n>>> TriangulateResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod CadRefacetingResolution.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.JoinSeparateMethod.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nJoinSeparateMethod.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ZoneMeshResult.zone_name.html#zone_name","title":"zone_name","text":"zone_name\n\n\n\nproperty ZoneMeshResult.zone_name: str\n\nName of the zone where the elements belong to.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WarningCode.VT_SKIPPEDENTITIESINDIFFERENTZONES.html#vt_skippedentitiesindifferentzones","title":"VT_SKIPPEDENTITIESINDIFFERENTZONES","text":"VT_SKIPPEDENTITIESINDIFFERENTZONES\n\n\n\nWarningCode.VT_SKIPPEDENTITIESINDIFFERENTZONES = 100005\n\nInput contains entities in different zones which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LSDynaFileFormatType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nLSDynaFileFormatType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ScaffolderResults.error_code: ErrorCode\n\nError code associated with scaffold operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SweepType.html#sweeptype","title":"SweepType","text":"SweepType\n\n\n\nclass ansys.meshing.prime.SweepType(*values)\n\nProvides the Sweep Mesh Decomposition type.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractVolumesResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExtractVolumesResults.set_default(error_code=None, volumes=None, warning_codes=None, assigned_zone_name=None, face_zonelets_without_volumes=None)\n\nSet the default values of the ExtractVolumesResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nvolumes: Iterable[int], optional\n\nIds of computed volumes.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the compute volumes.\n\nassigned_zone_name: str, optional\n\nAssigned name of zone for extracted flow volumes.\n\nface_zonelets_without_volumes: Iterable[int], optional\n\nIds of face zonelets for which volumes were not extracted."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.VOLUMESNOTUPTODATE.html#volumesnotuptodate","title":"VOLUMESNOTUPTODATE","text":"VOLUMESNOTUPTODATE\n\n\n\nErrorCode.VOLUMESNOTUPTODATE = 112\n\nVolumes are not updated."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractedFeatureIds.html#extractedfeatureids","title":"ExtractedFeatureIds","text":"ExtractedFeatureIds\n\n\n\nclass ansys.meshing.prime.ExtractedFeatureIds(model=None, part_id=None, new_edge_zonelets=None, json_data=None, **kwargs)\n\nContains ids of the features extracted.\n\nParameters\n\nmodel: Model\n\nModel to create a ExtractedFeatureIds object with default parameters.\n\npart_id: int, optional\n\nId of the part from which edge zonelets are extracted.\n\nnew_edge_zonelets: Iterable[int], optional\n\nIds of new edge zonelets extracted.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExtractedFeatureIds object with provided parameters.\n\nExamples\n\n>>> extracted_feature_ids = prime.ExtractedFeatureIds(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VTComposerResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic VTComposerResults.print_default()\n\nPrint the default values of VTComposerResults object.\n\nExamples\n\n>>> VTComposerResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesParams.html#subtractvolumesparams","title":"SubtractVolumesParams","text":"SubtractVolumesParams\n\n\n\nclass ansys.meshing.prime.SubtractVolumesParams(model=None, ignore_face_zonelets=None, check_cutters=None, keep_cutters=None, json_data=None, **kwargs)\n\nParameters to control the volume subtract operation.\n\nParameters\n\nmodel: Model\n\nModel to create a SubtractVolumesParams object with default parameters.\n\nignore_face_zonelets: Iterable[int], optional\n\nFace zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\ncheck_cutters: bool, optional\n\nOption to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\nkeep_cutters: bool, optional\n\nOption to retain cutter volumes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a SubtractVolumesParams object with provided parameters.\n\nExamples\n\n>>> subtract_volumes_params = prime.SubtractVolumesParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateCapResults.html#createcapresults","title":"CreateCapResults","text":"CreateCapResults\n\n\n\nclass ansys.meshing.prime.CreateCapResults(model=None, error_code=None, created_face_zonelets=None, json_data=None, **kwargs)\n\nResults associated with create cap on face zonelets.\n\nParameters\n\nmodel: Model\n\nModel to create a CreateCapResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\ncreated_face_zonelets: Iterable[int], optional\n\nIds of cap face zonelets created.\n\njson_data: dict, optional\n\nJSON dictionary to create a CreateCapResults object with provided parameters.\n\nExamples\n\n>>> create_cap_results = prime.CreateCapResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.StitchType.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nStitchType.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceUtilities.fix_invalid_normal_nodes_of_face_zonelets.html#fix_invalid_normal_nodes_of_face_zonelets","title":"fix_invalid_normal_nodes_of_face_zonelets","text":"fix_invalid_normal_nodes_of_face_zonelets\n\n\n\nSurfaceUtilities.fix_invalid_normal_nodes_of_face_zonelets(part_id, face_zonelets, params)\n\nCreate nuggets to fix invalid normal at nodes of the given face zonelets.\n\nParameters\n\npart_id\n\npython:int\n\nPart id of the given face zonelets. Nuggets created are associated to the given part.\n\nface_zonelets\n\nIterable[python:int]\n\nIds of face zonelets used to find invalid normal nodes.\n\nparams\n\nFixInvalidNormalNodeParams\n\nParameters to find invalid normal nodes and fix them.\n\nReturns\n\n:\n\n\n\nFixInvalidNormalNodeResults\n\nReturns the FixInvalidNormalNodeResults.\n\nReturn type\n\nFixInvalidNormalNodeResults\n\nExamples\n\n>>> params = prime.FixInvalidNormalNodeParams(model = model)\n>>> results = surface_utils.fix_invalid_normal_nodes_of_face_zonelets(part_id, face_zonelets, params)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExtractFeatureParams.feature_angle.html#feature_angle","title":"feature_angle","text":"feature_angle\n\n\n\nproperty ExtractFeatureParams.feature_angle: float\n\nAngle used to capture face features to be  extracted as edges."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.IGAUnstructuredSplineSurf.average_mesh_size.html#average_mesh_size","title":"average_mesh_size","text":"average_mesh_size\n\n\n\nproperty IGAUnstructuredSplineSurf.average_mesh_size: float\n\nReference length to compute deviation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SetLeakPreventionsResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SetLeakPreventionsResults.error_code: ErrorCode\n\nError code associated with the set leak preventions."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CadRefacetingResolution.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nCadRefacetingResolution.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.html#splinecontinuitytype","title":"SplineContinuityType","text":"SplineContinuityType\n\n\n\nclass ansys.meshing.prime.SplineContinuityType(*values)\n\nSpline Continuity types.\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.PERIODICSURFACESNOTSUPPORTEDFORPRISMS.html#periodicsurfacesnotsupportedforprisms","title":"PERIODICSURFACESNOTSUPPORTEDFORPRISMS","text":"PERIODICSURFACESNOTSUPPORTEDFORPRISMS\n\n\n\nErrorCode.PERIODICSURFACESNOTSUPPORTEDFORPRISMS = 135\n\nPeriodic surfaces selected for prism generation are not supported."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportCadParams.validate_shared_topology.html#validate_shared_topology","title":"validate_shared_topology","text":"validate_shared_topology\n\n\n\nproperty ImportCadParams.validate_shared_topology: bool\n\nSpecify whether to validate the shared topology information."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.IGA_HREFINEMENTFAILED.html#iga_hrefinementfailed","title":"IGA_HREFINEMENTFAILED","text":"IGA_HREFINEMENTFAILED\n\n\n\nErrorCode.IGA_HREFINEMENTFAILED = 2406\n\nH-refinement of spline failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportLSDynaIgaKeywordFileParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic ExportLSDynaIgaKeywordFileParams.set_default()\n\nSet the default values of the ExportLSDynaIgaKeywordFileParams object."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SubtractVolumesResults.html#subtractvolumesresults","title":"SubtractVolumesResults","text":"SubtractVolumesResults\n\n\n\nclass ansys.meshing.prime.SubtractVolumesResults(model=None, error_code=None, warning_codes=None, json_data=None, **kwargs)\n\nResults of the volume subtract operation.\n\nParameters\n\nmodel: Model\n\nModel to create a SubtractVolumesResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with the volume subtract operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the volume subtract operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a SubtractVolumesResults object with provided parameters.\n\nExamples\n\n>>> subtract_volumes_results = prime.SubtractVolumesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"user_guide/multizone.html#multizone-controls","title":"MultiZone controls","text":"MultiZone controls\n\nThis is a beta feature. API behavior and implementation may change in future.\n\nThe MultiZoneControl class provides automatic geometry decomposition into mapped (sweepable) regions and free regions.\nMapped (sweepable) regions are filled with hexahedral elements and free regions are filled with non-hexahedral elements.\nWhen you perform MultiZone Method meshing, all regions are meshed with a pure hexahedral mesh if possible.\n\nThe AutoMesh class lets you to automatically create the hex mesh on the scoped bodies using MultiZone meshing algorithms.\nAutoMesh.mesh() function lets you  perform MultiZone meshing with the given MultiZone control.\n\nThe following example shows to apply a MultiZone control on a body:\n\nStart the PyPrimeMesh client and read the model. The model is made up of two topo volumes that share a connected topo face between them. The two topo volumes have volume zones defined. The left volume zone is solid1 and right is solid.\n\nOutput:\n\nInitialize the MultiZone control. MultiZone control sets the parameters and controls used for MultiZone meshing.\n\n\n\nDefine the volume scope and surface scope within the model and apply the volume scope and surface scope to the Multizone Control. In this example, volume scope is scoped specifically to “solid1” to show the difference between the MultiZone mesh and automesh\n\nUsing the string “*” as the expression for parts, labels, and zones for the surface scope includes all the available entities in the Multizone control.\n\nSets the MultiZone sizing parameters to initialize MultiZone sizing control parameters.\n\nWhen you provide the sizefield, MultiZone method uses the provided sizefield and impacts the MultiZone mesh.\n\nOutput:\n\nSome points to remember while performing MultiZone Meshing:\n\nMultiZone Meshing supports only topology.\n\nIf the MultiZone meshing scopes only a few bodies of a multibody part, the remaining bodies of the part are auto meshed conformally.\n\nAfter creating the MultiZone control, you should specify its id in the automesh params for it to be considered for MultiZone meshing.\n\nWhen you use the MultiZone mesh method in combination with other mesh methods in a multibody part, the bodies are meshed with conformally.\nFor example, in the model below, the multibody part meshes with the MultiZone Method and AutoMesh.\n\nSometimes MultiZone is not automatically able to decompose a geometry into sweepable regions, though such decomposition may be possible.\nFor example, in the model below the MultiZone mesh produces free mesh.\n\nWhen you scope the source and target faces to MultiZone, MultiZone automates the geometry decomposition and generates the pure hex mesh\ninto sweepable regions to produce a purely hex mesh. In the below images, if the faces highlighted in green\ncolor are scoped as source and target faces, MultiZone produces a purely hex mesh on the source and target faces."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.OptimizeQuadMeshParams.html#optimizequadmeshparams","title":"OptimizeQuadMeshParams","text":"OptimizeQuadMeshParams\n\n\n\nclass ansys.meshing.prime.OptimizeQuadMeshParams(model=None, suppress_topo_edge_and_mesh_cleanup=None, edge_mesh_constant_size=None, surface_mesh_constant_size=None, generate_quads=None, project_on_geometry=None, delete_interior_nodes_params=None, json_data=None, **kwargs)\n\nParameters for optimize quad mesh operations.\n\nParameters\n\nmodel: Model\n\nModel to create a OptimizeQuadMeshParams object with default parameters.\n\nsuppress_topo_edge_and_mesh_cleanup: bool, optional\n\nOption to suppress topoedges and clean up mesh.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nedge_mesh_constant_size: float, optional\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size: float, optional\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ngenerate_quads: bool, optional\n\nOption to generate quadrilateral surface mesh.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry: bool, optional\n\nOption to project on geometry when meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes_params: DeleteInteriorNodesParams, optional\n\nParameters to control delete interior nodes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a OptimizeQuadMeshParams object with provided parameters.\n\nExamples\n\n>>> optimize_quad_mesh_params = prime.OptimizeQuadMeshParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddToZoneResults.print_default.html#print_default","title":"print_default","text":"print_default\n\n\n\nstatic AddToZoneResults.print_default()\n\nPrint the default values of AddToZoneResults object.\n\nExamples\n\n>>> AddToZoneResults.print_default()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SurfaceQualitySummaryResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty SurfaceQualitySummaryResults.error_code: ErrorCode\n\nError code associated with the surface quality summary."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CheckFaceDeviationParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic CheckFaceDeviationParams.set_default(distance=None)\n\nSet the default values of the CheckFaceDeviationParams object.\n\nParameters\n\ndistance: float, optional\n\nDistance above which deviated entities are collected."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MultiZoneSizingParams.use_volumetric_size_field.html#use_volumetric_size_field","title":"use_volumetric_size_field","text":"use_volumetric_size_field\n\n\n\nproperty MultiZoneSizingParams.use_volumetric_size_field: bool\n\nDefines whether to use size field for MultiZone meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#mesh-a-pcb-for-structural-thermal-analysis","title":"Mesh a PCB for structural thermal analysis","text":"Mesh a PCB for structural thermal analysis\n\nSummary: This example demonstrates how to mesh a printed circuit board\nwith mainly hexahedral elements for structural thermal simulation using the volume sweeper."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#objective","title":"Mesh a PCB for structural thermal analysis > Objective","text":"Objective\n\nThis example uses the volume sweeper to mesh the solids of a printed circuit board for a\nstructural thermal analysis using predominantly hexahedral elements."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#procedure","title":"Mesh a PCB for structural thermal analysis > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance and connect the PyPrimeMesh client.\n\nRead the CAD geometry.\n\nCreate a base face, projecting edge loops and imprinting to capture the geometry.\n\nSurface mesh the base face with quad elements.\n\nStack the base face mesh through the volumes to create a mainly hexahedral volume mesh.\n\nWrite the mesh for the structural thermal analysis."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#launch-ansys-prime-server","title":"Mesh a PCB for structural thermal analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch the Ansys Prime Server instance and connect the client.\nGet the client model and instantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#import-geometry","title":"Mesh a PCB for structural thermal analysis > Import geometry","text":"Import geometry\n\nDownload the PCB geometry (PMDAT) file.\nImport the geometry.\nDisplay the imported geometry. Purple edges indicate that the geometry is\nconnected and the topology is shared between the different volumes.\nThis means that the mesh is also to be connected between volumes.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#create-base-face","title":"Mesh a PCB for structural thermal analysis > Create base face","text":"Create base face\n\nDefine stacker parameters:\n\nSet the direction vector for defining stacking.\n\nSet the maximum offset size for mesh layers created by the stacker method.\n\nSet the base faces to delete after stacking.\n\nCreate the base face from the part and volumes.\nDefine a label for the generated base faces and display.\nWhen coloured by zonelet, the display shows the imprints\non the base face.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#surface-mesh-base-face","title":"Mesh a PCB for structural thermal analysis > Surface mesh base face","text":"Surface mesh base face\n\nQuad surface mesh the generated base faces for stacking.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#stack-base-face","title":"Mesh a PCB for structural thermal analysis > Stack base face","text":"Stack base face\n\nCreate a mainly hexahedral volume mesh using the stacker method.\nDisplay the volume mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#write-mesh","title":"Mesh a PCB for structural thermal analysis > Write mesh","text":"Write mesh\n\nWrite a CDB file."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#exit-pyprimemesh","title":"Mesh a PCB for structural thermal analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (0 minutes 30.783 seconds)\n\n\n\nDownload Jupyter notebook: 05_pcb_stacker.ipynb\n\nDownload Python source code: 05_pcb_stacker.py\n\nDownload zipped: 05_pcb_stacker.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CdbSimulationType.to_bytes.html#to_bytes","title":"to_bytes","text":"to_bytes\n\n\n\nCdbSimulationType.to_bytes(/, length=1, byteorder='big', *, signed=False)\n\nReturn an array of bytes representing an integer.\n\nlength\n\nLength of bytes object to use.  An OverflowError is raised if the\ninteger is not representable with the given number of bytes.  Default\nis length 1.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nDetermines whether two’s complement is used to represent the integer.\nIf signed is False and a negative integer is given, an OverflowError\nis raised."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SolverType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SolverType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapRegion.bit_length.html#bit_length","title":"bit_length","text":"bit_length\n\n\n\nWrapRegion.bit_length(/)\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.CreateBOIParams.side_scale.html#side_scale","title":"side_scale","text":"side_scale\n\n\n\nproperty CreateBOIParams.side_scale: float\n\nBOI side scaling factor."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zonelets.html#get_face_zonelets","title":"get_face_zonelets","text":"get_face_zonelets\n\n\n\nPart.get_face_zonelets()\n\nGet the face zonelets of a part.\n\nReturns\n\n:\n\n\n\nIterable[python:int]\n\nReturn the ids of face zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = part.get_face_zonelets()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Part.get_face_zonelets.html#examples-using-partget_face_zonelets","title":"get_face_zonelets > Examples using Part.get_face_zonelets","text":"Examples using Part.get_face_zonelets\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.WrapperImproveQualityParams.html#wrapperimprovequalityparams","title":"WrapperImproveQualityParams","text":"WrapperImproveQualityParams\n\n\n\nclass ansys.meshing.prime.WrapperImproveQualityParams(model=None, target_skewness=None, island_count=None, island_tol=None, overlap_count=None, overlap_tol=None, resolve_spikes=None, resolve_intersections=None, inflate_dihedral_face_nodes=None, resolve_invalid_node_normals=None, aggressively=None, sharp_angle=None, geom_zonelets=None, number_of_threads=None, json_data=None, **kwargs)\n\nWrapperImproveQualityParams defines parameters to improve wrapper part.\n\nParameters\n\nmodel: Model\n\nModel to create a WrapperImproveQualityParams object with default parameters.\n\ntarget_skewness: float, optional\n\nTarget skewness.\n\nisland_count: int, optional\n\nFace count of smallest island.\n\nisland_tol: float, optional\n\nRelative face count of smallest island.\n\noverlap_count: int, optional\n\nFace count of non-manifold overlap.\n\noverlap_tol: float, optional\n\nRelative face count of non-manifold overlap.\n\nresolve_spikes: bool, optional\n\nControl to perform removing spikes or not.\n\nresolve_intersections: bool, optional\n\nControl to resolve face intersections or not.\n\ninflate_dihedral_face_nodes: bool, optional\n\nControl to resolve face dihedral angle by inflating opposite nodes or not.\n\nresolve_invalid_node_normals: bool, optional\n\nControl to resolve invalid node normals by inflating opposite nodes or not.\n\naggressively: bool, optional\n\nControl to improve surfaces aggressively or not.\n\nsharp_angle: float, optional\n\nMaximum off feature sharp node angle.\n\ngeom_zonelets: Iterable[int], optional\n\nAssociated underlying geometry zonelet ids.\n\nnumber_of_threads: int, optional\n\nNumber of threads for multithreading.\n\njson_data: dict, optional\n\nJSON dictionary to create a WrapperImproveQualityParams object with provided parameters.\n\nExamples\n\n>>> wrapper_improve_quality_params = prime.WrapperImproveQualityParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ScaffolderSplitResults.html#scaffoldersplitresults","title":"ScaffolderSplitResults","text":"ScaffolderSplitResults\n\n\n\nclass ansys.meshing.prime.ScaffolderSplitResults(model=None, new_faces=None, error_code=None, json_data=None, **kwargs)\n\nResult structure associated to split topofaces operation.\n\nParameters\n\nmodel: Model\n\nModel to create a ScaffolderSplitResults object with default parameters.\n\nnew_faces: Iterable[int], optional\n\nTopofaces created after split operation.\n\nerror_code: ErrorCode, optional\n\nError code associated with split topofaces operation.\n\njson_data: dict, optional\n\nJSON dictionary to create a ScaffolderSplitResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_split_results = prime.ScaffolderSplitResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.LabelExportParams.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic LabelExportParams.set_default(label_expression_for_nodal_components=None)\n\nSet the default values of the LabelExportParams object.\n\nParameters\n\nlabel_expression_for_nodal_components: str, optional\n\nLabel expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DeleteTopoEntitiesResults.html#deletetopoentitiesresults","title":"DeleteTopoEntitiesResults","text":"DeleteTopoEntitiesResults\n\n\n\nclass ansys.meshing.prime.DeleteTopoEntitiesResults(model=None, error_code=None, json_data=None, **kwargs)\n\nResults associated with delete topoentities.\n\nParameters\n\nmodel: Model\n\nModel to create a DeleteTopoEntitiesResults object with default parameters.\n\nerror_code: ErrorCode, optional\n\nError code associated with delete topoentities.\n\njson_data: dict, optional\n\nJSON dictionary to create a DeleteTopoEntitiesResults object with provided parameters.\n\nExamples\n\n>>> delete_topo_entities_results = prime.DeleteTopoEntitiesResults(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumetricSizeFieldComputeParams.periodic_params.html#periodic_params","title":"periodic_params","text":"periodic_params\n\n\n\nproperty VolumetricSizeFieldComputeParams.periodic_params: SFPeriodicParams\n\nPeriodic parameters to compute the size field."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.html#exportmapdlcdbparams","title":"ExportMapdlCdbParams","text":"ExportMapdlCdbParams\n\n\n\nclass ansys.meshing.prime.ExportMapdlCdbParams(model=None, config_settings=None, pre_solution_settings=None, material_properties=None, boundary_conditions=None, analysis_settings=None, write_cells=None, enable_face_based_labels=None, label_export_params=None, write_by_zones=None, consider_general_connectors_as_spot_weld=None, analysis_type=None, simulation_type=None, analysis_settings_file_name=None, write_separate_blocks=None, write_components_with_element_blocks=None, separate_blocks_format_type=None, export_fasteners_as_swgen=None, export_rigid_bodies_as_rbgen=None, write_component_based_ties=None, mortar_contact_for_ties=None, write_thickness_file=None, contact_element_types=None, json_data=None, **kwargs)\n\nParameters to control MAPDL CDB export settings.\n\nParameters\n\nmodel: Model\n\nModel to create a ExportMapdlCdbParams object with default parameters.\n\nconfig_settings: str, optional\n\nMAPDL configuration settings in CDB format to be added at the beginning of the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\npre_solution_settings: str, optional\n\nMAPDL Settings in CDB format to be added before the solution block in the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmaterial_properties: str, optional\n\nMaterials in CDB format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nboundary_conditions: str, optional\n\nBoundary conditions in CDB format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nanalysis_settings: str, optional\n\nMAPDL analysis settings in CDB format to be added after the solution block in the file. Note: Boundary conditions can be included into analysis settings.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwrite_cells: bool, optional\n\nOption to write out cells as part of the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nenable_face_based_labels: bool, optional\n\nUse LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nlabel_export_params: LabelExportParams, optional\n\nParameters to control the export of labels as Nodal or Element Components in CDB.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwrite_by_zones: bool, optional\n\nOption to write zones in the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nconsider_general_connectors_as_spot_weld: bool, optional\n\nOption to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nanalysis_type: CdbAnalysisType, optional\n\nOption to specify CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nsimulation_type: CdbSimulationType, optional\n\nSimulation type for the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nanalysis_settings_file_name: str, optional\n\nFile path to export mapdl analysis settings.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwrite_separate_blocks: bool, optional\n\nControls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwrite_components_with_element_blocks: bool, optional\n\nControls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nseparate_blocks_format_type: SeparateBlocksFormatType, optional\n\nControls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nexport_fasteners_as_swgen: bool, optional\n\nOption to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nexport_rigid_bodies_as_rbgen: bool, optional\n\nOption to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwrite_component_based_ties: bool, optional\n\nOption to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nmortar_contact_for_ties: bool, optional\n\nOption to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nwrite_thickness_file: bool, optional\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\ncontact_element_types: ContactElementTypeParams, optional\n\nParameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\njson_data: dict, optional\n\nJSON dictionary to create a ExportMapdlCdbParams object with provided parameters.\n\nExamples\n\n>>> export_mapdl_cdb_params = prime.ExportMapdlCdbParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ExportMapdlCdbParams.html#examples-using-exportmapdlcdbparams","title":"ExportMapdlCdbParams > Examples using ExportMapdlCdbParams","text":"Examples using ExportMapdlCdbParams\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeQualityResultsPart.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic VolumeQualityResultsPart.set_default(cell_quality_measure=None, measure_name=None, part_id=None, quality_limit=None, n_found=None, max_quality=None, min_quality=None)\n\nSet the default values of the VolumeQualityResultsPart object.\n\nParameters\n\ncell_quality_measure: CellQualityMeasure, optional\n\nType of the cell quality measure.\n\nmeasure_name: str, optional\n\nName of the cell quality measure.\n\npart_id: int, optional\n\nId of the part for which quality is computed.\n\nquality_limit: float, optional\n\nTarget quality limit used to find failures.\n\nn_found: int, optional\n\nNumber of failed cells.\n\nmax_quality: float, optional\n\nMaximum value of quality measure.\n\nmin_quality: float, optional\n\nMinimum value of quality measure."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.enable_log_output.html#enable_log_output","title":"enable_log_output","text":"enable_log_output\n\n\n\nansys.meshing.prime.enable_log_output(stream=None)\n\nEnable logger output to given stream.\n\nIf stream is not specified, sys.stderr is used.\n\nParameters\n\nstream: TextIO, optional\n\nStream to output the log output to stream"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.AddToZoneResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic AddToZoneResults.set_default(error_code=None, warning_codes=None)\n\nSet the default values of the AddToZoneResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with the add to zone operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.BCPairType.as_integer_ratio.html#as_integer_ratio","title":"as_integer_ratio","text":"as_integer_ratio\n\n\n\nBCPairType.as_integer_ratio(/)\n\nReturn a pair of integers, whose ratio is equal to the original int.\n\nThe ratio is in lowest terms and has a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.FillHolesAtPlaneResults.set_default.html#set_default","title":"set_default","text":"set_default\n\n\n\nstatic FillHolesAtPlaneResults.set_default(error_code=None, warning_codes=None, created_face_zonelets=None, assigned_zone_name=None, created_zone_id=None)\n\nSet the default values of the FillHolesAtPlaneResults object.\n\nParameters\n\nerror_code: ErrorCode, optional\n\nError code associated with the failure of operation.\n\nwarning_codes: List[WarningCode], optional\n\nWarning codes associated with operation.\n\ncreated_face_zonelets: Iterable[int], optional\n\nIds of face zonelets created to fill the holes.\n\nassigned_zone_name: str, optional\n\nName assigned to zone created. Suffix is added to suggested name if the name not available.\n\ncreated_zone_id: int, optional\n\nId assigned to zone created."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ImportFluentCaseResults.error_code.html#error_code","title":"error_code","text":"error_code\n\n\n\nproperty ImportFluentCaseResults.error_code: ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MICROSTRUCTUREWRONGAPICALLSEQUENCE.html#microstructurewrongapicallsequence","title":"MICROSTRUCTUREWRONGAPICALLSEQUENCE","text":"MICROSTRUCTUREWRONGAPICALLSEQUENCE\n\n\n\nErrorCode.MICROSTRUCTUREWRONGAPICALLSEQUENCE = 13002\n\nWrong API call sequence."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.PrismControl.get_surface_scope.html#get_surface_scope","title":"get_surface_scope","text":"get_surface_scope\n\n\n\nPrismControl.get_surface_scope()\n\nGets the surface control scope.\n\nReturns\n\n:\n\n\n\nScopeDefinition\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = prism_control.get_surface_scope()"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.UniformSolidSplineCreationParams.n_control_points_u.html#n_control_points_u","title":"n_control_points_u","text":"n_control_points_u\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_u: int\n\nNumber of control points in u direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.examples.download_bracket_scdoc.html#download_bracket_scdoc","title":"download_bracket_scdoc","text":"download_bracket_scdoc\n\n\n\nansys.meshing.prime.examples.download_bracket_scdoc(destination=None, force=False)\n\nDownload the SCDOC file for the bracket scaffold example.\n\nParameters\n\ndestination\n\npython:str, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\n:\n\n\n\npython:str\n\nLocal path to the downloaded example file.\n\nReturn type\n\nUnion[str, PathLike]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MatchPairTargetType.real.html#real","title":"real","text":"real\n\n\n\nMatchPairTargetType.real\n\nthe real part of a complex number"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SplineContinuityType.from_bytes.html#from_bytes","title":"from_bytes","text":"from_bytes\n\n\n\nclassmethod SplineContinuityType.from_bytes(/, bytes, byteorder='big', *, signed=False)\n\nReturn the integer represented by the given array of bytes.\n\nbytes\n\nHolds the array of bytes to convert.  The argument must either\nsupport the buffer protocol or be an iterable object producing bytes.\nBytes and bytearray are examples of built-in objects that support the\nbuffer protocol.\n\nbyteorder\n\nThe byte order used to represent the integer.  If byteorder is ‘big’,\nthe most significant byte is at the beginning of the byte array.  If\nbyteorder is ‘little’, the most significant byte is at the end of the\nbyte array.  To request the native byte order of the host system, use\nsys.byteorder as the byte order value.  Default is to use ‘big’.\n\nsigned\n\nIndicates whether two’s complement is used to represent the integer."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.DetectAndTreatHolesParams.detect_non_circular_holes.html#detect_non_circular_holes","title":"detect_non_circular_holes","text":"detect_non_circular_holes\n\n\n\nproperty DetectAndTreatHolesParams.detect_non_circular_holes: bool\n\nOption to detect non-circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.ErrorCode.MULTIZONEMESHER_BLOCKINGFAILED.html#multizonemesher_blockingfailed","title":"MULTIZONEMESHER_BLOCKINGFAILED","text":"MULTIZONEMESHER_BLOCKINGFAILED\n\n\n\nErrorCode.MULTIZONEMESHER_BLOCKINGFAILED = 2601\n\nCreating MultiZone blocking failed."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_part_by_name.html#get_part_by_name","title":"get_part_by_name","text":"get_part_by_name\n\n\n\nModel.get_part_by_name(name)\n\nGet the part by name.\n\nParameters\n\nname\n\npython:str\n\nName of the part.\n\nReturns\n\n:\n\n\n\nPart\n\nPart or None if the given part name doesn’t exist.\n\nReturn type\n\nPart\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part_by_name(\"part.1\")"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.Model.get_part_by_name.html#examples-using-modelget_part_by_name","title":"get_part_by_name > Examples using Model.get_part_by_name","text":"Examples using Model.get_part_by_name\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.RepairTopologyParams.connect_faces_params.html#connect_faces_params","title":"connect_faces_params","text":"connect_faces_params\n\n\n\nproperty RepairTopologyParams.connect_faces_params: ConnectFacesParams\n\nParameters for connect faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.HexCoreParams.enable_region_based_hexcore.html#enable_region_based_hexcore","title":"enable_region_based_hexcore","text":"enable_region_based_hexcore\n\n\n\nproperty HexCoreParams.enable_region_based_hexcore: bool\n\nChecks whether to enable region based hexcore or not."},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControlParams.html#volumecontrolparams","title":"VolumeControlParams","text":"VolumeControlParams\n\n\n\nclass ansys.meshing.prime.VolumeControlParams(model=None, cell_zonelet_type=None, skip_hexcore=None, json_data=None, **kwargs)\n\nVolume control parameters are used to define the volume type in the volume control.\n\nParameters\n\nmodel: Model\n\nModel to create a VolumeControlParams object with default parameters.\n\ncell_zonelet_type: CellZoneletType, optional\n\nCell zonelet type is used to define the type of the associated volume.\n\nskip_hexcore: bool, optional\n\nCheck whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure.\n\njson_data: dict, optional\n\nJSON dictionary to create a VolumeControlParams object with provided parameters.\n\nExamples\n\n>>> volume_control_params = prime.VolumeControlParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.VolumeControlParams.html#examples-using-volumecontrolparams","title":"VolumeControlParams > Examples using VolumeControlParams","text":"Examples using VolumeControlParams\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphBCParams.html#morphbcparams","title":"MorphBCParams","text":"MorphBCParams\n\n\n\nclass ansys.meshing.prime.MorphBCParams(model=None, morph_region_method=None, morphable_layers=None, morph_region_box_extension=None, json_data=None, **kwargs)\n\nMorphBCParams contains the input parameters for calculating the boundary conditions for a morphing problem.\n\nParameters\n\nmodel: Model\n\nModel to create a MorphBCParams object with default parameters.\n\nmorph_region_method: BCsVolumetricModality, optional\n\nIndicate options to identify morphable regions in the input volumetric mesh.\n\nmorphable_layers: int, optional\n\nNumber of layers around defined boundary.\n\nmorph_region_box_extension: float, optional\n\nPercentage extension for the volumetric box.\n\njson_data: dict, optional\n\nJSON dictionary to create a MorphBCParams object with provided parameters.\n\nExamples\n\n>>> morph_bcparams = prime.MorphBCParams(model = model)\n\nMethods\n\n\n\nAttributes\n\n"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.MorphBCParams.html#examples-using-morphbcparams","title":"MorphBCParams > Examples using MorphBCParams","text":"Examples using MorphBCParams\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_beta_11_solder_ball.py"},{"objectID":"Home","href":"api/_autosummary/ansys.meshing.prime.SearchByQualityParams.face_quality_measure.html#face_quality_measure","title":"face_quality_measure","text":"face_quality_measure\n\n\n\nproperty SearchByQualityParams.face_quality_measure: FaceQualityMeasure\n\nQuality measure used for search face elements."}]