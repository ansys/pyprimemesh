[{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateParams.html#triangulateparams","title":"TriangulateParams","text":"TriangulateParams\n\n\n\nclass ansys.meshing.prime.TriangulateParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nProvides the parameters used for triangulation operation.\n\nParameters\n\nmodel (Model) – Model to create a TriangulateParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a TriangulateParams object with provided parameters.\n\nExamples\n\n>>> triangulate_params = prime.TriangulateParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateParams.html#overview","title":"TriangulateParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TriangulateParams object.\n\nset_default\n\nSet the default values of the TriangulateParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateParams.html#import-detail","title":"TriangulateParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateParams.html#method-detail","title":"TriangulateParams > Method detail","text":"Method detail\n\n\n\nTriangulateParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTriangulateParams.__str__() -> str\n\n\n\n\n\nstatic TriangulateParams.print_default()\n\nPrint the default values of TriangulateParams object.\n\nExamples\n\n>>> TriangulateParams.print_default()\n\n\n\nstatic TriangulateParams.set_default()\n\nSet the default values of the TriangulateParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectParams.html#intersectparams","title":"IntersectParams","text":"IntersectParams\n\n\n\nclass ansys.meshing.prime.IntersectParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, collapse_feature_angle: float = None, collapse_target_skewness: float = None, json_data: dict = None, **kwargs)\n\nParameters used for intersection.\n\nParameters\n\nmodel (Model) – Model to create a IntersectParams object with default parameters.\n\ntolerance (float, optional) – Intersection tolerance.\n\nuse_absolute_tolerance (bool, optional) – True if tolerance provided is absolute value.\n\nremesh (bool, optional) – Local remesh at the intersection.\n\ncollapse_feature_angle (float, optional) – Angle to preserve features while performing collapse in improve operation.\n\ncollapse_target_skewness (float, optional) – Perform collapse on faces with skewness above the provided target skewness.\n\njson_data (dict, optional) – JSON dictionary to create a IntersectParams object with provided parameters.\n\nExamples\n\n>>> intersect_params = prime.IntersectParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectParams.html#overview","title":"IntersectParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncollapse_feature_angle\n\nAngle to preserve features while performing collapse in improve operation.\n\ncollapse_target_skewness\n\nPerform collapse on faces with skewness above the provided target skewness.\n\nremesh\n\nLocal remesh at the intersection.\n\ntolerance\n\nIntersection tolerance.\n\nuse_absolute_tolerance\n\nTrue if tolerance provided is absolute value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IntersectParams object.\n\nset_default\n\nSet the default values of the IntersectParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectParams.html#import-detail","title":"IntersectParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectParams.html#property-detail","title":"IntersectParams > Property detail","text":"Property detail\n\n\n\nproperty IntersectParams.collapse_feature_angle: float\n\nAngle to preserve features while performing collapse in improve operation.\n\n\n\nproperty IntersectParams.collapse_target_skewness: float\n\nPerform collapse on faces with skewness above the provided target skewness.\n\n\n\nproperty IntersectParams.remesh: bool\n\nLocal remesh at the intersection.\n\n\n\nproperty IntersectParams.tolerance: float\n\nIntersection tolerance.\n\n\n\nproperty IntersectParams.use_absolute_tolerance: bool\n\nTrue if tolerance provided is absolute value."},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectParams.html#method-detail","title":"IntersectParams > Method detail","text":"Method detail\n\n\n\nIntersectParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIntersectParams.__str__() -> str\n\n\n\n\n\nstatic IntersectParams.print_default()\n\nPrint the default values of IntersectParams object.\n\nExamples\n\n>>> IntersectParams.print_default()\n\n\n\nstatic IntersectParams.set_default(tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, collapse_feature_angle: float = None, collapse_target_skewness: float = None)\n\nSet the default values of the IntersectParams object.\n\nParameters\n\ntolerance (float, optional) – Intersection tolerance.\n\nuse_absolute_tolerance (bool, optional) – True if tolerance provided is absolute value.\n\nremesh (bool, optional) – Local remesh at the intersection.\n\ncollapse_feature_angle (float, optional) – Angle to preserve features while performing collapse in improve operation.\n\ncollapse_target_skewness (float, optional) – Perform collapse on faces with skewness above the provided target skewness."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsResult.html#wrapperpatchflowregionsresult","title":"WrapperPatchFlowRegionsResult","text":"WrapperPatchFlowRegionsResult\n\n\n\nclass ansys.meshing.prime.WrapperPatchFlowRegionsResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, id: int = None, name: str = None, json_data: dict = None, **kwargs)\n\nResult structure associated with patch holes operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapperPatchFlowRegionsResult object with default parameters.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the patch holes operation.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with a patch holes operation.This is a beta parameter. The behavior and name may change in the future.\n\nid (int, optional) – Id of part created with hole patches.This is a beta parameter. The behavior and name may change in the future.\n\nname (str, optional) – Name of part created with hole patches.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperPatchFlowRegionsResult object with provided parameters.\n\nExamples\n\n>>> wrapper_patch_flow_regions_result = prime.WrapperPatchFlowRegionsResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsResult.html#overview","title":"WrapperPatchFlowRegionsResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a patch holes operation.\n\nid\n\nId of part created with hole patches.\n\nname\n\nName of part created with hole patches.\n\nwarning_codes\n\nWarning codes associated with the patch holes operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperPatchFlowRegionsResult object.\n\nset_default\n\nSet the default values of the WrapperPatchFlowRegionsResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsResult.html#import-detail","title":"WrapperPatchFlowRegionsResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsResult.html#property-detail","title":"WrapperPatchFlowRegionsResult > Property detail","text":"Property detail\n\n\n\nproperty WrapperPatchFlowRegionsResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a patch holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsResult.id: int\n\nId of part created with hole patches.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsResult.name: str\n\nName of part created with hole patches.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsResult.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the patch holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsResult.html#method-detail","title":"WrapperPatchFlowRegionsResult > Method detail","text":"Method detail\n\n\n\nWrapperPatchFlowRegionsResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperPatchFlowRegionsResult.__str__() -> str\n\n\n\n\n\nstatic WrapperPatchFlowRegionsResult.print_default()\n\nPrint the default values of WrapperPatchFlowRegionsResult object.\n\nExamples\n\n>>> WrapperPatchFlowRegionsResult.print_default()\n\n\n\nstatic WrapperPatchFlowRegionsResult.set_default(warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, id: int = None, name: str = None)\n\nSet the default values of the WrapperPatchFlowRegionsResult object.\n\nParameters\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the patch holes operation.\n\nerror_code (ErrorCode, optional) – Error code associated with a patch holes operation.\n\nid (int, optional) – Id of part created with hole patches.\n\nname (str, optional) – Name of part created with hole patches."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/toposearchstructs/TopoSearchField.html#toposearchfield","title":"TopoSearchField","text":"TopoSearchField\n\n\n\nclass ansys.meshing.prime.autogen.toposearchstructs.TopoSearchField\n\nToposearch diagnostic field."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/toposearchstructs/TopoSearchField.html#overview","title":"TopoSearchField > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBROKENLOOPTOPOFACES\n\nDiagnoses topofaces with open or broken bounding edge loops.\n\nINCONSISTENTNORMALORIENTATIONTOPOFACES\n\nDiagnoses topofaces with inconsistent normal orientations.\n\nINCORRECTBOUNDARYORIENTATIONTOPOFACES\n\nDiagnoses topofaces with incorrect boundary orientations.\n\nINTERSECTINGTOPOFACES\n\nDiagnoses intersecting topofaces.\n\nINVALIDBOUNDARYTOPOFACES\n\nDiagnoses topofaces with incorrect bounding edge orientation.\n\nNOBOUNDARYLOOPTOPOFACES\n\nDiagnoses topofaces without bounding edges.\n\nNUMBEROFFIELDS\n\nDiagnoses all topofaces.\n\nOVERLAPPINGTOPOFACES\n\nDiagnoses overlapping or partially overlapping topofaces.\n\nSELFINTERSECTINGTOPOFACES\n\nDiagnoses topofaces with self intersecting bounding edges.\n\nSMALLTOPOEDGES\n\nDiagnoses topofaces with small topoedges."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/toposearchstructs/TopoSearchField.html#import-detail","title":"TopoSearchField > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/toposearchstructs/TopoSearchField.html#attribute-detail","title":"TopoSearchField > Attribute detail","text":"Attribute detail\n\n\n\nTopoSearchField.BROKENLOOPTOPOFACES = 3\n\nDiagnoses topofaces with open or broken bounding edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.INCONSISTENTNORMALORIENTATIONTOPOFACES = 8\n\nDiagnoses topofaces with inconsistent normal orientations.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.INCORRECTBOUNDARYORIENTATIONTOPOFACES = 7\n\nDiagnoses topofaces with incorrect boundary orientations.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.INTERSECTINGTOPOFACES = 1\n\nDiagnoses intersecting topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.INVALIDBOUNDARYTOPOFACES = 5\n\nDiagnoses topofaces with incorrect bounding edge orientation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.NOBOUNDARYLOOPTOPOFACES = 4\n\nDiagnoses topofaces without bounding edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.NUMBEROFFIELDS = 9\n\nDiagnoses all topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.OVERLAPPINGTOPOFACES = 0\n\nDiagnoses overlapping or partially overlapping topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.SELFINTERSECTINGTOPOFACES = 2\n\nDiagnoses topofaces with self intersecting bounding edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.SMALLTOPOEDGES = 6\n\nDiagnoses topofaces with small topoedges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/part/index.html#the-partpy-module","title":"The part.py module","text":"The part.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/part/index.html#summary","title":"The part.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPart\n\nPart contains zonelets and topoentities.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/part/index.html#description","title":"The part.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleParams.html#topofillholeparams","title":"TopoFillHoleParams","text":"TopoFillHoleParams\n\n\n\nclass ansys.meshing.prime.autogen.topoutilitystructs.TopoFillHoleParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, edges_to_exclude: ansys.meshing.prime.params.primestructs.Iterable[int] = None, suppress_boundary_after_hole_fill: bool = None, fill_annular_hole: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to fill holes in topology.\n\nParameters\n\nmodel (Model) – Model to create a TopoFillHoleParams object with default parameters.\n\nedges_to_exclude (Iterable[int], optional) – TopoEdges to be excluded for cap creation.\n\nsuppress_boundary_after_hole_fill (bool, optional) – Option to preserve or suppress hole-boundary after filling holes.\n\nfill_annular_hole (bool, optional) – Option for filling holes with annular bounding loops.\n\njson_data (dict, optional) – JSON dictionary to create a TopoFillHoleParams object with provided parameters.\n\nExamples\n\n>>> topo_fill_hole_params = prime.TopoFillHoleParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleParams.html#overview","title":"TopoFillHoleParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedges_to_exclude\n\nTopoEdges to be excluded for cap creation.\n\nfill_annular_hole\n\nOption for filling holes with annular bounding loops.\n\nsuppress_boundary_after_hole_fill\n\nOption to preserve or suppress hole-boundary after filling holes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TopoFillHoleParams object.\n\nset_default\n\nSet the default values of the TopoFillHoleParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleParams.html#import-detail","title":"TopoFillHoleParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleParams.html#property-detail","title":"TopoFillHoleParams > Property detail","text":"Property detail\n\n\n\nproperty TopoFillHoleParams.edges_to_exclude: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoEdges to be excluded for cap creation.\n\n\n\nproperty TopoFillHoleParams.fill_annular_hole: bool\n\nOption for filling holes with annular bounding loops.\n\n\n\nproperty TopoFillHoleParams.suppress_boundary_after_hole_fill: bool\n\nOption to preserve or suppress hole-boundary after filling holes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleParams.html#method-detail","title":"TopoFillHoleParams > Method detail","text":"Method detail\n\n\n\nTopoFillHoleParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTopoFillHoleParams.__str__() -> str\n\n\n\n\n\nstatic TopoFillHoleParams.print_default()\n\nPrint the default values of TopoFillHoleParams object.\n\nExamples\n\n>>> TopoFillHoleParams.print_default()\n\n\n\nstatic TopoFillHoleParams.set_default(edges_to_exclude: ansys.meshing.prime.params.primestructs.Iterable[int] = None, suppress_boundary_after_hole_fill: bool = None, fill_annular_hole: bool = None)\n\nSet the default values of the TopoFillHoleParams object.\n\nParameters\n\nedges_to_exclude (Iterable[int], optional) – TopoEdges to be excluded for cap creation.\n\nsuppress_boundary_after_hole_fill (bool, optional) – Option to preserve or suppress hole-boundary after filling holes.\n\nfill_annular_hole (bool, optional) – Option for filling holes with annular bounding loops."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/HidePicked.html#hidepicked","title":"HidePicked","text":"HidePicked\n\n\n\nclass ansys.meshing.prime.graphics.widgets.hide_picked.HidePicked(prime_plotter: ansys.meshing.prime.graphics.plotter.PrimePlotter)\n\nInitializes the hide picked button widget.\n\nThis widget lets you hide the picked mesh objects.\n\nParameters\n\nprime_plotter (Plotter) – Plotter to apply this widget to."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/HidePicked.html#overview","title":"HidePicked > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncallback\n\nDefine callback function for the button widget.\n\nupdate\n\nDefine the configuration and representation of the button widget button.\n\nProperties\n\n\n\n\n\nplotter\n\nPlotter object that the widget is assigned to.\n\nAttributes\n\n\n\n\n\n__slots__\n\n\n\nprime_plotter\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/HidePicked.html#import-detail","title":"HidePicked > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/HidePicked.html#property-detail","title":"HidePicked > Property detail","text":"Property detail\n\n\n\nproperty HidePicked.plotter: pyvista.Plotter\n\nPlotter object that the widget is assigned to."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/HidePicked.html#attribute-detail","title":"HidePicked > Attribute detail","text":"Attribute detail\n\n\n\nHidePicked.__slots__ = ()\n\n\n\n\n\nHidePicked.prime_plotter\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/HidePicked.html#method-detail","title":"HidePicked > Method detail","text":"Method detail\n\n\n\nHidePicked.callback(state: bool) -> None\n\nDefine callback function for the button widget.\n\n\n\nHidePicked.update() -> None\n\nDefine the configuration and representation of the button widget button."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_saddle_bracket_dsco.html#ansysmeshingprimeexamplesdownload_saddle_bracket_dsco","title":"ansys.meshing.prime.examples.download_saddle_bracket_dsco","text":"ansys.meshing.prime.examples.download_saddle_bracket_dsco\n\n\n\nansys.meshing.prime.examples.download_saddle_bracket_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload DSCO file for the saddle bracket example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CdbAnalysisType.html#cdbanalysistype","title":"CdbAnalysisType","text":"CdbAnalysisType\n\n\n\nclass ansys.meshing.prime.CdbAnalysisType\n\nProvides the MAPDL CDB analysis type."},{"objectID":"Home","href":"api/ansys/meshing/prime/CdbAnalysisType.html#overview","title":"CdbAnalysisType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBELGIAN\n\nOption to select Belgian as CDB analysis type.\n\nNONE\n\nOption to select no analysis type. This is the default option.\n\nOUTERPANELSTIFFNESS\n\nOption to select Outer Panel Stiffness as CDB analysis type.\n\nSEATRETRACTOR\n\nOption to select Seat Retractor as CDB analysis type."},{"objectID":"Home","href":"api/ansys/meshing/prime/CdbAnalysisType.html#import-detail","title":"CdbAnalysisType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CdbAnalysisType.html#attribute-detail","title":"CdbAnalysisType > Attribute detail","text":"Attribute detail\n\n\n\nCdbAnalysisType.BELGIAN = 2\n\nOption to select Belgian as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nCdbAnalysisType.NONE = 0\n\nOption to select no analysis type. This is the default option.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nCdbAnalysisType.OUTERPANELSTIFFNESS = 1\n\nOption to select Outer Panel Stiffness as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nCdbAnalysisType.SEATRETRACTOR = 3\n\nOption to select Seat Retractor as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposer/index.html#the-vtcomposerpy-module","title":"The vtcomposer.py module","text":"The vtcomposer.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposer/index.html#summary","title":"The vtcomposer.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVTComposer\n\nVTComposer is used for fix topology corrections like separate, pinch.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposer/index.html#description","title":"The vtcomposer.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesher/index.html#the-autoquadmesherpy-module","title":"The autoquadmesher.py module","text":"The autoquadmesher.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesher/index.html#summary","title":"The autoquadmesher.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAutoQuadMesher\n\nGenerate full quad mesh.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesher/index.html#description","title":"The autoquadmesher.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/ShellBLOffsetType.html#shellbloffsettype","title":"ShellBLOffsetType","text":"ShellBLOffsetType\n\n\n\nclass ansys.meshing.prime.autogen.commontypes.ShellBLOffsetType\n\nType of offset method during ShellBL generation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/ShellBLOffsetType.html#overview","title":"ShellBLOffsetType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASPECTRATIO\n\nOption to set ShellBL offset type as Aspect Ratio.\n\nCURVATUREBASED\n\nOption to set ShellBL offset type as CurvatureBased.\n\nLASTRATIO\n\nOption to set ShellBL offset type as Last Ratio.\n\nUNIFORM\n\nOption to set ShellBL offset type as Uniform."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/ShellBLOffsetType.html#import-detail","title":"ShellBLOffsetType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/ShellBLOffsetType.html#attribute-detail","title":"ShellBLOffsetType > Attribute detail","text":"Attribute detail\n\n\n\nShellBLOffsetType.ASPECTRATIO = 0\n\nOption to set ShellBL offset type as Aspect Ratio.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nShellBLOffsetType.CURVATUREBASED = 4\n\nOption to set ShellBL offset type as CurvatureBased.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nShellBLOffsetType.LASTRATIO = 1\n\nOption to set ShellBL offset type as Last Ratio.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nShellBLOffsetType.UNIFORM = 2\n\nOption to set ShellBL offset type as Uniform.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeParams.html#volumetricsizefieldcomputeparams","title":"VolumetricSizeFieldComputeParams","text":"VolumetricSizeFieldComputeParams\n\n\n\nclass ansys.meshing.prime.autogen.sizefieldstructs.VolumetricSizeFieldComputeParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, enable_multi_threading: bool = None, enable_periodicity: bool = None, periodic_params: SFPeriodicParams = None, growth_rate_lower_bound: float = None, json_data: dict = None, **kwargs)\n\nParameters associated with the compute volumetric size field operation.\n\nParameters\n\nmodel (Model) – Model to create a VolumetricSizeFieldComputeParams object with default parameters.\n\nenable_multi_threading (bool, optional) – Option to compute volumetric size field in parallel using multithreads.\n\nenable_periodicity (bool, optional) – Option to enable periodic size field computations.\n\nperiodic_params (SFPeriodicParams, optional) – Periodic parameters to compute the size field.\n\ngrowth_rate_lower_bound (float, optional) – Lower bound for growth rate.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a VolumetricSizeFieldComputeParams object with provided parameters.\n\nExamples\n\n>>> volumetric_size_field_compute_params = prime.VolumetricSizeFieldComputeParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeParams.html#overview","title":"VolumetricSizeFieldComputeParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nenable_multi_threading\n\nOption to compute volumetric size field in parallel using multithreads.\n\nenable_periodicity\n\nOption to enable periodic size field computations.\n\ngrowth_rate_lower_bound\n\nLower bound for growth rate.\n\nperiodic_params\n\nPeriodic parameters to compute the size field.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumetricSizeFieldComputeParams object.\n\nset_default\n\nSet the default values of the VolumetricSizeFieldComputeParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeParams.html#import-detail","title":"VolumetricSizeFieldComputeParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeParams.html#property-detail","title":"VolumetricSizeFieldComputeParams > Property detail","text":"Property detail\n\n\n\nproperty VolumetricSizeFieldComputeParams.enable_multi_threading: bool\n\nOption to compute volumetric size field in parallel using multithreads.\n\n\n\nproperty VolumetricSizeFieldComputeParams.enable_periodicity: bool\n\nOption to enable periodic size field computations.\n\n\n\nproperty VolumetricSizeFieldComputeParams.growth_rate_lower_bound: float\n\nLower bound for growth rate.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty VolumetricSizeFieldComputeParams.periodic_params: SFPeriodicParams\n\nPeriodic parameters to compute the size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeParams.html#method-detail","title":"VolumetricSizeFieldComputeParams > Method detail","text":"Method detail\n\n\n\nVolumetricSizeFieldComputeParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumetricSizeFieldComputeParams.__str__() -> str\n\n\n\n\n\nstatic VolumetricSizeFieldComputeParams.print_default()\n\nPrint the default values of VolumetricSizeFieldComputeParams object.\n\nExamples\n\n>>> VolumetricSizeFieldComputeParams.print_default()\n\n\n\nstatic VolumetricSizeFieldComputeParams.set_default(enable_multi_threading: bool = None, enable_periodicity: bool = None, periodic_params: SFPeriodicParams = None, growth_rate_lower_bound: float = None)\n\nSet the default values of the VolumetricSizeFieldComputeParams object.\n\nParameters\n\nenable_multi_threading (bool, optional) – Option to compute volumetric size field in parallel using multithreads.\n\nenable_periodicity (bool, optional) – Option to enable periodic size field computations.\n\nperiodic_params (SFPeriodicParams, optional) – Periodic parameters to compute the size field.\n\ngrowth_rate_lower_bound (float, optional) – Lower bound for growth rate."},{"objectID":"Home","href":"api/ansys/meshing/prime/BoiSizingParams.html#boisizingparams","title":"BoiSizingParams","text":"BoiSizingParams\n\n\n\nclass ansys.meshing.prime.BoiSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nSize field computed using body of influence size control enables you to specify a body of influence(that is, a region for sizing control).\n\nThe maximum mesh size will be equal to the specified size within the body of influence.\nThe minimum size will be determined based on the influence of other size controls.\n\nParameters\n\nmodel (Model) – Model to create a BoiSizingParams object with default parameters.\n\nmax (float, optional) – Maximum size used for computing edge and face size using boi size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\njson_data (dict, optional) – JSON dictionary to create a BoiSizingParams object with provided parameters.\n\nExamples\n\n>>> boi_sizing_params = prime.BoiSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoiSizingParams.html#overview","title":"BoiSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nmax\n\nMaximum size used for computing edge and face size using boi size control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of BoiSizingParams object.\n\nset_default\n\nSet the default values of the BoiSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoiSizingParams.html#import-detail","title":"BoiSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoiSizingParams.html#property-detail","title":"BoiSizingParams > Property detail","text":"Property detail\n\n\n\nproperty BoiSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty BoiSizingParams.max: float\n\nMaximum size used for computing edge and face size using boi size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/BoiSizingParams.html#method-detail","title":"BoiSizingParams > Method detail","text":"Method detail\n\n\n\nBoiSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBoiSizingParams.__str__() -> str\n\n\n\n\n\nstatic BoiSizingParams.print_default()\n\nPrint the default values of BoiSizingParams object.\n\nExamples\n\n>>> BoiSizingParams.print_default()\n\n\n\nstatic BoiSizingParams.set_default(max: float = None, growth_rate: float = None)\n\nSet the default values of the BoiSizingParams object.\n\nParameters\n\nmax (float, optional) – Maximum size used for computing edge and face size using boi size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_solder_ball_target_fmd.html#ansysmeshingprimeexamplesexamplesdownload_solder_ball_target_fmd","title":"ansys.meshing.prime.examples.examples.download_solder_ball_target_fmd","text":"ansys.meshing.prime.examples.examples.download_solder_ball_target_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_solder_ball_target_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload a FMD file for the solder ball example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     solder_ball_target = prime_examples.download_solder_ball_target_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(solder_ball_target, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/LabelExportParams.html#labelexportparams","title":"LabelExportParams","text":"LabelExportParams\n\n\n\nclass ansys.meshing.prime.LabelExportParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, label_expression_for_nodal_components: str = None, json_data: dict = None, **kwargs)\n\nParameters to control the export of labels as Nodal or Element Components in CDB. By default, all the labels are exported as Element Components.\n\nParameters\n\nmodel (Model) – Model to create a LabelExportParams object with default parameters.\n\nlabel_expression_for_nodal_components (str, optional) – Label expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a LabelExportParams object with provided parameters.\n\nExamples\n\n>>> label_export_params = prime.LabelExportParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/LabelExportParams.html#overview","title":"LabelExportParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nlabel_expression_for_nodal_components\n\nLabel expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of LabelExportParams object.\n\nset_default\n\nSet the default values of the LabelExportParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/LabelExportParams.html#import-detail","title":"LabelExportParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/LabelExportParams.html#property-detail","title":"LabelExportParams > Property detail","text":"Property detail\n\n\n\nproperty LabelExportParams.label_expression_for_nodal_components: str\n\nLabel expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/LabelExportParams.html#method-detail","title":"LabelExportParams > Method detail","text":"Method detail\n\n\n\nLabelExportParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nLabelExportParams.__str__() -> str\n\n\n\n\n\nstatic LabelExportParams.print_default()\n\nPrint the default values of LabelExportParams object.\n\nExamples\n\n>>> LabelExportParams.print_default()\n\n\n\nstatic LabelExportParams.set_default(label_expression_for_nodal_components: str = None)\n\nSet the default values of the LabelExportParams object.\n\nParameters\n\nlabel_expression_for_nodal_components (str, optional) – Label expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdParams.html#searchinfobyregisteridparams","title":"SearchInfoByRegisterIdParams","text":"SearchInfoByRegisterIdParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchInfoByRegisterIdParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to retrieve information on registered faces.\n\nParameters\n\nmodel (Model) – Model to create a SearchInfoByRegisterIdParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a SearchInfoByRegisterIdParams object with provided parameters.\n\nExamples\n\n>>> search_info_by_register_id_params = prime.SearchInfoByRegisterIdParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdParams.html#overview","title":"SearchInfoByRegisterIdParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchInfoByRegisterIdParams object.\n\nset_default\n\nSet the default values of the SearchInfoByRegisterIdParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdParams.html#import-detail","title":"SearchInfoByRegisterIdParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdParams.html#method-detail","title":"SearchInfoByRegisterIdParams > Method detail","text":"Method detail\n\n\n\nSearchInfoByRegisterIdParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchInfoByRegisterIdParams.__str__() -> str\n\n\n\n\n\nstatic SearchInfoByRegisterIdParams.print_default()\n\nPrint the default values of SearchInfoByRegisterIdParams object.\n\nExamples\n\n>>> SearchInfoByRegisterIdParams.print_default()\n\n\n\nstatic SearchInfoByRegisterIdParams.set_default()\n\nSet the default values of the SearchInfoByRegisterIdParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/index.html#the-hide_pickedpy-module","title":"The hide_picked.py module","text":"The hide_picked.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/index.html#summary","title":"The hide_picked.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nHidePicked\n\nInitializes the hide picked button widget.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/hide_picked/index.html#description","title":"The hide_picked.py module > Description","text":"Description\n\nThis module contains the HidePicked class."},{"objectID":"Home","href":"user_guide/sizing.html#sizing","title":"Sizing","text":"Sizing\n\nPyPrimeMesh provides various sizing controls to help you define how the mesh size is distributed on a surface or within the volume."},{"objectID":"Home","href":"user_guide/sizing.html#sizing-control","title":"Sizing > Sizing control","text":"Sizing control\n\nMesh quality and resolution are important factors for capturing physics accurately and efficiently. Size controls allows you to get the desired mesh distribution.\nPyPrimeMesh specifies the sizing requirements using sizing controls. The sizing controls in PyPrimeMesh have the following:\n\nScope\n\nMaximum rate of change of size\n\nRange within which the sizes should be on or within the scope\n\nThe SizingType class has control types for defining sizing requirements:\n\nCurvature\n\nProximity\n\nHard\n\nSoft\n\nMeshed\n\nBody of influence"},{"objectID":"Home","href":"user_guide/sizing.html#curvature-sizing","title":"Sizing > Curvature sizing","text":"Curvature sizing\n\nIn the SizingType class, selecting the CURVATURE\nparameter sizes based on the scope on the local curvature. The size is small when the local curvature is large and vice versa.\nThis code shows how to use the CurvatureSizingParams class to specify\nthe minimum and maximum size, growth rate, and normal angle:\n\nThe normal angle parameter is the maximum allowable angle that one element edge may span. For example, a value of 5 implies that a division are made when the angle change along the curve is 5 degrees. Hence, a 90 degree arc is divided into approximately 18 segments."},{"objectID":"Home","href":"user_guide/sizing.html#proximity-sizing","title":"Sizing > Proximity sizing","text":"Proximity sizing\n\nIn the SizingType class, selecting the\nPROXIMITY parameter sizes based on the closeness of\nthe surfaces or edges specified in the scope. This code shows how to use the\nProximitySizingParams class to specify the\nminimum and maximum size, growth rate, and the number of element per gap:\n\nThe ignore_self_proximity\nand ignore_orientation\nparameters are also considered for proximity sizing. The ignore_self_proximity parameter\nis set to True if proximity between faces in the same face zonelet is to be ignored. The\nignore_orientation parameter allows you to ignore the face normal orientation during the\nproximity calculation. This Boolean parameter is set to False by default. In general,\nthe proximity depends on the direction of face normals.\n\nThis example explains the use of the ignore_orientation parameter for face proximity.\nThe normals on the grooved box point inward. With the default setting of False, the\nproximity size function does not refine the surface along the entire groove length.\nIf the ignore_orientation is set to True, the surface is refined along the groove length"},{"objectID":"Home","href":"user_guide/sizing.html#hard-sizing","title":"Sizing > Hard sizing","text":"Hard sizing\n\nIn the SizingType class, selecting the\nHARD parameter sizes on the scope based on a uniform\nvalue while meshing. This code shows how to use the HardSizingParams\nclass to specify the minimum size and growth rate:"},{"objectID":"Home","href":"user_guide/sizing.html#soft-sizing","title":"Sizing > Soft sizing","text":"Soft sizing\n\nIn the SizingType class, selecting the\nSOFT parameter sizes on the scope based on a\ncertain maximum value that should not be exceeded while meshing. This code shows how\nto use the SoftSizingParams class to specify\nthe maximum size and growth rate:"},{"objectID":"Home","href":"user_guide/sizing.html#meshed-sizing","title":"Sizing > Meshed sizing","text":"Meshed sizing\n\nIn the SizingType class, selecting the\nMESHED parameter sizes based on existing local sizes.\nThis example shows how to use the MeshedSizingParams\nclass to specify the growth rate:"},{"objectID":"Home","href":"user_guide/sizing.html#body-of-influence-sizing","title":"Sizing > Body of influence sizing","text":"Body of influence sizing\n\nIn the SizingType class, selecting the\nBOI parameter sizes inside a closed volume scope\nthat is not to exceed a certain maximum value. This code shows how to use the\nBoiSizingParams class to specify the maximum size and growth rate:"},{"objectID":"Home","href":"user_guide/sizing.html#size-fields","title":"Sizing > Size fields","text":"Size fields\n\nThe SizeFieldType class helps you to fetch the element size\nat a given location. These size field types are available in PyPrimeMesh:\n\nConstant\n\nVolumetric\n\nGeodesic\n\nGeometric\n\nMeshedgeodesic\n\nThe Volumetric and  Geodesic size fields can process and respect the size control that you define.\nThe Volumetric size field can be computed using the Compute volumetric\nmethod and then surface and volume meshing can be applied. The remaining size field types are computed as\npart of various surface and volume meshing operations."},{"objectID":"Home","href":"user_guide/sizing.html#constant-size-field","title":"Sizing > Constant size field","text":"Constant size field\n\nIn the SizeFieldType class, selecting the\nCONSTANT parameter computes the size field\nbased on the size controls specified."},{"objectID":"Home","href":"user_guide/sizing.html#volumetric-size-field","title":"Sizing > Volumetric size field","text":"Volumetric size field\n\nIn the SizeFieldType class, selecting the\nVOLUMETRIC parameter computes the size field\nbased on the size controls specified."},{"objectID":"Home","href":"user_guide/sizing.html#geodesic-size-field","title":"Sizing > Geodesic size field","text":"Geodesic size field\n\nIn the SizeFieldType class, selecting the\nGEODESIC parameter computes the size field\non face nodes based on the size controls specified. Sizes are defined along a surface rather than\nthe volume. Geodesic sizing enables you to confine sizes to surfaces and avoid problems like\ndead space refinement."},{"objectID":"Home","href":"user_guide/sizing.html#geometric-size-field","title":"Sizing > Geometric size field","text":"Geometric size field\n\nIn the SizeFieldType class, selecting the\nGEOMETRIC parameter computes the size field\nbased on existing boundary sizes. Sizes can gradually increase from the minimum size to the\nmaximum size based on the growth rate."},{"objectID":"Home","href":"user_guide/sizing.html#meshedgeodesic-size-field","title":"Sizing > Meshedgeodesic size field","text":"Meshedgeodesic size field\n\nIn the SizeFieldType class, selecting the\nMESHEDGEODESIC parameter computes\nthe size field using average mesh edge lengths and is diffused geodesical."},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerResults.html#vtcomposerresults","title":"VTComposerResults","text":"VTComposerResults\n\n\n\nclass ansys.meshing.prime.VTComposerResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult struct associated to VTComposer operations.\n\nParameters\n\nmodel (Model) – Model to create a VTComposerResults object with default parameters.\n\nerror_code (ErrorCode, optional) – This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a VTComposerResults object with provided parameters.\n\nExamples\n\n>>> v_tcomposer_results = prime.VTComposerResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerResults.html#overview","title":"VTComposerResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VTComposerResults object.\n\nset_default\n\nSet the default values of the VTComposerResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerResults.html#import-detail","title":"VTComposerResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerResults.html#property-detail","title":"VTComposerResults > Property detail","text":"Property detail\n\n\n\nproperty VTComposerResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerResults.html#method-detail","title":"VTComposerResults > Method detail","text":"Method detail\n\n\n\nVTComposerResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVTComposerResults.__str__() -> str\n\n\n\n\n\nstatic VTComposerResults.print_default()\n\nPrint the default values of VTComposerResults object.\n\nExamples\n\n>>> VTComposerResults.print_default()\n\n\n\nstatic VTComposerResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the VTComposerResults object.\n\nParameters\n\nerror_code (ErrorCode, optional)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsResult.html#wrapperclosegapsresult","title":"WrapperCloseGapsResult","text":"WrapperCloseGapsResult\n\n\n\nclass ansys.meshing.prime.WrapperCloseGapsResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None, json_data: dict = None, **kwargs)\n\nResult structure associated with close gaps operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapperCloseGapsResult object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with a close gaps operation.\n\npart_id (int, optional) – Id of part created with gap cover patches.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperCloseGapsResult object with provided parameters.\n\nExamples\n\n>>> wrapper_close_gaps_result = prime.WrapperCloseGapsResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsResult.html#overview","title":"WrapperCloseGapsResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a close gaps operation.\n\npart_id\n\nId of part created with gap cover patches.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperCloseGapsResult object.\n\nset_default\n\nSet the default values of the WrapperCloseGapsResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsResult.html#import-detail","title":"WrapperCloseGapsResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsResult.html#property-detail","title":"WrapperCloseGapsResult > Property detail","text":"Property detail\n\n\n\nproperty WrapperCloseGapsResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a close gaps operation.\n\n\n\nproperty WrapperCloseGapsResult.part_id: int\n\nId of part created with gap cover patches."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsResult.html#method-detail","title":"WrapperCloseGapsResult > Method detail","text":"Method detail\n\n\n\nWrapperCloseGapsResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperCloseGapsResult.__str__() -> str\n\n\n\n\n\nstatic WrapperCloseGapsResult.print_default()\n\nPrint the default values of WrapperCloseGapsResult object.\n\nExamples\n\n>>> WrapperCloseGapsResult.print_default()\n\n\n\nstatic WrapperCloseGapsResult.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None)\n\nSet the default values of the WrapperCloseGapsResult object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with a close gaps operation.\n\npart_id (int, optional) – Id of part created with gap cover patches."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetScopeResults.html#setscoperesults","title":"SetScopeResults","text":"SetScopeResults\n\n\n\nclass ansys.meshing.prime.SetScopeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the set scope operation.\n\nParameters\n\nmodel (Model) – Model to create a SetScopeResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set scope.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set scope.\n\njson_data (dict, optional) – JSON dictionary to create a SetScopeResults object with provided parameters.\n\nExamples\n\n>>> set_scope_results = prime.SetScopeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetScopeResults.html#overview","title":"SetScopeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set scope.\n\nwarning_code\n\nWarning code associated with the set scope.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetScopeResults object.\n\nset_default\n\nSet the default values of the SetScopeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetScopeResults.html#import-detail","title":"SetScopeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetScopeResults.html#property-detail","title":"SetScopeResults > Property detail","text":"Property detail\n\n\n\nproperty SetScopeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set scope.\n\n\n\nproperty SetScopeResults.warning_code: ansys.meshing.prime.params.primestructs.WarningCode\n\nWarning code associated with the set scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetScopeResults.html#method-detail","title":"SetScopeResults > Method detail","text":"Method detail\n\n\n\nSetScopeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetScopeResults.__str__() -> str\n\n\n\n\n\nstatic SetScopeResults.print_default()\n\nPrint the default values of SetScopeResults object.\n\nExamples\n\n>>> SetScopeResults.print_default()\n\n\n\nstatic SetScopeResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None)\n\nSet the default values of the SetScopeResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the set scope.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneParams.html#fillholesatplaneparams","title":"FillHolesAtPlaneParams","text":"FillHolesAtPlaneParams\n\n\n\nclass ansys.meshing.prime.FillHolesAtPlaneParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, create_zone: bool = None, suggested_zone_name: str = None, json_data: dict = None, **kwargs)\n\nParameters to fill holes at given plane.\n\nParameters\n\nmodel (Model) – Model to create a FillHolesAtPlaneParams object with default parameters.\n\ncreate_zone (bool, optional) – Option to create a face zone for the zonelets created to fill holes.\n\nsuggested_zone_name (str, optional) – Suggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name.\n\njson_data (dict, optional) – JSON dictionary to create a FillHolesAtPlaneParams object with provided parameters.\n\nExamples\n\n>>> fill_holes_at_plane_params = prime.FillHolesAtPlaneParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneParams.html#overview","title":"FillHolesAtPlaneParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreate_zone\n\nOption to create a face zone for the zonelets created to fill holes.\n\nsuggested_zone_name\n\nSuggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FillHolesAtPlaneParams object.\n\nset_default\n\nSet the default values of the FillHolesAtPlaneParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneParams.html#import-detail","title":"FillHolesAtPlaneParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneParams.html#property-detail","title":"FillHolesAtPlaneParams > Property detail","text":"Property detail\n\n\n\nproperty FillHolesAtPlaneParams.create_zone: bool\n\nOption to create a face zone for the zonelets created to fill holes.\n\n\n\nproperty FillHolesAtPlaneParams.suggested_zone_name: str\n\nSuggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name."},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneParams.html#method-detail","title":"FillHolesAtPlaneParams > Method detail","text":"Method detail\n\n\n\nFillHolesAtPlaneParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFillHolesAtPlaneParams.__str__() -> str\n\n\n\n\n\nstatic FillHolesAtPlaneParams.print_default()\n\nPrint the default values of FillHolesAtPlaneParams object.\n\nExamples\n\n>>> FillHolesAtPlaneParams.print_default()\n\n\n\nstatic FillHolesAtPlaneParams.set_default(create_zone: bool = None, suggested_zone_name: str = None)\n\nSet the default values of the FillHolesAtPlaneParams object.\n\nParameters\n\ncreate_zone (bool, optional) – Option to create a face zone for the zonelets created to fill holes.\n\nsuggested_zone_name (str, optional) – Suggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name."},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesParams.html#stretchfreeboundariesparams","title":"StretchFreeBoundariesParams","text":"StretchFreeBoundariesParams\n\n\n\nclass ansys.meshing.prime.StretchFreeBoundariesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used for stretch free boundaries operation.\n\nParameters\n\nmodel (Model) – Model to create a StretchFreeBoundariesParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a StretchFreeBoundariesParams object with provided parameters.\n\nExamples\n\n>>> stretch_free_boundaries_params = prime.StretchFreeBoundariesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesParams.html#overview","title":"StretchFreeBoundariesParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of StretchFreeBoundariesParams object.\n\nset_default\n\nSet the default values of the StretchFreeBoundariesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesParams.html#import-detail","title":"StretchFreeBoundariesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesParams.html#method-detail","title":"StretchFreeBoundariesParams > Method detail","text":"Method detail\n\n\n\nStretchFreeBoundariesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nStretchFreeBoundariesParams.__str__() -> str\n\n\n\n\n\nstatic StretchFreeBoundariesParams.print_default()\n\nPrint the default values of StretchFreeBoundariesParams object.\n\nExamples\n\n>>> StretchFreeBoundariesParams.print_default()\n\n\n\nstatic StretchFreeBoundariesParams.set_default()\n\nSet the default values of the StretchFreeBoundariesParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportSTLParams.html#exportstlparams","title":"ExportSTLParams","text":"ExportSTLParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportSTLParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, part_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nParameters to export STL file.\n\nParameters\n\nmodel (Model) – Model to create a ExportSTLParams object with default parameters.\n\npart_ids (Iterable[int], optional) – Ids of parts to export.\n\njson_data (dict, optional) – JSON dictionary to create a ExportSTLParams object with provided parameters.\n\nExamples\n\n>>> export_stlparams = prime.ExportSTLParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportSTLParams.html#overview","title":"ExportSTLParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\npart_ids\n\nIds of parts to export.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportSTLParams object.\n\nset_default\n\nSet the default values of the ExportSTLParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportSTLParams.html#import-detail","title":"ExportSTLParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportSTLParams.html#property-detail","title":"ExportSTLParams > Property detail","text":"Property detail\n\n\n\nproperty ExportSTLParams.part_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of parts to export."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportSTLParams.html#method-detail","title":"ExportSTLParams > Method detail","text":"Method detail\n\n\n\nExportSTLParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportSTLParams.__str__() -> str\n\n\n\n\n\nstatic ExportSTLParams.print_default()\n\nPrint the default values of ExportSTLParams object.\n\nExamples\n\n>>> ExportSTLParams.print_default()\n\n\n\nstatic ExportSTLParams.set_default(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ExportSTLParams object.\n\nParameters\n\npart_ids (Iterable[int], optional) – Ids of parts to export."},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesResults.html#subtractvolumesresults","title":"SubtractVolumesResults","text":"SubtractVolumesResults\n\n\n\nclass ansys.meshing.prime.SubtractVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults of the volume subtract operation.\n\nParameters\n\nmodel (Model) – Model to create a SubtractVolumesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume subtract operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the volume subtract operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a SubtractVolumesResults object with provided parameters.\n\nExamples\n\n>>> subtract_volumes_results = prime.SubtractVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesResults.html#overview","title":"SubtractVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the volume subtract operation.\n\nwarning_codes\n\nWarning codes associated with the volume subtract operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SubtractVolumesResults object.\n\nset_default\n\nSet the default values of the SubtractVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesResults.html#import-detail","title":"SubtractVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesResults.html#property-detail","title":"SubtractVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty SubtractVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume subtract operation.\n\n\n\nproperty SubtractVolumesResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the volume subtract operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesResults.html#method-detail","title":"SubtractVolumesResults > Method detail","text":"Method detail\n\n\n\nSubtractVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSubtractVolumesResults.__str__() -> str\n\n\n\n\n\nstatic SubtractVolumesResults.print_default()\n\nPrint the default values of SubtractVolumesResults object.\n\nExamples\n\n>>> SubtractVolumesResults.print_default()\n\n\n\nstatic SubtractVolumesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the SubtractVolumesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the volume subtract operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the volume subtract operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_deformed_blade_scdoc.html#ansysmeshingprimeexamplesdownload_deformed_blade_scdoc","title":"ansys.meshing.prime.examples.download_deformed_blade_scdoc","text":"ansys.meshing.prime.examples.download_deformed_blade_scdoc\n\n\n\nansys.meshing.prime.examples.download_deformed_blade_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the turbine blade example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"user_guide/wrapper.html#surface-wrapping","title":"Surface wrapping","text":"Surface wrapping\n\nGeometries migrated from various CAD packages often contain gaps and overlaps between the surfaces due to algorithm and tolerance differences of the CAD packages.\nSurface wrapping provides the ability to create reliable meshes for such geometries without extensive manual clean up and reduces the time required for preprocessing.\n\nThe Wrapper class allows you to extract a closed watertight surface used to create a volume mesh from geometry where the inputs:\n\nAre not connected with overlaps\n\nHave holes, leaks, or gaps\n\nHave small features that need to be ignored or walked over\n\nThe wrapping operation uses an appropriate material point to identify the relevant surfaces of the selected objects. A coarse Cartesian grid is overlaid on the selected objects\nto create a contiguous region. This Cartesian grid is used to automatically clean the input geometry and to create the watertight representation. The Cartesian grid is then refined\nbased on the size functions to better represent the selected objects. The intersection between the Cartesian grid and the input geometry is calculated and the intersecting cells are\nidentified and marked.\n\nA watertight faceted representation (defined by quad faces of the Cartesian mesh) is created of the boundaries between the regions of interest (identified\nvia material points) and all other regions. The nodes on the faceted representation are then projected back to the input geometry, resulting into a wrapper surface closely\nrepresenting the input geometry. The edges are imprinted on the wrapped zones, and individual zones are recovered and rezoned based on the original geometry objects.\n\nThe wrapper surface quality is improved by post-wrapping operations. Surfaces are remeshed based on size functions or the size field.\n\nThe basic PyPrimeMesh wrapper-based workflow follows these steps:\n\nImport the geometry.\n\nDefine global sizing parameters and size controls with curvature refinement. Sizes are used for wrapper Octree construction.\n\nDefine the material points. Material points are used to define fluid regions or seal regions\ndepending on whether the status is LIVE or DEAD. A 3D coordinate describes the\nposition of the material point.\n\nCreate the wrapper control. The scope refers to which entities should be wrapped.\n\nExtract features with angle and face zonelets boundary for feature capture.\n\nAdd feature recovery control.\n\nWrap the model.\n\nApply diagnostics to compute free edges, multi edges, self-intersections,\nand duplicate faces after wrap. For more information, see ref_index_mesh_diagnostics.\n\nRemesh the model. For more information, see ref_index_surfer.\n\nYou can import Fluent Meshing’s size field file for remesh. For more information, see ref_index_reading_writing.\n\nImprove surface quality and resolve connectivity issues."},{"objectID":"Home","href":"user_guide/wrapper.html#patch-flow-region","title":"Surface wrapping > Patch flow region","text":"Patch flow region\n\nThis is a beta feature. API behavior and implementation might change in the future.\n\nThe Patch Flow Region class creates\npatching face zonelets for holes below a specified size\nthat exist between regions defined by live and dead material points. You can define\nmultiple dead regions but only one live region can be defined.\nThe WrapperPatchFlowRegionsParams class allows you to specify the base size and dead regions to create the patched surface.\nWhen you do not provide the base size, the global minimum size value is used.\nThe patched surface is created towards the dead material point region.\nWhen you create a patched surface, the mesh created is non-conformal.\nYou may have to perform wrapping to create a conformal mesh.\n\nThe following example demonstrates how to patch surfaces using dead and live material points.\n\nImport the model.\n\nSet the global sizing parameters. If you do not specify the base size, the value for the global minimum size is used.\n\nCreate the material points and define the type.\n\nDefine the scope, dead region, live region and specify the hole size, base size to be patched to perform patching.\n\nThe following image shows the defined dead material points and live material points in the model.\n\nCase 1: scope Dead_1, LIVE material points and specify the hole size to perform patching.\n\nCase 2: scope Dead_2, LIVE material points and specify the hole size and base size to perform patching.\n\nCase 3: scope Dead_1, Dead_2 and LIVE material points and specify the hole size and base size to perform patching."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLParams.html#shellblparams","title":"ShellBLParams","text":"ShellBLParams\n\n\n\nclass ansys.meshing.prime.ShellBLParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to generate ShellBL.\n\nParameters\n\nmodel (Model) – Model to create a ShellBLParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ShellBLParams object with provided parameters.\n\nExamples\n\n>>> shell_blparams = prime.ShellBLParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLParams.html#overview","title":"ShellBLParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ShellBLParams object.\n\nset_default\n\nSet the default values of the ShellBLParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLParams.html#import-detail","title":"ShellBLParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLParams.html#method-detail","title":"ShellBLParams > Method detail","text":"Method detail\n\n\n\nShellBLParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nShellBLParams.__str__() -> str\n\n\n\n\n\nstatic ShellBLParams.print_default()\n\nPrint the default values of ShellBLParams object.\n\nExamples\n\n>>> ShellBLParams.print_default()\n\n\n\nstatic ShellBLParams.set_default()\n\nSet the default values of the ShellBLParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControl.html#shellblcontrol","title":"ShellBLControl","text":"ShellBLControl\n\n\n\nclass ansys.meshing.prime.ShellBLControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nShellBLControl allows you to generate quad mesh on face zonelets.\n\nShellBLControl allows you to control generation of quad mesh on face zonelets. Controls include setting the edge scope, face scope and growth parameters.\n\nParameters\n\nmodel (Model) – Server model to create ShellBLControl object.\n\nid (int) – Id of the ShellBLControl.\n\nobject_id (int) – Object id of the ShellBLControl.\n\nname (str) – Name of the ShellBLControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControl.html#overview","title":"ShellBLControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_edge_scope\n\nGets the edge scope.\n\nget_growth_params\n\nGets thin ShellBL parameters for ShellBL control.\n\nget_surface_scope\n\nGets the surface scope.\n\nset_edge_scope\n\nSets the edge scope.\n\nset_growth_params\n\nSets growth parameters for ShellBL control.\n\nset_surface_scope\n\nSets the face zonelet scope.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of ShellBLControl.\n\nname\n\nGet the name of ShellBLControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControl.html#import-detail","title":"ShellBLControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControl.html#property-detail","title":"ShellBLControl > Property detail","text":"Property detail\n\n\n\nproperty ShellBLControl.id\n\nGet the id of ShellBLControl.\n\n\n\nproperty ShellBLControl.name\n\nGet the name of ShellBLControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControl.html#method-detail","title":"ShellBLControl > Method detail","text":"Method detail\n\n\n\nShellBLControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nShellBLControl.get_edge_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the edge scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = shellbl_control.get_edge_scope()\n\n\n\nShellBLControl.get_growth_params() -> ansys.meshing.prime.params.primestructs.ShellBLControlGrowthParams\n\nGets thin ShellBL parameters for ShellBL control.\n\nReturns\n\nReturns the ShellBLControlGrowthParams.\n\nReturn type\n\nShellBLControlGrowthParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = shellBL_ctrl.get_growth_params()\n\n\n\nShellBLControl.get_surface_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the surface scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = shellbl_control.get_surface_scope()\n\n\n\nShellBLControl.set_edge_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the edge scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_edge_scope(entities)\n\n\n\nShellBLControl.set_growth_params(params: ansys.meshing.prime.params.primestructs.ShellBLControlGrowthParams)\n\nSets growth parameters for ShellBL control.\n\nParameters\n\nparams (ShellBLControlGrowthParams) – Parameters to set ShellBL growth.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_growth_params(ShellBLControlGrowthParams(model=model))\n\n\n\nShellBLControl.set_surface_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the face zonelet scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_surface_scope(entities)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilities/index.html#the-topoutilitiespy-module","title":"The topoutilities.py module","text":"The topoutilities.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilities/index.html#summary","title":"The topoutilities.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTopoUtilities\n\nPerforms various general topology utility algorithms. For example, fill hole.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilities/index.html#description","title":"The topoutilities.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesResults.html#deletetopoentitiesresults","title":"DeleteTopoEntitiesResults","text":"DeleteTopoEntitiesResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.DeleteTopoEntitiesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with delete topoentities.\n\nParameters\n\nmodel (Model) – Model to create a DeleteTopoEntitiesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with delete topoentities.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteTopoEntitiesResults object with provided parameters.\n\nExamples\n\n>>> delete_topo_entities_results = prime.DeleteTopoEntitiesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesResults.html#overview","title":"DeleteTopoEntitiesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with delete topoentities.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteTopoEntitiesResults object.\n\nset_default\n\nSet the default values of the DeleteTopoEntitiesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesResults.html#import-detail","title":"DeleteTopoEntitiesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesResults.html#property-detail","title":"DeleteTopoEntitiesResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteTopoEntitiesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with delete topoentities."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesResults.html#method-detail","title":"DeleteTopoEntitiesResults > Method detail","text":"Method detail\n\n\n\nDeleteTopoEntitiesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteTopoEntitiesResults.__str__() -> str\n\n\n\n\n\nstatic DeleteTopoEntitiesResults.print_default()\n\nPrint the default values of DeleteTopoEntitiesResults object.\n\nExamples\n\n>>> DeleteTopoEntitiesResults.print_default()\n\n\n\nstatic DeleteTopoEntitiesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteTopoEntitiesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with delete topoentities."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/LabelToZoneMethod.html#labeltozonemethod","title":"LabelToZoneMethod","text":"LabelToZoneMethod\n\n\n\nclass ansys.meshing.prime.lucid.mesh_util.LabelToZoneMethod\n\nProvides for creating zones from labels."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/LabelToZoneMethod.html#overview","title":"LabelToZoneMethod > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nSIMPLE\n\nSimple method for creating zones from labels."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/LabelToZoneMethod.html#import-detail","title":"LabelToZoneMethod > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/LabelToZoneMethod.html#attribute-detail","title":"LabelToZoneMethod > Attribute detail","text":"Attribute detail\n\n\n\nLabelToZoneMethod.SIMPLE = 0\n\nSimple method for creating zones from labels.\n\nEntities are queried using labels, and zones are created."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/index.html#the-surferstructspy-module","title":"The surferstructs.py module","text":"The surferstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/index.html#summary","title":"The surferstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAdvancedSurferSetup\n\nDefine advanced settings for remeshing operation.\n\nCreateShellBLResults\n\nResults associated with the ShellBL mesh.\n\nLocalSurferParams\n\nParameters to perform local surface remeshing.\n\nLocalSurferResults\n\nResults associated with the local surface mesh.\n\nShellBLParams\n\nParameters used to generate ShellBL.\n\nSurferParams\n\nParameters used to generate surface mesh.\n\nSurferResults\n\nResults associated with the surface mesh.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/index.html#description","title":"The surferstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshParams.html#checkmeshparams","title":"CheckMeshParams","text":"CheckMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.volumemeshtoolstructs.CheckMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to check mesh.\n\nParameters\n\nmodel (Model) – Model to create a CheckMeshParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a CheckMeshParams object with provided parameters.\n\nExamples\n\n>>> check_mesh_params = prime.CheckMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshParams.html#overview","title":"CheckMeshParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckMeshParams object.\n\nset_default\n\nSet the default values of the CheckMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshParams.html#import-detail","title":"CheckMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshParams.html#method-detail","title":"CheckMeshParams > Method detail","text":"Method detail\n\n\n\nCheckMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckMeshParams.__str__() -> str\n\n\n\n\n\nstatic CheckMeshParams.print_default()\n\nPrint the default values of CheckMeshParams object.\n\nExamples\n\n>>> CheckMeshParams.print_default()\n\n\n\nstatic CheckMeshParams.set_default()\n\nSet the default values of the CheckMeshParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapResult.html#wrapresult","title":"WrapResult","text":"WrapResult\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, id: int = None, name: str = None, json_data: dict = None, **kwargs)\n\nResult structure associated to Wrap operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapResult object with default parameters.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the wrap operation.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrap operation.\n\nid (int, optional) – Id of the wrapper part created.\n\nname (str, optional) – Name of wrapper part created.\n\njson_data (dict, optional) – JSON dictionary to create a WrapResult object with provided parameters.\n\nExamples\n\n>>> wrap_result = prime.WrapResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapResult.html#overview","title":"WrapResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a wrap operation.\n\nid\n\nId of the wrapper part created.\n\nname\n\nName of wrapper part created.\n\nwarning_codes\n\nWarning codes associated with the wrap operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapResult object.\n\nset_default\n\nSet the default values of the WrapResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapResult.html#import-detail","title":"WrapResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapResult.html#property-detail","title":"WrapResult > Property detail","text":"Property detail\n\n\n\nproperty WrapResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a wrap operation.\n\n\n\nproperty WrapResult.id: int\n\nId of the wrapper part created.\n\n\n\nproperty WrapResult.name: str\n\nName of wrapper part created.\n\n\n\nproperty WrapResult.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the wrap operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapResult.html#method-detail","title":"WrapResult > Method detail","text":"Method detail\n\n\n\nWrapResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapResult.__str__() -> str\n\n\n\n\n\nstatic WrapResult.print_default()\n\nPrint the default values of WrapResult object.\n\nExamples\n\n>>> WrapResult.print_default()\n\n\n\nstatic WrapResult.set_default(warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, id: int = None, name: str = None)\n\nSet the default values of the WrapResult object.\n\nParameters\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the wrap operation.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrap operation.\n\nid (int, optional) – Id of the wrapper part created.\n\nname (str, optional) – Name of wrapper part created."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LSDynaFileFormatType.html#lsdynafileformattype","title":"LSDynaFileFormatType","text":"LSDynaFileFormatType\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.LSDynaFileFormatType\n\nProvides the format type to write the LS-DYNA file."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LSDynaFileFormatType.html#overview","title":"LSDynaFileFormatType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nI10\n\nOption to select 10-char width format to write ids for elements and nodes.\n\nREGULAR\n\nOption to select 8-char width format to write ids for elements and nodes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LSDynaFileFormatType.html#import-detail","title":"LSDynaFileFormatType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LSDynaFileFormatType.html#attribute-detail","title":"LSDynaFileFormatType > Attribute detail","text":"Attribute detail\n\n\n\nLSDynaFileFormatType.I10 = 1\n\nOption to select 10-char width format to write ids for elements and nodes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nLSDynaFileFormatType.REGULAR = 0\n\nOption to select 8-char width format to write ids for elements and nodes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mapdlcdbexportutils/index.html#the-mapdlcdbexportutilspy-module","title":"The mapdlcdbexportutils.py module","text":"The mapdlcdbexportutils.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mapdlcdbexportutils/index.html#summary","title":"The mapdlcdbexportutils.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ngenerate_mapdl_commands\n\nGenerate the additional MAPDL commands to be added to the CDB export file.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mapdlcdbexportutils/index.html#description","title":"The mapdlcdbexportutils.py module > Description","text":"Description\n\nModule for MAPDL cdb export utilities."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/PrimePlotter.html#primeplotter","title":"PrimePlotter","text":"PrimePlotter\n\n\n\nclass ansys.meshing.prime.graphics.PrimePlotter(use_trame: bool | None = None, allow_picking: bool | None = True)\n\nCreate a plotter for PyPrimeMesh models.\n\nThis plotter is a wrapper around the PyAnsys generic plotter\nwith additional functionality for PyPrimeMesh.\n\nParameters\n\nuse_trame (Optional[bool], default: None) – Whether to use the Trame visualizer.\n\nallow_picking (Optional[bool], default: True.) – Whether to allow picking."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/PrimePlotter.html#overview","title":"PrimePlotter > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_model\n\nAdd a Prime model to the plotter.\n\nadd_model_pd\n\nAdd a model to the plotter.\n\nadd_scope\n\nAdd a scope to the plotter.\n\nget_scalar_colors\n\nGet the scalar colors for the mesh.\n\nplot\n\nAdd an object to the plotter.\n\nplot_iter\n\nAdd a list of any type of object to the scene.\n\nshow\n\nShow the plotted objects.\n\nProperties\n\n\n\n\n\nbackend\n\nReturn the base plotter object.\n\ninfo_actor_map\n\nGet the information actor map for the selected information widget."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/PrimePlotter.html#import-detail","title":"PrimePlotter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/PrimePlotter.html#property-detail","title":"PrimePlotter > Property detail","text":"Property detail\n\n\n\nproperty PrimePlotter.backend\n\nReturn the base plotter object.\n\n\n\nproperty PrimePlotter.info_actor_map: Dict\n\nGet the information actor map for the selected information widget.\n\nReturns\n\nInformation actor map.\n\nReturn type\n\nDict"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/PrimePlotter.html#method-detail","title":"PrimePlotter > Method detail","text":"Method detail\n\n\n\nPrimePlotter.add_model(model: ansys.meshing.prime.core.model.Model, scope: ansys.meshing.prime.ScopeDefinition = None, update: bool = False) -> None\n\nAdd a Prime model to the plotter.\n\nParameters\n\nmodel (Model) – Prime model to add.\n\nscope (prime.ScopeDefinition, default: None) – Scope to show, if any.\n\nupdate (bool, default: False) – Whether to update the display.\n\n\n\nPrimePlotter.add_model_pd(model_pd: Dict) -> None\n\nAdd a model to the plotter.\n\nParameters\n\nmodel (Model) – Model to add to the plotter.\n\n\n\nPrimePlotter.add_scope(model: ansys.meshing.prime.core.model.Model, scope: ansys.meshing.prime.ScopeDefinition, update: bool = False) -> None\n\nAdd a scope to the plotter.\n\nParameters\n\nmodel (Model) – Model to add to the plotter.\n\nscope (prime.ScopeDefinition) – Scope to add to the plotter.\n\nupdate (bool, default: False) – Whether to update the display.\n\n\n\nPrimePlotter.get_scalar_colors(mesh_info: ansys.meshing.prime.core.mesh.DisplayMeshInfo) -> numpy.ndarray\n\nGet the scalar colors for the mesh.\n\nParameters\n\nmesh_info (DisplayMeshInfo) – Mesh information that generates an appropriate color.\n\nReturns\n\nScalar colors for the mesh.\n\nReturn type\n\nnp.ndarray\n\n\n\nPrimePlotter.plot(plottable_object: Any, scope: ansys.meshing.prime.ScopeDefinition = None, name_filter: str = None, update: bool = False, **plotting_options)\n\nAdd an object to the plotter.\n\nAllowed types are PyPrime models or any PyVista plottable object.\n\nParameters\n\nplottable_object (Any) – Object to add to the plotter.\n\nscope (prime.ScopeDefinition, default: None) – Scope to plot.\n\nname_filter (str, default: None) – Regular expression with the desired name or names to include in the plotter.\n\nupdate (bool, default: False) – Whether to update the display. Required when any mesh is updated.\n\n**plotting_options (dict, default: None) – Keyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects.\n\nExamples\n\n>>> import pyvista as pv\n>>> from ansys.meshing.prime.graphics import PrimePlotter\n>>> import ansys.meshing.prime as prime\n>>> model = prime.launch_prime().model\n>>> prime.lucid.Mesh(model).read(prime.examples.download_block_model_fmd())\n>>> scope = prime.ScopeDefinition(model, label_expression=\"my_group\")\n>>> plotter = PrimePlotter()\n>>> # pyvista sphere with plotting options added for opacity and color\n>>> plotter.plot(plottable_object=pv.Sphere(radius=2.0), opacity=0.5, color=\"red\")\n>>> plotter.plot(plottable_object=model, scope=scope)\n>>> plotter.show()\n\n\n\nPrimePlotter.plot_iter(plotting_list: List[Any], name_filter: str = None, update: bool = False, **plotting_options) -> None\n\nAdd a list of any type of object to the scene.\n\nAllowed types are PyPrime models or any PyVista plottable object.\n\nParameters\n\nplotting_list (List[Any]) – List of objects to plot.\n\nname_filter (str, default: None) – Regular expression with the desired name or names to include in the plotter.\n\nupdate (bool, default: False) – Whether to update the display.\n\n**plotting_options (dict, default: None) – Keyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects.\n\n\n\nPrimePlotter.show(plottable_object: Any = None, screenshot: str = None, name_filter: str = None, scope: ansys.meshing.prime.ScopeDefinition = None, **plotting_options) -> None\n\nShow the plotted objects.\n\nParameters\n\nplottable_object (Any, default: None) – Object to show.\n\nscreenshot (str, default: None) – Path to save a screenshot to.\n\nname_filter (str, default: None) – Regular expression with the desired name or names to include in the plotter.\n\n**plotting_options (dict, default: None) – Keyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects."},{"objectID":"Home","href":"examples/gallery_examples/index.html#examples","title":"Examples","text":"Examples\n\nThese examples show how to use PyPrimeMesh to prepare meshes.\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_11_solder_ball.py"},{"objectID":"Home","href":"examples/gallery_examples/index.html#miscellaneous-examples","title":"Examples > Miscellaneous examples","text":"Miscellaneous examples\n\nThese examples provide tips and tricks for using PyPrimeMesh.\n\nsphx_glr_examples_gallery_examples_misc_example_template.py\n\n\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapRegion.html#wrapregion","title":"WrapRegion","text":"WrapRegion\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapRegion\n\nIndicates source type to extract wrapper region."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapRegion.html#overview","title":"WrapRegion > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEXTERNAL\n\nOption to extract exterior wrapper region.\n\nLARGESTINTERNAL\n\nOption to extract largest internal wrapper region.\n\nMATERIALPOINT\n\nOption to use live material points to extract wrapper region."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapRegion.html#import-detail","title":"WrapRegion > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapRegion.html#attribute-detail","title":"WrapRegion > Attribute detail","text":"Attribute detail\n\n\n\nWrapRegion.EXTERNAL = 1\n\nOption to extract exterior wrapper region.\n\n\n\nWrapRegion.LARGESTINTERNAL = 2\n\nOption to extract largest internal wrapper region.\n\n\n\nWrapRegion.MATERIALPOINT = 0\n\nOption to use live material points to extract wrapper region."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/CreateZoneResults.html#createzoneresults","title":"CreateZoneResults","text":"CreateZoneResults\n\n\n\nclass ansys.meshing.prime.autogen.modelstructs.CreateZoneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, zone_id: int = None, assigned_name: str = None, json_data: dict = None, **kwargs)\n\nResults associated with the create zone.\n\nParameters\n\nmodel (Model) – Model to create a CreateZoneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the create zone operation.\n\nzone_id (int, optional) – Id of newly created zone.\n\nassigned_name (str, optional) – Assigned name of newly created zone.\n\njson_data (dict, optional) – JSON dictionary to create a CreateZoneResults object with provided parameters.\n\nExamples\n\n>>> create_zone_results = prime.CreateZoneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/CreateZoneResults.html#overview","title":"CreateZoneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_name\n\nAssigned name of newly created zone.\n\nerror_code\n\nError code associated with the create zone operation.\n\nzone_id\n\nId of newly created zone.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateZoneResults object.\n\nset_default\n\nSet the default values of the CreateZoneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/CreateZoneResults.html#import-detail","title":"CreateZoneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/CreateZoneResults.html#property-detail","title":"CreateZoneResults > Property detail","text":"Property detail\n\n\n\nproperty CreateZoneResults.assigned_name: str\n\nAssigned name of newly created zone.\n\n\n\nproperty CreateZoneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the create zone operation.\n\n\n\nproperty CreateZoneResults.zone_id: int\n\nId of newly created zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/CreateZoneResults.html#method-detail","title":"CreateZoneResults > Method detail","text":"Method detail\n\n\n\nCreateZoneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateZoneResults.__str__() -> str\n\n\n\n\n\nstatic CreateZoneResults.print_default()\n\nPrint the default values of CreateZoneResults object.\n\nExamples\n\n>>> CreateZoneResults.print_default()\n\n\n\nstatic CreateZoneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, zone_id: int = None, assigned_name: str = None)\n\nSet the default values of the CreateZoneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the create zone operation.\n\nzone_id (int, optional) – Id of newly created zone.\n\nassigned_name (str, optional) – Assigned name of newly created zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseParams.html#collapseparams","title":"CollapseParams","text":"CollapseParams\n\n\n\nclass ansys.meshing.prime.CollapseParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType = None, collapse_ratio: float = None, preserve_quality: bool = None, target_skewness: float = None, keep_edge_connectivity: bool = None, json_data: dict = None, **kwargs)\n\nParameters to collapse face elements.\n\nParameters\n\nmodel (Model) – Model to create a CollapseParams object with default parameters.\n\nfeature_type (SurfaceFeatureType, optional) – Feature type to be preserved when performing collapse.\n\ncollapse_ratio (float, optional) – Maximum ratio of shortest face edge length to longest face edge length.\n\npreserve_quality (bool, optional) – Option to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\ntarget_skewness (float, optional) – Skewness limit used as target to preserve quality. Better quality elements are skipped for collapse.\n\nkeep_edge_connectivity (bool, optional) – Option to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a CollapseParams object with provided parameters.\n\nExamples\n\n>>> collapse_params = prime.CollapseParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseParams.html#overview","title":"CollapseParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncollapse_ratio\n\nMaximum ratio of shortest face edge length to longest face edge length.\n\nfeature_type\n\nFeature type to be preserved when performing collapse.\n\nkeep_edge_connectivity\n\nOption to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces.\n\npreserve_quality\n\nOption to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\ntarget_skewness\n\nSkewness limit used as target to preserve quality. Better quality elements are skipped for collapse.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CollapseParams object.\n\nset_default\n\nSet the default values of the CollapseParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseParams.html#import-detail","title":"CollapseParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseParams.html#property-detail","title":"CollapseParams > Property detail","text":"Property detail\n\n\n\nproperty CollapseParams.collapse_ratio: float\n\nMaximum ratio of shortest face edge length to longest face edge length.\n\n\n\nproperty CollapseParams.feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType\n\nFeature type to be preserved when performing collapse.\n\n\n\nproperty CollapseParams.keep_edge_connectivity: bool\n\nOption to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty CollapseParams.preserve_quality: bool\n\nOption to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\n\n\nproperty CollapseParams.target_skewness: float\n\nSkewness limit used as target to preserve quality. Better quality elements are skipped for collapse."},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseParams.html#method-detail","title":"CollapseParams > Method detail","text":"Method detail\n\n\n\nCollapseParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCollapseParams.__str__() -> str\n\n\n\n\n\nstatic CollapseParams.print_default()\n\nPrint the default values of CollapseParams object.\n\nExamples\n\n>>> CollapseParams.print_default()\n\n\n\nstatic CollapseParams.set_default(feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType = None, collapse_ratio: float = None, preserve_quality: bool = None, target_skewness: float = None, keep_edge_connectivity: bool = None)\n\nSet the default values of the CollapseParams object.\n\nParameters\n\nfeature_type (SurfaceFeatureType, optional) – Feature type to be preserved when performing collapse.\n\ncollapse_ratio (float, optional) – Maximum ratio of shortest face edge length to longest face edge length.\n\npreserve_quality (bool, optional) – Option to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\ntarget_skewness (float, optional) – Skewness limit used as target to preserve quality. Better quality elements are skipped for collapse.\n\nkeep_edge_connectivity (bool, optional) – Option to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces."},{"objectID":"Home","href":"user_guide/concepts.html#concepts-and-model-structure","title":"Concepts and model structure","text":"Concepts and model structure"},{"objectID":"Home","href":"user_guide/concepts.html#model","title":"Concepts and model structure > Model","text":"Model\n\nThe Model class is the top-level container for PyPrimeMesh.\nIt contains all information about the PyPrimeMesh session.\n\nThis code shows how the Model class is accessed from the\nClient class:\n\nThis code imports a CAD file containing a single part:\n\nThe code prints the Model class to obtain a summary\nof the current session:"},{"objectID":"Home","href":"user_guide/concepts.html#parts","title":"Concepts and model structure > Parts","text":"Parts\n\nGeometry topology and mesh data in the Model class is stored\nwithin any number of parts parameters:\n\nEach Part class can contain TopoEntities or zonelets.\nTopoEntities are TopoParts created from CAD geometry imports. Zonelets are mesh parts created\nfrom faceted geometry and mesh imports. TopoEntities and zonelets are characterized by the\ndimension of entities."},{"objectID":"Home","href":"user_guide/concepts.html#topoentities","title":"Concepts and model structure > TopoEntities","text":"TopoEntities\n\nTopoEntities are created from importing a CAD geometry and represent connectivity information.\nTopoEntities have geometric representation that can be defined by splines or facets. The mesh\ngenerated on TopoEntities are projected on the geometry representation.\n\nThere are four types of TopoEntities:\n\nTopoNode: TopoEntity representing points\n\nTopoEdge: TopoEntity representing curves\n\nTopoFace: TopoEntity representing surfaces\n\nTopoVolume: TopoEntity representing volumes"},{"objectID":"Home","href":"user_guide/concepts.html#zonelets","title":"Concepts and model structure > Zonelets","text":"Zonelets\n\nZonelets are created from importing mesh files and are groups of interconnected entities in a mesh.\n\nThere are three types of zonelets:\n\nFaceZonelet: A group of interconnected faces\n\nEdgeZonelet: A group of interconnected edges\n\nCellZonelet: A group of interconnected cells\n\nA volume is a set of face zonelets that define a closed volume without containing any cell elements."},{"objectID":"Home","href":"user_guide/concepts.html#zones","title":"Concepts and model structure > Zones","text":"Zones\n\nZonelets or TopoEntities can be further grouped into zones. A zonelet or TopoEntity can only be present in a single zone.\n\nWhen exporting a mesh (MSH or CAS) file to the Fluent solver, you should define the boundary conditions for the zones.\n\nWhen importing a Fluent solver model, each zone is defined as a single zonelet."},{"objectID":"Home","href":"user_guide/concepts.html#labels","title":"Concepts and model structure > Labels","text":"Labels\n\nLabels allow overlapping groups of zonelets or TopoEntities.\n\nWhen importing CAD files, each group or named selection generates a label.\n\nWhen exporting to a Mechanical solver (CDB) file, each label is exported as a component."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeParams.html#searchbyspikeparams","title":"SearchBySpikeParams","text":"SearchBySpikeParams\n\n\n\nclass ansys.meshing.prime.SearchBySpikeParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, spike_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters to control spike detection.\n\nParameters\n\nmodel (Model) – Model to create a SearchBySpikeParams object with default parameters.\n\nspike_angle (float, optional) – Threshold angle for spike detection.\n\njson_data (dict, optional) – JSON dictionary to create a SearchBySpikeParams object with provided parameters.\n\nExamples\n\n>>> search_by_spike_params = prime.SearchBySpikeParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeParams.html#overview","title":"SearchBySpikeParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nspike_angle\n\nThreshold angle for spike detection.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchBySpikeParams object.\n\nset_default\n\nSet the default values of the SearchBySpikeParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeParams.html#import-detail","title":"SearchBySpikeParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeParams.html#property-detail","title":"SearchBySpikeParams > Property detail","text":"Property detail\n\n\n\nproperty SearchBySpikeParams.spike_angle: float\n\nThreshold angle for spike detection."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeParams.html#method-detail","title":"SearchBySpikeParams > Method detail","text":"Method detail\n\n\n\nSearchBySpikeParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchBySpikeParams.__str__() -> str\n\n\n\n\n\nstatic SearchBySpikeParams.print_default()\n\nPrint the default values of SearchBySpikeParams object.\n\nExamples\n\n>>> SearchBySpikeParams.print_default()\n\n\n\nstatic SearchBySpikeParams.set_default(spike_angle: float = None)\n\nSet the default values of the SearchBySpikeParams object.\n\nParameters\n\nspike_angle (float, optional) – Threshold angle for spike detection."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/unit_test_examples/download_test_examples.html#ansysmeshingprimeexamplesunit_test_examplesdownload_test_examples","title":"ansys.meshing.prime.examples.unit_test_examples.download_test_examples","text":"ansys.meshing.prime.examples.unit_test_examples.download_test_examples\n\n\n\nansys.meshing.prime.examples.unit_test_examples.download_test_examples(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the example files necessary for unit testing.\n\nParameters\n\ndestination (str, optional) – Path to download the test example files to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to always download the test example files. The default is\nFalse, in which case if the test example files are cached, they\nare reused.\n\nReturns\n\nLocal paths to the downloaded test example files.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     examples = prime_examples.unit_test_examples.download_test_examples()"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactElementTypeParams.html#contactelementtypeparams","title":"ContactElementTypeParams","text":"ContactElementTypeParams\n\n\n\nclass ansys.meshing.prime.ContactElementTypeParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tie_surf_to_surf: int = None, tie_node_to_surf: int = None, contact_pair_surf_to_surf: int = None, contact_pair_node_to_surf: int = None, json_data: dict = None, **kwargs)\n\nParameters to control element type choices for contact surfaces in TIEs and CONTACT PAIRs.\n\nParameters\n\nmodel (Model) – Model to create a ContactElementTypeParams object with default parameters.\n\ntie_surf_to_surf (int, optional) – Element type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.This is a beta parameter. The behavior and name may change in the future.\n\ntie_node_to_surf (int, optional) – Element type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.This is a beta parameter. The behavior and name may change in the future.\n\ncontact_pair_surf_to_surf (int, optional) – Element type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.This is a beta parameter. The behavior and name may change in the future.\n\ncontact_pair_node_to_surf (int, optional) – Element type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ContactElementTypeParams object with provided parameters.\n\nExamples\n\n>>> contact_element_type_params = prime.ContactElementTypeParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactElementTypeParams.html#overview","title":"ContactElementTypeParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontact_pair_node_to_surf\n\nElement type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ncontact_pair_surf_to_surf\n\nElement type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ntie_node_to_surf\n\nElement type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\ntie_surf_to_surf\n\nElement type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ContactElementTypeParams object.\n\nset_default\n\nSet the default values of the ContactElementTypeParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactElementTypeParams.html#import-detail","title":"ContactElementTypeParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactElementTypeParams.html#property-detail","title":"ContactElementTypeParams > Property detail","text":"Property detail\n\n\n\nproperty ContactElementTypeParams.contact_pair_node_to_surf: int\n\nElement type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ContactElementTypeParams.contact_pair_surf_to_surf: int\n\nElement type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ContactElementTypeParams.tie_node_to_surf: int\n\nElement type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ContactElementTypeParams.tie_surf_to_surf: int\n\nElement type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactElementTypeParams.html#method-detail","title":"ContactElementTypeParams > Method detail","text":"Method detail\n\n\n\nContactElementTypeParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nContactElementTypeParams.__str__() -> str\n\n\n\n\n\nstatic ContactElementTypeParams.print_default()\n\nPrint the default values of ContactElementTypeParams object.\n\nExamples\n\n>>> ContactElementTypeParams.print_default()\n\n\n\nstatic ContactElementTypeParams.set_default(tie_surf_to_surf: int = None, tie_node_to_surf: int = None, contact_pair_surf_to_surf: int = None, contact_pair_node_to_surf: int = None)\n\nSet the default values of the ContactElementTypeParams object.\n\nParameters\n\ntie_surf_to_surf (int, optional) – Element type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ntie_node_to_surf (int, optional) – Element type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\ncontact_pair_surf_to_surf (int, optional) – Element type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ncontact_pair_node_to_surf (int, optional) – Element type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdParams.html#searchinfobyregisteridparams","title":"SearchInfoByRegisterIdParams","text":"SearchInfoByRegisterIdParams\n\n\n\nclass ansys.meshing.prime.SearchInfoByRegisterIdParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to retrieve information on registered faces.\n\nParameters\n\nmodel (Model) – Model to create a SearchInfoByRegisterIdParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a SearchInfoByRegisterIdParams object with provided parameters.\n\nExamples\n\n>>> search_info_by_register_id_params = prime.SearchInfoByRegisterIdParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdParams.html#overview","title":"SearchInfoByRegisterIdParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchInfoByRegisterIdParams object.\n\nset_default\n\nSet the default values of the SearchInfoByRegisterIdParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdParams.html#import-detail","title":"SearchInfoByRegisterIdParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdParams.html#method-detail","title":"SearchInfoByRegisterIdParams > Method detail","text":"Method detail\n\n\n\nSearchInfoByRegisterIdParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchInfoByRegisterIdParams.__str__() -> str\n\n\n\n\n\nstatic SearchInfoByRegisterIdParams.print_default()\n\nPrint the default values of SearchInfoByRegisterIdParams object.\n\nExamples\n\n>>> SearchInfoByRegisterIdParams.print_default()\n\n\n\nstatic SearchInfoByRegisterIdParams.set_default()\n\nSet the default values of the SearchInfoByRegisterIdParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineTetMeshParams.html#refinetetmeshparams","title":"RefineTetMeshParams","text":"RefineTetMeshParams\n\n\n\nclass ansys.meshing.prime.RefineTetMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, nisr: int = None, niss: int = None, nist: int = None, tolerance: float = None, json_data: dict = None, **kwargs)\n\nParameters for meshing the solid spline.\n\nParameters\n\nmodel (Model) – Model to create a RefineTetMeshParams object with default parameters.\n\nnisr (int, optional) – Interpolation elements in the local r-direction.This is a beta parameter. The behavior and name may change in the future.\n\nniss (int, optional) – Interpolation elements in the local s-direction.This is a beta parameter. The behavior and name may change in the future.\n\nnist (int, optional) – Interpolation elements in the local t-direction.This is a beta parameter. The behavior and name may change in the future.\n\ntolerance (float, optional) – Tolerance for boundary refinement.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a RefineTetMeshParams object with provided parameters.\n\nExamples\n\n>>> refine_tet_mesh_params = prime.RefineTetMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineTetMeshParams.html#overview","title":"RefineTetMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nnisr\n\nInterpolation elements in the local r-direction.\n\nniss\n\nInterpolation elements in the local s-direction.\n\nnist\n\nInterpolation elements in the local t-direction.\n\ntolerance\n\nTolerance for boundary refinement.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RefineTetMeshParams object.\n\nset_default\n\nSet the default values of the RefineTetMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineTetMeshParams.html#import-detail","title":"RefineTetMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineTetMeshParams.html#property-detail","title":"RefineTetMeshParams > Property detail","text":"Property detail\n\n\n\nproperty RefineTetMeshParams.nisr: int\n\nInterpolation elements in the local r-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RefineTetMeshParams.niss: int\n\nInterpolation elements in the local s-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RefineTetMeshParams.nist: int\n\nInterpolation elements in the local t-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RefineTetMeshParams.tolerance: float\n\nTolerance for boundary refinement.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineTetMeshParams.html#method-detail","title":"RefineTetMeshParams > Method detail","text":"Method detail\n\n\n\nRefineTetMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRefineTetMeshParams.__str__() -> str\n\n\n\n\n\nstatic RefineTetMeshParams.print_default()\n\nPrint the default values of RefineTetMeshParams object.\n\nExamples\n\n>>> RefineTetMeshParams.print_default()\n\n\n\nstatic RefineTetMeshParams.set_default(nisr: int = None, niss: int = None, nist: int = None, tolerance: float = None)\n\nSet the default values of the RefineTetMeshParams object.\n\nParameters\n\nnisr (int, optional) – Interpolation elements in the local r-direction.\n\nniss (int, optional) – Interpolation elements in the local s-direction.\n\nnist (int, optional) – Interpolation elements in the local t-direction.\n\ntolerance (float, optional) – Tolerance for boundary refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryResult.html#sizecontrolsummaryresult","title":"SizeControlSummaryResult","text":"SizeControlSummaryResult\n\n\n\nclass ansys.meshing.prime.SizeControlSummaryResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, message: str = None, json_data: dict = None, **kwargs)\n\nResults of size control summary.\n\nParameters\n\nmodel (Model) – Model to create a SizeControlSummaryResult object with default parameters.\n\nmessage (str, optional) – Size control summary text.\n\njson_data (dict, optional) – JSON dictionary to create a SizeControlSummaryResult object with provided parameters.\n\nExamples\n\n>>> size_control_summary_result = prime.SizeControlSummaryResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryResult.html#overview","title":"SizeControlSummaryResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmessage\n\nSize control summary text.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SizeControlSummaryResult object.\n\nset_default\n\nSet the default values of the SizeControlSummaryResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryResult.html#import-detail","title":"SizeControlSummaryResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryResult.html#property-detail","title":"SizeControlSummaryResult > Property detail","text":"Property detail\n\n\n\nproperty SizeControlSummaryResult.message: str\n\nSize control summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryResult.html#method-detail","title":"SizeControlSummaryResult > Method detail","text":"Method detail\n\n\n\nSizeControlSummaryResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeControlSummaryResult.__str__() -> str\n\n\n\n\n\nstatic SizeControlSummaryResult.print_default()\n\nPrint the default values of SizeControlSummaryResult object.\n\nExamples\n\n>>> SizeControlSummaryResult.print_default()\n\n\n\nstatic SizeControlSummaryResult.set_default(message: str = None)\n\nSet the default values of the SizeControlSummaryResult object.\n\nParameters\n\nmessage (str, optional) – Size control summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/index.html#the-morpherbcsstructspy-module","title":"The morpherbcsstructs.py module","text":"The morpherbcsstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/index.html#summary","title":"The morpherbcsstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBCsVolumetricModality\n\nIndicate options to identify morphable region in input volumetric mesh.\n\nMorphBCParams\n\nMorphBCParams contains the input parameters for calculating the boundary conditions for a morphing problem.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/index.html#description","title":"The morpherbcsstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/index.html#the-connectstructspy-module","title":"The connectstructs.py module","text":"The connectstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/index.html#summary","title":"The connectstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nConnectResults\n\nResults associated with the connection operations.\n\nFuseOption\n\nType to specify treatment of surfaces for fusing.\n\nFuseParams\n\nParameters for fuse operation.\n\nFuseResults\n\nResults associated with the fuse operations.\n\nIntersectParams\n\nParameters used for intersection.\n\nJoinParams\n\nParameters used for join.\n\nJoinSeparateMethod\n\nJoin separation method to handle separated overlapped zonelets.\n\nMergeBoundaryNodesParams\n\nParameters used for the merge boundary nodes operation.\n\nMergeBoundaryNodesResults\n\nResults associated with the merge nodes operation.\n\nMergeNodeType\n\nType of nodes to be merged.\n\nOverlapPairs\n\nProvides ids of a pair of overlapping face zonelets.\n\nOverlapSearchResults\n\nProvides ids of a pair of overlapping face zonelets.\n\nStitchParams\n\nParameters used for stitch operation.\n\nStitchType\n\nStitch type depending on nature of surface boundary edges to be stitched.\n\nSubtractVolumesParams\n\nParameters to control the volume subtract operation.\n\nSubtractVolumesResults\n\nResults of the volume subtract operation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/index.html#description","title":"The connectstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfer/index.html#the-surferpy-module","title":"The surfer.py module","text":"The surfer.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfer/index.html#summary","title":"The surfer.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSurfer\n\nGenerates surface mesh.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfer/index.html#description","title":"The surfer.py module > Description","text":"Description\n\nModule for surfer data."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_f1_rw_main_plane_stl.html#ansysmeshingprimeexamplesdownload_f1_rw_main_plane_stl","title":"ansys.meshing.prime.examples.download_f1_rw_main_plane_stl","text":"ansys.meshing.prime.examples.download_f1_rw_main_plane_stl\n\n\n\nansys.meshing.prime.examples.download_f1_rw_main_plane_stl(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_main_plane = prime_examples.download_f1_rw_main_plane_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_main_plane, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/PrimePlotter.html#primeplotter","title":"PrimePlotter","text":"PrimePlotter\n\n\n\nclass ansys.meshing.prime.graphics.plotter.PrimePlotter(use_trame: bool | None = None, allow_picking: bool | None = True)\n\nCreate a plotter for PyPrimeMesh models.\n\nThis plotter is a wrapper around the PyAnsys generic plotter\nwith additional functionality for PyPrimeMesh.\n\nParameters\n\nuse_trame (Optional[bool], default: None) – Whether to use the Trame visualizer.\n\nallow_picking (Optional[bool], default: True.) – Whether to allow picking."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/PrimePlotter.html#overview","title":"PrimePlotter > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_model\n\nAdd a Prime model to the plotter.\n\nadd_model_pd\n\nAdd a model to the plotter.\n\nadd_scope\n\nAdd a scope to the plotter.\n\nget_scalar_colors\n\nGet the scalar colors for the mesh.\n\nplot\n\nAdd an object to the plotter.\n\nplot_iter\n\nAdd a list of any type of object to the scene.\n\nshow\n\nShow the plotted objects.\n\nProperties\n\n\n\n\n\nbackend\n\nReturn the base plotter object.\n\ninfo_actor_map\n\nGet the information actor map for the selected information widget."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/PrimePlotter.html#import-detail","title":"PrimePlotter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/PrimePlotter.html#property-detail","title":"PrimePlotter > Property detail","text":"Property detail\n\n\n\nproperty PrimePlotter.backend\n\nReturn the base plotter object.\n\n\n\nproperty PrimePlotter.info_actor_map: Dict\n\nGet the information actor map for the selected information widget.\n\nReturns\n\nInformation actor map.\n\nReturn type\n\nDict"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/PrimePlotter.html#method-detail","title":"PrimePlotter > Method detail","text":"Method detail\n\n\n\nPrimePlotter.add_model(model: ansys.meshing.prime.core.model.Model, scope: ansys.meshing.prime.ScopeDefinition = None, update: bool = False) -> None\n\nAdd a Prime model to the plotter.\n\nParameters\n\nmodel (Model) – Prime model to add.\n\nscope (prime.ScopeDefinition, default: None) – Scope to show, if any.\n\nupdate (bool, default: False) – Whether to update the display.\n\n\n\nPrimePlotter.add_model_pd(model_pd: Dict) -> None\n\nAdd a model to the plotter.\n\nParameters\n\nmodel (Model) – Model to add to the plotter.\n\n\n\nPrimePlotter.add_scope(model: ansys.meshing.prime.core.model.Model, scope: ansys.meshing.prime.ScopeDefinition, update: bool = False) -> None\n\nAdd a scope to the plotter.\n\nParameters\n\nmodel (Model) – Model to add to the plotter.\n\nscope (prime.ScopeDefinition) – Scope to add to the plotter.\n\nupdate (bool, default: False) – Whether to update the display.\n\n\n\nPrimePlotter.get_scalar_colors(mesh_info: ansys.meshing.prime.core.mesh.DisplayMeshInfo) -> numpy.ndarray\n\nGet the scalar colors for the mesh.\n\nParameters\n\nmesh_info (DisplayMeshInfo) – Mesh information that generates an appropriate color.\n\nReturns\n\nScalar colors for the mesh.\n\nReturn type\n\nnp.ndarray\n\n\n\nPrimePlotter.plot(plottable_object: Any, scope: ansys.meshing.prime.ScopeDefinition = None, name_filter: str = None, update: bool = False, **plotting_options)\n\nAdd an object to the plotter.\n\nAllowed types are PyPrime models or any PyVista plottable object.\n\nParameters\n\nplottable_object (Any) – Object to add to the plotter.\n\nscope (prime.ScopeDefinition, default: None) – Scope to plot.\n\nname_filter (str, default: None) – Regular expression with the desired name or names to include in the plotter.\n\nupdate (bool, default: False) – Whether to update the display. Required when any mesh is updated.\n\n**plotting_options (dict, default: None) – Keyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects.\n\nExamples\n\n>>> import pyvista as pv\n>>> from ansys.meshing.prime.graphics import PrimePlotter\n>>> import ansys.meshing.prime as prime\n>>> model = prime.launch_prime().model\n>>> prime.lucid.Mesh(model).read(prime.examples.download_block_model_fmd())\n>>> scope = prime.ScopeDefinition(model, label_expression=\"my_group\")\n>>> plotter = PrimePlotter()\n>>> # pyvista sphere with plotting options added for opacity and color\n>>> plotter.plot(plottable_object=pv.Sphere(radius=2.0), opacity=0.5, color=\"red\")\n>>> plotter.plot(plottable_object=model, scope=scope)\n>>> plotter.show()\n\n\n\nPrimePlotter.plot_iter(plotting_list: List[Any], name_filter: str = None, update: bool = False, **plotting_options) -> None\n\nAdd a list of any type of object to the scene.\n\nAllowed types are PyPrime models or any PyVista plottable object.\n\nParameters\n\nplotting_list (List[Any]) – List of objects to plot.\n\nname_filter (str, default: None) – Regular expression with the desired name or names to include in the plotter.\n\nupdate (bool, default: False) – Whether to update the display.\n\n**plotting_options (dict, default: None) – Keyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects.\n\n\n\nPrimePlotter.show(plottable_object: Any = None, screenshot: str = None, name_filter: str = None, scope: ansys.meshing.prime.ScopeDefinition = None, **plotting_options) -> None\n\nShow the plotted objects.\n\nParameters\n\nplottable_object (Any, default: None) – Object to show.\n\nscreenshot (str, default: None) – Path to save a screenshot to.\n\nname_filter (str, default: None) – Regular expression with the desired name or names to include in the plotter.\n\n**plotting_options (dict, default: None) – Keyword arguments. For allowable keyword arguments, see the\nPlotter.add_mesh method.\nOptions only applied to PyVista plottable objects."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/index.html#the-periodiccontrolstructspy-module","title":"The periodiccontrolstructs.py module","text":"The periodiccontrolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/index.html#summary","title":"The periodiccontrolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPeriodicControlParams\n\nPeriodicControlParams contains the parameters for periodic surface recovery.  Parameters like center, axis and angle determine the transformation from  one surface to its matching periodic surface.\n\nPeriodicControlSummaryParams\n\nParameters used to get size control summary.\n\nPeriodicControlSummaryResult\n\nResults of Periodic control summary.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/index.html#description","title":"The periodiccontrolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_block_model_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_block_model_scdoc","title":"ansys.meshing.prime.examples.examples.download_block_model_scdoc","text":"ansys.meshing.prime.examples.examples.download_block_model_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_block_model_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload CAD file for the block model example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(block_model, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricScaffolderParams.html#volumetricscaffolderparams","title":"VolumetricScaffolderParams","text":"VolumetricScaffolderParams\n\n\n\nclass ansys.meshing.prime.VolumetricScaffolderParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, absolute_dist_tol: float = None, only_check_exact_overlaps: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control delete shadowed topofaces operation.\n\nParameters\n\nmodel (Model) – Model to create a VolumetricScaffolderParams object with default parameters.\n\nabsolute_dist_tol (float, optional) – Specify distance tolerance between overlapping faces.\n\nonly_check_exact_overlaps (bool, optional) – Check only for fully overlapping topofaces when true.\n\njson_data (dict, optional) – JSON dictionary to create a VolumetricScaffolderParams object with provided parameters.\n\nExamples\n\n>>> volumetric_scaffolder_params = prime.VolumetricScaffolderParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricScaffolderParams.html#overview","title":"VolumetricScaffolderParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsolute_dist_tol\n\nSpecify distance tolerance between overlapping faces.\n\nonly_check_exact_overlaps\n\nCheck only for fully overlapping topofaces when true.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumetricScaffolderParams object.\n\nset_default\n\nSet the default values of the VolumetricScaffolderParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricScaffolderParams.html#import-detail","title":"VolumetricScaffolderParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricScaffolderParams.html#property-detail","title":"VolumetricScaffolderParams > Property detail","text":"Property detail\n\n\n\nproperty VolumetricScaffolderParams.absolute_dist_tol: float\n\nSpecify distance tolerance between overlapping faces.\n\n\n\nproperty VolumetricScaffolderParams.only_check_exact_overlaps: bool\n\nCheck only for fully overlapping topofaces when true."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricScaffolderParams.html#method-detail","title":"VolumetricScaffolderParams > Method detail","text":"Method detail\n\n\n\nVolumetricScaffolderParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumetricScaffolderParams.__str__() -> str\n\n\n\n\n\nstatic VolumetricScaffolderParams.print_default()\n\nPrint the default values of VolumetricScaffolderParams object.\n\nExamples\n\n>>> VolumetricScaffolderParams.print_default()\n\n\n\nstatic VolumetricScaffolderParams.set_default(absolute_dist_tol: float = None, only_check_exact_overlaps: bool = None)\n\nSet the default values of the VolumetricScaffolderParams object.\n\nParameters\n\nabsolute_dist_tol (float, optional) – Specify distance tolerance between overlapping faces.\n\nonly_check_exact_overlaps (bool, optional) – Check only for fully overlapping topofaces when true."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#mesh-a-pcb-for-structural-thermal-analysis","title":"Mesh a PCB for structural thermal analysis","text":"Mesh a PCB for structural thermal analysis\n\nSummary: This example demonstrates how to mesh a printed circuit board\nwith mainly hexahedral elements for structural thermal simulation using the volume sweeper."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#objective","title":"Mesh a PCB for structural thermal analysis > Objective","text":"Objective\n\nThis example uses the volume sweeper to mesh the solids of a printed circuit board for a\nstructural thermal analysis using predominantly hexahedral elements."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#procedure","title":"Mesh a PCB for structural thermal analysis > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance and connect the PyPrimeMesh client.\n\nRead the CAD geometry.\n\nCreate a base face, projecting edge loops and imprinting to capture the geometry.\n\nSurface mesh the base face with quad elements.\n\nStack the base face mesh through the volumes to create a mainly hexahedral volume mesh.\n\nWrite the mesh for the structural thermal analysis."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#launch-ansys-prime-server","title":"Mesh a PCB for structural thermal analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch the Ansys Prime Server instance and connect the client.\nGet the client model and instantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#import-geometry","title":"Mesh a PCB for structural thermal analysis > Import geometry","text":"Import geometry\n\nDownload the PCB geometry (PMDAT) file.\nImport the geometry.\nDisplay the imported geometry. Purple edges indicate that the geometry is\nconnected and the topology is shared between the different volumes.\nThis means that the mesh is also to be connected between volumes.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#create-base-face","title":"Mesh a PCB for structural thermal analysis > Create base face","text":"Create base face\n\nDefine stacker parameters:\n\nSet the direction vector for defining stacking.\n\nSet the maximum offset size for mesh layers created by the stacker method.\n\nSet the base faces to delete after stacking.\n\nCreate the base face from the part and volumes.\nDefine a label for the generated base faces and display.\nWhen coloured by zonelet, the display shows the imprints\non the base face.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#surface-mesh-base-face","title":"Mesh a PCB for structural thermal analysis > Surface mesh base face","text":"Surface mesh base face\n\nQuad surface mesh the generated base faces for stacking.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#stack-base-face","title":"Mesh a PCB for structural thermal analysis > Stack base face","text":"Stack base face\n\nCreate a mainly hexahedral volume mesh using the stacker method.\nDisplay the volume mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#write-mesh","title":"Mesh a PCB for structural thermal analysis > Write mesh","text":"Write mesh\n\nWrite a CDB file."},{"objectID":"Home","href":"examples/gallery_examples/gallery/05_pcb_stacker.html#exit-pyprimemesh","title":"Mesh a PCB for structural thermal analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (0 minutes 31.156 seconds)\n\n\n\nDownload Jupyter notebook: 05_pcb_stacker.ipynb\n\nDownload Python source code: 05_pcb_stacker.py\n\nDownload zipped: 05_pcb_stacker.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlGrowthParams.html#prismcontrolgrowthparams","title":"PrismControlGrowthParams","text":"PrismControlGrowthParams\n\n\n\nclass ansys.meshing.prime.autogen.prismcontrolstructs.PrismControlGrowthParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, offset_type: PrismControlOffsetType = None, n_layers: int = None, growth_rate: float = None, first_height: float = None, first_aspect_ratio: float = None, last_aspect_ratio: float = None, min_aspect_ratio: float = None, json_data: dict = None, **kwargs)\n\nGrowth parameters for prism control.\n\nParameters\n\nmodel (Model) – Model to create a PrismControlGrowthParams object with default parameters.\n\noffset_type (PrismControlOffsetType, optional) – Offset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height.\n\nn_layers (int, optional) – Number of prism layers to be generated. It is used for all prism control offset types.\n\ngrowth_rate (float, optional) – Growth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\nfirst_height (float, optional) – Height to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\nfirst_aspect_ratio (float, optional) – Aspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\nlast_aspect_ratio (float, optional) – Apsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\nmin_aspect_ratio (float, optional) – Minimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types.\n\njson_data (dict, optional) – JSON dictionary to create a PrismControlGrowthParams object with provided parameters.\n\nExamples\n\n>>> prism_control_growth_params = prime.PrismControlGrowthParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlGrowthParams.html#overview","title":"PrismControlGrowthParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nfirst_aspect_ratio\n\nAspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\nfirst_height\n\nHeight to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\ngrowth_rate\n\nGrowth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\nlast_aspect_ratio\n\nApsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\nmin_aspect_ratio\n\nMinimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types.\n\nn_layers\n\nNumber of prism layers to be generated. It is used for all prism control offset types.\n\noffset_type\n\nOffset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PrismControlGrowthParams object.\n\nset_default\n\nSet the default values of the PrismControlGrowthParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlGrowthParams.html#import-detail","title":"PrismControlGrowthParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlGrowthParams.html#property-detail","title":"PrismControlGrowthParams > Property detail","text":"Property detail\n\n\n\nproperty PrismControlGrowthParams.first_aspect_ratio: float\n\nAspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\n\n\nproperty PrismControlGrowthParams.first_height: float\n\nHeight to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\n\n\nproperty PrismControlGrowthParams.growth_rate: float\n\nGrowth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\n\n\nproperty PrismControlGrowthParams.last_aspect_ratio: float\n\nApsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\n\n\nproperty PrismControlGrowthParams.min_aspect_ratio: float\n\nMinimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types.\n\n\n\nproperty PrismControlGrowthParams.n_layers: int\n\nNumber of prism layers to be generated. It is used for all prism control offset types.\n\n\n\nproperty PrismControlGrowthParams.offset_type: PrismControlOffsetType\n\nOffset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlGrowthParams.html#method-detail","title":"PrismControlGrowthParams > Method detail","text":"Method detail\n\n\n\nPrismControlGrowthParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismControlGrowthParams.__str__() -> str\n\n\n\n\n\nstatic PrismControlGrowthParams.print_default()\n\nPrint the default values of PrismControlGrowthParams object.\n\nExamples\n\n>>> PrismControlGrowthParams.print_default()\n\n\n\nstatic PrismControlGrowthParams.set_default(offset_type: PrismControlOffsetType = None, n_layers: int = None, growth_rate: float = None, first_height: float = None, first_aspect_ratio: float = None, last_aspect_ratio: float = None, min_aspect_ratio: float = None)\n\nSet the default values of the PrismControlGrowthParams object.\n\nParameters\n\noffset_type (PrismControlOffsetType, optional) – Offset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height.\n\nn_layers (int, optional) – Number of prism layers to be generated. It is used for all prism control offset types.\n\ngrowth_rate (float, optional) – Growth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\nfirst_height (float, optional) – Height to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\nfirst_aspect_ratio (float, optional) – Aspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\nlast_aspect_ratio (float, optional) – Apsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\nmin_aspect_ratio (float, optional) – Minimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types."},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseParams.html#fuseparams","title":"FuseParams","text":"FuseParams\n\n\n\nclass ansys.meshing.prime.FuseParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, use_absolute_tolerance: bool = None, gap_tolerance: float = None, side_tolerance: float = None, check_interior: bool = None, fuse_option: FuseOption = None, check_orientation: bool = None, dump_mesh: bool = None, local_remesh: bool = None, n_layers: int = None, separate: bool = None, angle: float = None, fuse_edges_only: bool = None, json_data: dict = None, **kwargs)\n\nParameters for fuse operation.\n\nParameters\n\nmodel (Model) – Model to create a FuseParams object with default parameters.\n\nuse_absolute_tolerance (bool, optional) – Option to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.This is a beta parameter. The behavior and name may change in the future.\n\ngap_tolerance (float, optional) – Gap tolerance between faces to be fused. The default value is 0.05.This is a beta parameter. The behavior and name may change in the future.\n\nside_tolerance (float, optional) – Side tolerance for fusing to the side edges.This is a beta parameter. The behavior and name may change in the future.\n\ncheck_interior (bool, optional) – Option to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.This is a beta parameter. The behavior and name may change in the future.\n\nfuse_option (FuseOption, optional) – Option for treatment of fused surfaces. The default value is None.This is a beta parameter. The behavior and name may change in the future.\n\ncheck_orientation (bool, optional) – Option to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.This is a beta parameter. The behavior and name may change in the future.\n\ndump_mesh (bool, optional) – Option to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.This is a beta parameter. The behavior and name may change in the future.\n\nlocal_remesh (bool, optional) – Option to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.This is a beta parameter. The behavior and name may change in the future.\n\nn_layers (int, optional) – Face layers around region to be fused. The default value is 2.This is a beta parameter. The behavior and name may change in the future.\n\nseparate (bool, optional) – Option to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.This is a beta parameter. The behavior and name may change in the future.\n\nangle (float, optional) – Faces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.This is a beta parameter. The behavior and name may change in the future.\n\nfuse_edges_only (bool, optional) – Option to fuse edges. The default value is false. When fuse edges only is true, only edges are fused.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a FuseParams object with provided parameters.\n\nExamples\n\n>>> fuse_params = prime.FuseParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseParams.html#overview","title":"FuseParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nangle\n\nFaces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\ncheck_interior\n\nOption to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\ncheck_orientation\n\nOption to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\ndump_mesh\n\nOption to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nfuse_edges_only\n\nOption to fuse edges. The default value is false. When fuse edges only is true, only edges are fused.\n\nfuse_option\n\nOption for treatment of fused surfaces. The default value is None.\n\ngap_tolerance\n\nGap tolerance between faces to be fused. The default value is 0.05.\n\nlocal_remesh\n\nOption to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nn_layers\n\nFace layers around region to be fused. The default value is 2.\n\nseparate\n\nOption to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nside_tolerance\n\nSide tolerance for fusing to the side edges.\n\nuse_absolute_tolerance\n\nOption to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FuseParams object.\n\nset_default\n\nSet the default values of the FuseParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseParams.html#import-detail","title":"FuseParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseParams.html#property-detail","title":"FuseParams > Property detail","text":"Property detail\n\n\n\nproperty FuseParams.angle: float\n\nFaces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.check_interior: bool\n\nOption to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.check_orientation: bool\n\nOption to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.dump_mesh: bool\n\nOption to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.fuse_edges_only: bool\n\nOption to fuse edges. The default value is false. When fuse edges only is true, only edges are fused.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.fuse_option: FuseOption\n\nOption for treatment of fused surfaces. The default value is None.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.gap_tolerance: float\n\nGap tolerance between faces to be fused. The default value is 0.05.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.local_remesh: bool\n\nOption to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.n_layers: int\n\nFace layers around region to be fused. The default value is 2.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.separate: bool\n\nOption to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.side_tolerance: float\n\nSide tolerance for fusing to the side edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.use_absolute_tolerance: bool\n\nOption to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseParams.html#method-detail","title":"FuseParams > Method detail","text":"Method detail\n\n\n\nFuseParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFuseParams.__str__() -> str\n\n\n\n\n\nstatic FuseParams.print_default()\n\nPrint the default values of FuseParams object.\n\nExamples\n\n>>> FuseParams.print_default()\n\n\n\nstatic FuseParams.set_default(use_absolute_tolerance: bool = None, gap_tolerance: float = None, side_tolerance: float = None, check_interior: bool = None, fuse_option: FuseOption = None, check_orientation: bool = None, dump_mesh: bool = None, local_remesh: bool = None, n_layers: int = None, separate: bool = None, angle: float = None, fuse_edges_only: bool = None)\n\nSet the default values of the FuseParams object.\n\nParameters\n\nuse_absolute_tolerance (bool, optional) – Option to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\ngap_tolerance (float, optional) – Gap tolerance between faces to be fused. The default value is 0.05.\n\nside_tolerance (float, optional) – Side tolerance for fusing to the side edges.\n\ncheck_interior (bool, optional) – Option to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\nfuse_option (FuseOption, optional) – Option for treatment of fused surfaces. The default value is None.\n\ncheck_orientation (bool, optional) – Option to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\ndump_mesh (bool, optional) – Option to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nlocal_remesh (bool, optional) – Option to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nn_layers (int, optional) – Face layers around region to be fused. The default value is 2.\n\nseparate (bool, optional) – Option to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nangle (float, optional) – Faces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\nfuse_edges_only (bool, optional) – Option to fuse edges. The default value is false. When fuse edges only is true, only edges are fused."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoiSizingParams.html#soisizingparams","title":"SoiSizingParams","text":"SoiSizingParams\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.SoiSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, centers: ansys.meshing.prime.params.primestructs.Iterable[float] = None, radius: float = None, max: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nParameters for sphere of influence size control.\n\nParameters\n\nmodel (Model) – Model to create a SoiSizingParams object with default parameters.\n\ncenters (Iterable[float], optional) – Centers of the spheres within which the size is limited to the specified max value.This is a beta parameter. The behavior and name may change in the future.\n\nradius (float, optional) – Radius of the sphere within which the size is limited to the specified max value.This is a beta parameter. The behavior and name may change in the future.\n\nmax (float, optional) – Maximum size within the sphere.This is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate (float, optional) – The rate at which size grows outwards from the sphere boundary.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a SoiSizingParams object with provided parameters.\n\nExamples\n\n>>> soi_sizing_params = prime.SoiSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoiSizingParams.html#overview","title":"SoiSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncenters\n\nCenters of the spheres within which the size is limited to the specified max value.\n\ngrowth_rate\n\nThe rate at which size grows outwards from the sphere boundary.\n\nmax\n\nMaximum size within the sphere.\n\nradius\n\nRadius of the sphere within which the size is limited to the specified max value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SoiSizingParams object.\n\nset_default\n\nSet the default values of the SoiSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoiSizingParams.html#import-detail","title":"SoiSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoiSizingParams.html#property-detail","title":"SoiSizingParams > Property detail","text":"Property detail\n\n\n\nproperty SoiSizingParams.centers: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCenters of the spheres within which the size is limited to the specified max value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty SoiSizingParams.growth_rate: float\n\nThe rate at which size grows outwards from the sphere boundary.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty SoiSizingParams.max: float\n\nMaximum size within the sphere.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty SoiSizingParams.radius: float\n\nRadius of the sphere within which the size is limited to the specified max value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoiSizingParams.html#method-detail","title":"SoiSizingParams > Method detail","text":"Method detail\n\n\n\nSoiSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSoiSizingParams.__str__() -> str\n\n\n\n\n\nstatic SoiSizingParams.print_default()\n\nPrint the default values of SoiSizingParams object.\n\nExamples\n\n>>> SoiSizingParams.print_default()\n\n\n\nstatic SoiSizingParams.set_default(centers: ansys.meshing.prime.params.primestructs.Iterable[float] = None, radius: float = None, max: float = None, growth_rate: float = None)\n\nSet the default values of the SoiSizingParams object.\n\nParameters\n\ncenters (Iterable[float], optional) – Centers of the spheres within which the size is limited to the specified max value.\n\nradius (float, optional) – Radius of the sphere within which the size is limited to the specified max value.\n\nmax (float, optional) – Maximum size within the sphere.\n\ngrowth_rate (float, optional) – The rate at which size grows outwards from the sphere boundary."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeper/index.html#the-volumesweeperpy-module","title":"The volumesweeper.py module","text":"The volumesweeper.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeper/index.html#summary","title":"The volumesweeper.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVolumeSweeper\n\nVolumeSweeper class provide functions to volume mesh a given set of topovolumes by sweeping or stacking a set of face and edge zonelets. Provide operations to generate volume mesh using stacker technology.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeper/index.html#description","title":"The volumesweeper.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesResults.html#deletevolumesresults","title":"DeleteVolumesResults","text":"DeleteVolumesResults\n\n\n\nclass ansys.meshing.prime.DeleteVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, deleted_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with delete volumes operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteVolumesResults object with default parameters.\n\ndeleted_volumes (Iterable[int], optional) – Ids of deleted volumes.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume deletion operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteVolumesResults object with provided parameters.\n\nExamples\n\n>>> delete_volumes_results = prime.DeleteVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesResults.html#overview","title":"DeleteVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndeleted_volumes\n\nIds of deleted volumes.\n\nerror_code\n\nError code associated with the volume deletion operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteVolumesResults object.\n\nset_default\n\nSet the default values of the DeleteVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesResults.html#import-detail","title":"DeleteVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesResults.html#property-detail","title":"DeleteVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteVolumesResults.deleted_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of deleted volumes.\n\n\n\nproperty DeleteVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume deletion operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesResults.html#method-detail","title":"DeleteVolumesResults > Method detail","text":"Method detail\n\n\n\nDeleteVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteVolumesResults.__str__() -> str\n\n\n\n\n\nstatic DeleteVolumesResults.print_default()\n\nPrint the default values of DeleteVolumesResults object.\n\nExamples\n\n>>> DeleteVolumesResults.print_default()\n\n\n\nstatic DeleteVolumesResults.set_default(deleted_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteVolumesResults object.\n\nParameters\n\ndeleted_volumes (Iterable[int], optional) – Ids of deleted volumes.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume deletion operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/Model.html#model","title":"Model","text":"Model\n\n\n\nclass ansys.meshing.prime.core.model.Model(comm: ansys.meshing.prime.internals.communicator.Communicator, id: int, object_id: int, name: str)\n\nContains all information about Ansys Prime Server.\n\nThis class provides the nucleus of Ansys meshing technology. You can access\nany information in Ansys Prime Server only through the Model class.\nUsing this class, you can query topo data, control data, parts, size fields,\nand more.\n\nParameters\n\ncomm (Communicator) – Communicator to connect with the Ansys Prime server.\n\nid (int) – ID of the model.\n\nobject_id (int) – Object ID of the model.\n\nname (str) – Name of the model."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/Model.html#overview","title":"Model > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nactivate_volumetric_size_fields\n\nActivate the sizefields identified by the given sizefield ids.\n\nas_polydata\n\nGet the model as a polydata.\n\ncreate_zone\n\nCreates zone for the given zone type.\n\ndeactivate_volumetric_size_fields\n\nDeactivate the size fields with the given size field ids.\n\ndelete_parts\n\nDelete parts and their contents.\n\ndelete_volumetric_size_fields\n\nDelete the sizefields identified by the given sizefield ids.\n\ndelete_zone\n\nDeletes zone with the given id.\n\nget_active_volumetric_size_fields\n\nGet the active sizefield ids.\n\nget_global_sizing_params\n\nGet global sizing parameters.\n\nget_num_compute_nodes\n\nGet the number of compute nodes.\n\nget_num_threads\n\nGet the number of threads enabled for multithreaded operation.\n\nget_part\n\nGet the part by ID.\n\nget_part_by_name\n\nGet the part by name.\n\nget_scoped_polydata\n\nGet the scoped polydata of the model.\n\nget_size_field_name\n\nGets the name of size field with the given id.\n\nget_volumetric_size_fields\n\nGet the sizefield ids.\n\nget_zone_by_name\n\nGets the zone with the provided name.\n\nget_zone_name\n\nGet the name of given zone.\n\nmerge_parts\n\nMerge multiple parts into a single part.\n\nset_global_sizing_params\n\nSet global sizing parameters.\n\nset_num_threads\n\nSets the number of threads for multithreaded operation.\n\nset_suggested_size_field_name\n\nSets the suggested name of size field with the given id.\n\nset_suggested_zone_name\n\nSets the unique name for zone with given id based on the suggested name.\n\nset_working_directory\n\nSet working directory.\n\nstart_distributed_meshing\n\nEnables distributed meshing mode.\n\nProperties\n\n\n\n\n\ncontrol_data\n\nGet the control data for the model.\n\nid\n\nGet the id of Model.\n\nlogger\n\nGet PyPrimeMesh’s logger instance.\n\nmaterial_point_data\n\nGet material point data for the model.\n\nname\n\nGet the name of Model.\n\nparts\n\nGet the list of parts for the model.\n\npython_logger\n\nGet python standard logger from PyPrimeMesh’s logger instance.\n\ntopo_data\n\nGet the TopoData for the model.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nPrint the summary of the model."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/Model.html#import-detail","title":"Model > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/Model.html#property-detail","title":"Model > Property detail","text":"Property detail\n\n\n\nproperty Model.control_data: ansys.meshing.prime.core.controldata.ControlData\n\nGet the control data for the model.\n\nReturns\n\nControl data for the model.\n\nReturn type\n\nControlData\n\nExamples\n\n>>> control_data = model.control_data\n\n\n\nproperty Model.id\n\nGet the id of Model.\n\n\n\nproperty Model.logger: ansys.meshing.prime.internals.logger.PrimeLogger\n\nGet PyPrimeMesh’s logger instance.\n\nPyPrimeMesh’s logger instance can be used to save the logs to a file,\nredirect the logs to the given stream, control the verbosity\nof messages printed by PyPrimeMesh and more.\n\nReturns\n\nPyPrimeMesh’s logger instance.\n\nReturn type\n\nPrimeLogger\n\nExamples\n\nSave logs to a file.\n\n>>> model.logger.add_file_handler(logs_dir=r\"./tmp\")\n\n\n\nproperty Model.material_point_data: ansys.meshing.prime.autogen.materialpointmanager.MaterialPointManager\n\nGet material point data for the model.\n\nThe Material Point Manager is used to create, delete, and manage material points.\n\nReturns\n\nMaterial Point Manager.\n\nReturn type\n\nMaterialPointManager\n\nExamples\n\n>>> mpt_data = model.material_point_data\n\n\n\nproperty Model.name\n\nGet the name of Model.\n\n\n\nproperty Model.parts: List[ansys.meshing.prime.core.part.Part]\n\nGet the list of parts for the model.\n\nReturns\n\nList of parts for the model.\n\nReturn type\n\nList[Part]\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> parts = model.parts\n\n\n\nproperty Model.python_logger\n\nGet python standard logger from PyPrimeMesh’s logger instance.\n\nPyPrimeMesh’s python standard logger instance can be used to control\nthe verbosity of messages printed by PyPrimeMesh and more.\n\nReturns\n\nPyPrimeMesh’s python standard logger instance.\n\nReturn type\n\nlogging.Logger\n\nExamples\n\nSet log level to debug.\n\n>>> model.python_logger.setLevel(logging.DEBUG)\n\n\n\nproperty Model.topo_data: ansys.meshing.prime.autogen.topodata.TopoData\n\nGet the TopoData for the model.\n\nReturns\n\nTopoData for the model.\n\nReturn type\n\nTopoData\n\nExamples\n\n>>> topo_data=model.topo_data"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/Model.html#attribute-detail","title":"Model > Attribute detail","text":"Attribute detail\n\n\n\nModel.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/Model.html#method-detail","title":"Model > Method detail","text":"Method detail\n\n\n\nModel.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nModel.__str__()\n\nPrint the summary of the model.\n\nReturns\n\nSummary of the model.\n\nReturn type\n\nstr\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> print(model)\n\n\n\nModel.activate_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nActivate the sizefields identified by the given sizefield ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.activate_volumetric_size_fields(size_field_ids)\n\n\n\nModel.as_polydata(update: bool = False)\n\nGet the model as a polydata.\n\nParameters\n\nupdate (bool, optional) – Update the polydata if it is already present, by default False.\n\nReturns\n\nPolydata of the model.\n\nReturn type\n\nvtk.vtkPolyData\n\nExamples\n\n>>> polydata = model.as_polydata()\n\n\n\nModel.create_zone(suggested_name: str, type: ansys.meshing.prime.params.primestructs.ZoneType) -> ansys.meshing.prime.params.primestructs.CreateZoneResults\n\nCreates zone for the given zone type.\n\nParameters\n\nsuggested_name (str) – Suggested name for the zone to be created.\n\ntype (ZoneType) – Type of the zone to be created.\n\nReturns\n\nReturns the CreateZoneResults.\n\nReturn type\n\nCreateZoneResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.create_zone(\"wall\", prime.ZoneType.FACE)\n\n\n\nModel.deactivate_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nDeactivate the size fields with the given size field ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.deactivate_volumetric_size_fields(size_field_ids)\n\n\n\nModel.delete_parts(part_ids: Iterable[int]) -> ansys.meshing.prime.autogen.commonstructs.DeleteResults\n\nDelete parts and their contents.\n\nParameters\n\npart_ids (Iterable[int]) – IDs of parts to delete.\n\nReturns\n\nResults from deleting parts and their contents.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = model.delete_parts(part_ids)\n\n\n\nModel.delete_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nDelete the sizefields identified by the given sizefield ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.delete_volumetric_size_fields(size_field_ids)\n\n\n\nModel.delete_zone(zone_id: int) -> ansys.meshing.prime.params.primestructs.DeleteZoneResults\n\nDeletes zone with the given id.\n\nParameters\n\nzone_id (int) – Id of the zone to be deleted.\n\nReturns\n\nReturns the DeleteZoneResults.\n\nReturn type\n\nDeleteZoneResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.delete_zone(1)\n\n\n\nModel.get_active_volumetric_size_fields() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the active sizefield ids.\n\nReturns\n\nReturn the list of active sizefield ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> model = client.model\n>>> active_size_field_ids = model.get_active_volumetric_size_fields()\n\n\n\nModel.get_global_sizing_params() -> ansys.meshing.prime.autogen.modelstructs.GlobalSizingParams\n\nGet global sizing parameters.\n\nReturns\n\nGlobal sizing parameters.\n\nReturn type\n\nGlobalSizingParams\n\nExamples\n\n>>> model = client.model\n>>> sf_params = model.get_global_sizing_params()\n\n\n\nModel.get_num_compute_nodes() -> int\n\nGet the number of compute nodes.\n\nReturns\n\nReturns the number of compute nodes.\n\nReturn type\n\nint\n\nExamples\n\n>>> model = client.model\n>>> num_compute_nodes = model.get_num_compute_nodes()\n\n\n\nModel.get_num_threads() -> int\n\nGet the number of threads enabled for multithreaded operation.\n\nReturns\n\nReturns the number of threads.\n\nReturn type\n\nint\n\nExamples\n\n>>> model = client.model\n>>> num_threads = model.get_num_threads()\n\n\n\nModel.get_part(id: int) -> ansys.meshing.prime.core.part.Part\n\nGet the part by ID.\n\nParameters\n\nid (int) – ID of the part.\n\nReturns\n\nPart or None if the given part ID doesn’t exist.\n\nReturn type\n\nPart\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part(2)\n\n\n\nModel.get_part_by_name(name: str) -> ansys.meshing.prime.core.part.Part\n\nGet the part by name.\n\nParameters\n\nname (str) – Name of the part.\n\nReturns\n\nPart or None if the given part name doesn’t exist.\n\nReturn type\n\nPart\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part_by_name(\"part.1\")\n\n\n\nModel.get_scoped_polydata(scope, update: bool = False)\n\nGet the scoped polydata of the model.\n\nParameters\n\nscope (Scope) – Scope of the model.\n\nReturns\n\nScoped polydata of the model.\n\nReturn type\n\nvtk.vtkPolyData\n\nExamples\n\n>>> scoped_polydata = model.get_scoped_polydata(scope)\n\n\n\nModel.get_size_field_name(size_field_id: int) -> str\n\nGets the name of size field with the given id.\n\nParameters\n\nsize_field_id (int) – Size field id.\n\nReturns\n\nReturns the name of the size field.\n\nReturn type\n\nstr\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> model = client.model\n>>> model.get_size_field_name(size_field_id)\n\n\n\nModel.get_volumetric_size_fields() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the sizefield ids.\n\nReturns\n\nReturn the list of sizefield ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> model = client.model\n>>> size_field_ids = model.get_volumetric_size_fields()\n\n\n\nModel.get_zone_by_name(zone_name: str) -> int\n\nGets the zone with the provided name.\n\nParameters\n\nzone_name (str) – Name of the zone.\n\nReturns\n\nReturns id of the zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> zone_id = model.get_zone_by_name(\"inlet\")\n\n\n\nModel.get_zone_name(id: int) -> str\n\nGet the name of given zone.\n\nParameters\n\nid (int) – Id of zone.\n\nReturns\n\nReturn the zone name. Return empty name if the id is invalid.\n\nReturn type\n\nstr\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> name = model.get_zone_name(id)\n\n\n\nModel.merge_parts(part_ids: Iterable[int], params: ansys.meshing.prime.autogen.modelstructs.MergePartsParams) -> ansys.meshing.prime.autogen.modelstructs.MergePartsResults\n\nMerge multiple parts into a single part.\n\nParameters\n\npart_ids (Iterable[int]) – IDs of the parts to merge.\n\nparams (MergePartsParams) – Parameters for merging parts.\n\nReturns\n\nResults for merging the parts into a single part.\n\nReturn type\n\nMergePartsResults\n\nExamples\n\n>>> params = prime.MergePartsParams(model = model)\n>>> results = model.merge_parts(part_ids, params)\n\n\n\nModel.set_global_sizing_params(params: ansys.meshing.prime.autogen.modelstructs.GlobalSizingParams)\n\nSet global sizing parameters.\n\nParameters\n\nparams (GlobalSizingParams) – Global sizing parameters for initializing surfer parameters and\nvarious size control parameters.\n\nExamples\n\n>>> model = client.model\n>>> model.set_global_sizing_params(GlobalSizingParams(model=model,\n...                                          min=0.1,\n...                                          max=1.0,\n...                                          growth_rate=1.2))\n\n\n\nModel.set_num_threads(num: int)\n\nSets the number of threads for multithreaded operation.\n\nParameters\n\nnum (int) – Number of threads.\n\nExamples\n\n>>> model = client.model\n>>> model.set_num_threads(4)\n\n\n\nModel.set_suggested_size_field_name(size_field_id: int, name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the suggested name of size field with the given id.\n\nParameters\n\nsize_field_id (int) – Size field id.\n\nname (str) – Name of the size field.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> model = client.model\n>>> model.set_suggested_size_field_name(size_field_id, name)\n\n\n\nModel.set_suggested_zone_name(id: int, name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for zone with given id based on the suggested name.\n\nParameters\n\nid (int) – Id of the zone to set suggested name.\n\nname (str) – Suggested name for the zone.\n\nReturns\n\nReturns the SetNameResults. results.assignedName indicates the assigned name to the zone.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.set_suggested_zone_name(id = 5, name = \"zone1\")\n\n\n\nModel.set_working_directory(path: str)\n\nSet working directory.\n\nSet the working directory to be considered for file i/o when the file paths are relative.\n\nParameters\n\npath (str) – Path to the directory.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> zones = model.set_working_directory(\"C:/input_files\")\n\n\n\nModel.start_distributed_meshing()\n\nEnables distributed meshing mode.\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> model.start_distributed_meshing()"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetSizingResults.html#setsizingresults","title":"SetSizingResults","text":"SetSizingResults\n\n\n\nclass ansys.meshing.prime.SetSizingResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult associated with the different set sizing parameters.\n\nParameters\n\nmodel (Model) – Model to create a SetSizingResults object with default parameters.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the set sizing parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set sizing parameters.\n\njson_data (dict, optional) – JSON dictionary to create a SetSizingResults object with provided parameters.\n\nExamples\n\n>>> set_sizing_results = prime.SetSizingResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetSizingResults.html#overview","title":"SetSizingResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set sizing parameters.\n\nwarning_codes\n\nWarning codes associated with the set sizing parameters.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetSizingResults object.\n\nset_default\n\nSet the default values of the SetSizingResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetSizingResults.html#import-detail","title":"SetSizingResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetSizingResults.html#property-detail","title":"SetSizingResults > Property detail","text":"Property detail\n\n\n\nproperty SetSizingResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set sizing parameters.\n\n\n\nproperty SetSizingResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the set sizing parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetSizingResults.html#method-detail","title":"SetSizingResults > Method detail","text":"Method detail\n\n\n\nSetSizingResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetSizingResults.__str__() -> str\n\n\n\n\n\nstatic SetSizingResults.print_default()\n\nPrint the default values of SetSizingResults object.\n\nExamples\n\n>>> SetSizingResults.print_default()\n\n\n\nstatic SetSizingResults.set_default(warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SetSizingResults object.\n\nParameters\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the set sizing parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set sizing parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/FaceQualityMeasure.html#facequalitymeasure","title":"FaceQualityMeasure","text":"FaceQualityMeasure\n\n\n\nclass ansys.meshing.prime.autogen.commontypes.FaceQualityMeasure\n\nThe type of face quality measures to check face quality metrics."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/FaceQualityMeasure.html#overview","title":"FaceQualityMeasure > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASPECTRATIO\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\nELEMENTQUALITY\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst).\n\nSIZECHANGE\n\nSize Change is the maximum ratio of the area of each neighboring face element to the area of face element when the area of the face element is smaller than the neighbor. The minimum value for size change is 1.\n\nSKEWNESS\n\nThe Skewness metric ranges between 0 (worst) and 1 (best). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst).\n\nWARP\n\nFace quality metric to check warping factor."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/FaceQualityMeasure.html#import-detail","title":"FaceQualityMeasure > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/FaceQualityMeasure.html#attribute-detail","title":"FaceQualityMeasure > Attribute detail","text":"Attribute detail\n\n\n\nFaceQualityMeasure.ASPECTRATIO = 5\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\n\n\nFaceQualityMeasure.ELEMENTQUALITY = 50\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst).\n\n\n\nFaceQualityMeasure.SIZECHANGE = 2\n\nSize Change is the maximum ratio of the area of each neighboring face element to the area of face element when the area of the face element is smaller than the neighbor. The minimum value for size change is 1.\n\n\n\nFaceQualityMeasure.SKEWNESS = 0\n\nThe Skewness metric ranges between 0 (worst) and 1 (best). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst).\n\n\n\nFaceQualityMeasure.WARP = 7\n\nFace quality metric to check warping factor.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/ConnectResults.html#connectresults","title":"ConnectResults","text":"ConnectResults\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.ConnectResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the connection operations.\n\nParameters\n\nmodel (Model) – Model to create a ConnectResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.\n\njson_data (dict, optional) – JSON dictionary to create a ConnectResults object with provided parameters.\n\nExamples\n\n>>> connect_results = prime.ConnectResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/ConnectResults.html#overview","title":"ConnectResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ConnectResults object.\n\nset_default\n\nSet the default values of the ConnectResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/ConnectResults.html#import-detail","title":"ConnectResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/ConnectResults.html#property-detail","title":"ConnectResults > Property detail","text":"Property detail\n\n\n\nproperty ConnectResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with failure of operation.\n\n\n\nproperty ConnectResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/ConnectResults.html#method-detail","title":"ConnectResults > Method detail","text":"Method detail\n\n\n\nConnectResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nConnectResults.__str__() -> str\n\n\n\n\n\nstatic ConnectResults.print_default()\n\nPrint the default values of ConnectResults object.\n\nExamples\n\n>>> ConnectResults.print_default()\n\n\n\nstatic ConnectResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ConnectResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/index.html#the-scaffolderstructspy-module","title":"The scaffolderstructs.py module","text":"The scaffolderstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/index.html#summary","title":"The scaffolderstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nEdgeMergeControl\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nIntersectionMask\n\nScaffold parameters use intersection mask to define nature of intersection computation.\n\nScaffolderMergeResults\n\nResult structure associated with merge overlapping topofaces and delete shadowed topofaces operations.\n\nScaffolderParams\n\nParameters to control scaffold operation.\n\nScaffolderRepairMode\n\nMode of Scaffolder repair to be used.\n\nScaffolderResults\n\nResults structure associated to scaffold operation.\n\nScaffolderSplitResults\n\nResult structure associated to split topofaces operation.\n\nVolumetricScaffolderParams\n\nParameters to control delete shadowed topofaces operation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/index.html#description","title":"The scaffolderstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphResults.html#matchmorphresults","title":"MatchMorphResults","text":"MatchMorphResults\n\n\n\nclass ansys.meshing.prime.MatchMorphResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with match morph operation.\n\nParameters\n\nmodel (Model) – Model to create a MatchMorphResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Errorcode associated with match morph operation.\n\njson_data (dict, optional) – JSON dictionary to create a MatchMorphResults object with provided parameters.\n\nExamples\n\n>>> match_morph_results = prime.MatchMorphResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphResults.html#overview","title":"MatchMorphResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nErrorcode associated with match morph operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MatchMorphResults object.\n\nset_default\n\nSet the default values of the MatchMorphResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphResults.html#import-detail","title":"MatchMorphResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphResults.html#property-detail","title":"MatchMorphResults > Property detail","text":"Property detail\n\n\n\nproperty MatchMorphResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nErrorcode associated with match morph operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphResults.html#method-detail","title":"MatchMorphResults > Method detail","text":"Method detail\n\n\n\nMatchMorphResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMatchMorphResults.__str__() -> str\n\n\n\n\n\nstatic MatchMorphResults.print_default()\n\nPrint the default values of MatchMorphResults object.\n\nExamples\n\n>>> MatchMorphResults.print_default()\n\n\n\nstatic MatchMorphResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the MatchMorphResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Errorcode associated with match morph operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_deformed_blade_dsco.html#ansysmeshingprimeexamplesdownload_deformed_blade_dsco","title":"ansys.meshing.prime.examples.download_deformed_blade_dsco","text":"ansys.meshing.prime.examples.download_deformed_blade_dsco\n\n\n\nansys.meshing.prime.examples.download_deformed_blade_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the turbine blade example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/GlobalSizingParams.html#globalsizingparams","title":"GlobalSizingParams","text":"GlobalSizingParams\n\n\n\nclass ansys.meshing.prime.GlobalSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min: float = None, max: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nGlobal sizing parameters.\n\nParameters\n\nmodel (Model) – Model to create a GlobalSizingParams object with default parameters.\n\nmin (float, optional) – Minimum value of global sizing parameters.\n\nmax (float, optional) – Maximum value of global sizing parameters.\n\ngrowth_rate (float, optional) – Growth rate of global sizing parameters.\n\njson_data (dict, optional) – JSON dictionary to create a GlobalSizingParams object with provided parameters.\n\nExamples\n\n>>> global_sizing_params = prime.GlobalSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/GlobalSizingParams.html#overview","title":"GlobalSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate of global sizing parameters.\n\nmax\n\nMaximum value of global sizing parameters.\n\nmin\n\nMinimum value of global sizing parameters.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of GlobalSizingParams object.\n\nset_default\n\nSet the default values of the GlobalSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/GlobalSizingParams.html#import-detail","title":"GlobalSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/GlobalSizingParams.html#property-detail","title":"GlobalSizingParams > Property detail","text":"Property detail\n\n\n\nproperty GlobalSizingParams.growth_rate: float\n\nGrowth rate of global sizing parameters.\n\n\n\nproperty GlobalSizingParams.max: float\n\nMaximum value of global sizing parameters.\n\n\n\nproperty GlobalSizingParams.min: float\n\nMinimum value of global sizing parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/GlobalSizingParams.html#method-detail","title":"GlobalSizingParams > Method detail","text":"Method detail\n\n\n\nGlobalSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nGlobalSizingParams.__str__() -> str\n\n\n\n\n\nstatic GlobalSizingParams.print_default()\n\nPrint the default values of GlobalSizingParams object.\n\nExamples\n\n>>> GlobalSizingParams.print_default()\n\n\n\nstatic GlobalSizingParams.set_default(min: float = None, max: float = None, growth_rate: float = None)\n\nSet the default values of the GlobalSizingParams object.\n\nParameters\n\nmin (float, optional) – Minimum value of global sizing parameters.\n\nmax (float, optional) – Maximum value of global sizing parameters.\n\ngrowth_rate (float, optional) – Growth rate of global sizing parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/HardSizingParams.html#hardsizingparams","title":"HardSizingParams","text":"HardSizingParams\n\n\n\nclass ansys.meshing.prime.HardSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nSize field computed using hard size control enables you to maintain a uniform size based on the size specified.\n\nThe hard sizing will override any other specified size.\n\nParameters\n\nmodel (Model) – Model to create a HardSizingParams object with default parameters.\n\nmin (float, optional) – Minimum size used for computing edge and face size using hard size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\njson_data (dict, optional) – JSON dictionary to create a HardSizingParams object with provided parameters.\n\nExamples\n\n>>> hard_sizing_params = prime.HardSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/HardSizingParams.html#overview","title":"HardSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nmin\n\nMinimum size used for computing edge and face size using hard size control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of HardSizingParams object.\n\nset_default\n\nSet the default values of the HardSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/HardSizingParams.html#import-detail","title":"HardSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/HardSizingParams.html#property-detail","title":"HardSizingParams > Property detail","text":"Property detail\n\n\n\nproperty HardSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty HardSizingParams.min: float\n\nMinimum size used for computing edge and face size using hard size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/HardSizingParams.html#method-detail","title":"HardSizingParams > Method detail","text":"Method detail\n\n\n\nHardSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nHardSizingParams.__str__() -> str\n\n\n\n\n\nstatic HardSizingParams.print_default()\n\nPrint the default values of HardSizingParams object.\n\nExamples\n\n>>> HardSizingParams.print_default()\n\n\n\nstatic HardSizingParams.set_default(min: float = None, growth_rate: float = None)\n\nSet the default values of the HardSizingParams object.\n\nParameters\n\nmin (float, optional) – Minimum size used for computing edge and face size using hard size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityResults.html#faceandedgeconnectivityresults","title":"FaceAndEdgeConnectivityResults","text":"FaceAndEdgeConnectivityResults\n\n\n\nclass ansys.meshing.prime.autogen.meshinfostructs.FaceAndEdgeConnectivityResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[FaceConnectivityResults] = None, edge_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[EdgeConnectivityResults] = None, json_data: dict = None, **kwargs)\n\nResult of the face and edge connectivity information.\n\nParameters\n\nmodel (Model) – Model to create a FaceAndEdgeConnectivityResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the get face and edge connectivity operation.\n\npart_ids (Iterable[int], optional) – Part ids for which face and edge connectivity data is available.\n\nface_connectivity_result_per_part (List[FaceConnectivityResults], optional) – Face connectivity result per part.\n\nedge_connectivity_result_per_part (List[EdgeConnectivityResults], optional) – Edge connectivity result per part.\n\njson_data (dict, optional) – JSON dictionary to create a FaceAndEdgeConnectivityResults object with provided parameters.\n\nExamples\n\n>>> face_and_edge_connectivity_results = prime.FaceAndEdgeConnectivityResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityResults.html#overview","title":"FaceAndEdgeConnectivityResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_connectivity_result_per_part\n\nEdge connectivity result per part.\n\nerror_code\n\nError code associated with the get face and edge connectivity operation.\n\nface_connectivity_result_per_part\n\nFace connectivity result per part.\n\npart_ids\n\nPart ids for which face and edge connectivity data is available.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FaceAndEdgeConnectivityResults object.\n\nset_default\n\nSet the default values of the FaceAndEdgeConnectivityResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityResults.html#import-detail","title":"FaceAndEdgeConnectivityResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityResults.html#property-detail","title":"FaceAndEdgeConnectivityResults > Property detail","text":"Property detail\n\n\n\nproperty FaceAndEdgeConnectivityResults.edge_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[EdgeConnectivityResults]\n\nEdge connectivity result per part.\n\n\n\nproperty FaceAndEdgeConnectivityResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the get face and edge connectivity operation.\n\n\n\nproperty FaceAndEdgeConnectivityResults.face_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[FaceConnectivityResults]\n\nFace connectivity result per part.\n\n\n\nproperty FaceAndEdgeConnectivityResults.part_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nPart ids for which face and edge connectivity data is available."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityResults.html#method-detail","title":"FaceAndEdgeConnectivityResults > Method detail","text":"Method detail\n\n\n\nFaceAndEdgeConnectivityResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFaceAndEdgeConnectivityResults.__str__() -> str\n\n\n\n\n\nstatic FaceAndEdgeConnectivityResults.print_default()\n\nPrint the default values of FaceAndEdgeConnectivityResults object.\n\nExamples\n\n>>> FaceAndEdgeConnectivityResults.print_default()\n\n\n\nstatic FaceAndEdgeConnectivityResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[FaceConnectivityResults] = None, edge_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[EdgeConnectivityResults] = None)\n\nSet the default values of the FaceAndEdgeConnectivityResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the get face and edge connectivity operation.\n\npart_ids (Iterable[int], optional) – Part ids for which face and edge connectivity data is available.\n\nface_connectivity_result_per_part (List[FaceConnectivityResults], optional) – Face connectivity result per part.\n\nedge_connectivity_result_per_part (List[EdgeConnectivityResults], optional) – Edge connectivity result per part."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_multi_layer_quad_mesh_pcb_dsco.html#ansysmeshingprimeexamplesexamplesdownload_multi_layer_quad_mesh_pcb_dsco","title":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_dsco","text":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_dsco\n\n\n\nansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderMergeResults.html#scaffoldermergeresults","title":"ScaffolderMergeResults","text":"ScaffolderMergeResults\n\n\n\nclass ansys.meshing.prime.autogen.scaffolderstructs.ScaffolderMergeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_merged: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult structure associated with merge overlapping topofaces and delete shadowed topofaces operations.\n\nParameters\n\nmodel (Model) – Model to create a ScaffolderMergeResults object with default parameters.\n\nn_merged (int, optional) – Number of merged topofaces.\n\nerror_code (ErrorCode, optional) – Error code associated with merge overlapping topofaces operation.\n\njson_data (dict, optional) – JSON dictionary to create a ScaffolderMergeResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_merge_results = prime.ScaffolderMergeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderMergeResults.html#overview","title":"ScaffolderMergeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with merge overlapping topofaces operation.\n\nn_merged\n\nNumber of merged topofaces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScaffolderMergeResults object.\n\nset_default\n\nSet the default values of the ScaffolderMergeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderMergeResults.html#import-detail","title":"ScaffolderMergeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderMergeResults.html#property-detail","title":"ScaffolderMergeResults > Property detail","text":"Property detail\n\n\n\nproperty ScaffolderMergeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with merge overlapping topofaces operation.\n\n\n\nproperty ScaffolderMergeResults.n_merged: int\n\nNumber of merged topofaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderMergeResults.html#method-detail","title":"ScaffolderMergeResults > Method detail","text":"Method detail\n\n\n\nScaffolderMergeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolderMergeResults.__str__() -> str\n\n\n\n\n\nstatic ScaffolderMergeResults.print_default()\n\nPrint the default values of ScaffolderMergeResults object.\n\nExamples\n\n>>> ScaffolderMergeResults.print_default()\n\n\n\nstatic ScaffolderMergeResults.set_default(n_merged: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ScaffolderMergeResults object.\n\nParameters\n\nn_merged (int, optional) – Number of merged topofaces.\n\nerror_code (ErrorCode, optional) – Error code associated with merge overlapping topofaces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetool/index.html#the-deletetoolpy-module","title":"The deletetool.py module","text":"The deletetool.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetool/index.html#summary","title":"The deletetool.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDeleteTool\n\nPerforms various delete operation. For example, delete fringes and overlapping faces.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetool/index.html#description","title":"The deletetool.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_bracket_dsco.html#ansysmeshingprimeexamplesdownload_bracket_dsco","title":"ansys.meshing.prime.examples.download_bracket_dsco","text":"ansys.meshing.prime.examples.download_bracket_dsco\n\n\n\nansys.meshing.prime.examples.download_bracket_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the bracket scaffold example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetool/DeleteTool.html#deletetool","title":"DeleteTool","text":"DeleteTool\n\n\n\nclass ansys.meshing.prime.autogen.deletetool.DeleteTool(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nPerforms various delete operation. For example, delete fringes and overlapping faces.\n\nParameters\n\nmodel (Model) – Server model to create DeleteTool object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetool/DeleteTool.html#overview","title":"DeleteTool > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndelete_fringes_and_overlaps_on_zonelets\n\nDeletes fringes and overlapping faces on the given face zonelets.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for DeleteTool.\n\n__exit__\n\nExit context for DeleteTool.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetool/DeleteTool.html#import-detail","title":"DeleteTool > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetool/DeleteTool.html#method-detail","title":"DeleteTool > Method detail","text":"Method detail\n\n\n\nDeleteTool.__enter__()\n\nEnter context for DeleteTool.\n\n\n\nDeleteTool.__exit__(type, value, traceback)\n\nExit context for DeleteTool.\n\n\n\nDeleteTool.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteTool.delete_fringes_and_overlaps_on_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DeleteFringesAndOverlapsParams) -> ansys.meshing.prime.params.primestructs.DeleteFringesAndOverlapsResults\n\nDeletes fringes and overlapping faces on the given face zonelets.\n\nParameters\n\npart_id (int) – Id of a part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nparams (DeleteFringesAndOverlapsParams) – Parameters to delete the fringes and overlapping faces.\n\nReturns\n\nReturns the DeleteFringesAndOverlapsResults.\n\nReturn type\n\nDeleteFringesAndOverlapsResults\n\nExamples\n\n>>> delete_tool = prime.DeleteTool(model = model)\n>>> results = delete_tool.delete_fringes_and_overlaps_on_zonelets(\n>>>                                    part.id,\n>>>                                    part.get_face_zonelets(),\n>>>                                    prime.DeleteFringesAndOverlapsParams(\n>>>                                       model=model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAResults.html#igaresults","title":"IGAResults","text":"IGAResults\n\n\n\nclass ansys.meshing.prime.IGAResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, spline_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults of IGA operations.\n\nParameters\n\nmodel (Model) – Model to create a IGAResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if IGA operation is unsuccessful.\n\nwarning_code (WarningCode, optional) – Warning code if IGA operation is partially successful.\n\nspline_ids (Iterable[int], optional) – Ids of the created spline.\n\njson_data (dict, optional) – JSON dictionary to create a IGAResults object with provided parameters.\n\nExamples\n\n>>> iga_results = prime.IGAResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAResults.html#overview","title":"IGAResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if IGA operation is unsuccessful.\n\nspline_ids\n\nIds of the created spline.\n\nwarning_code\n\nWarning code if IGA operation is partially successful.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IGAResults object.\n\nset_default\n\nSet the default values of the IGAResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAResults.html#import-detail","title":"IGAResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAResults.html#property-detail","title":"IGAResults > Property detail","text":"Property detail\n\n\n\nproperty IGAResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if IGA operation is unsuccessful.\n\n\n\nproperty IGAResults.spline_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the created spline.\n\n\n\nproperty IGAResults.warning_code: ansys.meshing.prime.params.primestructs.WarningCode\n\nWarning code if IGA operation is partially successful."},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAResults.html#method-detail","title":"IGAResults > Method detail","text":"Method detail\n\n\n\nIGAResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIGAResults.__str__() -> str\n\n\n\n\n\nstatic IGAResults.print_default()\n\nPrint the default values of IGAResults object.\n\nExamples\n\n>>> IGAResults.print_default()\n\n\n\nstatic IGAResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, spline_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the IGAResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if IGA operation is unsuccessful.\n\nwarning_code (WarningCode, optional) – Warning code if IGA operation is partially successful.\n\nspline_ids (Iterable[int], optional) – Ids of the created spline."},{"objectID":"Home","href":"user_guide/automesh.html#volumetric-meshing","title":"Volumetric meshing","text":"Volumetric meshing\n\nThe AutoMesh class enables you to\nautomatically create the volume mesh using different volume meshing algorithms. This class\ngenerates the volume mesh for all computed volumetric regions of the mesh object.\nFor example, it creates mesh objects from the imported geometry. The\nAutoMesh.mesh() method allows you to perform\nvolumetric meshing with given meshing parameters.\n\nThe starting point for the volumetric meshing procedure is a valid surface mesh defining any number of computed volumetric regions. If overlapping meshed faces are present then the mesh method may fail due to duplicate nodes on the face. Consider if the overlapping faces are intended to be in the same part and what the expected connectivity between the faces should be. If meshing adjacent volumes with disconnected overlapping faces between the volumes it is recommended that the volumes be in different parts.\n\nVolume mesh can be generated using the Mesh.volume_mesh()\nmethod in the Lucid API."},{"objectID":"Home","href":"user_guide/automesh.html#second-order-tetrahedral-mesh","title":"Volumetric meshing > Second-order tetrahedral mesh","text":"Second-order tetrahedral mesh\n\nThis code shows how to initialize the AutoMeshParams class\nand generate the volume mesh on meshed TopoFaces:\n\nThis code prints the automatic mesh parameters so that you can review them:\n\nThis code generates the volume mesh:"},{"objectID":"Home","href":"user_guide/automesh.html#prism-controls-for-polyhedral-mesh","title":"Volumetric meshing > Prism controls for polyhedral mesh","text":"Prism controls for polyhedral mesh\n\nThe PrismControl class helps you to control prism mesh generation\nbased on the face scope, volume scope and growth rate. You can use one or more prism controls. Each prism control\ndefinition is applied to one or more boundary zones and affects the height distribution and number of layers of\nthe prism cells in the adjacent boundary layers.\n\nThis example shows how to perform these steps:\n\nCreate the prism control and specify the boundary layer setting.\n\nPerform volume meshing with polyhedral elements.\n\nCheck volume mesh quality based on cell quality measures. For more information, see ref_index_mesh_diagnostics.\n\nThis code prints the volume quality summary:"},{"objectID":"Home","href":"user_guide/automesh.html#prism-controls-for-polyhedral-mesh-using-the-lucid-module","title":"Volumetric meshing > Prism controls for polyhedral mesh using the Lucid module","text":"Prism controls for polyhedral mesh using the Lucid module\n\nThis example shows how to generate the preceding poly prism method using the Lucid module:"},{"objectID":"Home","href":"user_guide/automesh.html#volume-specific-mesh-controls","title":"Volumetric meshing > Volume-specific mesh controls","text":"Volume-specific mesh controls\n\nThe VolumeControl class helps you to control volume mesh zonelets and elements.\nVolume mesh zonelets include fluids, solid, and dead. Elements include tetrahedrons and polyhedrons. This class\nallows you to define the scope and generate the various types of volume mesh.\n\nThis example shows how to perform these steps:\n\nCreate volume control and set zone-specific parameters.\n\nPerform volume meshing with tetrahedral elements."},{"objectID":"Home","href":"user_guide/automesh.html#thin-volume-mesh-controls","title":"Volumetric meshing > Thin volume mesh controls","text":"Thin volume mesh controls\n\nThe ThinVolumeControl class creates prisms from a source face mesh projecting to a target with the specified number of layers.\n\nThin volume controls can only be applied on the meshed surfaces.\n\nSome guidelines for the thin volume mesh controls:\n\nSource and target face zonelets should not be the same.\n\nThe number of prism layers to be created between source and target must be greater than zero.\n\nA source face zonelet cannot be a target face zonelet in a subsequent control.\n\nA source can only belong to two thin volume controls.\n\nAlways choose the one with most features as the source.\n\nTarget face zonelets cannot be adjacent to regions with cells whereas source face zonelets can.\n\nSides of the new thin volume control cannot be adjacent to regions with existing cells.\n\nSides of one thin volume control can only be a source to another thin volume control.\n\nThe below example shows how to:\n\nCreate a thin volume control and set source and target.\n\nSet the thin volume mesh parameters and perform volume meshing.\n\nLayers of thin volume mesh created between the source and target surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/VolumeNamingType.html#volumenamingtype","title":"VolumeNamingType","text":"VolumeNamingType\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.VolumeNamingType\n\nIndicate source types used to name volume zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/VolumeNamingType.html#overview","title":"VolumeNamingType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBYFACELABEL\n\nOption to use face label name as source to name volume zones.\n\nBYFACENORMALS\n\nOption to use face normal as source to name volume zones. Here, the volume zones with face normal into the volume are considered as dead and volume zones with face normal outwards from the volume are considered as solid..\n\nBYFACEZONE\n\nOption to use face zone name as source to name volume zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/VolumeNamingType.html#import-detail","title":"VolumeNamingType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/VolumeNamingType.html#attribute-detail","title":"VolumeNamingType > Attribute detail","text":"Attribute detail\n\n\n\nVolumeNamingType.BYFACELABEL = 1\n\nOption to use face label name as source to name volume zones.\n\n\n\nVolumeNamingType.BYFACENORMALS = 4\n\nOption to use face normal as source to name volume zones. Here, the volume zones with face normal into the volume are considered as dead and volume zones with face normal outwards from the volume are considered as solid..\n\n\n\nVolumeNamingType.BYFACEZONE = 2\n\nOption to use face zone name as source to name volume zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/LeakPreventionParams.html#leakpreventionparams","title":"LeakPreventionParams","text":"LeakPreventionParams\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.LeakPreventionParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, material_points: ansys.meshing.prime.params.primestructs.List[str] = None, scope: ScopeDefinition = None, max_hole_size: float = None, n_expansion_layers: int = None, json_data: dict = None, **kwargs)\n\nLeakPreventionParams defines leakage prevention control parameters for wrapper.\n\nParameters\n\nmodel (Model) – Model to create a LeakPreventionParams object with default parameters.\n\nmaterial_points (List[str], optional) – Material points used for leak prevention control.\n\nscope (ScopeDefinition, optional) – Scope used for leak prevention control.\n\nmax_hole_size (float, optional) – Maximum hole size to prevent leakage into region.\n\nn_expansion_layers (int, optional) – Number of layers to expand leaking region.\n\njson_data (dict, optional) – JSON dictionary to create a LeakPreventionParams object with provided parameters.\n\nExamples\n\n>>> leak_prevention_params = prime.LeakPreventionParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/LeakPreventionParams.html#overview","title":"LeakPreventionParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmaterial_points\n\nMaterial points used for leak prevention control.\n\nmax_hole_size\n\nMaximum hole size to prevent leakage into region.\n\nn_expansion_layers\n\nNumber of layers to expand leaking region.\n\nscope\n\nScope used for leak prevention control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of LeakPreventionParams object.\n\nset_default\n\nSet the default values of the LeakPreventionParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/LeakPreventionParams.html#import-detail","title":"LeakPreventionParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/LeakPreventionParams.html#property-detail","title":"LeakPreventionParams > Property detail","text":"Property detail\n\n\n\nproperty LeakPreventionParams.material_points: ansys.meshing.prime.params.primestructs.List[str]\n\nMaterial points used for leak prevention control.\n\n\n\nproperty LeakPreventionParams.max_hole_size: float\n\nMaximum hole size to prevent leakage into region.\n\n\n\nproperty LeakPreventionParams.n_expansion_layers: int\n\nNumber of layers to expand leaking region.\n\n\n\nproperty LeakPreventionParams.scope: ScopeDefinition\n\nScope used for leak prevention control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/LeakPreventionParams.html#method-detail","title":"LeakPreventionParams > Method detail","text":"Method detail\n\n\n\nLeakPreventionParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nLeakPreventionParams.__str__() -> str\n\n\n\n\n\nstatic LeakPreventionParams.print_default()\n\nPrint the default values of LeakPreventionParams object.\n\nExamples\n\n>>> LeakPreventionParams.print_default()\n\n\n\nstatic LeakPreventionParams.set_default(material_points: ansys.meshing.prime.params.primestructs.List[str] = None, scope: ScopeDefinition = None, max_hole_size: float = None, n_expansion_layers: int = None)\n\nSet the default values of the LeakPreventionParams object.\n\nParameters\n\nmaterial_points (List[str], optional) – Material points used for leak prevention control.\n\nscope (ScopeDefinition, optional) – Scope used for leak prevention control.\n\nmax_hole_size (float, optional) – Maximum hole size to prevent leakage into region.\n\nn_expansion_layers (int, optional) – Number of layers to expand leaking region."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsParams.html#createintersectionedgeloopsparams","title":"CreateIntersectionEdgeLoopsParams","text":"CreateIntersectionEdgeLoopsParams\n\n\n\nclass ansys.meshing.prime.CreateIntersectionEdgeLoopsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, label_name: str = None, json_data: dict = None, **kwargs)\n\nParameters used to calculate edge loops created by intersection of two groups of face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateIntersectionEdgeLoopsParams object with default parameters.\n\nlabel_name (str, optional) – Label name to be assigned to extracted features.\n\njson_data (dict, optional) – JSON dictionary to create a CreateIntersectionEdgeLoopsParams object with provided parameters.\n\nExamples\n\n>>> create_intersection_edge_loops_params = prime.CreateIntersectionEdgeLoopsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsParams.html#overview","title":"CreateIntersectionEdgeLoopsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nlabel_name\n\nLabel name to be assigned to extracted features.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateIntersectionEdgeLoopsParams object.\n\nset_default\n\nSet the default values of the CreateIntersectionEdgeLoopsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsParams.html#import-detail","title":"CreateIntersectionEdgeLoopsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsParams.html#property-detail","title":"CreateIntersectionEdgeLoopsParams > Property detail","text":"Property detail\n\n\n\nproperty CreateIntersectionEdgeLoopsParams.label_name: str\n\nLabel name to be assigned to extracted features."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsParams.html#method-detail","title":"CreateIntersectionEdgeLoopsParams > Method detail","text":"Method detail\n\n\n\nCreateIntersectionEdgeLoopsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateIntersectionEdgeLoopsParams.__str__() -> str\n\n\n\n\n\nstatic CreateIntersectionEdgeLoopsParams.print_default()\n\nPrint the default values of CreateIntersectionEdgeLoopsParams object.\n\nExamples\n\n>>> CreateIntersectionEdgeLoopsParams.print_default()\n\n\n\nstatic CreateIntersectionEdgeLoopsParams.set_default(label_name: str = None)\n\nSet the default values of the CreateIntersectionEdgeLoopsParams object.\n\nParameters\n\nlabel_name (str, optional) – Label name to be assigned to extracted features."},{"objectID":"Home","href":"api/ansys/meshing/prime/LSDynaFileFormatType.html#lsdynafileformattype","title":"LSDynaFileFormatType","text":"LSDynaFileFormatType\n\n\n\nclass ansys.meshing.prime.LSDynaFileFormatType\n\nProvides the format type to write the LS-DYNA file."},{"objectID":"Home","href":"api/ansys/meshing/prime/LSDynaFileFormatType.html#overview","title":"LSDynaFileFormatType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nI10\n\nOption to select 10-char width format to write ids for elements and nodes.\n\nREGULAR\n\nOption to select 8-char width format to write ids for elements and nodes."},{"objectID":"Home","href":"api/ansys/meshing/prime/LSDynaFileFormatType.html#import-detail","title":"LSDynaFileFormatType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/LSDynaFileFormatType.html#attribute-detail","title":"LSDynaFileFormatType > Attribute detail","text":"Attribute detail\n\n\n\nLSDynaFileFormatType.I10 = 1\n\nOption to select 10-char width format to write ids for elements and nodes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nLSDynaFileFormatType.REGULAR = 0\n\nOption to select 8-char width format to write ids for elements and nodes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshResults.html#importfluentmeshingmeshresults","title":"ImportFluentMeshingMeshResults","text":"ImportFluentMeshingMeshResults\n\n\n\nclass ansys.meshing.prime.ImportFluentMeshingMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, new_parts_created: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with fluent meshing mesh import.\n\nParameters\n\nmodel (Model) – Model to create a ImportFluentMeshingMeshResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nnew_parts_created (Iterable[int], optional) – Ids of new parts created for each file unreferenced fluent meshing mesh zones.\n\njson_data (dict, optional) – JSON dictionary to create a ImportFluentMeshingMeshResults object with provided parameters.\n\nExamples\n\n>>> import_fluent_meshing_mesh_results = prime.ImportFluentMeshingMeshResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshResults.html#overview","title":"ImportFluentMeshingMeshResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nnew_parts_created\n\nIds of new parts created for each file unreferenced fluent meshing mesh zones.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportFluentMeshingMeshResults object.\n\nset_default\n\nSet the default values of the ImportFluentMeshingMeshResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshResults.html#import-detail","title":"ImportFluentMeshingMeshResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshResults.html#property-detail","title":"ImportFluentMeshingMeshResults > Property detail","text":"Property detail\n\n\n\nproperty ImportFluentMeshingMeshResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ImportFluentMeshingMeshResults.new_parts_created: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new parts created for each file unreferenced fluent meshing mesh zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshResults.html#method-detail","title":"ImportFluentMeshingMeshResults > Method detail","text":"Method detail\n\n\n\nImportFluentMeshingMeshResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportFluentMeshingMeshResults.__str__() -> str\n\n\n\n\n\nstatic ImportFluentMeshingMeshResults.print_default()\n\nPrint the default values of ImportFluentMeshingMeshResults object.\n\nExamples\n\n>>> ImportFluentMeshingMeshResults.print_default()\n\n\n\nstatic ImportFluentMeshingMeshResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, new_parts_created: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ImportFluentMeshingMeshResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nnew_parts_created (Iterable[int], optional) – Ids of new parts created for each file unreferenced fluent meshing mesh zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneControl.html#multizonecontrol","title":"MultiZoneControl","text":"MultiZoneControl\n\n\n\nclass ansys.meshing.prime.MultiZoneControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nMultiZoneControl provides a way to gather all the information required for MultiZone meshing.\n\nThe MultiZone meshing provides hex meshing capabilities.\nDifferent type of mesh can be generated using MultiZoneControl. For example, sweep mesh, map mesh and edge biased mesh.\n\nParameters\n\nmodel (Model) – Server model to create MultiZoneControl object.\n\nid (int) – Id of the MultiZoneControl.\n\nobject_id (int) – Object id of the MultiZoneControl.\n\nname (str) – Name of the MultiZoneControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneControl.html#overview","title":"MultiZoneControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nset_edge_biasing_params\n\nSets the parameters for edge biasing in terms of topoedges and topofaces during MultiZone mesh.\n\nset_map_mesh_params\n\nSet the parameters for map meshing in terms of topofaces during MultiZone mesh.\n\nset_multi_zone_sizing_params\n\nSets the MultiZone parameters.\n\nset_surface_scope\n\nSets the scope for surface in terms of topofaces.\n\nset_sweep_mesh_params\n\nSet the parameters for sweep meshing in terms of topofaces during MultiZone mesh.\n\nset_volume_scope\n\nSets the scope for volume in terms of topovolumes.The topovolumes given by the scope are imported by MultiZone to generate MultiZone mesh on it.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of MultiZoneControl.\n\nname\n\nGet the name of MultiZoneControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneControl.html#import-detail","title":"MultiZoneControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneControl.html#property-detail","title":"MultiZoneControl > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneControl.id\n\nGet the id of MultiZoneControl.\n\n\n\nproperty MultiZoneControl.name\n\nGet the name of MultiZoneControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneControl.html#method-detail","title":"MultiZoneControl > Method detail","text":"Method detail\n\n\n\nMultiZoneControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneControl.set_edge_biasing_params(scope_info: ansys.meshing.prime.params.primestructs.MultiZoneEdgeBiasingParams)\n\nSets the parameters for edge biasing in terms of topoedges and topofaces during MultiZone mesh.\n\nParameters\n\nscope_info (MultiZoneEdgeBiasingParams) – Information for edge biasing in MultiZone meshing.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_edge_biasing_params(scope_info)\n\n\n\nMultiZoneControl.set_map_mesh_params(scope_info: ansys.meshing.prime.params.primestructs.MultiZoneMapMeshParams)\n\nSet the parameters for map meshing in terms of topofaces during MultiZone mesh.\n\nParameters\n\nscope_info (MultiZoneMapMeshParams) – Scoped topofaces to be map meshed.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_map_mesh_params(scope_info)\n\n\n\nMultiZoneControl.set_multi_zone_sizing_params(params: ansys.meshing.prime.params.primestructs.MultiZoneSizingParams)\n\nSets the MultiZone parameters.\n\nParameters\n\nparams (MultiZoneSizingParams) – Parameters required for MultiZone mesh.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_multi_zone_params(params)\n\n\n\nMultiZoneControl.set_surface_scope(scope_info: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets the scope for surface in terms of topofaces.\n\nParameters\n\nscope_info (ScopeDefinition) – Scoped topofaces.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_surface_scope(scope_info)\n\n\n\nMultiZoneControl.set_sweep_mesh_params(scope_info: ansys.meshing.prime.params.primestructs.MultiZoneSweepMeshParams)\n\nSet the parameters for sweep meshing in terms of topofaces during MultiZone mesh.\n\nParameters\n\nscope_info (MultiZoneSweepMeshParams) – Information required for sweep meshing.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_sweep_mesh_params(scope_info)\n\n\n\nMultiZoneControl.set_volume_scope(scope_info: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets the scope for volume in terms of topovolumes.The topovolumes given by the scope are imported by MultiZone to generate MultiZone mesh on it.\n\nParameters\n\nscope_info (ScopeDefinition) – Scoped topovolumes.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_volume_scope(scope_info)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadResults.html#importcadresults","title":"ImportCadResults","text":"ImportCadResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportCadResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, cad_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, json_data: dict = None, **kwargs)\n\nResults associated with the CAD import.\n\nParameters\n\nmodel (Model) – Model to create a ImportCadResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\ncad_parameters (Dict[str, Union[str, int, float, bool]], optional) – Returns the parameters associated with CAD. Available only with WorkBench CAD Reader route.\n\njson_data (dict, optional) – JSON dictionary to create a ImportCadResults object with provided parameters.\n\nExamples\n\n>>> import_cad_results = prime.ImportCadResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadResults.html#overview","title":"ImportCadResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncad_parameters\n\nReturns the parameters associated with CAD. Available only with WorkBench CAD Reader route.\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportCadResults object.\n\nset_default\n\nSet the default values of the ImportCadResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadResults.html#import-detail","title":"ImportCadResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadResults.html#property-detail","title":"ImportCadResults > Property detail","text":"Property detail\n\n\n\nproperty ImportCadResults.cad_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]]\n\nReturns the parameters associated with CAD. Available only with WorkBench CAD Reader route.\n\n\n\nproperty ImportCadResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadResults.html#method-detail","title":"ImportCadResults > Method detail","text":"Method detail\n\n\n\nImportCadResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportCadResults.__str__() -> str\n\n\n\n\n\nstatic ImportCadResults.print_default()\n\nPrint the default values of ImportCadResults object.\n\nExamples\n\n>>> ImportCadResults.print_default()\n\n\n\nstatic ImportCadResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, cad_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None)\n\nSet the default values of the ImportCadResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\ncad_parameters (Dict[str, Union[str, int, float, bool]], optional) – Returns the parameters associated with CAD. Available only with WorkBench CAD Reader route."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleResult.html#topofillholeresult","title":"TopoFillHoleResult","text":"TopoFillHoleResult\n\n\n\nclass ansys.meshing.prime.autogen.topoutilitystructs.TopoFillHoleResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, new_topo_faces_created: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with fill holes in topology operations.\n\nParameters\n\nmodel (Model) – Model to create a TopoFillHoleResult object with default parameters.\n\nnew_topo_faces_created (Iterable[int], optional) – Ids of new topofaces created.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrap operation.\n\njson_data (dict, optional) – JSON dictionary to create a TopoFillHoleResult object with provided parameters.\n\nExamples\n\n>>> topo_fill_hole_result = prime.TopoFillHoleResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleResult.html#overview","title":"TopoFillHoleResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a wrap operation.\n\nnew_topo_faces_created\n\nIds of new topofaces created.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TopoFillHoleResult object.\n\nset_default\n\nSet the default values of the TopoFillHoleResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleResult.html#import-detail","title":"TopoFillHoleResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleResult.html#property-detail","title":"TopoFillHoleResult > Property detail","text":"Property detail\n\n\n\nproperty TopoFillHoleResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a wrap operation.\n\n\n\nproperty TopoFillHoleResult.new_topo_faces_created: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new topofaces created."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/TopoFillHoleResult.html#method-detail","title":"TopoFillHoleResult > Method detail","text":"Method detail\n\n\n\nTopoFillHoleResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTopoFillHoleResult.__str__() -> str\n\n\n\n\n\nstatic TopoFillHoleResult.print_default()\n\nPrint the default values of TopoFillHoleResult object.\n\nExamples\n\n>>> TopoFillHoleResult.print_default()\n\n\n\nstatic TopoFillHoleResult.set_default(new_topo_faces_created: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the TopoFillHoleResult object.\n\nParameters\n\nnew_topo_faces_created (Iterable[int], optional) – Ids of new topofaces created.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrap operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesParams.html#deletevolumesparams","title":"DeleteVolumesParams","text":"DeleteVolumesParams\n\n\n\nclass ansys.meshing.prime.DeleteVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, delete_small_volumes: bool = None, volume_limit: float = None, json_data: dict = None, **kwargs)\n\nParameters to delete volumes.\n\nParameters\n\nmodel (Model) – Model to create a DeleteVolumesParams object with default parameters.\n\ndelete_small_volumes (bool, optional) – Option to delete only volumes smaller than provided volume limit.\n\nvolume_limit (float, optional) – Maximum volume limit to identify smaller volumes to be deleted.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteVolumesParams object with provided parameters.\n\nExamples\n\n>>> delete_volumes_params = prime.DeleteVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesParams.html#overview","title":"DeleteVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_small_volumes\n\nOption to delete only volumes smaller than provided volume limit.\n\nvolume_limit\n\nMaximum volume limit to identify smaller volumes to be deleted.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteVolumesParams object.\n\nset_default\n\nSet the default values of the DeleteVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesParams.html#import-detail","title":"DeleteVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesParams.html#property-detail","title":"DeleteVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteVolumesParams.delete_small_volumes: bool\n\nOption to delete only volumes smaller than provided volume limit.\n\n\n\nproperty DeleteVolumesParams.volume_limit: float\n\nMaximum volume limit to identify smaller volumes to be deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteVolumesParams.html#method-detail","title":"DeleteVolumesParams > Method detail","text":"Method detail\n\n\n\nDeleteVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteVolumesParams.__str__() -> str\n\n\n\n\n\nstatic DeleteVolumesParams.print_default()\n\nPrint the default values of DeleteVolumesParams object.\n\nExamples\n\n>>> DeleteVolumesParams.print_default()\n\n\n\nstatic DeleteVolumesParams.set_default(delete_small_volumes: bool = None, volume_limit: float = None)\n\nSet the default values of the DeleteVolumesParams object.\n\nParameters\n\ndelete_small_volumes (bool, optional) – Option to delete only volumes smaller than provided volume limit.\n\nvolume_limit (float, optional) – Maximum volume limit to identify smaller volumes to be deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_pipe_tee_pmdat.html#ansysmeshingprimeexamplesdownload_pipe_tee_pmdat","title":"ansys.meshing.prime.examples.download_pipe_tee_pmdat","text":"ansys.meshing.prime.examples.download_pipe_tee_pmdat\n\n\n\nansys.meshing.prime.examples.download_pipe_tee_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the pipe tee example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(pipe_tee, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis section describes ansys-meshing-prime endpoints, their capabilities, and how\nto interact with them programmatically.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionResult.html#resolveintersectionresult","title":"ResolveIntersectionResult","text":"ResolveIntersectionResult\n\n\n\nclass ansys.meshing.prime.ResolveIntersectionResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult structure associated with resolve intersections operation.\n\nParameters\n\nmodel (Model) – Model to create a ResolveIntersectionResult object with default parameters.\n\nerror_code (ErrorCode, optional) – Errror code associated with a resolve intersections operation.\n\njson_data (dict, optional) – JSON dictionary to create a ResolveIntersectionResult object with provided parameters.\n\nExamples\n\n>>> resolve_intersection_result = prime.ResolveIntersectionResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionResult.html#overview","title":"ResolveIntersectionResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nErrror code associated with a resolve intersections operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ResolveIntersectionResult object.\n\nset_default\n\nSet the default values of the ResolveIntersectionResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionResult.html#import-detail","title":"ResolveIntersectionResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionResult.html#property-detail","title":"ResolveIntersectionResult > Property detail","text":"Property detail\n\n\n\nproperty ResolveIntersectionResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nErrror code associated with a resolve intersections operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionResult.html#method-detail","title":"ResolveIntersectionResult > Method detail","text":"Method detail\n\n\n\nResolveIntersectionResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nResolveIntersectionResult.__str__() -> str\n\n\n\n\n\nstatic ResolveIntersectionResult.print_default()\n\nPrint the default values of ResolveIntersectionResult object.\n\nExamples\n\n>>> ResolveIntersectionResult.print_default()\n\n\n\nstatic ResolveIntersectionResult.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ResolveIntersectionResult object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Errror code associated with a resolve intersections operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_turbine_blade_cdb.html#ansysmeshingprimeexamplesdownload_turbine_blade_cdb","title":"ansys.meshing.prime.examples.download_turbine_blade_cdb","text":"ansys.meshing.prime.examples.download_turbine_blade_cdb\n\n\n\nansys.meshing.prime.examples.download_turbine_blade_cdb(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the CDB file for the turbine blade example.\n\ndestination\n\nstr, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     turbine_blade_mesh = prime_examples.download_turbine_blade_cdb()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_mapdl_cdb(\n>>>             turbine_blade_mesh,\n>>>             params=prime.ImportMapdlCdbParams(model),\n>>>         )\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityResults.html#searchbyqualityresults","title":"SearchByQualityResults","text":"SearchByQualityResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchByQualityResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, max_quality: float = None, min_quality: float = None, json_data: dict = None, **kwargs)\n\nResults of search by quality.\n\nParameters\n\nmodel (Model) – Model to create a SearchByQualityResults object with default parameters.\n\nn_found (int, optional) – Number of face elements found by search for given quality limit.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nmax_quality (float, optional) – Maximum quality found by search.\n\nmin_quality (float, optional) – Minimum quality found by search.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByQualityResults object with provided parameters.\n\nExamples\n\n>>> search_by_quality_results = prime.SearchByQualityResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityResults.html#overview","title":"SearchByQualityResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nmax_quality\n\nMaximum quality found by search.\n\nmin_quality\n\nMinimum quality found by search.\n\nn_found\n\nNumber of face elements found by search for given quality limit.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByQualityResults object.\n\nset_default\n\nSet the default values of the SearchByQualityResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityResults.html#import-detail","title":"SearchByQualityResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityResults.html#property-detail","title":"SearchByQualityResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByQualityResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty SearchByQualityResults.max_quality: float\n\nMaximum quality found by search.\n\n\n\nproperty SearchByQualityResults.min_quality: float\n\nMinimum quality found by search.\n\n\n\nproperty SearchByQualityResults.n_found: int\n\nNumber of face elements found by search for given quality limit."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityResults.html#method-detail","title":"SearchByQualityResults > Method detail","text":"Method detail\n\n\n\nSearchByQualityResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByQualityResults.__str__() -> str\n\n\n\n\n\nstatic SearchByQualityResults.print_default()\n\nPrint the default values of SearchByQualityResults object.\n\nExamples\n\n>>> SearchByQualityResults.print_default()\n\n\n\nstatic SearchByQualityResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, max_quality: float = None, min_quality: float = None)\n\nSet the default values of the SearchByQualityResults object.\n\nParameters\n\nn_found (int, optional) – Number of face elements found by search for given quality limit.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nmax_quality (float, optional) – Maximum quality found by search.\n\nmin_quality (float, optional) – Minimum quality found by search."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshResults.html#automeshresults","title":"AutoMeshResults","text":"AutoMeshResults\n\n\n\nclass ansys.meshing.prime.AutoMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nResults of volume meshing.\n\nParameters\n\nmodel (Model) – Model to create a AutoMeshResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Provides error message when automesh fails.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.\n\nerror_locations (Iterable[float], optional) – Error location coordinates returned when automesh fails.\n\njson_data (dict, optional) – JSON dictionary to create a AutoMeshResults object with provided parameters.\n\nExamples\n\n>>> auto_mesh_results = prime.AutoMeshResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshResults.html#overview","title":"AutoMeshResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nProvides error message when automesh fails.\n\nerror_locations\n\nError location coordinates returned when automesh fails.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AutoMeshResults object.\n\nset_default\n\nSet the default values of the AutoMeshResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshResults.html#import-detail","title":"AutoMeshResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshResults.html#property-detail","title":"AutoMeshResults > Property detail","text":"Property detail\n\n\n\nproperty AutoMeshResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nProvides error message when automesh fails.\n\n\n\nproperty AutoMeshResults.error_locations: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nError location coordinates returned when automesh fails.\n\n\n\nproperty AutoMeshResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshResults.html#method-detail","title":"AutoMeshResults > Method detail","text":"Method detail\n\n\n\nAutoMeshResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoMeshResults.__str__() -> str\n\n\n\n\n\nstatic AutoMeshResults.print_default()\n\nPrint the default values of AutoMeshResults object.\n\nExamples\n\n>>> AutoMeshResults.print_default()\n\n\n\nstatic AutoMeshResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the AutoMeshResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Provides error message when automesh fails.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.\n\nerror_locations (Iterable[float], optional) – Error location coordinates returned when automesh fails."},{"objectID":"Home","href":"user_guide/matchmorph.html#match-morphing","title":"Match morphing","text":"Match morphing\n\nMorpher.match_morph() method performs face to face entity matching, providing the ability to match face pairs using match pairs.\nThe method allows the source face to match with the corresponding target face. MatchPair allows you to specify sources and targets for\nmatch morphing.\n\nMatch pairs should have the same type of entities for matching.\n\nMorpher.match_morph() performs the following:\n\nMatches the boundaries of the source and targets using the specified boundary condition pairs.\n\nMatches the source entities to the target entities using the specified match pairs.\n\nEnsures the adjacent entities to the boundaries of the matched entities are adjusted to provide a quality mesh.\n\nThe below example shows how to match morph a cube of hexahedral mesh with quadratic elements to the shape of a sphere:\n\nGet the source and target faces from the source part and target part respectively.\n\nInitialize match morph parameters, morpher boundary condition parameters and morpher solver parameters.\n\nSet the source and target pairs for matching and specify the entity type of target surfaces.\n\nPerform match morphing using the match pairs, match morph parameters, boundary condition parameters and solver parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceUtilities.html#surfaceutilities","title":"SurfaceUtilities","text":"SurfaceUtilities\n\n\n\nclass ansys.meshing.prime.SurfaceUtilities(model: ansys.meshing.prime.core.model.Model)\n\nPerforms various general surface utilities algorithms.\n\nFor example, copy zonelets, resolve surface intersections.\n\nParameters\n\nmodel (Model) – Server model to create SurfaceUtilities object."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceUtilities.html#overview","title":"SurfaceUtilities > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_thickness\n\nAdd thicknesss to input face zonelets.\n\ncopy_face_zonelets\n\nCopy face zonelets.\n\ncreate_boi\n\nCreate BOI to input face zonelets.\n\ncreate_cap_on_face_zonelets\n\nCreate caps on the given face zonelets.\n\ncreate_contact_patch\n\nCreate a contact patch by offsetting the target zonelets.\n\ndelete_unwetted_surfaces\n\nDelete unwetted surfaces based on material point list.\n\nfill_holes_at_plane\n\nFill holes in given face zonelets at given plane.\n\nfix_invalid_normal_nodes_of_face_zonelets\n\nCreate nuggets to fix invalid normal at nodes of the given face zonelets.\n\nget_bounding_box_of_zonelets\n\nGet bounding box of given zonelets.\n\nproject_topo_faces_on_geometry\n\nProject nodes of given topofaces on geometry associated to those topofaces.\n\nrefine_at_contacts\n\nRefine face elements in contact with other parts.\n\nresolve_intersections\n\nResolve facezonelets intersections.\n\nsmooth_dihedral_face_nodes\n\nPerform a smoothing operation to eliminate sharp corners at locations where the input face zonelets intersect.\n\nstretch_free_boundaries\n\nStretch free boundaries of each zonelet.\n\ntriangulate_face_zonelets\n\nSplit faces in zonelets to get triangular faces.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for SurfaceUtilities.\n\n__exit__\n\nExit context for SurfaceUtilities.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceUtilities.html#import-detail","title":"SurfaceUtilities > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceUtilities.html#method-detail","title":"SurfaceUtilities > Method detail","text":"Method detail\n\n\n\nSurfaceUtilities.__enter__()\n\nEnter context for SurfaceUtilities.\n\n\n\nSurfaceUtilities.__exit__(type, value, traceback)\n\nExit context for SurfaceUtilities.\n\n\n\nSurfaceUtilities.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceUtilities.add_thickness(zonelets: Iterable[int], params: ansys.meshing.prime.autogen.surfaceutilitystructs.AddThicknessParams) -> ansys.meshing.prime.autogen.surfaceutilitystructs.AddThicknessResults\n\nAdd thicknesss to input face zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – List of input face zonelet IDs.\n\nparams (AddThicknessParams) – Parameters for controlling the addition of thickness.\n\nReturns\n\nResults for adding thickness.\n\nReturn type\n\nAddThicknessResults\n\nExamples\n\n>>> result = surf_utils.add_thickness(zonelets, params)\n\n\n\nSurfaceUtilities.copy_face_zonelets(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], target_part_id: int, params: ansys.meshing.prime.params.primestructs.CopyZoneletsParams) -> ansys.meshing.prime.params.primestructs.CopyZoneletsResults\n\nCopy face zonelets.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be copied.\n\ntarget_part_id (int) – Part id to be used to move the copied zonelets.\n\nparams (CopyZoneletsParams) – Parameters to copy face zonelets.\n\nReturns\n\nReturns the CopyZoneletsResults.\n\nReturn type\n\nCopyZoneletsResults\n\nExamples\n\n>>>> surfaceutil = SurfaceUtilities(model = model)\n>>>> surfaceutil = surfaceutil.copy_face_zonelets(face_zonelets, target_part_id = new_part.id, prime.CopyZoneletsParams(model = model))\n\n\n\nSurfaceUtilities.create_boi(face_zonelet_ids: Iterable[int], params: ansys.meshing.prime.autogen.surfaceutilitystructs.CreateBOIParams) -> ansys.meshing.prime.autogen.surfaceutilitystructs.CreateBOIResults\n\nCreate BOI to input face zonelets.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – List of input face zonelet IDs.\n\nparams (CreateBOIParams) – Parameters for controlling BOI creation.\n\nReturns\n\nResults from creating BOI.\n\nReturn type\n\nCreateBOIResults\n\nExamples\n\n>>> result = surf_utils.create_boi(zonelets, params)\n\n\n\nSurfaceUtilities.create_cap_on_face_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CreateCapParams) -> ansys.meshing.prime.params.primestructs.CreateCapResults\n\nCreate caps on the given face zonelets.\n\nParameters\n\npart_id (int) – Id of part to associate face zonelets created to cap.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be used to find caps.\n\nparams (CreateCapParams) – Parameters to create caps.\n\nReturns\n\nReturns the CreateCapResults.\n\nReturn type\n\nCreateCapResults\n\nExamples\n\n>>> params = prime.CreateCapParams(model = model)\n>>> results = surface_utils.cap_face_zonelets(part_id, face_zonelets, params)\n\n\n\nSurfaceUtilities.create_contact_patch(source_zonelets: Iterable[int], target_zonelets: Iterable[int], params: ansys.meshing.prime.autogen.surfaceutilitystructs.CreateContactPatchParams) -> ansys.meshing.prime.autogen.surfaceutilitystructs.CreateContactPatchResults\n\nCreate a contact patch by offsetting the target zonelets.\n\nParameters\n\nsource_zonelets (Iterable[int]) – IDS for the source face zonelets.\n\ntarget_zonelets (Iterable[int]) – IDs for the target face zonelets.\n\nparams (CreateContactPatchParams) – Parameters for controlling the contact patch creation.\n\nReturns\n\nResults from creating the contact patch.\n\nReturn type\n\nCreateContactPatchResults\n\nExamples\n\n>>> result = surf_utils.create_contact_patch(zonelets, params)\n\n\n\nSurfaceUtilities.delete_unwetted_surfaces(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], live_material_point_names: List[str], params: ansys.meshing.prime.params.primestructs.DeleteUnwettedParams) -> ansys.meshing.prime.params.primestructs.DeleteUnwettedResult\n\nDelete unwetted surfaces based on material point list.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nlive_material_point_names (List[str]) – Names of material points.\n\nparams (DeleteUnwettedParams) – DeleteUnwettedParams to define material points.\n\nReturns\n\nReturns a DeleteUnwettedResult.\n\nReturn type\n\nDeleteUnwettedResult\n\nExamples\n\n>>> result = surf_utils.delete_unwetted_surfaces(zonelets, live_mpt_names, prime.DeleteUnwettedParams(model))\n\n\n\nSurfaceUtilities.fill_holes_at_plane(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], plane_points: ansys.meshing.prime.params.primestructs.Iterable[float], params: ansys.meshing.prime.params.primestructs.FillHolesAtPlaneParams) -> ansys.meshing.prime.params.primestructs.FillHolesAtPlaneResults\n\nFill holes in given face zonelets at given plane.\n\nParameters\n\npart_id (int) – Id of part to associate face zonelets created to fill hole.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be used to find holes.\n\nplane_points (Iterable[float]) – Coordinates of three points to define plane.\n\nparams (FillHolesAtPlaneParams) – Parameters to fill holes.\n\nReturns\n\nReturns the FillHolesAtPlaneResults.\n\nReturn type\n\nFillHolesAtPlaneResults\n\nExamples\n\n>>> params = prime.FillHolesAtPlaneParams(model = model)\n>>> results = surface_utils.fill_holes_at_plane(part_id, face_zonelets, plane_points, params)\n\n\n\nSurfaceUtilities.fix_invalid_normal_nodes_of_face_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.FixInvalidNormalNodeParams) -> ansys.meshing.prime.params.primestructs.FixInvalidNormalNodeResults\n\nCreate nuggets to fix invalid normal at nodes of the given face zonelets.\n\nParameters\n\npart_id (int) – Part id of the given face zonelets. Nuggets created are associated to the given part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets used to find invalid normal nodes.\n\nparams (FixInvalidNormalNodeParams) – Parameters to find invalid normal nodes and fix them.\n\nReturns\n\nReturns the FixInvalidNormalNodeResults.\n\nReturn type\n\nFixInvalidNormalNodeResults\n\nExamples\n\n>>> params = prime.FixInvalidNormalNodeParams(model = model)\n>>> results = surface_utils.fix_invalid_normal_nodes_of_face_zonelets(part_id, face_zonelets, params)\n\n\n\nSurfaceUtilities.get_bounding_box_of_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.BoundingBox\n\nGet bounding box of given zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns bounding of box of given zonelets.\n\nReturn type\n\nBoundingBox\n\nExamples\n\n>>> zonelets = part.get_face_zonelets() + part.get_edge_zonelets()\n>>> bounding_box = surface_utilities.get_bounding_box_of_zonelets(zonelets)\n\n\n\nSurfaceUtilities.project_topo_faces_on_geometry(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ProjectOnGeometryParams) -> ansys.meshing.prime.params.primestructs.ProjectOnGeometryResults\n\nProject nodes of given topofaces on geometry associated to those topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces to be used to project nodes on the geometry.\n\nparams (ProjectOnGeometryParams) – Parameters used for projecting topoface nodes on geometry.\n\nReturns\n\nReturns the ProjectOnGeometryResults.\n\nReturn type\n\nProjectOnGeometryResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prime.ProjectOnGeometryParams(model = model)\n>>> results = surface_utils.project_topo_faces_on_geometry(topofaces, params)\n\n\n\nSurfaceUtilities.refine_at_contacts(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.RefineAtContactsParams) -> ansys.meshing.prime.params.primestructs.RefineAtContactsResults\n\nRefine face elements in contact with other parts.\n\nParameters\n\npart_ids (Iterable[int]) – Input part ids.\n\nparams (RefineAtContactsParams) – Parameters to refine at contacts.\n\nReturns\n\nReturns the RefineAtContactsResults.\n\nReturn type\n\nRefineAtContactsResults\n\nExamples\n\n>>> params = prime.RefineAtContactsParams(model = model)\n>>> result = surf_utils.refine_at_contacts(part_ids, params)\n\n\n\nSurfaceUtilities.resolve_intersections(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ResolveIntersectionsParams) -> ansys.meshing.prime.params.primestructs.ResolveIntersectionResult\n\nResolve facezonelets intersections.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (ResolveIntersectionsParams) – ResolveIntersectionsParams for resolve intersection.\n\nReturns\n\nReturns a ResolveIntersectionResult.\n\nReturn type\n\nResolveIntersectionResult\n\nExamples\n\n>>> result = surf_utils.resolve_intersections(zonelets, prime.ResolveIntersectionsParams(model))\n\n\n\nSurfaceUtilities.smooth_dihedral_face_nodes(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.SmoothDihedralFaceNodesParams) -> ansys.meshing.prime.params.primestructs.SmoothDihedralFaceNodesResults\n\nPerform a smoothing operation to eliminate sharp corners at locations where the input face zonelets intersect.\n\nParameters\n\nzonelets (Iterable[int]) – List of input face zonelet ids.\n\nparams (SmoothDihedralFaceNodesParams) – Parameters to control the smoothing operation.\n\nReturns\n\nReturns a SmoothDihedralFaceNodesResults.\n\nReturn type\n\nSmoothDihedralFaceNodesResults\n\nExamples\n\n>>> result = surf_utils.smooth_dihedral_face_nodes(zonelets, params)\n\n\n\nSurfaceUtilities.stretch_free_boundaries(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.StretchFreeBoundariesParams) -> ansys.meshing.prime.params.primestructs.StretchFreeBoundariesResults\n\nStretch free boundaries of each zonelet.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (StretchFreeBoundariesParams) – Parameters to control stretch free boundaries operation.\n\nReturns\n\nReturns the StretchFreeBoundariesResults.\n\nReturn type\n\nStretchFreeBoundariesResults\n\nExamples\n\n>>> result = surf_utils.stretch_free_boundaries(face_zonelet_ids, params)\n\n\n\nSurfaceUtilities.triangulate_face_zonelets(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.TriangulateParams) -> ansys.meshing.prime.params.primestructs.TriangulateResults\n\nSplit faces in zonelets to get triangular faces.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (TriangulateParams) – Parameters to control the split operation.\n\nReturns\n\nReturns the TriangulateResults.\n\nReturn type\n\nTriangulateResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> result = surf_utils.triangulate_face_zonelets(face_zonelet_ids, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineRefinementType.html#splinerefinementtype","title":"SplineRefinementType","text":"SplineRefinementType\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.SplineRefinementType\n\nType of spline refinement. Currently, supports h-refinement and p-refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineRefinementType.html#overview","title":"SplineRefinementType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nH\n\nH refinement of spline.\n\nP\n\nP refinement of spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineRefinementType.html#import-detail","title":"SplineRefinementType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineRefinementType.html#attribute-detail","title":"SplineRefinementType > Attribute detail","text":"Attribute detail\n\n\n\nSplineRefinementType.H = 0\n\nH refinement of spline.\n\n\n\nSplineRefinementType.P = 1\n\nP refinement of spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerResults.html#meshstackerresults","title":"MeshStackerResults","text":"MeshStackerResults\n\n\n\nclass ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_codes_per_topo_volume: ansys.meshing.prime.params.primestructs.Iterable[int] = None, non_stackable_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, non_stackable_edges: ansys.meshing.prime.params.primestructs.Iterable[int] = None, small_features: ansys.meshing.prime.params.primestructs.Iterable[int] = None, base_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with the mesh stacker operations.\n\nParameters\n\nmodel (Model) – Model to create a MeshStackerResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the operation.\n\nerror_codes_per_topo_volume (Iterable[int], optional) – Error codes associated with the topovolume-by-topovolume stacking.\n\nnon_stackable_faces (Iterable[int], optional) – List of non-stackable faces. Note: Under-resolved faceting can also create non-stackable geometry.\n\nnon_stackable_edges (Iterable[int], optional) – List of non-stackable edges. Note: Under-resolved faceting can also create non-stackable geometry.\n\nsmall_features (Iterable[int], optional) – List of features edges smaller than input tolerance.\n\nbase_face_ids (Iterable[int], optional) – List of base face ids after base creation.\n\nsize_control_ids (Iterable[int], optional) – List of ids of newly created size controls.\n\njson_data (dict, optional) – JSON dictionary to create a MeshStackerResults object with provided parameters.\n\nExamples\n\n>>> mesh_stacker_results = prime.MeshStackerResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerResults.html#overview","title":"MeshStackerResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbase_face_ids\n\nList of base face ids after base creation.\n\nerror_code\n\nError code associated with the operation.\n\nerror_codes_per_topo_volume\n\nError codes associated with the topovolume-by-topovolume stacking.\n\nnon_stackable_edges\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nnon_stackable_faces\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nsize_control_ids\n\nList of ids of newly created size controls.\n\nsmall_features\n\nList of features edges smaller than input tolerance.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MeshStackerResults object.\n\nset_default\n\nSet the default values of the MeshStackerResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerResults.html#import-detail","title":"MeshStackerResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerResults.html#property-detail","title":"MeshStackerResults > Property detail","text":"Property detail\n\n\n\nproperty MeshStackerResults.base_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of base face ids after base creation.\n\n\n\nproperty MeshStackerResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the operation.\n\n\n\nproperty MeshStackerResults.error_codes_per_topo_volume: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nError codes associated with the topovolume-by-topovolume stacking.\n\n\n\nproperty MeshStackerResults.non_stackable_edges: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nType\n\nList of non-stackable edges. Note\n\n\n\nproperty MeshStackerResults.non_stackable_faces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nType\n\nList of non-stackable faces. Note\n\n\n\nproperty MeshStackerResults.size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of ids of newly created size controls.\n\n\n\nproperty MeshStackerResults.small_features: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of features edges smaller than input tolerance."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerResults.html#method-detail","title":"MeshStackerResults > Method detail","text":"Method detail\n\n\n\nMeshStackerResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMeshStackerResults.__str__() -> str\n\n\n\n\n\nstatic MeshStackerResults.print_default()\n\nPrint the default values of MeshStackerResults object.\n\nExamples\n\n>>> MeshStackerResults.print_default()\n\n\n\nstatic MeshStackerResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_codes_per_topo_volume: ansys.meshing.prime.params.primestructs.Iterable[int] = None, non_stackable_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, non_stackable_edges: ansys.meshing.prime.params.primestructs.Iterable[int] = None, small_features: ansys.meshing.prime.params.primestructs.Iterable[int] = None, base_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the MeshStackerResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the operation.\n\nerror_codes_per_topo_volume (Iterable[int], optional) – Error codes associated with the topovolume-by-topovolume stacking.\n\nnon_stackable_faces (Iterable[int], optional) – List of non-stackable faces. Note: Under-resolved faceting can also create non-stackable geometry.\n\nnon_stackable_edges (Iterable[int], optional) – List of non-stackable edges. Note: Under-resolved faceting can also create non-stackable geometry.\n\nsmall_features (Iterable[int], optional) – List of features edges smaller than input tolerance.\n\nbase_face_ids (Iterable[int], optional) – List of base face ids after base creation.\n\nsize_control_ids (Iterable[int], optional) – List of ids of newly created size controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilities/SurfaceUtilities.html#surfaceutilities","title":"SurfaceUtilities","text":"SurfaceUtilities\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilities.SurfaceUtilities(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nPerforms various general surface utilities algorithms. For example, copy zonelets, resolve surface intersections.\n\nParameters\n\nmodel (Model) – Server model to create SurfaceUtilities object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilities/SurfaceUtilities.html#overview","title":"SurfaceUtilities > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_thickness\n\nAdd thickness to the selected list of face zonelet ids.\n\ncopy_face_zonelets\n\nCopy face zonelets.\n\ncreate_boi\n\nCreate BOI to the selected list of face zonelet ids.\n\ncreate_cap_on_face_zonelets\n\nCreate caps on the given face zonelets.\n\ncreate_contact_patch\n\nCreate contact patch by offsetting the target zonelets.\n\ndelete_unwetted_surfaces\n\nDelete unwetted surfaces based on material point list.\n\nfill_holes_at_plane\n\nFill holes in given face zonelets at given plane.\n\nfix_invalid_normal_nodes_of_face_zonelets\n\nCreate nuggets to fix invalid normal at nodes of the given face zonelets.\n\nget_bounding_box_of_zonelets\n\nGet bounding box of given zonelets.\n\nproject_topo_faces_on_geometry\n\nProject nodes of given topofaces on geometry associated to those topofaces.\n\nrefine_at_contacts\n\nRefine face elements in contact with other parts.\n\nresolve_intersections\n\nResolve facezonelets intersections.\n\nsmooth_dihedral_face_nodes\n\nPerform a smoothing operation to eliminate sharp corners at locations where the input face zonelets intersect.\n\nstretch_free_boundaries\n\nStretch free boundaries of each zonelet.\n\ntriangulate_face_zonelets\n\nSplit faces in zonelets to get triangular faces.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for SurfaceUtilities.\n\n__exit__\n\nExit context for SurfaceUtilities.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilities/SurfaceUtilities.html#import-detail","title":"SurfaceUtilities > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilities/SurfaceUtilities.html#method-detail","title":"SurfaceUtilities > Method detail","text":"Method detail\n\n\n\nSurfaceUtilities.__enter__()\n\nEnter context for SurfaceUtilities.\n\n\n\nSurfaceUtilities.__exit__(type, value, traceback)\n\nExit context for SurfaceUtilities.\n\n\n\nSurfaceUtilities.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceUtilities.add_thickness(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.AddThicknessParams) -> ansys.meshing.prime.params.primestructs.AddThicknessResults\n\nAdd thickness to the selected list of face zonelet ids.\n\nParameters\n\nzonelets (Iterable[int]) – List of input face zonelet ids.\n\nparams (AddThicknessParams) – Parameters to control the add thickness operation.\n\nReturns\n\nReturns the AddThicknessResults.\n\nReturn type\n\nAddThicknessResults\n\nExamples\n\n>>> result = surf_utils.add_thickness(zonelets, params)\n\n\n\nSurfaceUtilities.copy_face_zonelets(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], target_part_id: int, params: ansys.meshing.prime.params.primestructs.CopyZoneletsParams) -> ansys.meshing.prime.params.primestructs.CopyZoneletsResults\n\nCopy face zonelets.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be copied.\n\ntarget_part_id (int) – Part id to be used to move the copied zonelets.\n\nparams (CopyZoneletsParams) – Parameters to copy face zonelets.\n\nReturns\n\nReturns the CopyZoneletsResults.\n\nReturn type\n\nCopyZoneletsResults\n\nExamples\n\n>>>> surfaceutil = SurfaceUtilities(model = model)\n>>>> surfaceutil = surfaceutil.copy_face_zonelets(face_zonelets, target_part_id = new_part.id, prime.CopyZoneletsParams(model = model))\n\n\n\nSurfaceUtilities.create_boi(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CreateBOIParams) -> ansys.meshing.prime.params.primestructs.CreateBOIResults\n\nCreate BOI to the selected list of face zonelet ids.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – List of input face zonelet ids.\n\nparams (CreateBOIParams) – Parameters to control the BOI creation operation.\n\nReturns\n\nReturns the BOIResults.\n\nReturn type\n\nCreateBOIResults\n\nExamples\n\n>>> result = surf_utils.create_boi(zonelets, params)\n\n\n\nSurfaceUtilities.create_cap_on_face_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CreateCapParams) -> ansys.meshing.prime.params.primestructs.CreateCapResults\n\nCreate caps on the given face zonelets.\n\nParameters\n\npart_id (int) – Id of part to associate face zonelets created to cap.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be used to find caps.\n\nparams (CreateCapParams) – Parameters to create caps.\n\nReturns\n\nReturns the CreateCapResults.\n\nReturn type\n\nCreateCapResults\n\nExamples\n\n>>> params = prime.CreateCapParams(model = model)\n>>> results = surface_utils.cap_face_zonelets(part_id, face_zonelets, params)\n\n\n\nSurfaceUtilities.create_contact_patch(source_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], target_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CreateContactPatchParams) -> ansys.meshing.prime.params.primestructs.CreateContactPatchResults\n\nCreate contact patch by offsetting the target zonelets.\n\nParameters\n\nsource_zonelets (Iterable[int]) – Source face zonelet ids.\n\ntarget_zonelets (Iterable[int]) – Target face zonelet ids.\n\nparams (CreateContactPatchParams) – Parameters to control the contact patch creation operation.\n\nReturns\n\nReturns the CreateContactPatchResults.\n\nReturn type\n\nCreateContactPatchResults\n\nExamples\n\n>>> result = surf_utils.create_contact_patch(zonelets, params)\n\n\n\nSurfaceUtilities.delete_unwetted_surfaces(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], live_material_point_names: List[str], params: ansys.meshing.prime.params.primestructs.DeleteUnwettedParams) -> ansys.meshing.prime.params.primestructs.DeleteUnwettedResult\n\nDelete unwetted surfaces based on material point list.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nlive_material_point_names (List[str]) – Names of material points.\n\nparams (DeleteUnwettedParams) – DeleteUnwettedParams to define material points.\n\nReturns\n\nReturns a DeleteUnwettedResult.\n\nReturn type\n\nDeleteUnwettedResult\n\nExamples\n\n>>> result = surf_utils.delete_unwetted_surfaces(zonelets, live_mpt_names, prime.DeleteUnwettedParams(model))\n\n\n\nSurfaceUtilities.fill_holes_at_plane(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], plane_points: ansys.meshing.prime.params.primestructs.Iterable[float], params: ansys.meshing.prime.params.primestructs.FillHolesAtPlaneParams) -> ansys.meshing.prime.params.primestructs.FillHolesAtPlaneResults\n\nFill holes in given face zonelets at given plane.\n\nParameters\n\npart_id (int) – Id of part to associate face zonelets created to fill hole.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be used to find holes.\n\nplane_points (Iterable[float]) – Coordinates of three points to define plane.\n\nparams (FillHolesAtPlaneParams) – Parameters to fill holes.\n\nReturns\n\nReturns the FillHolesAtPlaneResults.\n\nReturn type\n\nFillHolesAtPlaneResults\n\nExamples\n\n>>> params = prime.FillHolesAtPlaneParams(model = model)\n>>> results = surface_utils.fill_holes_at_plane(part_id, face_zonelets, plane_points, params)\n\n\n\nSurfaceUtilities.fix_invalid_normal_nodes_of_face_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.FixInvalidNormalNodeParams) -> ansys.meshing.prime.params.primestructs.FixInvalidNormalNodeResults\n\nCreate nuggets to fix invalid normal at nodes of the given face zonelets.\n\nParameters\n\npart_id (int) – Part id of the given face zonelets. Nuggets created are associated to the given part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets used to find invalid normal nodes.\n\nparams (FixInvalidNormalNodeParams) – Parameters to find invalid normal nodes and fix them.\n\nReturns\n\nReturns the FixInvalidNormalNodeResults.\n\nReturn type\n\nFixInvalidNormalNodeResults\n\nExamples\n\n>>> params = prime.FixInvalidNormalNodeParams(model = model)\n>>> results = surface_utils.fix_invalid_normal_nodes_of_face_zonelets(part_id, face_zonelets, params)\n\n\n\nSurfaceUtilities.get_bounding_box_of_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.BoundingBox\n\nGet bounding box of given zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns bounding of box of given zonelets.\n\nReturn type\n\nBoundingBox\n\nExamples\n\n>>> zonelets = part.get_face_zonelets() + part.get_edge_zonelets()\n>>> bounding_box = surface_utilities.get_bounding_box_of_zonelets(zonelets)\n\n\n\nSurfaceUtilities.project_topo_faces_on_geometry(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ProjectOnGeometryParams) -> ansys.meshing.prime.params.primestructs.ProjectOnGeometryResults\n\nProject nodes of given topofaces on geometry associated to those topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces to be used to project nodes on the geometry.\n\nparams (ProjectOnGeometryParams) – Parameters used for projecting topoface nodes on geometry.\n\nReturns\n\nReturns the ProjectOnGeometryResults.\n\nReturn type\n\nProjectOnGeometryResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prime.ProjectOnGeometryParams(model = model)\n>>> results = surface_utils.project_topo_faces_on_geometry(topofaces, params)\n\n\n\nSurfaceUtilities.refine_at_contacts(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.RefineAtContactsParams) -> ansys.meshing.prime.params.primestructs.RefineAtContactsResults\n\nRefine face elements in contact with other parts.\n\nParameters\n\npart_ids (Iterable[int]) – Input part ids.\n\nparams (RefineAtContactsParams) – Parameters to refine at contacts.\n\nReturns\n\nReturns the RefineAtContactsResults.\n\nReturn type\n\nRefineAtContactsResults\n\nExamples\n\n>>> params = prime.RefineAtContactsParams(model = model)\n>>> result = surf_utils.refine_at_contacts(part_ids, params)\n\n\n\nSurfaceUtilities.resolve_intersections(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ResolveIntersectionsParams) -> ansys.meshing.prime.params.primestructs.ResolveIntersectionResult\n\nResolve facezonelets intersections.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (ResolveIntersectionsParams) – ResolveIntersectionsParams for resolve intersection.\n\nReturns\n\nReturns a ResolveIntersectionResult.\n\nReturn type\n\nResolveIntersectionResult\n\nExamples\n\n>>> result = surf_utils.resolve_intersections(zonelets, prime.ResolveIntersectionsParams(model))\n\n\n\nSurfaceUtilities.smooth_dihedral_face_nodes(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.SmoothDihedralFaceNodesParams) -> ansys.meshing.prime.params.primestructs.SmoothDihedralFaceNodesResults\n\nPerform a smoothing operation to eliminate sharp corners at locations where the input face zonelets intersect.\n\nParameters\n\nzonelets (Iterable[int]) – List of input face zonelet ids.\n\nparams (SmoothDihedralFaceNodesParams) – Parameters to control the smoothing operation.\n\nReturns\n\nReturns a SmoothDihedralFaceNodesResults.\n\nReturn type\n\nSmoothDihedralFaceNodesResults\n\nExamples\n\n>>> result = surf_utils.smooth_dihedral_face_nodes(zonelets, params)\n\n\n\nSurfaceUtilities.stretch_free_boundaries(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.StretchFreeBoundariesParams) -> ansys.meshing.prime.params.primestructs.StretchFreeBoundariesResults\n\nStretch free boundaries of each zonelet.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (StretchFreeBoundariesParams) – Parameters to control stretch free boundaries operation.\n\nReturns\n\nReturns the StretchFreeBoundariesResults.\n\nReturn type\n\nStretchFreeBoundariesResults\n\nExamples\n\n>>> result = surf_utils.stretch_free_boundaries(face_zonelet_ids, params)\n\n\n\nSurfaceUtilities.triangulate_face_zonelets(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.TriangulateParams) -> ansys.meshing.prime.params.primestructs.TriangulateResults\n\nSplit faces in zonelets to get triangular faces.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (TriangulateParams) – Parameters to control the split operation.\n\nReturns\n\nReturns the TriangulateResults.\n\nReturn type\n\nTriangulateResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> result = surf_utils.triangulate_face_zonelets(face_zonelet_ids, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapPairs.html#overlappairs","title":"OverlapPairs","text":"OverlapPairs\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.OverlapPairs(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, zone_id0: int = None, zone_id1: int = None, json_data: dict = None, **kwargs)\n\nProvides ids of a pair of overlapping face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a OverlapPairs object with default parameters.\n\nzone_id0 (int, optional) – Id of one overlapping face zonelet.\n\nzone_id1 (int, optional) – Id of other overlapping face zonelet.\n\njson_data (dict, optional) – JSON dictionary to create a OverlapPairs object with provided parameters.\n\nExamples\n\n>>> overlap_pairs = prime.OverlapPairs(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapPairs.html#overview","title":"OverlapPairs > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nzone_id0\n\nId of one overlapping face zonelet.\n\nzone_id1\n\nId of other overlapping face zonelet.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of OverlapPairs object.\n\nset_default\n\nSet the default values of the OverlapPairs object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapPairs.html#import-detail","title":"OverlapPairs > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapPairs.html#property-detail","title":"OverlapPairs > Property detail","text":"Property detail\n\n\n\nproperty OverlapPairs.zone_id0: int\n\nId of one overlapping face zonelet.\n\n\n\nproperty OverlapPairs.zone_id1: int\n\nId of other overlapping face zonelet."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapPairs.html#method-detail","title":"OverlapPairs > Method detail","text":"Method detail\n\n\n\nOverlapPairs.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nOverlapPairs.__str__() -> str\n\n\n\n\n\nstatic OverlapPairs.print_default()\n\nPrint the default values of OverlapPairs object.\n\nExamples\n\n>>> OverlapPairs.print_default()\n\n\n\nstatic OverlapPairs.set_default(zone_id0: int = None, zone_id1: int = None)\n\nSet the default values of the OverlapPairs object.\n\nParameters\n\nzone_id0 (int, optional) – Id of one overlapping face zonelet.\n\nzone_id1 (int, optional) – Id of other overlapping face zonelet."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsParams.html#wrapperpatchflowregionsparams","title":"WrapperPatchFlowRegionsParams","text":"WrapperPatchFlowRegionsParams\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapperPatchFlowRegionsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, base_size: float = None, suggested_part_name: str = None, number_of_threads: int = None, dead_regions: ansys.meshing.prime.params.primestructs.List[DeadRegion] = None, sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, patch_at_live: bool = None, json_data: dict = None, **kwargs)\n\nWrapperPatchFlowRegionsParams to define parameters for patch flow regions operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapperPatchFlowRegionsParams object with default parameters.\n\nbase_size (float, optional) – Base size to define octree.This is a beta parameter. The behavior and name may change in the future.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.This is a beta parameter. The behavior and name may change in the future.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.This is a beta parameter. The behavior and name may change in the future.\n\ndead_regions (List[DeadRegion], optional) – List of dead regions.This is a beta parameter. The behavior and name may change in the future.\n\nsizing_method (SizeFieldType, optional) – Method used to define sizing method for patching.This is a beta parameter. The behavior and name may change in the future.\n\nsize_field_ids (Iterable[int], optional) – Ids used to define size field based octree refinement.This is a beta parameter. The behavior and name may change in the future.\n\npatch_at_live (bool, optional) – Creates patches closer to live instead of dead.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperPatchFlowRegionsParams object with provided parameters.\n\nExamples\n\n>>> wrapper_patch_flow_regions_params = prime.WrapperPatchFlowRegionsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsParams.html#overview","title":"WrapperPatchFlowRegionsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbase_size\n\nBase size to define octree.\n\ndead_regions\n\nList of dead regions.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\npatch_at_live\n\nCreates patches closer to live instead of dead.\n\nsize_field_ids\n\nUsed to define size field based octree refinement.\n\nsizing_method\n\nUsed to define sizing method for patching.\n\nsuggested_part_name\n\nSuggested part name for created patching surfaces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperPatchFlowRegionsParams object.\n\nset_default\n\nSet the default values of the WrapperPatchFlowRegionsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsParams.html#import-detail","title":"WrapperPatchFlowRegionsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsParams.html#property-detail","title":"WrapperPatchFlowRegionsParams > Property detail","text":"Property detail\n\n\n\nproperty WrapperPatchFlowRegionsParams.base_size: float\n\nBase size to define octree.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.dead_regions: ansys.meshing.prime.params.primestructs.List[DeadRegion]\n\nList of dead regions.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.patch_at_live: bool\n\nCreates patches closer to live instead of dead.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUsed to define size field based octree refinement.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nUsed to define sizing method for patching.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsParams.html#method-detail","title":"WrapperPatchFlowRegionsParams > Method detail","text":"Method detail\n\n\n\nWrapperPatchFlowRegionsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperPatchFlowRegionsParams.__str__() -> str\n\n\n\n\n\nstatic WrapperPatchFlowRegionsParams.print_default()\n\nPrint the default values of WrapperPatchFlowRegionsParams object.\n\nExamples\n\n>>> WrapperPatchFlowRegionsParams.print_default()\n\n\n\nstatic WrapperPatchFlowRegionsParams.set_default(base_size: float = None, suggested_part_name: str = None, number_of_threads: int = None, dead_regions: ansys.meshing.prime.params.primestructs.List[DeadRegion] = None, sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, patch_at_live: bool = None)\n\nSet the default values of the WrapperPatchFlowRegionsParams object.\n\nParameters\n\nbase_size (float, optional) – Base size to define octree.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\ndead_regions (List[DeadRegion], optional) – List of dead regions.\n\nsizing_method (SizeFieldType, optional) – Used to define sizing method for patching.\n\nsize_field_ids (Iterable[int], optional) – Used to define size field based octree refinement.\n\npatch_at_live (bool, optional) – Creates patches closer to live instead of dead."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeEvaluationType.html#scopeevaluationtype","title":"ScopeEvaluationType","text":"ScopeEvaluationType\n\n\n\nclass ansys.meshing.prime.ScopeEvaluationType\n\nScopeDefinition uses evaluation type to evaluate the scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeEvaluationType.html#overview","title":"ScopeEvaluationType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nLABELS\n\nUse labels to evaluate the scope.\n\nZONES\n\nUse zones to evaluate the scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeEvaluationType.html#import-detail","title":"ScopeEvaluationType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeEvaluationType.html#attribute-detail","title":"ScopeEvaluationType > Attribute detail","text":"Attribute detail\n\n\n\nScopeEvaluationType.LABELS = 3\n\nUse labels to evaluate the scope.\n\n\n\nScopeEvaluationType.ZONES = 4\n\nUse zones to evaluate the scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoSearchField.html#toposearchfield","title":"TopoSearchField","text":"TopoSearchField\n\n\n\nclass ansys.meshing.prime.TopoSearchField\n\nToposearch diagnostic field."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoSearchField.html#overview","title":"TopoSearchField > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBROKENLOOPTOPOFACES\n\nDiagnoses topofaces with open or broken bounding edge loops.\n\nINCONSISTENTNORMALORIENTATIONTOPOFACES\n\nDiagnoses topofaces with inconsistent normal orientations.\n\nINCORRECTBOUNDARYORIENTATIONTOPOFACES\n\nDiagnoses topofaces with incorrect boundary orientations.\n\nINTERSECTINGTOPOFACES\n\nDiagnoses intersecting topofaces.\n\nINVALIDBOUNDARYTOPOFACES\n\nDiagnoses topofaces with incorrect bounding edge orientation.\n\nNOBOUNDARYLOOPTOPOFACES\n\nDiagnoses topofaces without bounding edges.\n\nNUMBEROFFIELDS\n\nDiagnoses all topofaces.\n\nOVERLAPPINGTOPOFACES\n\nDiagnoses overlapping or partially overlapping topofaces.\n\nSELFINTERSECTINGTOPOFACES\n\nDiagnoses topofaces with self intersecting bounding edges.\n\nSMALLTOPOEDGES\n\nDiagnoses topofaces with small topoedges."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoSearchField.html#import-detail","title":"TopoSearchField > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoSearchField.html#attribute-detail","title":"TopoSearchField > Attribute detail","text":"Attribute detail\n\n\n\nTopoSearchField.BROKENLOOPTOPOFACES = 3\n\nDiagnoses topofaces with open or broken bounding edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.INCONSISTENTNORMALORIENTATIONTOPOFACES = 8\n\nDiagnoses topofaces with inconsistent normal orientations.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.INCORRECTBOUNDARYORIENTATIONTOPOFACES = 7\n\nDiagnoses topofaces with incorrect boundary orientations.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.INTERSECTINGTOPOFACES = 1\n\nDiagnoses intersecting topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.INVALIDBOUNDARYTOPOFACES = 5\n\nDiagnoses topofaces with incorrect bounding edge orientation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.NOBOUNDARYLOOPTOPOFACES = 4\n\nDiagnoses topofaces without bounding edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.NUMBEROFFIELDS = 9\n\nDiagnoses all topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.OVERLAPPINGTOPOFACES = 0\n\nDiagnoses overlapping or partially overlapping topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.SELFINTERSECTINGTOPOFACES = 2\n\nDiagnoses topofaces with self intersecting bounding edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTopoSearchField.SMALLTOPOEDGES = 6\n\nDiagnoses topofaces with small topoedges.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPair.html#bcpair","title":"BCPair","text":"BCPair\n\n\n\nclass ansys.meshing.prime.autogen.morpherstructs.BCPair(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, source_zonelet: int = None, target_zonelet: int = None, type: BCPairType = None, json_data: dict = None, **kwargs)\n\nUsed to define boundary conditions for match morphing.\n\nParameters\n\nmodel (Model) – Model to create a BCPair object with default parameters.\n\nsource_zonelet (int, optional) – Id of source zonelet.\n\ntarget_zonelet (int, optional) – Id of target zonelet.\n\ntype (BCPairType, optional) – Option to specify boundary condition pair type.\n\njson_data (dict, optional) – JSON dictionary to create a BCPair object with provided parameters.\n\nExamples\n\n>>> b_cpair = prime.BCPair(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPair.html#overview","title":"BCPair > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsource_zonelet\n\nId of source zonelet.\n\ntarget_zonelet\n\nId of target zonelet.\n\ntype\n\nOption to specify boundary condition pair type.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of BCPair object.\n\nset_default\n\nSet the default values of the BCPair object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPair.html#import-detail","title":"BCPair > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPair.html#property-detail","title":"BCPair > Property detail","text":"Property detail\n\n\n\nproperty BCPair.source_zonelet: int\n\nId of source zonelet.\n\n\n\nproperty BCPair.target_zonelet: int\n\nId of target zonelet.\n\n\n\nproperty BCPair.type: BCPairType\n\nOption to specify boundary condition pair type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPair.html#method-detail","title":"BCPair > Method detail","text":"Method detail\n\n\n\nBCPair.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBCPair.__str__() -> str\n\n\n\n\n\nstatic BCPair.print_default()\n\nPrint the default values of BCPair object.\n\nExamples\n\n>>> BCPair.print_default()\n\n\n\nstatic BCPair.set_default(source_zonelet: int = None, target_zonelet: int = None, type: BCPairType = None)\n\nSet the default values of the BCPair object.\n\nParameters\n\nsource_zonelet (int, optional) – Id of source zonelet.\n\ntarget_zonelet (int, optional) – Id of target zonelet.\n\ntype (BCPairType, optional) – Option to specify boundary condition pair type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/UniformSolidSplineCreationParams.html#uniformsolidsplinecreationparams","title":"UniformSolidSplineCreationParams","text":"UniformSolidSplineCreationParams\n\n\n\nclass ansys.meshing.prime.autogen.trimmedsplinestructs.UniformSolidSplineCreationParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_control_points_u: int = None, n_control_points_v: int = None, n_control_points_w: int = None, degree_u: int = None, degree_v: int = None, degree_w: int = None, json_data: dict = None, **kwargs)\n\nParameters to define the uniform solid spline.\n\nParameters\n\nmodel (Model) – Model to create a UniformSolidSplineCreationParams object with default parameters.\n\nn_control_points_u (int, optional) – Number of control points in u direction.This is a beta parameter. The behavior and name may change in the future.\n\nn_control_points_v (int, optional) – Number of control points in v direction.This is a beta parameter. The behavior and name may change in the future.\n\nn_control_points_w (int, optional) – Number of control points in w direction.This is a beta parameter. The behavior and name may change in the future.\n\ndegree_u (int, optional) – Degree in u direction.This is a beta parameter. The behavior and name may change in the future.\n\ndegree_v (int, optional) – Degree in v direction.This is a beta parameter. The behavior and name may change in the future.\n\ndegree_w (int, optional) – Degree in w direction.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a UniformSolidSplineCreationParams object with provided parameters.\n\nExamples\n\n>>> uniform_solid_spline_creation_params = prime.UniformSolidSplineCreationParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/UniformSolidSplineCreationParams.html#overview","title":"UniformSolidSplineCreationParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndegree_u\n\nDegree in u direction.\n\ndegree_v\n\nDegree in v direction.\n\ndegree_w\n\nDegree in w direction.\n\nn_control_points_u\n\nNumber of control points in u direction.\n\nn_control_points_v\n\nNumber of control points in v direction.\n\nn_control_points_w\n\nNumber of control points in w direction.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of UniformSolidSplineCreationParams object.\n\nset_default\n\nSet the default values of the UniformSolidSplineCreationParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/UniformSolidSplineCreationParams.html#import-detail","title":"UniformSolidSplineCreationParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/UniformSolidSplineCreationParams.html#property-detail","title":"UniformSolidSplineCreationParams > Property detail","text":"Property detail\n\n\n\nproperty UniformSolidSplineCreationParams.degree_u: int\n\nDegree in u direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.degree_v: int\n\nDegree in v direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.degree_w: int\n\nDegree in w direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_u: int\n\nNumber of control points in u direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_v: int\n\nNumber of control points in v direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_w: int\n\nNumber of control points in w direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/UniformSolidSplineCreationParams.html#method-detail","title":"UniformSolidSplineCreationParams > Method detail","text":"Method detail\n\n\n\nUniformSolidSplineCreationParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nUniformSolidSplineCreationParams.__str__() -> str\n\n\n\n\n\nstatic UniformSolidSplineCreationParams.print_default()\n\nPrint the default values of UniformSolidSplineCreationParams object.\n\nExamples\n\n>>> UniformSolidSplineCreationParams.print_default()\n\n\n\nstatic UniformSolidSplineCreationParams.set_default(n_control_points_u: int = None, n_control_points_v: int = None, n_control_points_w: int = None, degree_u: int = None, degree_v: int = None, degree_w: int = None)\n\nSet the default values of the UniformSolidSplineCreationParams object.\n\nParameters\n\nn_control_points_u (int, optional) – Number of control points in u direction.\n\nn_control_points_v (int, optional) – Number of control points in v direction.\n\nn_control_points_w (int, optional) – Number of control points in w direction.\n\ndegree_u (int, optional) – Degree in u direction.\n\ndegree_v (int, optional) – Degree in v direction.\n\ndegree_w (int, optional) – Degree in w direction."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/VolumeScope.html#volumescope","title":"VolumeScope","text":"VolumeScope\n\n\n\nclass ansys.meshing.prime.lucid.VolumeScope(part_expression: str = '*', entity_expression: str = '*', scope_evaluation_type: ansys.meshing.prime.autogen.controlstructs.ScopeEvaluationType = ScopeEvaluationType.ZONES)\n\nVolumeScope is one of the classes in Lucid API.\n\nThis class is meant for beginners to meshing. This class is used to define\na scope for operation on volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/VolumeScope.html#overview","title":"VolumeScope > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_scope_definition\n\nGet the scope definition of the scope.\n\nSpecial methods\n\n\n\n\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/VolumeScope.html#import-detail","title":"VolumeScope > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/VolumeScope.html#method-detail","title":"VolumeScope > Method detail","text":"Method detail\n\n\n\nVolumeScope.__str__() -> str\n\n\n\n\n\nVolumeScope.get_scope_definition(model: ansys.meshing.prime.core.model.Model) -> ansys.meshing.prime.autogen.controlstructs.ScopeDefinition\n\nGet the scope definition of the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\nReturns\n\nReturns the scope definition.\n\nReturn type\n\nScopeDefinition"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/index.html#the-surfacesearchstructspy-module","title":"The surfacesearchstructs.py module","text":"The surfacesearchstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/index.html#summary","title":"The surfacesearchstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCheckFaceDeviationParams\n\nParameters used for check face deviation operations.\n\nCheckFaceDeviationResults\n\nResult structure associated with the check face deviation operations.\n\nSearchByFoldsParams\n\nParameters to control fold detection.\n\nSearchByFoldsResults\n\nResults structure associated with search folds operation.\n\nSearchByIntersectionResults\n\nResults associated with search by face element intersection (face elements interfering with each other).\n\nSearchByInvalidNormalsResults\n\nResults structure associated with search invalid normals operation.\n\nSearchByQualityParams\n\nParameters to control search by quality results.\n\nSearchByQualityResults\n\nResults of search by quality.\n\nSearchBySelfIntersectionParams\n\nParameters to search by face element intersection.\n\nSearchBySpikeParams\n\nParameters to control spike detection.\n\nSearchBySpikeResults\n\nResults structure associated with search spikes operation.\n\nSearchByThinStripParams\n\nParameters to search by thin strip of face elements.\n\nSearchByThinStripResults\n\nResults associated with search by thin strip of face elements.\n\nSearchInfoByRegisterIdParams\n\nParameters to retrieve information on registered faces.\n\nSearchInfoByRegisterIdResults\n\nResult structure containing information on registered face elements.\n\nSurfaceDiagnosticSummaryParams\n\nParameters to control surface diagnostics summary results.\n\nSurfaceDiagnosticSummaryResults\n\nResults of surface diagnostic summary.\n\nSurfaceQualityResult\n\nResult of surface quality.\n\nSurfaceQualitySummaryParams\n\nParameters to control surface quality summary results.\n\nSurfaceQualitySummaryResults\n\nResults of surface quality summary.\n\nThinStripType\n\nThe type to identify strip of face elements as thin strips using shape formed by features around the strip of face elements.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/index.html#description","title":"The surfacesearchstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_elbow_pmdat.html#ansysmeshingprimeexamplesdownload_elbow_pmdat","title":"ansys.meshing.prime.examples.download_elbow_pmdat","text":"ansys.meshing.prime.examples.download_elbow_pmdat\n\n\n\nansys.meshing.prime.examples.download_elbow_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the mixing elbow example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(elbow, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_solder_ball_fmd.html#ansysmeshingprimeexamplesdownload_solder_ball_fmd","title":"ansys.meshing.prime.examples.download_solder_ball_fmd","text":"ansys.meshing.prime.examples.download_solder_ball_fmd\n\n\n\nansys.meshing.prime.examples.download_solder_ball_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload a FMD file for the solder ball example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     solder_ball = prime_examples.download_solder_ball_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(solder_ball, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/index.html#the-examples-package","title":"The examples package","text":"The examples package\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/index.html#summary","title":"The examples package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\ndownload_utilities\n\n\n\nexamples\n\nExamples module for PyPrimeMesh.\n\nunit_test_examples\n\n\n\nClasses\n\n\n\n\n\nDownloadManager\n\nManages downloads of example files.\n\nFunctions\n\n\n\n\n\ndownload_block_model_fmd\n\nDownload CAD file for the block model example.\n\ndownload_block_model_pmdat\n\nDownload PMDAT file for the block model example.\n\ndownload_block_model_scdoc\n\nDownload CAD file for the block model example.\n\ndownload_bracket_dsco\n\nDownload the DSCO file for the bracket scaffold example.\n\ndownload_bracket_fmd\n\nDownload the FMD file for the bracket scaffold example.\n\ndownload_bracket_scdoc\n\nDownload the SCDOC file for the bracket scaffold example.\n\ndownload_deformed_blade_dsco\n\nDownload the DSCO file for the turbine blade example.\n\ndownload_deformed_blade_fmd\n\nDownload the FMD file for the turbine blade example.\n\ndownload_deformed_blade_scdoc\n\nDownload the SCDOC file for the turbine blade example.\n\ndownload_elbow_dsco\n\nDownload the DSCO file for the mixing elbow example.\n\ndownload_elbow_fmd\n\nDownload the FMD file for the mixing elbow example.\n\ndownload_elbow_pmdat\n\nDownload the PMDAT file for the mixing elbow example.\n\ndownload_elbow_scdoc\n\nDownload the SCDOC file for the mixing elbow example.\n\ndownload_f1_rw_drs_stl\n\nDownload STL file for the generic f1 rear wing example.\n\ndownload_f1_rw_enclosure_stl\n\nDownload STL file for the generic f1 rear wing example.\n\ndownload_f1_rw_end_plates_stl\n\nDownload STL file for the generic f1 rear wing example.\n\ndownload_f1_rw_main_plane_stl\n\nDownload STL file for the generic f1 rear wing example.\n\ndownload_multi_layer_quad_mesh_pcb_dsco\n\nDownload the DSCO file for the multi-layer PCB meshing example.\n\ndownload_multi_layer_quad_mesh_pcb_fmd\n\nDownload the FMD file for the multi-layer PCB meshing example.\n\ndownload_multi_layer_quad_mesh_pcb_pmdat\n\nDownload the PMDAT file for the multi-layer PCB meshing example.\n\ndownload_multi_layer_quad_mesh_pcb_pmdb\n\nDownload the PMDB file for the multi-layer PCB meshing example.\n\ndownload_multi_layer_quad_mesh_pcb_scdoc\n\nDownload the SCDOC file for the multi-layer PCB meshing example.\n\ndownload_pcb_pmdat\n\nDownload the PMDAT file for the PCB example.\n\ndownload_pcb_scdoc\n\nDownload SCDOC file for the pcb example.\n\ndownload_pipe_tee_dsco\n\nDownload the DSCO file for the pipe tee example.\n\ndownload_pipe_tee_fmd\n\nDownload the FMD file for the pipe tee example.\n\ndownload_pipe_tee_pmdat\n\nDownload the PMDAT file for the pipe tee example.\n\ndownload_pipe_tee_scdoc\n\nDownload the SCDOC file for the pipe tee example.\n\ndownload_saddle_bracket_dsco\n\nDownload DSCO file for the saddle bracket example.\n\ndownload_saddle_bracket_fmd\n\nDownload FMD file for the saddle bracket example\n\ndownload_saddle_bracket_scdoc\n\nDownload SCDOC file for the saddle bracket example.\n\ndownload_solder_ball_fmd\n\nDownload a FMD file for the solder ball example.\n\ndownload_solder_ball_target_fmd\n\nDownload a FMD file for the solder ball example.\n\ndownload_test_examples\n\nDownload the example files necessary for unit testing.\n\ndownload_toy_car_dsco\n\nDownload the DSCO file for the toy car example.\n\ndownload_toy_car_fmd\n\nDownload the FMD file for the toy car example.\n\ndownload_toy_car_pmdat\n\nDownload the PMDAT file for the toy car example.\n\ndownload_toy_car_scdoc\n\nDownload the SCDOC file for the toy car example.\n\ndownload_turbine_blade_cdb\n\nDownload the CDB file for the turbine blade example.\n\ndownload_wheel_ground_dsco\n\nDownload the DSCO file for the wheel ground contact patch example.\n\ndownload_wheel_ground_fmd\n\nDownload the FMD file for the wheel ground contact patch example.\n\ndownload_wheel_ground_scdoc\n\nDownload the SCDOC file for the wheel ground contact patch example.\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/Mesh.html#mesh","title":"Mesh","text":"Mesh\n\n\n\nclass ansys.meshing.prime.core.mesh.Mesh(model: ansys.meshing.prime.params.primestructs.CommunicationManager)\n\nProcesses the mesh for visualization in the GUI.\n\nParameters\n\nmodel (CommunicationManager) – Model to process."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/Mesh.html#overview","title":"Mesh > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nas_polydata\n\nReturn the mesh as a pv.PolyData object.\n\nget_edge_color\n\nGet the colors of edges.\n\nget_edge_polydata\n\nGet the polydata object of the edges.\n\nget_face_and_edge_connectivity\n\nGets the connectivity of face and edge zonelets of the given part ids.\n\nget_face_color\n\nGet the colors of faces.\n\nget_face_polydata\n\nGet the polydata object of the faces.\n\nget_scoped_polydata\n\nGet the polydata object of the scoped mesh.\n\nget_spline_cp_polydata\n\nGet the polydata object of the spline control points.\n\nget_spline_surface_polydata\n\nGet the polydata object of the spline surface.\n\nget_statistics_of_cell_zonelets\n\nGets cell statistics of given cell zonelets using provided cell statistics parameters.\n\nupdate_pd\n\nUpdate the polydata object of the mesh.\n\nProperties\n\n\n\n\n\nid\n\nReturn the ID of the mesh.\n\nmodel\n\nModel.\n\npart_id\n\nReturn the part ID of the mesh.\n\nzone_id\n\nReturn the zone ID of the mesh.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for MeshInfo.\n\n__exit__\n\nExit context for MeshInfo.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/Mesh.html#import-detail","title":"Mesh > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/Mesh.html#property-detail","title":"Mesh > Property detail","text":"Property detail\n\n\n\nproperty Mesh.id\n\nReturn the ID of the mesh.\n\nReturns\n\nID of the mesh.\n\nReturn type\n\nint\n\n\n\nproperty Mesh.model\n\nModel.\n\n\n\nproperty Mesh.part_id\n\nReturn the part ID of the mesh.\n\nReturns\n\nPart ID of the mesh.\n\nReturn type\n\nint\n\n\n\nproperty Mesh.zone_id\n\nReturn the zone ID of the mesh.\n\nReturns\n\nZone ID of the mesh.\n\nReturn type\n\nint"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/Mesh.html#method-detail","title":"Mesh > Method detail","text":"Method detail\n\n\n\nMesh.__enter__()\n\nEnter context for MeshInfo.\n\n\n\nMesh.__exit__(type, value, traceback)\n\nExit context for MeshInfo.\n\n\n\nMesh.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMesh.as_polydata(update: bool = False) -> Dict[int, Dict[str, List[tuple[pyvista.PolyData, ansys.meshing.prime.core.part.Part]]]]\n\nReturn the mesh as a pv.PolyData object.\n\nParameters\n\nupdate (bool, default: False) – Update the polydata.\n\nReturns\n\nDictionary with the polydata objects.\n\nReturn type\n\nDict[int, Dict[str, List[(pv.PolyData, Part)]]\n\n\n\nMesh.get_edge_color(edge_results: ansys.meshing.prime.autogen.meshinfostructs.EdgeConnectivityResults, index: int)\n\nGet the colors of edges.\n\nReturns\n\nList of colors for edges.\n\nReturn type\n\nList\n\n\n\nMesh.get_edge_polydata(part_id: int, edge_facet_res: ansys.meshing.prime.autogen.meshinfostructs.EdgeConnectivityResults, index: int) -> ansys.tools.visualization_interface.MeshObjectPlot\n\nGet the polydata object of the edges.\n\nParameters\n\npart_id (int) – ID of the part to get the polydata from.\n\nedge_facet_res (EdgeConnectivityResults) – Results of the edge connectivity.\n\nindex (int) – Index of the edge.\n\nReturns\n\nMesh to be displayed.\n\nReturn type\n\nMeshObjectPlot\n\n\n\nMesh.get_face_and_edge_connectivity(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.FaceAndEdgeConnectivityParams) -> ansys.meshing.prime.params.primestructs.FaceAndEdgeConnectivityResults\n\nGets the connectivity of face and edge zonelets of the given part ids.\n\nConnectivity result is used in graphics rendering.\n\nParameters\n\npart_ids (Iterable[int]) – Ids of the part.\n\nparams (FaceAndEdgeConnectivityParams) – Parameters to get connectivity of face zonelets and edge zonelets.\n\nReturns\n\nReturns the FaceAndEdgeConnectivityResults.\n\nReturn type\n\nFaceAndEdgeConnectivityResults\n\nExamples\n\n>>> mesh_info = prime.MeshInfo(model)\n>>> part_ids = [part.id for part in model.parts]\n>>> result = mesh_info.get_face_and_edge_connectivity(part_ids,\n>>>                  prime.FaceAndEdgeConnectivityParams(model =model))\n\n\n\nMesh.get_face_color(part: ansys.meshing.prime.core.part.Part, model_type: ColorByType = ColorByType.ZONE)\n\nGet the colors of faces.\n\nReturns\n\nList of colors for faces.\n\nReturn type\n\nList\n\n\n\nMesh.get_face_polydata(part_id: int, face_facet_res: ansys.meshing.prime.autogen.meshinfostructs.FaceConnectivityResults, index: int) -> ansys.tools.visualization_interface.MeshObjectPlot\n\nGet the polydata object of the faces.\n\nParameters\n\npart_id (int) – ID of the part to get the polydata from.\n\nface_facet_res (FaceConnectivityResults) – Results of the face connectivity.\n\nindex (int) – Index of the face.\n\nReturns\n\nMesh to be plotted and information of the mesh to display.\n\nReturn type\n\nMeshObjectPlot, DisplayMeshInfo\n\n\n\nMesh.get_scoped_polydata(scope: ansys.meshing.prime.ScopeDefinition, update: bool = False)\n\nGet the polydata object of the scoped mesh.\n\nParameters\n\nscope (prime.ScopeDefinition) – Scope to get the mesh from.\n\nReturns\n\nPyVista mesh object.\n\nReturn type\n\npv.PolyData\n\n\n\nMesh.get_spline_cp_polydata(part_id: int, spline_id: int) -> ansys.tools.visualization_interface.MeshObjectPlot\n\nGet the polydata object of the spline control points.\n\nParameters\n\npart_id (int) – ID of the part to get the polydata from.\n\nspline_id (int) – ID of the spline.\n\nReturns\n\nMesh to be displayed.\n\nReturn type\n\nMeshObjectPlot\n\n\n\nMesh.get_spline_surface_polydata(part_id: int, spline_id: int) -> ansys.tools.visualization_interface.MeshObjectPlot\n\nGet the polydata object of the spline surface.\n\nParameters\n\npart_id (int) – ID of the part to get the polydata from.\n\nspline_id (int) – ID of the spline.\n\nReturns\n\nMesh to be displayed.\n\nReturn type\n\nMeshObjectPlot\n\n\n\nMesh.get_statistics_of_cell_zonelets(cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CellStatisticsParams) -> ansys.meshing.prime.params.primestructs.CellStatisticsResults\n\nGets cell statistics of given cell zonelets using provided cell statistics parameters.\n\nParameters\n\ncell_zonelets (Iterable[int]) – Ids of cell zonelets for which statistics are calculated.\n\nparams (CellStatisticsParams) – Parameters to get cells statistics.\n\nReturns\n\nReturns the CellStatisticsResults.\n\nReturn type\n\nCellStatisticsResults\n\nExamples\n\n>>> mesh_info = prime.MeshInfo(model)\n>>> part = model.get_part_by_name(\"part_name\")\n>>> result = mesh_info.get_statistics_of_cell_zonelets(part.get_cell_zonelets(),\n>>>                  prime.CellStatisticsParams(model=model))\n\n\n\nMesh.update_pd(part_ids) -> Dict[int, Dict[str, list[pyvista.PolyData, ansys.meshing.prime.core.part.Part]]]\n\nUpdate the polydata object of the mesh.\n\nParameters\n\npart_ids (List[int]) – List of part IDs to update.\n\nReturns\n\nDictionary with the polydata objects.\n\nReturn type\n\nDict[int, Dict[str, List[(pv.PolyData, Part)]]"},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPair.html#bcpair","title":"BCPair","text":"BCPair\n\n\n\nclass ansys.meshing.prime.BCPair(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, source_zonelet: int = None, target_zonelet: int = None, type: BCPairType = None, json_data: dict = None, **kwargs)\n\nUsed to define boundary conditions for match morphing.\n\nParameters\n\nmodel (Model) – Model to create a BCPair object with default parameters.\n\nsource_zonelet (int, optional) – Id of source zonelet.\n\ntarget_zonelet (int, optional) – Id of target zonelet.\n\ntype (BCPairType, optional) – Option to specify boundary condition pair type.\n\njson_data (dict, optional) – JSON dictionary to create a BCPair object with provided parameters.\n\nExamples\n\n>>> b_cpair = prime.BCPair(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPair.html#overview","title":"BCPair > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsource_zonelet\n\nId of source zonelet.\n\ntarget_zonelet\n\nId of target zonelet.\n\ntype\n\nOption to specify boundary condition pair type.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of BCPair object.\n\nset_default\n\nSet the default values of the BCPair object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPair.html#import-detail","title":"BCPair > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPair.html#property-detail","title":"BCPair > Property detail","text":"Property detail\n\n\n\nproperty BCPair.source_zonelet: int\n\nId of source zonelet.\n\n\n\nproperty BCPair.target_zonelet: int\n\nId of target zonelet.\n\n\n\nproperty BCPair.type: BCPairType\n\nOption to specify boundary condition pair type."},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPair.html#method-detail","title":"BCPair > Method detail","text":"Method detail\n\n\n\nBCPair.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBCPair.__str__() -> str\n\n\n\n\n\nstatic BCPair.print_default()\n\nPrint the default values of BCPair object.\n\nExamples\n\n>>> BCPair.print_default()\n\n\n\nstatic BCPair.set_default(source_zonelet: int = None, target_zonelet: int = None, type: BCPairType = None)\n\nSet the default values of the BCPair object.\n\nParameters\n\nsource_zonelet (int, optional) – Id of source zonelet.\n\ntarget_zonelet (int, optional) – Id of target zonelet.\n\ntype (BCPairType, optional) – Option to specify boundary condition pair type."},{"objectID":"Home","href":"api/ansys/meshing/prime/CurvatureSizingParams.html#curvaturesizingparams","title":"CurvatureSizingParams","text":"CurvatureSizingParams\n\n\n\nclass ansys.meshing.prime.CurvatureSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min: float = None, max: float = None, growth_rate: float = None, normal_angle: float = None, use_cad_curvature: bool = None, json_data: dict = None, **kwargs)\n\nSize field using curvature size control computes edge and face sizes using their size and normal angle parameters.\n\nThe curvature size control uses the normal angle parameter as the maximum allowable angle that one element edge may span.\nFor example, a value of 5 implies that a division will be made when the angle change along the curve is 5 degrees.\nHence, a 90 degree arc will be divided into approximately 18 segments.\n\nParameters\n\nmodel (Model) – Model to create a CurvatureSizingParams object with default parameters.\n\nmin (float, optional) – Minimum size used for computing edge and face size using curavture size control.\n\nmax (float, optional) – Maximum size used for computing edge and face size using curavture size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\nnormal_angle (float, optional) – Maximum allowable angle at which one element edge may span.\n\nuse_cad_curvature (bool, optional) – Option to enable use of CAD curvature for computing edge and face size.\n\njson_data (dict, optional) – JSON dictionary to create a CurvatureSizingParams object with provided parameters.\n\nExamples\n\n>>> curvature_sizing_params = prime.CurvatureSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CurvatureSizingParams.html#overview","title":"CurvatureSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nmax\n\nMaximum size used for computing edge and face size using curavture size control.\n\nmin\n\nMinimum size used for computing edge and face size using curavture size control.\n\nnormal_angle\n\nMaximum allowable angle at which one element edge may span.\n\nuse_cad_curvature\n\nOption to enable use of CAD curvature for computing edge and face size.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CurvatureSizingParams object.\n\nset_default\n\nSet the default values of the CurvatureSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CurvatureSizingParams.html#import-detail","title":"CurvatureSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CurvatureSizingParams.html#property-detail","title":"CurvatureSizingParams > Property detail","text":"Property detail\n\n\n\nproperty CurvatureSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty CurvatureSizingParams.max: float\n\nMaximum size used for computing edge and face size using curavture size control.\n\n\n\nproperty CurvatureSizingParams.min: float\n\nMinimum size used for computing edge and face size using curavture size control.\n\n\n\nproperty CurvatureSizingParams.normal_angle: float\n\nMaximum allowable angle at which one element edge may span.\n\n\n\nproperty CurvatureSizingParams.use_cad_curvature: bool\n\nOption to enable use of CAD curvature for computing edge and face size."},{"objectID":"Home","href":"api/ansys/meshing/prime/CurvatureSizingParams.html#method-detail","title":"CurvatureSizingParams > Method detail","text":"Method detail\n\n\n\nCurvatureSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCurvatureSizingParams.__str__() -> str\n\n\n\n\n\nstatic CurvatureSizingParams.print_default()\n\nPrint the default values of CurvatureSizingParams object.\n\nExamples\n\n>>> CurvatureSizingParams.print_default()\n\n\n\nstatic CurvatureSizingParams.set_default(min: float = None, max: float = None, growth_rate: float = None, normal_angle: float = None, use_cad_curvature: bool = None)\n\nSet the default values of the CurvatureSizingParams object.\n\nParameters\n\nmin (float, optional) – Minimum size used for computing edge and face size using curavture size control.\n\nmax (float, optional) – Maximum size used for computing edge and face size using curavture size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\nnormal_angle (float, optional) – Maximum allowable angle at which one element edge may span.\n\nuse_cad_curvature (bool, optional) – Option to enable use of CAD curvature for computing edge and face size."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControlParams.html#volumecontrolparams","title":"VolumeControlParams","text":"VolumeControlParams\n\n\n\nclass ansys.meshing.prime.VolumeControlParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cell_zonelet_type: ansys.meshing.prime.params.primestructs.CellZoneletType = None, skip_hexcore: bool = None, json_data: dict = None, **kwargs)\n\nVolume control parameters are used to define the volume type in the volume control.\n\nParameters\n\nmodel (Model) – Model to create a VolumeControlParams object with default parameters.\n\ncell_zonelet_type (CellZoneletType, optional) – Cell zonelet type is used to define the type of the associated volume.\n\nskip_hexcore (bool, optional) – Check whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeControlParams object with provided parameters.\n\nExamples\n\n>>> volume_control_params = prime.VolumeControlParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControlParams.html#overview","title":"VolumeControlParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncell_zonelet_type\n\nCell zonelet type is used to define the type of the associated volume.\n\nskip_hexcore\n\nCheck whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeControlParams object.\n\nset_default\n\nSet the default values of the VolumeControlParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControlParams.html#import-detail","title":"VolumeControlParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControlParams.html#property-detail","title":"VolumeControlParams > Property detail","text":"Property detail\n\n\n\nproperty VolumeControlParams.cell_zonelet_type: ansys.meshing.prime.params.primestructs.CellZoneletType\n\nCell zonelet type is used to define the type of the associated volume.\n\n\n\nproperty VolumeControlParams.skip_hexcore: bool\n\nCheck whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControlParams.html#method-detail","title":"VolumeControlParams > Method detail","text":"Method detail\n\n\n\nVolumeControlParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeControlParams.__str__() -> str\n\n\n\n\n\nstatic VolumeControlParams.print_default()\n\nPrint the default values of VolumeControlParams object.\n\nExamples\n\n>>> VolumeControlParams.print_default()\n\n\n\nstatic VolumeControlParams.set_default(cell_zonelet_type: ansys.meshing.prime.params.primestructs.CellZoneletType = None, skip_hexcore: bool = None)\n\nSet the default values of the VolumeControlParams object.\n\nParameters\n\ncell_zonelet_type (CellZoneletType, optional) – Cell zonelet type is used to define the type of the associated volume.\n\nskip_hexcore (bool, optional) – Check whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/index.html#the-vtcomposerstructspy-module","title":"The vtcomposerstructs.py module","text":"The vtcomposerstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/index.html#summary","title":"The vtcomposerstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVTComposerParams\n\nParameters to control VTComposer operations.\n\nVTComposerResults\n\nResult struct associated to VTComposer operations.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/index.html#description","title":"The vtcomposerstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/index.html#the-trimmedsplinestructspy-module","title":"The trimmedsplinestructs.py module","text":"The trimmedsplinestructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/index.html#summary","title":"The trimmedsplinestructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nRefineTetMeshParams\n\nParameters for meshing the solid spline.\n\nTetMeshSplineParams\n\nParameters for meshing the solid spline.\n\nTrimmedSolidSplineCutMode\n\nTypes of Cut modes used to generate Cartesian grid representing subdomains of trimmed solid spline.\n\nTrimmedSplineResults\n\nResults of IGA operations.\n\nUniformSolidSplineCreationParams\n\nParameters to define the uniform solid spline.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/index.html#description","title":"The trimmedsplinestructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/AdvancedSurferSetup.html#advancedsurfersetup","title":"AdvancedSurferSetup","text":"AdvancedSurferSetup\n\n\n\nclass ansys.meshing.prime.AdvancedSurferSetup\n\nDefine advanced settings for remeshing operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/AdvancedSurferSetup.html#overview","title":"AdvancedSurferSetup > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\nOption to define no advanced settings.\n\nWRAPPER\n\nOption to define advanced settings for wrapper surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/AdvancedSurferSetup.html#import-detail","title":"AdvancedSurferSetup > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AdvancedSurferSetup.html#attribute-detail","title":"AdvancedSurferSetup > Attribute detail","text":"Attribute detail\n\n\n\nAdvancedSurferSetup.NONE = 0\n\nOption to define no advanced settings.\n\n\n\nAdvancedSurferSetup.WRAPPER = 1\n\nOption to define advanced settings for wrapper surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismParams.html#prismparams","title":"PrismParams","text":"PrismParams\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.PrismParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, stair_step: PrismStairStep = None, no_imprint_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nParameters to control prism mesh generation.\n\nParameters\n\nmodel (Model) – Model to create a PrismParams object with default parameters.\n\nstair_step (PrismStairStep, optional) – Prism stairstep parameters.\n\nno_imprint_zonelets (Iterable[int], optional) – Option to specify zonelets to skip prism imprint.\n\njson_data (dict, optional) – JSON dictionary to create a PrismParams object with provided parameters.\n\nExamples\n\n>>> prism_params = prime.PrismParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismParams.html#overview","title":"PrismParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nno_imprint_zonelets\n\nOption to specify zonelets to skip prism imprint.\n\nstair_step\n\nPrism stairstep parameters.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PrismParams object.\n\nset_default\n\nSet the default values of the PrismParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismParams.html#import-detail","title":"PrismParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismParams.html#property-detail","title":"PrismParams > Property detail","text":"Property detail\n\n\n\nproperty PrismParams.no_imprint_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nOption to specify zonelets to skip prism imprint.\n\n\n\nproperty PrismParams.stair_step: PrismStairStep\n\nPrism stairstep parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismParams.html#method-detail","title":"PrismParams > Method detail","text":"Method detail\n\n\n\nPrismParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismParams.__str__() -> str\n\n\n\n\n\nstatic PrismParams.print_default()\n\nPrint the default values of PrismParams object.\n\nExamples\n\n>>> PrismParams.print_default()\n\n\n\nstatic PrismParams.set_default(stair_step: PrismStairStep = None, no_imprint_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the PrismParams object.\n\nParameters\n\nstair_step (PrismStairStep, optional) – Prism stairstep parameters.\n\nno_imprint_zonelets (Iterable[int], optional) – Option to specify zonelets to skip prism imprint."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/index.html#the-autogen-package","title":"The autogen package","text":"The autogen package\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/index.html#summary","title":"The autogen package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nautomesh\n\nAuto-generated file. DO NOT MODIFY\n\nautomeshstructs\n\nAuto-generated file. DO NOT MODIFY\n\nautoquadmesher\n\nAuto-generated file. DO NOT MODIFY\n\nautoquadmesherstructs\n\nAuto-generated file. DO NOT MODIFY\n\nboundaryfittednurbs\n\nAuto-generated file. DO NOT MODIFY\n\ncollapsetool\n\nAuto-generated file. DO NOT MODIFY\n\ncollapsetoolstructs\n\nAuto-generated file. DO NOT MODIFY\n\ncommonstructs\n\nAuto-generated file. DO NOT MODIFY\n\ncommontypes\n\nAuto-generated file. DO NOT MODIFY\n\nconnect\n\nAuto-generated file. DO NOT MODIFY\n\nconnectstructs\n\nAuto-generated file. DO NOT MODIFY\n\ncontroldata\n\nAuto-generated file. DO NOT MODIFY\n\ncontrolstructs\n\nAuto-generated file. DO NOT MODIFY\n\ncoreobject\n\nAuto-generated file. DO NOT MODIFY\n\ndeletetool\n\nAuto-generated file. DO NOT MODIFY\n\ndeletetoolstructs\n\nAuto-generated file. DO NOT MODIFY\n\nfeatureextraction\n\nAuto-generated file. DO NOT MODIFY\n\nfeatureextractionstructs\n\nAuto-generated file. DO NOT MODIFY\n\nfileio\n\nAuto-generated file. DO NOT MODIFY\n\nfileiostructs\n\nAuto-generated file. DO NOT MODIFY\n\nhextospline\n\nAuto-generated file. DO NOT MODIFY\n\nigastructs\n\nAuto-generated file. DO NOT MODIFY\n\nmaterialpointmanager\n\nAuto-generated file. DO NOT MODIFY\n\nmaterialpointmanagerstructs\n\nAuto-generated file. DO NOT MODIFY\n\nmeshinfo\n\nAuto-generated file. DO NOT MODIFY\n\nmeshinfostructs\n\nAuto-generated file. DO NOT MODIFY\n\nmodel\n\nAuto-generated file. DO NOT MODIFY\n\nmodelstructs\n\nAuto-generated file. DO NOT MODIFY\n\nmorpher\n\nAuto-generated file. DO NOT MODIFY\n\nmorpherbcsstructs\n\nAuto-generated file. DO NOT MODIFY\n\nmorpherstructs\n\nAuto-generated file. DO NOT MODIFY\n\nmultizonecontrol\n\nAuto-generated file. DO NOT MODIFY\n\npart\n\nAuto-generated file. DO NOT MODIFY\n\npartstructs\n\nAuto-generated file. DO NOT MODIFY\n\nperiodiccontrol\n\nAuto-generated file. DO NOT MODIFY\n\nperiodiccontrolstructs\n\nAuto-generated file. DO NOT MODIFY\n\nprimeconfig\n\nAuto-generated file. DO NOT MODIFY\n\nprismcontrol\n\nAuto-generated file. DO NOT MODIFY\n\nprismcontrolstructs\n\nAuto-generated file. DO NOT MODIFY\n\nquadtospline\n\nAuto-generated file. DO NOT MODIFY\n\nscaffolder\n\nAuto-generated file. DO NOT MODIFY\n\nscaffolderstructs\n\nAuto-generated file. DO NOT MODIFY\n\nshellblcontrol\n\nAuto-generated file. DO NOT MODIFY\n\nshellblcontrolstructs\n\nAuto-generated file. DO NOT MODIFY\n\nsizecontrol\n\nAuto-generated file. DO NOT MODIFY\n\nsizecontrolstructs\n\nAuto-generated file. DO NOT MODIFY\n\nsizefield\n\nAuto-generated file. DO NOT MODIFY\n\nsizefieldstructs\n\nAuto-generated file. DO NOT MODIFY\n\nsplittoolstructs\n\nAuto-generated file. DO NOT MODIFY\n\nsurfacesearch\n\nAuto-generated file. DO NOT MODIFY\n\nsurfacesearchstructs\n\nAuto-generated file. DO NOT MODIFY\n\nsurfaceutilities\n\nAuto-generated file. DO NOT MODIFY\n\nsurfaceutilitystructs\n\nAuto-generated file. DO NOT MODIFY\n\nsurfer\n\nAuto-generated file. DO NOT MODIFY\n\nsurferstructs\n\nAuto-generated file. DO NOT MODIFY\n\nthinvolumecontrol\n\nAuto-generated file. DO NOT MODIFY\n\nthinvolumecontrolstructs\n\nAuto-generated file. DO NOT MODIFY\n\ntopodata\n\nAuto-generated file. DO NOT MODIFY\n\ntopodatastructs\n\nAuto-generated file. DO NOT MODIFY\n\ntoposearchstructs\n\nAuto-generated file. DO NOT MODIFY\n\ntopoutilities\n\nAuto-generated file. DO NOT MODIFY\n\ntopoutilitystructs\n\nAuto-generated file. DO NOT MODIFY\n\ntransform\n\nAuto-generated file. DO NOT MODIFY\n\ntransformstructs\n\nAuto-generated file. DO NOT MODIFY\n\ntrimmedspline\n\nAuto-generated file. DO NOT MODIFY\n\ntrimmedsplinestructs\n\nAuto-generated file. DO NOT MODIFY\n\nvolumecontrol\n\nAuto-generated file. DO NOT MODIFY\n\nvolumecontrolstructs\n\nAuto-generated file. DO NOT MODIFY\n\nvolumemeshtool\n\nAuto-generated file. DO NOT MODIFY\n\nvolumemeshtoolstructs\n\nAuto-generated file. DO NOT MODIFY\n\nvolumesearch\n\nAuto-generated file. DO NOT MODIFY\n\nvolumesearchstructs\n\nAuto-generated file. DO NOT MODIFY\n\nvolumesweeper\n\nAuto-generated file. DO NOT MODIFY\n\nvolumesweeperstructs\n\nAuto-generated file. DO NOT MODIFY\n\nvtcomposer\n\nAuto-generated file. DO NOT MODIFY\n\nvtcomposerstructs\n\nAuto-generated file. DO NOT MODIFY\n\nwrapper\n\nAuto-generated file. DO NOT MODIFY\n\nwrappercontrol\n\nAuto-generated file. DO NOT MODIFY\n\nwrapperstructs\n\nAuto-generated file. DO NOT MODIFY\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/index.html#description","title":"The autogen package > Description","text":"Description\n\nAutogenerated module."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/index.html#the-commonstructspy-module","title":"The commonstructs.py module","text":"The commonstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/index.html#summary","title":"The commonstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCopyZoneletsParams\n\nParameters to copy zonelets.\n\nCopyZoneletsResults\n\nResult structure associated with copying zonelets.\n\nDeleteResults\n\nResults associated with the deletion of items.\n\nPartZonelets\n\nA structure containing some or all face zonelet ids available in a part.\n\nSetNameResults\n\nResults associated with the set name.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/index.html#description","title":"The commonstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshResults.html#deletemeshresults","title":"DeleteMeshResults","text":"DeleteMeshResults\n\n\n\nclass ansys.meshing.prime.autogen.topodatastructs.DeleteMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with delete mesh on topofaces.\n\nParameters\n\nmodel (Model) – Model to create a DeleteMeshResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteMeshResults object with provided parameters.\n\nExamples\n\n>>> delete_mesh_results = prime.DeleteMeshResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshResults.html#overview","title":"DeleteMeshResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteMeshResults object.\n\nset_default\n\nSet the default values of the DeleteMeshResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshResults.html#import-detail","title":"DeleteMeshResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshResults.html#property-detail","title":"DeleteMeshResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteMeshResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshResults.html#method-detail","title":"DeleteMeshResults > Method detail","text":"Method detail\n\n\n\nDeleteMeshResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteMeshResults.__str__() -> str\n\n\n\n\n\nstatic DeleteMeshResults.print_default()\n\nPrint the default values of DeleteMeshResults object.\n\nExamples\n\n>>> DeleteMeshResults.print_default()\n\n\n\nstatic DeleteMeshResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteMeshResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerParams.html#meshstackerparams","title":"MeshStackerParams","text":"MeshStackerParams\n\n\n\nclass ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, origin: ansys.meshing.prime.params.primestructs.Iterable[float] = None, direction: ansys.meshing.prime.params.primestructs.Iterable[float] = None, lateral_defeature_tolerance: float = None, stacking_defeature_tolerance: float = None, max_offset_size: float = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, seed_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, delete_base: bool = None, json_data: dict = None, **kwargs)\n\nInput parameters associated with the mesh stacker operations.\n\nParameters\n\nmodel (Model) – Model to create a MeshStackerParams object with default parameters.\n\norigin (Iterable[float], optional) – Origin coordinate list of stacker.\n\ndirection (Iterable[float], optional) – Direction vector of stacker.\n\nlateral_defeature_tolerance (float, optional) – Absolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nstacking_defeature_tolerance (float, optional) – Absolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nmax_offset_size (float, optional) – Maximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\nsize_control_ids (Iterable[int], optional) – List of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\nseed_faces (Iterable[int], optional) – List of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.This is a beta parameter. The behavior and name may change in the future.\n\ndelete_base (bool, optional) – Option to delete base face at the end of stacking. The default is false.\n\njson_data (dict, optional) – JSON dictionary to create a MeshStackerParams object with provided parameters.\n\nExamples\n\n>>> mesh_stacker_params = prime.MeshStackerParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerParams.html#overview","title":"MeshStackerParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_base\n\nOption to delete base face at the end of stacking. The default is false.\n\ndirection\n\nDirection vector of stacker.\n\nlateral_defeature_tolerance\n\nAbsolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nmax_offset_size\n\nMaximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\norigin\n\nOrigin coordinate list of stacker.\n\nseed_faces\n\nList of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\nsize_control_ids\n\nList of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\nstacking_defeature_tolerance\n\nAbsolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MeshStackerParams object.\n\nset_default\n\nSet the default values of the MeshStackerParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerParams.html#import-detail","title":"MeshStackerParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerParams.html#property-detail","title":"MeshStackerParams > Property detail","text":"Property detail\n\n\n\nproperty MeshStackerParams.delete_base: bool\n\nOption to delete base face at the end of stacking. The default is false.\n\n\n\nproperty MeshStackerParams.direction: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nDirection vector of stacker.\n\n\n\nproperty MeshStackerParams.lateral_defeature_tolerance: float\n\nAbsolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\n\n\nproperty MeshStackerParams.max_offset_size: float\n\nMaximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\n\n\nproperty MeshStackerParams.origin: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nOrigin coordinate list of stacker.\n\n\n\nproperty MeshStackerParams.seed_faces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MeshStackerParams.size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\n\n\nproperty MeshStackerParams.stacking_defeature_tolerance: float\n\nAbsolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/MeshStackerParams.html#method-detail","title":"MeshStackerParams > Method detail","text":"Method detail\n\n\n\nMeshStackerParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMeshStackerParams.__str__() -> str\n\n\n\n\n\nstatic MeshStackerParams.print_default()\n\nPrint the default values of MeshStackerParams object.\n\nExamples\n\n>>> MeshStackerParams.print_default()\n\n\n\nstatic MeshStackerParams.set_default(origin: ansys.meshing.prime.params.primestructs.Iterable[float] = None, direction: ansys.meshing.prime.params.primestructs.Iterable[float] = None, lateral_defeature_tolerance: float = None, stacking_defeature_tolerance: float = None, max_offset_size: float = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, seed_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, delete_base: bool = None)\n\nSet the default values of the MeshStackerParams object.\n\nParameters\n\norigin (Iterable[float], optional) – Origin coordinate list of stacker.\n\ndirection (Iterable[float], optional) – Direction vector of stacker.\n\nlateral_defeature_tolerance (float, optional) – Absolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nstacking_defeature_tolerance (float, optional) – Absolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nmax_offset_size (float, optional) – Maximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\nsize_control_ids (Iterable[int], optional) – List of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\nseed_faces (Iterable[int], optional) – List of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\ndelete_base (bool, optional) – Option to delete base face at the end of stacking. The default is false."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/LabelToZoneMethod.html#labeltozonemethod","title":"LabelToZoneMethod","text":"LabelToZoneMethod\n\n\n\nclass ansys.meshing.prime.lucid.LabelToZoneMethod\n\nProvides for creating zones from labels."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/LabelToZoneMethod.html#overview","title":"LabelToZoneMethod > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nSIMPLE\n\nSimple method for creating zones from labels."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/LabelToZoneMethod.html#import-detail","title":"LabelToZoneMethod > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/LabelToZoneMethod.html#attribute-detail","title":"LabelToZoneMethod > Attribute detail","text":"Attribute detail\n\n\n\nLabelToZoneMethod.SIMPLE = 0\n\nSimple method for creating zones from labels.\n\nEntities are queried using labels, and zones are created."},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlPointSelection.html#controlpointselection","title":"ControlPointSelection","text":"ControlPointSelection\n\n\n\nclass ansys.meshing.prime.ControlPointSelection\n\nControl point selection type."},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlPointSelection.html#overview","title":"ControlPointSelection > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nMANUAL\n\nManual Spline control point selection.\n\nPROGRAMCONTROLLED\n\nProgram controlled spline control point selection."},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlPointSelection.html#import-detail","title":"ControlPointSelection > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlPointSelection.html#attribute-detail","title":"ControlPointSelection > Attribute detail","text":"Attribute detail\n\n\n\nControlPointSelection.MANUAL = 0\n\nManual Spline control point selection.\n\n\n\nControlPointSelection.PROGRAMCONTROLLED = 1\n\nProgram controlled spline control point selection."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateZoneResults.html#createzoneresults","title":"CreateZoneResults","text":"CreateZoneResults\n\n\n\nclass ansys.meshing.prime.CreateZoneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, zone_id: int = None, assigned_name: str = None, json_data: dict = None, **kwargs)\n\nResults associated with the create zone.\n\nParameters\n\nmodel (Model) – Model to create a CreateZoneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the create zone operation.\n\nzone_id (int, optional) – Id of newly created zone.\n\nassigned_name (str, optional) – Assigned name of newly created zone.\n\njson_data (dict, optional) – JSON dictionary to create a CreateZoneResults object with provided parameters.\n\nExamples\n\n>>> create_zone_results = prime.CreateZoneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateZoneResults.html#overview","title":"CreateZoneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_name\n\nAssigned name of newly created zone.\n\nerror_code\n\nError code associated with the create zone operation.\n\nzone_id\n\nId of newly created zone.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateZoneResults object.\n\nset_default\n\nSet the default values of the CreateZoneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateZoneResults.html#import-detail","title":"CreateZoneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateZoneResults.html#property-detail","title":"CreateZoneResults > Property detail","text":"Property detail\n\n\n\nproperty CreateZoneResults.assigned_name: str\n\nAssigned name of newly created zone.\n\n\n\nproperty CreateZoneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the create zone operation.\n\n\n\nproperty CreateZoneResults.zone_id: int\n\nId of newly created zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateZoneResults.html#method-detail","title":"CreateZoneResults > Method detail","text":"Method detail\n\n\n\nCreateZoneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateZoneResults.__str__() -> str\n\n\n\n\n\nstatic CreateZoneResults.print_default()\n\nPrint the default values of CreateZoneResults object.\n\nExamples\n\n>>> CreateZoneResults.print_default()\n\n\n\nstatic CreateZoneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, zone_id: int = None, assigned_name: str = None)\n\nSet the default values of the CreateZoneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the create zone operation.\n\nzone_id (int, optional) – Id of newly created zone.\n\nassigned_name (str, optional) – Assigned name of newly created zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/fileio/FileIO.html#fileio","title":"FileIO","text":"FileIO\n\n\n\nclass ansys.meshing.prime.core.fileio.FileIO(model: ansys.meshing.prime.core.model.Model)\n\nHandles reading or writing files from the disk.\n\nParameters\n\nmodel (Model) – Server model to create FileIO object."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/fileio/FileIO.html#overview","title":"FileIO > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nexport_boundary_fitted_spline_kfile\n\nExport the IGA LS-DYNA keyword file for a boundary fitted spline.\n\nexport_fluent_case\n\nExport a Fluent case (CAS) file.\n\nexport_fluent_meshing_mesh\n\nExport a Fluent Meshing mesh (MSH) file.\n\nexport_lsdyna_iga_keyword_file\n\nExport IGA LS-DYNA Keyword file for solid, surface splines.\n\nexport_lsdyna_keyword_file\n\nExport FEA LS-DYNA Keyword file for solid, surface mesh, or both.\n\nexport_mapdl_cdb\n\nExport an MAPDL CDB file.\n\nexport_stl\n\nExport an STL file.\n\nget_abaqus_simulation_data\n\nGets simulation document generated by Abaqus import for a given part.\n\nimport_abaqus_inp\n\n(BETA FEATURE) Import a Abaqus file.\n\nimport_cad\n\nImport a CAD file from disk.\n\nimport_fluent_case\n\nImport a Fluent case (CAS) file from disk.\n\nimport_fluent_meshing_meshes\n\nImport Fluent Meshing’s mesh (MS and MSH.GZ) files from disk.\n\nimport_fluent_meshing_size_field\n\nImport a Fluent Meshing size field (SF and SF.GZ) file from disk.\n\nimport_mapdl_cdb\n\nImport an MAPDL CDB file.\n\ninitialize_cdb_export_params\n\nInitialize specific CDB export parameters based on the given version.\n\nread_pmdat\n\nRead a PyPrimeMesh data (PMDAT) file.\n\nread_size_field\n\nRead a PyPrimeMesh size field (PSF and PSF.GZ) file from disk.\n\nwrite_pmdat\n\nWrite a PyPrimeMesh data (PMDAT) file.\n\nwrite_size_field\n\nWrite a PyPrimeMesh size field (PSF) file to a file on disk.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for FileIO.\n\n__exit__\n\nExit context for FileIO.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/fileio/FileIO.html#import-detail","title":"FileIO > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/fileio/FileIO.html#attribute-detail","title":"FileIO > Attribute detail","text":"Attribute detail\n\n\n\nFileIO.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/fileio/FileIO.html#method-detail","title":"FileIO > Method detail","text":"Method detail\n\n\n\nFileIO.__enter__()\n\nEnter context for FileIO.\n\n\n\nFileIO.__exit__(type, value, traceback)\n\nExit context for FileIO.\n\n\n\nFileIO.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileIO.export_boundary_fitted_spline_kfile(file_name: str, export_params: ansys.meshing.prime.autogen.fileiostructs.ExportBoundaryFittedSplineParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nExport the IGA LS-DYNA keyword file for a boundary fitted spline.\n\nParameters\n\nfile_name (str) – Name of the keyword file.\n\nexport_params (ExportBoundaryFittedSplineParams) – Parameters for exporting the keyword file.\n\nReturns\n\nResults from exporting the keyword file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.export_boundary_fitted_spline_k_file(\n                file_name,\n                ExportBoundaryFittedSplineParams(model=model))\n\n\n\nFileIO.export_fluent_case(file_name: str, export_fluent_case_params: ansys.meshing.prime.autogen.fileiostructs.ExportFluentCaseParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nExport a Fluent case (CAS) file.\n\nParameters\n\nfile_name (str) – Path to the case file on disk.\n\nexport_fluent_case_params (ExportFluentCaseParams) – Parameters for exporting the case file.\n\nReturns\n\nResults from exporting the case file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> file_io = FileIO(model=model)\n>>> results = file_io.export_fluent_case(\n                \"/tmp/fluent.cas\",\n                prime.ExportFluentCaseParams(model=model))\n\n\n\nFileIO.export_fluent_meshing_mesh(file_name: str, export_fluent_mesh_params: ansys.meshing.prime.autogen.fileiostructs.ExportFluentMeshingMeshParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nExport a Fluent Meshing mesh (MSH) file.\n\nParameters\n\nfile_name (str) – Path to the mesh file on disk.\n\nexport_fluent_mesh_params (ExportFluentMeshingMeshParams) – Parameters for exporting the mesh file.\n\nReturns\n\nResults from exporting the mesh file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.export_fluent_meshing_mesh(\n                \"/tmp/fluent_meshing.msh\",\n                ExportFluentMeshingMeshParams(model=model))\n\n\n\nFileIO.export_lsdyna_iga_keyword_file(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaIgaKeywordFileParams) -> ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaIGAResults\n\nExport IGA LS-DYNA Keyword file for solid, surface splines.\n\nParameters\n\nfile_name (str) – Name of the file.\n\nparams (ExportLSDynaIgaKeywordFileParams) – Parameters for IGA LS-DYNA Keyword file export.\n\nReturns\n\nReturns ExportLSDynaIGAResults.\n\nReturn type\n\nExportLSDynaIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.export_lsdyna_iga_keyword_file(\n    file_name, ExportLSDynaIgaKeywordFileParams(model=model)\n)\n\n\n\nFileIO.export_lsdyna_keyword_file(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaKeywordFileParams) -> ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaResults\n\nExport FEA LS-DYNA Keyword file for solid, surface mesh, or both.\n\nParameters\n\nfile_name (str) – Name of the file.\n\nparams (ExportLSDynaKeywordFileParams) – Parameters for FEA LS-DYNA Keyword file export.\n\nReturns\n\nReturns ExportLSDynaResults.\n\nReturn type\n\nExportLSDynaResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.export_lsdyna_keyword_file(\n    file_name, ExportLSDynaKeywordFileParams(model=model)\n)\n\n\n\nFileIO.export_mapdl_cdb(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbParams) -> ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbResults\n\nExport an MAPDL CDB file.\n\nParameters\n\nfile_name (str) – Path to the CDB file on disk.\n\nparams (ExportMapdlCdbParams) – Parameters for exporting the CDB file.\n\nReturns\n\nResults from exporting the CDB file.\n\nReturn type\n\nExportMapdlCdbResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams(model=model)\n>>> results = file_io.export_mapdl_cdb(\"/tmp/file.cdb\", params)\n\n\n\nFileIO.export_stl(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportSTLParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nExport an STL file.\n\nParameters\n\nfile_name (str) – Path to the STL file on disk.\n\nparams (ExportSTLParams) – Parameters for exporting the STL file.\n\nReturns\n\nResults from exporting the STL file.\n\nReturn type\n\nFileWriteResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> model = prime.launch_prime().model\n>>> fileio = prime.FileIO(model=model)\n>>> out_file_path = r\"/tmp/output.stl\"\n>>> part_ids = [part.id for part in model.parts]\n>>> export_stl_params=prime.ExportSTLParams(model=model,part_ids=part_ids)\n>>> results = fileio.export_stl(out_file_path,export_stl_params)\n\n\n\nFileIO.get_abaqus_simulation_data(partId: int) -> str\n\nGets simulation document generated by Abaqus import for a given part.\n\nThis method will return the JSON Simulation Document for a part if the part exists. Otherwise,\nit returns an empty string.\n\nParameters\n\npartId (int) – Part Id.\n\nReturns\n\nReturns the string containing a JSON document for simulation data.\n\nReturn type\n\nstr\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> import json\n>>> simdata = json.loads(file_io.get_abaqus_simulation_data(2)\n\n\n\nFileIO.import_abaqus_inp(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ImportAbaqusParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportAbaqusResults\n\n(BETA FEATURE) Import a Abaqus file.\n\nThis is a beta feature to import abaqus files as dead mesh and also store\nsimulation-specific information into Prime in the form of JSON documents.\n\nParameters\n\nfile_name (str) – Name of file to import.\n\nparams (ImportAbaqusParams) – Parameters to specify options during import.\n\nReturns\n\nReturns the results of the abaqus database import.\n\nReturn type\n\nImportAbaqusResults\n\nExamples\n\n>>> results = file_io.import_abaqus(r\"/tmp/file.inp\")\n\n\n\nFileIO.import_cad(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ImportCadParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportCadResults\n\nImport a CAD file from disk.\n\nSupported CAD file formats on Windows are:\n\n*.scdoc *.scdocx *.dsco *.fmd *.agdb *.pmdb *.meshdat *.mechdat *.dsdb *.cmdb\n*.sat *.sab *.dwg *.dxf *.model *.exp *.CATPart *.CATProduct *.cgr *.3dxml\n*.prt* *.asm* *.iges *.igs *.ipt *.iam *.jt *.prt *.x_t *.x_b *.par *.psm\n*.asm *.sldprt *.sldasm *.step *.stp *.stl *.plmxml *.tgf\n\nSupported CAD file formats on Linux are:\n\n*.fmd *.agdb *.pmdb *.meshdat *.mechdat *.dsdb *.cmdb *.sat *.sab\n*.CATPart *.CATProduct *.iges *.igs *.jt *.x_t *.x_b *.step *.stp\n*.stl *.plmxml *.tgf\n\nRefer Reading and writing files section in User guide for a\ncomprehensive list of supported formats.\n\nParameters\n\nfile_name (str) – Path to the CAD file on disk.\n\nparams (ImportCadParams) – Parameters for importing the CAD file.\n\nReturns\n\nResults from importing the CAD file.\n\nReturn type\n\nImportCadResults\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> prime_client = prime.launch_prime()\n>>> model = prime_client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportCadParams(model=model)\n>>> results = file_io.import_cad(\"/tmp/my_cad.x_t\", params=params)\n\n\n\nFileIO.import_fluent_case(file_name: str, import_fluent_case_params: ansys.meshing.prime.autogen.fileiostructs.ImportFluentCaseParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportFluentCaseResults\n\nImport a Fluent case (CAS) file from disk.\n\nParameters\n\nfile_name (str) – Path to the case file on disk.\n\nimport_fluent_case_params (ImportFluentCaseParams) – Parameters for importing the case file.\n\nReturns\n\nResults from importing the case file.\n\nReturn type\n\nImportFluentCaseResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportFluentCaseParams(model=model)\n>>> results = file_io.import_fluent_case(\"/tmp/fluent.cas\", params)\n\n\n\nFileIO.import_fluent_meshing_meshes(file_names: List[str], import_fluent_meshing_mesh_params: ansys.meshing.prime.autogen.fileiostructs.ImportFluentMeshingMeshParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportFluentMeshingMeshResults\n\nImport Fluent Meshing’s mesh (MS and MSH.GZ) files from disk.\n\nParameters\n\nfile_names (List[str]) – List of full path for the mesh files to import.\n\nimport_fluent_meshing_mesh_params (ImportFluentMeshingMeshParams) – Parameters for importing the mesh files.\n\nReturns\n\nResults from importing the mesh files.\n\nReturn type\n\nImportFluentMeshingMeshResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportFluentMeshingMeshParams(model=model)\n>>> results = file_io.import_fluent_meshing_meshes(\n                [\"/tmp/mesh.msh\", \"/tmp/mesh1.msh\"],\n                params)\n\n\n\nFileIO.import_fluent_meshing_size_field(file_name: str) -> ansys.meshing.prime.autogen.fileiostructs.SizeFieldFileReadResults\n\nImport a Fluent Meshing size field (SF and SF.GZ) file from disk.\n\nParameters\n\nfile_name (str) – Path to the size field file on disk.\n\nReturns\n\nResults from reading the size field file.\n\nReturn type\n\nSizeFieldFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> results = file_io.import_fluent_meshing_size_field(\"/tmp/my_sizefield.sf\")\n\n\n\nFileIO.import_mapdl_cdb(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ImportMapdlCdbParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportMapdlCdbResults\n\nImport an MAPDL CDB file.\n\nParameters\n\nfile_name (str) – Path to the CDB file on disk.\n\nparams (ImportMapdlCdbParams) – Parameters for importing the CDB file.\n\nReturns\n\nResults from importing the CDB file.\n\nReturn type\n\nImportMapdlCdbResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> # connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportMapdlCdbParams(model=model)\n>>> results = file_io.import_mapdl_cdb(\"/tmp/file.cdb\", params)\n\n\n\nFileIO.initialize_cdb_export_params(params: ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbParams, major_version: int, minor_version: int) -> ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbParams\n\nInitialize specific CDB export parameters based on the given version.\n\nThis function sets the separate_blocks_format_type, export_fasteners_as_swgen and\nexport_rigid_bodies_as_rbgen parameters of the provided ExportMapdlCdbParams\nobject based on the given major and minor version numbers.\nOther parameters remain unchanged.\n\nParameters\n\nparams (ExportMapdlCdbParams) – The CDB export parameters object to be modified.\n\nmajor_version (int) – The major version number.\n\nminor_version (int) – The minor version number.\n\nReturns\n\nThe modified CDB export parameters object.\n\nReturn type\n\nExportMapdlCdbParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nThe version is formed as “<major_version>r<minor_version>”, e.g., “24r1”, “25r2”.\nIf the version is greater than or equal to “25r1”, write_separate_blocks is set to True\nwith COMPACT format, and export_fasteners_as_swgen and export_rigid_bodies_as_rbgen\nparameters are set to True. Otherwise, they are set to False.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams()\n>>> params = file_io.initialize_cdb_export_params(params, 24, 1)\n>>> params.write_separate_blocks\nFalse\n>>> params.export_fasteners_as_swgen\nFalse\n>>> params.export_rigid_bodies_as_swgen\nFalse\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams()\n>>> params = file_io.initialize_cdb_export_params(params, 25, 2)\n>>> params.write_separate_blocks\nTrue\n>>> params.separate_blocks_format_type\nSeparateBlocksFormatType.COMPACT\n>>> params.export_fasteners_as_swgen\nTrue\n>>> params.export_rigid_bodies_as_swgen\nTrue\n\n\n\nFileIO.read_pmdat(file_name: str, file_read_params: ansys.meshing.prime.autogen.fileiostructs.FileReadParams) -> ansys.meshing.prime.autogen.fileiostructs.FileReadResults\n\nRead a PyPrimeMesh data (PMDAT) file.\n\nParameters\n\nfile_name (str) – Path to the data file on disk.\n\nfile_read_params (FileReadParams) – Parameters for reading the data file.\n\nReturns\n\nResults from reading the data file.\n\nReturn type\n\nFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> file_read_params = prime.FileReadParams(model=model)\n>>> results = file_io.read_pmdat(\"/tmp/file.pmdat\", file_read_params)\n\n\n\nFileIO.read_size_field(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ReadSizeFieldParams) -> ansys.meshing.prime.autogen.fileiostructs.SizeFieldFileReadResults\n\nRead a PyPrimeMesh size field (PSF and PSF.GZ) file from disk.\n\nParameters\n\nfile_name (str) – Path to the size field file on disk.\n\nparams (ReadSizeFieldParams) – Parameters for reading size field file.\n\nReturns\n\nResults from reading the size field file.\n\nReturn type\n\nSizeFieldFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ReadSizeFieldParams(model=model)\n>>> results = file_io.read_size_field(\"/tmp/my_prime_sizefield.psf\", params)\n\n\n\nFileIO.write_pmdat(file_name: str, file_write_params: ansys.meshing.prime.autogen.fileiostructs.FileWriteParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nWrite a PyPrimeMesh data (PMDAT) file.\n\nParameters\n\nfile_name (str) – Path for writing the data file on disk.\n\nfile_write_params (FileWriteParams) – Parameters for writing the data file.\n\nReturns\n\nResults from writing the data file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.write_pmdat(\"/tmp/prime_mesh_data.pmdat\",\n                                  prime.FileWriteParams(model=model))\n\n\n\nFileIO.write_size_field(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.WriteSizeFieldParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nWrite a PyPrimeMesh size field (PSF) file to a file on disk.\n\nParameters\n\nfile_name (str) – Path to the size field file on disk.\n\nparams (WriteSizeFieldParams) – Parameters for writing the size field file.\n\nReturns\n\nResults from writing the size field file.\n\nReturn type\n\nFileWriteResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.WriteSizeFieldParams(model=model)\n>>> results = file_io.write_size_field(\"/tmp/my_prime_sizefield.psf\", params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/LSDynaAnalysisType.html#lsdynaanalysistype","title":"LSDynaAnalysisType","text":"LSDynaAnalysisType\n\n\n\nclass ansys.meshing.prime.LSDynaAnalysisType\n\nProvides the LS-DYNA analysis type."},{"objectID":"Home","href":"api/ansys/meshing/prime/LSDynaAnalysisType.html#overview","title":"LSDynaAnalysisType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDOORSLAM\n\nOption to select doorslam as LS-DYNA analysis type.\n\nSEATBELT\n\nOption to select Seatbelt as LS-DYNA analysis type."},{"objectID":"Home","href":"api/ansys/meshing/prime/LSDynaAnalysisType.html#import-detail","title":"LSDynaAnalysisType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/LSDynaAnalysisType.html#attribute-detail","title":"LSDynaAnalysisType > Attribute detail","text":"Attribute detail\n\n\n\nLSDynaAnalysisType.DOORSLAM = 0\n\nOption to select doorslam as LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nLSDynaAnalysisType.SEATBELT = 1\n\nOption to select Seatbelt as LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripParams.html#searchbythinstripparams","title":"SearchByThinStripParams","text":"SearchByThinStripParams\n\n\n\nclass ansys.meshing.prime.SearchByThinStripParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, strip_height_limit: float = None, quality_limit: float = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType = None, feature_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters to search by thin strip of face elements.\n\nParameters\n\nmodel (Model) – Model to create a SearchByThinStripParams object with default parameters.\n\nstrip_height_limit (float, optional) – Absolute height limit to ignore strips with height more than provided limit.\n\nquality_limit (float, optional) – Quality limit used for search strip of face elements.\n\nface_quality_measure (FaceQualityMeasure, optional) – Quality measure used for search strip of face elements.\n\nfeature_type (SurfaceFeatureType, optional) – Used to identify thin strip of face elements based on the provided feature type.\n\nfeature_angle (float, optional) – Angle used to identify angle based features.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByThinStripParams object with provided parameters.\n\nExamples\n\n>>> search_by_thin_strip_params = prime.SearchByThinStripParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripParams.html#overview","title":"SearchByThinStripParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_quality_measure\n\nQuality measure used for search strip of face elements.\n\nfeature_angle\n\nAngle used to identify angle based features.\n\nfeature_type\n\nUsed to identify thin strip of face elements based on the provided feature type.\n\nquality_limit\n\nQuality limit used for search strip of face elements.\n\nstrip_height_limit\n\nAbsolute height limit to ignore strips with height more than provided limit.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByThinStripParams object.\n\nset_default\n\nSet the default values of the SearchByThinStripParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripParams.html#import-detail","title":"SearchByThinStripParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripParams.html#property-detail","title":"SearchByThinStripParams > Property detail","text":"Property detail\n\n\n\nproperty SearchByThinStripParams.face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure\n\nQuality measure used for search strip of face elements.\n\n\n\nproperty SearchByThinStripParams.feature_angle: float\n\nAngle used to identify angle based features.\n\n\n\nproperty SearchByThinStripParams.feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType\n\nUsed to identify thin strip of face elements based on the provided feature type.\n\n\n\nproperty SearchByThinStripParams.quality_limit: float\n\nQuality limit used for search strip of face elements.\n\n\n\nproperty SearchByThinStripParams.strip_height_limit: float\n\nAbsolute height limit to ignore strips with height more than provided limit."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripParams.html#method-detail","title":"SearchByThinStripParams > Method detail","text":"Method detail\n\n\n\nSearchByThinStripParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByThinStripParams.__str__() -> str\n\n\n\n\n\nstatic SearchByThinStripParams.print_default()\n\nPrint the default values of SearchByThinStripParams object.\n\nExamples\n\n>>> SearchByThinStripParams.print_default()\n\n\n\nstatic SearchByThinStripParams.set_default(strip_height_limit: float = None, quality_limit: float = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType = None, feature_angle: float = None)\n\nSet the default values of the SearchByThinStripParams object.\n\nParameters\n\nstrip_height_limit (float, optional) – Absolute height limit to ignore strips with height more than provided limit.\n\nquality_limit (float, optional) – Quality limit used for search strip of face elements.\n\nface_quality_measure (FaceQualityMeasure, optional) – Quality measure used for search strip of face elements.\n\nfeature_type (SurfaceFeatureType, optional) – Used to identify thin strip of face elements based on the provided feature type.\n\nfeature_angle (float, optional) – Angle used to identify angle based features."},{"objectID":"Home","href":"api/ansys/meshing/prime/TetMeshSplineParams.html#tetmeshsplineparams","title":"TetMeshSplineParams","text":"TetMeshSplineParams\n\n\n\nclass ansys.meshing.prime.TetMeshSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_angle: float = None, mode: TrimmedSolidSplineCutMode = None, decimation_factor: float = None, json_data: dict = None, **kwargs)\n\nParameters for meshing the solid spline.\n\nParameters\n\nmodel (Model) – Model to create a TetMeshSplineParams object with default parameters.\n\nfeature_angle (float, optional) – Feature angle used in meshing of the solid spline.This is a beta parameter. The behavior and name may change in the future.\n\nmode (TrimmedSolidSplineCutMode, optional) – Cut mode to specify rule for mesh cell selection in the volume mesh.This is a beta parameter. The behavior and name may change in the future.\n\ndecimation_factor (float, optional) – Decimation factor used in meshing of the solid spline.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a TetMeshSplineParams object with provided parameters.\n\nExamples\n\n>>> tet_mesh_spline_params = prime.TetMeshSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TetMeshSplineParams.html#overview","title":"TetMeshSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndecimation_factor\n\nDecimation factor used in meshing of the solid spline.\n\nfeature_angle\n\nFeature angle used in meshing of the solid spline.\n\nmode\n\nCut mode to specify rule for mesh cell selection in the volume mesh.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TetMeshSplineParams object.\n\nset_default\n\nSet the default values of the TetMeshSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TetMeshSplineParams.html#import-detail","title":"TetMeshSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TetMeshSplineParams.html#property-detail","title":"TetMeshSplineParams > Property detail","text":"Property detail\n\n\n\nproperty TetMeshSplineParams.decimation_factor: float\n\nDecimation factor used in meshing of the solid spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty TetMeshSplineParams.feature_angle: float\n\nFeature angle used in meshing of the solid spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty TetMeshSplineParams.mode: TrimmedSolidSplineCutMode\n\nCut mode to specify rule for mesh cell selection in the volume mesh.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/TetMeshSplineParams.html#method-detail","title":"TetMeshSplineParams > Method detail","text":"Method detail\n\n\n\nTetMeshSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTetMeshSplineParams.__str__() -> str\n\n\n\n\n\nstatic TetMeshSplineParams.print_default()\n\nPrint the default values of TetMeshSplineParams object.\n\nExamples\n\n>>> TetMeshSplineParams.print_default()\n\n\n\nstatic TetMeshSplineParams.set_default(feature_angle: float = None, mode: TrimmedSolidSplineCutMode = None, decimation_factor: float = None)\n\nSet the default values of the TetMeshSplineParams object.\n\nParameters\n\nfeature_angle (float, optional) – Feature angle used in meshing of the solid spline.\n\nmode (TrimmedSolidSplineCutMode, optional) – Cut mode to specify rule for mesh cell selection in the volume mesh.\n\ndecimation_factor (float, optional) – Decimation factor used in meshing of the solid spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsParams.html#subtractzoneletsparams","title":"SubtractZoneletsParams","text":"SubtractZoneletsParams\n\n\n\nclass ansys.meshing.prime.SubtractZoneletsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, retain_cutter: bool = None, extract_edges: bool = None, trace_edges: bool = None, json_data: dict = None, **kwargs)\n\nParameters to use when subtracting zonelets.\n\nParameters\n\nmodel (Model) – Model to create a SubtractZoneletsParams object with default parameters.\n\nretain_cutter (bool, optional) – Retain the zonelets used for removal.\n\nextract_edges (bool, optional) – Extract edges of intersection during subtract.\n\ntrace_edges (bool, optional) – Trace edges of intersection on target. Only works if extractEdges is true.\n\njson_data (dict, optional) – JSON dictionary to create a SubtractZoneletsParams object with provided parameters.\n\nExamples\n\n>>> subtract_zonelets_params = prime.SubtractZoneletsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsParams.html#overview","title":"SubtractZoneletsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nextract_edges\n\nExtract edges of intersection during subtract.\n\nretain_cutter\n\nRetain the zonelets used for removal.\n\ntrace_edges\n\nTrace edges of intersection on target. Only works if extractEdges is true.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SubtractZoneletsParams object.\n\nset_default\n\nSet the default values of the SubtractZoneletsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsParams.html#import-detail","title":"SubtractZoneletsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsParams.html#property-detail","title":"SubtractZoneletsParams > Property detail","text":"Property detail\n\n\n\nproperty SubtractZoneletsParams.extract_edges: bool\n\nExtract edges of intersection during subtract.\n\n\n\nproperty SubtractZoneletsParams.retain_cutter: bool\n\nRetain the zonelets used for removal.\n\n\n\nproperty SubtractZoneletsParams.trace_edges: bool\n\nTrace edges of intersection on target. Only works if extractEdges is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsParams.html#method-detail","title":"SubtractZoneletsParams > Method detail","text":"Method detail\n\n\n\nSubtractZoneletsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSubtractZoneletsParams.__str__() -> str\n\n\n\n\n\nstatic SubtractZoneletsParams.print_default()\n\nPrint the default values of SubtractZoneletsParams object.\n\nExamples\n\n>>> SubtractZoneletsParams.print_default()\n\n\n\nstatic SubtractZoneletsParams.set_default(retain_cutter: bool = None, extract_edges: bool = None, trace_edges: bool = None)\n\nSet the default values of the SubtractZoneletsParams object.\n\nParameters\n\nretain_cutter (bool, optional) – Retain the zonelets used for removal.\n\nextract_edges (bool, optional) – Extract edges of intersection during subtract.\n\ntrace_edges (bool, optional) – Trace edges of intersection on target. Only works if extractEdges is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlOffsetType.html#prismcontroloffsettype","title":"PrismControlOffsetType","text":"PrismControlOffsetType\n\n\n\nclass ansys.meshing.prime.PrismControlOffsetType\n\nOffset type for prism control."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlOffsetType.html#overview","title":"PrismControlOffsetType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASPECTRATIO\n\nOption to grow prism layers based on first aspect ratio specified.\n\nLASTRATIO\n\nOption to grow prism layers based on first height and last aspect ratio.\n\nUNIFORM\n\nOption to grow prism layers with uniform offset height based on first height."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlOffsetType.html#import-detail","title":"PrismControlOffsetType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlOffsetType.html#attribute-detail","title":"PrismControlOffsetType > Attribute detail","text":"Attribute detail\n\n\n\nPrismControlOffsetType.ASPECTRATIO = 1\n\nOption to grow prism layers based on first aspect ratio specified.\n\n\n\nPrismControlOffsetType.LASTRATIO = 2\n\nOption to grow prism layers based on first height and last aspect ratio.\n\n\n\nPrismControlOffsetType.UNIFORM = 0\n\nOption to grow prism layers with uniform offset height based on first height."},{"objectID":"Home","href":"examples/gallery_examples/gallery/index.html#examples","title":"Examples","text":"Examples\n\nThese examples show how to use PyPrimeMesh to prepare meshes.\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_11_solder_ball.py\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsResults.html#refineatcontactsresults","title":"RefineAtContactsResults","text":"RefineAtContactsResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.RefineAtContactsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_refined: int = None, size_field_id: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with refine face elements in contact.\n\nParameters\n\nmodel (Model) – Model to create a RefineAtContactsResults object with default parameters.\n\nn_refined (int, optional) – Number of face elements identified for refinement.\n\nsize_field_id (int, optional) – Id of size field created to refine at contacts.\n\nerror_code (ErrorCode, optional) – ErrorCode associated with the refine contacts operation.\n\njson_data (dict, optional) – JSON dictionary to create a RefineAtContactsResults object with provided parameters.\n\nExamples\n\n>>> refine_at_contacts_results = prime.RefineAtContactsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsResults.html#overview","title":"RefineAtContactsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nErrorCode associated with the refine contacts operation.\n\nn_refined\n\nNumber of face elements identified for refinement.\n\nsize_field_id\n\nId of size field created to refine at contacts.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RefineAtContactsResults object.\n\nset_default\n\nSet the default values of the RefineAtContactsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsResults.html#import-detail","title":"RefineAtContactsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsResults.html#property-detail","title":"RefineAtContactsResults > Property detail","text":"Property detail\n\n\n\nproperty RefineAtContactsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nErrorCode associated with the refine contacts operation.\n\n\n\nproperty RefineAtContactsResults.n_refined: int\n\nNumber of face elements identified for refinement.\n\n\n\nproperty RefineAtContactsResults.size_field_id: int\n\nId of size field created to refine at contacts."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsResults.html#method-detail","title":"RefineAtContactsResults > Method detail","text":"Method detail\n\n\n\nRefineAtContactsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRefineAtContactsResults.__str__() -> str\n\n\n\n\n\nstatic RefineAtContactsResults.print_default()\n\nPrint the default values of RefineAtContactsResults object.\n\nExamples\n\n>>> RefineAtContactsResults.print_default()\n\n\n\nstatic RefineAtContactsResults.set_default(n_refined: int = None, size_field_id: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the RefineAtContactsResults object.\n\nParameters\n\nn_refined (int, optional) – Number of face elements identified for refinement.\n\nsize_field_id (int, optional) – Id of size field created to refine at contacts.\n\nerror_code (ErrorCode, optional) – ErrorCode associated with the refine contacts operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenResults.html#componentchildrenresults","title":"ComponentChildrenResults","text":"ComponentChildrenResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ComponentChildrenResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, component_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, component_names: ansys.meshing.prime.params.primestructs.List[str] = None, body_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, body_names: ansys.meshing.prime.params.primestructs.List[str] = None, json_data: dict = None, **kwargs)\n\nResults associated with querying child components.\n\nParameters\n\nmodel (Model) – Model to create a ComponentChildrenResults object with default parameters.\n\ncomponent_ids (Iterable[int], optional) – Ids of components that are queried.This is a beta parameter. The behavior and name may change in the future.\n\ncomponent_names (List[str], optional) – Names of components that are queried.This is a beta parameter. The behavior and name may change in the future.\n\nbody_ids (Iterable[int], optional) – Ids of bodies that are queried.This is a beta parameter. The behavior and name may change in the future.\n\nbody_names (List[str], optional) – Names of bodies that are queried.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ComponentChildrenResults object with provided parameters.\n\nExamples\n\n>>> component_children_results = prime.ComponentChildrenResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenResults.html#overview","title":"ComponentChildrenResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbody_ids\n\nIds of bodies that are queried.\n\nbody_names\n\nNames of bodies that are queried.\n\ncomponent_ids\n\nIds of components that are queried.\n\ncomponent_names\n\nNames of components that are queried.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComponentChildrenResults object.\n\nset_default\n\nSet the default values of the ComponentChildrenResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenResults.html#import-detail","title":"ComponentChildrenResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenResults.html#property-detail","title":"ComponentChildrenResults > Property detail","text":"Property detail\n\n\n\nproperty ComponentChildrenResults.body_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of bodies that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ComponentChildrenResults.body_names: ansys.meshing.prime.params.primestructs.List[str]\n\nNames of bodies that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ComponentChildrenResults.component_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of components that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ComponentChildrenResults.component_names: ansys.meshing.prime.params.primestructs.List[str]\n\nNames of components that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenResults.html#method-detail","title":"ComponentChildrenResults > Method detail","text":"Method detail\n\n\n\nComponentChildrenResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComponentChildrenResults.__str__() -> str\n\n\n\n\n\nstatic ComponentChildrenResults.print_default()\n\nPrint the default values of ComponentChildrenResults object.\n\nExamples\n\n>>> ComponentChildrenResults.print_default()\n\n\n\nstatic ComponentChildrenResults.set_default(component_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, component_names: ansys.meshing.prime.params.primestructs.List[str] = None, body_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, body_names: ansys.meshing.prime.params.primestructs.List[str] = None)\n\nSet the default values of the ComponentChildrenResults object.\n\nParameters\n\ncomponent_ids (Iterable[int], optional) – Ids of components that are queried.\n\ncomponent_names (List[str], optional) – Names of components that are queried.\n\nbody_ids (Iterable[int], optional) – Ids of bodies that are queried.\n\nbody_names (List[str], optional) – Names of bodies that are queried."},{"objectID":"Home","href":"api/ansys/meshing/prime/params/index.html#the-params-package","title":"The params package","text":"The params package\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/params/index.html#summary","title":"The params package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nprimestructs\n\nModule for imports of autogen modules.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/params/index.html#description","title":"The params package > Description","text":"Description\n\nParams module."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/HexToSplineParams.html#hextosplineparams","title":"HexToSplineParams","text":"HexToSplineParams\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.HexToSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, json_data: dict = None, **kwargs)\n\nParameters to control conversion of hex mesh to spline.\n\nParameters\n\nmodel (Model) – Model to create a HexToSplineParams object with default parameters.\n\nfeature_capture_type (SplineFeatureCaptureType, optional) – Feature capture options.This is a beta parameter. The behavior and name may change in the future.\n\nfeature_angle (float, optional) – Angle to capture the feature.This is a beta parameter. The behavior and name may change in the future.\n\ncorner_angle (float, optional) – Corner angle of the feature.This is a beta parameter. The behavior and name may change in the future.\n\ncontinuity (SplineContinuityType, optional) – Spline Continuity options.This is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry (bool, optional) – Option to project on geometry.This is a beta parameter. The behavior and name may change in the future.\n\nuse_projection_scope (bool, optional) – Option to use projection scope.This is a beta parameter. The behavior and name may change in the future.\n\nprojection_scope (ScopeDefinition, optional) – Scope to evaluate entities for projection.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a HexToSplineParams object with provided parameters.\n\nExamples\n\n>>> hex_to_spline_params = prime.HexToSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/HexToSplineParams.html#overview","title":"HexToSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontinuity\n\nSpline Continuity options.\n\ncorner_angle\n\nCorner angle of the feature.\n\nfeature_angle\n\nAngle to capture the feature.\n\nfeature_capture_type\n\nFeature capture options.\n\nproject_on_geometry\n\nOption to project on geometry.\n\nprojection_scope\n\nScope to evaluate entities for projection.\n\nuse_projection_scope\n\nOption to use projection scope.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of HexToSplineParams object.\n\nset_default\n\nSet the default values of the HexToSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/HexToSplineParams.html#import-detail","title":"HexToSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/HexToSplineParams.html#property-detail","title":"HexToSplineParams > Property detail","text":"Property detail\n\n\n\nproperty HexToSplineParams.continuity: SplineContinuityType\n\nSpline Continuity options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.corner_angle: float\n\nCorner angle of the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.feature_angle: float\n\nAngle to capture the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.feature_capture_type: SplineFeatureCaptureType\n\nFeature capture options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.project_on_geometry: bool\n\nOption to project on geometry.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope to evaluate entities for projection.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.use_projection_scope: bool\n\nOption to use projection scope.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/HexToSplineParams.html#method-detail","title":"HexToSplineParams > Method detail","text":"Method detail\n\n\n\nHexToSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nHexToSplineParams.__str__() -> str\n\n\n\n\n\nstatic HexToSplineParams.print_default()\n\nPrint the default values of HexToSplineParams object.\n\nExamples\n\n>>> HexToSplineParams.print_default()\n\n\n\nstatic HexToSplineParams.set_default(feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None)\n\nSet the default values of the HexToSplineParams object.\n\nParameters\n\nfeature_capture_type (SplineFeatureCaptureType, optional) – Feature capture options.\n\nfeature_angle (float, optional) – Angle to capture the feature.\n\ncorner_angle (float, optional) – Corner angle of the feature.\n\ncontinuity (SplineContinuityType, optional) – Spline Continuity options.\n\nproject_on_geometry (bool, optional) – Option to project on geometry.\n\nuse_projection_scope (bool, optional) – Option to use projection scope.\n\nprojection_scope (ScopeDefinition, optional) – Scope to evaluate entities for projection."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadResults.html#importcadresults","title":"ImportCadResults","text":"ImportCadResults\n\n\n\nclass ansys.meshing.prime.ImportCadResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, cad_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, json_data: dict = None, **kwargs)\n\nResults associated with the CAD import.\n\nParameters\n\nmodel (Model) – Model to create a ImportCadResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\ncad_parameters (Dict[str, Union[str, int, float, bool]], optional) – Returns the parameters associated with CAD. Available only with WorkBench CAD Reader route.\n\njson_data (dict, optional) – JSON dictionary to create a ImportCadResults object with provided parameters.\n\nExamples\n\n>>> import_cad_results = prime.ImportCadResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadResults.html#overview","title":"ImportCadResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncad_parameters\n\nReturns the parameters associated with CAD. Available only with WorkBench CAD Reader route.\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportCadResults object.\n\nset_default\n\nSet the default values of the ImportCadResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadResults.html#import-detail","title":"ImportCadResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadResults.html#property-detail","title":"ImportCadResults > Property detail","text":"Property detail\n\n\n\nproperty ImportCadResults.cad_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]]\n\nReturns the parameters associated with CAD. Available only with WorkBench CAD Reader route.\n\n\n\nproperty ImportCadResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadResults.html#method-detail","title":"ImportCadResults > Method detail","text":"Method detail\n\n\n\nImportCadResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportCadResults.__str__() -> str\n\n\n\n\n\nstatic ImportCadResults.print_default()\n\nPrint the default values of ImportCadResults object.\n\nExamples\n\n>>> ImportCadResults.print_default()\n\n\n\nstatic ImportCadResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, cad_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None)\n\nSet the default values of the ImportCadResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\ncad_parameters (Dict[str, Union[str, int, float, bool]], optional) – Returns the parameters associated with CAD. Available only with WorkBench CAD Reader route."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolder/index.html#the-scaffolderpy-module","title":"The scaffolder.py module","text":"The scaffolder.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolder/index.html#summary","title":"The scaffolder.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nScaffolder\n\nScaffolder is used for achieving connections in structures made of sheets and beams. Solid bodies should be suppressed before applying scaffolding.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolder/index.html#description","title":"The scaffolder.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIResults.html#createboiresults","title":"CreateBOIResults","text":"CreateBOIResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.CreateBOIResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None, json_data: dict = None, **kwargs)\n\nResult structure associated with BOI creation of zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateBOIResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\npart_id (int, optional) – The BOI part id.\n\njson_data (dict, optional) – JSON dictionary to create a CreateBOIResults object with provided parameters.\n\nExamples\n\n>>> create_boiresults = prime.CreateBOIResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIResults.html#overview","title":"CreateBOIResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\npart_id\n\nThe BOI part id.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateBOIResults object.\n\nset_default\n\nSet the default values of the CreateBOIResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIResults.html#import-detail","title":"CreateBOIResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIResults.html#property-detail","title":"CreateBOIResults > Property detail","text":"Property detail\n\n\n\nproperty CreateBOIResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty CreateBOIResults.part_id: int\n\nThe BOI part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIResults.html#method-detail","title":"CreateBOIResults > Method detail","text":"Method detail\n\n\n\nCreateBOIResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateBOIResults.__str__() -> str\n\n\n\n\n\nstatic CreateBOIResults.print_default()\n\nPrint the default values of CreateBOIResults object.\n\nExamples\n\n>>> CreateBOIResults.print_default()\n\n\n\nstatic CreateBOIResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None)\n\nSet the default values of the CreateBOIResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\npart_id (int, optional) – The BOI part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_elbow_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_elbow_scdoc","title":"ansys.meshing.prime.examples.examples.download_elbow_scdoc","text":"ansys.meshing.prime.examples.examples.download_elbow_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_elbow_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the mixing elbow example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionsParams.html#resolveintersectionsparams","title":"ResolveIntersectionsParams","text":"ResolveIntersectionsParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.ResolveIntersectionsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, number_of_threads: int = None, json_data: dict = None, **kwargs)\n\nResolveIntersectionsParams define parameters for resolve intersections.\n\nParameters\n\nmodel (Model) – Model to create a ResolveIntersectionsParams object with default parameters.\n\nnumber_of_threads (int, optional) – Number of threads for resolve intersections multithreaded operation.\n\njson_data (dict, optional) – JSON dictionary to create a ResolveIntersectionsParams object with provided parameters.\n\nExamples\n\n>>> resolve_intersections_params = prime.ResolveIntersectionsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionsParams.html#overview","title":"ResolveIntersectionsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nnumber_of_threads\n\nNumber of threads for resolve intersections multithreaded operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ResolveIntersectionsParams object.\n\nset_default\n\nSet the default values of the ResolveIntersectionsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionsParams.html#import-detail","title":"ResolveIntersectionsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionsParams.html#property-detail","title":"ResolveIntersectionsParams > Property detail","text":"Property detail\n\n\n\nproperty ResolveIntersectionsParams.number_of_threads: int\n\nNumber of threads for resolve intersections multithreaded operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionsParams.html#method-detail","title":"ResolveIntersectionsParams > Method detail","text":"Method detail\n\n\n\nResolveIntersectionsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nResolveIntersectionsParams.__str__() -> str\n\n\n\n\n\nstatic ResolveIntersectionsParams.print_default()\n\nPrint the default values of ResolveIntersectionsParams object.\n\nExamples\n\n>>> ResolveIntersectionsParams.print_default()\n\n\n\nstatic ResolveIntersectionsParams.set_default(number_of_threads: int = None)\n\nSet the default values of the ResolveIntersectionsParams object.\n\nParameters\n\nnumber_of_threads (int, optional) – Number of threads for resolve intersections multithreaded operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlParams.html#periodiccontrolparams","title":"PeriodicControlParams","text":"PeriodicControlParams\n\n\n\nclass ansys.meshing.prime.autogen.periodiccontrolstructs.PeriodicControlParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, center: ansys.meshing.prime.params.primestructs.Iterable[float] = None, axis: ansys.meshing.prime.params.primestructs.Iterable[float] = None, angle: float = None, json_data: dict = None, **kwargs)\n\nPeriodicControlParams contains the parameters for periodic surface recovery.  Parameters like center, axis and angle determine the transformation from  one surface to its matching periodic surface.\n\nParameters\n\nmodel (Model) – Model to create a PeriodicControlParams object with default parameters.\n\ncenter (Iterable[float], optional) – Center coordinates.\n\naxis (Iterable[float], optional) – Axis vector coordinates.\n\nangle (float, optional) – Angle in degrees.\n\njson_data (dict, optional) – JSON dictionary to create a PeriodicControlParams object with provided parameters.\n\nExamples\n\n>>> periodic_control_params = prime.PeriodicControlParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlParams.html#overview","title":"PeriodicControlParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nangle\n\nAngle in degrees.\n\naxis\n\nAxis vector coordinates.\n\ncenter\n\nCenter coordinates.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PeriodicControlParams object.\n\nset_default\n\nSet the default values of the PeriodicControlParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlParams.html#import-detail","title":"PeriodicControlParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlParams.html#property-detail","title":"PeriodicControlParams > Property detail","text":"Property detail\n\n\n\nproperty PeriodicControlParams.angle: float\n\nAngle in degrees.\n\n\n\nproperty PeriodicControlParams.axis: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nAxis vector coordinates.\n\n\n\nproperty PeriodicControlParams.center: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCenter coordinates."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlParams.html#method-detail","title":"PeriodicControlParams > Method detail","text":"Method detail\n\n\n\nPeriodicControlParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControlParams.__str__() -> str\n\n\n\n\n\nstatic PeriodicControlParams.print_default()\n\nPrint the default values of PeriodicControlParams object.\n\nExamples\n\n>>> PeriodicControlParams.print_default()\n\n\n\nstatic PeriodicControlParams.set_default(center: ansys.meshing.prime.params.primestructs.Iterable[float] = None, axis: ansys.meshing.prime.params.primestructs.Iterable[float] = None, angle: float = None)\n\nSet the default values of the PeriodicControlParams object.\n\nParameters\n\ncenter (Iterable[float], optional) – Center coordinates.\n\naxis (Iterable[float], optional) – Axis vector coordinates.\n\nangle (float, optional) – Angle in degrees."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerParams.html#vtcomposerparams","title":"VTComposerParams","text":"VTComposerParams\n\n\n\nclass ansys.meshing.prime.autogen.vtcomposerstructs.VTComposerParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, thin_stripes_tol: float = None, json_data: dict = None, **kwargs)\n\nParameters to control VTComposer operations.\n\nParameters\n\nmodel (Model) – Model to create a VTComposerParams object with default parameters.\n\nthin_stripes_tol (float, optional) – This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a VTComposerParams object with provided parameters.\n\nExamples\n\n>>> v_tcomposer_params = prime.VTComposerParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerParams.html#overview","title":"VTComposerParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nthin_stripes_tol\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VTComposerParams object.\n\nset_default\n\nSet the default values of the VTComposerParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerParams.html#import-detail","title":"VTComposerParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerParams.html#property-detail","title":"VTComposerParams > Property detail","text":"Property detail\n\n\n\nproperty VTComposerParams.thin_stripes_tol: float\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerParams.html#method-detail","title":"VTComposerParams > Method detail","text":"Method detail\n\n\n\nVTComposerParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVTComposerParams.__str__() -> str\n\n\n\n\n\nstatic VTComposerParams.print_default()\n\nPrint the default values of VTComposerParams object.\n\nExamples\n\n>>> VTComposerParams.print_default()\n\n\n\nstatic VTComposerParams.set_default(thin_stripes_tol: float = None)\n\nSet the default values of the VTComposerParams object.\n\nParameters\n\nthin_stripes_tol (float, optional)"},{"objectID":"Home","href":"examples/gallery_examples/gallery/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n17:14.071 total execution time for 12 files from examples/gallery_examples/gallery:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py (04_lucid_toy_car.py)\n\n03:35.634\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py (10_wheel_ground_contact_patch.py)\n\n02:36.853\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_11_solder_ball.py (11_solder_ball.py)\n\n02:31.595\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py (03_lucid_pipe_tee.py)\n\n02:29.724\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py (08_lucid_generic_f1_rear_wing.py)\n\n01:41.754\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py (09_multi_layer_quad_mesh_pcb.py)\n\n01:09.460\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py (06_blade_morph.py)\n\n01:05.847\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py (05_pcb_stacker.py)\n\n00:31.156\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py (07_saddle_bracket.py)\n\n00:24.768\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py (01_bracket_scaffold.py)\n\n00:23.215\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py (00_lucid_file_IO.py)\n\n00:22.789\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py (02_lucid_mixing_elbow.py)\n\n00:21.275\n\n0.0"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_saddle_bracket_fmd.html#ansysmeshingprimeexamplesexamplesdownload_saddle_bracket_fmd","title":"ansys.meshing.prime.examples.examples.download_saddle_bracket_fmd","text":"ansys.meshing.prime.examples.examples.download_saddle_bracket_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_saddle_bracket_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload FMD file for the saddle bracket example\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsParams.html#deletefringesandoverlapsparams","title":"DeleteFringesAndOverlapsParams","text":"DeleteFringesAndOverlapsParams\n\n\n\nclass ansys.meshing.prime.autogen.deletetoolstructs.DeleteFringesAndOverlapsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, fringe_element_count: int = None, overlap_element_count: int = None, delete_fringes: bool = None, delete_overlaps: bool = None, json_data: dict = None, **kwargs)\n\nParameters to delete fringes and overlapping faces.\n\nParameters\n\nmodel (Model) – Model to create a DeleteFringesAndOverlapsParams object with default parameters.\n\nfringe_element_count (int, optional) – Maximum count of free face elements identified as fringe to be deleted.\n\noverlap_element_count (int, optional) – Maximum count of overlapping face elements identified as overlap to be deleted.\n\ndelete_fringes (bool, optional) – Option to delete fringes. The default is true.\n\ndelete_overlaps (bool, optional) – Option to delete overlaps. The default is false.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteFringesAndOverlapsParams object with provided parameters.\n\nExamples\n\n>>> delete_fringes_and_overlaps_params = prime.DeleteFringesAndOverlapsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsParams.html#overview","title":"DeleteFringesAndOverlapsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_fringes\n\nOption to delete fringes. The default is true.\n\ndelete_overlaps\n\nOption to delete overlaps. The default is false.\n\nfringe_element_count\n\nMaximum count of free face elements identified as fringe to be deleted.\n\noverlap_element_count\n\nMaximum count of overlapping face elements identified as overlap to be deleted.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteFringesAndOverlapsParams object.\n\nset_default\n\nSet the default values of the DeleteFringesAndOverlapsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsParams.html#import-detail","title":"DeleteFringesAndOverlapsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsParams.html#property-detail","title":"DeleteFringesAndOverlapsParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteFringesAndOverlapsParams.delete_fringes: bool\n\nOption to delete fringes. The default is true.\n\n\n\nproperty DeleteFringesAndOverlapsParams.delete_overlaps: bool\n\nOption to delete overlaps. The default is false.\n\n\n\nproperty DeleteFringesAndOverlapsParams.fringe_element_count: int\n\nMaximum count of free face elements identified as fringe to be deleted.\n\n\n\nproperty DeleteFringesAndOverlapsParams.overlap_element_count: int\n\nMaximum count of overlapping face elements identified as overlap to be deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsParams.html#method-detail","title":"DeleteFringesAndOverlapsParams > Method detail","text":"Method detail\n\n\n\nDeleteFringesAndOverlapsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteFringesAndOverlapsParams.__str__() -> str\n\n\n\n\n\nstatic DeleteFringesAndOverlapsParams.print_default()\n\nPrint the default values of DeleteFringesAndOverlapsParams object.\n\nExamples\n\n>>> DeleteFringesAndOverlapsParams.print_default()\n\n\n\nstatic DeleteFringesAndOverlapsParams.set_default(fringe_element_count: int = None, overlap_element_count: int = None, delete_fringes: bool = None, delete_overlaps: bool = None)\n\nSet the default values of the DeleteFringesAndOverlapsParams object.\n\nParameters\n\nfringe_element_count (int, optional) – Maximum count of free face elements identified as fringe to be deleted.\n\noverlap_element_count (int, optional) – Maximum count of overlapping face elements identified as overlap to be deleted.\n\ndelete_fringes (bool, optional) – Option to delete fringes. The default is true.\n\ndelete_overlaps (bool, optional) – Option to delete overlaps. The default is false."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsParams.html#subtractzoneletsparams","title":"SubtractZoneletsParams","text":"SubtractZoneletsParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.SubtractZoneletsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, retain_cutter: bool = None, extract_edges: bool = None, trace_edges: bool = None, json_data: dict = None, **kwargs)\n\nParameters to use when subtracting zonelets.\n\nParameters\n\nmodel (Model) – Model to create a SubtractZoneletsParams object with default parameters.\n\nretain_cutter (bool, optional) – Retain the zonelets used for removal.\n\nextract_edges (bool, optional) – Extract edges of intersection during subtract.\n\ntrace_edges (bool, optional) – Trace edges of intersection on target. Only works if extractEdges is true.\n\njson_data (dict, optional) – JSON dictionary to create a SubtractZoneletsParams object with provided parameters.\n\nExamples\n\n>>> subtract_zonelets_params = prime.SubtractZoneletsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsParams.html#overview","title":"SubtractZoneletsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nextract_edges\n\nExtract edges of intersection during subtract.\n\nretain_cutter\n\nRetain the zonelets used for removal.\n\ntrace_edges\n\nTrace edges of intersection on target. Only works if extractEdges is true.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SubtractZoneletsParams object.\n\nset_default\n\nSet the default values of the SubtractZoneletsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsParams.html#import-detail","title":"SubtractZoneletsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsParams.html#property-detail","title":"SubtractZoneletsParams > Property detail","text":"Property detail\n\n\n\nproperty SubtractZoneletsParams.extract_edges: bool\n\nExtract edges of intersection during subtract.\n\n\n\nproperty SubtractZoneletsParams.retain_cutter: bool\n\nRetain the zonelets used for removal.\n\n\n\nproperty SubtractZoneletsParams.trace_edges: bool\n\nTrace edges of intersection on target. Only works if extractEdges is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsParams.html#method-detail","title":"SubtractZoneletsParams > Method detail","text":"Method detail\n\n\n\nSubtractZoneletsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSubtractZoneletsParams.__str__() -> str\n\n\n\n\n\nstatic SubtractZoneletsParams.print_default()\n\nPrint the default values of SubtractZoneletsParams object.\n\nExamples\n\n>>> SubtractZoneletsParams.print_default()\n\n\n\nstatic SubtractZoneletsParams.set_default(retain_cutter: bool = None, extract_edges: bool = None, trace_edges: bool = None)\n\nSet the default values of the SubtractZoneletsParams object.\n\nParameters\n\nretain_cutter (bool, optional) – Retain the zonelets used for removal.\n\nextract_edges (bool, optional) – Extract edges of intersection during subtract.\n\ntrace_edges (bool, optional) – Trace edges of intersection on target. Only works if extractEdges is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrapper/index.html#the-wrapperpy-module","title":"The wrapper.py module","text":"The wrapper.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrapper/index.html#summary","title":"The wrapper.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nWrapper\n\nProvides operations for generating a surface mesh using wrapper technology.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrapper/index.html#description","title":"The wrapper.py module > Description","text":"Description\n\nModule for the wrapper class."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartialDefeatureParams.html#partialdefeatureparams","title":"PartialDefeatureParams","text":"PartialDefeatureParams\n\n\n\nclass ansys.meshing.prime.PartialDefeatureParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, edge_sharp_corner_angle: float = None, merge_face_normals_angle: float = None, merge_edge_allow_self_close: bool = None, json_data: dict = None, **kwargs)\n\nParameters for partial defeature operation.\n\nParameters\n\nmodel (Model) – Model to create a PartialDefeatureParams object with default parameters.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a PartialDefeatureParams object with provided parameters.\n\nExamples\n\n>>> partial_defeature_params = prime.PartialDefeatureParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartialDefeatureParams.html#overview","title":"PartialDefeatureParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_sharp_corner_angle\n\nMerge edges when the angle between the edges are below the provided value.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmerge_face_normals_angle\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PartialDefeatureParams object.\n\nset_default\n\nSet the default values of the PartialDefeatureParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartialDefeatureParams.html#import-detail","title":"PartialDefeatureParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartialDefeatureParams.html#property-detail","title":"PartialDefeatureParams > Property detail","text":"Property detail\n\n\n\nproperty PartialDefeatureParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty PartialDefeatureParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty PartialDefeatureParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartialDefeatureParams.html#method-detail","title":"PartialDefeatureParams > Method detail","text":"Method detail\n\n\n\nPartialDefeatureParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPartialDefeatureParams.__str__() -> str\n\n\n\n\n\nstatic PartialDefeatureParams.print_default()\n\nPrint the default values of PartialDefeatureParams object.\n\nExamples\n\n>>> PartialDefeatureParams.print_default()\n\n\n\nstatic PartialDefeatureParams.set_default(edge_sharp_corner_angle: float = None, merge_face_normals_angle: float = None, merge_edge_allow_self_close: bool = None)\n\nSet the default values of the PartialDefeatureParams object.\n\nParameters\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/VolumeMeshToolResults.html#volumemeshtoolresults","title":"VolumeMeshToolResults","text":"VolumeMeshToolResults\n\n\n\nclass ansys.meshing.prime.autogen.volumemeshtoolstructs.VolumeMeshToolResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult associated with the volume mesh tool operation.\n\nParameters\n\nmodel (Model) – Model to create a VolumeMeshToolResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume mesh tool operation.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeMeshToolResults object with provided parameters.\n\nExamples\n\n>>> volume_mesh_tool_results = prime.VolumeMeshToolResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/VolumeMeshToolResults.html#overview","title":"VolumeMeshToolResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the volume mesh tool operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeMeshToolResults object.\n\nset_default\n\nSet the default values of the VolumeMeshToolResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/VolumeMeshToolResults.html#import-detail","title":"VolumeMeshToolResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/VolumeMeshToolResults.html#property-detail","title":"VolumeMeshToolResults > Property detail","text":"Property detail\n\n\n\nproperty VolumeMeshToolResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume mesh tool operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/VolumeMeshToolResults.html#method-detail","title":"VolumeMeshToolResults > Method detail","text":"Method detail\n\n\n\nVolumeMeshToolResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeMeshToolResults.__str__() -> str\n\n\n\n\n\nstatic VolumeMeshToolResults.print_default()\n\nPrint the default values of VolumeMeshToolResults object.\n\nExamples\n\n>>> VolumeMeshToolResults.print_default()\n\n\n\nstatic VolumeMeshToolResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the VolumeMeshToolResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the volume mesh tool operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearch/SurfaceSearch.html#surfacesearch","title":"SurfaceSearch","text":"SurfaceSearch\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearch.SurfaceSearch(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nSurfaceSearch allows you to check surface mesh quality.\n\nSurfaceSearch performs surface mesh quality check based on different face quality measures.\n\nParameters\n\nmodel (Model) – Server model to create SurfaceSearch object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearch/SurfaceSearch.html#overview","title":"SurfaceSearch > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncheck_face_deviation\n\nGets information regarding the number of faces with a deviation higher than the tolerance.\n\nget_search_info_by_register_id\n\nGets search information regarding registered face elements of provided zonelets using a register id.\n\nget_surface_diagnostic_summary\n\nGets the surface diagnostic summary.\n\nget_surface_quality_summary\n\nGets the surface quality summary.\n\nsearch_zonelets_by_folds\n\nSearch face zonelets to identify folds.\n\nsearch_zonelets_by_invalid_normals\n\nSearch face zonelets to identify faces with invalid normals.\n\nsearch_zonelets_by_quality\n\nSearch face zonelets with the provided quality parameters and applies register id on face elements found.\n\nsearch_zonelets_by_self_intersections\n\nSearch face zonelets to identify face elements intersecting with each other.\n\nsearch_zonelets_by_spikes\n\nSearch face zonelets to identify spikes.\n\nsearch_zonelets_by_thin_strips\n\nSearch face zonelets to identify face element of thin strips(single layer of triangles between features).\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for SurfaceSearch.\n\n__exit__\n\nExit context for SurfaceSearch.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearch/SurfaceSearch.html#import-detail","title":"SurfaceSearch > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearch/SurfaceSearch.html#method-detail","title":"SurfaceSearch > Method detail","text":"Method detail\n\n\n\nSurfaceSearch.__enter__()\n\nEnter context for SurfaceSearch.\n\n\n\nSurfaceSearch.__exit__(type, value, traceback)\n\nExit context for SurfaceSearch.\n\n\n\nSurfaceSearch.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceSearch.check_face_deviation(source_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], target_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CheckFaceDeviationParams) -> ansys.meshing.prime.params.primestructs.CheckFaceDeviationResults\n\nGets information regarding the number of faces with a deviation higher than the tolerance.\n\nParameters\n\nsource_face_zonelets (Iterable[int]) – Scope of reference zonelets from which the deviation is checked.\n\ntarget_face_zonelets (Iterable[int]) – Scope of target zonelets for which the deviation is checked.\n\nparams (CheckFaceDeviationParams) – Parameters for retrieving information while performing check face deviation operation.\n\nReturns\n\nReturns the CheckFaceDeviationResults.\n\nReturn type\n\nCheckFaceDeviationResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> params = prime.CheckFaceDeviationParams()\n>>> results = surf_search.check_face_deviation(source_scope, reference_scope, params)\n\n\n\nSurfaceSearch.get_search_info_by_register_id(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchInfoByRegisterIdParams) -> ansys.meshing.prime.params.primestructs.SearchInfoByRegisterIdResults\n\nGets search information regarding registered face elements of provided zonelets using a register id.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of the face zonelets to search in.\n\nregister_id (int) – An integer register id.\n\nparams (SearchInfoByRegisterIdParams) – Parameters for retrieveing information on registered faces.\n\nReturns\n\nReturns the SearchInfoByRegisterIdResults.\n\nReturn type\n\nSearchInfoByRegisterIdResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> params = prime.SearchInfoByRegisterIdParams(model=model)\n>>> results = surf_search.get_search_info_by_register_id(face_zonelets, register_id, params)\n\n\n\nSurfaceSearch.get_surface_diagnostic_summary(params: ansys.meshing.prime.params.primestructs.SurfaceDiagnosticSummaryParams) -> ansys.meshing.prime.params.primestructs.SurfaceDiagnosticSummaryResults\n\nGets the surface diagnostic summary.\n\nDiagnose surface connectivity for the given scope and controls provided by the surface diagnostic summary parameters.\n\nParameters\n\nparams (SurfaceDiagnosticSummaryParams) – Surface diagnostic summary parameters.\n\nReturns\n\nReturns the SurfaceDiagnosticSummaryResults.\n\nReturn type\n\nSurfaceDiagnosticSummaryResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.get_surface_diagnostics_summary(SurfaceDiagnosticSummaryParams(model=model))\n\n\n\nSurfaceSearch.get_surface_quality_summary(params: ansys.meshing.prime.params.primestructs.SurfaceQualitySummaryParams) -> ansys.meshing.prime.params.primestructs.SurfaceQualitySummaryResults\n\nGets the surface quality summary.\n\nDiagnose surface quality for the given scope and face quality measures provided by the surface quality summary parameters.\nUses default quality limit if not specified with params.\n\nParameters\n\nparams (SurfaceQualitySummaryParams) – Surface quality summary parameters.\n\nReturns\n\nReturns the SurfaceQualitySummaryResults.\n\nReturn type\n\nSurfaceQualitySummaryResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.get_surface_quality_summary(SurfaceQualitySummaryParams(model=model))\n\n\n\nSurfaceSearch.search_zonelets_by_folds(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchByFoldsParams) -> ansys.meshing.prime.params.primestructs.SearchByFoldsResults\n\nSearch face zonelets to identify folds.\n\nSearch face zonelets to identify folds with provided folds parameters.\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nparams (SearchByFoldsParams) – Parameters used to identify folds.\n\nReturns\n\nReturns the SearchByFoldsResults.\n\nReturn type\n\nSearchByFoldsResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_folds(part_id, face_zonelets, register_id, params)\n\n\n\nSurfaceSearch.search_zonelets_by_invalid_normals(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int) -> ansys.meshing.prime.params.primestructs.SearchByInvalidNormalsResults\n\nSearch face zonelets to identify faces with invalid normals.\n\nSearch face zonelets to identify faces with invalid normals.\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nReturns\n\nReturns the SearchByInvalidNormalsResults.\n\nReturn type\n\nSearchByInvalidNormalsResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_invalid_normals(part_id, face_zonelets, register_id)\n\n\n\nSurfaceSearch.search_zonelets_by_quality(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchByQualityParams) -> ansys.meshing.prime.params.primestructs.SearchByQualityResults\n\nSearch face zonelets with the provided quality parameters and applies register id on face elements found.\n\nParameters\n\npart_id (int) – Id of the part.\n\nface_zonelets (Iterable[int]) – Ids of the face zonelets whose element search is performed.\n\nregister_id (int) – Id used to register face elements found by the search.\n\nparams (SearchByQualityParams) – Quality parameters used to search face elements.\n\nReturns\n\nReturns the SearchByQualityResults.\n\nReturn type\n\nSearchByQualityResults\n\nExamples\n\n>>> surf_search = prime.SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_quality(part_id, face_zonelets, register_id, prime.SearchByQualityParams(model=model))\n\n\n\nSurfaceSearch.search_zonelets_by_self_intersections(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchBySelfIntersectionParams) -> ansys.meshing.prime.params.primestructs.SearchByIntersectionResults\n\nSearch face zonelets to identify face elements intersecting with each other.\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nparams (SearchBySelfIntersectionParams) – Parameters used to identify face elements by self intersection.\n\nReturns\n\nReturns the SearchByIntersectionResults.\n\nReturn type\n\nSearchByIntersectionResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_self_intersections(part_id, face_zonelets, register_id, params)\n\n\n\nSurfaceSearch.search_zonelets_by_spikes(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchBySpikeParams) -> ansys.meshing.prime.params.primestructs.SearchBySpikeResults\n\nSearch face zonelets to identify spikes.\n\nSearch face zonelets to identify spikes with provided spike parameters\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nparams (SearchBySpikeParams) – Parameters used to identify spikes.\n\nReturns\n\nReturns the SearchBySpikeResults.\n\nReturn type\n\nSearchBySpikeResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_spikes(part_id, face_zonelets, register_id, params)\n\n\n\nSurfaceSearch.search_zonelets_by_thin_strips(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchByThinStripParams) -> ansys.meshing.prime.params.primestructs.SearchByThinStripResults\n\nSearch face zonelets to identify face element of thin strips(single layer of triangles between features).\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nparams (SearchByThinStripParams) – Parameters used to identify face elements of thin strips.\n\nReturns\n\nReturns the SearchByThinStripResults.\n\nReturn type\n\nSearchByThinStripResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_thin_strips(part_id, face_zonelets, register_id, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualityResult.html#surfacequalityresult","title":"SurfaceQualityResult","text":"SurfaceQualityResult\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SurfaceQualityResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, measure_name: str = None, quality_limit: float = None, n_found: int = None, max_quality: float = None, min_quality: float = None, json_data: dict = None, **kwargs)\n\nResult of surface quality.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceQualityResult object with default parameters.\n\nface_quality_measure (FaceQualityMeasure, optional) – Type of the face quality measure.\n\nmeasure_name (str, optional) – Name of the face quality measure.\n\nquality_limit (float, optional) – Target quality limit used to find failures.\n\nn_found (int, optional) – Number of failed faces.\n\nmax_quality (float, optional) – Maximum value of quality measure.\n\nmin_quality (float, optional) – Minimum value of quality measure.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceQualityResult object with provided parameters.\n\nExamples\n\n>>> surface_quality_result = prime.SurfaceQualityResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualityResult.html#overview","title":"SurfaceQualityResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_quality_measure\n\nType of the face quality measure.\n\nmax_quality\n\nMaximum value of quality measure.\n\nmeasure_name\n\nName of the face quality measure.\n\nmin_quality\n\nMinimum value of quality measure.\n\nn_found\n\nNumber of failed faces.\n\nquality_limit\n\nTarget quality limit used to find failures.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceQualityResult object.\n\nset_default\n\nSet the default values of the SurfaceQualityResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualityResult.html#import-detail","title":"SurfaceQualityResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualityResult.html#property-detail","title":"SurfaceQualityResult > Property detail","text":"Property detail\n\n\n\nproperty SurfaceQualityResult.face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure\n\nType of the face quality measure.\n\n\n\nproperty SurfaceQualityResult.max_quality: float\n\nMaximum value of quality measure.\n\n\n\nproperty SurfaceQualityResult.measure_name: str\n\nName of the face quality measure.\n\n\n\nproperty SurfaceQualityResult.min_quality: float\n\nMinimum value of quality measure.\n\n\n\nproperty SurfaceQualityResult.n_found: int\n\nNumber of failed faces.\n\n\n\nproperty SurfaceQualityResult.quality_limit: float\n\nTarget quality limit used to find failures."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualityResult.html#method-detail","title":"SurfaceQualityResult > Method detail","text":"Method detail\n\n\n\nSurfaceQualityResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceQualityResult.__str__() -> str\n\n\n\n\n\nstatic SurfaceQualityResult.print_default()\n\nPrint the default values of SurfaceQualityResult object.\n\nExamples\n\n>>> SurfaceQualityResult.print_default()\n\n\n\nstatic SurfaceQualityResult.set_default(face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, measure_name: str = None, quality_limit: float = None, n_found: int = None, max_quality: float = None, min_quality: float = None)\n\nSet the default values of the SurfaceQualityResult object.\n\nParameters\n\nface_quality_measure (FaceQualityMeasure, optional) – Type of the face quality measure.\n\nmeasure_name (str, optional) – Name of the face quality measure.\n\nquality_limit (float, optional) – Target quality limit used to find failures.\n\nn_found (int, optional) – Number of failed faces.\n\nmax_quality (float, optional) – Maximum value of quality measure.\n\nmin_quality (float, optional) – Minimum value of quality measure."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPairType.html#bcpairtype","title":"BCPairType","text":"BCPairType\n\n\n\nclass ansys.meshing.prime.autogen.morpherstructs.BCPairType\n\nOption to specify boundary condition pair type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPairType.html#overview","title":"BCPairType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGE\n\nOption to specify edge zonelet as boundary condition pair.\n\nFACE\n\nOption to specify face zonelet as boundary condition pair."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPairType.html#import-detail","title":"BCPairType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/BCPairType.html#attribute-detail","title":"BCPairType > Attribute detail","text":"Attribute detail\n\n\n\nBCPairType.EDGE = 2\n\nOption to specify edge zonelet as boundary condition pair.\n\n\n\nBCPairType.FACE = 1\n\nOption to specify face zonelet as boundary condition pair."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchType.html#stitchtype","title":"StitchType","text":"StitchType\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.StitchType\n\nStitch type depending on nature of surface boundary edges to be stitched."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchType.html#overview","title":"StitchType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLALL\n\nStitch surfaces at boundary edges.\n\nFREEFREE\n\nStitch surfaces at free boundary edges."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchType.html#import-detail","title":"StitchType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchType.html#attribute-detail","title":"StitchType > Attribute detail","text":"Attribute detail\n\n\n\nStitchType.ALLALL = 0\n\nStitch surfaces at boundary edges.\n\n\n\nStitchType.FREEFREE = 1\n\nStitch surfaces at free boundary edges."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/prismcontrol/index.html#the-prismcontrolpy-module","title":"The prismcontrol.py module","text":"The prismcontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/prismcontrol/index.html#summary","title":"The prismcontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPrismControl\n\nPrismControl allows you to generate prisms.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/prismcontrol/index.html#description","title":"The prismcontrol.py module > Description","text":"Description\n\nModule containing PrismControl related classes and methods."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearch/index.html#the-volumesearchpy-module","title":"The volumesearch.py module","text":"The volumesearch.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearch/index.html#summary","title":"The volumesearch.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVolumeSearch\n\nVolumeSearch allows you to check volume mesh quality.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearch/index.html#description","title":"The volumesearch.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsParams.html#mergepartsparams","title":"MergePartsParams","text":"MergePartsParams\n\n\n\nclass ansys.meshing.prime.autogen.modelstructs.MergePartsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merged_part_suggested_name: str = None, json_data: dict = None, **kwargs)\n\nParameters to merge parts.\n\nParameters\n\nmodel (Model) – Model to create a MergePartsParams object with default parameters.\n\nmerged_part_suggested_name (str, optional) – Suggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given.\n\njson_data (dict, optional) – JSON dictionary to create a MergePartsParams object with provided parameters.\n\nExamples\n\n>>> merge_parts_params = prime.MergePartsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsParams.html#overview","title":"MergePartsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmerged_part_suggested_name\n\nSuggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergePartsParams object.\n\nset_default\n\nSet the default values of the MergePartsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsParams.html#import-detail","title":"MergePartsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsParams.html#property-detail","title":"MergePartsParams > Property detail","text":"Property detail\n\n\n\nproperty MergePartsParams.merged_part_suggested_name: str\n\nSuggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsParams.html#method-detail","title":"MergePartsParams > Method detail","text":"Method detail\n\n\n\nMergePartsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergePartsParams.__str__() -> str\n\n\n\n\n\nstatic MergePartsParams.print_default()\n\nPrint the default values of MergePartsParams object.\n\nExamples\n\n>>> MergePartsParams.print_default()\n\n\n\nstatic MergePartsParams.set_default(merged_part_suggested_name: str = None)\n\nSet the default values of the MergePartsParams object.\n\nParameters\n\nmerged_part_suggested_name (str, optional) – Suggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrol/VolumeControl.html#volumecontrol","title":"VolumeControl","text":"VolumeControl\n\n\n\nclass ansys.meshing.prime.autogen.volumecontrol.VolumeControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nVolume controls provide volume specific settings on volumes specified by scope and settings specified by parameters.\n\nParameters\n\nmodel (Model) – Server model to create VolumeControl object.\n\nid (int) – Id of the VolumeControl.\n\nobject_id (int) – Object id of the VolumeControl.\n\nname (str) – Name of the VolumeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrol/VolumeControl.html#overview","title":"VolumeControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_params\n\nGet the parameters of the volume control.\n\nget_scope\n\nGets the scope for the volume control.\n\nset_params\n\nSets the volume control parameters.\n\nset_scope\n\nSets the scope for volume control to evaluate.\n\nset_suggested_name\n\nSets the unique name for the volume control based on the given suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of VolumeControl.\n\nname\n\nGet the name of VolumeControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrol/VolumeControl.html#import-detail","title":"VolumeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrol/VolumeControl.html#property-detail","title":"VolumeControl > Property detail","text":"Property detail\n\n\n\nproperty VolumeControl.id\n\nGet the id of VolumeControl.\n\n\n\nproperty VolumeControl.name\n\nGet the name of VolumeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrol/VolumeControl.html#method-detail","title":"VolumeControl > Method detail","text":"Method detail\n\n\n\nVolumeControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeControl.get_params() -> ansys.meshing.prime.params.primestructs.VolumeControlParams\n\nGet the parameters of the volume control.\n\nReturns\n\nReturn parameters of the volume control.\n\nReturn type\n\nVolumeControlParams\n\nExamples\n\n>>> params = volume_control.get_params()\n\n\n\nVolumeControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the scope for the volume control.\n\nReturns\n\nReturns scope of the volume control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope_definition = volume_control.get_scope()\n\n\n\nVolumeControl.set_params(volume_control_params: ansys.meshing.prime.params.primestructs.VolumeControlParams)\n\nSets the volume control parameters.\n\nParameters\n\nvolume_control_params (VolumeControlParams) – Parameters to control volume.\n\nExamples\n\n>>> volume_control.set_params(\n>>>                  prime.VolumeControlParams(model=model,\n>>>                  cell_zonelet_type = prime.CellZoneletType.FLUID))\n\n\n\nVolumeControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the scope for volume control to evaluate.\n\nVolume control uses scope to evaluate entities for which volume mesh needs to be generated.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for volume mesh generation.\n\nReturns\n\nReturns a SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> volume_control.set_scope(prime.ScopeDefinition(model=model,\n>>>                        entity_type = ScopeEntity.VOLUMES,\n>>>                        evaluation_type = ScopeEvaluationType.ZONES,\n>>>                        zone_expression = \"vol_in\"))\n\n\n\nVolumeControl.set_suggested_name(name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for the volume control based on the given suggested name.\n\nParameters\n\nname (str) – Suggested name for the volume control.\n\nReturns\n\nReturns a name of the volume control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> volume_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/multizonecontrol/index.html#the-multizonecontrolpy-module","title":"The multizonecontrol.py module","text":"The multizonecontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/multizonecontrol/index.html#summary","title":"The multizonecontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMultiZoneControl\n\nMultiZoneControl provides a way to gather all the information required for MultiZone meshing.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/multizonecontrol/index.html#description","title":"The multizonecontrol.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/hextospline/index.html#the-hextosplinepy-module","title":"The hextospline.py module","text":"The hextospline.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/hextospline/index.html#summary","title":"The hextospline.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nHexToSpline\n\nConverts all-hex mesh to spline.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/hextospline/index.html#description","title":"The hextospline.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphBCParams.html#morphbcparams","title":"MorphBCParams","text":"MorphBCParams\n\n\n\nclass ansys.meshing.prime.MorphBCParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, morph_region_method: BCsVolumetricModality = None, morphable_layers: int = None, morph_region_box_extension: float = None, json_data: dict = None, **kwargs)\n\nMorphBCParams contains the input parameters for calculating the boundary conditions for a morphing problem.\n\nParameters\n\nmodel (Model) – Model to create a MorphBCParams object with default parameters.\n\nmorph_region_method (BCsVolumetricModality, optional) – Indicate options to identify morphable regions in the input volumetric mesh.\n\nmorphable_layers (int, optional) – Number of layers around defined boundary.\n\nmorph_region_box_extension (float, optional) – Percentage extension for the volumetric box.\n\njson_data (dict, optional) – JSON dictionary to create a MorphBCParams object with provided parameters.\n\nExamples\n\n>>> morph_bcparams = prime.MorphBCParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphBCParams.html#overview","title":"MorphBCParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmorph_region_box_extension\n\nPercentage extension for the volumetric box.\n\nmorph_region_method\n\nIndicate options to identify morphable regions in the input volumetric mesh.\n\nmorphable_layers\n\nNumber of layers around defined boundary.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MorphBCParams object.\n\nset_default\n\nSet the default values of the MorphBCParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphBCParams.html#import-detail","title":"MorphBCParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphBCParams.html#property-detail","title":"MorphBCParams > Property detail","text":"Property detail\n\n\n\nproperty MorphBCParams.morph_region_box_extension: float\n\nPercentage extension for the volumetric box.\n\n\n\nproperty MorphBCParams.morph_region_method: BCsVolumetricModality\n\nIndicate options to identify morphable regions in the input volumetric mesh.\n\n\n\nproperty MorphBCParams.morphable_layers: int\n\nNumber of layers around defined boundary."},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphBCParams.html#method-detail","title":"MorphBCParams > Method detail","text":"Method detail\n\n\n\nMorphBCParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMorphBCParams.__str__() -> str\n\n\n\n\n\nstatic MorphBCParams.print_default()\n\nPrint the default values of MorphBCParams object.\n\nExamples\n\n>>> MorphBCParams.print_default()\n\n\n\nstatic MorphBCParams.set_default(morph_region_method: BCsVolumetricModality = None, morphable_layers: int = None, morph_region_box_extension: float = None)\n\nSet the default values of the MorphBCParams object.\n\nParameters\n\nmorph_region_method (BCsVolumetricModality, optional) – Indicate options to identify morphable regions in the input volumetric mesh.\n\nmorphable_layers (int, optional) – Number of layers around defined boundary.\n\nmorph_region_box_extension (float, optional) – Percentage extension for the volumetric box."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/coreobject/index.html#the-coreobjectpy-module","title":"The coreobject.py module","text":"The coreobject.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/coreobject/index.html#summary","title":"The coreobject.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCoreObject\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/coreobject/index.html#description","title":"The coreobject.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryParams.html#projectongeometryparams","title":"ProjectOnGeometryParams","text":"ProjectOnGeometryParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.ProjectOnGeometryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, project_only_mid_nodes: bool = None, project_on_facets_if_cadnot_found: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to project topoface nodes on associated geometry.\n\nParameters\n\nmodel (Model) – Model to create a ProjectOnGeometryParams object with default parameters.\n\nproject_only_mid_nodes (bool, optional) – Option to project only the mid nodes.This is a beta parameter. The behavior and name may change in the future.\n\nproject_on_facets_if_cadnot_found (bool, optional) – Option to project on facet if geometry is not found.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ProjectOnGeometryParams object with provided parameters.\n\nExamples\n\n>>> project_on_geometry_params = prime.ProjectOnGeometryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryParams.html#overview","title":"ProjectOnGeometryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nproject_on_facets_if_cadnot_found\n\nOption to project on facet if geometry is not found.\n\nproject_only_mid_nodes\n\nOption to project only the mid nodes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ProjectOnGeometryParams object.\n\nset_default\n\nSet the default values of the ProjectOnGeometryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryParams.html#import-detail","title":"ProjectOnGeometryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryParams.html#property-detail","title":"ProjectOnGeometryParams > Property detail","text":"Property detail\n\n\n\nproperty ProjectOnGeometryParams.project_on_facets_if_cadnot_found: bool\n\nOption to project on facet if geometry is not found.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ProjectOnGeometryParams.project_only_mid_nodes: bool\n\nOption to project only the mid nodes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryParams.html#method-detail","title":"ProjectOnGeometryParams > Method detail","text":"Method detail\n\n\n\nProjectOnGeometryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nProjectOnGeometryParams.__str__() -> str\n\n\n\n\n\nstatic ProjectOnGeometryParams.print_default()\n\nPrint the default values of ProjectOnGeometryParams object.\n\nExamples\n\n>>> ProjectOnGeometryParams.print_default()\n\n\n\nstatic ProjectOnGeometryParams.set_default(project_only_mid_nodes: bool = None, project_on_facets_if_cadnot_found: bool = None)\n\nSet the default values of the ProjectOnGeometryParams object.\n\nParameters\n\nproject_only_mid_nodes (bool, optional) – Option to project only the mid nodes.\n\nproject_on_facets_if_cadnot_found (bool, optional) – Option to project on facet if geometry is not found."},{"objectID":"Home","href":"api/ansys/meshing/prime/ReadSizeFieldParams.html#readsizefieldparams","title":"ReadSizeFieldParams","text":"ReadSizeFieldParams\n\n\n\nclass ansys.meshing.prime.ReadSizeFieldParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to read size field file.\n\nParameters\n\nmodel (Model) – Model to create a ReadSizeFieldParams object with default parameters.\n\nappend (bool, optional) – Option to append the size fields from file.\n\njson_data (dict, optional) – JSON dictionary to create a ReadSizeFieldParams object with provided parameters.\n\nExamples\n\n>>> read_size_field_params = prime.ReadSizeFieldParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ReadSizeFieldParams.html#overview","title":"ReadSizeFieldParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append the size fields from file.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ReadSizeFieldParams object.\n\nset_default\n\nSet the default values of the ReadSizeFieldParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ReadSizeFieldParams.html#import-detail","title":"ReadSizeFieldParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ReadSizeFieldParams.html#property-detail","title":"ReadSizeFieldParams > Property detail","text":"Property detail\n\n\n\nproperty ReadSizeFieldParams.append: bool\n\nOption to append the size fields from file."},{"objectID":"Home","href":"api/ansys/meshing/prime/ReadSizeFieldParams.html#method-detail","title":"ReadSizeFieldParams > Method detail","text":"Method detail\n\n\n\nReadSizeFieldParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nReadSizeFieldParams.__str__() -> str\n\n\n\n\n\nstatic ReadSizeFieldParams.print_default()\n\nPrint the default values of ReadSizeFieldParams object.\n\nExamples\n\n>>> ReadSizeFieldParams.print_default()\n\n\n\nstatic ReadSizeFieldParams.set_default(append: bool = None)\n\nSet the default values of the ReadSizeFieldParams object.\n\nParameters\n\nappend (bool, optional) – Option to append the size fields from file."},{"objectID":"Home","href":"api/ansys/meshing/prime/IGASpline.html#igaspline","title":"IGASpline","text":"IGASpline\n\n\n\nclass ansys.meshing.prime.IGASpline(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id: int = None, json_data: dict = None, **kwargs)\n\nInformation of the spline.\n\nParameters\n\nmodel (Model) – Model to create a IGASpline object with default parameters.\n\nid (int, optional) – Unique id of the spline.\n\njson_data (dict, optional) – JSON dictionary to create a IGASpline object with provided parameters.\n\nExamples\n\n>>> iga_spline = prime.IGASpline(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGASpline.html#overview","title":"IGASpline > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nUnique id of the spline.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IGASpline object.\n\nset_default\n\nSet the default values of the IGASpline object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGASpline.html#import-detail","title":"IGASpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGASpline.html#property-detail","title":"IGASpline > Property detail","text":"Property detail\n\n\n\nproperty IGASpline.id: int\n\nUnique id of the spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/IGASpline.html#method-detail","title":"IGASpline > Method detail","text":"Method detail\n\n\n\nIGASpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIGASpline.__str__() -> str\n\n\n\n\n\nstatic IGASpline.print_default()\n\nPrint the default values of IGASpline object.\n\nExamples\n\n>>> IGASpline.print_default()\n\n\n\nstatic IGASpline.set_default(id: int = None)\n\nSet the default values of the IGASpline object.\n\nParameters\n\nid (int, optional) – Unique id of the spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_solder_ball_target_fmd.html#ansysmeshingprimeexamplesdownload_solder_ball_target_fmd","title":"ansys.meshing.prime.examples.download_solder_ball_target_fmd","text":"ansys.meshing.prime.examples.download_solder_ball_target_fmd\n\n\n\nansys.meshing.prime.examples.download_solder_ball_target_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload a FMD file for the solder ball example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     solder_ball_target = prime_examples.download_solder_ball_target_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(solder_ball_target, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_saddle_bracket_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_saddle_bracket_scdoc","title":"ansys.meshing.prime.examples.examples.download_saddle_bracket_scdoc","text":"ansys.meshing.prime.examples.examples.download_saddle_bracket_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_saddle_bracket_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload SCDOC file for the saddle bracket example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryResults.html#partsummaryresults","title":"PartSummaryResults","text":"PartSummaryResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.PartSummaryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, message: str = None, n_topo_edges: int = None, n_topo_faces: int = None, n_topo_volumes: int = None, n_edge_zonelets: int = None, n_face_zonelets: int = None, n_cell_zonelets: int = None, n_edge_zones: int = None, n_face_zones: int = None, n_volume_zones: int = None, n_labels: int = None, n_nodes: int = None, n_faces: int = None, n_cells: int = None, n_tri_faces: int = None, n_poly_faces: int = None, n_quad_faces: int = None, n_second_order_tri_faces: int = None, n_second_order_quad_faces: int = None, n_tet_cells: int = None, n_pyra_cells: int = None, n_prism_cells: int = None, n_poly_cells: int = None, n_hex_cells: int = None, n_second_order_tet_cells: int = None, n_second_order_pyra_cells: int = None, n_second_order_prism_cells: int = None, n_second_order_hex_cells: int = None, n_unmeshed_topo_faces: int = None, json_data: dict = None, **kwargs)\n\nResults of part summary.\n\nParameters\n\nmodel (Model) – Model to create a PartSummaryResults object with default parameters.\n\nmessage (str, optional) – Part summary text.\n\nn_topo_edges (int, optional) – Number of topoedges.\n\nn_topo_faces (int, optional) – Number of topofaces.\n\nn_topo_volumes (int, optional) – Number of topovolumes.\n\nn_edge_zonelets (int, optional) – Number of edge zonelets.\n\nn_face_zonelets (int, optional) – Number of face zonelets.\n\nn_cell_zonelets (int, optional) – Number of cell zonelets.\n\nn_edge_zones (int, optional) – Number of edge zones.\n\nn_face_zones (int, optional) – Number of face zones.\n\nn_volume_zones (int, optional) – Number of volume zones.\n\nn_labels (int, optional) – Number of labels.\n\nn_nodes (int, optional) – Number of nodes.\n\nn_faces (int, optional) – Number of faces.\n\nn_cells (int, optional) – Number of cells.\n\nn_tri_faces (int, optional) – Number of triangular faces.\n\nn_poly_faces (int, optional) – Number of polygonal faces.\n\nn_quad_faces (int, optional) – Number of quadrilateral faces.\n\nn_second_order_tri_faces (int, optional) – Number of second order triangular faces.\n\nn_second_order_quad_faces (int, optional) – Number of second order quadrilateral faces.\n\nn_tet_cells (int, optional) – Number of tetrahedral cells.\n\nn_pyra_cells (int, optional) – Number of pyramid cells.\n\nn_prism_cells (int, optional) – Number of prism cells.\n\nn_poly_cells (int, optional) – Number of polyhedral cells.\n\nn_hex_cells (int, optional) – Number of hexahedral cells.\n\nn_second_order_tet_cells (int, optional) – Number of second order tetrahedral cells.\n\nn_second_order_pyra_cells (int, optional) – Number of second order pyramid cells.\n\nn_second_order_prism_cells (int, optional) – Number of second order prism cells.\n\nn_second_order_hex_cells (int, optional) – Number of second order hexahedral cells.\n\nn_unmeshed_topo_faces (int, optional) – Number of unmeshed topofaces.\n\njson_data (dict, optional) – JSON dictionary to create a PartSummaryResults object with provided parameters.\n\nExamples\n\n>>> part_summary_results = prime.PartSummaryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryResults.html#overview","title":"PartSummaryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmessage\n\nPart summary text.\n\nn_cell_zonelets\n\nNumber of cell zonelets.\n\nn_cells\n\nNumber of cells.\n\nn_edge_zonelets\n\nNumber of edge zonelets.\n\nn_edge_zones\n\nNumber of edge zones.\n\nn_face_zonelets\n\nNumber of face zonelets.\n\nn_face_zones\n\nNumber of face zones.\n\nn_faces\n\nNumber of faces.\n\nn_hex_cells\n\nNumber of hexahedral cells.\n\nn_labels\n\nNumber of labels.\n\nn_nodes\n\nNumber of nodes.\n\nn_poly_cells\n\nNumber of polyhedral cells.\n\nn_poly_faces\n\nNumber of polygonal faces.\n\nn_prism_cells\n\nNumber of prism cells.\n\nn_pyra_cells\n\nNumber of pyramid cells.\n\nn_quad_faces\n\nNumber of quadrilateral faces.\n\nn_second_order_hex_cells\n\nNumber of second order hexahedral cells.\n\nn_second_order_prism_cells\n\nNumber of second order prism cells.\n\nn_second_order_pyra_cells\n\nNumber of second order pyramid cells.\n\nn_second_order_quad_faces\n\nNumber of second order quadrilateral faces.\n\nn_second_order_tet_cells\n\nNumber of second order tetrahedral cells.\n\nn_second_order_tri_faces\n\nNumber of second order triangular faces.\n\nn_tet_cells\n\nNumber of tetrahedral cells.\n\nn_topo_edges\n\nNumber of topoedges.\n\nn_topo_faces\n\nNumber of topofaces.\n\nn_topo_volumes\n\nNumber of topovolumes.\n\nn_tri_faces\n\nNumber of triangular faces.\n\nn_unmeshed_topo_faces\n\nNumber of unmeshed topofaces.\n\nn_volume_zones\n\nNumber of volume zones.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PartSummaryResults object.\n\nset_default\n\nSet the default values of the PartSummaryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryResults.html#import-detail","title":"PartSummaryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryResults.html#property-detail","title":"PartSummaryResults > Property detail","text":"Property detail\n\n\n\nproperty PartSummaryResults.message: str\n\nPart summary text.\n\n\n\nproperty PartSummaryResults.n_cell_zonelets: int\n\nNumber of cell zonelets.\n\n\n\nproperty PartSummaryResults.n_cells: int\n\nNumber of cells.\n\n\n\nproperty PartSummaryResults.n_edge_zonelets: int\n\nNumber of edge zonelets.\n\n\n\nproperty PartSummaryResults.n_edge_zones: int\n\nNumber of edge zones.\n\n\n\nproperty PartSummaryResults.n_face_zonelets: int\n\nNumber of face zonelets.\n\n\n\nproperty PartSummaryResults.n_face_zones: int\n\nNumber of face zones.\n\n\n\nproperty PartSummaryResults.n_faces: int\n\nNumber of faces.\n\n\n\nproperty PartSummaryResults.n_hex_cells: int\n\nNumber of hexahedral cells.\n\n\n\nproperty PartSummaryResults.n_labels: int\n\nNumber of labels.\n\n\n\nproperty PartSummaryResults.n_nodes: int\n\nNumber of nodes.\n\n\n\nproperty PartSummaryResults.n_poly_cells: int\n\nNumber of polyhedral cells.\n\n\n\nproperty PartSummaryResults.n_poly_faces: int\n\nNumber of polygonal faces.\n\n\n\nproperty PartSummaryResults.n_prism_cells: int\n\nNumber of prism cells.\n\n\n\nproperty PartSummaryResults.n_pyra_cells: int\n\nNumber of pyramid cells.\n\n\n\nproperty PartSummaryResults.n_quad_faces: int\n\nNumber of quadrilateral faces.\n\n\n\nproperty PartSummaryResults.n_second_order_hex_cells: int\n\nNumber of second order hexahedral cells.\n\n\n\nproperty PartSummaryResults.n_second_order_prism_cells: int\n\nNumber of second order prism cells.\n\n\n\nproperty PartSummaryResults.n_second_order_pyra_cells: int\n\nNumber of second order pyramid cells.\n\n\n\nproperty PartSummaryResults.n_second_order_quad_faces: int\n\nNumber of second order quadrilateral faces.\n\n\n\nproperty PartSummaryResults.n_second_order_tet_cells: int\n\nNumber of second order tetrahedral cells.\n\n\n\nproperty PartSummaryResults.n_second_order_tri_faces: int\n\nNumber of second order triangular faces.\n\n\n\nproperty PartSummaryResults.n_tet_cells: int\n\nNumber of tetrahedral cells.\n\n\n\nproperty PartSummaryResults.n_topo_edges: int\n\nNumber of topoedges.\n\n\n\nproperty PartSummaryResults.n_topo_faces: int\n\nNumber of topofaces.\n\n\n\nproperty PartSummaryResults.n_topo_volumes: int\n\nNumber of topovolumes.\n\n\n\nproperty PartSummaryResults.n_tri_faces: int\n\nNumber of triangular faces.\n\n\n\nproperty PartSummaryResults.n_unmeshed_topo_faces: int\n\nNumber of unmeshed topofaces.\n\n\n\nproperty PartSummaryResults.n_volume_zones: int\n\nNumber of volume zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryResults.html#method-detail","title":"PartSummaryResults > Method detail","text":"Method detail\n\n\n\nPartSummaryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPartSummaryResults.__str__() -> str\n\n\n\n\n\nstatic PartSummaryResults.print_default()\n\nPrint the default values of PartSummaryResults object.\n\nExamples\n\n>>> PartSummaryResults.print_default()\n\n\n\nstatic PartSummaryResults.set_default(message: str = None, n_topo_edges: int = None, n_topo_faces: int = None, n_topo_volumes: int = None, n_edge_zonelets: int = None, n_face_zonelets: int = None, n_cell_zonelets: int = None, n_edge_zones: int = None, n_face_zones: int = None, n_volume_zones: int = None, n_labels: int = None, n_nodes: int = None, n_faces: int = None, n_cells: int = None, n_tri_faces: int = None, n_poly_faces: int = None, n_quad_faces: int = None, n_second_order_tri_faces: int = None, n_second_order_quad_faces: int = None, n_tet_cells: int = None, n_pyra_cells: int = None, n_prism_cells: int = None, n_poly_cells: int = None, n_hex_cells: int = None, n_second_order_tet_cells: int = None, n_second_order_pyra_cells: int = None, n_second_order_prism_cells: int = None, n_second_order_hex_cells: int = None, n_unmeshed_topo_faces: int = None)\n\nSet the default values of the PartSummaryResults object.\n\nParameters\n\nmessage (str, optional) – Part summary text.\n\nn_topo_edges (int, optional) – Number of topoedges.\n\nn_topo_faces (int, optional) – Number of topofaces.\n\nn_topo_volumes (int, optional) – Number of topovolumes.\n\nn_edge_zonelets (int, optional) – Number of edge zonelets.\n\nn_face_zonelets (int, optional) – Number of face zonelets.\n\nn_cell_zonelets (int, optional) – Number of cell zonelets.\n\nn_edge_zones (int, optional) – Number of edge zones.\n\nn_face_zones (int, optional) – Number of face zones.\n\nn_volume_zones (int, optional) – Number of volume zones.\n\nn_labels (int, optional) – Number of labels.\n\nn_nodes (int, optional) – Number of nodes.\n\nn_faces (int, optional) – Number of faces.\n\nn_cells (int, optional) – Number of cells.\n\nn_tri_faces (int, optional) – Number of triangular faces.\n\nn_poly_faces (int, optional) – Number of polygonal faces.\n\nn_quad_faces (int, optional) – Number of quadrilateral faces.\n\nn_second_order_tri_faces (int, optional) – Number of second order triangular faces.\n\nn_second_order_quad_faces (int, optional) – Number of second order quadrilateral faces.\n\nn_tet_cells (int, optional) – Number of tetrahedral cells.\n\nn_pyra_cells (int, optional) – Number of pyramid cells.\n\nn_prism_cells (int, optional) – Number of prism cells.\n\nn_poly_cells (int, optional) – Number of polyhedral cells.\n\nn_hex_cells (int, optional) – Number of hexahedral cells.\n\nn_second_order_tet_cells (int, optional) – Number of second order tetrahedral cells.\n\nn_second_order_pyra_cells (int, optional) – Number of second order pyramid cells.\n\nn_second_order_prism_cells (int, optional) – Number of second order prism cells.\n\nn_second_order_hex_cells (int, optional) – Number of second order hexahedral cells.\n\nn_unmeshed_topo_faces (int, optional) – Number of unmeshed topofaces."},{"objectID":"Home","href":"user_guide/surfer.html#surface-meshing","title":"Surface meshing","text":"Surface meshing\n\nThe Surfer class enables you to perform surface meshing using\ndifferent surface meshing algorithms on TopoFaces or face zonelets. Surface meshing considers many\nparameters, such as size field type, minimum size, maximum size, growth rate, and transition type,\nwhile meshing TopoFaces or face zonelets.\n\nSurface meshing with constant and variable sizing with tri/quad mesh can be generated using\nthe Mesh.surface_mesh() method in the Lucid API."},{"objectID":"Home","href":"user_guide/surfer.html#surface-meshing-geometrytopology","title":"Surface meshing > Surface meshing geometry/topology","text":"Surface meshing geometry/topology\n\nThe following example shows how to perform these steps:\n\nImport topology-based geometry (SCDOC) files and visualize the model.\n\nSurface mesh the TopoFaces with constant size.\n\nStart the PyPrimeMesh client and import the CAD geometry (SCDOC) file:\n\nInitialize surfer parameters and generate surface mesh on TopoFaces:"},{"objectID":"Home","href":"user_guide/surfer.html#remesh-surfaces","title":"Surface meshing > Remesh surfaces","text":"Remesh surfaces\n\nThis example shows you to perform these steps:\n\nImport a faceted geometry (STL) file and visualize the model.\n\nCreate curvature size control and compute a volumetric size field. (For more information,\nsee ref_index_sizing.)\n\nRemesh the STL surface mesh.\n\nStart the PyPrimeMesh client and import the faceted geometry (STL) file:\n\nNow that the CAD file is imported, display the model using graphics module:\n\nPrint the results of part summary:\n\nSet the global sizing parameters to initialize size control parameters (with curvature refinement):\n\nCompute the volumetric size field based on the size controls:\n\nInitialize surfer parameters and generate a surface mesh on face zonelets:"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrolstructs/ShellBLControlGrowthParams.html#shellblcontrolgrowthparams","title":"ShellBLControlGrowthParams","text":"ShellBLControlGrowthParams\n\n\n\nclass ansys.meshing.prime.autogen.shellblcontrolstructs.ShellBLControlGrowthParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_layers: int = None, offset_type: ansys.meshing.prime.params.primestructs.ShellBLOffsetType = None, growth_rate: float = None, first_height: float = None, json_data: dict = None, **kwargs)\n\nGrowth parameters for ShellBL control.\n\nParameters\n\nmodel (Model) – Model to create a ShellBLControlGrowthParams object with default parameters.\n\nn_layers (int, optional) – Number of layers to be generated.This is a beta parameter. The behavior and name may change in the future.\n\noffset_type (ShellBLOffsetType, optional) – Offset type for ShellBL.This is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate (float, optional) – Ratio of height of the current layer to the previous layer.This is a beta parameter. The behavior and name may change in the future.\n\nfirst_height (float, optional) – Height of first layer of ShellBL.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ShellBLControlGrowthParams object with provided parameters.\n\nExamples\n\n>>> shell_bl_control_growth_params = prime.ShellBLControlGrowthParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrolstructs/ShellBLControlGrowthParams.html#overview","title":"ShellBLControlGrowthParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nfirst_height\n\nHeight of first layer of ShellBL.\n\ngrowth_rate\n\nRatio of height of the current layer to previous layer.\n\nn_layers\n\nNumber of layers to be generated.\n\noffset_type\n\nOffset type for ShellBL.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ShellBLControlGrowthParams object.\n\nset_default\n\nSet the default values of the ShellBLControlGrowthParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrolstructs/ShellBLControlGrowthParams.html#import-detail","title":"ShellBLControlGrowthParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrolstructs/ShellBLControlGrowthParams.html#property-detail","title":"ShellBLControlGrowthParams > Property detail","text":"Property detail\n\n\n\nproperty ShellBLControlGrowthParams.first_height: float\n\nHeight of first layer of ShellBL.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ShellBLControlGrowthParams.growth_rate: float\n\nRatio of height of the current layer to previous layer.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ShellBLControlGrowthParams.n_layers: int\n\nNumber of layers to be generated.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ShellBLControlGrowthParams.offset_type: ansys.meshing.prime.params.primestructs.ShellBLOffsetType\n\nOffset type for ShellBL.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrolstructs/ShellBLControlGrowthParams.html#method-detail","title":"ShellBLControlGrowthParams > Method detail","text":"Method detail\n\n\n\nShellBLControlGrowthParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nShellBLControlGrowthParams.__str__() -> str\n\n\n\n\n\nstatic ShellBLControlGrowthParams.print_default()\n\nPrint the default values of ShellBLControlGrowthParams object.\n\nExamples\n\n>>> ShellBLControlGrowthParams.print_default()\n\n\n\nstatic ShellBLControlGrowthParams.set_default(n_layers: int = None, offset_type: ansys.meshing.prime.params.primestructs.ShellBLOffsetType = None, growth_rate: float = None, first_height: float = None)\n\nSet the default values of the ShellBLControlGrowthParams object.\n\nParameters\n\nn_layers (int, optional) – Number of layers to be generated.\n\noffset_type (ShellBLOffsetType, optional) – Offset type for ShellBL.\n\ngrowth_rate (float, optional) – Ratio of height of the current layer to the previous layer.\n\nfirst_height (float, optional) – Height of first layer of ShellBL."},{"objectID":"Home","href":"api/ansys/meshing/prime/SFPeriodicParams.html#sfperiodicparams","title":"SFPeriodicParams","text":"SFPeriodicParams\n\n\n\nclass ansys.meshing.prime.SFPeriodicParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, axis: ansys.meshing.prime.params.primestructs.Iterable[float] = None, angle: float = None, center: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nParameters for setting periodic size fields.\n\nParameters\n\nmodel (Model) – Model to create a SFPeriodicParams object with default parameters.\n\naxis (Iterable[float], optional) – Axis vector coordinates.\n\nangle (float, optional) – Angle in degrees.\n\ncenter (Iterable[float], optional) – Center coordinates.\n\njson_data (dict, optional) – JSON dictionary to create a SFPeriodicParams object with provided parameters.\n\nExamples\n\n>>> s_fperiodic_params = prime.SFPeriodicParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SFPeriodicParams.html#overview","title":"SFPeriodicParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nangle\n\nAngle in degrees.\n\naxis\n\nAxis vector coordinates.\n\ncenter\n\nCenter coordinates.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SFPeriodicParams object.\n\nset_default\n\nSet the default values of the SFPeriodicParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SFPeriodicParams.html#import-detail","title":"SFPeriodicParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SFPeriodicParams.html#property-detail","title":"SFPeriodicParams > Property detail","text":"Property detail\n\n\n\nproperty SFPeriodicParams.angle: float\n\nAngle in degrees.\n\n\n\nproperty SFPeriodicParams.axis: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nAxis vector coordinates.\n\n\n\nproperty SFPeriodicParams.center: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCenter coordinates."},{"objectID":"Home","href":"api/ansys/meshing/prime/SFPeriodicParams.html#method-detail","title":"SFPeriodicParams > Method detail","text":"Method detail\n\n\n\nSFPeriodicParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSFPeriodicParams.__str__() -> str\n\n\n\n\n\nstatic SFPeriodicParams.print_default()\n\nPrint the default values of SFPeriodicParams object.\n\nExamples\n\n>>> SFPeriodicParams.print_default()\n\n\n\nstatic SFPeriodicParams.set_default(axis: ansys.meshing.prime.params.primestructs.Iterable[float] = None, angle: float = None, center: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the SFPeriodicParams object.\n\nParameters\n\naxis (Iterable[float], optional) – Axis vector coordinates.\n\nangle (float, optional) – Angle in degrees.\n\ncenter (Iterable[float], optional) – Center coordinates."},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshInfo.html#meshinfo","title":"MeshInfo","text":"MeshInfo\n\n\n\nclass ansys.meshing.prime.MeshInfo(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nMeshInfo provides information about the mesh connectivity and more.\n\nMesh connectivity information is used in graphics rendering.\n\nParameters\n\nmodel (Model) – Server model to create MeshInfo object."},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshInfo.html#overview","title":"MeshInfo > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_face_and_edge_connectivity\n\nGets the connectivity of face and edge zonelets of the given part ids.\n\nget_statistics_of_cell_zonelets\n\nGets cell statistics of given cell zonelets using provided cell statistics parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for MeshInfo.\n\n__exit__\n\nExit context for MeshInfo.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshInfo.html#import-detail","title":"MeshInfo > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshInfo.html#method-detail","title":"MeshInfo > Method detail","text":"Method detail\n\n\n\nMeshInfo.__enter__()\n\nEnter context for MeshInfo.\n\n\n\nMeshInfo.__exit__(type, value, traceback)\n\nExit context for MeshInfo.\n\n\n\nMeshInfo.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMeshInfo.get_face_and_edge_connectivity(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.FaceAndEdgeConnectivityParams) -> ansys.meshing.prime.params.primestructs.FaceAndEdgeConnectivityResults\n\nGets the connectivity of face and edge zonelets of the given part ids.\n\nConnectivity result is used in graphics rendering.\n\nParameters\n\npart_ids (Iterable[int]) – Ids of the part.\n\nparams (FaceAndEdgeConnectivityParams) – Parameters to get connectivity of face zonelets and edge zonelets.\n\nReturns\n\nReturns the FaceAndEdgeConnectivityResults.\n\nReturn type\n\nFaceAndEdgeConnectivityResults\n\nExamples\n\n>>> mesh_info = prime.MeshInfo(model)\n>>> part_ids = [part.id for part in model.parts]\n>>> result = mesh_info.get_face_and_edge_connectivity(part_ids,\n>>>                  prime.FaceAndEdgeConnectivityParams(model =model))\n\n\n\nMeshInfo.get_statistics_of_cell_zonelets(cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CellStatisticsParams) -> ansys.meshing.prime.params.primestructs.CellStatisticsResults\n\nGets cell statistics of given cell zonelets using provided cell statistics parameters.\n\nParameters\n\ncell_zonelets (Iterable[int]) – Ids of cell zonelets for which statistics are calculated.\n\nparams (CellStatisticsParams) – Parameters to get cells statistics.\n\nReturns\n\nReturns the CellStatisticsResults.\n\nReturn type\n\nCellStatisticsResults\n\nExamples\n\n>>> mesh_info = prime.MeshInfo(model)\n>>> part = model.get_part_by_name(\"part_name\")\n>>> result = mesh_info.get_statistics_of_cell_zonelets(part.get_cell_zonelets(),\n>>>                  prime.CellStatisticsParams(model=model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/part/Part.html#part","title":"Part","text":"Part\n\n\n\nclass ansys.meshing.prime.autogen.part.Part(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nPart contains zonelets and topoentities.\n\nTopoentities and zonelets are characterized by dimension of entities.\nZonelets are a group of interconnected elements in a mesh. There are three types of zonelets. They are:\n\nFaceZonelet: A group of interconnected face elements.\n\nEdgeZonelet: A group of interconnected edge elements.\n\nCellZonelet: A group of interconnected cell elements.\n\nTopoentities represent connectivity information.\nTopoentities can be queried from higher order to lower order topoentities and vice versa.\nTopoentities have geometric representation which may be defined by splines or facets.\nThe mesh generated on topoentities will be projected on geometry representation.\n\nTopoFace: Topoentity representing surfaces.\n\nTopoEdge: Topoentity representing curves.\n\nTopoVolume: Topoentity representing volumes.\n\nParameters\n\nmodel (Model) – Server model to create Part object.\n\nid (int) – Id of the Part.\n\nobject_id (int) – Object id of the Part.\n\nname (str) – Name of the Part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/part/Part.html#overview","title":"Part > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_labels_on_topo_entities\n\nAdd the given labels on the provided topoentities.\n\nadd_labels_on_zonelets\n\nAdd the given labels on the provided zonelets.\n\nadd_topo_entities_to_zone\n\nAdd topoentities to zone.\n\nadd_volumes_to_zone\n\nAdd volumes to zone.\n\nadd_zonelets_to_zone\n\nAdd zonelets to zone.\n\ncompute_closed_volumes\n\nComputes volume by identifying closed volumes defined by face zonelets of the part.\n\ncompute_topo_volumes\n\nCompute topovolumes by identifying closed volumes defined by topofaces of the part.\n\ndelete_topo_entities\n\nDelete topoentities of part controled by parameters.\n\ndelete_volumes\n\nDelete volumes by deleting its face zonelets.\n\ndelete_zonelets\n\nDelete given face zonelets.\n\nextract_topo_volumes\n\nExtract topovolumes connected to given cap topofaces.\n\nextract_volumes\n\nExtract volumes connected to given face zonelets.\n\nget_adjacent_face_zonelets_of_face_zonelets\n\nGets the adjacent facezonelets for the provided facezonelet ids.\n\nget_adjacent_volumes_of_volumes\n\nGet the adjacent volumes for the provided volume ids.\n\nget_cell_zonelets\n\nGet the cell zonelet ids in the part.\n\nget_component_children_by_path\n\nGets the child components for a component using the given parameters.\n\nget_components_by_path_expression\n\nGets component names with the provided path expression.\n\nget_edge_zonelets\n\nGet the edge zonelets of a part.\n\nget_edge_zonelets_of_label_name_pattern\n\nGet edge zonelet ids of labels with name matching the given name pattern.\n\nget_edge_zones\n\nGet all the edge zones of the part.\n\nget_face_zone_of_zonelet\n\nGets the face zone of given zonelet.\n\nget_face_zonelets\n\nGet the face zonelets of a part.\n\nget_face_zonelets_of_component_body_name_pattern\n\nGets face zonelet ids belonging to components or bodies with name matching the given name pattern.\n\nget_face_zonelets_of_label_name_pattern\n\nGet face zonelet ids of labels with name matching the given name pattern.\n\nget_face_zonelets_of_volumes\n\nGet the face zonelets of given volumes.\n\nget_face_zonelets_of_zone_name_pattern\n\nGet ids of face zonelets of zones with name matching the given name pattern.\n\nget_face_zones\n\nGet all the face zones of the part.\n\nget_face_zones_of_name_pattern\n\nGet ids of face zones with name matching the given name pattern.\n\nget_labels\n\nGet all labels on entities of part.\n\nget_labels_on_zonelet\n\nGets labels associated with zonelet.\n\nget_name\n\nGets the name of the Part.\n\nget_splines\n\nGets the list of spline ids.\n\nget_summary\n\nGet the part summary.\n\nget_topo_edges\n\nGet the topoedges of a part.\n\nget_topo_edges_of_label_name_pattern\n\nGet topoedge ids of labels with name matching the given name pattern.\n\nget_topo_faces\n\nGet the topofaces of a part.\n\nget_topo_faces_of_component_body_name_pattern\n\nGets topoface ids of component or bodies with name matching the given name pattern.\n\nget_topo_faces_of_label_name_pattern\n\nGet topoface ids of labels with name matching the given name pattern.\n\nget_topo_faces_of_topo_volumes\n\nGets the topofaces of given topovolumes.\n\nget_topo_faces_of_zone_name_pattern\n\nGet topoface ids of zones with name matching the given name pattern.\n\nget_topo_volumes\n\nGet topovolumes of part.\n\nget_topo_volumes_of_label_name_pattern\n\nGets the topovolumes of labels of the given label name expression.\n\nget_topo_volumes_of_zone_name_pattern\n\nGets the topovolume ids of zones with name matching the given name pattern.\n\nget_unstructured_spline_solid\n\nGets the unstructured solid spline for the part.\n\nget_unstructured_spline_surface\n\nGets the unstructured surface spline for the part.\n\nget_volume_zone_of_volume\n\nGets the volume zone of given volume.\n\nget_volume_zones\n\nGet all the volume zones of the part.\n\nget_volume_zones_of_name_pattern\n\nGet ids of volume zones with name matching the given name pattern.\n\nget_volumes\n\nGet all the volumes of the part.\n\nget_volumes_of_face_zonelet\n\nGet volume ids of given face zonelet.\n\nget_volumes_of_zone_name_pattern\n\nGet volume ids of zones with name matching the given name pattern.\n\nmerge_volumes\n\nMerge volumes by removing shared face zonelets.\n\nmerge_zonelets\n\nMerge zonelets.\n\nremove_labels_from_topo_entities\n\nRemove the given labels from the provided topoentities.\n\nremove_labels_from_zonelets\n\nRemove the given labels from the provided zonelets.\n\nremove_zone_on_topo_entities\n\nRemoves zone on the given topoentities.\n\nremove_zone_on_volumes\n\nRemoves zone on the given volumes.\n\nremove_zone_on_zonelets\n\nRemoves zone on the given zonelets.\n\nset_suggested_name\n\nSets the unique name for the part based on the suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of Part.\n\nname\n\nGet the name of Part.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/part/Part.html#import-detail","title":"Part > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/part/Part.html#property-detail","title":"Part > Property detail","text":"Property detail\n\n\n\nproperty Part.id\n\nGet the id of Part.\n\n\n\nproperty Part.name\n\nGet the name of Part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/part/Part.html#method-detail","title":"Part > Method detail","text":"Method detail\n\n\n\nPart.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPart.add_labels_on_topo_entities(labels: List[str], topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddLabelResults\n\nAdd the given labels on the provided topoentities.\n\nParameters\n\nlabels (List[str]) – Labels to be added on topoentities.\n\ntopo_entities (Iterable[int]) – Ids of topoentities.\n\nReturns\n\nReturns the AddLabelResults.\n\nReturn type\n\nAddLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.add_labels_on_topo_entities(labels, topo_entities)\n\n\n\nPart.add_labels_on_zonelets(labels: List[str], zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddLabelResults\n\nAdd the given labels on the provided zonelets.\n\nParameters\n\nlabels (List[str]) – Labels to be added on zonelets.\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns the AddLabelResults.\n\nReturn type\n\nAddLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.add_labels_on_zonelets(labels, zonelets)\n\n\n\nPart.add_topo_entities_to_zone(zone_id: int, topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd topoentities to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\ntopo_entities (Iterable[int]) – Ids of topoentities to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_topo_entities_to_zone(zone_id, topo_entities)\n\n\n\nPart.add_volumes_to_zone(zone_id: int, volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd volumes to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\nvolumes (Iterable[int]) – Ids of volumes to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_volumes_to_zone(zone_id, volumes)\n\n\n\nPart.add_zonelets_to_zone(zone_id: int, zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd zonelets to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\nzonelets (Iterable[int]) – Ids of zonelets to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_zonelets_to_zone(zone_id, zonelets)\n\n\n\nPart.compute_closed_volumes(params: ansys.meshing.prime.params.primestructs.ComputeVolumesParams) -> ansys.meshing.prime.params.primestructs.ComputeVolumesResults\n\nComputes volume by identifying closed volumes defined by face zonelets of the part.\n\nParameters\n\nparams (ComputeVolumesParams) – Parameters to compute volumes.\n\nReturns\n\nReturns the ComputeVolumesResults.\n\nReturn type\n\nComputeVolumesResults\n\nExamples\n\n>>> params = prime.ComputeVolumesParams(model = model, create_zones_type = prime.CreateVolumeZonesType.PERVOLUME)\n>>> results = part.compute_closed_volumes(params)\n\n\n\nPart.compute_topo_volumes(params: ansys.meshing.prime.params.primestructs.ComputeVolumesParams) -> ansys.meshing.prime.params.primestructs.ComputeTopoVolumesResults\n\nCompute topovolumes by identifying closed volumes defined by topofaces of the part.\n\nParameters\n\nparams (ComputeVolumesParams) – Parameters to compute topovolumes.\n\nReturns\n\nReturn the ComputeTopoVolumesResults.\n\nReturn type\n\nComputeTopoVolumesResults\n\nExamples\n\n>>> params = prime.ComputeVolumesParams(model = model, create_zones_type = prime.CreateVolumeZonesType.PERVOLUME)\n>>> results = part.compute_topo_volumes(params)\n\n\n\nPart.delete_topo_entities(params: ansys.meshing.prime.params.primestructs.DeleteTopoEntitiesParams) -> ansys.meshing.prime.params.primestructs.DeleteTopoEntitiesResults\n\nDelete topoentities of part controled by parameters.\n\nParameters\n\nparams (DeleteTopoEntitiesParams) – Parameters for control delete topoentities operation.\n\nReturns\n\nReturn results of delete topoentities.\n\nReturn type\n\nDeleteTopoEntitiesResults\n\nExamples\n\n>>> results = part.delete_topo_entities(params)\n\n\n\nPart.delete_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DeleteVolumesParams) -> ansys.meshing.prime.params.primestructs.DeleteVolumesResults\n\nDelete volumes by deleting its face zonelets.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes to be deleted.\n\nparams (DeleteVolumesParams) – Parameters to delete volumes.\n\nReturns\n\nReturns the DeleteVolumesResults.\n\nReturn type\n\nDeleteVolumesResults\n\nExamples\n\nparams = prime.DeleteVolumesParams(model = model)\nresults = part.delete_volumes(volumes, params)\n\n\n\nPart.delete_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.DeleteResults\n\nDelete given face zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets to be deleted.\n\nReturns\n\nReturn DeleteResults.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = part.delete_zonelets(zonelets)\n\n\n\nPart.extract_topo_volumes(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ExtractTopoVolumesParams) -> ansys.meshing.prime.params.primestructs.ExtractTopoVolumesResults\n\nExtract topovolumes connected to given cap topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces connected to topovolumes.\n\nparams (ExtractTopoVolumesParams) – Parameters to compute topovolumes.\n\nReturns\n\nReturn the ExtractTopoVolumesResults.\n\nReturn type\n\nExtractTopoVolumesResults\n\nExamples\n\n>>> results = part.extract_flow_topo_volumes(topo_faces, params)\n\n\n\nPart.extract_volumes(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ExtractVolumesParams) -> ansys.meshing.prime.params.primestructs.ExtractVolumesResults\n\nExtract volumes connected to given face zonelets.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of face zonelets connected to volumes.\n\nparams (ExtractVolumesParams) – Parameters to compute volumes.\n\nReturns\n\nReturn the ExtractVolumesResults.\n\nReturn type\n\nExtractVolumesResults\n\nExamples\n\n>>> results = part.extract_volumes(face_zonelets, params)\n\n\n\nPart.get_adjacent_face_zonelets_of_face_zonelets(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the adjacent facezonelets for the provided facezonelet ids.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of facezonelets.\n\nReturns\n\nReturns the list of adjacent facezonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets_of_face_zonelet = part.get_adjacent_face_zonelets_of_face_zonelets(face_zonelets)\n\n\n\nPart.get_adjacent_volumes_of_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the adjacent volumes for the provided volume ids.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of the volume.\n\nReturns\n\nReturns the list of adjacent volume ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> adjacent_volumes_of_volumes = part.get_adjacent_volumes_of_volumes(volumes)\n\n\n\nPart.get_cell_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the cell zonelet ids in the part.\n\nReturns\n\nReturn the ids of cell zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> cell_zonelet_ids = part.get_cell_zonelets()\n\n\n\nPart.get_component_children_by_path(path: str, params: ansys.meshing.prime.params.primestructs.ComponentChildrenParams) -> ansys.meshing.prime.params.primestructs.ComponentChildrenResults\n\nGets the child components for a component using the given parameters.\n\nParameters\n\npath (str) – Path to component for which child components are queried.\n\nparams (ComponentChildrenParams) – Parameters to get child component.\n\nReturns\n\nReturns the ComponentChildrenResults structure.\n\nReturn type\n\nComponentChildrenResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = part.get_component_children_by_path(path, params)\n\n\n\nPart.get_components_by_path_expression(path_expression: str) -> List[str]\n\nGets component names with the provided path expression.\n\nParameters\n\npath_expression (str) – Path expression to determine component names that should be returned.\n\nReturns\n\nReturns a list of component names.\n\nReturn type\n\nList[str]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = part.get_components_by_path_expression(path_expression)\n\n\n\nPart.get_edge_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the edge zonelets of a part.\n\nReturns\n\nReturn the ids of edge zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> edge_zonelets = part.get_edge_zonelets()\n\n\n\nPart.get_edge_zonelets_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet edge zonelet ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn edge zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> edge_zonelets = part.get_edge_zonelets_of_label_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_edge_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the edge zones of the part.\n\nReturns\n\nReturn ids of edge zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> edge_zones = part.get_edge_zones()\n\n\n\nPart.get_face_zone_of_zonelet(zonelet: int) -> int\n\nGets the face zone of given zonelet.\n\nParameters\n\nzonelet (int) – Id of zonelet.\n\nReturns\n\nReturns the id of face zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> face_zone = part.get_face_zone_of_zonelet(zonelet)\n\n\n\nPart.get_face_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelets of a part.\n\nReturns\n\nReturn the ids of face zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = part.get_face_zonelets()\n\n\n\nPart.get_face_zonelets_of_component_body_name_pattern(component_body_name_pattern: str, type: ansys.meshing.prime.params.primestructs.BodyQueryType, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets face zonelet ids belonging to components or bodies with name matching the given name pattern.\n\nParameters\n\ncomponent_body_name_pattern (str) – Name pattern to be matched with component or body names.\n\ntype (BodyQueryType) – Type of query used to match component or body name pattern.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match component or body name pattern.\n\nReturns\n\nReturns face zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_component_body_pattern(\"/body*\", type, name_pattern_params)\n\n\n\nPart.get_face_zonelets_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet face zonelet ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn face zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_label_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_face_zonelets_of_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelets of given volumes.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes.\n\nReturns\n\nReturn the ids of face zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = part.get_face_zonelets_of_volumes(volumes)\n\n\n\nPart.get_face_zonelets_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of face zonelets of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn face zonelet ids of zones with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_zone_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_face_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the face zones of the part.\n\nReturns\n\nReturn ids of face zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zones = part.get_face_zones()\n\n\n\nPart.get_face_zones_of_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of face zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn list of face zone ids matching the zone name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> zones = part.get_face_zones_of_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_labels() -> List[str]\n\nGet all labels on entities of part.\n\nReturns\n\nReturn labels on entities of part.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> part.get_labels()\n\n\n\nPart.get_labels_on_zonelet(zonelet_id: int) -> List[str]\n\nGets labels associated with zonelet.\n\nParameters\n\nzonelet_id (int) – Id of zonelet for which label is queried.\n\nReturns\n\nReturns labels associated with zonelet.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> results = part.get_labels_on_zonelet(zonelet_id)\n\n\n\nPart.get_name() -> str\n\nGets the name of the Part.\n\nReturns\n\nReturns part name.\n\nReturn type\n\nstr\n\nExamples\n\n>>> part_name = part.get_name()\n\n\n\nPart.get_splines() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the list of spline ids.\n\nReturns\n\nReturns the list of spline ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> results = part.get_splines()\n\n\n\nPart.get_summary(params: ansys.meshing.prime.params.primestructs.PartSummaryParams) -> ansys.meshing.prime.params.primestructs.PartSummaryResults\n\nGet the part summary.\n\nProvides the part summary for the given parameters.\n\nParameters\n\nparams (PartSummaryParams) – Part summary parameters.\n\nReturns\n\nReturn the PartSummaryResults.\n\nReturn type\n\nPartSummaryResults\n\nExamples\n\n>>> results = part.get_summary(PartSummaryParams(model=model))\n\n\n\nPart.get_topo_edges() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the topoedges of a part.\n\nReturns\n\nReturn the ids of topoedges.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n\n\nPart.get_topo_edges_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoedge ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn the ids of topoedges.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges = part.get_topo_edges_of_label_name_pattern(\n>>>                   label_name_pattern = \"edge_label\",\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the topofaces of a part.\n\nIterable[int]\n\nReturn the ids of topofaces.\n\nReturn the ids of topofaces.\n\n>>> topo_faces = part.get_topo_faces()\n\n\n\nPart.get_topo_faces_of_component_body_name_pattern(component_body_name_pattern: str, type: ansys.meshing.prime.params.primestructs.BodyQueryType, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets topoface ids of component or bodies with name matching the given name pattern.\n\nParameters\n\ncomponent_body_name_pattern (str) – Name pattern to be matched with component or body name.\n\ntype (BodyQueryType) – Type of query used to match component or body name pattern.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match component or body name pattern.\n\nReturns\n\nReturns the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_component_body_name_pattern(\n>>>                   component_body_name_pattern = \"body*\",\n>>>                   type = BodyQueryType_All,\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoface ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_label_name_pattern(\n>>>                   label_name_pattern = \"face_label\",\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces_of_topo_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topofaces of given topovolumes.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of topovolumes.\n\nReturns\n\nReturns the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_topo_volumes(volumes)\n\n\n\nPart.get_topo_faces_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoface ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn topoface ids of zones with name matching the name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> topo_faces = part.get_topo_faces_of_zone_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_topo_volumes() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topovolumes of part.\n\nReturns\n\nReturns the list of topovolume ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> results = part.get_topo_volumes()\n\n\n\nPart.get_topo_volumes_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topovolumes of labels of the given label name expression.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with topovolume name\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match topovolume name pattern.\n\nReturns\n\nReturns the ids of the topovolumes.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_volumes = prime.get_topo_volumes_of_label_name_pattern(\n>>>                      label_name_pattern = \"solid*\",\n>>>                      params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_volumes_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topovolume ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturns topovolume ids of zones with name matching the name pattern.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_volumes = part.get_topo_volumes_of_zone_name_pattern(zone_name_pattern = \"solid*\",\nname_pattern_params = prime.NamePatternParams(model = model))\n\n\n\nPart.get_unstructured_spline_solid() -> ansys.meshing.prime.params.primestructs.IGAUnstructuredSplineSolid\n\nGets the unstructured solid spline for the part.\n\nReturns\n\nReturns the solid spline structure.\n\nReturn type\n\nIGAUnstructuredSplineSolid\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> spline = part.GetUnstructuredSplineSolid()\n\n\n\nPart.get_unstructured_spline_surface() -> ansys.meshing.prime.params.primestructs.IGAUnstructuredSplineSurf\n\nGets the unstructured surface spline for the part.\n\nReturns\n\nReturns the surface spline structure.\n\nReturn type\n\nIGAUnstructuredSplineSurf\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> spline = part.GetUnstructuredSplineSurface()\n\n\n\nPart.get_volume_zone_of_volume(volume: int) -> int\n\nGets the volume zone of given volume.\n\nParameters\n\nvolume (int) – Id of volume.\n\nReturns\n\nReturns the id of volume zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> volume_zone = part.get_volume_zone_of_volume(volume)\n\n\n\nPart.get_volume_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the volume zones of the part.\n\nReturns\n\nReturn ids of volume zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volume_zones = part.get_volume_zones()\n\n\n\nPart.get_volume_zones_of_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of volume zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturns a list of volume zone ids matching the zone name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> zones = part.get_volume_zones_of_name_pattern(\"solid*\", name_pattern_params)\n\n\n\nPart.get_volumes() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the volumes of the part.\n\nReturns\n\nReturn ids of volumes.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volumes = part.get_volumes()\n\n\n\nPart.get_volumes_of_face_zonelet(face_zonelet: int) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet volume ids of given face zonelet.\n\nParameters\n\nface_zonelet (int) – Id of face zonelet.\n\nReturns\n\nReturn volume ids of given face zonelet.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volumes = part.get_volumes_of_face_zonelet(face_zonelet)\n\n\n\nPart.get_volumes_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet volume ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn volume ids of zones with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> volumes = part.get_volumes_of_zone_name_pattern(\"body*\", name_pattern_params)\n\n\n\nPart.merge_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergeVolumesParams) -> ansys.meshing.prime.params.primestructs.MergeVolumesResults\n\nMerge volumes by removing shared face zonelets.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes to be merged.\n\nparams (MergeVolumesParams) – Parameters to merge volumes.\n\nReturns\n\nReturns the MergeVolumesResults.\n\nReturn type\n\nMergeVolumesResults\n\nExamples\n\nparams = prime.MergeVolumesParams(model = model)\nresults = part.merge_volumes(volumes, params)\n\n\n\nPart.merge_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergeZoneletsParams) -> ansys.meshing.prime.params.primestructs.MergeZoneletsResults\n\nMerge zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets to be merged.\n\nparams (MergeZoneletsParams) – Parameters to merge zonelets.\n\nReturns\n\nReturns the MergeZoneletsResults.\n\nReturn type\n\nMergeZoneletsResults\n\nExamples\n\nparams = prime.MergeZoneletsParams(model = model)\nresults = part.merge_zonelets(zonelets, params)\n\n\n\nPart.remove_labels_from_topo_entities(labels: List[str], topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveLabelResults\n\nRemove the given labels from the provided topoentities.\n\nParameters\n\nlabels (List[str]) – Labels to be removed from topoentities.\n\ntopo_entities (Iterable[int]) – Ids of topoentities.\n\nReturns\n\nReturns the RemoveLabelResults.\n\nReturn type\n\nRemoveLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.remove_labels_from_topo_entities(labels, topo_entities)\n\n\n\nPart.remove_labels_from_zonelets(labels: List[str], zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveLabelResults\n\nRemove the given labels from the provided zonelets.\n\nParameters\n\nlabels (List[str]) – Labels to be removed from zonelets.\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns the RemoveLabelResults.\n\nReturn type\n\nRemoveLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.remove_labels_from_zonelets(labels, zonelets)\n\n\n\nPart.remove_zone_on_topo_entities(topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given topoentities.\n\nParameters\n\ntopo_entities (Iterable[int]) – Topoentity ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_topo_entities(topo_entities)\n\n\n\nPart.remove_zone_on_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given volumes.\n\nParameters\n\nvolumes (Iterable[int]) – Volume ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_volumes(volumes)\n\n\n\nPart.remove_zone_on_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Zonelet ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_zonelets(zonelets)\n\n\n\nPart.set_suggested_name(name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for the part based on the suggested name.\n\nParameters\n\nname (str) – Suggested name for the part.\n\nReturns\n\nReturns the SetNameResults.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> part.set_suggested_name(\"part1\")"},{"objectID":"Home","href":"user_guide/lucid.html#common-meshing-tasks-and-the-lucid-module","title":"Common meshing tasks and the Lucid module","text":"Common meshing tasks and the Lucid module\n\nThe lucid module defines high-level methods to abstract\nand simplify common meshing tasks. Methods contained in this module are intended to demonstrate\nhow the low-level APIs can be combined to execute meshing workflows flexibly and with minimal\nneed for understanding PyPrimeMesh-specific concepts. The methods use global automatic defaults\nwhere possible to reduce effort in creating general purpose operations.\n\nMany common meshing tasks and workflows can be tackled easily using the functions provided.\n\nHere is an example of meshing the mixing elbow case for a fluid flow analysis:"},{"objectID":"Home","href":"user_guide/lucid.html#remesh-surface-using-the-lucid-module","title":"Common meshing tasks and the Lucid module > Remesh surface using the Lucid module","text":"Remesh surface using the Lucid module\n\nThis code shows how to remesh the surface using the Lucid module:"},{"objectID":"Home","href":"user_guide/lucid.html#surface-wrapping-using-the-lucidmesh-class","title":"Common meshing tasks and the Lucid module > Surface wrapping using the lucid.Mesh class","text":"Surface wrapping using the lucid.Mesh class\n\nThis example shows you surface wrapping using lucid to get the desired surface mesh results:"},{"objectID":"Home","href":"user_guide/lucid.html#prism-controls-for-polyhedral-mesh-using-the-lucid-module","title":"Common meshing tasks and the Lucid module > Prism controls for polyhedral mesh using the Lucid module","text":"Prism controls for polyhedral mesh using the Lucid module\n\nThis example shows how to generate poly prism method using the Lucid module:"},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointManager.html#materialpointmanager","title":"MaterialPointManager","text":"MaterialPointManager\n\n\n\nclass ansys.meshing.prime.MaterialPointManager(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nProvide functions for material point creation, deletion and queries.\n\nParameters\n\nmodel (Model) – Server model to create MaterialPointManager object.\n\nid (int) – Id of the MaterialPointManager.\n\nobject_id (int) – Object id of the MaterialPointManager.\n\nname (str) – Name of the MaterialPointManager."},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointManager.html#overview","title":"MaterialPointManager > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_material_point\n\nCreates a material point at the given coordinates.\n\ndelete_material_point\n\nDeletes material point identified with the given name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of MaterialPointManager.\n\nname\n\nGet the name of MaterialPointManager.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointManager.html#import-detail","title":"MaterialPointManager > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointManager.html#property-detail","title":"MaterialPointManager > Property detail","text":"Property detail\n\n\n\nproperty MaterialPointManager.id\n\nGet the id of MaterialPointManager.\n\n\n\nproperty MaterialPointManager.name\n\nGet the name of MaterialPointManager."},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointManager.html#method-detail","title":"MaterialPointManager > Method detail","text":"Method detail\n\n\n\nMaterialPointManager.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMaterialPointManager.create_material_point(suggested_name: str, coords: ansys.meshing.prime.params.primestructs.Iterable[float], params: ansys.meshing.prime.params.primestructs.CreateMaterialPointParams) -> ansys.meshing.prime.params.primestructs.CreateMaterialPointResults\n\nCreates a material point at the given coordinates.\n\nParameters\n\nsuggested_name (str) – Name suggested for the material point.\n\ncoords (Iterable[float]) – Coordinates of material point.\n\nparams (CreateMaterialPointParams) – Parameters used to create material point.\n\nReturns\n\nReturns the result with material point name and id.\n\nReturn type\n\nCreateMaterialPointResults\n\nNotes\n\nA material point is created on calling this API.\n\nExamples\n\n>>> material_point_results = model.control_data.create_material_point(\"Fluid\", [1.0,2,0,3.0], params)\n\n\n\nMaterialPointManager.delete_material_point(name: str) -> ansys.meshing.prime.params.primestructs.DeleteMaterialPointResults\n\nDeletes material point identified with the given name.\n\nParameters\n\nname (str) – Name of the material point to be deleted.\n\nReturns\n\nReturns the DeleteMaterialPointResults.\n\nReturn type\n\nDeleteMaterialPointResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.material_point_data.delete_material_point(\"fluid\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_wheel_ground_dsco.html#ansysmeshingprimeexamplesdownload_wheel_ground_dsco","title":"ansys.meshing.prime.examples.download_wheel_ground_dsco","text":"ansys.meshing.prime.examples.download_wheel_ground_dsco\n\n\n\nansys.meshing.prime.examples.download_wheel_ground_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the wheel ground contact patch example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadFaceter.html#cadfaceter","title":"CadFaceter","text":"CadFaceter\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.CadFaceter\n\nTypes of CAD faceter."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadFaceter.html#overview","title":"CadFaceter > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nACIS\n\nDenotes CAD faceter is Acis.\n\nPARASOLID\n\nDenotes CAD faceter is Parasolid."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadFaceter.html#import-detail","title":"CadFaceter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadFaceter.html#attribute-detail","title":"CadFaceter > Attribute detail","text":"Attribute detail\n\n\n\nCadFaceter.ACIS = 0\n\nDenotes CAD faceter is Acis.\n\n\n\nCadFaceter.PARASOLID = 1\n\nDenotes CAD faceter is Parasolid."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectHolesParams.html#detectholesparams","title":"DetectHolesParams","text":"DetectHolesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.DetectHolesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max_radius_circular_holes: float = None, min_radius_circular_holes: float = None, max_hole_length: float = None, min_hole_length: float = None, allow_curved_topo_faces: bool = None, json_data: dict = None, **kwargs)\n\nParameters for detect holes operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectHolesParams object with default parameters.\n\nmax_radius_circular_holes (float, optional) – Maximum radius of circular holes.This is a beta parameter. The behavior and name may change in the future.\n\nmin_radius_circular_holes (float, optional) – Minimum radius of circular holes.This is a beta parameter. The behavior and name may change in the future.\n\nmax_hole_length (float, optional) – Maximum length of holes.This is a beta parameter. The behavior and name may change in the future.\n\nmin_hole_length (float, optional) – Minimum length of holes.This is a beta parameter. The behavior and name may change in the future.\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_holes_params = prime.DetectHolesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectHolesParams.html#overview","title":"DetectHolesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nallow_curved_topo_faces\n\nOption to allow holes in curved topoface.\n\nmax_hole_length\n\nMaximum length of holes.\n\nmax_radius_circular_holes\n\nMaximum radius of circular holes.\n\nmin_hole_length\n\nMinimum length of holes.\n\nmin_radius_circular_holes\n\nMinimum radius of circular holes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectHolesParams object.\n\nset_default\n\nSet the default values of the DetectHolesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectHolesParams.html#import-detail","title":"DetectHolesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectHolesParams.html#property-detail","title":"DetectHolesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectHolesParams.max_hole_length: float\n\nMaximum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectHolesParams.max_radius_circular_holes: float\n\nMaximum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectHolesParams.min_hole_length: float\n\nMinimum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectHolesParams.min_radius_circular_holes: float\n\nMinimum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectHolesParams.html#method-detail","title":"DetectHolesParams > Method detail","text":"Method detail\n\n\n\nDetectHolesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectHolesParams.__str__() -> str\n\n\n\n\n\nstatic DetectHolesParams.print_default()\n\nPrint the default values of DetectHolesParams object.\n\nExamples\n\n>>> DetectHolesParams.print_default()\n\n\n\nstatic DetectHolesParams.set_default(max_radius_circular_holes: float = None, min_radius_circular_holes: float = None, max_hole_length: float = None, min_hole_length: float = None, allow_curved_topo_faces: bool = None)\n\nSet the default values of the DetectHolesParams object.\n\nParameters\n\nmax_radius_circular_holes (float, optional) – Maximum radius of circular holes.\n\nmin_radius_circular_holes (float, optional) – Minimum radius of circular holes.\n\nmax_hole_length (float, optional) – Maximum length of holes.\n\nmin_hole_length (float, optional) – Minimum length of holes.\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairTopologyParams.html#repairtopologyparams","title":"RepairTopologyParams","text":"RepairTopologyParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.RepairTopologyParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, connect_faces: bool = None, repair_edges: bool = None, split_topo_edges_at_apex_point: bool = None, fillet_max_radius: float = None, smallest_edge_length: float = None, merge_edge_allow_self_close: bool = None, suppress_shared_edges_when_merging: bool = None, edge_connect_type: int = None, connect_faces_params: ConnectFacesParams = None, repair_edges_params: RepairEdgesParams = None, json_data: dict = None, **kwargs)\n\nParameters for repair topology operations.\n\nParameters\n\nmodel (Model) – Model to create a RepairTopologyParams object with default parameters.\n\nconnect_faces (bool, optional) – Option to connect faces.This is a beta parameter. The behavior and name may change in the future.\n\nrepair_edges (bool, optional) – Option to repair edges.This is a beta parameter. The behavior and name may change in the future.\n\nsplit_topo_edges_at_apex_point (bool, optional) – Option to split edges at apex point.This is a beta parameter. The behavior and name may change in the future.\n\nfillet_max_radius (float, optional) – Maximum radius of fillets to be detected.This is a beta parameter. The behavior and name may change in the future.\n\nsmallest_edge_length (float, optional) – Length of smallest edge for which split is applied.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\nsuppress_shared_edges_when_merging (bool, optional) – Option for suppressing shared edges when merging.This is a beta parameter. The behavior and name may change in the future.\n\nedge_connect_type (int, optional) – Edge connection type.This is a beta parameter. The behavior and name may change in the future.\n\nconnect_faces_params (ConnectFacesParams, optional) – Parameters for connect faces operation.This is a beta parameter. The behavior and name may change in the future.\n\nrepair_edges_params (RepairEdgesParams, optional) – Parameters for repair edges operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a RepairTopologyParams object with provided parameters.\n\nExamples\n\n>>> repair_topology_params = prime.RepairTopologyParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairTopologyParams.html#overview","title":"RepairTopologyParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nconnect_faces\n\nOption to connect faces.\n\nconnect_faces_params\n\nParameters for connect faces operation.\n\nedge_connect_type\n\nEdge connection type.\n\nfillet_max_radius\n\nMaximum radius of fillets to be detected.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nrepair_edges\n\nOption to repair edges.\n\nrepair_edges_params\n\nParameters for repair edges operation.\n\nsmallest_edge_length\n\nLength of smallest edge for which split is applied.\n\nsplit_topo_edges_at_apex_point\n\nOption to split edges at apex point.\n\nsuppress_shared_edges_when_merging\n\nOption for suppressing shared edges when merging.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RepairTopologyParams object.\n\nset_default\n\nSet the default values of the RepairTopologyParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairTopologyParams.html#import-detail","title":"RepairTopologyParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairTopologyParams.html#property-detail","title":"RepairTopologyParams > Property detail","text":"Property detail\n\n\n\nproperty RepairTopologyParams.connect_faces: bool\n\nOption to connect faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.connect_faces_params: ConnectFacesParams\n\nParameters for connect faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.edge_connect_type: int\n\nEdge connection type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.fillet_max_radius: float\n\nMaximum radius of fillets to be detected.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.repair_edges: bool\n\nOption to repair edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.repair_edges_params: RepairEdgesParams\n\nParameters for repair edges operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.smallest_edge_length: float\n\nLength of smallest edge for which split is applied.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.split_topo_edges_at_apex_point: bool\n\nOption to split edges at apex point.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.suppress_shared_edges_when_merging: bool\n\nOption for suppressing shared edges when merging.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairTopologyParams.html#method-detail","title":"RepairTopologyParams > Method detail","text":"Method detail\n\n\n\nRepairTopologyParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRepairTopologyParams.__str__() -> str\n\n\n\n\n\nstatic RepairTopologyParams.print_default()\n\nPrint the default values of RepairTopologyParams object.\n\nExamples\n\n>>> RepairTopologyParams.print_default()\n\n\n\nstatic RepairTopologyParams.set_default(connect_faces: bool = None, repair_edges: bool = None, split_topo_edges_at_apex_point: bool = None, fillet_max_radius: float = None, smallest_edge_length: float = None, merge_edge_allow_self_close: bool = None, suppress_shared_edges_when_merging: bool = None, edge_connect_type: int = None, connect_faces_params: ConnectFacesParams = None, repair_edges_params: RepairEdgesParams = None)\n\nSet the default values of the RepairTopologyParams object.\n\nParameters\n\nconnect_faces (bool, optional) – Option to connect faces.\n\nrepair_edges (bool, optional) – Option to repair edges.\n\nsplit_topo_edges_at_apex_point (bool, optional) – Option to split edges at apex point.\n\nfillet_max_radius (float, optional) – Maximum radius of fillets to be detected.\n\nsmallest_edge_length (float, optional) – Length of smallest edge for which split is applied.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.\n\nsuppress_shared_edges_when_merging (bool, optional) – Option for suppressing shared edges when merging.\n\nedge_connect_type (int, optional) – Edge connection type.\n\nconnect_faces_params (ConnectFacesParams, optional) – Parameters for connect faces operation.\n\nrepair_edges_params (RepairEdgesParams, optional) – Parameters for repair edges operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/CreateShellBLResults.html#createshellblresults","title":"CreateShellBLResults","text":"CreateShellBLResults\n\n\n\nclass ansys.meshing.prime.autogen.surferstructs.CreateShellBLResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the ShellBL mesh.\n\nParameters\n\nmodel (Model) – Model to create a CreateShellBLResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a CreateShellBLResults object with provided parameters.\n\nExamples\n\n>>> create_shell_blresults = prime.CreateShellBLResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/CreateShellBLResults.html#overview","title":"CreateShellBLResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateShellBLResults object.\n\nset_default\n\nSet the default values of the CreateShellBLResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/CreateShellBLResults.html#import-detail","title":"CreateShellBLResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/CreateShellBLResults.html#property-detail","title":"CreateShellBLResults > Property detail","text":"Property detail\n\n\n\nproperty CreateShellBLResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty CreateShellBLResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/CreateShellBLResults.html#method-detail","title":"CreateShellBLResults > Method detail","text":"Method detail\n\n\n\nCreateShellBLResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateShellBLResults.__str__() -> str\n\n\n\n\n\nstatic CreateShellBLResults.print_default()\n\nPrint the default values of CreateShellBLResults object.\n\nExamples\n\n>>> CreateShellBLResults.print_default()\n\n\n\nstatic CreateShellBLResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the CreateShellBLResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeZoneletParams.html#scopezoneletparams","title":"ScopeZoneletParams","text":"ScopeZoneletParams\n\n\n\nclass ansys.meshing.prime.ScopeZoneletParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to get the scoped face or edge zonelets.\n\nParameters\n\nmodel (Model) – Model to create a ScopeZoneletParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ScopeZoneletParams object with provided parameters.\n\nExamples\n\n>>> scope_zonelet_params = prime.ScopeZoneletParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeZoneletParams.html#overview","title":"ScopeZoneletParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScopeZoneletParams object.\n\nset_default\n\nSet the default values of the ScopeZoneletParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeZoneletParams.html#import-detail","title":"ScopeZoneletParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeZoneletParams.html#method-detail","title":"ScopeZoneletParams > Method detail","text":"Method detail\n\n\n\nScopeZoneletParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScopeZoneletParams.__str__() -> str\n\n\n\n\n\nstatic ScopeZoneletParams.print_default()\n\nPrint the default values of ScopeZoneletParams object.\n\nExamples\n\n>>> ScopeZoneletParams.print_default()\n\n\n\nstatic ScopeZoneletParams.set_default()\n\nSet the default values of the ScopeZoneletParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SeparateBlocksFormatType.html#separateblocksformattype","title":"SeparateBlocksFormatType","text":"SeparateBlocksFormatType\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.SeparateBlocksFormatType\n\nFormat type for separate element blocks. Only applicable when write_separate_blocks is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SeparateBlocksFormatType.html#overview","title":"SeparateBlocksFormatType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCOMPACT\n\nCompact format for element blocks with reduced columns.\n\nSTANDARD\n\nStandard format for element blocks."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SeparateBlocksFormatType.html#import-detail","title":"SeparateBlocksFormatType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SeparateBlocksFormatType.html#attribute-detail","title":"SeparateBlocksFormatType > Attribute detail","text":"Attribute detail\n\n\n\nSeparateBlocksFormatType.COMPACT = 1\n\nCompact format for element blocks with reduced columns.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSeparateBlocksFormatType.STANDARD = 0\n\nStandard format for element blocks.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinSeparateMethod.html#joinseparatemethod","title":"JoinSeparateMethod","text":"JoinSeparateMethod\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.JoinSeparateMethod\n\nJoin separation method to handle separated overlapped zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinSeparateMethod.html#overview","title":"JoinSeparateMethod > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nKEEPBOTH\n\nKeep both overlapping zonelets after joining.\n\nKEEPNONE\n\nRemove both overlapping zonelets after joining.\n\nKEEPONE\n\nKeep one overlap zonelets after joining."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinSeparateMethod.html#import-detail","title":"JoinSeparateMethod > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinSeparateMethod.html#attribute-detail","title":"JoinSeparateMethod > Attribute detail","text":"Attribute detail\n\n\n\nJoinSeparateMethod.KEEPBOTH = 2\n\nKeep both overlapping zonelets after joining.\n\n\n\nJoinSeparateMethod.KEEPNONE = 0\n\nRemove both overlapping zonelets after joining.\n\n\n\nJoinSeparateMethod.KEEPONE = 1\n\nKeep one overlap zonelets after joining."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesResults.html#deletetopoentitiesresults","title":"DeleteTopoEntitiesResults","text":"DeleteTopoEntitiesResults\n\n\n\nclass ansys.meshing.prime.DeleteTopoEntitiesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with delete topoentities.\n\nParameters\n\nmodel (Model) – Model to create a DeleteTopoEntitiesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with delete topoentities.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteTopoEntitiesResults object with provided parameters.\n\nExamples\n\n>>> delete_topo_entities_results = prime.DeleteTopoEntitiesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesResults.html#overview","title":"DeleteTopoEntitiesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with delete topoentities.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteTopoEntitiesResults object.\n\nset_default\n\nSet the default values of the DeleteTopoEntitiesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesResults.html#import-detail","title":"DeleteTopoEntitiesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesResults.html#property-detail","title":"DeleteTopoEntitiesResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteTopoEntitiesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with delete topoentities."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesResults.html#method-detail","title":"DeleteTopoEntitiesResults > Method detail","text":"Method detail\n\n\n\nDeleteTopoEntitiesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteTopoEntitiesResults.__str__() -> str\n\n\n\n\n\nstatic DeleteTopoEntitiesResults.print_default()\n\nPrint the default values of DeleteTopoEntitiesResults object.\n\nExamples\n\n>>> DeleteTopoEntitiesResults.print_default()\n\n\n\nstatic DeleteTopoEntitiesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteTopoEntitiesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with delete topoentities."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/CreateVolumeZonesType.html#createvolumezonestype","title":"CreateVolumeZonesType","text":"CreateVolumeZonesType\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.CreateVolumeZonesType\n\nIndicate type to create volume zones for volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/CreateVolumeZonesType.html#overview","title":"CreateVolumeZonesType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\nOption to not create volume zones.\n\nPERNAMESOURCE\n\nOption to create zone per name computed from face zonelets of volume. Single zone is created for multiple volumes if same zone name is identified using face zonelets for the volumes.\n\nPERVOLUME\n\nOption to create volume zone per volume. Suffix is added to volume zone name, if same name is identified for different volumes using face zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/CreateVolumeZonesType.html#import-detail","title":"CreateVolumeZonesType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/CreateVolumeZonesType.html#attribute-detail","title":"CreateVolumeZonesType > Attribute detail","text":"Attribute detail\n\n\n\nCreateVolumeZonesType.NONE = 0\n\nOption to not create volume zones.\n\n\n\nCreateVolumeZonesType.PERNAMESOURCE = 2\n\nOption to create zone per name computed from face zonelets of volume. Single zone is created for multiple volumes if same zone name is identified using face zonelets for the volumes.\n\n\n\nCreateVolumeZonesType.PERVOLUME = 1\n\nOption to create volume zone per volume. Suffix is added to volume zone name, if same name is identified for different volumes using face zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/index.html#the-color_by_typepy-module","title":"The color_by_type.py module","text":"The color_by_type.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/index.html#summary","title":"The color_by_type.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nColorByTypeWidget\n\nInitializes the color by the type button widget.\n\nEnums\n\n\n\n\n\nColorByType\n\nContains the zone types to display.\n\nAttributes\n\n\n\n\n\ncolor_matrix\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/index.html#description","title":"The color_by_type.py module > Description","text":"Description\n\nModule for ColorByTypeWidget."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/index.html#module-detail","title":"The color_by_type.py module > Module detail","text":"Module detail\n\n\n\ncolor_by_type.color_matrix\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessParams.html#addthicknessparams","title":"AddThicknessParams","text":"AddThicknessParams\n\n\n\nclass ansys.meshing.prime.AddThicknessParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, thickness: float = None, reverse_face_normal: bool = None, suggested_part_name: str = None, fix_intersections: bool = None, json_data: dict = None, **kwargs)\n\nParameters to add thickness for a given plane.\n\nParameters\n\nmodel (Model) – Model to create a AddThicknessParams object with default parameters.\n\nthickness (float, optional) – To assign the offset distance of inflation.\n\nreverse_face_normal (bool, optional) – To assign the direction of inflation.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nfix_intersections (bool, optional) – Fix intersections in concave regions.\n\njson_data (dict, optional) – JSON dictionary to create a AddThicknessParams object with provided parameters.\n\nExamples\n\n>>> add_thickness_params = prime.AddThicknessParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessParams.html#overview","title":"AddThicknessParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nfix_intersections\n\nFix intersections in concave regions.\n\nreverse_face_normal\n\nTo assign the direction of inflation.\n\nsuggested_part_name\n\nSuggested part name for created patching surfaces.\n\nthickness\n\nTo assign the offset distance of inflation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AddThicknessParams object.\n\nset_default\n\nSet the default values of the AddThicknessParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessParams.html#import-detail","title":"AddThicknessParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessParams.html#property-detail","title":"AddThicknessParams > Property detail","text":"Property detail\n\n\n\nproperty AddThicknessParams.fix_intersections: bool\n\nFix intersections in concave regions.\n\n\n\nproperty AddThicknessParams.reverse_face_normal: bool\n\nTo assign the direction of inflation.\n\n\n\nproperty AddThicknessParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces.\n\n\n\nproperty AddThicknessParams.thickness: float\n\nTo assign the offset distance of inflation."},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessParams.html#method-detail","title":"AddThicknessParams > Method detail","text":"Method detail\n\n\n\nAddThicknessParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAddThicknessParams.__str__() -> str\n\n\n\n\n\nstatic AddThicknessParams.print_default()\n\nPrint the default values of AddThicknessParams object.\n\nExamples\n\n>>> AddThicknessParams.print_default()\n\n\n\nstatic AddThicknessParams.set_default(thickness: float = None, reverse_face_normal: bool = None, suggested_part_name: str = None, fix_intersections: bool = None)\n\nSet the default values of the AddThicknessParams object.\n\nParameters\n\nthickness (float, optional) – To assign the offset distance of inflation.\n\nreverse_face_normal (bool, optional) – To assign the direction of inflation.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nfix_intersections (bool, optional) – Fix intersections in concave regions."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/PartZonelets.html#partzonelets","title":"PartZonelets","text":"PartZonelets\n\n\n\nclass ansys.meshing.prime.autogen.commonstructs.PartZonelets(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, part_id: int = None, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nA structure containing some or all face zonelet ids available in a part.\n\nParameters\n\nmodel (Model) – Model to create a PartZonelets object with default parameters.\n\npart_id (int, optional) – Id of part.\n\nface_zonelets (Iterable[int], optional) – List of face zonelet ids available in the part.\n\njson_data (dict, optional) – JSON dictionary to create a PartZonelets object with provided parameters.\n\nExamples\n\n>>> part_zonelets = prime.PartZonelets(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/PartZonelets.html#overview","title":"PartZonelets > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_zonelets\n\nList of face zonelet ids available in the part.\n\npart_id\n\nId of part.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PartZonelets object.\n\nset_default\n\nSet the default values of the PartZonelets object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/PartZonelets.html#import-detail","title":"PartZonelets > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/PartZonelets.html#property-detail","title":"PartZonelets > Property detail","text":"Property detail\n\n\n\nproperty PartZonelets.face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of face zonelet ids available in the part.\n\n\n\nproperty PartZonelets.part_id: int\n\nId of part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/PartZonelets.html#method-detail","title":"PartZonelets > Method detail","text":"Method detail\n\n\n\nPartZonelets.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPartZonelets.__str__() -> str\n\n\n\n\n\nstatic PartZonelets.print_default()\n\nPrint the default values of PartZonelets object.\n\nExamples\n\n>>> PartZonelets.print_default()\n\n\n\nstatic PartZonelets.set_default(part_id: int = None, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the PartZonelets object.\n\nParameters\n\npart_id (int, optional) – Id of part.\n\nface_zonelets (Iterable[int], optional) – List of face zonelet ids available in the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrappercontrol/WrapperControl.html#wrappercontrol","title":"WrapperControl","text":"WrapperControl\n\n\n\nclass ansys.meshing.prime.autogen.wrappercontrol.WrapperControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nWrapper Control to describe all parameters and controls used for wrapping.\n\nParameters\n\nmodel (Model) – Server model to create WrapperControl object.\n\nid (int) – Id of the WrapperControl.\n\nobject_id (int) – Object id of the WrapperControl.\n\nname (str) – Name of the WrapperControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrappercontrol/WrapperControl.html#overview","title":"WrapperControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_geometry_scope\n\nGets geometry scope of wrapper control.\n\nget_live_material_points\n\nGets list of material point names.\n\nset_contact_preventions\n\nSet contact preventions to the wrapper control.\n\nset_feature_recoveries\n\nSet feature recoveries to the wrapper control.\n\nset_geometry_scope\n\nSets geometry scope to given scope.\n\nset_leak_preventions\n\nSet leak preventions to the wrapper control.\n\nset_live_material_points\n\nSet live material points to the wrapper control.\n\nset_shadow_geometry_scope\n\nSets shadow geometry scope to given scope.\n\nset_suggested_name\n\nSets the unique name for the wrapper control based on the given suggested name.\n\nset_suggested_wrapper_part_name\n\nSets the given name for the created wrapper part  after wrapping with the wrapper control.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of WrapperControl.\n\nname\n\nGet the name of WrapperControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrappercontrol/WrapperControl.html#import-detail","title":"WrapperControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrappercontrol/WrapperControl.html#property-detail","title":"WrapperControl > Property detail","text":"Property detail\n\n\n\nproperty WrapperControl.id\n\nGet the id of WrapperControl.\n\n\n\nproperty WrapperControl.name\n\nGet the name of WrapperControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrappercontrol/WrapperControl.html#method-detail","title":"WrapperControl > Method detail","text":"Method detail\n\n\n\nWrapperControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperControl.get_geometry_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets geometry scope of wrapper control.\n\nReturns\n\nReturns ScopeDefinition to scope entities from wrapper control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> geom_scope = wrapper_control.get_geometry_scope()\n\n\n\nWrapperControl.get_live_material_points() -> List[str]\n\nGets list of material point names.\n\nReturns\n\nReturns the list of material point names.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> live_material_point_names = wrapper_control.get_live_material_points()\n\n\n\nWrapperControl.set_contact_preventions(params: List[ansys.meshing.prime.params.primestructs.ContactPreventionParams]) -> ansys.meshing.prime.params.primestructs.SetContactPreventionsResults\n\nSet contact preventions to the wrapper control.\n\nParameters\n\nparams (ContactPreventionParamsArray) – List of contact prevention parameters.\n\nReturns\n\nReturn the set contact prevention results.\n\nReturn type\n\nSetContactPreventionsResults\n\nExamples\n\n>>> set_cont_prev_results = wrapper_control.set_contact_preventions([params])\n\n\n\nWrapperControl.set_feature_recoveries(params: List[ansys.meshing.prime.params.primestructs.FeatureRecoveryParams]) -> ansys.meshing.prime.params.primestructs.SetFeatureRecoveriesResults\n\nSet feature recoveries to the wrapper control.\n\nParameters\n\nparams (FeatureRecoveryParamsArray) – List of feature recovery parameters.\n\nReturns\n\nReturn the set feature recoveries results.\n\nReturn type\n\nSetFeatureRecoveriesResults\n\nExamples\n\n>>> set_feat_rec_results = wrapper_control.set_feature_recoveries([params])\n\n\n\nWrapperControl.set_geometry_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets geometry scope to given scope.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for wrapping.\n\nExamples\n\n>>> wrapper_control.set_geometry_scope(scope)\n\n\n\nWrapperControl.set_leak_preventions(params: List[ansys.meshing.prime.params.primestructs.LeakPreventionParams]) -> ansys.meshing.prime.params.primestructs.SetLeakPreventionsResults\n\nSet leak preventions to the wrapper control.\n\nParameters\n\nparams (LeakPreventionParamsArray) – List of leak prevention parameters.\n\nReturns\n\nReturn the set leak prevention results.\n\nReturn type\n\nSetLeakPreventionsResults\n\nExamples\n\n>>> set_leak_prev_results = wrapper_control.set_leak_preventions([params])\n\n\n\nWrapperControl.set_live_material_points(material_point_names: List[str])\n\nSet live material points to the wrapper control.\n\nParameters\n\nmaterial_point_names (List[str]) – List of live material points.\n\nExamples\n\n>>> wrapper_control.set_live_material_points([\"Fluid1\"])\n\n\n\nWrapperControl.set_shadow_geometry_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets shadow geometry scope to given scope.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope shadow entities for wrapping.\n\nExamples\n\n>>> wrapper_control.set_shadow_geometry_scope(scope)\n\n\n\nWrapperControl.set_suggested_name(name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for the wrapper control based on the given suggested name.\n\nParameters\n\nname (str) – Suggested name for the wrapper control.\n\nReturns\n\nReturns the results with assigned name of the wrapper control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> wrapper_control.set_suggested_name(\"wrapper_control1\")\n\n\n\nWrapperControl.set_suggested_wrapper_part_name(name: str)\n\nSets the given name for the created wrapper part  after wrapping with the wrapper control.\n\nParameters\n\nname (str) – Suggested name of the wrapper part to be created.\n\nExamples\n\n>>> wrapper_control.set_suggested_wrapper_part_name(\"wrap\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeTopoVolumesResults.html#computetopovolumesresults","title":"ComputeTopoVolumesResults","text":"ComputeTopoVolumesResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ComputeTopoVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, material_point_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, external_open_topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, new_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, deleted_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with compute topovolumes.\n\nParameters\n\nmodel (Model) – Model to create a ComputeTopoVolumesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nerror_locations (Iterable[float], optional) – Coordinates of problematic locations in the surface mesh.\n\ntopo_volumes (Iterable[int], optional) – Ids of all topovolumes computed.\n\nmaterial_point_topo_volumes (Iterable[int], optional) – Ids of topovolumes enclosing material points.\n\nexternal_open_topo_faces (Iterable[int], optional) – Topoface ids that are in external space and not part of any topovolumes.\n\nnew_topo_volumes (Iterable[int], optional) – Ids of new topovolumes computed.\n\ndeleted_topo_volumes (Iterable[int], optional) – Ids of existing topovolumes that got deleted.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute topovolumes.\n\njson_data (dict, optional) – JSON dictionary to create a ComputeTopoVolumesResults object with provided parameters.\n\nExamples\n\n>>> compute_topo_volumes_results = prime.ComputeTopoVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeTopoVolumesResults.html#overview","title":"ComputeTopoVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndeleted_topo_volumes\n\nIds of existing topovolumes that got deleted.\n\nerror_code\n\nError code associated with the failure of operation.\n\nerror_locations\n\nCoordinates of problematic locations in the surface mesh.\n\nexternal_open_topo_faces\n\nTopoface ids that are in external space and not part of any topovolumes.\n\nmaterial_point_topo_volumes\n\nIds of topovolumes enclosing material points.\n\nnew_topo_volumes\n\nIds of new topovolumes computed.\n\ntopo_volumes\n\nIds of all topovolumes computed.\n\nwarning_codes\n\nWarning codes associated with the compute topovolumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComputeTopoVolumesResults object.\n\nset_default\n\nSet the default values of the ComputeTopoVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeTopoVolumesResults.html#import-detail","title":"ComputeTopoVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeTopoVolumesResults.html#property-detail","title":"ComputeTopoVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty ComputeTopoVolumesResults.deleted_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of existing topovolumes that got deleted.\n\n\n\nproperty ComputeTopoVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ComputeTopoVolumesResults.error_locations: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCoordinates of problematic locations in the surface mesh.\n\n\n\nproperty ComputeTopoVolumesResults.external_open_topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoface ids that are in external space and not part of any topovolumes.\n\n\n\nproperty ComputeTopoVolumesResults.material_point_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of topovolumes enclosing material points.\n\n\n\nproperty ComputeTopoVolumesResults.new_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new topovolumes computed.\n\n\n\nproperty ComputeTopoVolumesResults.topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of all topovolumes computed.\n\n\n\nproperty ComputeTopoVolumesResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the compute topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeTopoVolumesResults.html#method-detail","title":"ComputeTopoVolumesResults > Method detail","text":"Method detail\n\n\n\nComputeTopoVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComputeTopoVolumesResults.__str__() -> str\n\n\n\n\n\nstatic ComputeTopoVolumesResults.print_default()\n\nPrint the default values of ComputeTopoVolumesResults object.\n\nExamples\n\n>>> ComputeTopoVolumesResults.print_default()\n\n\n\nstatic ComputeTopoVolumesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, material_point_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, external_open_topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, new_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, deleted_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ComputeTopoVolumesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nerror_locations (Iterable[float], optional) – Coordinates of problematic locations in the surface mesh.\n\ntopo_volumes (Iterable[int], optional) – Ids of all topovolumes computed.\n\nmaterial_point_topo_volumes (Iterable[int], optional) – Ids of topovolumes enclosing material points.\n\nexternal_open_topo_faces (Iterable[int], optional) – Topoface ids that are in external space and not part of any topovolumes.\n\nnew_topo_volumes (Iterable[int], optional) – Ids of new topovolumes computed.\n\ndeleted_topo_volumes (Iterable[int], optional) – Ids of existing topovolumes that got deleted.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceFeatureType.html#surfacefeaturetype","title":"SurfaceFeatureType","text":"SurfaceFeatureType\n\n\n\nclass ansys.meshing.prime.SurfaceFeatureType\n\nType of face edges considered as features."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceFeatureType.html#overview","title":"SurfaceFeatureType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nFEATURE\n\nFace edges with normal angle more than threshold are considered as feature.\n\nFEATUREORZONEBOUNDARY\n\nFace edges at zone boundary or with normal angle more than threshold are considered as feature.\n\nFEATUREORZONELETBOUNDARY\n\nFace edges at zonelet boundary or with normal angle more than threshold are considered as feature.\n\nNONE\n\nNone of face edges are considered as feature.\n\nZONEBOUNDARY\n\nFace edges at zone boundary are considered as feature.\n\nZONELETBOUNDARY\n\nFace edges at zonelet boundary are considered as feature."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceFeatureType.html#import-detail","title":"SurfaceFeatureType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceFeatureType.html#attribute-detail","title":"SurfaceFeatureType > Attribute detail","text":"Attribute detail\n\n\n\nSurfaceFeatureType.FEATURE = 2\n\nFace edges with normal angle more than threshold are considered as feature.\n\n\n\nSurfaceFeatureType.FEATUREORZONEBOUNDARY = 3\n\nFace edges at zone boundary or with normal angle more than threshold are considered as feature.\n\n\n\nSurfaceFeatureType.FEATUREORZONELETBOUNDARY = 5\n\nFace edges at zonelet boundary or with normal angle more than threshold are considered as feature.\n\n\n\nSurfaceFeatureType.NONE = 0\n\nNone of face edges are considered as feature.\n\n\n\nSurfaceFeatureType.ZONEBOUNDARY = 1\n\nFace edges at zone boundary are considered as feature.\n\n\n\nSurfaceFeatureType.ZONELETBOUNDARY = 4\n\nFace edges at zonelet boundary are considered as feature."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_saddle_bracket_scdoc.html#ansysmeshingprimeexamplesdownload_saddle_bracket_scdoc","title":"ansys.meshing.prime.examples.download_saddle_bracket_scdoc","text":"ansys.meshing.prime.examples.download_saddle_bracket_scdoc\n\n\n\nansys.meshing.prime.examples.download_saddle_bracket_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload SCDOC file for the saddle bracket example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentCaseParams.html#exportfluentcaseparams","title":"ExportFluentCaseParams","text":"ExportFluentCaseParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportFluentCaseParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cff_format: bool = None, json_data: dict = None, **kwargs)\n\nParameters to export fluent case file.\n\nParameters\n\nmodel (Model) – Model to create a ExportFluentCaseParams object with default parameters.\n\ncff_format (bool, optional) – Option to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz).\n\njson_data (dict, optional) – JSON dictionary to create a ExportFluentCaseParams object with provided parameters.\n\nExamples\n\n>>> export_fluent_case_params = prime.ExportFluentCaseParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentCaseParams.html#overview","title":"ExportFluentCaseParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncff_format\n\nOption to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz).\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportFluentCaseParams object.\n\nset_default\n\nSet the default values of the ExportFluentCaseParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentCaseParams.html#import-detail","title":"ExportFluentCaseParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentCaseParams.html#property-detail","title":"ExportFluentCaseParams > Property detail","text":"Property detail\n\n\n\nproperty ExportFluentCaseParams.cff_format: bool\n\nOption to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentCaseParams.html#method-detail","title":"ExportFluentCaseParams > Method detail","text":"Method detail\n\n\n\nExportFluentCaseParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportFluentCaseParams.__str__() -> str\n\n\n\n\n\nstatic ExportFluentCaseParams.print_default()\n\nPrint the default values of ExportFluentCaseParams object.\n\nExamples\n\n>>> ExportFluentCaseParams.print_default()\n\n\n\nstatic ExportFluentCaseParams.set_default(cff_format: bool = None)\n\nSet the default values of the ExportFluentCaseParams object.\n\nParameters\n\ncff_format (bool, optional) – Option to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshResults.html#checkmeshresults","title":"CheckMeshResults","text":"CheckMeshResults\n\n\n\nclass ansys.meshing.prime.autogen.volumemeshtoolstructs.CheckMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, has_non_positive_volumes: bool = None, has_non_positive_areas: bool = None, has_invalid_shape: bool = None, has_left_handed_faces: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResult associated with the check mesh operation.\n\nParameters\n\nmodel (Model) – Model to create a CheckMeshResults object with default parameters.\n\nhas_non_positive_volumes (bool, optional) – Indicates whether mesh has non positive volumes.\n\nhas_non_positive_areas (bool, optional) – Indicates whether mesh has non positive areas.\n\nhas_invalid_shape (bool, optional) – Indicates whether mesh has invalid shape.\n\nhas_left_handed_faces (bool, optional) – Indicates whether mesh has left handed faces.\n\nerror_code (ErrorCode, optional) – Error code associated with the check grid operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the check grid operation.\n\njson_data (dict, optional) – JSON dictionary to create a CheckMeshResults object with provided parameters.\n\nExamples\n\n>>> check_mesh_results = prime.CheckMeshResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshResults.html#overview","title":"CheckMeshResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the check grid operation.\n\nhas_invalid_shape\n\nIndicates whether mesh has invalid shape.\n\nhas_left_handed_faces\n\nIndicates whether mesh has left handed faces.\n\nhas_non_positive_areas\n\nIndicates whether mesh has non positive areas.\n\nhas_non_positive_volumes\n\nIndicates whether mesh has non positive volumes.\n\nwarning_codes\n\nWarning codes associated with the check grid operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckMeshResults object.\n\nset_default\n\nSet the default values of the CheckMeshResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshResults.html#import-detail","title":"CheckMeshResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshResults.html#property-detail","title":"CheckMeshResults > Property detail","text":"Property detail\n\n\n\nproperty CheckMeshResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the check grid operation.\n\n\n\nproperty CheckMeshResults.has_invalid_shape: bool\n\nIndicates whether mesh has invalid shape.\n\n\n\nproperty CheckMeshResults.has_left_handed_faces: bool\n\nIndicates whether mesh has left handed faces.\n\n\n\nproperty CheckMeshResults.has_non_positive_areas: bool\n\nIndicates whether mesh has non positive areas.\n\n\n\nproperty CheckMeshResults.has_non_positive_volumes: bool\n\nIndicates whether mesh has non positive volumes.\n\n\n\nproperty CheckMeshResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the check grid operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/CheckMeshResults.html#method-detail","title":"CheckMeshResults > Method detail","text":"Method detail\n\n\n\nCheckMeshResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckMeshResults.__str__() -> str\n\n\n\n\n\nstatic CheckMeshResults.print_default()\n\nPrint the default values of CheckMeshResults object.\n\nExamples\n\n>>> CheckMeshResults.print_default()\n\n\n\nstatic CheckMeshResults.set_default(has_non_positive_volumes: bool = None, has_non_positive_areas: bool = None, has_invalid_shape: bool = None, has_left_handed_faces: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the CheckMeshResults object.\n\nParameters\n\nhas_non_positive_volumes (bool, optional) – Indicates whether mesh has non positive volumes.\n\nhas_non_positive_areas (bool, optional) – Indicates whether mesh has non positive areas.\n\nhas_invalid_shape (bool, optional) – Indicates whether mesh has invalid shape.\n\nhas_left_handed_faces (bool, optional) – Indicates whether mesh has left handed faces.\n\nerror_code (ErrorCode, optional) – Error code associated with the check grid operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the check grid operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeFillType.html#volumefilltype","title":"VolumeFillType","text":"VolumeFillType\n\n\n\nclass ansys.meshing.prime.VolumeFillType\n\nTypes of volume fill options."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeFillType.html#overview","title":"VolumeFillType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nHEXCOREPOLY\n\nVolume fill using hexahedral cells in the core and polyhedral cells near the boundary.\n\nHEXCORETET\n\nVolume fill using hexahedral cells in the core and tetrahedral cells near the boundary.\n\nPOLY\n\nVolume fill using polyhedral cells.\n\nTET\n\nVolume fill using tetrahedral cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeFillType.html#import-detail","title":"VolumeFillType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeFillType.html#attribute-detail","title":"VolumeFillType > Attribute detail","text":"Attribute detail\n\n\n\nVolumeFillType.HEXCOREPOLY = 3\n\nVolume fill using hexahedral cells in the core and polyhedral cells near the boundary.\n\n\n\nVolumeFillType.HEXCORETET = 2\n\nVolume fill using hexahedral cells in the core and tetrahedral cells near the boundary.\n\n\n\nVolumeFillType.POLY = 1\n\nVolume fill using polyhedral cells.\n\n\n\nVolumeFillType.TET = 0\n\nVolume fill using tetrahedral cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ContactElementTypeParams.html#contactelementtypeparams","title":"ContactElementTypeParams","text":"ContactElementTypeParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ContactElementTypeParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tie_surf_to_surf: int = None, tie_node_to_surf: int = None, contact_pair_surf_to_surf: int = None, contact_pair_node_to_surf: int = None, json_data: dict = None, **kwargs)\n\nParameters to control element type choices for contact surfaces in TIEs and CONTACT PAIRs.\n\nParameters\n\nmodel (Model) – Model to create a ContactElementTypeParams object with default parameters.\n\ntie_surf_to_surf (int, optional) – Element type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.This is a beta parameter. The behavior and name may change in the future.\n\ntie_node_to_surf (int, optional) – Element type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.This is a beta parameter. The behavior and name may change in the future.\n\ncontact_pair_surf_to_surf (int, optional) – Element type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.This is a beta parameter. The behavior and name may change in the future.\n\ncontact_pair_node_to_surf (int, optional) – Element type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ContactElementTypeParams object with provided parameters.\n\nExamples\n\n>>> contact_element_type_params = prime.ContactElementTypeParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ContactElementTypeParams.html#overview","title":"ContactElementTypeParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontact_pair_node_to_surf\n\nElement type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ncontact_pair_surf_to_surf\n\nElement type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ntie_node_to_surf\n\nElement type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\ntie_surf_to_surf\n\nElement type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ContactElementTypeParams object.\n\nset_default\n\nSet the default values of the ContactElementTypeParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ContactElementTypeParams.html#import-detail","title":"ContactElementTypeParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ContactElementTypeParams.html#property-detail","title":"ContactElementTypeParams > Property detail","text":"Property detail\n\n\n\nproperty ContactElementTypeParams.contact_pair_node_to_surf: int\n\nElement type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ContactElementTypeParams.contact_pair_surf_to_surf: int\n\nElement type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ContactElementTypeParams.tie_node_to_surf: int\n\nElement type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ContactElementTypeParams.tie_surf_to_surf: int\n\nElement type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ContactElementTypeParams.html#method-detail","title":"ContactElementTypeParams > Method detail","text":"Method detail\n\n\n\nContactElementTypeParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nContactElementTypeParams.__str__() -> str\n\n\n\n\n\nstatic ContactElementTypeParams.print_default()\n\nPrint the default values of ContactElementTypeParams object.\n\nExamples\n\n>>> ContactElementTypeParams.print_default()\n\n\n\nstatic ContactElementTypeParams.set_default(tie_surf_to_surf: int = None, tie_node_to_surf: int = None, contact_pair_surf_to_surf: int = None, contact_pair_node_to_surf: int = None)\n\nSet the default values of the ContactElementTypeParams object.\n\nParameters\n\ntie_surf_to_surf (int, optional) – Element type for TIE with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ntie_node_to_surf (int, optional) – Element type for TIE with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 175. The choices are 174 and 175.\n\ncontact_pair_surf_to_surf (int, optional) – Element type for CONTACT PAIR with Surface-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175.\n\ncontact_pair_node_to_surf (int, optional) – Element type for CONTACT PAIR with Node-to-Surface contact where the contact surface is of type ELEMENT. Default value is 174. The choices are 174 and 175."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbParams.html#importmapdlcdbparams","title":"ImportMapdlCdbParams","text":"ImportMapdlCdbParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportMapdlCdbParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, drop_mid_nodes: bool = None, append: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control MAPDL CDB import settings.\n\nParameters\n\nmodel (Model) – Model to create a ImportMapdlCdbParams object with default parameters.\n\ndrop_mid_nodes (bool, optional) – Option to import quadratic mesh elements as linear by skipping mid nodes.\n\nappend (bool, optional) – Option to append imported cdb into existing model.\n\njson_data (dict, optional) – JSON dictionary to create a ImportMapdlCdbParams object with provided parameters.\n\nExamples\n\n>>> import_mapdl_cdb_params = prime.ImportMapdlCdbParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbParams.html#overview","title":"ImportMapdlCdbParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append imported cdb into existing model.\n\ndrop_mid_nodes\n\nOption to import quadratic mesh elements as linear by skipping mid nodes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportMapdlCdbParams object.\n\nset_default\n\nSet the default values of the ImportMapdlCdbParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbParams.html#import-detail","title":"ImportMapdlCdbParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbParams.html#property-detail","title":"ImportMapdlCdbParams > Property detail","text":"Property detail\n\n\n\nproperty ImportMapdlCdbParams.append: bool\n\nOption to append imported cdb into existing model.\n\n\n\nproperty ImportMapdlCdbParams.drop_mid_nodes: bool\n\nOption to import quadratic mesh elements as linear by skipping mid nodes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbParams.html#method-detail","title":"ImportMapdlCdbParams > Method detail","text":"Method detail\n\n\n\nImportMapdlCdbParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportMapdlCdbParams.__str__() -> str\n\n\n\n\n\nstatic ImportMapdlCdbParams.print_default()\n\nPrint the default values of ImportMapdlCdbParams object.\n\nExamples\n\n>>> ImportMapdlCdbParams.print_default()\n\n\n\nstatic ImportMapdlCdbParams.set_default(drop_mid_nodes: bool = None, append: bool = None)\n\nSet the default values of the ImportMapdlCdbParams object.\n\nParameters\n\ndrop_mid_nodes (bool, optional) – Option to import quadratic mesh elements as linear by skipping mid nodes.\n\nappend (bool, optional) – Option to append imported cdb into existing model."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_toy_car_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_toy_car_scdoc","title":"ansys.meshing.prime.examples.examples.download_toy_car_scdoc","text":"ansys.meshing.prime.examples.examples.download_toy_car_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_toy_car_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the toy car example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/ColorByType.html#colorbytype","title":"ColorByType","text":"ColorByType\n\n\n\nclass ansys.meshing.prime.graphics.plotter.ColorByType\n\nContains the zone types to display."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/ColorByType.html#overview","title":"ColorByType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nPART\n\n\n\nZONE\n\n\n\nZONELET\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/ColorByType.html#import-detail","title":"ColorByType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/ColorByType.html#attribute-detail","title":"ColorByType > Attribute detail","text":"Attribute detail\n\n\n\nColorByType.PART = 2\n\n\n\n\n\nColorByType.ZONE = 0\n\n\n\n\n\nColorByType.ZONELET = 1\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbParams.html#importmapdlcdbparams","title":"ImportMapdlCdbParams","text":"ImportMapdlCdbParams\n\n\n\nclass ansys.meshing.prime.ImportMapdlCdbParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, drop_mid_nodes: bool = None, append: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control MAPDL CDB import settings.\n\nParameters\n\nmodel (Model) – Model to create a ImportMapdlCdbParams object with default parameters.\n\ndrop_mid_nodes (bool, optional) – Option to import quadratic mesh elements as linear by skipping mid nodes.\n\nappend (bool, optional) – Option to append imported cdb into existing model.\n\njson_data (dict, optional) – JSON dictionary to create a ImportMapdlCdbParams object with provided parameters.\n\nExamples\n\n>>> import_mapdl_cdb_params = prime.ImportMapdlCdbParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbParams.html#overview","title":"ImportMapdlCdbParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append imported cdb into existing model.\n\ndrop_mid_nodes\n\nOption to import quadratic mesh elements as linear by skipping mid nodes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportMapdlCdbParams object.\n\nset_default\n\nSet the default values of the ImportMapdlCdbParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbParams.html#import-detail","title":"ImportMapdlCdbParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbParams.html#property-detail","title":"ImportMapdlCdbParams > Property detail","text":"Property detail\n\n\n\nproperty ImportMapdlCdbParams.append: bool\n\nOption to append imported cdb into existing model.\n\n\n\nproperty ImportMapdlCdbParams.drop_mid_nodes: bool\n\nOption to import quadratic mesh elements as linear by skipping mid nodes."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbParams.html#method-detail","title":"ImportMapdlCdbParams > Method detail","text":"Method detail\n\n\n\nImportMapdlCdbParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportMapdlCdbParams.__str__() -> str\n\n\n\n\n\nstatic ImportMapdlCdbParams.print_default()\n\nPrint the default values of ImportMapdlCdbParams object.\n\nExamples\n\n>>> ImportMapdlCdbParams.print_default()\n\n\n\nstatic ImportMapdlCdbParams.set_default(drop_mid_nodes: bool = None, append: bool = None)\n\nSet the default values of the ImportMapdlCdbParams object.\n\nParameters\n\ndrop_mid_nodes (bool, optional) – Option to import quadratic mesh elements as linear by skipping mid nodes.\n\nappend (bool, optional) – Option to append imported cdb into existing model."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SizeFieldFileReadResults.html#sizefieldfilereadresults","title":"SizeFieldFileReadResults","text":"SizeFieldFileReadResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.SizeFieldFileReadResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults of size field file read operation.\n\nParameters\n\nmodel (Model) – Model to create a SizeFieldFileReadResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if size field file read operation was unsuccessful.\n\nsize_field_ids (Iterable[int], optional) – Ids of size fields read by read size field operation.\n\njson_data (dict, optional) – JSON dictionary to create a SizeFieldFileReadResults object with provided parameters.\n\nExamples\n\n>>> size_field_file_read_results = prime.SizeFieldFileReadResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SizeFieldFileReadResults.html#overview","title":"SizeFieldFileReadResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if size field file read operation was unsuccessful.\n\nsize_field_ids\n\nIds of size fields read by read size field operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SizeFieldFileReadResults object.\n\nset_default\n\nSet the default values of the SizeFieldFileReadResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SizeFieldFileReadResults.html#import-detail","title":"SizeFieldFileReadResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SizeFieldFileReadResults.html#property-detail","title":"SizeFieldFileReadResults > Property detail","text":"Property detail\n\n\n\nproperty SizeFieldFileReadResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if size field file read operation was unsuccessful.\n\n\n\nproperty SizeFieldFileReadResults.size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of size fields read by read size field operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/SizeFieldFileReadResults.html#method-detail","title":"SizeFieldFileReadResults > Method detail","text":"Method detail\n\n\n\nSizeFieldFileReadResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeFieldFileReadResults.__str__() -> str\n\n\n\n\n\nstatic SizeFieldFileReadResults.print_default()\n\nPrint the default values of SizeFieldFileReadResults object.\n\nExamples\n\n>>> SizeFieldFileReadResults.print_default()\n\n\n\nstatic SizeFieldFileReadResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SizeFieldFileReadResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if size field file read operation was unsuccessful.\n\nsize_field_ids (Iterable[int], optional) – Ids of size fields read by read size field operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphParams.html#matchmorphparams","title":"MatchMorphParams","text":"MatchMorphParams\n\n\n\nclass ansys.meshing.prime.autogen.morpherstructs.MatchMorphParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nMatchMorphParams describes the parameters required for match morphing.\n\nParameters\n\nmodel (Model) – Model to create a MatchMorphParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a MatchMorphParams object with provided parameters.\n\nExamples\n\n>>> match_morph_params = prime.MatchMorphParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphParams.html#overview","title":"MatchMorphParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MatchMorphParams object.\n\nset_default\n\nSet the default values of the MatchMorphParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphParams.html#import-detail","title":"MatchMorphParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphParams.html#method-detail","title":"MatchMorphParams > Method detail","text":"Method detail\n\n\n\nMatchMorphParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMatchMorphParams.__str__() -> str\n\n\n\n\n\nstatic MatchMorphParams.print_default()\n\nPrint the default values of MatchMorphParams object.\n\nExamples\n\n>>> MatchMorphParams.print_default()\n\n\n\nstatic MatchMorphParams.set_default()\n\nSet the default values of the MatchMorphParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtool/index.html#the-volumemeshtoolpy-module","title":"The volumemeshtool.py module","text":"The volumemeshtool.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtool/index.html#summary","title":"The volumemeshtool.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVolumeMeshTool\n\nVolumeMeshTool allows you to check grid and improve volume mesh quality.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtool/index.html#description","title":"The volumemeshtool.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/WriteSizeFieldParams.html#writesizefieldparams","title":"WriteSizeFieldParams","text":"WriteSizeFieldParams\n\n\n\nclass ansys.meshing.prime.WriteSizeFieldParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, write_only_active_size_fields: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to write size field file.\n\nParameters\n\nmodel (Model) – Model to create a WriteSizeFieldParams object with default parameters.\n\nwrite_only_active_size_fields (bool, optional) – Option to write only active size fields into the file.\n\njson_data (dict, optional) – JSON dictionary to create a WriteSizeFieldParams object with provided parameters.\n\nExamples\n\n>>> write_size_field_params = prime.WriteSizeFieldParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WriteSizeFieldParams.html#overview","title":"WriteSizeFieldParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nwrite_only_active_size_fields\n\nOption to write only active size fields into the file.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WriteSizeFieldParams object.\n\nset_default\n\nSet the default values of the WriteSizeFieldParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WriteSizeFieldParams.html#import-detail","title":"WriteSizeFieldParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WriteSizeFieldParams.html#property-detail","title":"WriteSizeFieldParams > Property detail","text":"Property detail\n\n\n\nproperty WriteSizeFieldParams.write_only_active_size_fields: bool\n\nOption to write only active size fields into the file."},{"objectID":"Home","href":"api/ansys/meshing/prime/WriteSizeFieldParams.html#method-detail","title":"WriteSizeFieldParams > Method detail","text":"Method detail\n\n\n\nWriteSizeFieldParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWriteSizeFieldParams.__str__() -> str\n\n\n\n\n\nstatic WriteSizeFieldParams.print_default()\n\nPrint the default values of WriteSizeFieldParams object.\n\nExamples\n\n>>> WriteSizeFieldParams.print_default()\n\n\n\nstatic WriteSizeFieldParams.set_default(write_only_active_size_fields: bool = None)\n\nSet the default values of the WriteSizeFieldParams object.\n\nParameters\n\nwrite_only_active_size_fields (bool, optional) – Option to write only active size fields into the file."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_multi_layer_quad_mesh_pcb_pmdat.html#ansysmeshingprimeexamplesexamplesdownload_multi_layer_quad_mesh_pcb_pmdat","title":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_pmdat","text":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_pmdat\n\n\n\nansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(cad_file, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#add-a-new-example","title":"Add a new example","text":"Add a new example\n\nSummary: This example demonstrates how to add new examples and serves as a template\nthat you can use in their creation.\n\nA block comment must be included at the top of any new example. Each example\nmust have a reference tag in this format:\n\n.. _ref_my_example:\n\nThe .. _ref_ is necessary. Everything that follows is your reference tag.\nKeep all references in snake case.\n\nThis section should give a brief overview of what the example is about and/or demonstrates.\nThe title should be changed to reflect the topic your example covers.\n\nNew examples should be added as Python scripts to:\n\npyprimemesh/examples/gallery\n\nAvoid creating new folders unless absolutely necessary. If in doubt, put the example\nin the folder closest to what it is doing and its precise location can be advised\non in the pull request. If you must create a new folder, make sure to add a\nREADME.txt file containing a reference, a title, and a single sentence describing the folder.\nOtherwise, the new folder is ignored by Sphinx.\n\nExample file names should be in the format:\n\nexample_name.py\n\nSupporting input files for the example, such as CAD or mesh file assets, must be either original\ncontent or have appropriate licensing and ownership permissions from their respective owners. If\nthe input files are used within the example script provided they must be capable of running in\nthe CI pipeline. This means that only files that can be read using the native file formats and\nCAD readers can be used in the scripted examples.\n\nThe recommended data formats to be included in the example are:\n\n.pmdat\n\n.fmd\n\n.scdoc or .dsco (supported on Windows OS)\n\nSupporting input files should be added in:\n\nGithub Example Data Repository\n\nReferencing files as enum and creating download function in:\n\npyprimemesh/examples.py\n\nAlso adding download function to:\n\npyprimemesh/examples/__init__.py\n\nAfter this preamble is the first code block:"},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#create-sections","title":"Add a new example > Create sections","text":"Create sections\n\nYou can break up code blocks in titled sections that provide descriptive text.\nWhen Sphinx is used to generate the documentation, this content is interpreted\nas ReStructured Text (RST).\n\nYou only need to create the Python (PY) files for the example. The\nsphinx-gallery extension automatically generates the Jupyter\nnotebook, the HTML files for the documentation, and the demo script.\n\nSections can contain any information that you may have regarding the example,\nsuch as step-by-step comments and information on motivations. In the generated\nJupyter notebook, this text is translated into a markdown cell.\n\nAs in Jupyter notebooks, if code is left unassigned at the end of a code block\n(as with model in the previous block), the output is generated and\nprinted to the screen according to its __repr__.  Otherwise, you can use\nprint() to output the __str__."},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#render-graphics","title":"Add a new example > Render graphics","text":"Render graphics\n\nIf you display graphics, the result is auto-generated and\nrendered on the page:\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#make-a-pull-request","title":"Add a new example > Make a pull request","text":"Make a pull request\n\nOnce your example is complete and you’ve verified builds locally, you can make a\npull request (PR).  Branches containing examples should be prefixed with doc/\nas per the branch-naming conventions found in the ref_index_contributing\ntopic in the PyAnsys Developer’s Guide."},{"objectID":"Home","href":"examples/gallery_examples/misc/example_template.html#stop-ansys-prime-server","title":"Add a new example > Stop Ansys Prime Server","text":"Stop Ansys Prime Server\n\nTotal running time of the script: (0 minutes 18.785 seconds)\n\n\n\nDownload Jupyter notebook: example_template.ipynb\n\nDownload Python source code: example_template.py\n\nDownload zipped: example_template.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentMeshingMeshParams.html#exportfluentmeshingmeshparams","title":"ExportFluentMeshingMeshParams","text":"ExportFluentMeshingMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportFluentMeshingMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cff_format: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to export fluent meshing mesh.\n\nParameters\n\nmodel (Model) – Model to create a ExportFluentMeshingMeshParams object with default parameters.\n\ncff_format (bool, optional) – Option to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz).This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportFluentMeshingMeshParams object with provided parameters.\n\nExamples\n\n>>> export_fluent_meshing_mesh_params = prime.ExportFluentMeshingMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentMeshingMeshParams.html#overview","title":"ExportFluentMeshingMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncff_format\n\nOption to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz).\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportFluentMeshingMeshParams object.\n\nset_default\n\nSet the default values of the ExportFluentMeshingMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentMeshingMeshParams.html#import-detail","title":"ExportFluentMeshingMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentMeshingMeshParams.html#property-detail","title":"ExportFluentMeshingMeshParams > Property detail","text":"Property detail\n\n\n\nproperty ExportFluentMeshingMeshParams.cff_format: bool\n\nOption to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz).\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportFluentMeshingMeshParams.html#method-detail","title":"ExportFluentMeshingMeshParams > Method detail","text":"Method detail\n\n\n\nExportFluentMeshingMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportFluentMeshingMeshParams.__str__() -> str\n\n\n\n\n\nstatic ExportFluentMeshingMeshParams.print_default()\n\nPrint the default values of ExportFluentMeshingMeshParams object.\n\nExamples\n\n>>> ExportFluentMeshingMeshParams.print_default()\n\n\n\nstatic ExportFluentMeshingMeshParams.set_default(cff_format: bool = None)\n\nSet the default values of the ExportFluentMeshingMeshParams object.\n\nParameters\n\ncff_format (bool, optional) – Option to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz)."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_bracket_fmd.html#ansysmeshingprimeexamplesdownload_bracket_fmd","title":"ansys.meshing.prime.examples.download_bracket_fmd","text":"ansys.meshing.prime.examples.download_bracket_fmd\n\n\n\nansys.meshing.prime.examples.download_bracket_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the bracket scaffold example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesParams.html#mergevolumesparams","title":"MergeVolumesParams","text":"MergeVolumesParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.MergeVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merge_to_neighbor_volume: bool = None, neighbor_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nParameters to merge volumes.\n\nParameters\n\nmodel (Model) – Model to create a MergeVolumesParams object with default parameters.\n\nmerge_to_neighbor_volume (bool, optional) – Option to merge given volumes to their neighbor volume.\n\nneighbor_volumes (Iterable[int], optional) – Ids of volume that are neighbors to given volumes for merging.\n\njson_data (dict, optional) – JSON dictionary to create a MergeVolumesParams object with provided parameters.\n\nExamples\n\n>>> merge_volumes_params = prime.MergeVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesParams.html#overview","title":"MergeVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmerge_to_neighbor_volume\n\nOption to merge given volumes to their neighbor volume.\n\nneighbor_volumes\n\nIds of volume that are neighbors to given volumes for merging.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeVolumesParams object.\n\nset_default\n\nSet the default values of the MergeVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesParams.html#import-detail","title":"MergeVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesParams.html#property-detail","title":"MergeVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty MergeVolumesParams.merge_to_neighbor_volume: bool\n\nOption to merge given volumes to their neighbor volume.\n\n\n\nproperty MergeVolumesParams.neighbor_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of volume that are neighbors to given volumes for merging."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesParams.html#method-detail","title":"MergeVolumesParams > Method detail","text":"Method detail\n\n\n\nMergeVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeVolumesParams.__str__() -> str\n\n\n\n\n\nstatic MergeVolumesParams.print_default()\n\nPrint the default values of MergeVolumesParams object.\n\nExamples\n\n>>> MergeVolumesParams.print_default()\n\n\n\nstatic MergeVolumesParams.set_default(merge_to_neighbor_volume: bool = None, neighbor_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the MergeVolumesParams object.\n\nParameters\n\nmerge_to_neighbor_volume (bool, optional) – Option to merge given volumes to their neighbor volume.\n\nneighbor_volumes (Iterable[int], optional) – Ids of volume that are neighbors to given volumes for merging."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrol/ShellBLControl.html#shellblcontrol","title":"ShellBLControl","text":"ShellBLControl\n\n\n\nclass ansys.meshing.prime.autogen.shellblcontrol.ShellBLControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nShellBLControl allows you to generate quad mesh on face zonelets.\n\nShellBLControl allows you to control generation of quad mesh on face zonelets. Controls include setting the edge scope, face scope and growth parameters.\n\nParameters\n\nmodel (Model) – Server model to create ShellBLControl object.\n\nid (int) – Id of the ShellBLControl.\n\nobject_id (int) – Object id of the ShellBLControl.\n\nname (str) – Name of the ShellBLControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrol/ShellBLControl.html#overview","title":"ShellBLControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_edge_scope\n\nGets the edge scope.\n\nget_growth_params\n\nGets thin ShellBL parameters for ShellBL control.\n\nget_surface_scope\n\nGets the surface scope.\n\nset_edge_scope\n\nSets the edge scope.\n\nset_growth_params\n\nSets growth parameters for ShellBL control.\n\nset_surface_scope\n\nSets the face zonelet scope.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of ShellBLControl.\n\nname\n\nGet the name of ShellBLControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrol/ShellBLControl.html#import-detail","title":"ShellBLControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrol/ShellBLControl.html#property-detail","title":"ShellBLControl > Property detail","text":"Property detail\n\n\n\nproperty ShellBLControl.id\n\nGet the id of ShellBLControl.\n\n\n\nproperty ShellBLControl.name\n\nGet the name of ShellBLControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrol/ShellBLControl.html#method-detail","title":"ShellBLControl > Method detail","text":"Method detail\n\n\n\nShellBLControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nShellBLControl.get_edge_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the edge scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = shellbl_control.get_edge_scope()\n\n\n\nShellBLControl.get_growth_params() -> ansys.meshing.prime.params.primestructs.ShellBLControlGrowthParams\n\nGets thin ShellBL parameters for ShellBL control.\n\nReturns\n\nReturns the ShellBLControlGrowthParams.\n\nReturn type\n\nShellBLControlGrowthParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = shellBL_ctrl.get_growth_params()\n\n\n\nShellBLControl.get_surface_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the surface scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = shellbl_control.get_surface_scope()\n\n\n\nShellBLControl.set_edge_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the edge scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_edge_scope(entities)\n\n\n\nShellBLControl.set_growth_params(params: ansys.meshing.prime.params.primestructs.ShellBLControlGrowthParams)\n\nSets growth parameters for ShellBL control.\n\nParameters\n\nparams (ShellBLControlGrowthParams) – Parameters to set ShellBL growth.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_growth_params(ShellBLControlGrowthParams(model=model))\n\n\n\nShellBLControl.set_surface_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the face zonelet scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = shellbl_control.set_surface_scope(entities)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrapper/Wrapper.html#wrapper","title":"Wrapper","text":"Wrapper\n\n\n\nclass ansys.meshing.prime.core.wrapper.Wrapper(model: ansys.meshing.prime.core.model.Model)\n\nProvides operations for generating a surface mesh using wrapper technology.\n\nParameters\n\nmodel (Model) – Server model to create Wrapper object."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrapper/Wrapper.html#overview","title":"Wrapper > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nclose_gaps\n\nClose gaps.\n\nconnect\n\nPerform a label-controlled connection.\n\nimprove_quality\n\nImprove the surface quality and resolve connectivity issues like intersections, multi, free, spikes, point contacts and so on.\n\npatch_flow_regions\n\nPatch flow regions.\n\nwrap\n\nPerform wrapping with specified controls and given parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Wrapper.\n\n__exit__\n\nExit context for Wrapper.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrapper/Wrapper.html#import-detail","title":"Wrapper > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrapper/Wrapper.html#method-detail","title":"Wrapper > Method detail","text":"Method detail\n\n\n\nWrapper.__enter__()\n\nEnter context for Wrapper.\n\n\n\nWrapper.__exit__(type, value, traceback)\n\nExit context for Wrapper.\n\n\n\nWrapper.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapper.close_gaps(scope: ansys.meshing.prime.autogen.controlstructs.ScopeDefinition, params: ansys.meshing.prime.autogen.wrapperstructs.WrapperCloseGapsParams) -> ansys.meshing.prime.autogen.wrapperstructs.WrapperCloseGapsResult\n\nClose gaps.\n\nClosing gaps creates patching surfaces within the face zonelets specified\nby scope using gap size.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition of the face zonelets.\n\nparams (WrapperCloseGapsParams) – Wrapper providing close gap parameters.\n\nReturns\n\nResults from the wrapper for closing gaps.\n\nReturn type\n\nWrapperCloseGapsResult\n\nExamples\n\n>>> result = wrapper.close_gaps(scope, params)\n\n\n\nWrapper.connect(wrapper_part: ansys.meshing.prime.core.part.Part, target_labels: List[str], source_parts: List[ansys.meshing.prime.core.part.Part], source_labels: List[str])\n\nPerform a label-controlled connection.\n\nThis method performs a label-controlled connection of wrapper part face zonelets to\nface zonelets of source parts.\n\nParameters\n\nwrapper_part (Part) – Wrapper part.\n\ntarget_labels (List[str]) – List of target zonelet labels to connect.\n\nsource_parts (List[Part]) – List of source parts to connect with.\n\nsource_labels (List[Part]) – List of source zonelet labels to connect.\n\nExamples\n\n>>> wrapper.connect(wrapper_part, target_labels, source_parts, source_labels)\n\n\n\nWrapper.improve_quality(part_id: int, params: ansys.meshing.prime.params.primestructs.WrapperImproveQualityParams) -> ansys.meshing.prime.params.primestructs.WrapperImproveResult\n\nImprove the surface quality and resolve connectivity issues like intersections, multi, free, spikes, point contacts and so on.\n\nParameters\n\npart_id (int) – Id of the part.\n\nparams (WrapperImproveQualityParams) – Wrapper improve quality parameters.\n\nReturns\n\nReturn the Wrapper improve result.\n\nReturn type\n\nWrapperImproveResult\n\nExamples\n\n>>> result = wrapper.improve_quality(part_id, params)\n\n\n\nWrapper.patch_flow_regions(live_material_point: str, params: ansys.meshing.prime.autogen.wrapperstructs.WrapperPatchFlowRegionsParams) -> ansys.meshing.prime.autogen.wrapperstructs.WrapperPatchFlowRegionsResult\n\nPatch flow regions.\n\nPatch flow regions create patching surfaces for regions identified\nby dead regions from wrapper patch holes parameters.\n\nParameters\n\nlive_material_point (str) – Name of live material point.\n\nparams (WrapperPatchFlowRegionsParams) – Parameters to define patch flow regions operation.\n\nReturns\n\nReturns the WrapperPatchFlowRegionsResult.\n\nReturn type\n\nWrapperPatchFlowRegionsResult\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = wrapper.PatchFlowRegions(live_material_point, params)\n\n\n\nWrapper.wrap(wrapper_control_id: int, params: ansys.meshing.prime.autogen.wrapperstructs.WrapParams) -> ansys.meshing.prime.autogen.wrapperstructs.WrapResult\n\nPerform wrapping with specified controls and given parameters.\n\nThis method performs wrapping with specified controls in the wrapper control\nand with given parameters.\n\nParameters\n\nwrapper_control_id (int) – ID of the wrapper control.\n\nparams (WrapParams) – Wrap parameters.\n\nReturns\n\nWrap results.\n\nReturn type\n\nWrapResult\n\nExamples\n\n>>> results = wrapper.wrap(wrapper_control_id, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeDefinition.html#scopedefinition","title":"ScopeDefinition","text":"ScopeDefinition\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.ScopeDefinition(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, entity_type: ScopeEntity = None, evaluation_type: ScopeEvaluationType = None, part_expression: str = None, label_expression: str = None, zone_expression: str = None, json_data: dict = None, **kwargs)\n\nScopeDefinition to scope entities based on entity and evaluation type.\n\nParameters\n\nmodel (Model) – Model to create a ScopeDefinition object with default parameters.\n\nentity_type (ScopeEntity, optional) – Entity type for which scope needs to be evaluated. The default is set to face zonelets.\n\nevaluation_type (ScopeEvaluationType, optional) – Evaluation type to scope entities. The default is set to labels.\n\npart_expression (str, optional) – Part expression to scope parts while evaluating scope.\n\nlabel_expression (str, optional) – Label expression to scope entities when evaluation type is set to labels.\n\nzone_expression (str, optional) – Zone expression to scope entities when evaluation type is set to zones.\n\njson_data (dict, optional) – JSON dictionary to create a ScopeDefinition object with provided parameters.\n\nExamples\n\n>>> scope_definition = prime.ScopeDefinition(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeDefinition.html#overview","title":"ScopeDefinition > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nentity_type\n\nEntity type for which scope needs to be evaluated. The default is set to face zonelets.\n\nevaluation_type\n\nEvaluation type to scope entities. The default is set to labels.\n\nlabel_expression\n\nLabel expression to scope entities when evaluation type is set to labels.\n\npart_expression\n\nPart expression to scope parts while evaluating scope.\n\nzone_expression\n\nZone expression to scope entities when evaluation type is set to zones.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScopeDefinition object.\n\nset_default\n\nSet the default values of the ScopeDefinition object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeDefinition.html#import-detail","title":"ScopeDefinition > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeDefinition.html#property-detail","title":"ScopeDefinition > Property detail","text":"Property detail\n\n\n\nproperty ScopeDefinition.entity_type: ScopeEntity\n\nEntity type for which scope needs to be evaluated. The default is set to face zonelets.\n\n\n\nproperty ScopeDefinition.evaluation_type: ScopeEvaluationType\n\nEvaluation type to scope entities. The default is set to labels.\n\n\n\nproperty ScopeDefinition.label_expression: str\n\nLabel expression to scope entities when evaluation type is set to labels.\n\n\n\nproperty ScopeDefinition.part_expression: str\n\nPart expression to scope parts while evaluating scope.\n\n\n\nproperty ScopeDefinition.zone_expression: str\n\nZone expression to scope entities when evaluation type is set to zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeDefinition.html#method-detail","title":"ScopeDefinition > Method detail","text":"Method detail\n\n\n\nScopeDefinition.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScopeDefinition.__str__() -> str\n\n\n\n\n\nstatic ScopeDefinition.print_default()\n\nPrint the default values of ScopeDefinition object.\n\nExamples\n\n>>> ScopeDefinition.print_default()\n\n\n\nstatic ScopeDefinition.set_default(entity_type: ScopeEntity = None, evaluation_type: ScopeEvaluationType = None, part_expression: str = None, label_expression: str = None, zone_expression: str = None)\n\nSet the default values of the ScopeDefinition object.\n\nParameters\n\nentity_type (ScopeEntity, optional) – Entity type for which scope needs to be evaluated. The default is set to face zonelets.\n\nevaluation_type (ScopeEvaluationType, optional) – Evaluation type to scope entities. The default is set to labels.\n\npart_expression (str, optional) – Part expression to scope parts while evaluating scope.\n\nlabel_expression (str, optional) – Label expression to scope entities when evaluation type is set to labels.\n\nzone_expression (str, optional) – Zone expression to scope entities when evaluation type is set to zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbResults.html#importmapdlcdbresults","title":"ImportMapdlCdbResults","text":"ImportMapdlCdbResults\n\n\n\nclass ansys.meshing.prime.ImportMapdlCdbResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the MAPDL CDB import.\n\nParameters\n\nmodel (Model) – Model to create a ImportMapdlCdbResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ImportMapdlCdbResults object with provided parameters.\n\nExamples\n\n>>> import_mapdl_cdb_results = prime.ImportMapdlCdbResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbResults.html#overview","title":"ImportMapdlCdbResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportMapdlCdbResults object.\n\nset_default\n\nSet the default values of the ImportMapdlCdbResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbResults.html#import-detail","title":"ImportMapdlCdbResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbResults.html#property-detail","title":"ImportMapdlCdbResults > Property detail","text":"Property detail\n\n\n\nproperty ImportMapdlCdbResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty ImportMapdlCdbResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportMapdlCdbResults.html#method-detail","title":"ImportMapdlCdbResults > Method detail","text":"Method detail\n\n\n\nImportMapdlCdbResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportMapdlCdbResults.__str__() -> str\n\n\n\n\n\nstatic ImportMapdlCdbResults.print_default()\n\nPrint the default values of ImportMapdlCdbResults object.\n\nExamples\n\n>>> ImportMapdlCdbResults.print_default()\n\n\n\nstatic ImportMapdlCdbResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ImportMapdlCdbResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLOffsetType.html#shellbloffsettype","title":"ShellBLOffsetType","text":"ShellBLOffsetType\n\n\n\nclass ansys.meshing.prime.ShellBLOffsetType\n\nType of offset method during ShellBL generation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLOffsetType.html#overview","title":"ShellBLOffsetType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASPECTRATIO\n\nOption to set ShellBL offset type as Aspect Ratio.\n\nCURVATUREBASED\n\nOption to set ShellBL offset type as CurvatureBased.\n\nLASTRATIO\n\nOption to set ShellBL offset type as Last Ratio.\n\nUNIFORM\n\nOption to set ShellBL offset type as Uniform."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLOffsetType.html#import-detail","title":"ShellBLOffsetType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLOffsetType.html#attribute-detail","title":"ShellBLOffsetType > Attribute detail","text":"Attribute detail\n\n\n\nShellBLOffsetType.ASPECTRATIO = 0\n\nOption to set ShellBL offset type as Aspect Ratio.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nShellBLOffsetType.CURVATUREBASED = 4\n\nOption to set ShellBL offset type as CurvatureBased.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nShellBLOffsetType.LASTRATIO = 1\n\nOption to set ShellBL offset type as Last Ratio.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nShellBLOffsetType.UNIFORM = 2\n\nOption to set ShellBL offset type as Uniform.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectHolesParams.html#detectholesparams","title":"DetectHolesParams","text":"DetectHolesParams\n\n\n\nclass ansys.meshing.prime.DetectHolesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max_radius_circular_holes: float = None, min_radius_circular_holes: float = None, max_hole_length: float = None, min_hole_length: float = None, allow_curved_topo_faces: bool = None, json_data: dict = None, **kwargs)\n\nParameters for detect holes operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectHolesParams object with default parameters.\n\nmax_radius_circular_holes (float, optional) – Maximum radius of circular holes.This is a beta parameter. The behavior and name may change in the future.\n\nmin_radius_circular_holes (float, optional) – Minimum radius of circular holes.This is a beta parameter. The behavior and name may change in the future.\n\nmax_hole_length (float, optional) – Maximum length of holes.This is a beta parameter. The behavior and name may change in the future.\n\nmin_hole_length (float, optional) – Minimum length of holes.This is a beta parameter. The behavior and name may change in the future.\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_holes_params = prime.DetectHolesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectHolesParams.html#overview","title":"DetectHolesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nallow_curved_topo_faces\n\nOption to allow holes in curved topoface.\n\nmax_hole_length\n\nMaximum length of holes.\n\nmax_radius_circular_holes\n\nMaximum radius of circular holes.\n\nmin_hole_length\n\nMinimum length of holes.\n\nmin_radius_circular_holes\n\nMinimum radius of circular holes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectHolesParams object.\n\nset_default\n\nSet the default values of the DetectHolesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectHolesParams.html#import-detail","title":"DetectHolesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectHolesParams.html#property-detail","title":"DetectHolesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectHolesParams.max_hole_length: float\n\nMaximum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectHolesParams.max_radius_circular_holes: float\n\nMaximum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectHolesParams.min_hole_length: float\n\nMinimum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectHolesParams.min_radius_circular_holes: float\n\nMinimum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectHolesParams.html#method-detail","title":"DetectHolesParams > Method detail","text":"Method detail\n\n\n\nDetectHolesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectHolesParams.__str__() -> str\n\n\n\n\n\nstatic DetectHolesParams.print_default()\n\nPrint the default values of DetectHolesParams object.\n\nExamples\n\n>>> DetectHolesParams.print_default()\n\n\n\nstatic DetectHolesParams.set_default(max_radius_circular_holes: float = None, min_radius_circular_holes: float = None, max_hole_length: float = None, min_hole_length: float = None, allow_curved_topo_faces: bool = None)\n\nSet the default values of the DetectHolesParams object.\n\nParameters\n\nmax_radius_circular_holes (float, optional) – Maximum radius of circular holes.\n\nmin_radius_circular_holes (float, optional) – Minimum radius of circular holes.\n\nmax_hole_length (float, optional) – Maximum length of holes.\n\nmin_hole_length (float, optional) – Minimum length of holes.\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_pipe_tee_pmdat.html#ansysmeshingprimeexamplesexamplesdownload_pipe_tee_pmdat","title":"ansys.meshing.prime.examples.examples.download_pipe_tee_pmdat","text":"ansys.meshing.prime.examples.examples.download_pipe_tee_pmdat\n\n\n\nansys.meshing.prime.examples.examples.download_pipe_tee_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the pipe tee example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(pipe_tee, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/index.html#the-surfaceutilitystructspy-module","title":"The surfaceutilitystructs.py module","text":"The surfaceutilitystructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/index.html#summary","title":"The surfaceutilitystructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAddThicknessParams\n\nParameters to add thickness for a given plane.\n\nAddThicknessResults\n\nResult structure associated with add thickness zonelets.\n\nBOIType\n\nBOI type for BOI creation.\n\nContactPatchAxis\n\nFlow or wake direction for BOI creation.\n\nCreateBOIParams\n\nParameters used for BOI surface creation in the given axis.\n\nCreateBOIResults\n\nResult structure associated with BOI creation of zonelets.\n\nCreateCapParams\n\nParameters to create cap on face zonelets.\n\nCreateCapResults\n\nResults associated with create cap on face zonelets.\n\nCreateContactPatchParams\n\nParameters used for contact patch creation in the given axis.\n\nCreateContactPatchResults\n\nResult structure associated with created contact patch zonelets.\n\nDeleteUnwettedParams\n\nDeleteUnwettedParams defines parameters for delete unwetted surfaces operation.\n\nDeleteUnwettedResult\n\nResults structure associated with delete unwetted surfaces operation.\n\nFillHolesAtPlaneParams\n\nParameters to fill holes at given plane.\n\nFillHolesAtPlaneResults\n\nResults associated with fill holes at given plane.\n\nFixInvalidNormalNodeParams\n\nParameters to fix invalid average face normal at nodes by creating a nugget.\n\nFixInvalidNormalNodeResults\n\nResults associated with fix invalid average face normal at nodes.\n\nFlowDirection\n\nFlow or wake direction for BOI creation.\n\nProjectOnGeometryParams\n\nParameters used to project topoface nodes on associated geometry.\n\nProjectOnGeometryResults\n\nResults associated with projection of topofaces nodes on its geometry.\n\nRefineAtContactsParams\n\nParameters to refine face elements in contact.\n\nRefineAtContactsResults\n\nResults structure associated with refine face elements in contact.\n\nResolveIntersectionResult\n\nResult structure associated with resolve intersections operation.\n\nResolveIntersectionsParams\n\nResolveIntersectionsParams define parameters for resolve intersections.\n\nSmoothDihedralFaceNodesParams\n\nParameters to smooth dihedral face nodes.\n\nSmoothDihedralFaceNodesResults\n\nResults structure associated with smooth dihedral face nodes.\n\nSmoothType\n\nIndicates the the type of operation to be performed during the smooth dihedral face nodes operation.\n\nStretchFreeBoundariesParams\n\nParameters used for stretch free boundaries operation.\n\nStretchFreeBoundariesResults\n\nResults associated with stretch free boundaries operation.\n\nSubtractZoneletsParams\n\nParameters to use when subtracting zonelets.\n\nSubtractZoneletsResults\n\nResults structure associated with subtracting zonelets.\n\nTriangulateParams\n\nProvides the parameters used for triangulation operation.\n\nTriangulateResults\n\nResults associated with triangulate operation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/index.html#description","title":"The surfaceutilitystructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LabelExportParams.html#labelexportparams","title":"LabelExportParams","text":"LabelExportParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.LabelExportParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, label_expression_for_nodal_components: str = None, json_data: dict = None, **kwargs)\n\nParameters to control the export of labels as Nodal or Element Components in CDB. By default, all the labels are exported as Element Components.\n\nParameters\n\nmodel (Model) – Model to create a LabelExportParams object with default parameters.\n\nlabel_expression_for_nodal_components (str, optional) – Label expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a LabelExportParams object with provided parameters.\n\nExamples\n\n>>> label_export_params = prime.LabelExportParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LabelExportParams.html#overview","title":"LabelExportParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nlabel_expression_for_nodal_components\n\nLabel expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of LabelExportParams object.\n\nset_default\n\nSet the default values of the LabelExportParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LabelExportParams.html#import-detail","title":"LabelExportParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LabelExportParams.html#property-detail","title":"LabelExportParams > Property detail","text":"Property detail\n\n\n\nproperty LabelExportParams.label_expression_for_nodal_components: str\n\nLabel expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LabelExportParams.html#method-detail","title":"LabelExportParams > Method detail","text":"Method detail\n\n\n\nLabelExportParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nLabelExportParams.__str__() -> str\n\n\n\n\n\nstatic LabelExportParams.print_default()\n\nPrint the default values of LabelExportParams object.\n\nExamples\n\n>>> LabelExportParams.print_default()\n\n\n\nstatic LabelExportParams.set_default(label_expression_for_nodal_components: str = None)\n\nSet the default values of the LabelExportParams object.\n\nParameters\n\nlabel_expression_for_nodal_components (str, optional) – Label expression to export matching labels as Nodal Components in CDB. Non-matching labels will be exported as Element Components."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/index.html#the-fileiostructspy-module","title":"The fileiostructs.py module","text":"The fileiostructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/index.html#summary","title":"The fileiostructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCadFaceter\n\nTypes of CAD faceter.\n\nCadReaderRoute\n\nCAD Reader routes.\n\nCadRefacetingMaxEdgeSizeLimit\n\nTypes of maximum edge size limit for CAD faceting.\n\nCadRefacetingParams\n\nParameters to refacet CAD during import.\n\nCadRefacetingResolution\n\nLevels of CAD faceting refinement.\n\nCdbAnalysisType\n\nProvides the MAPDL CDB analysis type.\n\nCdbSimulationType\n\nSimulation Type for CDB export.\n\nContactElementTypeParams\n\nParameters to control element type choices for contact surfaces in TIEs and CONTACT PAIRs.\n\nExportBoundaryFittedSplineParams\n\nParameters for exporting boundary fitted splines.\n\nExportFluentCaseParams\n\nParameters to export fluent case file.\n\nExportFluentMeshingMeshParams\n\nParameters used to export fluent meshing mesh.\n\nExportLSDynaIGAResults\n\nResults associated with the LS-DYNA export.\n\nExportLSDynaIgaKeywordFileParams\n\nParameters for exporting LS-DYNA IGA keyword file.\n\nExportLSDynaKeywordFileParams\n\nParameters to control LS-DYNA keyword file export settings.\n\nExportLSDynaResults\n\nResults associated with the LS-DYNA export.\n\nExportMapdlCdbParams\n\nParameters to control MAPDL CDB export settings.\n\nExportMapdlCdbResults\n\nResults associated with the MAPDL CDB export.\n\nExportSTLParams\n\nParameters to export STL file.\n\nFileReadParams\n\nParameters to read file.\n\nFileReadResults\n\nResults of file read operation.\n\nFileWriteParams\n\nParameters to write a file.\n\nFileWriteResults\n\nResults of file write operation.\n\nImportAbaqusParams\n\nParameters for importing Abaqus solver input files.\n\nImportAbaqusResults\n\nResults of Abaqus import operation.\n\nImportCadParams\n\nParameters to control CAD import settings.\n\nImportCadResults\n\nResults associated with the CAD import.\n\nImportFluentCaseParams\n\nParameters to import fluent case file.\n\nImportFluentCaseResults\n\nResults associated with fluent case import.\n\nImportFluentMeshingMeshParams\n\nParameters used to import fluent meshing mesh.\n\nImportFluentMeshingMeshResults\n\nResults associated with fluent meshing mesh import.\n\nImportMapdlCdbParams\n\nParameters to control MAPDL CDB import settings.\n\nImportMapdlCdbResults\n\nResults associated with the MAPDL CDB import.\n\nLSDynaAnalysisType\n\nProvides the LS-DYNA analysis type.\n\nLSDynaFileFormatType\n\nProvides the format type to write the LS-DYNA file.\n\nLabelExportParams\n\nParameters to control the export of labels as Nodal or Element Components in CDB. By default, all the labels are exported as Element Components.\n\nLengthUnit\n\nLength units\n\nPartCreationType\n\nPart Creation Type decides whether to create a part per CAD Model, Assembly, Part, Body.\n\nReadSizeFieldParams\n\nParameters used to read size field file.\n\nSeparateBlocksFormatType\n\nFormat type for separate element blocks. Only applicable when write_separate_blocks is true.\n\nSizeFieldFileReadResults\n\nResults of size field file read operation.\n\nWriteSizeFieldParams\n\nParameters used to write size field file.\n\nZoneMeshResult\n\nResults containing zone-wise mesh information.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/index.html#description","title":"The fileiostructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellQualityMeasure.html#cellqualitymeasure","title":"CellQualityMeasure","text":"CellQualityMeasure\n\n\n\nclass ansys.meshing.prime.CellQualityMeasure\n\nThe type of cell quality measures to check cell quality metrics."},{"objectID":"Home","href":"api/ansys/meshing/prime/CellQualityMeasure.html#overview","title":"CellQualityMeasure > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASPECTRATIO\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\nELEMENTQUALITY\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst).\n\nFLUENTASPECTRATIO\n\nThe Fluent aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\nINVERSEORTHOGONAL\n\nThe inverse orthogonal metric ranges between 0 (best) and 1 (worst).\n\nINVERSEORTHOGONAL_V2\n\nThe advanced inverse orthogonal metric ranges between 0 (best) and 1 (worst).\n\nSKEWNESS\n\nThe Skewness metric ranges between 0 (best) and 1 (worst). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst)."},{"objectID":"Home","href":"api/ansys/meshing/prime/CellQualityMeasure.html#import-detail","title":"CellQualityMeasure > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellQualityMeasure.html#attribute-detail","title":"CellQualityMeasure > Attribute detail","text":"Attribute detail\n\n\n\nCellQualityMeasure.ASPECTRATIO = 5\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\n\n\nCellQualityMeasure.ELEMENTQUALITY = 50\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst).\n\n\n\nCellQualityMeasure.FLUENTASPECTRATIO = 13\n\nThe Fluent aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\n\n\nCellQualityMeasure.INVERSEORTHOGONAL = 14\n\nThe inverse orthogonal metric ranges between 0 (best) and 1 (worst).\n\n\n\nCellQualityMeasure.INVERSEORTHOGONAL_V2 = 25\n\nThe advanced inverse orthogonal metric ranges between 0 (best) and 1 (worst).\n\n\n\nCellQualityMeasure.SKEWNESS = 0\n\nThe Skewness metric ranges between 0 (best) and 1 (worst). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SolverType.html#solvertype","title":"SolverType","text":"SolverType\n\n\n\nclass ansys.meshing.prime.autogen.commontypes.SolverType\n\nType of solver."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SolverType.html#overview","title":"SolverType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nFLUENT\n\nSolver type is Fluent. Creates a group of face quality measures mostly used in Fluent.\n\nMAPDL\n\nSolver type is MAPDL. Creates a group of face quality measures mostly used in MAPDL."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SolverType.html#import-detail","title":"SolverType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SolverType.html#attribute-detail","title":"SolverType > Attribute detail","text":"Attribute detail\n\n\n\nSolverType.FLUENT = 1\n\nSolver type is Fluent. Creates a group of face quality measures mostly used in Fluent.\n\n\n\nSolverType.MAPDL = 2\n\nSolver type is MAPDL. Creates a group of face quality measures mostly used in MAPDL."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/CurvatureSizingParams.html#curvaturesizingparams","title":"CurvatureSizingParams","text":"CurvatureSizingParams\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.CurvatureSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min: float = None, max: float = None, growth_rate: float = None, normal_angle: float = None, use_cad_curvature: bool = None, json_data: dict = None, **kwargs)\n\nSize field using curvature size control computes edge and face sizes using their size and normal angle parameters.\n\nThe curvature size control uses the normal angle parameter as the maximum allowable angle that one element edge may span.\nFor example, a value of 5 implies that a division will be made when the angle change along the curve is 5 degrees.\nHence, a 90 degree arc will be divided into approximately 18 segments.\n\nParameters\n\nmodel (Model) – Model to create a CurvatureSizingParams object with default parameters.\n\nmin (float, optional) – Minimum size used for computing edge and face size using curavture size control.\n\nmax (float, optional) – Maximum size used for computing edge and face size using curavture size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\nnormal_angle (float, optional) – Maximum allowable angle at which one element edge may span.\n\nuse_cad_curvature (bool, optional) – Option to enable use of CAD curvature for computing edge and face size.\n\njson_data (dict, optional) – JSON dictionary to create a CurvatureSizingParams object with provided parameters.\n\nExamples\n\n>>> curvature_sizing_params = prime.CurvatureSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/CurvatureSizingParams.html#overview","title":"CurvatureSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nmax\n\nMaximum size used for computing edge and face size using curavture size control.\n\nmin\n\nMinimum size used for computing edge and face size using curavture size control.\n\nnormal_angle\n\nMaximum allowable angle at which one element edge may span.\n\nuse_cad_curvature\n\nOption to enable use of CAD curvature for computing edge and face size.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CurvatureSizingParams object.\n\nset_default\n\nSet the default values of the CurvatureSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/CurvatureSizingParams.html#import-detail","title":"CurvatureSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/CurvatureSizingParams.html#property-detail","title":"CurvatureSizingParams > Property detail","text":"Property detail\n\n\n\nproperty CurvatureSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty CurvatureSizingParams.max: float\n\nMaximum size used for computing edge and face size using curavture size control.\n\n\n\nproperty CurvatureSizingParams.min: float\n\nMinimum size used for computing edge and face size using curavture size control.\n\n\n\nproperty CurvatureSizingParams.normal_angle: float\n\nMaximum allowable angle at which one element edge may span.\n\n\n\nproperty CurvatureSizingParams.use_cad_curvature: bool\n\nOption to enable use of CAD curvature for computing edge and face size."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/CurvatureSizingParams.html#method-detail","title":"CurvatureSizingParams > Method detail","text":"Method detail\n\n\n\nCurvatureSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCurvatureSizingParams.__str__() -> str\n\n\n\n\n\nstatic CurvatureSizingParams.print_default()\n\nPrint the default values of CurvatureSizingParams object.\n\nExamples\n\n>>> CurvatureSizingParams.print_default()\n\n\n\nstatic CurvatureSizingParams.set_default(min: float = None, max: float = None, growth_rate: float = None, normal_angle: float = None, use_cad_curvature: bool = None)\n\nSet the default values of the CurvatureSizingParams object.\n\nParameters\n\nmin (float, optional) – Minimum size used for computing edge and face size using curavture size control.\n\nmax (float, optional) – Maximum size used for computing edge and face size using curavture size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\nnormal_angle (float, optional) – Maximum allowable angle at which one element edge may span.\n\nuse_cad_curvature (bool, optional) – Option to enable use of CAD curvature for computing edge and face size."},{"objectID":"Home","href":"user_guide/expressions.html#expressions","title":"Expressions","text":"Expressions\n\nExpressions are used to gather named entities needed for various operations.\n\nThe special characters used are *, !, and spaces or commas. These characters\ncan be used within a string as follows:\n\nabc\\* collects all required entities with a name starting with abc.\n\n\\*abc collects all required entities with a name ending with abc.\n\n\\*abc* collects all required entities with a name containing abc.\n\n!abc\\* collects all required entities with a name that is not starting with abc.\n\n\\*abc,\\*xyz \\*abc \\*xyz collects all required entities with a name ending with abc or xyz. A comma or a space represents OR.\n\nThe following example uses expressions in the ScopeDefinition\nclass. The part_expression parameter\nis used to gather part entities to define a scope. You can provide the exact part name or use\nexpressions for more complex entity collections."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderSplitResults.html#scaffoldersplitresults","title":"ScaffolderSplitResults","text":"ScaffolderSplitResults\n\n\n\nclass ansys.meshing.prime.autogen.scaffolderstructs.ScaffolderSplitResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, new_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult structure associated to split topofaces operation.\n\nParameters\n\nmodel (Model) – Model to create a ScaffolderSplitResults object with default parameters.\n\nnew_faces (Iterable[int], optional) – Topofaces created after split operation.\n\nerror_code (ErrorCode, optional) – Error code associated with split topofaces operation.\n\njson_data (dict, optional) – JSON dictionary to create a ScaffolderSplitResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_split_results = prime.ScaffolderSplitResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderSplitResults.html#overview","title":"ScaffolderSplitResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with split topofaces operation.\n\nnew_faces\n\nTopofaces created after split operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScaffolderSplitResults object.\n\nset_default\n\nSet the default values of the ScaffolderSplitResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderSplitResults.html#import-detail","title":"ScaffolderSplitResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderSplitResults.html#property-detail","title":"ScaffolderSplitResults > Property detail","text":"Property detail\n\n\n\nproperty ScaffolderSplitResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with split topofaces operation.\n\n\n\nproperty ScaffolderSplitResults.new_faces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopofaces created after split operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderSplitResults.html#method-detail","title":"ScaffolderSplitResults > Method detail","text":"Method detail\n\n\n\nScaffolderSplitResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolderSplitResults.__str__() -> str\n\n\n\n\n\nstatic ScaffolderSplitResults.print_default()\n\nPrint the default values of ScaffolderSplitResults object.\n\nExamples\n\n>>> ScaffolderSplitResults.print_default()\n\n\n\nstatic ScaffolderSplitResults.set_default(new_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ScaffolderSplitResults object.\n\nParameters\n\nnew_faces (Iterable[int], optional) – Topofaces created after split operation.\n\nerror_code (ErrorCode, optional) – Error code associated with split topofaces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoNodeMoveParams.html#autonodemoveparams","title":"AutoNodeMoveParams","text":"AutoNodeMoveParams\n\n\n\nclass ansys.meshing.prime.AutoNodeMoveParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure = None, target_quality: float = None, dihedral_angle: float = None, n_iterations_per_node: int = None, restrict_boundary_nodes_along_surface: bool = None, n_attempts: int = None, json_data: dict = None, **kwargs)\n\nParameters used to improve volume mesh by auto node move.\n\nParameters\n\nmodel (Model) – Model to create a AutoNodeMoveParams object with default parameters.\n\nquality_measure (CellQualityMeasure, optional) – Specify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\ntarget_quality (float, optional) – Specify target quality used for the mesh improvement based on specified quality measure.\n\ndihedral_angle (float, optional) – Dihedral angle used to mantain features of boundary face zonelets.\n\nn_iterations_per_node (int, optional) – Number of iterations per node to be moved.\n\nrestrict_boundary_nodes_along_surface (bool, optional) – Option to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\nn_attempts (int, optional) – Number of attempts to improve specified quality measure by node movement.\n\njson_data (dict, optional) – JSON dictionary to create a AutoNodeMoveParams object with provided parameters.\n\nExamples\n\n>>> auto_node_move_params = prime.AutoNodeMoveParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoNodeMoveParams.html#overview","title":"AutoNodeMoveParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndihedral_angle\n\nDihedral angle used to mantain features of boundary face zonelets.\n\nn_attempts\n\nNumber of attempts to improve specified quality measure by node movement.\n\nn_iterations_per_node\n\nNumber of iterations per node to be moved.\n\nquality_measure\n\nSpecify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\nrestrict_boundary_nodes_along_surface\n\nOption to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\ntarget_quality\n\nSpecify target quality used for the mesh improvement based on specified quality measure.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AutoNodeMoveParams object.\n\nset_default\n\nSet the default values of the AutoNodeMoveParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoNodeMoveParams.html#import-detail","title":"AutoNodeMoveParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoNodeMoveParams.html#property-detail","title":"AutoNodeMoveParams > Property detail","text":"Property detail\n\n\n\nproperty AutoNodeMoveParams.dihedral_angle: float\n\nDihedral angle used to mantain features of boundary face zonelets.\n\n\n\nproperty AutoNodeMoveParams.n_attempts: int\n\nNumber of attempts to improve specified quality measure by node movement.\n\n\n\nproperty AutoNodeMoveParams.n_iterations_per_node: int\n\nNumber of iterations per node to be moved.\n\n\n\nproperty AutoNodeMoveParams.quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure\n\nSpecify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\n\n\nproperty AutoNodeMoveParams.restrict_boundary_nodes_along_surface: bool\n\nOption to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\n\n\nproperty AutoNodeMoveParams.target_quality: float\n\nSpecify target quality used for the mesh improvement based on specified quality measure."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoNodeMoveParams.html#method-detail","title":"AutoNodeMoveParams > Method detail","text":"Method detail\n\n\n\nAutoNodeMoveParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoNodeMoveParams.__str__() -> str\n\n\n\n\n\nstatic AutoNodeMoveParams.print_default()\n\nPrint the default values of AutoNodeMoveParams object.\n\nExamples\n\n>>> AutoNodeMoveParams.print_default()\n\n\n\nstatic AutoNodeMoveParams.set_default(quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure = None, target_quality: float = None, dihedral_angle: float = None, n_iterations_per_node: int = None, restrict_boundary_nodes_along_surface: bool = None, n_attempts: int = None)\n\nSet the default values of the AutoNodeMoveParams object.\n\nParameters\n\nquality_measure (CellQualityMeasure, optional) – Specify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\ntarget_quality (float, optional) – Specify target quality used for the mesh improvement based on specified quality measure.\n\ndihedral_angle (float, optional) – Dihedral angle used to mantain features of boundary face zonelets.\n\nn_iterations_per_node (int, optional) – Number of iterations per node to be moved.\n\nrestrict_boundary_nodes_along_surface (bool, optional) – Option to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\nn_attempts (int, optional) – Number of attempts to improve specified quality measure by node movement."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatFeaturesParams.html#detectandtreatfeaturesparams","title":"DetectAndTreatFeaturesParams","text":"DetectAndTreatFeaturesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.DetectAndTreatFeaturesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, detect_and_treat_holes: bool = None, detect_and_treat_circular_faces: bool = None, treat_holes_params: DetectAndTreatHolesParams = None, treat_circular_faces_params: DetectAndTreatCircularFacesParams = None, json_data: dict = None, **kwargs)\n\nParameters for detect and treat features operations.\n\nParameters\n\nmodel (Model) – Model to create a DetectAndTreatFeaturesParams object with default parameters.\n\ndetect_and_treat_holes (bool, optional) – Option to detect and treat holes.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_and_treat_circular_faces (bool, optional) – Option to detect and treat circular faces.This is a beta parameter. The behavior and name may change in the future.\n\ntreat_holes_params (DetectAndTreatHolesParams, optional) – Parameters for detect and treat holes operation.This is a beta parameter. The behavior and name may change in the future.\n\ntreat_circular_faces_params (DetectAndTreatCircularFacesParams, optional) – Parameters for detect and treat circular faces operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectAndTreatFeaturesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_features_params = prime.DetectAndTreatFeaturesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatFeaturesParams.html#overview","title":"DetectAndTreatFeaturesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndetect_and_treat_circular_faces\n\nOption to detect and treat circular faces.\n\ndetect_and_treat_holes\n\nOption to detect and treat holes.\n\ntreat_circular_faces_params\n\nParameters for detect and treat circular faces operation.\n\ntreat_holes_params\n\nParameters for detect and treat holes operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectAndTreatFeaturesParams object.\n\nset_default\n\nSet the default values of the DetectAndTreatFeaturesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatFeaturesParams.html#import-detail","title":"DetectAndTreatFeaturesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatFeaturesParams.html#property-detail","title":"DetectAndTreatFeaturesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectAndTreatFeaturesParams.detect_and_treat_circular_faces: bool\n\nOption to detect and treat circular faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatFeaturesParams.detect_and_treat_holes: bool\n\nOption to detect and treat holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatFeaturesParams.treat_circular_faces_params: DetectAndTreatCircularFacesParams\n\nParameters for detect and treat circular faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatFeaturesParams.treat_holes_params: DetectAndTreatHolesParams\n\nParameters for detect and treat holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatFeaturesParams.html#method-detail","title":"DetectAndTreatFeaturesParams > Method detail","text":"Method detail\n\n\n\nDetectAndTreatFeaturesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectAndTreatFeaturesParams.__str__() -> str\n\n\n\n\n\nstatic DetectAndTreatFeaturesParams.print_default()\n\nPrint the default values of DetectAndTreatFeaturesParams object.\n\nExamples\n\n>>> DetectAndTreatFeaturesParams.print_default()\n\n\n\nstatic DetectAndTreatFeaturesParams.set_default(detect_and_treat_holes: bool = None, detect_and_treat_circular_faces: bool = None, treat_holes_params: DetectAndTreatHolesParams = None, treat_circular_faces_params: DetectAndTreatCircularFacesParams = None)\n\nSet the default values of the DetectAndTreatFeaturesParams object.\n\nParameters\n\ndetect_and_treat_holes (bool, optional) – Option to detect and treat holes.\n\ndetect_and_treat_circular_faces (bool, optional) – Option to detect and treat circular faces.\n\ntreat_holes_params (DetectAndTreatHolesParams, optional) – Parameters for detect and treat holes operation.\n\ntreat_circular_faces_params (DetectAndTreatCircularFacesParams, optional) – Parameters for detect and treat circular faces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchType.html#stitchtype","title":"StitchType","text":"StitchType\n\n\n\nclass ansys.meshing.prime.StitchType\n\nStitch type depending on nature of surface boundary edges to be stitched."},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchType.html#overview","title":"StitchType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLALL\n\nStitch surfaces at boundary edges.\n\nFREEFREE\n\nStitch surfaces at free boundary edges."},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchType.html#import-detail","title":"StitchType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchType.html#attribute-detail","title":"StitchType > Attribute detail","text":"Attribute detail\n\n\n\nStitchType.ALLALL = 0\n\nStitch surfaces at boundary edges.\n\n\n\nStitchType.FREEFREE = 1\n\nStitch surfaces at free boundary edges."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizingType.html#sizingtype","title":"SizingType","text":"SizingType\n\n\n\nclass ansys.meshing.prime.SizingType\n\nSizing type decides the type of size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizingType.html#overview","title":"SizingType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBOI\n\nDenotes the size control type is body of influence.\n\nCURVATURE\n\nDenotes the size control type is curvature.\n\nHARD\n\nDenotes the size control type is hard.\n\nMESHED\n\nDenotes the size control type is meshed.\n\nPROXIMITY\n\nDenotes the size control type is proximity.\n\nSOFT\n\nDenotes the size control type is soft.\n\nSOI\n\nDenotes the size control type is sphere of influence."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizingType.html#import-detail","title":"SizingType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizingType.html#attribute-detail","title":"SizingType > Attribute detail","text":"Attribute detail\n\n\n\nSizingType.BOI = 5\n\nDenotes the size control type is body of influence.\n\n\n\nSizingType.CURVATURE = 0\n\nDenotes the size control type is curvature.\n\n\n\nSizingType.HARD = 2\n\nDenotes the size control type is hard.\n\n\n\nSizingType.MESHED = 4\n\nDenotes the size control type is meshed.\n\n\n\nSizingType.PROXIMITY = 1\n\nDenotes the size control type is proximity.\n\n\n\nSizingType.SOFT = 3\n\nDenotes the size control type is soft.\n\n\n\nSizingType.SOI = 6\n\nDenotes the size control type is sphere of influence.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartCreationType.html#partcreationtype","title":"PartCreationType","text":"PartCreationType\n\n\n\nclass ansys.meshing.prime.PartCreationType\n\nPart Creation Type decides whether to create a part per CAD Model, Assembly, Part, Body."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartCreationType.html#overview","title":"PartCreationType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASSEMBLY\n\nDenotes a part per CAD Assembly.\n\nBODY\n\nDenotes a part per CAD Body.\n\nMODEL\n\nDenotes a part per CAD Model.\n\nPART\n\nDenotes a part per CAD Part."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartCreationType.html#import-detail","title":"PartCreationType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartCreationType.html#attribute-detail","title":"PartCreationType > Attribute detail","text":"Attribute detail\n\n\n\nPartCreationType.ASSEMBLY = 1\n\nDenotes a part per CAD Assembly.\n\n\n\nPartCreationType.BODY = 3\n\nDenotes a part per CAD Body.\n\n\n\nPartCreationType.MODEL = 0\n\nDenotes a part per CAD Model.\n\n\n\nPartCreationType.PART = 2\n\nDenotes a part per CAD Part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/RefineTetMeshParams.html#refinetetmeshparams","title":"RefineTetMeshParams","text":"RefineTetMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.trimmedsplinestructs.RefineTetMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, nisr: int = None, niss: int = None, nist: int = None, tolerance: float = None, json_data: dict = None, **kwargs)\n\nParameters for meshing the solid spline.\n\nParameters\n\nmodel (Model) – Model to create a RefineTetMeshParams object with default parameters.\n\nnisr (int, optional) – Interpolation elements in the local r-direction.This is a beta parameter. The behavior and name may change in the future.\n\nniss (int, optional) – Interpolation elements in the local s-direction.This is a beta parameter. The behavior and name may change in the future.\n\nnist (int, optional) – Interpolation elements in the local t-direction.This is a beta parameter. The behavior and name may change in the future.\n\ntolerance (float, optional) – Tolerance for boundary refinement.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a RefineTetMeshParams object with provided parameters.\n\nExamples\n\n>>> refine_tet_mesh_params = prime.RefineTetMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/RefineTetMeshParams.html#overview","title":"RefineTetMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nnisr\n\nInterpolation elements in the local r-direction.\n\nniss\n\nInterpolation elements in the local s-direction.\n\nnist\n\nInterpolation elements in the local t-direction.\n\ntolerance\n\nTolerance for boundary refinement.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RefineTetMeshParams object.\n\nset_default\n\nSet the default values of the RefineTetMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/RefineTetMeshParams.html#import-detail","title":"RefineTetMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/RefineTetMeshParams.html#property-detail","title":"RefineTetMeshParams > Property detail","text":"Property detail\n\n\n\nproperty RefineTetMeshParams.nisr: int\n\nInterpolation elements in the local r-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RefineTetMeshParams.niss: int\n\nInterpolation elements in the local s-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RefineTetMeshParams.nist: int\n\nInterpolation elements in the local t-direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RefineTetMeshParams.tolerance: float\n\nTolerance for boundary refinement.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/RefineTetMeshParams.html#method-detail","title":"RefineTetMeshParams > Method detail","text":"Method detail\n\n\n\nRefineTetMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRefineTetMeshParams.__str__() -> str\n\n\n\n\n\nstatic RefineTetMeshParams.print_default()\n\nPrint the default values of RefineTetMeshParams object.\n\nExamples\n\n>>> RefineTetMeshParams.print_default()\n\n\n\nstatic RefineTetMeshParams.set_default(nisr: int = None, niss: int = None, nist: int = None, tolerance: float = None)\n\nSet the default values of the RefineTetMeshParams object.\n\nParameters\n\nnisr (int, optional) – Interpolation elements in the local r-direction.\n\nniss (int, optional) – Interpolation elements in the local s-direction.\n\nnist (int, optional) – Interpolation elements in the local t-direction.\n\ntolerance (float, optional) – Tolerance for boundary refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedParams.html#deleteunwettedparams","title":"DeleteUnwettedParams","text":"DeleteUnwettedParams\n\n\n\nclass ansys.meshing.prime.DeleteUnwettedParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nDeleteUnwettedParams defines parameters for delete unwetted surfaces operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteUnwettedParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteUnwettedParams object with provided parameters.\n\nExamples\n\n>>> delete_unwetted_params = prime.DeleteUnwettedParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedParams.html#overview","title":"DeleteUnwettedParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteUnwettedParams object.\n\nset_default\n\nSet the default values of the DeleteUnwettedParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedParams.html#import-detail","title":"DeleteUnwettedParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedParams.html#method-detail","title":"DeleteUnwettedParams > Method detail","text":"Method detail\n\n\n\nDeleteUnwettedParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteUnwettedParams.__str__() -> str\n\n\n\n\n\nstatic DeleteUnwettedParams.print_default()\n\nPrint the default values of DeleteUnwettedParams object.\n\nExamples\n\n>>> DeleteUnwettedParams.print_default()\n\n\n\nstatic DeleteUnwettedParams.set_default()\n\nSet the default values of the DeleteUnwettedParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/index.html#the-materialpointmanagerstructspy-module","title":"The materialpointmanagerstructs.py module","text":"The materialpointmanagerstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/index.html#summary","title":"The materialpointmanagerstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCreateMaterialPointParams\n\nDefines parameters to create material point.\n\nCreateMaterialPointResults\n\nResults structure associated with create material point operation.\n\nDeleteMaterialPointResults\n\nResults associated with delete material point operation.\n\nMaterialPointType\n\nDefines define type of material point.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/index.html#description","title":"The materialpointmanagerstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_deformed_blade_fmd.html#ansysmeshingprimeexamplesexamplesdownload_deformed_blade_fmd","title":"ansys.meshing.prime.examples.examples.download_deformed_blade_fmd","text":"ansys.meshing.prime.examples.examples.download_deformed_blade_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_deformed_blade_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the turbine blade example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transform/Transform.html#transform","title":"Transform","text":"Transform\n\n\n\nclass ansys.meshing.prime.autogen.transform.Transform(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nProvides functionalities to initialize and manage transformation using transformation matrix.\n\nParameters\n\nmodel (Model) – Server model to create Transform object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transform/Transform.html#overview","title":"Transform > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ntransform_zonelets\n\nTransforms given zonelets using provided transform parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Transform.\n\n__exit__\n\nExit context for Transform.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transform/Transform.html#import-detail","title":"Transform > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transform/Transform.html#method-detail","title":"Transform > Method detail","text":"Method detail\n\n\n\nTransform.__enter__()\n\nEnter context for Transform.\n\n\n\nTransform.__exit__(type, value, traceback)\n\nExit context for Transform.\n\n\n\nTransform.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTransform.transform_zonelets(part_id: int, zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.TransformParams) -> ansys.meshing.prime.params.primestructs.TransformResults\n\nTransforms given zonelets using provided transform parameters.\n\nParameters\n\npart_id (int) – Part id of zonelets to be transformed.\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nparams (TransformParams) – Transform parameters.\n\nReturns\n\nReturns the transform results.\n\nReturn type\n\nTransformResults\n\nExamples\n\n>>> params = prime.TransformParams(model=model)\n>>> # scale by a factor of 2 using a 4x4 transformation matrix\n>>> params.transformation_matrix = [\n>>>    2, 0, 0, 0,\n>>>    0, 2, 0, 0,\n>>>    0, 0, 2, 0,\n>>>    0, 0, 0, 1,\n>>> ]\n>>> part = model.get_part_by_name(\"part_name\")\n>>> zonelets = part.get_face_zonelets()\n>>> result = prime.SurfaceUtilities(model).transform_zonelets(part.id, zonelets, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControl.html#volumecontrol","title":"VolumeControl","text":"VolumeControl\n\n\n\nclass ansys.meshing.prime.VolumeControl(model, id, object_id, name, local=False)\n\nDefines the scope and type of volume mesh to generate.\n\nParameters\n\nmodel (Model) – Server model to create VolumeControl object.\n\nid (int) – Id of the VolumeControl.\n\nobject_id (int) – Object id of the VolumeControl.\n\nname (str) – Name of the VolumeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControl.html#overview","title":"VolumeControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_params\n\nGet the parameters of the volume control.\n\nget_scope\n\nGets the scope for the volume control.\n\nset_params\n\nSets the volume control parameters.\n\nset_scope\n\nSets the scope for volume control to evaluate.\n\nset_suggested_name\n\nSet the unique name for the volume control based on a suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of VolumeControl.\n\nname\n\nGet the name of the volume control.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nGet a representation of the class in string format."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControl.html#import-detail","title":"VolumeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControl.html#property-detail","title":"VolumeControl > Property detail","text":"Property detail\n\n\n\nproperty VolumeControl.id\n\nGet the id of VolumeControl.\n\n\n\nproperty VolumeControl.name\n\nGet the name of the volume control.\n\nReturns\n\nName of the volume control.\n\nReturn type\n\nstr\n\nExamples\n\n>>> print(volume_control.name)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeControl.html#method-detail","title":"VolumeControl > Method detail","text":"Method detail\n\n\n\nVolumeControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeControl.__str__() -> str\n\nGet a representation of the class in string format.\n\nReturns\n\nClass data in string format.\n\nReturn type\n\nstr\n\n\n\nVolumeControl.get_params() -> ansys.meshing.prime.params.primestructs.VolumeControlParams\n\nGet the parameters of the volume control.\n\nReturns\n\nReturn parameters of the volume control.\n\nReturn type\n\nVolumeControlParams\n\nExamples\n\n>>> params = volume_control.get_params()\n\n\n\nVolumeControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the scope for the volume control.\n\nReturns\n\nReturns scope of the volume control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope_definition = volume_control.get_scope()\n\n\n\nVolumeControl.set_params(volume_control_params: ansys.meshing.prime.params.primestructs.VolumeControlParams)\n\nSets the volume control parameters.\n\nParameters\n\nvolume_control_params (VolumeControlParams) – Parameters to control volume.\n\nExamples\n\n>>> volume_control.set_params(\n>>>                  prime.VolumeControlParams(model=model,\n>>>                  cell_zonelet_type = prime.CellZoneletType.FLUID))\n\n\n\nVolumeControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the scope for volume control to evaluate.\n\nVolume control uses scope to evaluate entities for which volume mesh needs to be generated.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for volume mesh generation.\n\nReturns\n\nReturns a SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> volume_control.set_scope(prime.ScopeDefinition(model=model,\n>>>                        entity_type = ScopeEntity.VOLUMES,\n>>>                        evaluation_type = ScopeEvaluationType.ZONES,\n>>>                        zone_expression = \"vol_in\"))\n\n\n\nVolumeControl.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the volume control based on a suggested name.\n\nParameters\n\nname (str) – Suggested name for the volume control.\n\nReturns\n\nNewly suggested name of the volume control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> volume_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteZoneResults.html#deletezoneresults","title":"DeleteZoneResults","text":"DeleteZoneResults\n\n\n\nclass ansys.meshing.prime.DeleteZoneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the delete zone.\n\nParameters\n\nmodel (Model) – Model to create a DeleteZoneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the delete zone operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteZoneResults object with provided parameters.\n\nExamples\n\n>>> delete_zone_results = prime.DeleteZoneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteZoneResults.html#overview","title":"DeleteZoneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the delete zone operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteZoneResults object.\n\nset_default\n\nSet the default values of the DeleteZoneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteZoneResults.html#import-detail","title":"DeleteZoneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteZoneResults.html#property-detail","title":"DeleteZoneResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteZoneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the delete zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteZoneResults.html#method-detail","title":"DeleteZoneResults > Method detail","text":"Method detail\n\n\n\nDeleteZoneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteZoneResults.__str__() -> str\n\n\n\n\n\nstatic DeleteZoneResults.print_default()\n\nPrint the default values of DeleteZoneResults object.\n\nExamples\n\n>>> DeleteZoneResults.print_default()\n\n\n\nstatic DeleteZoneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteZoneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the delete zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectType.html#edgeconnecttype","title":"EdgeConnectType","text":"EdgeConnectType\n\n\n\nclass ansys.meshing.prime.EdgeConnectType\n\nEdge connect type to define the type of connection between edges ."},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectType.html#overview","title":"EdgeConnectType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLTOALL\n\nPerform connections between any type of edges or faces.\n\nFREETOALL\n\nPerform connections between free edges and any type of edges or faces.\n\nFREETOFREE\n\nPerform connections between free edges.\n\nNONE\n\nPerform no connection."},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectType.html#import-detail","title":"EdgeConnectType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectType.html#attribute-detail","title":"EdgeConnectType > Attribute detail","text":"Attribute detail\n\n\n\nEdgeConnectType.ALLTOALL = 1\n\nPerform connections between any type of edges or faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeConnectType.FREETOALL = 2\n\nPerform connections between free edges and any type of edges or faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeConnectType.FREETOFREE = 3\n\nPerform connections between free edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeConnectType.NONE = 0\n\nPerform no connection.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/AutoQuadMesherResults.html#autoquadmesherresults","title":"AutoQuadMesherResults","text":"AutoQuadMesherResults\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.AutoQuadMesherResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, failed_topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults of auto quad mesher.\n\nParameters\n\nmodel (Model) – Model to create a AutoQuadMesherResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if AutoQuadMesher operation is unsuccessful.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning code if AutoQuadMesher operation is partially successful.This is a beta parameter. The behavior and name may change in the future.\n\nfailed_topo_face_ids (Iterable[int], optional) – Ids of the failed topofaces during topology check.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a AutoQuadMesherResults object with provided parameters.\n\nExamples\n\n>>> auto_quad_mesher_results = prime.AutoQuadMesherResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/AutoQuadMesherResults.html#overview","title":"AutoQuadMesherResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if AutoQuadMesher operation is unsuccessful.\n\nfailed_topo_face_ids\n\nIds of the failed topofaces during topology check.\n\nwarning_codes\n\nWarning code if AutoQuadMesher operation is partially successful.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AutoQuadMesherResults object.\n\nset_default\n\nSet the default values of the AutoQuadMesherResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/AutoQuadMesherResults.html#import-detail","title":"AutoQuadMesherResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/AutoQuadMesherResults.html#property-detail","title":"AutoQuadMesherResults > Property detail","text":"Property detail\n\n\n\nproperty AutoQuadMesherResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if AutoQuadMesher operation is unsuccessful.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty AutoQuadMesherResults.failed_topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the failed topofaces during topology check.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty AutoQuadMesherResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning code if AutoQuadMesher operation is partially successful.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/AutoQuadMesherResults.html#method-detail","title":"AutoQuadMesherResults > Method detail","text":"Method detail\n\n\n\nAutoQuadMesherResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoQuadMesherResults.__str__() -> str\n\n\n\n\n\nstatic AutoQuadMesherResults.print_default()\n\nPrint the default values of AutoQuadMesherResults object.\n\nExamples\n\n>>> AutoQuadMesherResults.print_default()\n\n\n\nstatic AutoQuadMesherResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, failed_topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the AutoQuadMesherResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if AutoQuadMesher operation is unsuccessful.\n\nwarning_codes (List[WarningCode], optional) – Warning code if AutoQuadMesher operation is partially successful.\n\nfailed_topo_face_ids (Iterable[int], optional) – Ids of the failed topofaces during topology check."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_wheel_ground_scdoc.html#ansysmeshingprimeexamplesdownload_wheel_ground_scdoc","title":"ansys.meshing.prime.examples.download_wheel_ground_scdoc","text":"ansys.meshing.prime.examples.download_wheel_ground_scdoc\n\n\n\nansys.meshing.prime.examples.download_wheel_ground_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the wheel ground contact patch example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_multi_layer_quad_mesh_pcb_pmdat.html#ansysmeshingprimeexamplesdownload_multi_layer_quad_mesh_pcb_pmdat","title":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdat","text":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdat\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(cad_file, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/BoiSizingParams.html#boisizingparams","title":"BoiSizingParams","text":"BoiSizingParams\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.BoiSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nSize field computed using body of influence size control enables you to specify a body of influence(that is, a region for sizing control).\n\nThe maximum mesh size will be equal to the specified size within the body of influence.\nThe minimum size will be determined based on the influence of other size controls.\n\nParameters\n\nmodel (Model) – Model to create a BoiSizingParams object with default parameters.\n\nmax (float, optional) – Maximum size used for computing edge and face size using boi size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\njson_data (dict, optional) – JSON dictionary to create a BoiSizingParams object with provided parameters.\n\nExamples\n\n>>> boi_sizing_params = prime.BoiSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/BoiSizingParams.html#overview","title":"BoiSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nmax\n\nMaximum size used for computing edge and face size using boi size control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of BoiSizingParams object.\n\nset_default\n\nSet the default values of the BoiSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/BoiSizingParams.html#import-detail","title":"BoiSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/BoiSizingParams.html#property-detail","title":"BoiSizingParams > Property detail","text":"Property detail\n\n\n\nproperty BoiSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty BoiSizingParams.max: float\n\nMaximum size used for computing edge and face size using boi size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/BoiSizingParams.html#method-detail","title":"BoiSizingParams > Method detail","text":"Method detail\n\n\n\nBoiSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBoiSizingParams.__str__() -> str\n\n\n\n\n\nstatic BoiSizingParams.print_default()\n\nPrint the default values of BoiSizingParams object.\n\nExamples\n\n>>> BoiSizingParams.print_default()\n\n\n\nstatic BoiSizingParams.set_default(max: float = None, growth_rate: float = None)\n\nSet the default values of the BoiSizingParams object.\n\nParameters\n\nmax (float, optional) – Maximum size used for computing edge and face size using boi size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshTool.html#volumemeshtool","title":"VolumeMeshTool","text":"VolumeMeshTool\n\n\n\nclass ansys.meshing.prime.VolumeMeshTool(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nVolumeMeshTool allows you to check grid and improve volume mesh quality.\n\nVolumeMeshTool provides various volume mesh improvement algorithms.\n\nParameters\n\nmodel (Model) – Server model to create VolumeMeshTool object."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshTool.html#overview","title":"VolumeMeshTool > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nassign_mesh_regions\n\nAssigns a region id to the cells in target cell zonelets of target part id. The region id is based on their location within source part ids.\n\ncheck_mesh\n\nChecks mesh of a part.\n\ncopy_cell_zonelets\n\nCopy cell zonelets and face zonelets connected to the cell zonelets.\n\nget_parts_for_points\n\nFinds parts enclosing the given list of points.\n\nimprove_by_auto_node_move\n\nImprove volume mesh by auto node move.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VolumeMeshTool.\n\n__exit__\n\nExit context for VolumeMeshTool.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshTool.html#import-detail","title":"VolumeMeshTool > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshTool.html#method-detail","title":"VolumeMeshTool > Method detail","text":"Method detail\n\n\n\nVolumeMeshTool.__enter__()\n\nEnter context for VolumeMeshTool.\n\n\n\nVolumeMeshTool.__exit__(type, value, traceback)\n\nExit context for VolumeMeshTool.\n\n\n\nVolumeMeshTool.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeMeshTool.assign_mesh_regions(target_part_id: int, target_cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], source_part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], small_regions_volume_fraction: float) -> ansys.meshing.prime.params.primestructs.VolumeMeshToolResults\n\nAssigns a region id to the cells in target cell zonelets of target part id. The region id is based on their location within source part ids.\n\nParameters\n\ntarget_part_id (int) – Id of the target part.\n\ntarget_cell_zonelets (Iterable[int]) – Ids of cell zonelets to be split into regions.\n\nsource_part_ids (Iterable[int]) – Ids of solids used as a reference for assigning regions.\n\nsmall_regions_volume_fraction (float) – Regions with volumes smaller than a specified fraction of the total volume are merged into their largest adjacent region.\nThis helps to eliminate isolated cells and thin regions from the output.\n\nReturns\n\nReturns the VolumeMeshToolResults.\n\nReturn type\n\nVolumeMeshToolResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = volume_mesh_tool.AssignMeshRegions(target_part_id, target_cell_zonelets, source_part_ids, small_regions_volume_fraction)\n\n\n\nVolumeMeshTool.check_mesh(part_id: int, params: ansys.meshing.prime.params.primestructs.CheckMeshParams) -> ansys.meshing.prime.params.primestructs.CheckMeshResults\n\nChecks mesh of a part.\n\nParameters\n\npart_id (int) – Id of a part.\n\nparams (CheckMeshParams) – Parameters to check mesh.\n\nReturns\n\nReturns the CheckMeshResults.\n\nReturn type\n\nCheckMeshResults\n\nExamples\n\n>>> results = volume_mesh_tool.check_mesh(part_id,\n>>>                                prime.CheckMeshParams(model =model))\n\n\n\nVolumeMeshTool.copy_cell_zonelets(cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], target_part_id: int, params: ansys.meshing.prime.params.primestructs.CopyZoneletsParams) -> ansys.meshing.prime.params.primestructs.CopyZoneletsResults\n\nCopy cell zonelets and face zonelets connected to the cell zonelets.\n\nParameters\n\ncell_zonelets (Iterable[int]) – Ids of cell zonelets to be copied.\n\ntarget_part_id (int) – Part id used to move the copied zonelets.\n\nparams (CopyZoneletsParams) – Parameters to copy cell zonelets.\n\nReturns\n\nReturns the CopyZoneletsResults.\n\nReturn type\n\nCopyZoneletsResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>>> results = volume_mesh_tool.copy_cell_zonelets(cell_zonelets, target_part_id = new_part.id, prime.CopyZoneletsParams(model = model))\n\n\n\nVolumeMeshTool.get_parts_for_points(points: ansys.meshing.prime.params.primestructs.Iterable[float], params: PartsForPointsParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFinds parts enclosing the given list of points.\n\nParameters\n\npoints (Iterable[float]) – Coordinates of points for which parts need to be found.\n\nparams (PartsForPointsParams) – Parameters for searching parts.\n\nReturns\n\nReturns array containing information about parts enclosing the points.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = volume_mesh_tool.get_parts_for_points([0., 0., 0.], params)\n\n\n\nVolumeMeshTool.improve_by_auto_node_move(part_id: int, cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], boundary_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.AutoNodeMoveParams) -> ansys.meshing.prime.params.primestructs.VolumeMeshToolResults\n\nImprove volume mesh by auto node move.\n\nParameters\n\npart_id (int) – Id of a part.\n\ncell_zonelets (Iterable[int]) – Ids of cell zonelets to be improved.\n\nboundary_zonelets (Iterable[int]) – Ids of boundary face zonelets.\n\nparams (AutoNodeMoveParams) – Auto node move parameters.\n\nReturns\n\nReturn the VolumeMeshToolResults.\n\nReturn type\n\nVolumeMeshToolResults\n\nExamples\n\n>>> results = volume_mesh_tool.improve_by_auto_node_move(part_id,\n>>>                                cell_zonelets,\n>>>                                boundary_zonelets,\n>>>                                prime.AutoNodeMoveParams(model =model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsParams.html#mergezoneletsparams","title":"MergeZoneletsParams","text":"MergeZoneletsParams\n\n\n\nclass ansys.meshing.prime.MergeZoneletsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merge_small_zonelets_with_neighbors: bool = None, element_count_limit: int = None, json_data: dict = None, **kwargs)\n\nParameters to merge zonelets.\n\nParameters\n\nmodel (Model) – Model to create a MergeZoneletsParams object with default parameters.\n\nmerge_small_zonelets_with_neighbors (bool, optional) – Merge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes: Works better if zonelets are separated by region.\n\nelement_count_limit (int, optional) – Element count limit to identify small zonelets.\n\njson_data (dict, optional) – JSON dictionary to create a MergeZoneletsParams object with provided parameters.\n\nExamples\n\n>>> merge_zonelets_params = prime.MergeZoneletsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsParams.html#overview","title":"MergeZoneletsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nelement_count_limit\n\nElement count limit to identify small zonelets.\n\nmerge_small_zonelets_with_neighbors\n\nWorks better if zonelets are separated by region.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeZoneletsParams object.\n\nset_default\n\nSet the default values of the MergeZoneletsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsParams.html#import-detail","title":"MergeZoneletsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsParams.html#property-detail","title":"MergeZoneletsParams > Property detail","text":"Property detail\n\n\n\nproperty MergeZoneletsParams.element_count_limit: int\n\nElement count limit to identify small zonelets.\n\n\n\nproperty MergeZoneletsParams.merge_small_zonelets_with_neighbors: bool\n\nWorks better if zonelets are separated by region.\n\nType\n\nMerge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsParams.html#method-detail","title":"MergeZoneletsParams > Method detail","text":"Method detail\n\n\n\nMergeZoneletsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeZoneletsParams.__str__() -> str\n\n\n\n\n\nstatic MergeZoneletsParams.print_default()\n\nPrint the default values of MergeZoneletsParams object.\n\nExamples\n\n>>> MergeZoneletsParams.print_default()\n\n\n\nstatic MergeZoneletsParams.set_default(merge_small_zonelets_with_neighbors: bool = None, element_count_limit: int = None)\n\nSet the default values of the MergeZoneletsParams object.\n\nParameters\n\nmerge_small_zonelets_with_neighbors (bool, optional) – Merge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes: Works better if zonelets are separated by region.\n\nelement_count_limit (int, optional) – Element count limit to identify small zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/index.html#the-graphics-package","title":"The graphics package","text":"The graphics package\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/index.html#summary","title":"The graphics package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nplotter\n\nModule for the plotter.\n\nClasses\n\n\n\n\n\nGraphics\n\nManages graphics in PyPrime.\n\nPrimePlotter\n\nCreate a plotter for PyPrimeMesh models.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumesweeper/index.html#the-volumesweeperpy-module","title":"The volumesweeper.py module","text":"The volumesweeper.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumesweeper/index.html#summary","title":"The volumesweeper.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVolumeSweeper\n\nProvides operations to generate volume meshes using stacker technology.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumesweeper/index.html#description","title":"The volumesweeper.py module > Description","text":"Description\n\nModule for volume sweeper operations."},{"objectID":"Home","href":"api/ansys/meshing/prime/Scaffolder.html#scaffolder","title":"Scaffolder","text":"Scaffolder\n\n\n\nclass ansys.meshing.prime.Scaffolder(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, part_id: int)\n\nScaffolder is used for achieving connections in structures made of sheets and beams. Solid bodies should be suppressed before applying scaffolding.\n\nParameters\n\nmodel (Model) – Server model to create Scaffolder object.\n\npart_id (int) – Id of the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/Scaffolder.html#overview","title":"Scaffolder > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndelete_shadowed_topo_faces\n\nDelete fully shadowed topofaces.\n\nmerge_overlapping_topo_faces\n\nMerge overlapping topofaces.\n\nscaffold_topo_faces_and_beams\n\nScaffold faces and beams with provided parameters.\n\nsplit_topo_faces_by_mesh_region\n\nSplit input topofaces by mesh region.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Scaffolder.\n\n__exit__\n\nExit context for Scaffolder.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/Scaffolder.html#import-detail","title":"Scaffolder > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/Scaffolder.html#method-detail","title":"Scaffolder > Method detail","text":"Method detail\n\n\n\nScaffolder.__enter__()\n\nEnter context for Scaffolder.\n\n\n\nScaffolder.__exit__(type, value, traceback)\n\nExit context for Scaffolder.\n\n\n\nScaffolder.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolder.delete_shadowed_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.VolumetricScaffolderParams) -> ansys.meshing.prime.params.primestructs.ScaffolderMergeResults\n\nDelete fully shadowed topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of input topofaces.\n\nparams (VolumetricScaffolderParams) – Volumetric scaffolder parameters.\n\nReturns\n\nReturn results in ScaffolderMergeResults.\n\nReturn type\n\nScaffolderMergeResults\n\nExamples\n\n>>> results = scaffolder.delete_shadowed_topo_faces([1,2,3,4,5], params)\n\n\n\nScaffolder.merge_overlapping_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ScaffolderParams) -> ansys.meshing.prime.params.primestructs.ScaffolderMergeResults\n\nMerge overlapping topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topology faces.\n\nparams (ScaffolderParams) – Scaffolder parameters.\n\nReturns\n\nReturn results in ScaffolderMergeResults.\n\nReturn type\n\nScaffolderMergeResults\n\nExamples\n\n>>> results = scaffolder.MergeOverlappingTopoFaces([1,2,7,8], params)\n\n\n\nScaffolder.scaffold_topo_faces_and_beams(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], topo_beams: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ScaffolderParams) -> ansys.meshing.prime.params.primestructs.ScaffolderResults\n\nScaffold faces and beams with provided parameters.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topology faces.\n\ntopo_beams (Iterable[int]) – Ids of topology edges for beams.\n\nparams (ScaffolderParams) – Scaffolding parameters.\n\nReturns\n\nReturn results in ScaffolderResults structure.\n\nReturn type\n\nScaffolderResults\n\nExamples\n\n>>> results = scaffolder.ScaffoldTopoFacesAndBeams([1,2], [7,8], params)\n\n\n\nScaffolder.split_topo_faces_by_mesh_region(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.ScaffolderSplitResults\n\nSplit input topofaces by mesh region.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topology faces.\n\nReturns\n\nReturn results in ScaffolderSplitResults type.\n\nReturn type\n\nScaffolderSplitResults\n\nExamples\n\n>>> results = scaffolder.split_topo_faces_by_mesh_region([1,2,7,8])"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySelfIntersectionParams.html#searchbyselfintersectionparams","title":"SearchBySelfIntersectionParams","text":"SearchBySelfIntersectionParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchBySelfIntersectionParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to search by face element intersection.\n\nParameters\n\nmodel (Model) – Model to create a SearchBySelfIntersectionParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a SearchBySelfIntersectionParams object with provided parameters.\n\nExamples\n\n>>> search_by_self_intersection_params = prime.SearchBySelfIntersectionParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySelfIntersectionParams.html#overview","title":"SearchBySelfIntersectionParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchBySelfIntersectionParams object.\n\nset_default\n\nSet the default values of the SearchBySelfIntersectionParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySelfIntersectionParams.html#import-detail","title":"SearchBySelfIntersectionParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySelfIntersectionParams.html#method-detail","title":"SearchBySelfIntersectionParams > Method detail","text":"Method detail\n\n\n\nSearchBySelfIntersectionParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchBySelfIntersectionParams.__str__() -> str\n\n\n\n\n\nstatic SearchBySelfIntersectionParams.print_default()\n\nPrint the default values of SearchBySelfIntersectionParams object.\n\nExamples\n\n>>> SearchBySelfIntersectionParams.print_default()\n\n\n\nstatic SearchBySelfIntersectionParams.set_default()\n\nSet the default values of the SearchBySelfIntersectionParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingResolution.html#cadrefacetingresolution","title":"CadRefacetingResolution","text":"CadRefacetingResolution\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.CadRefacetingResolution\n\nLevels of CAD faceting refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingResolution.html#overview","title":"CadRefacetingResolution > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCOARSE\n\nDenotes coarse resolution of CAD faceting.\n\nCUSTOM\n\nDenotes custom resolution of CAD faceting.\n\nFINE\n\nDenotes fine resolution of CAD faceting.\n\nMEDIUM\n\nDenotes medium resolution of CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingResolution.html#import-detail","title":"CadRefacetingResolution > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingResolution.html#attribute-detail","title":"CadRefacetingResolution > Attribute detail","text":"Attribute detail\n\n\n\nCadRefacetingResolution.COARSE = 0\n\nDenotes coarse resolution of CAD faceting.\n\n\n\nCadRefacetingResolution.CUSTOM = 3\n\nDenotes custom resolution of CAD faceting.\n\n\n\nCadRefacetingResolution.FINE = 2\n\nDenotes fine resolution of CAD faceting.\n\n\n\nCadRefacetingResolution.MEDIUM = 1\n\nDenotes medium resolution of CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeNamingType.html#volumenamingtype","title":"VolumeNamingType","text":"VolumeNamingType\n\n\n\nclass ansys.meshing.prime.VolumeNamingType\n\nIndicate source types used to name volume zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeNamingType.html#overview","title":"VolumeNamingType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBYFACELABEL\n\nOption to use face label name as source to name volume zones.\n\nBYFACENORMALS\n\nOption to use face normal as source to name volume zones. Here, the volume zones with face normal into the volume are considered as dead and volume zones with face normal outwards from the volume are considered as solid..\n\nBYFACEZONE\n\nOption to use face zone name as source to name volume zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeNamingType.html#import-detail","title":"VolumeNamingType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeNamingType.html#attribute-detail","title":"VolumeNamingType > Attribute detail","text":"Attribute detail\n\n\n\nVolumeNamingType.BYFACELABEL = 1\n\nOption to use face label name as source to name volume zones.\n\n\n\nVolumeNamingType.BYFACENORMALS = 4\n\nOption to use face normal as source to name volume zones. Here, the volume zones with face normal into the volume are considered as dead and volume zones with face normal outwards from the volume are considered as solid..\n\n\n\nVolumeNamingType.BYFACEZONE = 2\n\nOption to use face zone name as source to name volume zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportBoundaryFittedSplineParams.html#exportboundaryfittedsplineparams","title":"ExportBoundaryFittedSplineParams","text":"ExportBoundaryFittedSplineParams\n\n\n\nclass ansys.meshing.prime.ExportBoundaryFittedSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id_offset: int = None, id_start: int = None, json_data: dict = None, **kwargs)\n\nParameters for exporting boundary fitted splines.\n\nParameters\n\nmodel (Model) – Model to create a ExportBoundaryFittedSplineParams object with default parameters.\n\nid_offset (int, optional) – Offset value for IGA entity ids between parts.\n\nid_start (int, optional) – Start ids for IGA entities.\n\njson_data (dict, optional) – JSON dictionary to create a ExportBoundaryFittedSplineParams object with provided parameters.\n\nExamples\n\n>>> export_boundary_fitted_spline_params = prime.ExportBoundaryFittedSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportBoundaryFittedSplineParams.html#overview","title":"ExportBoundaryFittedSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid_offset\n\nOffset value for IGA entity ids between parts.\n\nid_start\n\nStart ids for IGA entities.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportBoundaryFittedSplineParams object.\n\nset_default\n\nSet the default values of the ExportBoundaryFittedSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportBoundaryFittedSplineParams.html#import-detail","title":"ExportBoundaryFittedSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportBoundaryFittedSplineParams.html#property-detail","title":"ExportBoundaryFittedSplineParams > Property detail","text":"Property detail\n\n\n\nproperty ExportBoundaryFittedSplineParams.id_offset: int\n\nOffset value for IGA entity ids between parts.\n\n\n\nproperty ExportBoundaryFittedSplineParams.id_start: int\n\nStart ids for IGA entities."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportBoundaryFittedSplineParams.html#method-detail","title":"ExportBoundaryFittedSplineParams > Method detail","text":"Method detail\n\n\n\nExportBoundaryFittedSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportBoundaryFittedSplineParams.__str__() -> str\n\n\n\n\n\nstatic ExportBoundaryFittedSplineParams.print_default()\n\nPrint the default values of ExportBoundaryFittedSplineParams object.\n\nExamples\n\n>>> ExportBoundaryFittedSplineParams.print_default()\n\n\n\nstatic ExportBoundaryFittedSplineParams.set_default(id_offset: int = None, id_start: int = None)\n\nSet the default values of the ExportBoundaryFittedSplineParams object.\n\nParameters\n\nid_offset (int, optional) – Offset value for IGA entity ids between parts.\n\nid_start (int, optional) – Start ids for IGA entities."},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryResult.html#periodiccontrolsummaryresult","title":"PeriodicControlSummaryResult","text":"PeriodicControlSummaryResult\n\n\n\nclass ansys.meshing.prime.PeriodicControlSummaryResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, message: str = None, json_data: dict = None, **kwargs)\n\nResults of Periodic control summary.\n\nParameters\n\nmodel (Model) – Model to create a PeriodicControlSummaryResult object with default parameters.\n\nmessage (str, optional) – String with the periodic control summary.\n\njson_data (dict, optional) – JSON dictionary to create a PeriodicControlSummaryResult object with provided parameters.\n\nExamples\n\n>>> periodic_control_summary_result = prime.PeriodicControlSummaryResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryResult.html#overview","title":"PeriodicControlSummaryResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmessage\n\nString with the periodic control summary.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PeriodicControlSummaryResult object.\n\nset_default\n\nSet the default values of the PeriodicControlSummaryResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryResult.html#import-detail","title":"PeriodicControlSummaryResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryResult.html#property-detail","title":"PeriodicControlSummaryResult > Property detail","text":"Property detail\n\n\n\nproperty PeriodicControlSummaryResult.message: str\n\nString with the periodic control summary."},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryResult.html#method-detail","title":"PeriodicControlSummaryResult > Method detail","text":"Method detail\n\n\n\nPeriodicControlSummaryResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControlSummaryResult.__str__() -> str\n\n\n\n\n\nstatic PeriodicControlSummaryResult.print_default()\n\nPrint the default values of PeriodicControlSummaryResult object.\n\nExamples\n\n>>> PeriodicControlSummaryResult.print_default()\n\n\n\nstatic PeriodicControlSummaryResult.set_default(message: str = None)\n\nSet the default values of the PeriodicControlSummaryResult object.\n\nParameters\n\nmessage (str, optional) – String with the periodic control summary."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearch/index.html#the-surfacesearchpy-module","title":"The surfacesearch.py module","text":"The surfacesearch.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearch/index.html#summary","title":"The surfacesearch.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSurfaceSearch\n\nSurfaceSearch allows you to check surface mesh quality.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearch/index.html#description","title":"The surfacesearch.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshParams.html#importfluentmeshingmeshparams","title":"ImportFluentMeshingMeshParams","text":"ImportFluentMeshingMeshParams\n\n\n\nclass ansys.meshing.prime.ImportFluentMeshingMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, enable_multi_threading: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to import fluent meshing mesh.\n\nParameters\n\nmodel (Model) – Model to create a ImportFluentMeshingMeshParams object with default parameters.\n\nappend (bool, optional) – Option to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nenable_multi_threading (bool, optional) – Option to import multiple files in parallel using multithreading.\n\njson_data (dict, optional) – JSON dictionary to create a ImportFluentMeshingMeshParams object with provided parameters.\n\nExamples\n\n>>> import_fluent_meshing_mesh_params = prime.ImportFluentMeshingMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshParams.html#overview","title":"ImportFluentMeshingMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nenable_multi_threading\n\nOption to import multiple files in parallel using multithreading.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportFluentMeshingMeshParams object.\n\nset_default\n\nSet the default values of the ImportFluentMeshingMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshParams.html#import-detail","title":"ImportFluentMeshingMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshParams.html#property-detail","title":"ImportFluentMeshingMeshParams > Property detail","text":"Property detail\n\n\n\nproperty ImportFluentMeshingMeshParams.append: bool\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\n\n\nproperty ImportFluentMeshingMeshParams.enable_multi_threading: bool\n\nOption to import multiple files in parallel using multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentMeshingMeshParams.html#method-detail","title":"ImportFluentMeshingMeshParams > Method detail","text":"Method detail\n\n\n\nImportFluentMeshingMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportFluentMeshingMeshParams.__str__() -> str\n\n\n\n\n\nstatic ImportFluentMeshingMeshParams.print_default()\n\nPrint the default values of ImportFluentMeshingMeshParams object.\n\nExamples\n\n>>> ImportFluentMeshingMeshParams.print_default()\n\n\n\nstatic ImportFluentMeshingMeshParams.set_default(append: bool = None, enable_multi_threading: bool = None)\n\nSet the default values of the ImportFluentMeshingMeshParams object.\n\nParameters\n\nappend (bool, optional) – Option to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nenable_multi_threading (bool, optional) – Option to import multiple files in parallel using multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefield/SizeField.html#sizefield","title":"SizeField","text":"SizeField\n\n\n\nclass ansys.meshing.prime.autogen.sizefield.SizeField(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nThe size field is computed based on the size control defined.\n\nYou can remesh surfaces and edges based on the size field.\n\nParameters\n\nmodel (Model) – Server model to create SizeField object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefield/SizeField.html#overview","title":"SizeField > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncompute_volumetric\n\nComputes the volumetric size field using given size control ids.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for SizeField.\n\n__exit__\n\nExit context for SizeField.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefield/SizeField.html#import-detail","title":"SizeField > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefield/SizeField.html#method-detail","title":"SizeField > Method detail","text":"Method detail\n\n\n\nSizeField.__enter__()\n\nEnter context for SizeField.\n\n\n\nSizeField.__exit__(type, value, traceback)\n\nExit context for SizeField.\n\n\n\nSizeField.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeField.compute_volumetric(size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int], volumetric_sizefield_params: ansys.meshing.prime.params.primestructs.VolumetricSizeFieldComputeParams) -> ansys.meshing.prime.params.primestructs.VolumetricSizeFieldComputeResults\n\nComputes the volumetric size field using given size control ids.\n\nParameters\n\nsize_control_ids (Iterable[int]) – Ids of size controls.\n\nExamples\n\n>>> size_field.compute_volumetric(\n>>>           [size_control.id for size_control in model.control_data.size_controls], volumetric_sizefield_params))"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/index.html#the-commontypespy-module","title":"The commontypes.py module","text":"The commontypes.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/index.html#summary","title":"The commontypes.py module > Summary","text":"Summary\n\nEnums\n\n\n\n\n\nCellQualityMeasure\n\nThe type of cell quality measures to check cell quality metrics.\n\nFaceQualityMeasure\n\nThe type of face quality measures to check face quality metrics.\n\nShellBLOffsetType\n\nType of offset method during ShellBL generation.\n\nSizeFieldType\n\nThe type of sizing field to be used to fetch element size at given location.\n\nSolverType\n\nType of solver.\n\nSurfaceFeatureType\n\nType of face edges considered as features.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/index.html#description","title":"The commontypes.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingMaxEdgeSizeLimit.html#cadrefacetingmaxedgesizelimit","title":"CadRefacetingMaxEdgeSizeLimit","text":"CadRefacetingMaxEdgeSizeLimit\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.CadRefacetingMaxEdgeSizeLimit\n\nTypes of maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingMaxEdgeSizeLimit.html#overview","title":"CadRefacetingMaxEdgeSizeLimit > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nABSOLUTE\n\nDenotes absolute maximum edge size limit for CAD faceting.\n\nNONE\n\nDenotes no maximum edge size limit for CAD faceting.\n\nRELATIVE\n\nDenotes relative maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingMaxEdgeSizeLimit.html#import-detail","title":"CadRefacetingMaxEdgeSizeLimit > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingMaxEdgeSizeLimit.html#attribute-detail","title":"CadRefacetingMaxEdgeSizeLimit > Attribute detail","text":"Attribute detail\n\n\n\nCadRefacetingMaxEdgeSizeLimit.ABSOLUTE = 1\n\nDenotes absolute maximum edge size limit for CAD faceting.\n\n\n\nCadRefacetingMaxEdgeSizeLimit.NONE = 0\n\nDenotes no maximum edge size limit for CAD faceting.\n\n\n\nCadRefacetingMaxEdgeSizeLimit.RELATIVE = 2\n\nDenotes relative maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LSDynaAnalysisType.html#lsdynaanalysistype","title":"LSDynaAnalysisType","text":"LSDynaAnalysisType\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.LSDynaAnalysisType\n\nProvides the LS-DYNA analysis type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LSDynaAnalysisType.html#overview","title":"LSDynaAnalysisType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDOORSLAM\n\nOption to select doorslam as LS-DYNA analysis type.\n\nSEATBELT\n\nOption to select Seatbelt as LS-DYNA analysis type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LSDynaAnalysisType.html#import-detail","title":"LSDynaAnalysisType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LSDynaAnalysisType.html#attribute-detail","title":"LSDynaAnalysisType > Attribute detail","text":"Attribute detail\n\n\n\nLSDynaAnalysisType.DOORSLAM = 0\n\nOption to select doorslam as LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nLSDynaAnalysisType.SEATBELT = 1\n\nOption to select Seatbelt as LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/CellZoneletType.html#cellzonelettype","title":"CellZoneletType","text":"CellZoneletType\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.CellZoneletType\n\nTypes of cell zonelet."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/CellZoneletType.html#overview","title":"CellZoneletType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDEAD\n\nCell zonelet type is dead.\n\nFLUID\n\nCell zonelet type is fluid.\n\nSOLID\n\nCell zonelet type is solid."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/CellZoneletType.html#import-detail","title":"CellZoneletType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/CellZoneletType.html#attribute-detail","title":"CellZoneletType > Attribute detail","text":"Attribute detail\n\n\n\nCellZoneletType.DEAD = 0\n\nCell zonelet type is dead.\n\n\n\nCellZoneletType.FLUID = 1\n\nCell zonelet type is fluid.\n\n\n\nCellZoneletType.SOLID = 17\n\nCell zonelet type is solid."},{"objectID":"Home","href":"api/ansys/meshing/prime/NamePatternParams.html#namepatternparams","title":"NamePatternParams","text":"NamePatternParams\n\n\n\nclass ansys.meshing.prime.NamePatternParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to be used to match name pattern with names.\n\nParameters\n\nmodel (Model) – Model to create a NamePatternParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a NamePatternParams object with provided parameters.\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/NamePatternParams.html#overview","title":"NamePatternParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of NamePatternParams object.\n\nset_default\n\nSet the default values of the NamePatternParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/NamePatternParams.html#import-detail","title":"NamePatternParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/NamePatternParams.html#method-detail","title":"NamePatternParams > Method detail","text":"Method detail\n\n\n\nNamePatternParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nNamePatternParams.__str__() -> str\n\n\n\n\n\nstatic NamePatternParams.print_default()\n\nPrint the default values of NamePatternParams object.\n\nExamples\n\n>>> NamePatternParams.print_default()\n\n\n\nstatic NamePatternParams.set_default()\n\nSet the default values of the NamePatternParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connect/Connect.html#connect","title":"Connect","text":"Connect\n\n\n\nclass ansys.meshing.prime.autogen.connect.Connect(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nConnect face zonelets.\n\nPerform surface connection using various connect algorithms on face zonelets.\n\nParameters\n\nmodel (Model) – Server model to create Connect object.\n\nNotes\n\nConnect operations support only computational mesh, which is mesh with reasonable size changes and quality. Faceted geometry, which is STL-like mesh that can have extreme size changes and many sliver elements, not supported."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connect/Connect.html#overview","title":"Connect > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfuse_face_zonelets\n\nPerform fuse between overlapping face zonelets within a single part. Surfaces that are fused can then be colocated, merged or removed as directed.\n\nintersect_face_zonelets\n\nPerform intersection between specified face zonelets of the part with the given intersect parameters.\n\njoin_face_zonelets\n\nJoins a set of face zones with another set of face zones.\n\nmerge_boundary_nodes\n\nMerges boundary nodes of source face zonelets with boundary nodes of target face zonelets according to the provided parameters.\n\nstitch_face_zonelets\n\nStitches a set of face zonelets with another set of face zonelets.\n\nsubtract_volumes\n\nSubtract cutter volumes from target volumes. Volumes should be computed prior to calling this function. If multiple parts are being merged to form a single part, then volumes should be computed for each part prior to merging. Use compute_closed_volumes to do so. Volumes involved in this operation should not have self intersections. You can use SearchZoneletsBySelfIntersections to check self intersections in the volume.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Connect.\n\n__exit__\n\nExit context for Connect.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connect/Connect.html#import-detail","title":"Connect > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connect/Connect.html#method-detail","title":"Connect > Method detail","text":"Method detail\n\n\n\nConnect.__enter__()\n\nEnter context for Connect.\n\n\n\nConnect.__exit__(type, value, traceback)\n\nExit context for Connect.\n\n\n\nConnect.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nConnect.fuse_face_zonelets(part_id: int, source_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], target_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.FuseParams) -> ansys.meshing.prime.params.primestructs.FuseResults\n\nPerform fuse between overlapping face zonelets within a single part. Surfaces that are fused can then be colocated, merged or removed as directed.\n\nParameters\n\npart_id (int) – Id of the part.\n\nsource_face_zonelet_ids (Iterable[int]) – Ids of source face zonelets to be fused.\n\ntarget_face_zonelet_ids (Iterable[int]) – Ids of target face zonelets to be fused.\n\nparams (FuseParams) – Parameters for fuse operation.\n\nReturns\n\nReturns the FuseResults.\n\nReturn type\n\nFuseResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\nconnect = Connect(model = model)\nconnect.fuse_face_zonelets(part.id, source_face_zonelet_ids, target_face_zonelet_ids, fuse_params)\n\n\n\nConnect.intersect_face_zonelets(part_id: int, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], with_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.IntersectParams) -> ansys.meshing.prime.params.primestructs.ConnectResults\n\nPerform intersection between specified face zonelets of the part with the given intersect parameters.\n\nParameters\n\npart_id (int) – Id of the part.\n\nface_zonelet_ids (Iterable[int]) – Face zonelets to be intersected.\n\nwith_face_zonelet_ids (Iterable[int]) – Face zonelets to be intersected with.\n\nparams (IntersectParams) – Parameters for intersection.\n\nReturns\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.intersect_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, params)\n\n\n\nConnect.join_face_zonelets(part_id: int, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], with_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.JoinParams) -> ansys.meshing.prime.params.primestructs.ConnectResults\n\nJoins a set of face zones with another set of face zones.\n\nParameters\n\npart_id (int) – Id of the part.\n\nface_zonelet_ids (Iterable[int]) – Face zonelets to be joined.\n\nwith_face_zonelet_ids (Iterable[int]) – Face zonelets to be joined with.\n\nparams (JoinParams) – Parameters for join.\n\nReturns\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.join_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, params)\n\n\n\nConnect.merge_boundary_nodes(part_id: int, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], with_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergeBoundaryNodesParams) -> ansys.meshing.prime.params.primestructs.MergeBoundaryNodesResults\n\nMerges boundary nodes of source face zonelets with boundary nodes of target face zonelets according to the provided parameters.\n\nParameters\n\npart_id (int) – Id of the part where merging has to take place.\n\nface_zonelet_ids (Iterable[int]) – Ids of the source face zonelets.\n\nwith_face_zonelet_ids (Iterable[int]) – Ids of the target face zonelets.\n\nparams (MergeBoundaryNodesParams) – Parameters for merging boundary nodes.\n\nReturns\n\nReturns the MergeBoundaryNodesResults.\n\nReturn type\n\nMergeBoundaryNodesResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.MergeBoundaryNodes(2, [2,3], [4,5], params)\n\n\n\nConnect.stitch_face_zonelets(part_id: int, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], with_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.StitchParams) -> ansys.meshing.prime.params.primestructs.ConnectResults\n\nStitches a set of face zonelets with another set of face zonelets.\n\nParameters\n\npart_id (int) – Id of the part.\n\nface_zonelet_ids (Iterable[int]) – Face zonelets to be stitched.\n\nwith_face_zonelet_ids (Iterable[int]) – Face zonelets to be stitched with.\n\nparams (StitchParams) – Parameters for stitch.\n\nReturns\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.stitch_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, stitch_params)\n\n\n\nConnect.subtract_volumes(part_id: int, target_volumes: ansys.meshing.prime.params.primestructs.Iterable[int], cutter_volumes: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.SubtractVolumesParams) -> ansys.meshing.prime.params.primestructs.SubtractVolumesResults\n\nSubtract cutter volumes from target volumes. Volumes should be computed prior to calling this function. If multiple parts are being merged to form a single part, then volumes should be computed for each part prior to merging. Use compute_closed_volumes to do so. Volumes involved in this operation should not have self intersections. You can use SearchZoneletsBySelfIntersections to check self intersections in the volume.\n\nParameters\n\npart_id (int) – Id of part containing target and cutter volumes for subtract operation.\n\ntarget_volumes (Iterable[int]) – Ids of target volumes.\n\ncutter_volumes (Iterable[int]) – Ids of cutter volumes.\n\nparams (SubtractVolumesParams) – Parameters to control subtraction of volumes.\n\nReturns\n\nReturns the SubtractVolumesResults.\n\nReturn type\n\nSubtractVolumesResults\n\nExamples\n\n>>> results = connect.subtract_volumes(part_id, target_volumes, cutter_volumes, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SoftSizingParams.html#softsizingparams","title":"SoftSizingParams","text":"SoftSizingParams\n\n\n\nclass ansys.meshing.prime.SoftSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nSize field computed using soft size control enables you to set the maximum size on the scoped zonelets .\n\nWhen the soft sizing is computed for edges or faces, the size will be affected by size computed using other controls.\nThe minimum size on the zonelet will be determined based on the influence of other size controls,\nelse a uniform size will be maintained.\n\nParameters\n\nmodel (Model) – Model to create a SoftSizingParams object with default parameters.\n\nmax (float, optional) – Maximum size used for computing edge and face size using soft size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\njson_data (dict, optional) – JSON dictionary to create a SoftSizingParams object with provided parameters.\n\nExamples\n\n>>> soft_sizing_params = prime.SoftSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SoftSizingParams.html#overview","title":"SoftSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nmax\n\nMaximum size used for computing edge and face size using soft size control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SoftSizingParams object.\n\nset_default\n\nSet the default values of the SoftSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SoftSizingParams.html#import-detail","title":"SoftSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SoftSizingParams.html#property-detail","title":"SoftSizingParams > Property detail","text":"Property detail\n\n\n\nproperty SoftSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty SoftSizingParams.max: float\n\nMaximum size used for computing edge and face size using soft size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/SoftSizingParams.html#method-detail","title":"SoftSizingParams > Method detail","text":"Method detail\n\n\n\nSoftSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSoftSizingParams.__str__() -> str\n\n\n\n\n\nstatic SoftSizingParams.print_default()\n\nPrint the default values of SoftSizingParams object.\n\nExamples\n\n>>> SoftSizingParams.print_default()\n\n\n\nstatic SoftSizingParams.set_default(max: float = None, growth_rate: float = None)\n\nSet the default values of the SoftSizingParams object.\n\nParameters\n\nmax (float, optional) – Maximum size used for computing edge and face size using soft size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/BCsVolumetricModality.html#bcsvolumetricmodality","title":"BCsVolumetricModality","text":"BCsVolumetricModality\n\n\n\nclass ansys.meshing.prime.BCsVolumetricModality\n\nIndicate options to identify morphable region in input volumetric mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/BCsVolumetricModality.html#overview","title":"BCsVolumetricModality > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALL\n\nOption to identify all nodes expect fixed nodes as morphable nodes from the input volumetric mesh.\n\nBOX\n\nOption to identify nodes enclosed by bounding box as morphable nodes from the input volumetric mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/BCsVolumetricModality.html#import-detail","title":"BCsVolumetricModality > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BCsVolumetricModality.html#attribute-detail","title":"BCsVolumetricModality > Attribute detail","text":"Attribute detail\n\n\n\nBCsVolumetricModality.ALL = 2\n\nOption to identify all nodes expect fixed nodes as morphable nodes from the input volumetric mesh.\n\n\n\nBCsVolumetricModality.BOX = 1\n\nOption to identify nodes enclosed by bounding box as morphable nodes from the input volumetric mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/DownloadManager.html#downloadmanager","title":"DownloadManager","text":"DownloadManager\n\n\n\nclass ansys.meshing.prime.examples.DownloadManager\n\nManages downloads of example files.\n\nLocal paths are saved in this class so that a global cleanup\nof example files can be performed when the client is closed."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/DownloadManager.html#overview","title":"DownloadManager > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_file\n\nAdd the path for a downloaded example file to a list.\n\nclear_download_cache\n\nRemove downloaded example files from the local path.\n\ndownload_file\n\nDownload an example file from the PyPrimeMesh repository.\n\nAttributes\n\n\n\n\n\ndownloads_list\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/DownloadManager.html#import-detail","title":"DownloadManager > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/DownloadManager.html#attribute-detail","title":"DownloadManager > Attribute detail","text":"Attribute detail\n\n\n\nDownloadManager.downloads_list = []\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/DownloadManager.html#method-detail","title":"DownloadManager > Method detail","text":"Method detail\n\n\n\nDownloadManager.add_file(file_path: str)\n\nAdd the path for a downloaded example file to a list.\n\nThis list keeps track of where example files are\ndownloaded so that a global cleanup of these files can be\nperformed when the client is closed.\n\nParameters\n\nfile_path (str) – Local path of the downloaded example file.\n\n\n\nDownloadManager.clear_download_cache()\n\nRemove downloaded example files from the local path.\n\n\n\nDownloadManager.download_file(filename: str, *directory: str, destination: str | None = None, force: bool = False) -> str\n\nDownload an example file from the PyPrimeMesh repository.\n\nParameters\n\nfilename (str) – Name of the example file to download.\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to always download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\ndirectory (tuple[str]) – Path under the PyAnsys Github examples repository.\n\nReturns\n\nTuple containing the filepath to use and the local filepath of the downloaded\ndirectory. The two are different in case of containers.\n\nReturn type\n\ntuple[str, str]"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadResults.html#filereadresults","title":"FileReadResults","text":"FileReadResults\n\n\n\nclass ansys.meshing.prime.FileReadResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults of file read operation.\n\nParameters\n\nmodel (Model) – Model to create a FileReadResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if file read operation was unsuccessful.\n\njson_data (dict, optional) – JSON dictionary to create a FileReadResults object with provided parameters.\n\nExamples\n\n>>> file_read_results = prime.FileReadResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadResults.html#overview","title":"FileReadResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if file read operation was unsuccessful.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FileReadResults object.\n\nset_default\n\nSet the default values of the FileReadResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadResults.html#import-detail","title":"FileReadResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadResults.html#property-detail","title":"FileReadResults > Property detail","text":"Property detail\n\n\n\nproperty FileReadResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if file read operation was unsuccessful."},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadResults.html#method-detail","title":"FileReadResults > Method detail","text":"Method detail\n\n\n\nFileReadResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileReadResults.__str__() -> str\n\n\n\n\n\nstatic FileReadResults.print_default()\n\nPrint the default values of FileReadResults object.\n\nExamples\n\n>>> FileReadResults.print_default()\n\n\n\nstatic FileReadResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the FileReadResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if file read operation was unsuccessful."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapParams.html#wrapparams","title":"WrapParams","text":"WrapParams\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType = None, base_size: float = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, wrap_region: WrapRegion = None, number_of_threads: int = None, imprint_relative_range: float = None, imprint_iterations: int = None, json_data: dict = None, **kwargs)\n\nWrapParams defines parameters for wrapping.\n\nParameters\n\nmodel (Model) – Model to create a WrapParams object with default parameters.\n\nsizing_method (SizeFieldType, optional) – Used to define sizing method for wrapping.\n\nbase_size (float, optional) – Base size to define octree.\n\nsize_control_ids (Iterable[int], optional) – Used to construct geodesic sizes for octree refinement.\n\nsize_field_ids (Iterable[int], optional) – Used to define size field based octree refinement.\n\nwrap_region (WrapRegion, optional) – Indicates source type to extract wrapper region.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\nimprint_relative_range (float, optional) – Used to define relative range in imprinting in wrapping.\n\nimprint_iterations (int, optional) – Used to define number of imprint iterations in wrapping.\n\njson_data (dict, optional) – JSON dictionary to create a WrapParams object with provided parameters.\n\nExamples\n\n>>> wrap_params = prime.WrapParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapParams.html#overview","title":"WrapParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbase_size\n\nBase size to define octree.\n\nimprint_iterations\n\nUsed to define number of imprint iterations in wrapping.\n\nimprint_relative_range\n\nUsed to define relative range in imprinting in wrapping.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\nsize_control_ids\n\nUsed to construct geodesic sizes for octree refinement.\n\nsize_field_ids\n\nUsed to define size field based octree refinement.\n\nsizing_method\n\nUsed to define sizing method for wrapping.\n\nwrap_region\n\nIndicates source type to extract wrapper region.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapParams object.\n\nset_default\n\nSet the default values of the WrapParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapParams.html#import-detail","title":"WrapParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapParams.html#property-detail","title":"WrapParams > Property detail","text":"Property detail\n\n\n\nproperty WrapParams.base_size: float\n\nBase size to define octree.\n\n\n\nproperty WrapParams.imprint_iterations: int\n\nUsed to define number of imprint iterations in wrapping.\n\n\n\nproperty WrapParams.imprint_relative_range: float\n\nUsed to define relative range in imprinting in wrapping.\n\n\n\nproperty WrapParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\n\n\nproperty WrapParams.size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUsed to construct geodesic sizes for octree refinement.\n\n\n\nproperty WrapParams.size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUsed to define size field based octree refinement.\n\n\n\nproperty WrapParams.sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nUsed to define sizing method for wrapping.\n\n\n\nproperty WrapParams.wrap_region: WrapRegion\n\nIndicates source type to extract wrapper region."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapParams.html#method-detail","title":"WrapParams > Method detail","text":"Method detail\n\n\n\nWrapParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapParams.__str__() -> str\n\n\n\n\n\nstatic WrapParams.print_default()\n\nPrint the default values of WrapParams object.\n\nExamples\n\n>>> WrapParams.print_default()\n\n\n\nstatic WrapParams.set_default(sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType = None, base_size: float = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, wrap_region: WrapRegion = None, number_of_threads: int = None, imprint_relative_range: float = None, imprint_iterations: int = None)\n\nSet the default values of the WrapParams object.\n\nParameters\n\nsizing_method (SizeFieldType, optional) – Used to define sizing method for wrapping.\n\nbase_size (float, optional) – Base size to define octree.\n\nsize_control_ids (Iterable[int], optional) – Used to construct geodesic sizes for octree refinement.\n\nsize_field_ids (Iterable[int], optional) – Used to define size field based octree refinement.\n\nwrap_region (WrapRegion, optional) – Indicates source type to extract wrapper region.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\nimprint_relative_range (float, optional) – Used to define relative range in imprinting in wrapping.\n\nimprint_iterations (int, optional) – Used to define number of imprint iterations in wrapping."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_deformed_blade_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_deformed_blade_scdoc","title":"ansys.meshing.prime.examples.examples.download_deformed_blade_scdoc","text":"ansys.meshing.prime.examples.examples.download_deformed_blade_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_deformed_blade_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the turbine blade example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/prismcontrol/PrismControl.html#prismcontrol","title":"PrismControl","text":"PrismControl\n\n\n\nclass ansys.meshing.prime.core.prismcontrol.PrismControl(model, id, object_id, name, local=False)\n\nPrismControl allows you to generate prisms.\n\nPrismControl allows you to control generation of prisms.\nControls include setting the face scope, volume scope and growth parameters.\n\nParameters\n\nmodel (Model) – Server model to create PrismControl object.\n\nid (int) – Id of the PrismControl.\n\nobject_id (int) – Object id of the PrismControl.\n\nname (str) – Name of the PrismControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/prismcontrol/PrismControl.html#overview","title":"PrismControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_growth_params\n\nGets the prism parameters for prism control.\n\nget_surface_scope\n\nGets the surface control scope.\n\nget_volume_scope\n\nGets the volume control scope.\n\nset_growth_params\n\nSet growth parameters for prism control.\n\nset_suggested_name\n\nSet the unique name for the prism control based on the suggested name.\n\nset_surface_scope\n\nSets the surface control scope.\n\nset_volume_scope\n\nSets the volume control scope.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of PrismControl.\n\nname\n\nGet the name of PrismControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/prismcontrol/PrismControl.html#import-detail","title":"PrismControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/prismcontrol/PrismControl.html#property-detail","title":"PrismControl > Property detail","text":"Property detail\n\n\n\nproperty PrismControl.id\n\nGet the id of PrismControl.\n\n\n\nproperty PrismControl.name\n\nGet the name of PrismControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/prismcontrol/PrismControl.html#method-detail","title":"PrismControl > Method detail","text":"Method detail\n\n\n\nPrismControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismControl.get_growth_params() -> ansys.meshing.prime.params.primestructs.PrismControlGrowthParams\n\nGets the prism parameters for prism control.\n\nReturns\n\nReturns the PrismControlGrowthParams.\n\nReturn type\n\nPrismControlGrowthParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prism_ctrl.get_growth_params()\n\n\n\nPrismControl.get_surface_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the surface control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = prism_control.get_surface_scope()\n\n\n\nPrismControl.get_volume_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the volume control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = prism_control.get_volume_scope()\n\n\n\nPrismControl.set_growth_params(prism_control_growth_params: ansys.meshing.prime.params.primestructs.PrismControlGrowthParams)\n\nSet growth parameters for prism control.\n\nParameters\n\nprism_control_growth_params (PrismControlGrowthParams) – Parameters to set prism control growth.\n\nExamples\n\n>>> results = prism_control.set_growth_params(PrismControlGrowthParams(model=model))\n\n\n\nPrismControl.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the prism control based on the suggested name.\n\nParameters\n\nname (str) – Suggested name for the prism control.\n\nReturns\n\nReturns the SetNameResults.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> prism_control.set_suggested_name(\"control1\")\n\n\n\nPrismControl.set_surface_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the surface control scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = prism_control.set_surface_scope(entities)\n\n\n\nPrismControl.set_volume_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the volume control scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = prism_control.set_volume_scope(entities)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_toy_car_scdoc.html#ansysmeshingprimeexamplesdownload_toy_car_scdoc","title":"ansys.meshing.prime.examples.download_toy_car_scdoc","text":"ansys.meshing.prime.examples.download_toy_car_scdoc\n\n\n\nansys.meshing.prime.examples.download_toy_car_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the toy car example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeEntity.html#scopeentity","title":"ScopeEntity","text":"ScopeEntity\n\n\n\nclass ansys.meshing.prime.ScopeEntity\n\nScopeDefinition uses entity type to scope entities."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeEntity.html#overview","title":"ScopeEntity > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGEZONELETS\n\nEvaluate scope to get the edge zonelets.\n\nFACEANDEDGEZONELETS\n\nEvaluate scope to get face and edge zonelets.\n\nFACEZONELETS\n\nEvaluate scope to get the face zonelets.\n\nVOLUME\n\nEvaluate scope to get volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeEntity.html#import-detail","title":"ScopeEntity > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeEntity.html#attribute-detail","title":"ScopeEntity > Attribute detail","text":"Attribute detail\n\n\n\nScopeEntity.EDGEZONELETS = 2\n\nEvaluate scope to get the edge zonelets.\n\n\n\nScopeEntity.FACEANDEDGEZONELETS = 3\n\nEvaluate scope to get face and edge zonelets.\n\n\n\nScopeEntity.FACEZONELETS = 1\n\nEvaluate scope to get the face zonelets.\n\n\n\nScopeEntity.VOLUME = 6\n\nEvaluate scope to get volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryParams.html#surfacequalitysummaryparams","title":"SurfaceQualitySummaryParams","text":"SurfaceQualitySummaryParams\n\n\n\nclass ansys.meshing.prime.SurfaceQualitySummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, face_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.FaceQualityMeasure] = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nParameters to control surface quality summary results.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceQualitySummaryParams object with default parameters.\n\nface_quality_measures (List[FaceQualityMeasure], optional) – List of face quality measures for surface quality diagnostics.\n\nscope (ScopeDefinition, optional) – Scope the face zonelets for surface quality diagnostics.\n\nquality_limit (Iterable[float], optional) – Quality limit per face quality measure. If the quality limit is not specified, the default quality limit is used.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceQualitySummaryParams object with provided parameters.\n\nExamples\n\n>>> surface_quality_summary_params = prime.SurfaceQualitySummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryParams.html#overview","title":"SurfaceQualitySummaryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_quality_measures\n\nList of face quality measures for surface quality diagnostics.\n\nquality_limit\n\nQuality limit per face quality measure. If the quality limit is not specified, the default quality limit is used.\n\nscope\n\nScope the face zonelets for surface quality diagnostics.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceQualitySummaryParams object.\n\nset_default\n\nSet the default values of the SurfaceQualitySummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryParams.html#import-detail","title":"SurfaceQualitySummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryParams.html#property-detail","title":"SurfaceQualitySummaryParams > Property detail","text":"Property detail\n\n\n\nproperty SurfaceQualitySummaryParams.face_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.FaceQualityMeasure]\n\nList of face quality measures for surface quality diagnostics.\n\n\n\nproperty SurfaceQualitySummaryParams.quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nQuality limit per face quality measure. If the quality limit is not specified, the default quality limit is used.\n\n\n\nproperty SurfaceQualitySummaryParams.scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope the face zonelets for surface quality diagnostics."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryParams.html#method-detail","title":"SurfaceQualitySummaryParams > Method detail","text":"Method detail\n\n\n\nSurfaceQualitySummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceQualitySummaryParams.__str__() -> str\n\n\n\n\n\nstatic SurfaceQualitySummaryParams.print_default()\n\nPrint the default values of SurfaceQualitySummaryParams object.\n\nExamples\n\n>>> SurfaceQualitySummaryParams.print_default()\n\n\n\nstatic SurfaceQualitySummaryParams.set_default(face_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.FaceQualityMeasure] = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the SurfaceQualitySummaryParams object.\n\nParameters\n\nface_quality_measures (List[FaceQualityMeasure], optional) – List of face quality measures for surface quality diagnostics.\n\nscope (ScopeDefinition, optional) – Scope the face zonelets for surface quality diagnostics.\n\nquality_limit (Iterable[float], optional) – Quality limit per face quality measure. If the quality limit is not specified, the default quality limit is used."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySelfIntersectionParams.html#searchbyselfintersectionparams","title":"SearchBySelfIntersectionParams","text":"SearchBySelfIntersectionParams\n\n\n\nclass ansys.meshing.prime.SearchBySelfIntersectionParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to search by face element intersection.\n\nParameters\n\nmodel (Model) – Model to create a SearchBySelfIntersectionParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a SearchBySelfIntersectionParams object with provided parameters.\n\nExamples\n\n>>> search_by_self_intersection_params = prime.SearchBySelfIntersectionParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySelfIntersectionParams.html#overview","title":"SearchBySelfIntersectionParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchBySelfIntersectionParams object.\n\nset_default\n\nSet the default values of the SearchBySelfIntersectionParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySelfIntersectionParams.html#import-detail","title":"SearchBySelfIntersectionParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySelfIntersectionParams.html#method-detail","title":"SearchBySelfIntersectionParams > Method detail","text":"Method detail\n\n\n\nSearchBySelfIntersectionParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchBySelfIntersectionParams.__str__() -> str\n\n\n\n\n\nstatic SearchBySelfIntersectionParams.print_default()\n\nPrint the default values of SearchBySelfIntersectionParams object.\n\nExamples\n\n>>> SearchBySelfIntersectionParams.print_default()\n\n\n\nstatic SearchBySelfIntersectionParams.set_default()\n\nSet the default values of the SearchBySelfIntersectionParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_pipe_tee_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_pipe_tee_scdoc","title":"ansys.meshing.prime.examples.examples.download_pipe_tee_scdoc","text":"ansys.meshing.prime.examples.examples.download_pipe_tee_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_pipe_tee_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the pipe tee example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinParams.html#joinparams","title":"JoinParams","text":"JoinParams\n\n\n\nclass ansys.meshing.prime.JoinParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, match_angle: float = None, overlap_zone_name: str = None, json_data: dict = None, **kwargs)\n\nParameters used for join.\n\nParameters\n\nmodel (Model) – Model to create a JoinParams object with default parameters.\n\ntolerance (float, optional) – Overlap tolerance between overlapping zonelets.\n\nuse_absolute_tolerance (bool, optional) – Tolerance provided is absolute value.\n\nremesh (bool, optional) – Remesh at overlap surface boundary.\n\nmatch_angle (float, optional) – Match angle determines face pair inclination for overlap consideration.\n\noverlap_zone_name (str, optional) – Zone id to be assigned to overlap zonelets belonging to different zones.\n\njson_data (dict, optional) – JSON dictionary to create a JoinParams object with provided parameters.\n\nExamples\n\n>>> join_params = prime.JoinParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinParams.html#overview","title":"JoinParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmatch_angle\n\nMatch angle determines face pair inclination for overlap consideration.\n\noverlap_zone_name\n\nZone id to be assigned to overlap zonelets belonging to different zones.\n\nremesh\n\nRemesh at overlap surface boundary.\n\ntolerance\n\nOverlap tolerance between overlapping zonelets.\n\nuse_absolute_tolerance\n\nTolerance provided is absolute value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of JoinParams object.\n\nset_default\n\nSet the default values of the JoinParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinParams.html#import-detail","title":"JoinParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinParams.html#property-detail","title":"JoinParams > Property detail","text":"Property detail\n\n\n\nproperty JoinParams.match_angle: float\n\nMatch angle determines face pair inclination for overlap consideration.\n\n\n\nproperty JoinParams.overlap_zone_name: str\n\nZone id to be assigned to overlap zonelets belonging to different zones.\n\n\n\nproperty JoinParams.remesh: bool\n\nRemesh at overlap surface boundary.\n\n\n\nproperty JoinParams.tolerance: float\n\nOverlap tolerance between overlapping zonelets.\n\n\n\nproperty JoinParams.use_absolute_tolerance: bool\n\nTolerance provided is absolute value."},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinParams.html#method-detail","title":"JoinParams > Method detail","text":"Method detail\n\n\n\nJoinParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nJoinParams.__str__() -> str\n\n\n\n\n\nstatic JoinParams.print_default()\n\nPrint the default values of JoinParams object.\n\nExamples\n\n>>> JoinParams.print_default()\n\n\n\nstatic JoinParams.set_default(tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, match_angle: float = None, overlap_zone_name: str = None)\n\nSet the default values of the JoinParams object.\n\nParameters\n\ntolerance (float, optional) – Overlap tolerance between overlapping zonelets.\n\nuse_absolute_tolerance (bool, optional) – Tolerance provided is absolute value.\n\nremesh (bool, optional) – Remesh at overlap surface boundary.\n\nmatch_angle (float, optional) – Match angle determines face pair inclination for overlap consideration.\n\noverlap_zone_name (str, optional) – Zone id to be assigned to overlap zonelets belonging to different zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/splittoolstructs/index.html#the-splittoolstructspy-module","title":"The splittoolstructs.py module","text":"The splittoolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/splittoolstructs/index.html#summary","title":"The splittoolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSplitParams\n\nParameters to split face elements at longest edge.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/splittoolstructs/index.html#description","title":"The splittoolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/Graphics.html#graphics","title":"Graphics","text":"Graphics\n\n\n\nclass ansys.meshing.prime.graphics.Graphics(model: ansys.meshing.prime.Model, use_trame: bool = False)\n\nManages graphics in PyPrime.\n\nDeprecated since version 0.6.0: Use PrimePlotter instead.\n\nParameters\n\nmodel (prime.Model) – Model to show.\n\nuse_trame (bool, default: False) – Whether to use the Trame visualizer."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/Graphics.html#overview","title":"Graphics > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nmodel\n\n\n\nuse_trame\n\n\n\nSpecial methods\n\n\n\n\n\n__call__\n\nShow the appropriate display based on parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/Graphics.html#import-detail","title":"Graphics > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/Graphics.html#attribute-detail","title":"Graphics > Attribute detail","text":"Attribute detail\n\n\n\nGraphics.model\n\n\n\n\n\nGraphics.use_trame = False\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/Graphics.html#method-detail","title":"Graphics > Method detail","text":"Method detail\n\n\n\nGraphics.__call__(parts: List = None, update: bool = True, spline: bool = False, scope: ansys.meshing.prime.ScopeDefinition = None) -> None\n\nShow the appropriate display based on parameters.\n\nParameters\n\nparts (Any, default: None) – Parts to show.\n\nupdate (bool, default: True) – Whether to update the display.\n\nspline (bool, default: False) – Whether to use splines.\n\nscope (prime.ScopeDefinition, default: None) – Scope of the parts."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadResults.html#filereadresults","title":"FileReadResults","text":"FileReadResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.FileReadResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults of file read operation.\n\nParameters\n\nmodel (Model) – Model to create a FileReadResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if file read operation was unsuccessful.\n\njson_data (dict, optional) – JSON dictionary to create a FileReadResults object with provided parameters.\n\nExamples\n\n>>> file_read_results = prime.FileReadResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadResults.html#overview","title":"FileReadResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if file read operation was unsuccessful.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FileReadResults object.\n\nset_default\n\nSet the default values of the FileReadResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadResults.html#import-detail","title":"FileReadResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadResults.html#property-detail","title":"FileReadResults > Property detail","text":"Property detail\n\n\n\nproperty FileReadResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if file read operation was unsuccessful."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadResults.html#method-detail","title":"FileReadResults > Method detail","text":"Method detail\n\n\n\nFileReadResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileReadResults.__str__() -> str\n\n\n\n\n\nstatic FileReadResults.print_default()\n\nPrint the default values of FileReadResults object.\n\nExamples\n\n>>> FileReadResults.print_default()\n\n\n\nstatic FileReadResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the FileReadResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if file read operation was unsuccessful."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesResults.html#mergevolumesresults","title":"MergeVolumesResults","text":"MergeVolumesResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.MergeVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merged_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with merge volumes operation.\n\nParameters\n\nmodel (Model) – Model to create a MergeVolumesResults object with default parameters.\n\nmerged_volumes (Iterable[int], optional) – Ids of volumes to which input volumes are merged.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume merge operation.\n\njson_data (dict, optional) – JSON dictionary to create a MergeVolumesResults object with provided parameters.\n\nExamples\n\n>>> merge_volumes_results = prime.MergeVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesResults.html#overview","title":"MergeVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the volume merge operation.\n\nmerged_volumes\n\nIds of volumes to which input volumes are merged.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeVolumesResults object.\n\nset_default\n\nSet the default values of the MergeVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesResults.html#import-detail","title":"MergeVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesResults.html#property-detail","title":"MergeVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty MergeVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume merge operation.\n\n\n\nproperty MergeVolumesResults.merged_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of volumes to which input volumes are merged."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeVolumesResults.html#method-detail","title":"MergeVolumesResults > Method detail","text":"Method detail\n\n\n\nMergeVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeVolumesResults.__str__() -> str\n\n\n\n\n\nstatic MergeVolumesResults.print_default()\n\nPrint the default values of MergeVolumesResults object.\n\nExamples\n\n>>> MergeVolumesResults.print_default()\n\n\n\nstatic MergeVolumesResults.set_default(merged_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the MergeVolumesResults object.\n\nParameters\n\nmerged_volumes (Iterable[int], optional) – Ids of volumes to which input volumes are merged.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume merge operation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#mesh-a-generic-f1-car-rear-wing-for-external-aero-simulation","title":"Mesh a generic F1 car rear wing for external aero simulation","text":"Mesh a generic F1 car rear wing for external aero simulation\n\nSummary: This example demonstrates how to generate a mesh for a generic F1 rear wing\nSTL file model."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#objective","title":"Mesh a generic F1 car rear wing for external aero simulation > Objective","text":"Objective\n\nThe example connects various parts of a rear wing from a generic F1 car\nand volume meshes the resulting model using a poly-hexcore mesh containing prisms.\nTo simplify the process and enhance convenience, this example uses multiple\nmeshing utilities provided in the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#procedure","title":"Mesh a generic F1 car rear wing for external aero simulation > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance.\n\nInstantiate the meshing utilities from the lucid class.\n\nImport and append the STL geometry files for each part of the F1 rear wing.\n\nMerge all imported components into a single part.\n\nUse the connect operation to join the components together.\n\nDefine local size controls on aero surfaces.\n\nGenerate a surface mesh with curvature sizing.\n\nCompute volume zones and define the fluid zone type.\n\nDefine the boundary layer.\n\nGenerate a volume mesh using poly-hexcore elements and apply boundary layer refinement.\n\nPrint statistics on the generated mesh.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#launch-ansys-prime-server","title":"Mesh a generic F1 car rear wing for external aero simulation > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#import-geometry","title":"Mesh a generic F1 car rear wing for external aero simulation > Import geometry","text":"Import geometry\n\nDownload the generic F1 rear wing geometries (STL files).\nImport each geometry and append to the model.\nDisplay the imported geometry.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#merge-parts","title":"Mesh a generic F1 car rear wing for external aero simulation > Merge parts","text":"Merge parts\n\nEstablish the global size parameter to regulate mesh refinement.\nMerge all individual parts into a unified part named f1_car_rear_wing."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#mesh-connect","title":"Mesh a generic F1 car rear wing for external aero simulation > Mesh connect","text":"Mesh connect\n\nTo generate a volume mesh for a closed domain, it is necessary to ensure\nthat the components of the rear wing are properly connected.\nTo achieve this, perform a connect operation using labels to join the components of\nthe rear wing.\nAfterward, inspect the mesh to detect any edges that are not connected."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#define-local-size-control-and-generate-size-field","title":"Mesh a generic F1 car rear wing for external aero simulation > Define local size control and generate size-field","text":"Define local size control and generate size-field\n\nTo accurately represent the physics of the DRS wing, a limitation of 8 mm\nis imposed on the mesh size of the wing.\nThis is accomplished by implementing a curvature size control, which refines the\nmesh according to the curvature of the DRS surfaces.\nAdditionally, to accurately capture the curved surfaces of other sections of the\nwing, curvature control is defined with a normal angle of 18 degrees.\nThese controls are used during surface mesh generation.\nA volumetric size field is then computed based on the defined size controls.\nThe volumetric size field plays a crucial role in controlling\nthe growth and refinement of the volume mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#generate-surface-mesh","title":"Mesh a generic F1 car rear wing for external aero simulation > Generate surface mesh","text":"Generate surface mesh\n\nCreate a surface mesh for the rear wing using the defined size controls.\nTo facilitate the definition of boundary conditions on the surfaces in the solver,\ngenerate face zones by utilizing the existing labels found in the rear wing model.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#compute-volumetric-regions","title":"Mesh a generic F1 car rear wing for external aero simulation > Compute volumetric regions","text":"Compute volumetric regions\n\nCompute the volume zones."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#define-volume-controls","title":"Mesh a generic F1 car rear wing for external aero simulation > Define volume controls","text":"Define volume controls\n\nTo prevent the generation of a volume mesh within the solid wing,\nthe type of a volume zone within the rear wing can be defined as “dead.”\nTo accomplish this, Volume Control is utilized to assign the type for the\nspecific volume zone.\nExpressions are employed to define the volume zones that need to be filled, with\n* !f1_rw_enclosure indicating that it applies to all volume zones except\nfor f1_rw_enclosure."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#define-prism-controls","title":"Mesh a generic F1 car rear wing for external aero simulation > Define prism controls","text":"Define prism controls\n\nA prism control can be used to define inflation layers on the external aero surfaces.\nSpecify the aero surfaces using labels. Here prism scope is defined on zones associated\nwith labels *drs* and *plane*.\nThe growth for the prism layer is controlled by defining the offset type to\nbe uniform with a first height of 0.5mm ."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#generate-volume-mesh","title":"Mesh a generic F1 car rear wing for external aero simulation > Generate volume mesh","text":"Generate volume mesh\n\nVolume mesh with hexcore polyhedral elements and boundary layer refinement."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#print-mesh-statistics","title":"Mesh a generic F1 car rear wing for external aero simulation > Print mesh statistics","text":"Print mesh statistics\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#write-mesh","title":"Mesh a generic F1 car rear wing for external aero simulation > Write mesh","text":"Write mesh\n\nExport as CAS file for external aero simulations."},{"objectID":"Home","href":"examples/gallery_examples/gallery/08_lucid_generic_f1_rear_wing.html#exit-pyprimemesh","title":"Mesh a generic F1 car rear wing for external aero simulation > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (1 minutes 41.754 seconds)\n\n\n\nDownload Jupyter notebook: 08_lucid_generic_f1_rear_wing.ipynb\n\nDownload Python source code: 08_lucid_generic_f1_rear_wing.py\n\nDownload zipped: 08_lucid_generic_f1_rear_wing.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/SplitParams.html#splitparams","title":"SplitParams","text":"SplitParams\n\n\n\nclass ansys.meshing.prime.SplitParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, split_ratio: float = None, json_data: dict = None, **kwargs)\n\nParameters to split face elements at longest edge.\n\nParameters\n\nmodel (Model) – Model to create a SplitParams object with default parameters.\n\nsplit_ratio (float, optional) – Minimum ratio of split edge length to original edge length.\n\njson_data (dict, optional) – JSON dictionary to create a SplitParams object with provided parameters.\n\nExamples\n\n>>> split_params = prime.SplitParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SplitParams.html#overview","title":"SplitParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsplit_ratio\n\nMinimum ratio of split edge length to original edge length.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SplitParams object.\n\nset_default\n\nSet the default values of the SplitParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SplitParams.html#import-detail","title":"SplitParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SplitParams.html#property-detail","title":"SplitParams > Property detail","text":"Property detail\n\n\n\nproperty SplitParams.split_ratio: float\n\nMinimum ratio of split edge length to original edge length."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplitParams.html#method-detail","title":"SplitParams > Method detail","text":"Method detail\n\n\n\nSplitParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSplitParams.__str__() -> str\n\n\n\n\n\nstatic SplitParams.print_default()\n\nPrint the default values of SplitParams object.\n\nExamples\n\n>>> SplitParams.print_default()\n\n\n\nstatic SplitParams.set_default(split_ratio: float = None)\n\nSet the default values of the SplitParams object.\n\nParameters\n\nsplit_ratio (float, optional) – Minimum ratio of split edge length to original edge length."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolder/Scaffolder.html#scaffolder","title":"Scaffolder","text":"Scaffolder\n\n\n\nclass ansys.meshing.prime.autogen.scaffolder.Scaffolder(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, part_id: int)\n\nScaffolder is used for achieving connections in structures made of sheets and beams. Solid bodies should be suppressed before applying scaffolding.\n\nParameters\n\nmodel (Model) – Server model to create Scaffolder object.\n\npart_id (int) – Id of the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolder/Scaffolder.html#overview","title":"Scaffolder > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndelete_shadowed_topo_faces\n\nDelete fully shadowed topofaces.\n\nmerge_overlapping_topo_faces\n\nMerge overlapping topofaces.\n\nscaffold_topo_faces_and_beams\n\nScaffold faces and beams with provided parameters.\n\nsplit_topo_faces_by_mesh_region\n\nSplit input topofaces by mesh region.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Scaffolder.\n\n__exit__\n\nExit context for Scaffolder.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolder/Scaffolder.html#import-detail","title":"Scaffolder > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolder/Scaffolder.html#method-detail","title":"Scaffolder > Method detail","text":"Method detail\n\n\n\nScaffolder.__enter__()\n\nEnter context for Scaffolder.\n\n\n\nScaffolder.__exit__(type, value, traceback)\n\nExit context for Scaffolder.\n\n\n\nScaffolder.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolder.delete_shadowed_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.VolumetricScaffolderParams) -> ansys.meshing.prime.params.primestructs.ScaffolderMergeResults\n\nDelete fully shadowed topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of input topofaces.\n\nparams (VolumetricScaffolderParams) – Volumetric scaffolder parameters.\n\nReturns\n\nReturn results in ScaffolderMergeResults.\n\nReturn type\n\nScaffolderMergeResults\n\nExamples\n\n>>> results = scaffolder.delete_shadowed_topo_faces([1,2,3,4,5], params)\n\n\n\nScaffolder.merge_overlapping_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ScaffolderParams) -> ansys.meshing.prime.params.primestructs.ScaffolderMergeResults\n\nMerge overlapping topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topology faces.\n\nparams (ScaffolderParams) – Scaffolder parameters.\n\nReturns\n\nReturn results in ScaffolderMergeResults.\n\nReturn type\n\nScaffolderMergeResults\n\nExamples\n\n>>> results = scaffolder.MergeOverlappingTopoFaces([1,2,7,8], params)\n\n\n\nScaffolder.scaffold_topo_faces_and_beams(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], topo_beams: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ScaffolderParams) -> ansys.meshing.prime.params.primestructs.ScaffolderResults\n\nScaffold faces and beams with provided parameters.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topology faces.\n\ntopo_beams (Iterable[int]) – Ids of topology edges for beams.\n\nparams (ScaffolderParams) – Scaffolding parameters.\n\nReturns\n\nReturn results in ScaffolderResults structure.\n\nReturn type\n\nScaffolderResults\n\nExamples\n\n>>> results = scaffolder.ScaffoldTopoFacesAndBeams([1,2], [7,8], params)\n\n\n\nScaffolder.split_topo_faces_by_mesh_region(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.ScaffolderSplitResults\n\nSplit input topofaces by mesh region.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topology faces.\n\nReturns\n\nReturn results in ScaffolderSplitResults type.\n\nReturn type\n\nScaffolderSplitResults\n\nExamples\n\n>>> results = scaffolder.split_topo_faces_by_mesh_region([1,2,7,8])"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderRepairMode.html#scaffolderrepairmode","title":"ScaffolderRepairMode","text":"ScaffolderRepairMode\n\n\n\nclass ansys.meshing.prime.autogen.scaffolderstructs.ScaffolderRepairMode\n\nMode of Scaffolder repair to be used."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderRepairMode.html#overview","title":"ScaffolderRepairMode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCONSERVATIVE\n\nRepairs edges without considering the distance tolerance parameter.\n\nDEFAULT\n\nRepairs edges using the distance tolerance parameter."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderRepairMode.html#import-detail","title":"ScaffolderRepairMode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderRepairMode.html#attribute-detail","title":"ScaffolderRepairMode > Attribute detail","text":"Attribute detail\n\n\n\nScaffolderRepairMode.CONSERVATIVE = 1\n\nRepairs edges without considering the distance tolerance parameter.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nScaffolderRepairMode.DEFAULT = 0\n\nRepairs edges using the distance tolerance parameter.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeDefinition.html#scopedefinition","title":"ScopeDefinition","text":"ScopeDefinition\n\n\n\nclass ansys.meshing.prime.ScopeDefinition(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, entity_type: ScopeEntity = None, evaluation_type: ScopeEvaluationType = None, part_expression: str = None, label_expression: str = None, zone_expression: str = None, json_data: dict = None, **kwargs)\n\nScopeDefinition to scope entities based on entity and evaluation type.\n\nParameters\n\nmodel (Model) – Model to create a ScopeDefinition object with default parameters.\n\nentity_type (ScopeEntity, optional) – Entity type for which scope needs to be evaluated. The default is set to face zonelets.\n\nevaluation_type (ScopeEvaluationType, optional) – Evaluation type to scope entities. The default is set to labels.\n\npart_expression (str, optional) – Part expression to scope parts while evaluating scope.\n\nlabel_expression (str, optional) – Label expression to scope entities when evaluation type is set to labels.\n\nzone_expression (str, optional) – Zone expression to scope entities when evaluation type is set to zones.\n\njson_data (dict, optional) – JSON dictionary to create a ScopeDefinition object with provided parameters.\n\nExamples\n\n>>> scope_definition = prime.ScopeDefinition(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeDefinition.html#overview","title":"ScopeDefinition > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nentity_type\n\nEntity type for which scope needs to be evaluated. The default is set to face zonelets.\n\nevaluation_type\n\nEvaluation type to scope entities. The default is set to labels.\n\nlabel_expression\n\nLabel expression to scope entities when evaluation type is set to labels.\n\npart_expression\n\nPart expression to scope parts while evaluating scope.\n\nzone_expression\n\nZone expression to scope entities when evaluation type is set to zones.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScopeDefinition object.\n\nset_default\n\nSet the default values of the ScopeDefinition object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeDefinition.html#import-detail","title":"ScopeDefinition > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeDefinition.html#property-detail","title":"ScopeDefinition > Property detail","text":"Property detail\n\n\n\nproperty ScopeDefinition.entity_type: ScopeEntity\n\nEntity type for which scope needs to be evaluated. The default is set to face zonelets.\n\n\n\nproperty ScopeDefinition.evaluation_type: ScopeEvaluationType\n\nEvaluation type to scope entities. The default is set to labels.\n\n\n\nproperty ScopeDefinition.label_expression: str\n\nLabel expression to scope entities when evaluation type is set to labels.\n\n\n\nproperty ScopeDefinition.part_expression: str\n\nPart expression to scope parts while evaluating scope.\n\n\n\nproperty ScopeDefinition.zone_expression: str\n\nZone expression to scope entities when evaluation type is set to zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeDefinition.html#method-detail","title":"ScopeDefinition > Method detail","text":"Method detail\n\n\n\nScopeDefinition.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScopeDefinition.__str__() -> str\n\n\n\n\n\nstatic ScopeDefinition.print_default()\n\nPrint the default values of ScopeDefinition object.\n\nExamples\n\n>>> ScopeDefinition.print_default()\n\n\n\nstatic ScopeDefinition.set_default(entity_type: ScopeEntity = None, evaluation_type: ScopeEvaluationType = None, part_expression: str = None, label_expression: str = None, zone_expression: str = None)\n\nSet the default values of the ScopeDefinition object.\n\nParameters\n\nentity_type (ScopeEntity, optional) – Entity type for which scope needs to be evaluated. The default is set to face zonelets.\n\nevaluation_type (ScopeEvaluationType, optional) – Evaluation type to scope entities. The default is set to labels.\n\npart_expression (str, optional) – Part expression to scope parts while evaluating scope.\n\nlabel_expression (str, optional) – Label expression to scope entities when evaluation type is set to labels.\n\nzone_expression (str, optional) – Zone expression to scope entities when evaluation type is set to zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceConnectivityResults.html#faceconnectivityresults","title":"FaceConnectivityResults","text":"FaceConnectivityResults\n\n\n\nclass ansys.meshing.prime.autogen.meshinfostructs.FaceConnectivityResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, mesh_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_zone_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_zone_names: ansys.meshing.prime.params.primestructs.List[str] = None, num_nodes_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, node_coords: ansys.meshing.prime.params.primestructs.Iterable[float] = None, num_face_list_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_list: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult of the face connectivity information.\n\nParameters\n\nmodel (Model) – Model to create a FaceConnectivityResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the get face connectivity operation.\n\nface_zonelet_ids (Iterable[int], optional) – Face zonelet ids for which connectivity data is available.\n\ntopo_face_ids (Iterable[int], optional) – TopoFace ids corresponding to each face zonelet id for topology based mesh.\n\nmesh_face_ids (Iterable[int], optional) – Mesh face ids corresponding to each topoface.\n\nface_zone_ids (Iterable[int], optional) – Face zone id corresponding to each topoface or face zonelet.\n\nface_zone_names (List[str], optional) – Face zone name corresponding to each topoface or face zonelet.\n\nnum_nodes_per_face_zonelet (Iterable[int], optional) – Number of nodes per face zonelet.\n\nnode_coords (Iterable[float], optional) – Node coordinates describing faces of face zonelet.\n\nnum_face_list_per_face_zonelet (Iterable[int], optional) – Number of face list per face zonelet.\n\nface_list (Iterable[int], optional) – Face list describing connectivity of node coordinates.\n\njson_data (dict, optional) – JSON dictionary to create a FaceConnectivityResults object with provided parameters.\n\nExamples\n\n>>> face_connectivity_results = prime.FaceConnectivityResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceConnectivityResults.html#overview","title":"FaceConnectivityResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the get face connectivity operation.\n\nface_list\n\nFace list describing connectivity of node coordinates.\n\nface_zone_ids\n\nFace zone id corresponding to each topoface or face zonelet.\n\nface_zone_names\n\nFace zone name corresponding to each topoface or face zonelet.\n\nface_zonelet_ids\n\nFace zonelet ids for which connectivity data is available.\n\nmesh_face_ids\n\nMesh face ids corresponding to each topoface.\n\nnode_coords\n\nNode coordinates describing faces of face zonelet.\n\nnum_face_list_per_face_zonelet\n\nNumber of face list per face zonelet.\n\nnum_nodes_per_face_zonelet\n\nNumber of nodes per face zonelet.\n\ntopo_face_ids\n\nTopoFace ids corresponding to each face zonelet id for topology based mesh.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FaceConnectivityResults object.\n\nset_default\n\nSet the default values of the FaceConnectivityResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceConnectivityResults.html#import-detail","title":"FaceConnectivityResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceConnectivityResults.html#property-detail","title":"FaceConnectivityResults > Property detail","text":"Property detail\n\n\n\nproperty FaceConnectivityResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the get face connectivity operation.\n\n\n\nproperty FaceConnectivityResults.face_list: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace list describing connectivity of node coordinates.\n\n\n\nproperty FaceConnectivityResults.face_zone_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zone id corresponding to each topoface or face zonelet.\n\n\n\nproperty FaceConnectivityResults.face_zone_names: ansys.meshing.prime.params.primestructs.List[str]\n\nFace zone name corresponding to each topoface or face zonelet.\n\n\n\nproperty FaceConnectivityResults.face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zonelet ids for which connectivity data is available.\n\n\n\nproperty FaceConnectivityResults.mesh_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nMesh face ids corresponding to each topoface.\n\n\n\nproperty FaceConnectivityResults.node_coords: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nNode coordinates describing faces of face zonelet.\n\n\n\nproperty FaceConnectivityResults.num_face_list_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of face list per face zonelet.\n\n\n\nproperty FaceConnectivityResults.num_nodes_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of nodes per face zonelet.\n\n\n\nproperty FaceConnectivityResults.topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoFace ids corresponding to each face zonelet id for topology based mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceConnectivityResults.html#method-detail","title":"FaceConnectivityResults > Method detail","text":"Method detail\n\n\n\nFaceConnectivityResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFaceConnectivityResults.__str__() -> str\n\n\n\n\n\nstatic FaceConnectivityResults.print_default()\n\nPrint the default values of FaceConnectivityResults object.\n\nExamples\n\n>>> FaceConnectivityResults.print_default()\n\n\n\nstatic FaceConnectivityResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, mesh_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_zone_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_zone_names: ansys.meshing.prime.params.primestructs.List[str] = None, num_nodes_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, node_coords: ansys.meshing.prime.params.primestructs.Iterable[float] = None, num_face_list_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_list: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the FaceConnectivityResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the get face connectivity operation.\n\nface_zonelet_ids (Iterable[int], optional) – Face zonelet ids for which connectivity data is available.\n\ntopo_face_ids (Iterable[int], optional) – TopoFace ids corresponding to each face zonelet id for topology based mesh.\n\nmesh_face_ids (Iterable[int], optional) – Mesh face ids corresponding to each topoface.\n\nface_zone_ids (Iterable[int], optional) – Face zone id corresponding to each topoface or face zonelet.\n\nface_zone_names (List[str], optional) – Face zone name corresponding to each topoface or face zonelet.\n\nnum_nodes_per_face_zonelet (Iterable[int], optional) – Number of nodes per face zonelet.\n\nnode_coords (Iterable[float], optional) – Node coordinates describing faces of face zonelet.\n\nnum_face_list_per_face_zonelet (Iterable[int], optional) – Number of face list per face zonelet.\n\nface_list (Iterable[int], optional) – Face list describing connectivity of node coordinates."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_f1_rw_main_plane_stl.html#ansysmeshingprimeexamplesexamplesdownload_f1_rw_main_plane_stl","title":"ansys.meshing.prime.examples.examples.download_f1_rw_main_plane_stl","text":"ansys.meshing.prime.examples.examples.download_f1_rw_main_plane_stl\n\n\n\nansys.meshing.prime.examples.examples.download_f1_rw_main_plane_stl(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_main_plane = prime_examples.download_f1_rw_main_plane_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_main_plane, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphSolveParams.html#morphsolveparams","title":"MorphSolveParams","text":"MorphSolveParams\n\n\n\nclass ansys.meshing.prime.MorphSolveParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nMorpher solve parameters.\n\nParameters\n\nmodel (Model) – Model to create a MorphSolveParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a MorphSolveParams object with provided parameters.\n\nExamples\n\n>>> morph_solve_params = prime.MorphSolveParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphSolveParams.html#overview","title":"MorphSolveParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MorphSolveParams object.\n\nset_default\n\nSet the default values of the MorphSolveParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphSolveParams.html#import-detail","title":"MorphSolveParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MorphSolveParams.html#method-detail","title":"MorphSolveParams > Method detail","text":"Method detail\n\n\n\nMorphSolveParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMorphSolveParams.__str__() -> str\n\n\n\n\n\nstatic MorphSolveParams.print_default()\n\nPrint the default values of MorphSolveParams object.\n\nExamples\n\n>>> MorphSolveParams.print_default()\n\n\n\nstatic MorphSolveParams.set_default()\n\nSet the default values of the MorphSolveParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SetSizingResults.html#setsizingresults","title":"SetSizingResults","text":"SetSizingResults\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.SetSizingResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult associated with the different set sizing parameters.\n\nParameters\n\nmodel (Model) – Model to create a SetSizingResults object with default parameters.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the set sizing parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set sizing parameters.\n\njson_data (dict, optional) – JSON dictionary to create a SetSizingResults object with provided parameters.\n\nExamples\n\n>>> set_sizing_results = prime.SetSizingResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SetSizingResults.html#overview","title":"SetSizingResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set sizing parameters.\n\nwarning_codes\n\nWarning codes associated with the set sizing parameters.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetSizingResults object.\n\nset_default\n\nSet the default values of the SetSizingResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SetSizingResults.html#import-detail","title":"SetSizingResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SetSizingResults.html#property-detail","title":"SetSizingResults > Property detail","text":"Property detail\n\n\n\nproperty SetSizingResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set sizing parameters.\n\n\n\nproperty SetSizingResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the set sizing parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SetSizingResults.html#method-detail","title":"SetSizingResults > Method detail","text":"Method detail\n\n\n\nSetSizingResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetSizingResults.__str__() -> str\n\n\n\n\n\nstatic SetSizingResults.print_default()\n\nPrint the default values of SetSizingResults object.\n\nExamples\n\n>>> SetSizingResults.print_default()\n\n\n\nstatic SetSizingResults.set_default(warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SetSizingResults object.\n\nParameters\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the set sizing parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set sizing parameters."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#mesh-a-mid-surfaced-bracket-for-a-structural-analysis","title":"Mesh a mid-surfaced bracket for a structural analysis","text":"Mesh a mid-surfaced bracket for a structural analysis\n\nSummary: This example demonstrates how to use topology-based connection\nto generate conformal surface mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#objective","title":"Mesh a mid-surfaced bracket for a structural analysis > Objective","text":"Objective\n\nTo create conformal surface mesh, you can scaffold topofaces, topoedges, or both to\nconnect all the surface bodies and mesh the bracket with quad elements."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#procedure","title":"Mesh a mid-surfaced bracket for a structural analysis > Procedure","text":"Procedure\n\nLaunch Ansys Prime Server.\n\nImport the CAD geometry and create the part per the CAD model.\n\nScaffold topofaces and topoedges with a tolerance parameter.\n\nSurface mesh topofaces with a constant size and generate quad elements.\n\nWrite a CDB file for use in the APDL solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#launch-ansys-prime-server","title":"Mesh a mid-surfaced bracket for a structural analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#import-cad-geometry","title":"Mesh a mid-surfaced bracket for a structural analysis > Import CAD geometry","text":"Import CAD geometry\n\nDownload the bracket geometry (FMD) file exported by SpaceClaim.\nImport the CAD geometry.\nCreate the part per the CAD model for the topology-based connection."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#review-the-part","title":"Mesh a mid-surfaced bracket for a structural analysis > Review the part","text":"Review the part\n\nGet the part summary.\nDisplay the model to show edges by connection.\nUse keyboard shortcuts to switch between\nthe surface (s) and wireframe (w) representations.\nColor code for edge connectivity:\n\nRed: free\n\nBlack: double\n\nPurple: triple\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#connection","title":"Mesh a mid-surfaced bracket for a structural analysis > Connection","text":"Connection\n\nInitialize the connection tolerance and other parameters. (The connection\ntolerance is smaller than the target element size.)\nScaffold the topofaces, topoedges, or both with connection parameters."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#surface-mesh","title":"Mesh a mid-surfaced bracket for a structural analysis > Surface mesh","text":"Surface mesh\n\nInitialize surface meshing parameters.\nMesh topofaces with the constant size and generate quad elements.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#write-mesh","title":"Mesh a mid-surfaced bracket for a structural analysis > Write mesh","text":"Write mesh\n\nWrite a CDB file for use in the APDL solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/01_bracket_scaffold.html#exit-the-pyprimemesh-session","title":"Mesh a mid-surfaced bracket for a structural analysis > Exit the PyPrimeMesh session","text":"Exit the PyPrimeMesh session\n\nTotal running time of the script: (0 minutes 23.215 seconds)\n\n\n\nDownload Jupyter notebook: 01_bracket_scaffold.ipynb\n\nDownload Python source code: 01_bracket_scaffold.py\n\nDownload zipped: 01_bracket_scaffold.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusResults.html#importabaqusresults","title":"ImportAbaqusResults","text":"ImportAbaqusResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportAbaqusResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, summary_log: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults of Abaqus import operation.\n\nParameters\n\nmodel (Model) – Model to create a ImportAbaqusResults object with default parameters.\n\nsummary_log (str, optional) – Summary log for the import operation in json format.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with Abaqus import operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ImportAbaqusResults object with provided parameters.\n\nExamples\n\n>>> import_abaqus_results = prime.ImportAbaqusResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusResults.html#overview","title":"ImportAbaqusResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nsummary_log\n\nSummary log for the import operation in json format.\n\nwarning_codes\n\nWarning codes associated with Abaqus import operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportAbaqusResults object.\n\nset_default\n\nSet the default values of the ImportAbaqusResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusResults.html#import-detail","title":"ImportAbaqusResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusResults.html#property-detail","title":"ImportAbaqusResults > Property detail","text":"Property detail\n\n\n\nproperty ImportAbaqusResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty ImportAbaqusResults.summary_log: str\n\nSummary log for the import operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ImportAbaqusResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with Abaqus import operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusResults.html#method-detail","title":"ImportAbaqusResults > Method detail","text":"Method detail\n\n\n\nImportAbaqusResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportAbaqusResults.__str__() -> str\n\n\n\n\n\nstatic ImportAbaqusResults.print_default()\n\nPrint the default values of ImportAbaqusResults object.\n\nExamples\n\n>>> ImportAbaqusResults.print_default()\n\n\n\nstatic ImportAbaqusResults.set_default(summary_log: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ImportAbaqusResults object.\n\nParameters\n\nsummary_log (str, optional) – Summary log for the import operation in json format.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with Abaqus import operation."},{"objectID":"Home","href":"user_guide/stacker.html#volume-sweeping","title":"Volume sweeping","text":"Volume sweeping\n\nThe VolumeSweeper class creates a volume mesh on 2.5D models, stacking faces\nor edge zonelets one above the other in layers. This volume sweeping technology stacks each of the input topovolumes individually.\n\nA 2.5D or stackable geometry is any closed volume or set of closed volumes that can be obtained by successive extrusion of a series of 2D geometries, along the area normal of the 2D geometries.\n\nA geometry is stackable only when there is a direction called stacking direction, to which all surfaces are either perpendicular or parallel.\n\nThe hex-dominant mesh created by volume sweeper can only be applied to 2.5D models. Only conformal mesh within a part is supported.\n\nVolume sweeping workflow involves the following:\n\nCreate imprints of model edges on the base face.\n\nSurface mesh the imprinted base face.\n\nExtrude the base face mesh at the selected origin by stacking the face layer by layer along the specified direction to generate a volume mesh."},{"objectID":"Home","href":"user_guide/stacker.html#hex-dominant-meshing-for-25d-geometry","title":"Volume sweeping > Hex-dominant meshing for 2.5D geometry","text":"Hex-dominant meshing for 2.5D geometry\n\nThe following example shows how to mesh a thin disc using volume sweeper:\n\nDefine stacking parameters:\n\nSet origin and direction vector for stacking orientation\n\nOption to set defeaturing tolerance for edge imprints\n\nOption to set maximum stack size allowed for stacking\n\nOption to delete base face after stacking\n\nDefault global max size is used for stacking parameters if you are not providing the max size.\n\nDefault lateral_defeature_tolerance and stacking_defeature_tolerance are set to (global min size/4).\n\nPrint the results of stacking parameters so that you can review them:\n\nCreate base face:\n\nThe topovolume cannot have meshed topofaces.\n\nCompute volumetric size field and perform surface meshing on the base face:\n\nStack the base face:"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadParams.html#filereadparams","title":"FileReadParams","text":"FileReadParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.FileReadParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, json_data: dict = None, **kwargs)\n\nParameters to read file.\n\nParameters\n\nmodel (Model) – Model to create a FileReadParams object with default parameters.\n\nappend (bool, optional) – Option to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\njson_data (dict, optional) – JSON dictionary to create a FileReadParams object with provided parameters.\n\nExamples\n\n>>> file_read_params = prime.FileReadParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadParams.html#overview","title":"FileReadParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FileReadParams object.\n\nset_default\n\nSet the default values of the FileReadParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadParams.html#import-detail","title":"FileReadParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadParams.html#property-detail","title":"FileReadParams > Property detail","text":"Property detail\n\n\n\nproperty FileReadParams.append: bool\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileReadParams.html#method-detail","title":"FileReadParams > Method detail","text":"Method detail\n\n\n\nFileReadParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileReadParams.__str__() -> str\n\n\n\n\n\nstatic FileReadParams.print_default()\n\nPrint the default values of FileReadParams object.\n\nExamples\n\n>>> FileReadParams.print_default()\n\n\n\nstatic FileReadParams.set_default(append: bool = None)\n\nSet the default values of the FileReadParams object.\n\nParameters\n\nappend (bool, optional) – Option to append imported mesh to existing mesh instead of resetting model to imported mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualityResultsPart.html#volumequalityresultspart","title":"VolumeQualityResultsPart","text":"VolumeQualityResultsPart\n\n\n\nclass ansys.meshing.prime.VolumeQualityResultsPart(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cell_quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure = None, measure_name: str = None, part_id: int = None, quality_limit: float = None, n_found: int = None, max_quality: float = None, min_quality: float = None, json_data: dict = None, **kwargs)\n\nResult of volume quality of part.\n\nParameters\n\nmodel (Model) – Model to create a VolumeQualityResultsPart object with default parameters.\n\ncell_quality_measure (CellQualityMeasure, optional) – Type of the cell quality measure.\n\nmeasure_name (str, optional) – Name of the cell quality measure.\n\npart_id (int, optional) – Id of the part for which quality is computed.\n\nquality_limit (float, optional) – Target quality limit used to find failures.\n\nn_found (int, optional) – Number of failed cells.\n\nmax_quality (float, optional) – Maximum value of quality measure.\n\nmin_quality (float, optional) – Minimum value of quality measure.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeQualityResultsPart object with provided parameters.\n\nExamples\n\n>>> volume_quality_results_part = prime.VolumeQualityResultsPart(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualityResultsPart.html#overview","title":"VolumeQualityResultsPart > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncell_quality_measure\n\nType of the cell quality measure.\n\nmax_quality\n\nMaximum value of quality measure.\n\nmeasure_name\n\nName of the cell quality measure.\n\nmin_quality\n\nMinimum value of quality measure.\n\nn_found\n\nNumber of failed cells.\n\npart_id\n\nId of the part for which quality is computed.\n\nquality_limit\n\nTarget quality limit used to find failures.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeQualityResultsPart object.\n\nset_default\n\nSet the default values of the VolumeQualityResultsPart object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualityResultsPart.html#import-detail","title":"VolumeQualityResultsPart > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualityResultsPart.html#property-detail","title":"VolumeQualityResultsPart > Property detail","text":"Property detail\n\n\n\nproperty VolumeQualityResultsPart.cell_quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure\n\nType of the cell quality measure.\n\n\n\nproperty VolumeQualityResultsPart.max_quality: float\n\nMaximum value of quality measure.\n\n\n\nproperty VolumeQualityResultsPart.measure_name: str\n\nName of the cell quality measure.\n\n\n\nproperty VolumeQualityResultsPart.min_quality: float\n\nMinimum value of quality measure.\n\n\n\nproperty VolumeQualityResultsPart.n_found: int\n\nNumber of failed cells.\n\n\n\nproperty VolumeQualityResultsPart.part_id: int\n\nId of the part for which quality is computed.\n\n\n\nproperty VolumeQualityResultsPart.quality_limit: float\n\nTarget quality limit used to find failures."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualityResultsPart.html#method-detail","title":"VolumeQualityResultsPart > Method detail","text":"Method detail\n\n\n\nVolumeQualityResultsPart.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeQualityResultsPart.__str__() -> str\n\n\n\n\n\nstatic VolumeQualityResultsPart.print_default()\n\nPrint the default values of VolumeQualityResultsPart object.\n\nExamples\n\n>>> VolumeQualityResultsPart.print_default()\n\n\n\nstatic VolumeQualityResultsPart.set_default(cell_quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure = None, measure_name: str = None, part_id: int = None, quality_limit: float = None, n_found: int = None, max_quality: float = None, min_quality: float = None)\n\nSet the default values of the VolumeQualityResultsPart object.\n\nParameters\n\ncell_quality_measure (CellQualityMeasure, optional) – Type of the cell quality measure.\n\nmeasure_name (str, optional) – Name of the cell quality measure.\n\npart_id (int, optional) – Id of the part for which quality is computed.\n\nquality_limit (float, optional) – Target quality limit used to find failures.\n\nn_found (int, optional) – Number of failed cells.\n\nmax_quality (float, optional) – Maximum value of quality measure.\n\nmin_quality (float, optional) – Minimum value of quality measure."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIGAResults.html#exportlsdynaigaresults","title":"ExportLSDynaIGAResults","text":"ExportLSDynaIGAResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaIGAResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the LS-DYNA export.\n\nParameters\n\nmodel (Model) – Model to create a ExportLSDynaIGAResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportLSDynaIGAResults object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_igaesults = prime.ExportLSDynaIGAResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIGAResults.html#overview","title":"ExportLSDynaIGAResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportLSDynaIGAResults object.\n\nset_default\n\nSet the default values of the ExportLSDynaIGAResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIGAResults.html#import-detail","title":"ExportLSDynaIGAResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIGAResults.html#property-detail","title":"ExportLSDynaIGAResults > Property detail","text":"Property detail\n\n\n\nproperty ExportLSDynaIGAResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaIGAResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIGAResults.html#method-detail","title":"ExportLSDynaIGAResults > Method detail","text":"Method detail\n\n\n\nExportLSDynaIGAResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportLSDynaIGAResults.__str__() -> str\n\n\n\n\n\nstatic ExportLSDynaIGAResults.print_default()\n\nPrint the default values of ExportLSDynaIGAResults object.\n\nExamples\n\n>>> ExportLSDynaIGAResults.print_default()\n\n\n\nstatic ExportLSDynaIGAResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ExportLSDynaIGAResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/utils/match_pattern.html#ansysmeshingprimelucidutilsmatch_pattern","title":"ansys.meshing.prime.lucid.utils.match_pattern","text":"ansys.meshing.prime.lucid.utils.match_pattern\n\n\n\nansys.meshing.prime.lucid.utils.match_pattern(pattern: str, name: str) -> bool\n\nPattern matching function for strings.\n\nParameters\n\npattern (str) – Pattern you are looking for in the string.\n\nname (str) – String where you look for patterns.\n\nReturns\n\nTrue if the pattern is found.\n\nReturn type\n\nbool"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessResults.html#addthicknessresults","title":"AddThicknessResults","text":"AddThicknessResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.AddThicknessResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None, json_data: dict = None, **kwargs)\n\nResult structure associated with add thickness zonelets.\n\nParameters\n\nmodel (Model) – Model to create a AddThicknessResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\npart_id (int, optional) – The created thickness part id.\n\njson_data (dict, optional) – JSON dictionary to create a AddThicknessResults object with provided parameters.\n\nExamples\n\n>>> add_thickness_results = prime.AddThicknessResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessResults.html#overview","title":"AddThicknessResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\npart_id\n\nThe created thickness part id.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AddThicknessResults object.\n\nset_default\n\nSet the default values of the AddThicknessResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessResults.html#import-detail","title":"AddThicknessResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessResults.html#property-detail","title":"AddThicknessResults > Property detail","text":"Property detail\n\n\n\nproperty AddThicknessResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty AddThicknessResults.part_id: int\n\nThe created thickness part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessResults.html#method-detail","title":"AddThicknessResults > Method detail","text":"Method detail\n\n\n\nAddThicknessResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAddThicknessResults.__str__() -> str\n\n\n\n\n\nstatic AddThicknessResults.print_default()\n\nPrint the default values of AddThicknessResults object.\n\nExamples\n\n>>> AddThicknessResults.print_default()\n\n\n\nstatic AddThicknessResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None)\n\nSet the default values of the AddThicknessResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\npart_id (int, optional) – The created thickness part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_multi_layer_quad_mesh_pcb_scdoc.html#ansysmeshingprimeexamplesdownload_multi_layer_quad_mesh_pcb_scdoc","title":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_scdoc","text":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_scdoc\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshResults.html#checkmeshresults","title":"CheckMeshResults","text":"CheckMeshResults\n\n\n\nclass ansys.meshing.prime.CheckMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, has_non_positive_volumes: bool = None, has_non_positive_areas: bool = None, has_invalid_shape: bool = None, has_left_handed_faces: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResult associated with the check mesh operation.\n\nParameters\n\nmodel (Model) – Model to create a CheckMeshResults object with default parameters.\n\nhas_non_positive_volumes (bool, optional) – Indicates whether mesh has non positive volumes.\n\nhas_non_positive_areas (bool, optional) – Indicates whether mesh has non positive areas.\n\nhas_invalid_shape (bool, optional) – Indicates whether mesh has invalid shape.\n\nhas_left_handed_faces (bool, optional) – Indicates whether mesh has left handed faces.\n\nerror_code (ErrorCode, optional) – Error code associated with the check grid operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the check grid operation.\n\njson_data (dict, optional) – JSON dictionary to create a CheckMeshResults object with provided parameters.\n\nExamples\n\n>>> check_mesh_results = prime.CheckMeshResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshResults.html#overview","title":"CheckMeshResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the check grid operation.\n\nhas_invalid_shape\n\nIndicates whether mesh has invalid shape.\n\nhas_left_handed_faces\n\nIndicates whether mesh has left handed faces.\n\nhas_non_positive_areas\n\nIndicates whether mesh has non positive areas.\n\nhas_non_positive_volumes\n\nIndicates whether mesh has non positive volumes.\n\nwarning_codes\n\nWarning codes associated with the check grid operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckMeshResults object.\n\nset_default\n\nSet the default values of the CheckMeshResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshResults.html#import-detail","title":"CheckMeshResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshResults.html#property-detail","title":"CheckMeshResults > Property detail","text":"Property detail\n\n\n\nproperty CheckMeshResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the check grid operation.\n\n\n\nproperty CheckMeshResults.has_invalid_shape: bool\n\nIndicates whether mesh has invalid shape.\n\n\n\nproperty CheckMeshResults.has_left_handed_faces: bool\n\nIndicates whether mesh has left handed faces.\n\n\n\nproperty CheckMeshResults.has_non_positive_areas: bool\n\nIndicates whether mesh has non positive areas.\n\n\n\nproperty CheckMeshResults.has_non_positive_volumes: bool\n\nIndicates whether mesh has non positive volumes.\n\n\n\nproperty CheckMeshResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the check grid operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshResults.html#method-detail","title":"CheckMeshResults > Method detail","text":"Method detail\n\n\n\nCheckMeshResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckMeshResults.__str__() -> str\n\n\n\n\n\nstatic CheckMeshResults.print_default()\n\nPrint the default values of CheckMeshResults object.\n\nExamples\n\n>>> CheckMeshResults.print_default()\n\n\n\nstatic CheckMeshResults.set_default(has_non_positive_volumes: bool = None, has_non_positive_areas: bool = None, has_invalid_shape: bool = None, has_left_handed_faces: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the CheckMeshResults object.\n\nParameters\n\nhas_non_positive_volumes (bool, optional) – Indicates whether mesh has non positive volumes.\n\nhas_non_positive_areas (bool, optional) – Indicates whether mesh has non positive areas.\n\nhas_invalid_shape (bool, optional) – Indicates whether mesh has invalid shape.\n\nhas_left_handed_faces (bool, optional) – Indicates whether mesh has left handed faces.\n\nerror_code (ErrorCode, optional) – Error code associated with the check grid operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the check grid operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesResults.html#smoothdihedralfacenodesresults","title":"SmoothDihedralFaceNodesResults","text":"SmoothDihedralFaceNodesResults\n\n\n\nclass ansys.meshing.prime.SmoothDihedralFaceNodesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_nodes_smoothed: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with smooth dihedral face nodes.\n\nParameters\n\nmodel (Model) – Model to create a SmoothDihedralFaceNodesResults object with default parameters.\n\nn_nodes_smoothed (int, optional) – Number of dihedral face nodes smoothed.\n\nerror_code (ErrorCode, optional) – Error Code associated with creating offset surface.\n\njson_data (dict, optional) – JSON dictionary to create a SmoothDihedralFaceNodesResults object with provided parameters.\n\nExamples\n\n>>> smooth_dihedral_face_nodes_results = prime.SmoothDihedralFaceNodesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesResults.html#overview","title":"SmoothDihedralFaceNodesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with creating offset surface.\n\nn_nodes_smoothed\n\nNumber of dihedral face nodes smoothed.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SmoothDihedralFaceNodesResults object.\n\nset_default\n\nSet the default values of the SmoothDihedralFaceNodesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesResults.html#import-detail","title":"SmoothDihedralFaceNodesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesResults.html#property-detail","title":"SmoothDihedralFaceNodesResults > Property detail","text":"Property detail\n\n\n\nproperty SmoothDihedralFaceNodesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with creating offset surface.\n\n\n\nproperty SmoothDihedralFaceNodesResults.n_nodes_smoothed: int\n\nNumber of dihedral face nodes smoothed."},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesResults.html#method-detail","title":"SmoothDihedralFaceNodesResults > Method detail","text":"Method detail\n\n\n\nSmoothDihedralFaceNodesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSmoothDihedralFaceNodesResults.__str__() -> str\n\n\n\n\n\nstatic SmoothDihedralFaceNodesResults.print_default()\n\nPrint the default values of SmoothDihedralFaceNodesResults object.\n\nExamples\n\n>>> SmoothDihedralFaceNodesResults.print_default()\n\n\n\nstatic SmoothDihedralFaceNodesResults.set_default(n_nodes_smoothed: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SmoothDihedralFaceNodesResults object.\n\nParameters\n\nn_nodes_smoothed (int, optional) – Number of dihedral face nodes smoothed.\n\nerror_code (ErrorCode, optional) – Error Code associated with creating offset surface."},{"objectID":"Home","href":"api/ansys/meshing/prime/LeakPreventionParams.html#leakpreventionparams","title":"LeakPreventionParams","text":"LeakPreventionParams\n\n\n\nclass ansys.meshing.prime.LeakPreventionParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, material_points: ansys.meshing.prime.params.primestructs.List[str] = None, scope: ScopeDefinition = None, max_hole_size: float = None, n_expansion_layers: int = None, json_data: dict = None, **kwargs)\n\nLeakPreventionParams defines leakage prevention control parameters for wrapper.\n\nParameters\n\nmodel (Model) – Model to create a LeakPreventionParams object with default parameters.\n\nmaterial_points (List[str], optional) – Material points used for leak prevention control.\n\nscope (ScopeDefinition, optional) – Scope used for leak prevention control.\n\nmax_hole_size (float, optional) – Maximum hole size to prevent leakage into region.\n\nn_expansion_layers (int, optional) – Number of layers to expand leaking region.\n\njson_data (dict, optional) – JSON dictionary to create a LeakPreventionParams object with provided parameters.\n\nExamples\n\n>>> leak_prevention_params = prime.LeakPreventionParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/LeakPreventionParams.html#overview","title":"LeakPreventionParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmaterial_points\n\nMaterial points used for leak prevention control.\n\nmax_hole_size\n\nMaximum hole size to prevent leakage into region.\n\nn_expansion_layers\n\nNumber of layers to expand leaking region.\n\nscope\n\nScope used for leak prevention control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of LeakPreventionParams object.\n\nset_default\n\nSet the default values of the LeakPreventionParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/LeakPreventionParams.html#import-detail","title":"LeakPreventionParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/LeakPreventionParams.html#property-detail","title":"LeakPreventionParams > Property detail","text":"Property detail\n\n\n\nproperty LeakPreventionParams.material_points: ansys.meshing.prime.params.primestructs.List[str]\n\nMaterial points used for leak prevention control.\n\n\n\nproperty LeakPreventionParams.max_hole_size: float\n\nMaximum hole size to prevent leakage into region.\n\n\n\nproperty LeakPreventionParams.n_expansion_layers: int\n\nNumber of layers to expand leaking region.\n\n\n\nproperty LeakPreventionParams.scope: ScopeDefinition\n\nScope used for leak prevention control."},{"objectID":"Home","href":"api/ansys/meshing/prime/LeakPreventionParams.html#method-detail","title":"LeakPreventionParams > Method detail","text":"Method detail\n\n\n\nLeakPreventionParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nLeakPreventionParams.__str__() -> str\n\n\n\n\n\nstatic LeakPreventionParams.print_default()\n\nPrint the default values of LeakPreventionParams object.\n\nExamples\n\n>>> LeakPreventionParams.print_default()\n\n\n\nstatic LeakPreventionParams.set_default(material_points: ansys.meshing.prime.params.primestructs.List[str] = None, scope: ScopeDefinition = None, max_hole_size: float = None, n_expansion_layers: int = None)\n\nSet the default values of the LeakPreventionParams object.\n\nParameters\n\nmaterial_points (List[str], optional) – Material points used for leak prevention control.\n\nscope (ScopeDefinition, optional) – Scope used for leak prevention control.\n\nmax_hole_size (float, optional) – Maximum hole size to prevent leakage into region.\n\nn_expansion_layers (int, optional) – Number of layers to expand leaking region."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureParams.html#extractfeatureparams","title":"ExtractFeatureParams","text":"ExtractFeatureParams\n\n\n\nclass ansys.meshing.prime.ExtractFeatureParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, replace: bool = None, feature_angle: float = None, separate_features: bool = None, separation_angle: float = None, disconnect_with_faces: bool = None, label_name: str = None, number_of_threads: int = None, json_data: dict = None, **kwargs)\n\nParameter to control feature edge extraction.\n\nParameters\n\nmodel (Model) – Model to create a ExtractFeatureParams object with default parameters.\n\nreplace (bool, optional) – Option to replace existing edge zonelets with new extracted edge zonelets.\n\nfeature_angle (float, optional) – Angle used to capture face features to be  extracted as edges.\n\nseparate_features (bool, optional) – Option to separate extracted features.\n\nseparation_angle (float, optional) – Angle used to separate extracted features.\n\ndisconnect_with_faces (bool, optional) – Option to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\nlabel_name (str, optional) – Label name to be assigned to extracted features.\n\nnumber_of_threads (int, optional) – Number of threads used for multithreading.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractFeatureParams object with provided parameters.\n\nExamples\n\n>>> extract_feature_params = prime.ExtractFeatureParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureParams.html#overview","title":"ExtractFeatureParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndisconnect_with_faces\n\nOption to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\nfeature_angle\n\nAngle used to capture face features to be  extracted as edges.\n\nlabel_name\n\nLabel name to be assigned to extracted features.\n\nnumber_of_threads\n\nNumber of threads used for multithreading.\n\nreplace\n\nOption to replace existing edge zonelets with new extracted edge zonelets.\n\nseparate_features\n\nOption to separate extracted features.\n\nseparation_angle\n\nAngle used to separate extracted features.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractFeatureParams object.\n\nset_default\n\nSet the default values of the ExtractFeatureParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureParams.html#import-detail","title":"ExtractFeatureParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureParams.html#property-detail","title":"ExtractFeatureParams > Property detail","text":"Property detail\n\n\n\nproperty ExtractFeatureParams.disconnect_with_faces: bool\n\nOption to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\n\n\nproperty ExtractFeatureParams.feature_angle: float\n\nAngle used to capture face features to be  extracted as edges.\n\n\n\nproperty ExtractFeatureParams.label_name: str\n\nLabel name to be assigned to extracted features.\n\n\n\nproperty ExtractFeatureParams.number_of_threads: int\n\nNumber of threads used for multithreading.\n\n\n\nproperty ExtractFeatureParams.replace: bool\n\nOption to replace existing edge zonelets with new extracted edge zonelets.\n\n\n\nproperty ExtractFeatureParams.separate_features: bool\n\nOption to separate extracted features.\n\n\n\nproperty ExtractFeatureParams.separation_angle: float\n\nAngle used to separate extracted features."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureParams.html#method-detail","title":"ExtractFeatureParams > Method detail","text":"Method detail\n\n\n\nExtractFeatureParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractFeatureParams.__str__() -> str\n\n\n\n\n\nstatic ExtractFeatureParams.print_default()\n\nPrint the default values of ExtractFeatureParams object.\n\nExamples\n\n>>> ExtractFeatureParams.print_default()\n\n\n\nstatic ExtractFeatureParams.set_default(replace: bool = None, feature_angle: float = None, separate_features: bool = None, separation_angle: float = None, disconnect_with_faces: bool = None, label_name: str = None, number_of_threads: int = None)\n\nSet the default values of the ExtractFeatureParams object.\n\nParameters\n\nreplace (bool, optional) – Option to replace existing edge zonelets with new extracted edge zonelets.\n\nfeature_angle (float, optional) – Angle used to capture face features to be  extracted as edges.\n\nseparate_features (bool, optional) – Option to separate extracted features.\n\nseparation_angle (float, optional) – Angle used to separate extracted features.\n\ndisconnect_with_faces (bool, optional) – Option to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\nlabel_name (str, optional) – Label name to be assigned to extracted features.\n\nnumber_of_threads (int, optional) – Number of threads used for multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfaceutilities/index.html#the-surfaceutilitiespy-module","title":"The surfaceutilities.py module","text":"The surfaceutilities.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfaceutilities/index.html#summary","title":"The surfaceutilities.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSurfaceUtilities\n\nPerforms various general surface utilities algorithms.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfaceutilities/index.html#description","title":"The surfaceutilities.py module > Description","text":"Description\n\nUtilities module for surface operations."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/IntersectionMask.html#intersectionmask","title":"IntersectionMask","text":"IntersectionMask\n\n\n\nclass ansys.meshing.prime.autogen.scaffolderstructs.IntersectionMask\n\nScaffold parameters use intersection mask to define nature of intersection computation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/IntersectionMask.html#overview","title":"IntersectionMask > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGEEDGE\n\nPerforms edge to edge intersection.\n\nFACEFACE\n\nPerforms face to face intersection.\n\nFACEFACEANDEDGEEDGE\n\nPerform face to face and edge to edge intersections."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/IntersectionMask.html#import-detail","title":"IntersectionMask > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/IntersectionMask.html#attribute-detail","title":"IntersectionMask > Attribute detail","text":"Attribute detail\n\n\n\nIntersectionMask.EDGEEDGE = 1\n\nPerforms edge to edge intersection.\n\n\n\nIntersectionMask.FACEFACE = 2\n\nPerforms face to face intersection.\n\n\n\nIntersectionMask.FACEFACEANDEDGEEDGE = 3\n\nPerform face to face and edge to edge intersections."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LengthUnit.html#lengthunit","title":"LengthUnit","text":"LengthUnit\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.LengthUnit\n\nLength units"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LengthUnit.html#overview","title":"LengthUnit > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCM\n\nDenotes length unit is centimeters.\n\nFT\n\nDenotes length unit is feet.\n\nIN\n\nDenotes length unit is inches.\n\nM\n\nDenotes length unit is meters.\n\nMM\n\nDenotes length unit is milimeters.\n\nNM\n\nDenotes length unit is nanometers.\n\nUM\n\nDenotes length unit is micrometers."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LengthUnit.html#import-detail","title":"LengthUnit > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/LengthUnit.html#attribute-detail","title":"LengthUnit > Attribute detail","text":"Attribute detail\n\n\n\nLengthUnit.CM = 1\n\nDenotes length unit is centimeters.\n\n\n\nLengthUnit.FT = 6\n\nDenotes length unit is feet.\n\n\n\nLengthUnit.IN = 5\n\nDenotes length unit is inches.\n\n\n\nLengthUnit.M = 0\n\nDenotes length unit is meters.\n\n\n\nLengthUnit.MM = 2\n\nDenotes length unit is milimeters.\n\n\n\nLengthUnit.NM = 4\n\nDenotes length unit is nanometers.\n\n\n\nLengthUnit.UM = 3\n\nDenotes length unit is micrometers."},{"objectID":"Home","href":"api/ansys/meshing/prime/AddToZoneResults.html#addtozoneresults","title":"AddToZoneResults","text":"AddToZoneResults\n\n\n\nclass ansys.meshing.prime.AddToZoneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the add to zone operation.\n\nParameters\n\nmodel (Model) – Model to create a AddToZoneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the add to zone operation.\n\njson_data (dict, optional) – JSON dictionary to create a AddToZoneResults object with provided parameters.\n\nExamples\n\n>>> add_to_zone_results = prime.AddToZoneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddToZoneResults.html#overview","title":"AddToZoneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with the add to zone operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AddToZoneResults object.\n\nset_default\n\nSet the default values of the AddToZoneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddToZoneResults.html#import-detail","title":"AddToZoneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddToZoneResults.html#property-detail","title":"AddToZoneResults > Property detail","text":"Property detail\n\n\n\nproperty AddToZoneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty AddToZoneResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the add to zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/AddToZoneResults.html#method-detail","title":"AddToZoneResults > Method detail","text":"Method detail\n\n\n\nAddToZoneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAddToZoneResults.__str__() -> str\n\n\n\n\n\nstatic AddToZoneResults.print_default()\n\nPrint the default values of AddToZoneResults object.\n\nExamples\n\n>>> AddToZoneResults.print_default()\n\n\n\nstatic AddToZoneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the AddToZoneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the add to zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/quadtospline/index.html#the-quadtosplinepy-module","title":"The quadtospline.py module","text":"The quadtospline.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/quadtospline/index.html#summary","title":"The quadtospline.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nQuadToSpline\n\nConverts all-quad mesh to spline.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/quadtospline/index.html#description","title":"The quadtospline.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGASpline.html#igaspline","title":"IGASpline","text":"IGASpline\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.IGASpline(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id: int = None, json_data: dict = None, **kwargs)\n\nInformation of the spline.\n\nParameters\n\nmodel (Model) – Model to create a IGASpline object with default parameters.\n\nid (int, optional) – Unique id of the spline.\n\njson_data (dict, optional) – JSON dictionary to create a IGASpline object with provided parameters.\n\nExamples\n\n>>> iga_spline = prime.IGASpline(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGASpline.html#overview","title":"IGASpline > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid\n\nUnique id of the spline.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IGASpline object.\n\nset_default\n\nSet the default values of the IGASpline object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGASpline.html#import-detail","title":"IGASpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGASpline.html#property-detail","title":"IGASpline > Property detail","text":"Property detail\n\n\n\nproperty IGASpline.id: int\n\nUnique id of the spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGASpline.html#method-detail","title":"IGASpline > Method detail","text":"Method detail\n\n\n\nIGASpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIGASpline.__str__() -> str\n\n\n\n\n\nstatic IGASpline.print_default()\n\nPrint the default values of IGASpline object.\n\nExamples\n\n>>> IGASpline.print_default()\n\n\n\nstatic IGASpline.set_default(id: int = None)\n\nSet the default values of the IGASpline object.\n\nParameters\n\nid (int, optional) – Unique id of the spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControlGrowthParams.html#shellblcontrolgrowthparams","title":"ShellBLControlGrowthParams","text":"ShellBLControlGrowthParams\n\n\n\nclass ansys.meshing.prime.ShellBLControlGrowthParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_layers: int = None, offset_type: ansys.meshing.prime.params.primestructs.ShellBLOffsetType = None, growth_rate: float = None, first_height: float = None, json_data: dict = None, **kwargs)\n\nGrowth parameters for ShellBL control.\n\nParameters\n\nmodel (Model) – Model to create a ShellBLControlGrowthParams object with default parameters.\n\nn_layers (int, optional) – Number of layers to be generated.This is a beta parameter. The behavior and name may change in the future.\n\noffset_type (ShellBLOffsetType, optional) – Offset type for ShellBL.This is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate (float, optional) – Ratio of height of the current layer to the previous layer.This is a beta parameter. The behavior and name may change in the future.\n\nfirst_height (float, optional) – Height of first layer of ShellBL.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ShellBLControlGrowthParams object with provided parameters.\n\nExamples\n\n>>> shell_bl_control_growth_params = prime.ShellBLControlGrowthParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControlGrowthParams.html#overview","title":"ShellBLControlGrowthParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nfirst_height\n\nHeight of first layer of ShellBL.\n\ngrowth_rate\n\nRatio of height of the current layer to previous layer.\n\nn_layers\n\nNumber of layers to be generated.\n\noffset_type\n\nOffset type for ShellBL.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ShellBLControlGrowthParams object.\n\nset_default\n\nSet the default values of the ShellBLControlGrowthParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControlGrowthParams.html#import-detail","title":"ShellBLControlGrowthParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControlGrowthParams.html#property-detail","title":"ShellBLControlGrowthParams > Property detail","text":"Property detail\n\n\n\nproperty ShellBLControlGrowthParams.first_height: float\n\nHeight of first layer of ShellBL.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ShellBLControlGrowthParams.growth_rate: float\n\nRatio of height of the current layer to previous layer.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ShellBLControlGrowthParams.n_layers: int\n\nNumber of layers to be generated.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ShellBLControlGrowthParams.offset_type: ansys.meshing.prime.params.primestructs.ShellBLOffsetType\n\nOffset type for ShellBL.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ShellBLControlGrowthParams.html#method-detail","title":"ShellBLControlGrowthParams > Method detail","text":"Method detail\n\n\n\nShellBLControlGrowthParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nShellBLControlGrowthParams.__str__() -> str\n\n\n\n\n\nstatic ShellBLControlGrowthParams.print_default()\n\nPrint the default values of ShellBLControlGrowthParams object.\n\nExamples\n\n>>> ShellBLControlGrowthParams.print_default()\n\n\n\nstatic ShellBLControlGrowthParams.set_default(n_layers: int = None, offset_type: ansys.meshing.prime.params.primestructs.ShellBLOffsetType = None, growth_rate: float = None, first_height: float = None)\n\nSet the default values of the ShellBLControlGrowthParams object.\n\nParameters\n\nn_layers (int, optional) – Number of layers to be generated.\n\noffset_type (ShellBLOffsetType, optional) – Offset type for ShellBL.\n\ngrowth_rate (float, optional) – Ratio of height of the current layer to the previous layer.\n\nfirst_height (float, optional) – Height of first layer of ShellBL."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/DisplayMeshType.html#displaymeshtype","title":"DisplayMeshType","text":"DisplayMeshType\n\n\n\nclass ansys.meshing.prime.core.mesh.DisplayMeshType\n\nContains the mesh types to display."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/DisplayMeshType.html#overview","title":"DisplayMeshType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGEZONELET\n\n\n\nFACEZONELET\n\n\n\nSPLINECONTROLPOINTS\n\n\n\nSPLINESURFACE\n\n\n\nTOPOEDGE\n\n\n\nTOPOFACE\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/DisplayMeshType.html#import-detail","title":"DisplayMeshType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/DisplayMeshType.html#attribute-detail","title":"DisplayMeshType > Attribute detail","text":"Attribute detail\n\n\n\nDisplayMeshType.EDGEZONELET = 3\n\n\n\n\n\nDisplayMeshType.FACEZONELET = 2\n\n\n\n\n\nDisplayMeshType.SPLINECONTROLPOINTS = 4\n\n\n\n\n\nDisplayMeshType.SPLINESURFACE = 5\n\n\n\n\n\nDisplayMeshType.TOPOEDGE = 1\n\n\n\n\n\nDisplayMeshType.TOPOFACE = 0\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/controldata/index.html#the-controldatapy-module","title":"The controldata.py module","text":"The controldata.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/controldata/index.html#summary","title":"The controldata.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nControlData\n\nContains all controls.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/controldata/index.html#description","title":"The controldata.py module > Description","text":"Description\n\nModule for control data."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesherResults.html#autoquadmesherresults","title":"AutoQuadMesherResults","text":"AutoQuadMesherResults\n\n\n\nclass ansys.meshing.prime.AutoQuadMesherResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, failed_topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults of auto quad mesher.\n\nParameters\n\nmodel (Model) – Model to create a AutoQuadMesherResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if AutoQuadMesher operation is unsuccessful.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning code if AutoQuadMesher operation is partially successful.This is a beta parameter. The behavior and name may change in the future.\n\nfailed_topo_face_ids (Iterable[int], optional) – Ids of the failed topofaces during topology check.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a AutoQuadMesherResults object with provided parameters.\n\nExamples\n\n>>> auto_quad_mesher_results = prime.AutoQuadMesherResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesherResults.html#overview","title":"AutoQuadMesherResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if AutoQuadMesher operation is unsuccessful.\n\nfailed_topo_face_ids\n\nIds of the failed topofaces during topology check.\n\nwarning_codes\n\nWarning code if AutoQuadMesher operation is partially successful.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AutoQuadMesherResults object.\n\nset_default\n\nSet the default values of the AutoQuadMesherResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesherResults.html#import-detail","title":"AutoQuadMesherResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesherResults.html#property-detail","title":"AutoQuadMesherResults > Property detail","text":"Property detail\n\n\n\nproperty AutoQuadMesherResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if AutoQuadMesher operation is unsuccessful.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty AutoQuadMesherResults.failed_topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the failed topofaces during topology check.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty AutoQuadMesherResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning code if AutoQuadMesher operation is partially successful.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesherResults.html#method-detail","title":"AutoQuadMesherResults > Method detail","text":"Method detail\n\n\n\nAutoQuadMesherResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoQuadMesherResults.__str__() -> str\n\n\n\n\n\nstatic AutoQuadMesherResults.print_default()\n\nPrint the default values of AutoQuadMesherResults object.\n\nExamples\n\n>>> AutoQuadMesherResults.print_default()\n\n\n\nstatic AutoQuadMesherResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, failed_topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the AutoQuadMesherResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if AutoQuadMesher operation is unsuccessful.\n\nwarning_codes (List[WarningCode], optional) – Warning code if AutoQuadMesher operation is partially successful.\n\nfailed_topo_face_ids (Iterable[int], optional) – Ids of the failed topofaces during topology check."},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchParams.html#stitchparams","title":"StitchParams","text":"StitchParams\n\n\n\nclass ansys.meshing.prime.StitchParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, enable_multi_threading: bool = None, type: StitchType = None, json_data: dict = None, **kwargs)\n\nParameters used for stitch operation.\n\nParameters\n\nmodel (Model) – Model to create a StitchParams object with default parameters.\n\ntolerance (float, optional) – Distance tolerance for stitching boundaries.\n\nuse_absolute_tolerance (bool, optional) – True if tolerance provided is absolute value.\n\nremesh (bool, optional) – Remesh at stitch connection.\n\nenable_multi_threading (bool, optional) – Option to run stitch in parallel using multithread.\n\ntype (StitchType, optional) – Stitch type depending on nature of surface boundary edges to be stitched.\n\njson_data (dict, optional) – JSON dictionary to create a StitchParams object with provided parameters.\n\nExamples\n\n>>> stitch_params = prime.StitchParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchParams.html#overview","title":"StitchParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nenable_multi_threading\n\nOption to run stitch in parallel using multithread.\n\nremesh\n\nRemesh at stitch connection.\n\ntolerance\n\nDistance tolerance for stitching boundaries.\n\ntype\n\nStitch type depending on nature of surface boundary edges to be stitched.\n\nuse_absolute_tolerance\n\nTrue if tolerance provided is absolute value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of StitchParams object.\n\nset_default\n\nSet the default values of the StitchParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchParams.html#import-detail","title":"StitchParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchParams.html#property-detail","title":"StitchParams > Property detail","text":"Property detail\n\n\n\nproperty StitchParams.enable_multi_threading: bool\n\nOption to run stitch in parallel using multithread.\n\n\n\nproperty StitchParams.remesh: bool\n\nRemesh at stitch connection.\n\n\n\nproperty StitchParams.tolerance: float\n\nDistance tolerance for stitching boundaries.\n\n\n\nproperty StitchParams.type: StitchType\n\nStitch type depending on nature of surface boundary edges to be stitched.\n\n\n\nproperty StitchParams.use_absolute_tolerance: bool\n\nTrue if tolerance provided is absolute value."},{"objectID":"Home","href":"api/ansys/meshing/prime/StitchParams.html#method-detail","title":"StitchParams > Method detail","text":"Method detail\n\n\n\nStitchParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nStitchParams.__str__() -> str\n\n\n\n\n\nstatic StitchParams.print_default()\n\nPrint the default values of StitchParams object.\n\nExamples\n\n>>> StitchParams.print_default()\n\n\n\nstatic StitchParams.set_default(tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, enable_multi_threading: bool = None, type: StitchType = None)\n\nSet the default values of the StitchParams object.\n\nParameters\n\ntolerance (float, optional) – Distance tolerance for stitching boundaries.\n\nuse_absolute_tolerance (bool, optional) – True if tolerance provided is absolute value.\n\nremesh (bool, optional) – Remesh at stitch connection.\n\nenable_multi_threading (bool, optional) – Option to run stitch in parallel using multithread.\n\ntype (StitchType, optional) – Stitch type depending on nature of surface boundary edges to be stitched."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshResults.html#automeshresults","title":"AutoMeshResults","text":"AutoMeshResults\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.AutoMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nResults of volume meshing.\n\nParameters\n\nmodel (Model) – Model to create a AutoMeshResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Provides error message when automesh fails.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.\n\nerror_locations (Iterable[float], optional) – Error location coordinates returned when automesh fails.\n\njson_data (dict, optional) – JSON dictionary to create a AutoMeshResults object with provided parameters.\n\nExamples\n\n>>> auto_mesh_results = prime.AutoMeshResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshResults.html#overview","title":"AutoMeshResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nProvides error message when automesh fails.\n\nerror_locations\n\nError location coordinates returned when automesh fails.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AutoMeshResults object.\n\nset_default\n\nSet the default values of the AutoMeshResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshResults.html#import-detail","title":"AutoMeshResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshResults.html#property-detail","title":"AutoMeshResults > Property detail","text":"Property detail\n\n\n\nproperty AutoMeshResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nProvides error message when automesh fails.\n\n\n\nproperty AutoMeshResults.error_locations: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nError location coordinates returned when automesh fails.\n\n\n\nproperty AutoMeshResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshResults.html#method-detail","title":"AutoMeshResults > Method detail","text":"Method detail\n\n\n\nAutoMeshResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoMeshResults.__str__() -> str\n\n\n\n\n\nstatic AutoMeshResults.print_default()\n\nPrint the default values of AutoMeshResults object.\n\nExamples\n\n>>> AutoMeshResults.print_default()\n\n\n\nstatic AutoMeshResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the AutoMeshResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Provides error message when automesh fails.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.\n\nerror_locations (Iterable[float], optional) – Error location coordinates returned when automesh fails."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesParams.html#smoothdihedralfacenodesparams","title":"SmoothDihedralFaceNodesParams","text":"SmoothDihedralFaceNodesParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.SmoothDihedralFaceNodesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min_dihedral_angle: float = None, tolerance: float = None, type: SmoothType = None, json_data: dict = None, **kwargs)\n\nParameters to smooth dihedral face nodes.\n\nParameters\n\nmodel (Model) – Model to create a SmoothDihedralFaceNodesParams object with default parameters.\n\nmin_dihedral_angle (float, optional) – Minimum angle to be used to identify dihedral faces.\n\ntolerance (float, optional) – Tolerance relative to local mesh size to control smooth movement of nodes.\n\ntype (SmoothType, optional) – Option to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle.\n\njson_data (dict, optional) – JSON dictionary to create a SmoothDihedralFaceNodesParams object with provided parameters.\n\nExamples\n\n>>> smooth_dihedral_face_nodes_params = prime.SmoothDihedralFaceNodesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesParams.html#overview","title":"SmoothDihedralFaceNodesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmin_dihedral_angle\n\nMinimum angle to be used to identify dihedral faces.\n\ntolerance\n\nTolerance relative to local mesh size to control smooth movement of nodes.\n\ntype\n\nOption to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SmoothDihedralFaceNodesParams object.\n\nset_default\n\nSet the default values of the SmoothDihedralFaceNodesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesParams.html#import-detail","title":"SmoothDihedralFaceNodesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesParams.html#property-detail","title":"SmoothDihedralFaceNodesParams > Property detail","text":"Property detail\n\n\n\nproperty SmoothDihedralFaceNodesParams.min_dihedral_angle: float\n\nMinimum angle to be used to identify dihedral faces.\n\n\n\nproperty SmoothDihedralFaceNodesParams.tolerance: float\n\nTolerance relative to local mesh size to control smooth movement of nodes.\n\n\n\nproperty SmoothDihedralFaceNodesParams.type: SmoothType\n\nOption to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesParams.html#method-detail","title":"SmoothDihedralFaceNodesParams > Method detail","text":"Method detail\n\n\n\nSmoothDihedralFaceNodesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSmoothDihedralFaceNodesParams.__str__() -> str\n\n\n\n\n\nstatic SmoothDihedralFaceNodesParams.print_default()\n\nPrint the default values of SmoothDihedralFaceNodesParams object.\n\nExamples\n\n>>> SmoothDihedralFaceNodesParams.print_default()\n\n\n\nstatic SmoothDihedralFaceNodesParams.set_default(min_dihedral_angle: float = None, tolerance: float = None, type: SmoothType = None)\n\nSet the default values of the SmoothDihedralFaceNodesParams object.\n\nParameters\n\nmin_dihedral_angle (float, optional) – Minimum angle to be used to identify dihedral faces.\n\ntolerance (float, optional) – Tolerance relative to local mesh size to control smooth movement of nodes.\n\ntype (SmoothType, optional) – Option to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeParams.html#fixinvalidnormalnodeparams","title":"FixInvalidNormalNodeParams","text":"FixInvalidNormalNodeParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.FixInvalidNormalNodeParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, nugget_size: float = None, nugget_mesh_size: float = None, label: str = None, json_data: dict = None, **kwargs)\n\nParameters to fix invalid average face normal at nodes by creating a nugget.\n\nParameters\n\nmodel (Model) – Model to create a FixInvalidNormalNodeParams object with default parameters.\n\nnugget_size (float, optional) – Relative size used to create nugget at invalid normal node. The size is relative to mesh size at the node.\n\nnugget_mesh_size (float, optional) – Relative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\nlabel (str, optional) – Label to set on new face zonelets created.\n\njson_data (dict, optional) – JSON dictionary to create a FixInvalidNormalNodeParams object with provided parameters.\n\nExamples\n\n>>> fix_invalid_normal_node_params = prime.FixInvalidNormalNodeParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeParams.html#overview","title":"FixInvalidNormalNodeParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nlabel\n\nLabel to set on new face zonelets created.\n\nnugget_mesh_size\n\nRelative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\nnugget_size\n\nRelative size used to create nugget at invalid normal node. The size is relative to mesh size at the node.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FixInvalidNormalNodeParams object.\n\nset_default\n\nSet the default values of the FixInvalidNormalNodeParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeParams.html#import-detail","title":"FixInvalidNormalNodeParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeParams.html#property-detail","title":"FixInvalidNormalNodeParams > Property detail","text":"Property detail\n\n\n\nproperty FixInvalidNormalNodeParams.label: str\n\nLabel to set on new face zonelets created.\n\n\n\nproperty FixInvalidNormalNodeParams.nugget_mesh_size: float\n\nRelative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\n\n\nproperty FixInvalidNormalNodeParams.nugget_size: float\n\nRelative size used to create nugget at invalid normal node. The size is relative to mesh size at the node."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeParams.html#method-detail","title":"FixInvalidNormalNodeParams > Method detail","text":"Method detail\n\n\n\nFixInvalidNormalNodeParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFixInvalidNormalNodeParams.__str__() -> str\n\n\n\n\n\nstatic FixInvalidNormalNodeParams.print_default()\n\nPrint the default values of FixInvalidNormalNodeParams object.\n\nExamples\n\n>>> FixInvalidNormalNodeParams.print_default()\n\n\n\nstatic FixInvalidNormalNodeParams.set_default(nugget_size: float = None, nugget_mesh_size: float = None, label: str = None)\n\nSet the default values of the FixInvalidNormalNodeParams object.\n\nParameters\n\nnugget_size (float, optional) – Relative size used to create nugget at invalid normal node. The size is relative to mesh size at the node.\n\nnugget_mesh_size (float, optional) – Relative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\nlabel (str, optional) – Label to set on new face zonelets created."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumecontrol/VolumeControl.html#volumecontrol","title":"VolumeControl","text":"VolumeControl\n\n\n\nclass ansys.meshing.prime.core.volumecontrol.VolumeControl(model, id, object_id, name, local=False)\n\nDefines the scope and type of volume mesh to generate.\n\nParameters\n\nmodel (Model) – Server model to create VolumeControl object.\n\nid (int) – Id of the VolumeControl.\n\nobject_id (int) – Object id of the VolumeControl.\n\nname (str) – Name of the VolumeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumecontrol/VolumeControl.html#overview","title":"VolumeControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_params\n\nGet the parameters of the volume control.\n\nget_scope\n\nGets the scope for the volume control.\n\nset_params\n\nSets the volume control parameters.\n\nset_scope\n\nSets the scope for volume control to evaluate.\n\nset_suggested_name\n\nSet the unique name for the volume control based on a suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of VolumeControl.\n\nname\n\nGet the name of the volume control.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nGet a representation of the class in string format."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumecontrol/VolumeControl.html#import-detail","title":"VolumeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumecontrol/VolumeControl.html#property-detail","title":"VolumeControl > Property detail","text":"Property detail\n\n\n\nproperty VolumeControl.id\n\nGet the id of VolumeControl.\n\n\n\nproperty VolumeControl.name\n\nGet the name of the volume control.\n\nReturns\n\nName of the volume control.\n\nReturn type\n\nstr\n\nExamples\n\n>>> print(volume_control.name)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumecontrol/VolumeControl.html#method-detail","title":"VolumeControl > Method detail","text":"Method detail\n\n\n\nVolumeControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeControl.__str__() -> str\n\nGet a representation of the class in string format.\n\nReturns\n\nClass data in string format.\n\nReturn type\n\nstr\n\n\n\nVolumeControl.get_params() -> ansys.meshing.prime.params.primestructs.VolumeControlParams\n\nGet the parameters of the volume control.\n\nReturns\n\nReturn parameters of the volume control.\n\nReturn type\n\nVolumeControlParams\n\nExamples\n\n>>> params = volume_control.get_params()\n\n\n\nVolumeControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the scope for the volume control.\n\nReturns\n\nReturns scope of the volume control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope_definition = volume_control.get_scope()\n\n\n\nVolumeControl.set_params(volume_control_params: ansys.meshing.prime.params.primestructs.VolumeControlParams)\n\nSets the volume control parameters.\n\nParameters\n\nvolume_control_params (VolumeControlParams) – Parameters to control volume.\n\nExamples\n\n>>> volume_control.set_params(\n>>>                  prime.VolumeControlParams(model=model,\n>>>                  cell_zonelet_type = prime.CellZoneletType.FLUID))\n\n\n\nVolumeControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the scope for volume control to evaluate.\n\nVolume control uses scope to evaluate entities for which volume mesh needs to be generated.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for volume mesh generation.\n\nReturns\n\nReturns a SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> volume_control.set_scope(prime.ScopeDefinition(model=model,\n>>>                        entity_type = ScopeEntity.VOLUMES,\n>>>                        evaluation_type = ScopeEvaluationType.ZONES,\n>>>                        zone_expression = \"vol_in\"))\n\n\n\nVolumeControl.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the volume control based on a suggested name.\n\nParameters\n\nname (str) – Suggested name for the volume control.\n\nReturns\n\nNewly suggested name of the volume control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> volume_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesResults.html#mergeboundarynodesresults","title":"MergeBoundaryNodesResults","text":"MergeBoundaryNodesResults\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.MergeBoundaryNodesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the merge nodes operation.\n\nParameters\n\nmodel (Model) – Model to create a MergeBoundaryNodesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of merge nodes operation.\n\njson_data (dict, optional) – JSON dictionary to create a MergeBoundaryNodesResults object with provided parameters.\n\nExamples\n\n>>> merge_boundary_nodes_results = prime.MergeBoundaryNodesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesResults.html#overview","title":"MergeBoundaryNodesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with failure of merge nodes operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeBoundaryNodesResults object.\n\nset_default\n\nSet the default values of the MergeBoundaryNodesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesResults.html#import-detail","title":"MergeBoundaryNodesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesResults.html#property-detail","title":"MergeBoundaryNodesResults > Property detail","text":"Property detail\n\n\n\nproperty MergeBoundaryNodesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with failure of merge nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesResults.html#method-detail","title":"MergeBoundaryNodesResults > Method detail","text":"Method detail\n\n\n\nMergeBoundaryNodesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeBoundaryNodesResults.__str__() -> str\n\n\n\n\n\nstatic MergeBoundaryNodesResults.print_default()\n\nPrint the default values of MergeBoundaryNodesResults object.\n\nExamples\n\n>>> MergeBoundaryNodesResults.print_default()\n\n\n\nstatic MergeBoundaryNodesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the MergeBoundaryNodesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of merge nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdResults.html#searchinfobyregisteridresults","title":"SearchInfoByRegisterIdResults","text":"SearchInfoByRegisterIdResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchInfoByRegisterIdResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_found: int = None, locations_found: ansys.meshing.prime.params.primestructs.Iterable[float] = None, face_zonelets_found: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult structure containing information on registered face elements.\n\nParameters\n\nmodel (Model) – Model to create a SearchInfoByRegisterIdResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the retreiving information based on register id.\n\nn_found (int, optional) – Number of registered face elements.\n\nlocations_found (Iterable[float], optional) – Locations of each cluster of registered face elements.\n\nface_zonelets_found (Iterable[int], optional) – Ids of the face zonelets containing atleast one registered face element.\n\njson_data (dict, optional) – JSON dictionary to create a SearchInfoByRegisterIdResults object with provided parameters.\n\nExamples\n\n>>> search_info_by_register_id_results = prime.SearchInfoByRegisterIdResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdResults.html#overview","title":"SearchInfoByRegisterIdResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the retreiving information based on register id.\n\nface_zonelets_found\n\nIds of the face zonelets containing atleast one registered face element.\n\nlocations_found\n\nLocations of each cluster of registered face elements.\n\nn_found\n\nNumber of registered face elements.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchInfoByRegisterIdResults object.\n\nset_default\n\nSet the default values of the SearchInfoByRegisterIdResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdResults.html#import-detail","title":"SearchInfoByRegisterIdResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdResults.html#property-detail","title":"SearchInfoByRegisterIdResults > Property detail","text":"Property detail\n\n\n\nproperty SearchInfoByRegisterIdResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the retreiving information based on register id.\n\n\n\nproperty SearchInfoByRegisterIdResults.face_zonelets_found: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the face zonelets containing atleast one registered face element.\n\n\n\nproperty SearchInfoByRegisterIdResults.locations_found: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nLocations of each cluster of registered face elements.\n\n\n\nproperty SearchInfoByRegisterIdResults.n_found: int\n\nNumber of registered face elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchInfoByRegisterIdResults.html#method-detail","title":"SearchInfoByRegisterIdResults > Method detail","text":"Method detail\n\n\n\nSearchInfoByRegisterIdResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchInfoByRegisterIdResults.__str__() -> str\n\n\n\n\n\nstatic SearchInfoByRegisterIdResults.print_default()\n\nPrint the default values of SearchInfoByRegisterIdResults object.\n\nExamples\n\n>>> SearchInfoByRegisterIdResults.print_default()\n\n\n\nstatic SearchInfoByRegisterIdResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_found: int = None, locations_found: ansys.meshing.prime.params.primestructs.Iterable[float] = None, face_zonelets_found: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SearchInfoByRegisterIdResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the retreiving information based on register id.\n\nn_found (int, optional) – Number of registered face elements.\n\nlocations_found (Iterable[float], optional) – Locations of each cluster of registered face elements.\n\nface_zonelets_found (Iterable[int], optional) – Ids of the face zonelets containing atleast one registered face element."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtool/VolumeMeshTool.html#volumemeshtool","title":"VolumeMeshTool","text":"VolumeMeshTool\n\n\n\nclass ansys.meshing.prime.autogen.volumemeshtool.VolumeMeshTool(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nVolumeMeshTool allows you to check grid and improve volume mesh quality.\n\nVolumeMeshTool provides various volume mesh improvement algorithms.\n\nParameters\n\nmodel (Model) – Server model to create VolumeMeshTool object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtool/VolumeMeshTool.html#overview","title":"VolumeMeshTool > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nassign_mesh_regions\n\nAssigns a region id to the cells in target cell zonelets of target part id. The region id is based on their location within source part ids.\n\ncheck_mesh\n\nChecks mesh of a part.\n\ncopy_cell_zonelets\n\nCopy cell zonelets and face zonelets connected to the cell zonelets.\n\nget_parts_for_points\n\nFinds parts enclosing the given list of points.\n\nimprove_by_auto_node_move\n\nImprove volume mesh by auto node move.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VolumeMeshTool.\n\n__exit__\n\nExit context for VolumeMeshTool.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtool/VolumeMeshTool.html#import-detail","title":"VolumeMeshTool > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtool/VolumeMeshTool.html#method-detail","title":"VolumeMeshTool > Method detail","text":"Method detail\n\n\n\nVolumeMeshTool.__enter__()\n\nEnter context for VolumeMeshTool.\n\n\n\nVolumeMeshTool.__exit__(type, value, traceback)\n\nExit context for VolumeMeshTool.\n\n\n\nVolumeMeshTool.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeMeshTool.assign_mesh_regions(target_part_id: int, target_cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], source_part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], small_regions_volume_fraction: float) -> ansys.meshing.prime.params.primestructs.VolumeMeshToolResults\n\nAssigns a region id to the cells in target cell zonelets of target part id. The region id is based on their location within source part ids.\n\nParameters\n\ntarget_part_id (int) – Id of the target part.\n\ntarget_cell_zonelets (Iterable[int]) – Ids of cell zonelets to be split into regions.\n\nsource_part_ids (Iterable[int]) – Ids of solids used as a reference for assigning regions.\n\nsmall_regions_volume_fraction (float) – Regions with volumes smaller than a specified fraction of the total volume are merged into their largest adjacent region.\nThis helps to eliminate isolated cells and thin regions from the output.\n\nReturns\n\nReturns the VolumeMeshToolResults.\n\nReturn type\n\nVolumeMeshToolResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = volume_mesh_tool.AssignMeshRegions(target_part_id, target_cell_zonelets, source_part_ids, small_regions_volume_fraction)\n\n\n\nVolumeMeshTool.check_mesh(part_id: int, params: ansys.meshing.prime.params.primestructs.CheckMeshParams) -> ansys.meshing.prime.params.primestructs.CheckMeshResults\n\nChecks mesh of a part.\n\nParameters\n\npart_id (int) – Id of a part.\n\nparams (CheckMeshParams) – Parameters to check mesh.\n\nReturns\n\nReturns the CheckMeshResults.\n\nReturn type\n\nCheckMeshResults\n\nExamples\n\n>>> results = volume_mesh_tool.check_mesh(part_id,\n>>>                                prime.CheckMeshParams(model =model))\n\n\n\nVolumeMeshTool.copy_cell_zonelets(cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], target_part_id: int, params: ansys.meshing.prime.params.primestructs.CopyZoneletsParams) -> ansys.meshing.prime.params.primestructs.CopyZoneletsResults\n\nCopy cell zonelets and face zonelets connected to the cell zonelets.\n\nParameters\n\ncell_zonelets (Iterable[int]) – Ids of cell zonelets to be copied.\n\ntarget_part_id (int) – Part id used to move the copied zonelets.\n\nparams (CopyZoneletsParams) – Parameters to copy cell zonelets.\n\nReturns\n\nReturns the CopyZoneletsResults.\n\nReturn type\n\nCopyZoneletsResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>>> results = volume_mesh_tool.copy_cell_zonelets(cell_zonelets, target_part_id = new_part.id, prime.CopyZoneletsParams(model = model))\n\n\n\nVolumeMeshTool.get_parts_for_points(points: ansys.meshing.prime.params.primestructs.Iterable[float], params: PartsForPointsParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFinds parts enclosing the given list of points.\n\nParameters\n\npoints (Iterable[float]) – Coordinates of points for which parts need to be found.\n\nparams (PartsForPointsParams) – Parameters for searching parts.\n\nReturns\n\nReturns array containing information about parts enclosing the points.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = volume_mesh_tool.get_parts_for_points([0., 0., 0.], params)\n\n\n\nVolumeMeshTool.improve_by_auto_node_move(part_id: int, cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], boundary_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.AutoNodeMoveParams) -> ansys.meshing.prime.params.primestructs.VolumeMeshToolResults\n\nImprove volume mesh by auto node move.\n\nParameters\n\npart_id (int) – Id of a part.\n\ncell_zonelets (Iterable[int]) – Ids of cell zonelets to be improved.\n\nboundary_zonelets (Iterable[int]) – Ids of boundary face zonelets.\n\nparams (AutoNodeMoveParams) – Auto node move parameters.\n\nReturns\n\nReturn the VolumeMeshToolResults.\n\nReturn type\n\nVolumeMeshToolResults\n\nExamples\n\n>>> results = volume_mesh_tool.improve_by_auto_node_move(part_id,\n>>>                                cell_zonelets,\n>>>                                boundary_zonelets,\n>>>                                prime.AutoNodeMoveParams(model =model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatCircularFacesParams.html#detectandtreatcircularfacesparams","title":"DetectAndTreatCircularFacesParams","text":"DetectAndTreatCircularFacesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.DetectAndTreatCircularFacesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, merge_edge_allow_self_close: bool = None, merge_face_normals_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters for detect and treat circular faces operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectAndTreatCircularFacesParams object with default parameters.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.This is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectAndTreatCircularFacesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_circular_faces_params = prime.DetectAndTreatCircularFacesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatCircularFacesParams.html#overview","title":"DetectAndTreatCircularFacesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_mesh_constant_size\n\nConstant size used for edge meshing.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmerge_face_normals_angle\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nsurface_mesh_constant_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectAndTreatCircularFacesParams object.\n\nset_default\n\nSet the default values of the DetectAndTreatCircularFacesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatCircularFacesParams.html#import-detail","title":"DetectAndTreatCircularFacesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatCircularFacesParams.html#property-detail","title":"DetectAndTreatCircularFacesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectAndTreatCircularFacesParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatCircularFacesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatCircularFacesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatCircularFacesParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatCircularFacesParams.html#method-detail","title":"DetectAndTreatCircularFacesParams > Method detail","text":"Method detail\n\n\n\nDetectAndTreatCircularFacesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectAndTreatCircularFacesParams.__str__() -> str\n\n\n\n\n\nstatic DetectAndTreatCircularFacesParams.print_default()\n\nPrint the default values of DetectAndTreatCircularFacesParams object.\n\nExamples\n\n>>> DetectAndTreatCircularFacesParams.print_default()\n\n\n\nstatic DetectAndTreatCircularFacesParams.set_default(edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, merge_edge_allow_self_close: bool = None, merge_face_normals_angle: float = None)\n\nSet the default values of the DetectAndTreatCircularFacesParams object.\n\nParameters\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinParams.html#joinparams","title":"JoinParams","text":"JoinParams\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.JoinParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, match_angle: float = None, overlap_zone_name: str = None, json_data: dict = None, **kwargs)\n\nParameters used for join.\n\nParameters\n\nmodel (Model) – Model to create a JoinParams object with default parameters.\n\ntolerance (float, optional) – Overlap tolerance between overlapping zonelets.\n\nuse_absolute_tolerance (bool, optional) – Tolerance provided is absolute value.\n\nremesh (bool, optional) – Remesh at overlap surface boundary.\n\nmatch_angle (float, optional) – Match angle determines face pair inclination for overlap consideration.\n\noverlap_zone_name (str, optional) – Zone id to be assigned to overlap zonelets belonging to different zones.\n\njson_data (dict, optional) – JSON dictionary to create a JoinParams object with provided parameters.\n\nExamples\n\n>>> join_params = prime.JoinParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinParams.html#overview","title":"JoinParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmatch_angle\n\nMatch angle determines face pair inclination for overlap consideration.\n\noverlap_zone_name\n\nZone id to be assigned to overlap zonelets belonging to different zones.\n\nremesh\n\nRemesh at overlap surface boundary.\n\ntolerance\n\nOverlap tolerance between overlapping zonelets.\n\nuse_absolute_tolerance\n\nTolerance provided is absolute value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of JoinParams object.\n\nset_default\n\nSet the default values of the JoinParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinParams.html#import-detail","title":"JoinParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinParams.html#property-detail","title":"JoinParams > Property detail","text":"Property detail\n\n\n\nproperty JoinParams.match_angle: float\n\nMatch angle determines face pair inclination for overlap consideration.\n\n\n\nproperty JoinParams.overlap_zone_name: str\n\nZone id to be assigned to overlap zonelets belonging to different zones.\n\n\n\nproperty JoinParams.remesh: bool\n\nRemesh at overlap surface boundary.\n\n\n\nproperty JoinParams.tolerance: float\n\nOverlap tolerance between overlapping zonelets.\n\n\n\nproperty JoinParams.use_absolute_tolerance: bool\n\nTolerance provided is absolute value."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/JoinParams.html#method-detail","title":"JoinParams > Method detail","text":"Method detail\n\n\n\nJoinParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nJoinParams.__str__() -> str\n\n\n\n\n\nstatic JoinParams.print_default()\n\nPrint the default values of JoinParams object.\n\nExamples\n\n>>> JoinParams.print_default()\n\n\n\nstatic JoinParams.set_default(tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, match_angle: float = None, overlap_zone_name: str = None)\n\nSet the default values of the JoinParams object.\n\nParameters\n\ntolerance (float, optional) – Overlap tolerance between overlapping zonelets.\n\nuse_absolute_tolerance (bool, optional) – Tolerance provided is absolute value.\n\nremesh (bool, optional) – Remesh at overlap surface boundary.\n\nmatch_angle (float, optional) – Match angle determines face pair inclination for overlap consideration.\n\noverlap_zone_name (str, optional) – Zone id to be assigned to overlap zonelets belonging to different zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/EdgeMergeControl.html#edgemergecontrol","title":"EdgeMergeControl","text":"EdgeMergeControl\n\n\n\nclass ansys.meshing.prime.autogen.scaffolderstructs.EdgeMergeControl\n\nSpecifies type of edge pairs to be merged during scaffold operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/EdgeMergeControl.html#overview","title":"EdgeMergeControl > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLTOALL\n\nAllows to merge all types of edges.\n\nFREETOALL\n\nAllows to merge only free edges into all edges.\n\nFREETOFREE\n\nAllows to merge free edge into other free edge only."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/EdgeMergeControl.html#import-detail","title":"EdgeMergeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/EdgeMergeControl.html#attribute-detail","title":"EdgeMergeControl > Attribute detail","text":"Attribute detail\n\n\n\nEdgeMergeControl.ALLTOALL = 1\n\nAllows to merge all types of edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeMergeControl.FREETOALL = 2\n\nAllows to merge only free edges into all edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeMergeControl.FREETOFREE = 3\n\nAllows to merge free edge into other free edge only.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbResults.html#exportmapdlcdbresults","title":"ExportMapdlCdbResults","text":"ExportMapdlCdbResults\n\n\n\nclass ansys.meshing.prime.ExportMapdlCdbResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, summary_log: str = None, zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the MAPDL CDB export.\n\nParameters\n\nmodel (Model) – Model to create a ExportMapdlCdbResults object with default parameters.\n\nsummary_log (str, optional) – Summary log for the export operation in json format.This is a beta parameter. The behavior and name may change in the future.\n\nzone_mesh_results (List[ZoneMeshResult], optional) – Zone-wise mesh information for elements in the exported model.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportMapdlCdbResults object with provided parameters.\n\nExamples\n\n>>> export_mapdl_cdb_results = prime.ExportMapdlCdbResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbResults.html#overview","title":"ExportMapdlCdbResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nsummary_log\n\nSummary log for the export operation in json format.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nzone_mesh_results\n\nZone-wise mesh information for elements in the exported model.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportMapdlCdbResults object.\n\nset_default\n\nSet the default values of the ExportMapdlCdbResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbResults.html#import-detail","title":"ExportMapdlCdbResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbResults.html#property-detail","title":"ExportMapdlCdbResults > Property detail","text":"Property detail\n\n\n\nproperty ExportMapdlCdbResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty ExportMapdlCdbResults.summary_log: str\n\nSummary log for the export operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbResults.zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult]\n\nZone-wise mesh information for elements in the exported model.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbResults.html#method-detail","title":"ExportMapdlCdbResults > Method detail","text":"Method detail\n\n\n\nExportMapdlCdbResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportMapdlCdbResults.__str__() -> str\n\n\n\n\n\nstatic ExportMapdlCdbResults.print_default()\n\nPrint the default values of ExportMapdlCdbResults object.\n\nExamples\n\n>>> ExportMapdlCdbResults.print_default()\n\n\n\nstatic ExportMapdlCdbResults.set_default(summary_log: str = None, zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ExportMapdlCdbResults object.\n\nParameters\n\nsummary_log (str, optional) – Summary log for the export operation in json format.\n\nzone_mesh_results (List[ZoneMeshResult], optional) – Zone-wise mesh information for elements in the exported model.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesParams.html#computevolumesparams","title":"ComputeVolumesParams","text":"ComputeVolumesParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ComputeVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, volume_naming_type: VolumeNamingType = None, create_zones_type: CreateVolumeZonesType = None, priority_ordered_names: ansys.meshing.prime.params.primestructs.List[str] = None, material_point_names: ansys.meshing.prime.params.primestructs.List[str] = None, json_data: dict = None, **kwargs)\n\nParameters to compute volumes.\n\nParameters\n\nmodel (Model) – Model to create a ComputeVolumesParams object with default parameters.\n\nvolume_naming_type (VolumeNamingType, optional) – Indicates source type used to compute zone name for volumes.\n\ncreate_zones_type (CreateVolumeZonesType, optional) – Option to control volume zone creation for volumes.\n\npriority_ordered_names (List[str], optional) – Zone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\nmaterial_point_names (List[str], optional) – Material point names provided to identify volumes. Material point names will have precedence over the volume names.\n\njson_data (dict, optional) – JSON dictionary to create a ComputeVolumesParams object with provided parameters.\n\nExamples\n\n>>> compute_volumes_params = prime.ComputeVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesParams.html#overview","title":"ComputeVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreate_zones_type\n\nOption to control volume zone creation for volumes.\n\nmaterial_point_names\n\nMaterial point names provided to identify volumes. Material point names will have precedence over the volume names.\n\npriority_ordered_names\n\nZone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\nvolume_naming_type\n\nIndicates source type used to compute zone name for volumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComputeVolumesParams object.\n\nset_default\n\nSet the default values of the ComputeVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesParams.html#import-detail","title":"ComputeVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesParams.html#property-detail","title":"ComputeVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty ComputeVolumesParams.create_zones_type: CreateVolumeZonesType\n\nOption to control volume zone creation for volumes.\n\n\n\nproperty ComputeVolumesParams.material_point_names: ansys.meshing.prime.params.primestructs.List[str]\n\nMaterial point names provided to identify volumes. Material point names will have precedence over the volume names.\n\n\n\nproperty ComputeVolumesParams.priority_ordered_names: ansys.meshing.prime.params.primestructs.List[str]\n\nZone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\n\n\nproperty ComputeVolumesParams.volume_naming_type: VolumeNamingType\n\nIndicates source type used to compute zone name for volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesParams.html#method-detail","title":"ComputeVolumesParams > Method detail","text":"Method detail\n\n\n\nComputeVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComputeVolumesParams.__str__() -> str\n\n\n\n\n\nstatic ComputeVolumesParams.print_default()\n\nPrint the default values of ComputeVolumesParams object.\n\nExamples\n\n>>> ComputeVolumesParams.print_default()\n\n\n\nstatic ComputeVolumesParams.set_default(volume_naming_type: VolumeNamingType = None, create_zones_type: CreateVolumeZonesType = None, priority_ordered_names: ansys.meshing.prime.params.primestructs.List[str] = None, material_point_names: ansys.meshing.prime.params.primestructs.List[str] = None)\n\nSet the default values of the ComputeVolumesParams object.\n\nParameters\n\nvolume_naming_type (VolumeNamingType, optional) – Indicates source type used to compute zone name for volumes.\n\ncreate_zones_type (CreateVolumeZonesType, optional) – Option to control volume zone creation for volumes.\n\npriority_ordered_names (List[str], optional) – Zone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\nmaterial_point_names (List[str], optional) – Material point names provided to identify volumes. Material point names will have precedence over the volume names."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderParams.html#scaffolderparams","title":"ScaffolderParams","text":"ScaffolderParams\n\n\n\nclass ansys.meshing.prime.ScaffolderParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, absolute_dist_tol: float = None, repair_mode: ScaffolderRepairMode = None, size_field_type: int = None, intersection_control_mask: IntersectionMask = None, edge_merge_control: int = None, constant_mesh_size: float = None, remove_holes_critical_radius: float = None, remove_slivers_abs_dist_tol_ratio: float = None, triangles_coplanar_angle_cos: float = None, json_data: dict = None, **kwargs)\n\nParameters to control scaffold operation.\n\nParameters\n\nmodel (Model) – Model to create a ScaffolderParams object with default parameters.\n\nabsolute_dist_tol (float, optional) – Defines the maximum gap to connect.\n\nrepair_mode (ScaffolderRepairMode, optional) – Defines the mode to be used during repair or connect.This is a beta parameter. The behavior and name may change in the future.\n\nsize_field_type (int, optional) – Specifies the type of size field used for scaffolding.This is a beta parameter. The behavior and name may change in the future.\n\nintersection_control_mask (IntersectionMask, optional) – Specifies the nature of intersection to be computed.\n\nedge_merge_control (int, optional) – Specifies type of edge pairs to be merged during scaffold operation.This is a beta parameter. The behavior and name may change in the future.\n\nconstant_mesh_size (float, optional) – Defines the constant edge mesh size to check connection.\n\nremove_holes_critical_radius (float, optional) – Defines the maximum radius of holes to be removed.This is a beta parameter. The behavior and name may change in the future.\n\nremove_slivers_abs_dist_tol_ratio (float, optional) – Defines the maximum aspect ratio to remove sliver faces.This is a beta parameter. The behavior and name may change in the future.\n\ntriangles_coplanar_angle_cos (float, optional) – Lower bound for cos angle to consider coplanar faces for scaffolding.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ScaffolderParams object with provided parameters.\n\nExamples\n\n>>> scaffolder_params = prime.ScaffolderParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderParams.html#overview","title":"ScaffolderParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsolute_dist_tol\n\nDefines the maximum gap to connect.\n\nconstant_mesh_size\n\nDefines the constant edge mesh size to check connection.\n\nedge_merge_control\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nintersection_control_mask\n\nSpecifies the nature of intersection to be computed.\n\nremove_holes_critical_radius\n\nDefines the maximum radius of holes to be removed.\n\nremove_slivers_abs_dist_tol_ratio\n\nDefines the maximum aspect ratio to remove sliver faces.\n\nrepair_mode\n\nDefines the mode to be used during repair or connect.\n\nsize_field_type\n\nSpecifies the type of size field used for scaffolding.\n\ntriangles_coplanar_angle_cos\n\nLower bound for cos angle to consider coplanar faces for scaffolding.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScaffolderParams object.\n\nset_default\n\nSet the default values of the ScaffolderParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderParams.html#import-detail","title":"ScaffolderParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderParams.html#property-detail","title":"ScaffolderParams > Property detail","text":"Property detail\n\n\n\nproperty ScaffolderParams.absolute_dist_tol: float\n\nDefines the maximum gap to connect.\n\n\n\nproperty ScaffolderParams.constant_mesh_size: float\n\nDefines the constant edge mesh size to check connection.\n\n\n\nproperty ScaffolderParams.edge_merge_control: int\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.intersection_control_mask: IntersectionMask\n\nSpecifies the nature of intersection to be computed.\n\n\n\nproperty ScaffolderParams.remove_holes_critical_radius: float\n\nDefines the maximum radius of holes to be removed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.remove_slivers_abs_dist_tol_ratio: float\n\nDefines the maximum aspect ratio to remove sliver faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.repair_mode: ScaffolderRepairMode\n\nDefines the mode to be used during repair or connect.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.size_field_type: int\n\nSpecifies the type of size field used for scaffolding.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.triangles_coplanar_angle_cos: float\n\nLower bound for cos angle to consider coplanar faces for scaffolding.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderParams.html#method-detail","title":"ScaffolderParams > Method detail","text":"Method detail\n\n\n\nScaffolderParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolderParams.__str__() -> str\n\n\n\n\n\nstatic ScaffolderParams.print_default()\n\nPrint the default values of ScaffolderParams object.\n\nExamples\n\n>>> ScaffolderParams.print_default()\n\n\n\nstatic ScaffolderParams.set_default(absolute_dist_tol: float = None, repair_mode: ScaffolderRepairMode = None, size_field_type: int = None, intersection_control_mask: IntersectionMask = None, edge_merge_control: int = None, constant_mesh_size: float = None, remove_holes_critical_radius: float = None, remove_slivers_abs_dist_tol_ratio: float = None, triangles_coplanar_angle_cos: float = None)\n\nSet the default values of the ScaffolderParams object.\n\nParameters\n\nabsolute_dist_tol (float, optional) – Defines the maximum gap to connect.\n\nrepair_mode (ScaffolderRepairMode, optional) – Defines the mode to be used during repair or connect.\n\nsize_field_type (int, optional) – Specifies the type of size field used for scaffolding.\n\nintersection_control_mask (IntersectionMask, optional) – Specifies the nature of intersection to be computed.\n\nedge_merge_control (int, optional) – Specifies type of edge pairs to be merged during scaffold operation.\n\nconstant_mesh_size (float, optional) – Defines the constant edge mesh size to check connection.\n\nremove_holes_critical_radius (float, optional) – Defines the maximum radius of holes to be removed.\n\nremove_slivers_abs_dist_tol_ratio (float, optional) – Defines the maximum aspect ratio to remove sliver faces.\n\ntriangles_coplanar_angle_cos (float, optional) – Lower bound for cos angle to consider coplanar faces for scaffolding."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/SetNameResults.html#setnameresults","title":"SetNameResults","text":"SetNameResults\n\n\n\nclass ansys.meshing.prime.autogen.commonstructs.SetNameResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, assigned_name: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the set name.\n\nParameters\n\nmodel (Model) – Model to create a SetNameResults object with default parameters.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set name of given entity.\n\nassigned_name (str, optional) – Assigned name of given entity.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a SetNameResults object with provided parameters.\n\nExamples\n\n>>> set_name_results = prime.SetNameResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/SetNameResults.html#overview","title":"SetNameResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_name\n\nAssigned name of given entity.\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_code\n\nWarning code associated with the set name of given entity.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetNameResults object.\n\nset_default\n\nSet the default values of the SetNameResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/SetNameResults.html#import-detail","title":"SetNameResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/SetNameResults.html#property-detail","title":"SetNameResults > Property detail","text":"Property detail\n\n\n\nproperty SetNameResults.assigned_name: str\n\nAssigned name of given entity.\n\n\n\nproperty SetNameResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty SetNameResults.warning_code: ansys.meshing.prime.params.primestructs.WarningCode\n\nWarning code associated with the set name of given entity."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/SetNameResults.html#method-detail","title":"SetNameResults > Method detail","text":"Method detail\n\n\n\nSetNameResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetNameResults.__str__() -> str\n\n\n\n\n\nstatic SetNameResults.print_default()\n\nPrint the default values of SetNameResults object.\n\nExamples\n\n>>> SetNameResults.print_default()\n\n\n\nstatic SetNameResults.set_default(warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, assigned_name: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SetNameResults object.\n\nParameters\n\nwarning_code (WarningCode, optional) – Warning code associated with the set name of given entity.\n\nassigned_name (str, optional) – Assigned name of given entity.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesParams.html#computevolumesparams","title":"ComputeVolumesParams","text":"ComputeVolumesParams\n\n\n\nclass ansys.meshing.prime.ComputeVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, volume_naming_type: VolumeNamingType = None, create_zones_type: CreateVolumeZonesType = None, priority_ordered_names: ansys.meshing.prime.params.primestructs.List[str] = None, material_point_names: ansys.meshing.prime.params.primestructs.List[str] = None, json_data: dict = None, **kwargs)\n\nParameters to compute volumes.\n\nParameters\n\nmodel (Model) – Model to create a ComputeVolumesParams object with default parameters.\n\nvolume_naming_type (VolumeNamingType, optional) – Indicates source type used to compute zone name for volumes.\n\ncreate_zones_type (CreateVolumeZonesType, optional) – Option to control volume zone creation for volumes.\n\npriority_ordered_names (List[str], optional) – Zone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\nmaterial_point_names (List[str], optional) – Material point names provided to identify volumes. Material point names will have precedence over the volume names.\n\njson_data (dict, optional) – JSON dictionary to create a ComputeVolumesParams object with provided parameters.\n\nExamples\n\n>>> compute_volumes_params = prime.ComputeVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesParams.html#overview","title":"ComputeVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreate_zones_type\n\nOption to control volume zone creation for volumes.\n\nmaterial_point_names\n\nMaterial point names provided to identify volumes. Material point names will have precedence over the volume names.\n\npriority_ordered_names\n\nZone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\nvolume_naming_type\n\nIndicates source type used to compute zone name for volumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComputeVolumesParams object.\n\nset_default\n\nSet the default values of the ComputeVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesParams.html#import-detail","title":"ComputeVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesParams.html#property-detail","title":"ComputeVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty ComputeVolumesParams.create_zones_type: CreateVolumeZonesType\n\nOption to control volume zone creation for volumes.\n\n\n\nproperty ComputeVolumesParams.material_point_names: ansys.meshing.prime.params.primestructs.List[str]\n\nMaterial point names provided to identify volumes. Material point names will have precedence over the volume names.\n\n\n\nproperty ComputeVolumesParams.priority_ordered_names: ansys.meshing.prime.params.primestructs.List[str]\n\nZone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\n\n\nproperty ComputeVolumesParams.volume_naming_type: VolumeNamingType\n\nIndicates source type used to compute zone name for volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesParams.html#method-detail","title":"ComputeVolumesParams > Method detail","text":"Method detail\n\n\n\nComputeVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComputeVolumesParams.__str__() -> str\n\n\n\n\n\nstatic ComputeVolumesParams.print_default()\n\nPrint the default values of ComputeVolumesParams object.\n\nExamples\n\n>>> ComputeVolumesParams.print_default()\n\n\n\nstatic ComputeVolumesParams.set_default(volume_naming_type: VolumeNamingType = None, create_zones_type: CreateVolumeZonesType = None, priority_ordered_names: ansys.meshing.prime.params.primestructs.List[str] = None, material_point_names: ansys.meshing.prime.params.primestructs.List[str] = None)\n\nSet the default values of the ComputeVolumesParams object.\n\nParameters\n\nvolume_naming_type (VolumeNamingType, optional) – Indicates source type used to compute zone name for volumes.\n\ncreate_zones_type (CreateVolumeZonesType, optional) – Option to control volume zone creation for volumes.\n\npriority_ordered_names (List[str], optional) – Zone names for volumes are identified based on the priority in the list. Position index of name in the list determines its priority. Lower the index, higher the priority. Name with highest priority among names from volumeNamingType of face zonelets is identified as zone name for volume. Lowest priority is assigned to all names that are not in the list. When all names identified are of lowest priority, names having higher surface area of faces zonelets are identified as zone name for volume.\n\nmaterial_point_names (List[str], optional) – Material point names provided to identify volumes. Material point names will have precedence over the volume names."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryParams.html#sizecontrolsummaryparams","title":"SizeControlSummaryParams","text":"SizeControlSummaryParams\n\n\n\nclass ansys.meshing.prime.SizeControlSummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to get size control summary.\n\nParameters\n\nmodel (Model) – Model to create a SizeControlSummaryParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a SizeControlSummaryParams object with provided parameters.\n\nExamples\n\n>>> size_control_summary_params = prime.SizeControlSummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryParams.html#overview","title":"SizeControlSummaryParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SizeControlSummaryParams object.\n\nset_default\n\nSet the default values of the SizeControlSummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryParams.html#import-detail","title":"SizeControlSummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControlSummaryParams.html#method-detail","title":"SizeControlSummaryParams > Method detail","text":"Method detail\n\n\n\nSizeControlSummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeControlSummaryParams.__str__() -> str\n\n\n\n\n\nstatic SizeControlSummaryParams.print_default()\n\nPrint the default values of SizeControlSummaryParams object.\n\nExamples\n\n>>> SizeControlSummaryParams.print_default()\n\n\n\nstatic SizeControlSummaryParams.set_default()\n\nSet the default values of the SizeControlSummaryParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetool/CollapseTool.html#collapsetool","title":"CollapseTool","text":"CollapseTool\n\n\n\nclass ansys.meshing.prime.autogen.collapsetool.CollapseTool(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nPerforms various collapse operations. For example, split and collapse on face zonelets.\n\nParameters\n\nmodel (Model) – Server model to create CollapseTool object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetool/CollapseTool.html#overview","title":"CollapseTool > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nsplit_and_collapse_on_zonelets\n\nSplit and collapse elements on face zonelets with the specified register id.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for CollapseTool.\n\n__exit__\n\nExit context for CollapseTool.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetool/CollapseTool.html#import-detail","title":"CollapseTool > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetool/CollapseTool.html#method-detail","title":"CollapseTool > Method detail","text":"Method detail\n\n\n\nCollapseTool.__enter__()\n\nEnter context for CollapseTool.\n\n\n\nCollapseTool.__exit__(type, value, traceback)\n\nExit context for CollapseTool.\n\n\n\nCollapseTool.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCollapseTool.split_and_collapse_on_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, split_params: ansys.meshing.prime.params.primestructs.SplitParams, collapse_params: ansys.meshing.prime.params.primestructs.CollapseParams) -> ansys.meshing.prime.params.primestructs.CollapseResults\n\nSplit and collapse elements on face zonelets with the specified register id.\n\nParameters\n\npart_id (int) – Id of a part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id used to identify face elements to split and collapse.\n\nsplit_params (SplitParams) – Parameters to split longest edge of face elements before collapse.\n\ncollapse_params (CollapseParams) – Parameters to collapse shortest edge of face elements.\n\nReturns\n\nReturns the CollapseResults.\n\nReturn type\n\nCollapseResults\n\nExamples\n\n>>> collapse_tool = prime.CollapseTool(model = model)\n>>> results = collapse_tool.split_and_collapse_on_zonelets(\n>>>     part_id=part.id,\n>>>     face_zonelets=part.get_face_zonelets(),\n>>>     register_id=register_id,\n>>>     split_params=prime.SplitParams(model=model),\n>>>     collapse_params=prime.CollapseParams(model=model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapper/index.html#the-wrapperpy-module","title":"The wrapper.py module","text":"The wrapper.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapper/index.html#summary","title":"The wrapper.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nWrapper\n\nProvide operations to generate surface mesh using wrapper technology.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapper/index.html#description","title":"The wrapper.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_block_model_pmdat.html#ansysmeshingprimeexamplesdownload_block_model_pmdat","title":"ansys.meshing.prime.examples.download_block_model_pmdat","text":"ansys.meshing.prime.examples.download_block_model_pmdat\n\n\n\nansys.meshing.prime.examples.download_block_model_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload PMDAT file for the block model example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(block_model, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DefeatureTopologyParams.html#defeaturetopologyparams","title":"DefeatureTopologyParams","text":"DefeatureTopologyParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.DefeatureTopologyParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, partial_defeature: bool = None, delete_interior_nodes: bool = None, allow_curved_topo_faces: bool = None, fillet_spanning_angle: float = None, aggressive_edge_merge: bool = None, thin_stripes_tolerance: float = None, partial_defeature_params: PartialDefeatureParams = None, delete_interior_nodes_params: DeleteInteriorNodesParams = None, json_data: dict = None, **kwargs)\n\nParameters for defeature topology operations.\n\nParameters\n\nmodel (Model) – Model to create a DefeatureTopologyParams object with default parameters.\n\npartial_defeature (bool, optional) – Option to partial defeature.This is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes (bool, optional) – Option to delete interior nodes.This is a beta parameter. The behavior and name may change in the future.\n\nallow_curved_topo_faces (bool, optional) – Option to allow curved topofaces.This is a beta parameter. The behavior and name may change in the future.\n\nfillet_spanning_angle (float, optional) – Angular threshold for detecting fillets with spanning angles below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\naggressive_edge_merge (bool, optional) – Indicate whether to allow aggressive edge merge while performing partial defeature.This is a beta parameter. The behavior and name may change in the future.\n\nthin_stripes_tolerance (float, optional) – Topoface width tolerance to detect thin faces below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\npartial_defeature_params (PartialDefeatureParams, optional) – Parameters for partial defeature operation.This is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes_params (DeleteInteriorNodesParams, optional) – Parameters for delete interior nodes operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DefeatureTopologyParams object with provided parameters.\n\nExamples\n\n>>> defeature_topology_params = prime.DefeatureTopologyParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DefeatureTopologyParams.html#overview","title":"DefeatureTopologyParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\naggressive_edge_merge\n\nIndicate whether to allow aggressive edge merge while performing partial defeature.\n\nallow_curved_topo_faces\n\nOption to allow curved topofaces.\n\ndelete_interior_nodes\n\nOption to delete interior nodes.\n\ndelete_interior_nodes_params\n\nParameters for delete interior nodes operation.\n\nfillet_spanning_angle\n\nAngular threshold for detecting fillets with spanning angles below the provided value.\n\npartial_defeature\n\nOption to partial defeature.\n\npartial_defeature_params\n\nParameters for partial defeature operation.\n\nthin_stripes_tolerance\n\nTopoface width tolerance to detect thin faces below the provided value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DefeatureTopologyParams object.\n\nset_default\n\nSet the default values of the DefeatureTopologyParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DefeatureTopologyParams.html#import-detail","title":"DefeatureTopologyParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DefeatureTopologyParams.html#property-detail","title":"DefeatureTopologyParams > Property detail","text":"Property detail\n\n\n\nproperty DefeatureTopologyParams.aggressive_edge_merge: bool\n\nIndicate whether to allow aggressive edge merge while performing partial defeature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.allow_curved_topo_faces: bool\n\nOption to allow curved topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.delete_interior_nodes: bool\n\nOption to delete interior nodes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.delete_interior_nodes_params: DeleteInteriorNodesParams\n\nParameters for delete interior nodes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.fillet_spanning_angle: float\n\nAngular threshold for detecting fillets with spanning angles below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.partial_defeature: bool\n\nOption to partial defeature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.partial_defeature_params: PartialDefeatureParams\n\nParameters for partial defeature operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.thin_stripes_tolerance: float\n\nTopoface width tolerance to detect thin faces below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DefeatureTopologyParams.html#method-detail","title":"DefeatureTopologyParams > Method detail","text":"Method detail\n\n\n\nDefeatureTopologyParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDefeatureTopologyParams.__str__() -> str\n\n\n\n\n\nstatic DefeatureTopologyParams.print_default()\n\nPrint the default values of DefeatureTopologyParams object.\n\nExamples\n\n>>> DefeatureTopologyParams.print_default()\n\n\n\nstatic DefeatureTopologyParams.set_default(partial_defeature: bool = None, delete_interior_nodes: bool = None, allow_curved_topo_faces: bool = None, fillet_spanning_angle: float = None, aggressive_edge_merge: bool = None, thin_stripes_tolerance: float = None, partial_defeature_params: PartialDefeatureParams = None, delete_interior_nodes_params: DeleteInteriorNodesParams = None)\n\nSet the default values of the DefeatureTopologyParams object.\n\nParameters\n\npartial_defeature (bool, optional) – Option to partial defeature.\n\ndelete_interior_nodes (bool, optional) – Option to delete interior nodes.\n\nallow_curved_topo_faces (bool, optional) – Option to allow curved topofaces.\n\nfillet_spanning_angle (float, optional) – Angular threshold for detecting fillets with spanning angles below the provided value.\n\naggressive_edge_merge (bool, optional) – Indicate whether to allow aggressive edge merge while performing partial defeature.\n\nthin_stripes_tolerance (float, optional) – Topoface width tolerance to detect thin faces below the provided value.\n\npartial_defeature_params (PartialDefeatureParams, optional) – Parameters for partial defeature operation.\n\ndelete_interior_nodes_params (DeleteInteriorNodesParams, optional) – Parameters for delete interior nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByInvalidNormalsResults.html#searchbyinvalidnormalsresults","title":"SearchByInvalidNormalsResults","text":"SearchByInvalidNormalsResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchByInvalidNormalsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with search invalid normals operation.\n\nParameters\n\nmodel (Model) – Model to create a SearchByInvalidNormalsResults object with default parameters.\n\nn_found (int, optional) – Number of invalid normals identified.\n\nerror_code (ErrorCode, optional) – Error code associated with search invalid normals operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByInvalidNormalsResults object with provided parameters.\n\nExamples\n\n>>> search_by_invalid_normals_results = prime.SearchByInvalidNormalsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByInvalidNormalsResults.html#overview","title":"SearchByInvalidNormalsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search invalid normals operation.\n\nn_found\n\nNumber of invalid normals identified.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByInvalidNormalsResults object.\n\nset_default\n\nSet the default values of the SearchByInvalidNormalsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByInvalidNormalsResults.html#import-detail","title":"SearchByInvalidNormalsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByInvalidNormalsResults.html#property-detail","title":"SearchByInvalidNormalsResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByInvalidNormalsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search invalid normals operation.\n\n\n\nproperty SearchByInvalidNormalsResults.n_found: int\n\nNumber of invalid normals identified."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByInvalidNormalsResults.html#method-detail","title":"SearchByInvalidNormalsResults > Method detail","text":"Method detail\n\n\n\nSearchByInvalidNormalsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByInvalidNormalsResults.__str__() -> str\n\n\n\n\n\nstatic SearchByInvalidNormalsResults.print_default()\n\nPrint the default values of SearchByInvalidNormalsResults object.\n\nExamples\n\n>>> SearchByInvalidNormalsResults.print_default()\n\n\n\nstatic SearchByInvalidNormalsResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchByInvalidNormalsResults object.\n\nParameters\n\nn_found (int, optional) – Number of invalid normals identified.\n\nerror_code (ErrorCode, optional) – Error code associated with search invalid normals operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshParams.html#deletemeshparams","title":"DeleteMeshParams","text":"DeleteMeshParams\n\n\n\nclass ansys.meshing.prime.DeleteMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, delete_mesh_on_connected_topo_edges: bool = None, json_data: dict = None, **kwargs)\n\nParameters to delete mesh on topoentities.\n\nParameters\n\nmodel (Model) – Model to create a DeleteMeshParams object with default parameters.\n\ndelete_mesh_on_connected_topo_edges (bool, optional) – Option to delete mesh on topoedges connected only to provided topoentities.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteMeshParams object with provided parameters.\n\nExamples\n\n>>> delete_mesh_params = prime.DeleteMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshParams.html#overview","title":"DeleteMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_mesh_on_connected_topo_edges\n\nOption to delete mesh on topoedges connected only to provided topoentities.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteMeshParams object.\n\nset_default\n\nSet the default values of the DeleteMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshParams.html#import-detail","title":"DeleteMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshParams.html#property-detail","title":"DeleteMeshParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteMeshParams.delete_mesh_on_connected_topo_edges: bool\n\nOption to delete mesh on topoedges connected only to provided topoentities.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshParams.html#method-detail","title":"DeleteMeshParams > Method detail","text":"Method detail\n\n\n\nDeleteMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteMeshParams.__str__() -> str\n\n\n\n\n\nstatic DeleteMeshParams.print_default()\n\nPrint the default values of DeleteMeshParams object.\n\nExamples\n\n>>> DeleteMeshParams.print_default()\n\n\n\nstatic DeleteMeshParams.set_default(delete_mesh_on_connected_topo_edges: bool = None)\n\nSet the default values of the DeleteMeshParams object.\n\nParameters\n\ndelete_mesh_on_connected_topo_edges (bool, optional) – Option to delete mesh on topoedges connected only to provided topoentities."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetFeatureRecoveriesResults.html#setfeaturerecoveriesresults","title":"SetFeatureRecoveriesResults","text":"SetFeatureRecoveriesResults\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.SetFeatureRecoveriesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with set feature recoveries.\n\nParameters\n\nmodel (Model) – Model to create a SetFeatureRecoveriesResults object with default parameters.\n\nids (Iterable[int], optional) – Ids of added feature recovery controls.\n\nerror_code (ErrorCode, optional) – Error code associated with the set feature recoveries.\n\njson_data (dict, optional) – JSON dictionary to create a SetFeatureRecoveriesResults object with provided parameters.\n\nExamples\n\n>>> set_feature_recoveries_results = prime.SetFeatureRecoveriesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetFeatureRecoveriesResults.html#overview","title":"SetFeatureRecoveriesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set feature recoveries.\n\nids\n\nIds of added feature recovery controls.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetFeatureRecoveriesResults object.\n\nset_default\n\nSet the default values of the SetFeatureRecoveriesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetFeatureRecoveriesResults.html#import-detail","title":"SetFeatureRecoveriesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetFeatureRecoveriesResults.html#property-detail","title":"SetFeatureRecoveriesResults > Property detail","text":"Property detail\n\n\n\nproperty SetFeatureRecoveriesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set feature recoveries.\n\n\n\nproperty SetFeatureRecoveriesResults.ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of added feature recovery controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetFeatureRecoveriesResults.html#method-detail","title":"SetFeatureRecoveriesResults > Method detail","text":"Method detail\n\n\n\nSetFeatureRecoveriesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetFeatureRecoveriesResults.__str__() -> str\n\n\n\n\n\nstatic SetFeatureRecoveriesResults.print_default()\n\nPrint the default values of SetFeatureRecoveriesResults object.\n\nExamples\n\n>>> SetFeatureRecoveriesResults.print_default()\n\n\n\nstatic SetFeatureRecoveriesResults.set_default(ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SetFeatureRecoveriesResults object.\n\nParameters\n\nids (Iterable[int], optional) – Ids of added feature recovery controls.\n\nerror_code (ErrorCode, optional) – Error code associated with the set feature recoveries."},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeMergeControl.html#edgemergecontrol","title":"EdgeMergeControl","text":"EdgeMergeControl\n\n\n\nclass ansys.meshing.prime.EdgeMergeControl\n\nSpecifies type of edge pairs to be merged during scaffold operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeMergeControl.html#overview","title":"EdgeMergeControl > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLTOALL\n\nAllows to merge all types of edges.\n\nFREETOALL\n\nAllows to merge only free edges into all edges.\n\nFREETOFREE\n\nAllows to merge free edge into other free edge only."},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeMergeControl.html#import-detail","title":"EdgeMergeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeMergeControl.html#attribute-detail","title":"EdgeMergeControl > Attribute detail","text":"Attribute detail\n\n\n\nEdgeMergeControl.ALLTOALL = 1\n\nAllows to merge all types of edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeMergeControl.FREETOALL = 2\n\nAllows to merge only free edges into all edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeMergeControl.FREETOFREE = 3\n\nAllows to merge free edge into other free edge only.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveLabelResults.html#removelabelresults","title":"RemoveLabelResults","text":"RemoveLabelResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.RemoveLabelResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the remove label operation.\n\nParameters\n\nmodel (Model) – Model to create a RemoveLabelResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the remove label operation.\n\njson_data (dict, optional) – JSON dictionary to create a RemoveLabelResults object with provided parameters.\n\nExamples\n\n>>> remove_label_results = prime.RemoveLabelResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveLabelResults.html#overview","title":"RemoveLabelResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the remove label operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RemoveLabelResults object.\n\nset_default\n\nSet the default values of the RemoveLabelResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveLabelResults.html#import-detail","title":"RemoveLabelResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveLabelResults.html#property-detail","title":"RemoveLabelResults > Property detail","text":"Property detail\n\n\n\nproperty RemoveLabelResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the remove label operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveLabelResults.html#method-detail","title":"RemoveLabelResults > Method detail","text":"Method detail\n\n\n\nRemoveLabelResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRemoveLabelResults.__str__() -> str\n\n\n\n\n\nstatic RemoveLabelResults.print_default()\n\nPrint the default values of RemoveLabelResults object.\n\nExamples\n\n>>> RemoveLabelResults.print_default()\n\n\n\nstatic RemoveLabelResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the RemoveLabelResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the remove label operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/index.html#the-prismcontrolstructspy-module","title":"The prismcontrolstructs.py module","text":"The prismcontrolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/index.html#summary","title":"The prismcontrolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPrismControlGrowthParams\n\nGrowth parameters for prism control.\n\nPrismControlOffsetType\n\nOffset type for prism control.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/index.html#description","title":"The prismcontrolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/index.html#the-ansysmeshingprime-library","title":"The ansys.meshing.prime library","text":"The ansys.meshing.prime library\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/index.html#summary","title":"The ansys.meshing.prime library > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAddLabelResults\n\nResults associated with the add label operation.\n\nAddThicknessParams\n\nParameters to add thickness for a given plane.\n\nAddThicknessResults\n\nResult structure associated with add thickness zonelets.\n\nAddToZoneResults\n\nResults associated with the add to zone operation.\n\nAdvancedSurferSetup\n\nDefine advanced settings for remeshing operation.\n\nAutoMesh\n\nGenerates volume mesh.\n\nAutoMeshParams\n\nParameters for volume meshing.\n\nAutoMeshResults\n\nResults of volume meshing.\n\nAutoNodeMoveParams\n\nParameters used to improve volume mesh by auto node move.\n\nAutoQuadMesher\n\nGenerate full quad mesh.\n\nAutoQuadMesherResults\n\nResults of auto quad mesher.\n\nBCPair\n\nUsed to define boundary conditions for match morphing.\n\nBCPairType\n\nOption to specify boundary condition pair type.\n\nBCsVolumetricModality\n\nIndicate options to identify morphable region in input volumetric mesh.\n\nBOIType\n\nBOI type for BOI creation.\n\nBodyQueryType\n\nIndicates type of entity to query in part.\n\nBoiSizingParams\n\nSize field computed using body of influence size control enables you to specify a body of influence(that is, a region for sizing control).\n\nBoundaryFittedSpline\n\nBoundaryFittedSpline helps you to create splines for structured hex-mesh model.\n\nBoundaryFittedSplineParams\n\nBoundary fitted spline fitting parameters.\n\nBoundingBox\n\nProvides information about the definition of a bounding box.\n\nCadFaceter\n\nTypes of CAD faceter.\n\nCadReaderRoute\n\nCAD Reader routes.\n\nCadRefacetingMaxEdgeSizeLimit\n\nTypes of maximum edge size limit for CAD faceting.\n\nCadRefacetingParams\n\nParameters to refacet CAD during import.\n\nCadRefacetingResolution\n\nLevels of CAD faceting refinement.\n\nCdbAnalysisType\n\nProvides the MAPDL CDB analysis type.\n\nCdbSimulationType\n\nSimulation Type for CDB export.\n\nCellStatisticsParams\n\nParameters used to calculate cell statistics.\n\nCellStatisticsResults\n\nResults of cell statistics information.\n\nCellZoneletType\n\nTypes of cell zonelet.\n\nCheckFaceDeviationParams\n\nParameters used for check face deviation operations.\n\nCheckFaceDeviationResults\n\nResult structure associated with the check face deviation operations.\n\nCheckMeshParams\n\nParameters used to check mesh.\n\nCheckMeshResults\n\nResult associated with the check mesh operation.\n\nCheckTopologyParams\n\nParameters for check topology operations.\n\nCollapseParams\n\nParameters to collapse face elements.\n\nCollapseResults\n\nResults associated with collapse face elements.\n\nCollapseTool\n\nPerforms various collapse operations. For example, split and collapse on face zonelets.\n\nComponentChildrenParams\n\nParameters associated with querying child components.\n\nComponentChildrenResults\n\nResults associated with querying child components.\n\nComputeTopoVolumesResults\n\nResults associated with compute topovolumes.\n\nComputeVolumesParams\n\nParameters to compute volumes.\n\nComputeVolumesResults\n\nResults associated with compute volumes.\n\nConnect\n\nConnect face zonelets.\n\nConnectFacesParams\n\nParameters for connect faces operation.\n\nConnectResults\n\nResults associated with the connection operations.\n\nContactElementTypeParams\n\nParameters to control element type choices for contact surfaces in TIEs and CONTACT PAIRs.\n\nContactPatchAxis\n\nFlow or wake direction for BOI creation.\n\nContactPreventionParams\n\nContactPreventionParams defines contact prevention control parameters for wrapper.\n\nControlData\n\nContains all controls.\n\nControlPointSelection\n\nControl point selection type.\n\nCopyZoneletsParams\n\nParameters to copy zonelets.\n\nCopyZoneletsResults\n\nResult structure associated with copying zonelets.\n\nCreateBOIParams\n\nParameters used for BOI surface creation in the given axis.\n\nCreateBOIResults\n\nResult structure associated with BOI creation of zonelets.\n\nCreateCapParams\n\nParameters to create cap on face zonelets.\n\nCreateCapResults\n\nResults associated with create cap on face zonelets.\n\nCreateContactPatchParams\n\nParameters used for contact patch creation in the given axis.\n\nCreateContactPatchResults\n\nResult structure associated with created contact patch zonelets.\n\nCreateIntersectionEdgeLoopsParams\n\nParameters used to calculate edge loops created by intersection of two groups of face zonelets.\n\nCreateIntersectionEdgeLoopsResults\n\nResults for the edge loops created by intersection of two groups of face zonelets.\n\nCreateMaterialPointParams\n\nDefines parameters to create material point.\n\nCreateMaterialPointResults\n\nResults structure associated with create material point operation.\n\nCreateShellBLResults\n\nResults associated with the ShellBL mesh.\n\nCreateVolumeZonesType\n\nIndicate type to create volume zones for volumes.\n\nCreateZoneResults\n\nResults associated with the create zone.\n\nCurvatureSizingParams\n\nSize field using curvature size control computes edge and face sizes using their size and normal angle parameters.\n\nDeadRegion\n\nDeadRegion defines a dead region for patch flow regions operation.\n\nDefeatureTopologyParams\n\nParameters for defeature topology operations.\n\nDeleteFringesAndOverlapsParams\n\nParameters to delete fringes and overlapping faces.\n\nDeleteFringesAndOverlapsResults\n\nResults associated with the delete fringes and overlapping faces operation.\n\nDeleteInteriorNodesParams\n\nParameters for delete interior nodes operation.\n\nDeleteMaterialPointResults\n\nResults associated with delete material point operation.\n\nDeleteMeshParams\n\nParameters to delete mesh on topoentities.\n\nDeleteMeshResults\n\nResults structure associated with delete mesh on topofaces.\n\nDeleteResults\n\nResults associated with the deletion of items.\n\nDeleteTool\n\nPerforms various delete operation. For example, delete fringes and overlapping faces.\n\nDeleteTopoEntitiesParams\n\nParameters to control delete topoentities.\n\nDeleteTopoEntitiesResults\n\nResults associated with delete topoentities.\n\nDeleteUnwettedParams\n\nDeleteUnwettedParams defines parameters for delete unwetted surfaces operation.\n\nDeleteUnwettedResult\n\nResults structure associated with delete unwetted surfaces operation.\n\nDeleteVolumesParams\n\nParameters to delete volumes.\n\nDeleteVolumesResults\n\nResults associated with delete volumes operation.\n\nDeleteZoneResults\n\nResults associated with the delete zone.\n\nDetectAndTreatCircularFacesParams\n\nParameters for detect and treat circular faces operation.\n\nDetectAndTreatFeaturesParams\n\nParameters for detect and treat features operations.\n\nDetectAndTreatHolesParams\n\nParameters for detect and treat holes operation.\n\nDetectCircularHolesParams\n\nParameters for detect circular holes operation.\n\nDetectHolesParams\n\nParameters for detect holes operation.\n\nDetectNonCircularHolesParams\n\nParameters for detect non circular holes operation.\n\nEdgeConnectType\n\nEdge connect type to define the type of connection between edges .\n\nEdgeConnectivityResults\n\nResult of the edge connectivity information.\n\nEdgeMergeControl\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nExportBoundaryFittedSplineParams\n\nParameters for exporting boundary fitted splines.\n\nExportFluentCaseParams\n\nParameters to export fluent case file.\n\nExportFluentMeshingMeshParams\n\nParameters used to export fluent meshing mesh.\n\nExportLSDynaIGAResults\n\nResults associated with the LS-DYNA export.\n\nExportLSDynaIgaKeywordFileParams\n\nParameters for exporting LS-DYNA IGA keyword file.\n\nExportLSDynaKeywordFileParams\n\nParameters to control LS-DYNA keyword file export settings.\n\nExportLSDynaResults\n\nResults associated with the LS-DYNA export.\n\nExportMapdlCdbParams\n\nParameters to control MAPDL CDB export settings.\n\nExportMapdlCdbResults\n\nResults associated with the MAPDL CDB export.\n\nExportSTLParams\n\nParameters to export STL file.\n\nExtractFeatureParams\n\nParameter to control feature edge extraction.\n\nExtractFeatureResults\n\nResult of edge zonelet extraction by angle.\n\nExtractTopoVolumesParams\n\nParameters to extract flow topovolumes.\n\nExtractTopoVolumesResults\n\nParameters to extract flow topovolumes.\n\nExtractVolumesParams\n\nParameters to extract flow volumes.\n\nExtractVolumesResults\n\nResults associated with compute volumes.\n\nExtractedFeatureIds\n\nContains ids of the features extracted.\n\nFaceAndEdgeConnectivityParams\n\nParameters to get face and edge connectivity information.\n\nFaceAndEdgeConnectivityResults\n\nResult of the face and edge connectivity information.\n\nFaceConnectivityResults\n\nResult of the face connectivity information.\n\nFeatureExtraction\n\nProvide functions for all feature extraction operations like extracting edges zonlelets, tracing node paths.\n\nFeatureRecoveryParams\n\nFeatureRecoveryParams defines feature recovery control parameters for wrapper.\n\nFileIO\n\nHandles reading or writing files from the disk.\n\nFileReadParams\n\nParameters to read file.\n\nFileReadResults\n\nResults of file read operation.\n\nFileWriteParams\n\nParameters to write a file.\n\nFileWriteResults\n\nResults of file write operation.\n\nFillHolesAtPlaneParams\n\nParameters to fill holes at given plane.\n\nFillHolesAtPlaneResults\n\nResults associated with fill holes at given plane.\n\nFixInvalidNormalNodeParams\n\nParameters to fix invalid average face normal at nodes by creating a nugget.\n\nFixInvalidNormalNodeResults\n\nResults associated with fix invalid average face normal at nodes.\n\nFlowDirection\n\nFlow or wake direction for BOI creation.\n\nFuseOption\n\nType to specify treatment of surfaces for fusing.\n\nFuseParams\n\nParameters for fuse operation.\n\nFuseResults\n\nResults associated with the fuse operations.\n\nGlobalSizingParams\n\nGlobal sizing parameters.\n\nHardSizingParams\n\nSize field computed using hard size control enables you to maintain a uniform size based on the size specified.\n\nHexCoreCellElementType\n\nCell element type of hex-shaped cells.\n\nHexCoreParams\n\nParameters to control hexahedral mesh generation.\n\nHexCoreTransitionLayerType\n\nHandle size transition of hex cells.\n\nHexToSpline\n\nConverts all-hex mesh to spline.\n\nHexToSplineParams\n\nParameters to control conversion of hex mesh to spline.\n\nIGAResults\n\nResults of IGA operations.\n\nIGASpline\n\nInformation of the spline.\n\nIGAUnstructuredSplineSolid\n\nInformation of unstructured spline solid.\n\nIGAUnstructuredSplineSurf\n\nInformation of unstructured spline surface.\n\nImportAbaqusParams\n\nParameters for importing Abaqus solver input files.\n\nImportAbaqusResults\n\nResults of Abaqus import operation.\n\nImportCadParams\n\nParameters to control CAD import settings.\n\nImportCadResults\n\nResults associated with the CAD import.\n\nImportFluentCaseParams\n\nParameters to import fluent case file.\n\nImportFluentCaseResults\n\nResults associated with fluent case import.\n\nImportFluentMeshingMeshParams\n\nParameters used to import fluent meshing mesh.\n\nImportFluentMeshingMeshResults\n\nResults associated with fluent meshing mesh import.\n\nImportMapdlCdbParams\n\nParameters to control MAPDL CDB import settings.\n\nImportMapdlCdbResults\n\nResults associated with the MAPDL CDB import.\n\nIntersectParams\n\nParameters used for intersection.\n\nIntersectionMask\n\nScaffold parameters use intersection mask to define nature of intersection computation.\n\nJoinParams\n\nParameters used for join.\n\nJoinSeparateMethod\n\nJoin separation method to handle separated overlapped zonelets.\n\nLSDynaAnalysisType\n\nProvides the LS-DYNA analysis type.\n\nLSDynaFileFormatType\n\nProvides the format type to write the LS-DYNA file.\n\nLabelExportParams\n\nParameters to control the export of labels as Nodal or Element Components in CDB. By default, all the labels are exported as Element Components.\n\nLeakPreventionParams\n\nLeakPreventionParams defines leakage prevention control parameters for wrapper.\n\nLengthUnit\n\nLength units\n\nLocalSurferParams\n\nParameters to perform local surface remeshing.\n\nLocalSurferResults\n\nResults associated with the local surface mesh.\n\nMatchMorphParams\n\nMatchMorphParams describes the parameters required for match morphing.\n\nMatchMorphResults\n\nResults associated with match morph operation.\n\nMatchPair\n\nMatch pair to specify sources, targets for match morphing. Included boundary conditions specification.\n\nMatchPairTargetType\n\nMatch morph target type.\n\nMaterialPointManager\n\nProvide functions for material point creation, deletion and queries.\n\nMaterialPointType\n\nDefines define type of material point.\n\nMergeBoundaryNodesParams\n\nParameters used for the merge boundary nodes operation.\n\nMergeBoundaryNodesResults\n\nResults associated with the merge nodes operation.\n\nMergeNodeType\n\nType of nodes to be merged.\n\nMergePartsParams\n\nParameters to merge parts.\n\nMergePartsResults\n\nParameters to merge parts.\n\nMergeVolumesParams\n\nParameters to merge volumes.\n\nMergeVolumesResults\n\nResults associated with merge volumes operation.\n\nMergeZoneletsParams\n\nParameters to merge zonelets.\n\nMergeZoneletsResults\n\nResults associated with merge zonelets.\n\nMeshInfo\n\nMeshInfo provides information about the mesh connectivity and more.\n\nMeshStackerParams\n\nInput parameters associated with the mesh stacker operations.\n\nMeshStackerResults\n\nResults associated with the mesh stacker operations.\n\nMeshedSizingParams\n\nSize field computed using meshed size control enables you to set the size based on existing sizes.\n\nModel\n\nContains all information about Ansys Prime Server.\n\nMorphBCParams\n\nMorphBCParams contains the input parameters for calculating the boundary conditions for a morphing problem.\n\nMorphSolveParams\n\nMorpher solve parameters.\n\nMorpher\n\nMorpher contain functionalities to change the geometry, adapting the mesh accordingly without a recomputation.\n\nMultiZoneControl\n\nMultiZoneControl provides a way to gather all the information required for MultiZone meshing.\n\nMultiZoneEdgeBiasingParams\n\nDefines MultiZone edge biasing control parameters.\n\nMultiZoneMapMeshParams\n\nDefine controlling parameters for the map mesh using MultiZone.\n\nMultiZoneSizingParams\n\nParameters for MultiZone meshing.\n\nMultiZoneSweepMeshParams\n\nDefines MultiZone thin sweep mesh control parameters.\n\nNamePatternParams\n\nParameters to be used to match name pattern with names.\n\nOptimizeQuadMeshParams\n\nParameters for optimize quad mesh operations.\n\nOverlapPairs\n\nProvides ids of a pair of overlapping face zonelets.\n\nOverlapSearchResults\n\nProvides ids of a pair of overlapping face zonelets.\n\nPart\n\nPart contains zonelets and topoentities.\n\nPartCreationType\n\nPart Creation Type decides whether to create a part per CAD Model, Assembly, Part, Body.\n\nPartSummaryParams\n\nParameters to control part summary results.\n\nPartSummaryResults\n\nResults of part summary.\n\nPartZonelets\n\nA structure containing some or all face zonelet ids available in a part.\n\nPartialDefeatureParams\n\nParameters for partial defeature operation.\n\nPeriodicControl\n\nPeriodic controls provide settings for the recovery of periodic surfaces.\n\nPeriodicControlParams\n\nPeriodicControlParams contains the parameters for periodic surface recovery.  Parameters like center, axis and angle determine the transformation from  one surface to its matching periodic surface.\n\nPeriodicControlSummaryParams\n\nParameters used to get size control summary.\n\nPeriodicControlSummaryResult\n\nResults of Periodic control summary.\n\nPrismControl\n\nPrismControl allows you to generate prisms.\n\nPrismControlGrowthParams\n\nGrowth parameters for prism control.\n\nPrismControlOffsetType\n\nOffset type for prism control.\n\nPrismParams\n\nParameters to control prism mesh generation.\n\nPrismStairStep\n\nParameters to control prism stairsteping.\n\nProjectOnGeometryParams\n\nParameters used to project topoface nodes on associated geometry.\n\nProjectOnGeometryResults\n\nResults associated with projection of topofaces nodes on its geometry.\n\nProximitySizingParams\n\nSize field using proximity size control computes edge and face sizes in gaps using the specified minimum number of element layers.\n\nQuadToSpline\n\nConverts all-quad mesh to spline.\n\nQuadToSplineParams\n\nParameters to control conversion of quadrilateral mesh to spline.\n\nReadSizeFieldParams\n\nParameters used to read size field file.\n\nRefineAtContactsParams\n\nParameters to refine face elements in contact.\n\nRefineAtContactsResults\n\nResults structure associated with refine face elements in contact.\n\nRefineSplineParams\n\nSpline refinement parameters.\n\nRefineTetMeshParams\n\nParameters for meshing the solid spline.\n\nRemoveLabelResults\n\nResults associated with the remove label operation.\n\nRemoveZoneResults\n\nResults associated with the remove zone operation.\n\nRepairEdgesParams\n\nParameters for repair edges operation.\n\nRepairTopologyParams\n\nParameters for repair topology operations.\n\nResolveIntersectionResult\n\nResult structure associated with resolve intersections operation.\n\nResolveIntersectionsParams\n\nResolveIntersectionsParams define parameters for resolve intersections.\n\nSFPeriodicParams\n\nParameters for setting periodic size fields.\n\nScaffolder\n\nScaffolder is used for achieving connections in structures made of sheets and beams. Solid bodies should be suppressed before applying scaffolding.\n\nScaffolderMergeResults\n\nResult structure associated with merge overlapping topofaces and delete shadowed topofaces operations.\n\nScaffolderParams\n\nParameters to control scaffold operation.\n\nScaffolderRepairMode\n\nMode of Scaffolder repair to be used.\n\nScaffolderResults\n\nResults structure associated to scaffold operation.\n\nScaffolderSplitResults\n\nResult structure associated to split topofaces operation.\n\nScopeDefinition\n\nScopeDefinition to scope entities based on entity and evaluation type.\n\nScopeEntity\n\nScopeDefinition uses entity type to scope entities.\n\nScopeEvaluationType\n\nScopeDefinition uses evaluation type to evaluate the scope.\n\nScopeExpressionType\n\nScopeExpressionType uses expression type to evaluate the scope.\n\nScopeZoneletParams\n\nParameters used to get the scoped face or edge zonelets.\n\nSearchByFoldsParams\n\nParameters to control fold detection.\n\nSearchByFoldsResults\n\nResults structure associated with search folds operation.\n\nSearchByIntersectionResults\n\nResults associated with search by face element intersection (face elements interfering with each other).\n\nSearchByInvalidNormalsResults\n\nResults structure associated with search invalid normals operation.\n\nSearchByQualityParams\n\nParameters to control search by quality results.\n\nSearchByQualityResults\n\nResults of search by quality.\n\nSearchBySelfIntersectionParams\n\nParameters to search by face element intersection.\n\nSearchBySpikeParams\n\nParameters to control spike detection.\n\nSearchBySpikeResults\n\nResults structure associated with search spikes operation.\n\nSearchByThinStripParams\n\nParameters to search by thin strip of face elements.\n\nSearchByThinStripResults\n\nResults associated with search by thin strip of face elements.\n\nSearchInfoByRegisterIdParams\n\nParameters to retrieve information on registered faces.\n\nSearchInfoByRegisterIdResults\n\nResult structure containing information on registered face elements.\n\nSeparateBlocksFormatType\n\nFormat type for separate element blocks. Only applicable when write_separate_blocks is true.\n\nSetContactPreventionsResults\n\nResults associated with set contact preventions.\n\nSetFeatureRecoveriesResults\n\nResults associated with set feature recoveries.\n\nSetLeakPreventionsResults\n\nResults associated with set leak preventions.\n\nSetNameResults\n\nResults associated with the set name.\n\nSetParamsResults\n\nResults associated with the set parameters operation.\n\nSetScopeResults\n\nResults associated with the set scope operation.\n\nSetSizingResults\n\nResult associated with the different set sizing parameters.\n\nShellBLControl\n\nShellBLControl allows you to generate quad mesh on face zonelets.\n\nShellBLControlGrowthParams\n\nGrowth parameters for ShellBL control.\n\nShellBLParams\n\nParameters used to generate ShellBL.\n\nSizeControl\n\nSize control is used to compute the size field.\n\nSizeControlSummaryParams\n\nParameters used to get size control summary.\n\nSizeControlSummaryResult\n\nResults of size control summary.\n\nSizeField\n\nThe size field is computed based on the size control defined.\n\nSizeFieldFileReadResults\n\nResults of size field file read operation.\n\nSizingType\n\nSizing type decides the type of size control.\n\nSmoothDihedralFaceNodesParams\n\nParameters to smooth dihedral face nodes.\n\nSmoothDihedralFaceNodesResults\n\nResults structure associated with smooth dihedral face nodes.\n\nSmoothType\n\nIndicates the the type of operation to be performed during the smooth dihedral face nodes operation.\n\nSoftSizingParams\n\nSize field computed using soft size control enables you to set the maximum size on the scoped zonelets .\n\nSoiSizingParams\n\nParameters for sphere of influence size control.\n\nSplineContinuityType\n\nSpline Continuity types.\n\nSplineFeatureCaptureType\n\nOptions to capture features in spline.\n\nSplineRefinementType\n\nType of spline refinement. Currently, supports h-refinement and p-refinement.\n\nSplitParams\n\nParameters to split face elements at longest edge.\n\nStitchParams\n\nParameters used for stitch operation.\n\nStitchType\n\nStitch type depending on nature of surface boundary edges to be stitched.\n\nStretchFreeBoundariesParams\n\nParameters used for stretch free boundaries operation.\n\nStretchFreeBoundariesResults\n\nResults associated with stretch free boundaries operation.\n\nSubtractVolumesParams\n\nParameters to control the volume subtract operation.\n\nSubtractVolumesResults\n\nResults of the volume subtract operation.\n\nSubtractZoneletsParams\n\nParameters to use when subtracting zonelets.\n\nSubtractZoneletsResults\n\nResults structure associated with subtracting zonelets.\n\nSurfaceDiagnosticSummaryParams\n\nParameters to control surface diagnostics summary results.\n\nSurfaceDiagnosticSummaryResults\n\nResults of surface diagnostic summary.\n\nSurfaceMeshSizeScaling\n\nSettings related to scaling of surface mesh size for hexcore refinement.\n\nSurfaceQualityResult\n\nResult of surface quality.\n\nSurfaceQualitySummaryParams\n\nParameters to control surface quality summary results.\n\nSurfaceQualitySummaryResults\n\nResults of surface quality summary.\n\nSurfaceSearch\n\nSurfaceSearch allows you to check surface mesh quality.\n\nSurfaceUtilities\n\nPerforms various general surface utilities algorithms.\n\nSurfer\n\nGenerates surface mesh.\n\nSurferParams\n\nParameters used to generate surface mesh.\n\nSurferResults\n\nResults associated with the surface mesh.\n\nSweepType\n\nProvides the Sweep Mesh Decomposition type.\n\nTetMeshSplineParams\n\nParameters for meshing the solid spline.\n\nTetParams\n\nParameters to control tetrahedral mesh generation.\n\nThinStripType\n\nThe type to identify strip of face elements as thin strips using shape formed by features around the strip of face elements.\n\nThinVolumeControl\n\nThinVolumeControl allows you to generate prisms in the space between surfaces.\n\nThinVolumeMeshParams\n\nParameters to generate thin volume mesh. This is for internal use only.\n\nTopoData\n\nTopodata has all information about connectivity of nodes, edges, elements and more.\n\nTopoFillHoleParams\n\nParameters used to fill holes in topology.\n\nTopoFillHoleResult\n\nResults associated with fill holes in topology operations.\n\nTopoSearchField\n\nToposearch diagnostic field.\n\nTopoUtilities\n\nPerforms various general topology utility algorithms. For example, fill hole.\n\nTransform\n\nProvides functionalities to initialize and manage transformation using transformation matrix.\n\nTransformParams\n\nParameters to transform given entities.\n\nTransformResults\n\nResults associated with the transformation.\n\nTriangulateParams\n\nProvides the parameters used for triangulation operation.\n\nTriangulateResults\n\nResults associated with triangulate operation.\n\nTrimmedSolidSplineCutMode\n\nTypes of Cut modes used to generate Cartesian grid representing subdomains of trimmed solid spline.\n\nTrimmedSpline\n\nHandles creation and meshing of trimmed spline.\n\nTrimmedSplineResults\n\nResults of IGA operations.\n\nUniformSolidSplineCreationParams\n\nParameters to define the uniform solid spline.\n\nVTComposer\n\nVTComposer is used for fix topology corrections like separate, pinch.\n\nVTComposerParams\n\nParameters to control VTComposer operations.\n\nVTComposerResults\n\nResult struct associated to VTComposer operations.\n\nVolumeControl\n\nDefines the scope and type of volume mesh to generate.\n\nVolumeControlParams\n\nVolume control parameters are used to define the volume type in the volume control.\n\nVolumeFillType\n\nTypes of volume fill options.\n\nVolumeMeshTool\n\nVolumeMeshTool allows you to check grid and improve volume mesh quality.\n\nVolumeMeshToolResults\n\nResult associated with the volume mesh tool operation.\n\nVolumeNamingType\n\nIndicate source types used to name volume zones.\n\nVolumeQualityResultsPart\n\nResult of volume quality of part.\n\nVolumeQualitySummaryParams\n\nParameters to control volume quality summary results.\n\nVolumeQualitySummaryResults\n\nResults of volume quality summary.\n\nVolumeSearch\n\nVolumeSearch allows you to check volume mesh quality.\n\nVolumeSweeper\n\nProvides operations to generate volume meshes using stacker technology.\n\nVolumetricScaffolderParams\n\nParameters to control delete shadowed topofaces operation.\n\nVolumetricSizeFieldComputeParams\n\nParameters associated with the compute volumetric size field operation.\n\nVolumetricSizeFieldComputeResults\n\nResults associated with the compute volumetric size field operation.\n\nWrapParams\n\nWrapParams defines parameters for wrapping.\n\nWrapRegion\n\nIndicates source type to extract wrapper region.\n\nWrapResult\n\nResult structure associated to Wrap operation.\n\nWrapper\n\nProvides operations for generating a surface mesh using wrapper technology.\n\nWrapperCloseGapsParams\n\nWrapperCloseGapsParams to define parameters for close gaps operation.\n\nWrapperCloseGapsResult\n\nResult structure associated with close gaps operation.\n\nWrapperControl\n\nWrapper Control to describe all parameters and controls used for wrapping..\n\nWrapperImproveQualityParams\n\nWrapperImproveQualityParams defines parameters to improve wrapper part.\n\nWrapperImproveResult\n\nResults structure associated to improve quality.\n\nWrapperPatchFlowRegionsParams\n\nWrapperPatchFlowRegionsParams to define parameters for patch flow regions operation.\n\nWrapperPatchFlowRegionsResult\n\nResult structure associated with patch holes operation.\n\nWriteSizeFieldParams\n\nParameters used to write size field file.\n\nZoneMeshResult\n\nResults containing zone-wise mesh information.\n\nZoneType\n\nZoneType decides the type of zone.\n\nEnums\n\n\n\n\n\nCellQualityMeasure\n\nThe type of cell quality measures to check cell quality metrics.\n\nErrorCode\n\nError codes associated with the failure of PyPrimeMesh operation.\n\nFaceQualityMeasure\n\nThe type of face quality measures to check face quality metrics.\n\nShellBLOffsetType\n\nType of offset method during ShellBL generation.\n\nSizeFieldType\n\nThe type of sizing field to be used to fetch element size at given location.\n\nSolverType\n\nType of solver.\n\nSurfaceFeatureType\n\nType of face edges considered as features.\n\nWarningCode\n\nWarning codes associated with the PyPrimeMesh operation.\n\nFunctions\n\n\n\n\n\nlocal_model\n\nGet local model\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/index.html#description","title":"The ansys.meshing.prime library > Description","text":"Description\n\nPyPrimeMesh Client library"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteResults.html#filewriteresults","title":"FileWriteResults","text":"FileWriteResults\n\n\n\nclass ansys.meshing.prime.FileWriteResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults of file write operation.\n\nParameters\n\nmodel (Model) – Model to create a FileWriteResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if file write operation is unsuccessful.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the file write operation.\n\njson_data (dict, optional) – JSON dictionary to create a FileWriteResults object with provided parameters.\n\nExamples\n\n>>> file_write_results = prime.FileWriteResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteResults.html#overview","title":"FileWriteResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if file write operation is unsuccessful.\n\nwarning_codes\n\nWarning codes associated with the file write operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FileWriteResults object.\n\nset_default\n\nSet the default values of the FileWriteResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteResults.html#import-detail","title":"FileWriteResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteResults.html#property-detail","title":"FileWriteResults > Property detail","text":"Property detail\n\n\n\nproperty FileWriteResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if file write operation is unsuccessful.\n\n\n\nproperty FileWriteResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the file write operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteResults.html#method-detail","title":"FileWriteResults > Method detail","text":"Method detail\n\n\n\nFileWriteResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileWriteResults.__str__() -> str\n\n\n\n\n\nstatic FileWriteResults.print_default()\n\nPrint the default values of FileWriteResults object.\n\nExamples\n\n>>> FileWriteResults.print_default()\n\n\n\nstatic FileWriteResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the FileWriteResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if file write operation is unsuccessful.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the file write operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedspline/TrimmedSpline.html#trimmedspline","title":"TrimmedSpline","text":"TrimmedSpline\n\n\n\nclass ansys.meshing.prime.autogen.trimmedspline.TrimmedSpline(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nHandles creation and meshing of trimmed spline.\n\nParameters\n\nmodel (Model) – Server model to create TrimmedSpline object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedspline/TrimmedSpline.html#overview","title":"TrimmedSpline > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_tet_mesh_on_trimmed_solid_spline\n\nCreates tetrahedral mesh on trimmed solid spline.\n\ncreate_trimmed_uniform_solid_spline_by_brep_mapping\n\nCreates uniform solid spline and maps the CAD geometry in its parametric space.\n\nrefine_tet_mesh\n\nRefines tetrahedral mesh.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for TrimmedSpline.\n\n__exit__\n\nExit context for TrimmedSpline.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedspline/TrimmedSpline.html#import-detail","title":"TrimmedSpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedspline/TrimmedSpline.html#method-detail","title":"TrimmedSpline > Method detail","text":"Method detail\n\n\n\nTrimmedSpline.__enter__()\n\nEnter context for TrimmedSpline.\n\n\n\nTrimmedSpline.__exit__(type, value, traceback)\n\nExit context for TrimmedSpline.\n\n\n\nTrimmedSpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTrimmedSpline.create_tet_mesh_on_trimmed_solid_spline(part_id: int, mesh_params: ansys.meshing.prime.params.primestructs.TetMeshSplineParams) -> ansys.meshing.prime.params.primestructs.TrimmedSplineResults\n\nCreates tetrahedral mesh on trimmed solid spline.\n\nParameters\n\npart_id (int) – Part on which the tetrahedral meshing is performed.\n\nmesh_params (TetMeshSplineParams) – Parameters to configure the meshing.\n\nReturns\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.CreateTetMeshOnTrimmedSolidSpline(part_id, mesh_params)\n\n\n\nTrimmedSpline.create_trimmed_uniform_solid_spline_by_brep_mapping(part_id: int, spline_params: ansys.meshing.prime.params.primestructs.UniformSolidSplineCreationParams) -> ansys.meshing.prime.params.primestructs.TrimmedSplineResults\n\nCreates uniform solid spline and maps the CAD geometry in its parametric space.\n\nParameters\n\npart_id (int) – Part on which the spline is to be created.\n\nspline_params (UniformSolidSplineCreationParams) – Parameters used to create the spline.\n\nReturns\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.CreateTrimmedUniformSolidSplineByBrepMapping(part_id, spline_params)\n\n\n\nTrimmedSpline.refine_tet_mesh(part_id: int, refine_params: ansys.meshing.prime.params.primestructs.RefineTetMeshParams) -> ansys.meshing.prime.params.primestructs.TrimmedSplineResults\n\nRefines tetrahedral mesh.\n\nParameters\n\npart_id (int) – Part on which mesh refinement is performed.\n\nrefine_params (RefineTetMeshParams) – Parameters to configure mesh refinement.\n\nReturns\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.RefineTetMesh(part_id, refine_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryResults.html#projectongeometryresults","title":"ProjectOnGeometryResults","text":"ProjectOnGeometryResults\n\n\n\nclass ansys.meshing.prime.ProjectOnGeometryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, success: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with projection of topofaces nodes on its geometry.\n\nParameters\n\nmodel (Model) – Model to create a ProjectOnGeometryResults object with default parameters.\n\nsuccess (bool, optional) – Defines the operation was successful or not.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning code associated with operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ProjectOnGeometryResults object with provided parameters.\n\nExamples\n\n>>> project_on_geometry_results = prime.ProjectOnGeometryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryResults.html#overview","title":"ProjectOnGeometryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nsuccess\n\nDefines the operation was successful or not.\n\nwarning_codes\n\nWarning code associated with operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ProjectOnGeometryResults object.\n\nset_default\n\nSet the default values of the ProjectOnGeometryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryResults.html#import-detail","title":"ProjectOnGeometryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryResults.html#property-detail","title":"ProjectOnGeometryResults > Property detail","text":"Property detail\n\n\n\nproperty ProjectOnGeometryResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ProjectOnGeometryResults.success: bool\n\nDefines the operation was successful or not.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ProjectOnGeometryResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning code associated with operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryResults.html#method-detail","title":"ProjectOnGeometryResults > Method detail","text":"Method detail\n\n\n\nProjectOnGeometryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nProjectOnGeometryResults.__str__() -> str\n\n\n\n\n\nstatic ProjectOnGeometryResults.print_default()\n\nPrint the default values of ProjectOnGeometryResults object.\n\nExamples\n\n>>> ProjectOnGeometryResults.print_default()\n\n\n\nstatic ProjectOnGeometryResults.set_default(success: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ProjectOnGeometryResults object.\n\nParameters\n\nsuccess (bool, optional) – Defines the operation was successful or not.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning code associated with operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreCellElementType.html#hexcorecellelementtype","title":"HexCoreCellElementType","text":"HexCoreCellElementType\n\n\n\nclass ansys.meshing.prime.HexCoreCellElementType\n\nCell element type of hex-shaped cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreCellElementType.html#overview","title":"HexCoreCellElementType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLHEX\n\nGenerates hex type cells.\n\nALLPOLY\n\nGenerates poly type cells.\n\nHEXANDPOLY\n\nGenerates a mix of poly type and hex type cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreCellElementType.html#import-detail","title":"HexCoreCellElementType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreCellElementType.html#attribute-detail","title":"HexCoreCellElementType > Attribute detail","text":"Attribute detail\n\n\n\nHexCoreCellElementType.ALLHEX = 1\n\nGenerates hex type cells.\n\n\n\nHexCoreCellElementType.ALLPOLY = 0\n\nGenerates poly type cells.\n\n\n\nHexCoreCellElementType.HEXANDPOLY = 2\n\nGenerates a mix of poly type and hex type cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/boundaryfittednurbs/index.html#the-boundaryfittednurbspy-module","title":"The boundaryfittednurbs.py module","text":"The boundaryfittednurbs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/boundaryfittednurbs/index.html#summary","title":"The boundaryfittednurbs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBoundaryFittedSpline\n\nBoundaryFittedSpline helps you to create splines for structured hex-mesh model.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/boundaryfittednurbs/index.html#description","title":"The boundaryfittednurbs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSweepMeshParams.html#multizonesweepmeshparams","title":"MultiZoneSweepMeshParams","text":"MultiZoneSweepMeshParams\n\n\n\nclass ansys.meshing.prime.MultiZoneSweepMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, source_and_target_scope: ScopeDefinition = None, sweep_mesh_size: float = None, n_divisions: int = None, thin_sweep: bool = None, sweep_type: SweepType = None, json_data: dict = None, **kwargs)\n\nDefines MultiZone thin sweep mesh control parameters.\n\nParameters\n\nmodel (Model) – Model to create a MultiZoneSweepMeshParams object with default parameters.\n\nsource_and_target_scope (ScopeDefinition, optional) – Source and target faces used to determine the direction of sweep in MultiZone meshing.This is a beta parameter. The behavior and name may change in the future.\n\nsweep_mesh_size (float, optional) – Sweep mesh size used to determine the mesh size and number of divisions in the sweep direction.This is a beta parameter. The behavior and name may change in the future.\n\nn_divisions (int, optional) – Number of divisions in the sweep direction.This is a beta parameter. The behavior and name may change in the future.\n\nthin_sweep (bool, optional) – Thin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.This is a beta parameter. The behavior and name may change in the future.\n\nsweep_type (SweepType, optional) – Option to specify the sweep mesh decomposition type.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a MultiZoneSweepMeshParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_sweep_mesh_params = prime.MultiZoneSweepMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSweepMeshParams.html#overview","title":"MultiZoneSweepMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nn_divisions\n\nNumber of divisions in the sweep direction.\n\nsource_and_target_scope\n\nSource and target faces used to determine the direction of sweep in MultiZone meshing.\n\nsweep_mesh_size\n\nSweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nsweep_type\n\nOption to specify the sweep mesh decomposition type.\n\nthin_sweep\n\nThin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MultiZoneSweepMeshParams object.\n\nset_default\n\nSet the default values of the MultiZoneSweepMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSweepMeshParams.html#import-detail","title":"MultiZoneSweepMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSweepMeshParams.html#property-detail","title":"MultiZoneSweepMeshParams > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneSweepMeshParams.n_divisions: int\n\nNumber of divisions in the sweep direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSweepMeshParams.source_and_target_scope: ScopeDefinition\n\nSource and target faces used to determine the direction of sweep in MultiZone meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSweepMeshParams.sweep_mesh_size: float\n\nSweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSweepMeshParams.sweep_type: SweepType\n\nOption to specify the sweep mesh decomposition type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSweepMeshParams.thin_sweep: bool\n\nThin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSweepMeshParams.html#method-detail","title":"MultiZoneSweepMeshParams > Method detail","text":"Method detail\n\n\n\nMultiZoneSweepMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneSweepMeshParams.__str__() -> str\n\n\n\n\n\nstatic MultiZoneSweepMeshParams.print_default()\n\nPrint the default values of MultiZoneSweepMeshParams object.\n\nExamples\n\n>>> MultiZoneSweepMeshParams.print_default()\n\n\n\nstatic MultiZoneSweepMeshParams.set_default(source_and_target_scope: ScopeDefinition = None, sweep_mesh_size: float = None, n_divisions: int = None, thin_sweep: bool = None, sweep_type: SweepType = None)\n\nSet the default values of the MultiZoneSweepMeshParams object.\n\nParameters\n\nsource_and_target_scope (ScopeDefinition, optional) – Source and target faces used to determine the direction of sweep in MultiZone meshing.\n\nsweep_mesh_size (float, optional) – Sweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nn_divisions (int, optional) – Number of divisions in the sweep direction.\n\nthin_sweep (bool, optional) – Thin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nsweep_type (SweepType, optional) – Option to specify the sweep mesh decomposition type."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsResults.html#mergezoneletsresults","title":"MergeZoneletsResults","text":"MergeZoneletsResults\n\n\n\nclass ansys.meshing.prime.MergeZoneletsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merged_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with merge zonelets.\n\nParameters\n\nmodel (Model) – Model to create a MergeZoneletsResults object with default parameters.\n\nmerged_zonelets (Iterable[int], optional) – Ids of zonelets to which input zonelets are merged.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a MergeZoneletsResults object with provided parameters.\n\nExamples\n\n>>> merge_zonelets_results = prime.MergeZoneletsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsResults.html#overview","title":"MergeZoneletsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nmerged_zonelets\n\nIds of zonelets to which input zonelets are merged.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeZoneletsResults object.\n\nset_default\n\nSet the default values of the MergeZoneletsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsResults.html#import-detail","title":"MergeZoneletsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsResults.html#property-detail","title":"MergeZoneletsResults > Property detail","text":"Property detail\n\n\n\nproperty MergeZoneletsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty MergeZoneletsResults.merged_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of zonelets to which input zonelets are merged."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeZoneletsResults.html#method-detail","title":"MergeZoneletsResults > Method detail","text":"Method detail\n\n\n\nMergeZoneletsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeZoneletsResults.__str__() -> str\n\n\n\n\n\nstatic MergeZoneletsResults.print_default()\n\nPrint the default values of MergeZoneletsResults object.\n\nExamples\n\n>>> MergeZoneletsResults.print_default()\n\n\n\nstatic MergeZoneletsResults.set_default(merged_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the MergeZoneletsResults object.\n\nParameters\n\nmerged_zonelets (Iterable[int], optional) – Ids of zonelets to which input zonelets are merged.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadParams.html#importcadparams","title":"ImportCadParams","text":"ImportCadParams\n\n\n\nclass ansys.meshing.prime.ImportCadParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, ansys_release: str = None, cad_reader_route: CadReaderRoute = None, part_creation_type: PartCreationType = None, geometry_transfer: bool = None, length_unit: LengthUnit = None, refacet: bool = None, cad_refaceting_params: CadRefacetingParams = None, stitch_tolerance: float = None, cad_update_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, validate_shared_topology: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control CAD import settings.\n\nParameters\n\nmodel (Model) – Model to create a ImportCadParams object with default parameters.\n\nappend (bool, optional) – Append imported CAD into existing model when true.\n\nansys_release (str, optional) – Configures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\ncad_reader_route (CadReaderRoute, optional) – Specify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\npart_creation_type (PartCreationType, optional) – Create a part per CAD Model, Assembly, Part, Body.\n\ngeometry_transfer (bool, optional) – Option to enable transfer of geometry data (NURBS).\n\nlength_unit (LengthUnit, optional) – Specify length unit for import.\n\nrefacet (bool, optional) – Refine or coarsen the CAD faceting based on refaceting parameters when true.\n\ncad_refaceting_params (CadRefacetingParams, optional) – Specify refaceting parameters.\n\nstitch_tolerance (float, optional) – Stitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\ncad_update_parameters (Dict[str, Union[str, int, float, bool]], optional) – Specify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\nvalidate_shared_topology (bool, optional) – Specify whether to validate the shared topology information.\n\njson_data (dict, optional) – JSON dictionary to create a ImportCadParams object with provided parameters.\n\nExamples\n\n>>> import_cad_params = prime.ImportCadParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadParams.html#overview","title":"ImportCadParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nansys_release\n\nConfigures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\nappend\n\nAppend imported CAD into existing model when true.\n\ncad_reader_route\n\nSpecify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\ncad_refaceting_params\n\nSpecify refaceting parameters.\n\ncad_update_parameters\n\nSpecify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\ngeometry_transfer\n\nOption to enable transfer of geometry data (NURBS).\n\nlength_unit\n\nSpecify length unit for import.\n\npart_creation_type\n\nCreate a part per CAD Model, Assembly, Part, Body.\n\nrefacet\n\nRefine or coarsen the CAD faceting based on refaceting parameters when true.\n\nstitch_tolerance\n\nStitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\nvalidate_shared_topology\n\nSpecify whether to validate the shared topology information.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportCadParams object.\n\nset_default\n\nSet the default values of the ImportCadParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadParams.html#import-detail","title":"ImportCadParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadParams.html#property-detail","title":"ImportCadParams > Property detail","text":"Property detail\n\n\n\nproperty ImportCadParams.ansys_release: str\n\nConfigures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\n\n\nproperty ImportCadParams.append: bool\n\nAppend imported CAD into existing model when true.\n\n\n\nproperty ImportCadParams.cad_reader_route: CadReaderRoute\n\nSpecify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\n\n\nproperty ImportCadParams.cad_refaceting_params: CadRefacetingParams\n\nSpecify refaceting parameters.\n\n\n\nproperty ImportCadParams.cad_update_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]]\n\nSpecify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\n\n\nproperty ImportCadParams.geometry_transfer: bool\n\nOption to enable transfer of geometry data (NURBS).\n\n\n\nproperty ImportCadParams.length_unit: LengthUnit\n\nSpecify length unit for import.\n\n\n\nproperty ImportCadParams.part_creation_type: PartCreationType\n\nCreate a part per CAD Model, Assembly, Part, Body.\n\n\n\nproperty ImportCadParams.refacet: bool\n\nRefine or coarsen the CAD faceting based on refaceting parameters when true.\n\n\n\nproperty ImportCadParams.stitch_tolerance: float\n\nStitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\n\n\nproperty ImportCadParams.validate_shared_topology: bool\n\nSpecify whether to validate the shared topology information."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportCadParams.html#method-detail","title":"ImportCadParams > Method detail","text":"Method detail\n\n\n\nImportCadParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportCadParams.__str__() -> str\n\n\n\n\n\nstatic ImportCadParams.print_default()\n\nPrint the default values of ImportCadParams object.\n\nExamples\n\n>>> ImportCadParams.print_default()\n\n\n\nstatic ImportCadParams.set_default(append: bool = None, ansys_release: str = None, cad_reader_route: CadReaderRoute = None, part_creation_type: PartCreationType = None, geometry_transfer: bool = None, length_unit: LengthUnit = None, refacet: bool = None, cad_refaceting_params: CadRefacetingParams = None, stitch_tolerance: float = None, cad_update_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, validate_shared_topology: bool = None)\n\nSet the default values of the ImportCadParams object.\n\nParameters\n\nappend (bool, optional) – Append imported CAD into existing model when true.\n\nansys_release (str, optional) – Configures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\ncad_reader_route (CadReaderRoute, optional) – Specify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\npart_creation_type (PartCreationType, optional) – Create a part per CAD Model, Assembly, Part, Body.\n\ngeometry_transfer (bool, optional) – Option to enable transfer of geometry data (NURBS).\n\nlength_unit (LengthUnit, optional) – Specify length unit for import.\n\nrefacet (bool, optional) – Refine or coarsen the CAD faceting based on refaceting parameters when true.\n\ncad_refaceting_params (CadRefacetingParams, optional) – Specify refaceting parameters.\n\nstitch_tolerance (float, optional) – Stitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\ncad_update_parameters (Dict[str, Union[str, int, float, bool]], optional) – Specify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\nvalidate_shared_topology (bool, optional) – Specify whether to validate the shared topology information."},{"objectID":"Home","href":"api/ansys/meshing/prime/FlowDirection.html#flowdirection","title":"FlowDirection","text":"FlowDirection\n\n\n\nclass ansys.meshing.prime.FlowDirection\n\nFlow or wake direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/FlowDirection.html#overview","title":"FlowDirection > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nX\n\nFlow or wake inflation in the X direction for BOI creation.\n\nY\n\nFlow or wake inflation in the Y direction for BOI creation.\n\nZ\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/FlowDirection.html#import-detail","title":"FlowDirection > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FlowDirection.html#attribute-detail","title":"FlowDirection > Attribute detail","text":"Attribute detail\n\n\n\nFlowDirection.X = 1\n\nFlow or wake inflation in the X direction for BOI creation.\n\n\n\nFlowDirection.Y = 2\n\nFlow or wake inflation in the Y direction for BOI creation.\n\n\n\nFlowDirection.Z = 3\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerResults.html#vtcomposerresults","title":"VTComposerResults","text":"VTComposerResults\n\n\n\nclass ansys.meshing.prime.autogen.vtcomposerstructs.VTComposerResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult struct associated to VTComposer operations.\n\nParameters\n\nmodel (Model) – Model to create a VTComposerResults object with default parameters.\n\nerror_code (ErrorCode, optional) – This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a VTComposerResults object with provided parameters.\n\nExamples\n\n>>> v_tcomposer_results = prime.VTComposerResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerResults.html#overview","title":"VTComposerResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VTComposerResults object.\n\nset_default\n\nSet the default values of the VTComposerResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerResults.html#import-detail","title":"VTComposerResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerResults.html#property-detail","title":"VTComposerResults > Property detail","text":"Property detail\n\n\n\nproperty VTComposerResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposerstructs/VTComposerResults.html#method-detail","title":"VTComposerResults > Method detail","text":"Method detail\n\n\n\nVTComposerResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVTComposerResults.__str__() -> str\n\n\n\n\n\nstatic VTComposerResults.print_default()\n\nPrint the default values of VTComposerResults object.\n\nExamples\n\n>>> VTComposerResults.print_default()\n\n\n\nstatic VTComposerResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the VTComposerResults object.\n\nParameters\n\nerror_code (ErrorCode, optional)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_pipe_tee_scdoc.html#ansysmeshingprimeexamplesdownload_pipe_tee_scdoc","title":"ansys.meshing.prime.examples.download_pipe_tee_scdoc","text":"ansys.meshing.prime.examples.download_pipe_tee_scdoc\n\n\n\nansys.meshing.prime.examples.download_pipe_tee_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the pipe tee example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesParams.html#mergeboundarynodesparams","title":"MergeBoundaryNodesParams","text":"MergeBoundaryNodesParams\n\n\n\nclass ansys.meshing.prime.MergeBoundaryNodesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tolerance: float = None, use_absolute_tolerance: bool = None, merge_node_type: MergeNodeType = None, json_data: dict = None, **kwargs)\n\nParameters used for the merge boundary nodes operation.\n\nParameters\n\nmodel (Model) – Model to create a MergeBoundaryNodesParams object with default parameters.\n\ntolerance (float, optional) – Distance tolerance for merging boundary nodes.\n\nuse_absolute_tolerance (bool, optional) – Indicates whether the tolerance provided is an absolute value or not.\n\nmerge_node_type (MergeNodeType, optional) – Type of nodes to be merged.\n\njson_data (dict, optional) – JSON dictionary to create a MergeBoundaryNodesParams object with provided parameters.\n\nExamples\n\n>>> merge_boundary_nodes_params = prime.MergeBoundaryNodesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesParams.html#overview","title":"MergeBoundaryNodesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmerge_node_type\n\nType of nodes to be merged.\n\ntolerance\n\nDistance tolerance for merging boundary nodes.\n\nuse_absolute_tolerance\n\nIndicates whether the tolerance provided is an absolute value or not.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeBoundaryNodesParams object.\n\nset_default\n\nSet the default values of the MergeBoundaryNodesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesParams.html#import-detail","title":"MergeBoundaryNodesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesParams.html#property-detail","title":"MergeBoundaryNodesParams > Property detail","text":"Property detail\n\n\n\nproperty MergeBoundaryNodesParams.merge_node_type: MergeNodeType\n\nType of nodes to be merged.\n\n\n\nproperty MergeBoundaryNodesParams.tolerance: float\n\nDistance tolerance for merging boundary nodes.\n\n\n\nproperty MergeBoundaryNodesParams.use_absolute_tolerance: bool\n\nIndicates whether the tolerance provided is an absolute value or not."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesParams.html#method-detail","title":"MergeBoundaryNodesParams > Method detail","text":"Method detail\n\n\n\nMergeBoundaryNodesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeBoundaryNodesParams.__str__() -> str\n\n\n\n\n\nstatic MergeBoundaryNodesParams.print_default()\n\nPrint the default values of MergeBoundaryNodesParams object.\n\nExamples\n\n>>> MergeBoundaryNodesParams.print_default()\n\n\n\nstatic MergeBoundaryNodesParams.set_default(tolerance: float = None, use_absolute_tolerance: bool = None, merge_node_type: MergeNodeType = None)\n\nSet the default values of the MergeBoundaryNodesParams object.\n\nParameters\n\ntolerance (float, optional) – Distance tolerance for merging boundary nodes.\n\nuse_absolute_tolerance (bool, optional) – Indicates whether the tolerance provided is an absolute value or not.\n\nmerge_node_type (MergeNodeType, optional) – Type of nodes to be merged."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseOption.html#fuseoption","title":"FuseOption","text":"FuseOption\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.FuseOption\n\nType to specify treatment of surfaces for fusing."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseOption.html#overview","title":"FuseOption > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\nNo action to be taken for surfaces being fused.\n\nTRIMONESIDE\n\nDelete faces to be fused on one side and merge nodes to be fused at middle locations (works only within a single part).\n\nTRIMTWOSIDES\n\nDelete faces to be fused on both sides and merge nodes to be fused at middle locations (works only within a single part)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseOption.html#import-detail","title":"FuseOption > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseOption.html#attribute-detail","title":"FuseOption > Attribute detail","text":"Attribute detail\n\n\n\nFuseOption.NONE = 0\n\nNo action to be taken for surfaces being fused.\n\n\n\nFuseOption.TRIMONESIDE = 3\n\nDelete faces to be fused on one side and merge nodes to be fused at middle locations (works only within a single part).\n\n\n\nFuseOption.TRIMTWOSIDES = 4\n\nDelete faces to be fused on both sides and merge nodes to be fused at middle locations (works only within a single part)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseParams.html#fuseparams","title":"FuseParams","text":"FuseParams\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.FuseParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, use_absolute_tolerance: bool = None, gap_tolerance: float = None, side_tolerance: float = None, check_interior: bool = None, fuse_option: FuseOption = None, check_orientation: bool = None, dump_mesh: bool = None, local_remesh: bool = None, n_layers: int = None, separate: bool = None, angle: float = None, fuse_edges_only: bool = None, json_data: dict = None, **kwargs)\n\nParameters for fuse operation.\n\nParameters\n\nmodel (Model) – Model to create a FuseParams object with default parameters.\n\nuse_absolute_tolerance (bool, optional) – Option to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.This is a beta parameter. The behavior and name may change in the future.\n\ngap_tolerance (float, optional) – Gap tolerance between faces to be fused. The default value is 0.05.This is a beta parameter. The behavior and name may change in the future.\n\nside_tolerance (float, optional) – Side tolerance for fusing to the side edges.This is a beta parameter. The behavior and name may change in the future.\n\ncheck_interior (bool, optional) – Option to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.This is a beta parameter. The behavior and name may change in the future.\n\nfuse_option (FuseOption, optional) – Option for treatment of fused surfaces. The default value is None.This is a beta parameter. The behavior and name may change in the future.\n\ncheck_orientation (bool, optional) – Option to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.This is a beta parameter. The behavior and name may change in the future.\n\ndump_mesh (bool, optional) – Option to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.This is a beta parameter. The behavior and name may change in the future.\n\nlocal_remesh (bool, optional) – Option to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.This is a beta parameter. The behavior and name may change in the future.\n\nn_layers (int, optional) – Face layers around region to be fused. The default value is 2.This is a beta parameter. The behavior and name may change in the future.\n\nseparate (bool, optional) – Option to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.This is a beta parameter. The behavior and name may change in the future.\n\nangle (float, optional) – Faces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.This is a beta parameter. The behavior and name may change in the future.\n\nfuse_edges_only (bool, optional) – Option to fuse edges. The default value is false. When fuse edges only is true, only edges are fused.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a FuseParams object with provided parameters.\n\nExamples\n\n>>> fuse_params = prime.FuseParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseParams.html#overview","title":"FuseParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nangle\n\nFaces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\ncheck_interior\n\nOption to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\ncheck_orientation\n\nOption to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\ndump_mesh\n\nOption to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nfuse_edges_only\n\nOption to fuse edges. The default value is false. When fuse edges only is true, only edges are fused.\n\nfuse_option\n\nOption for treatment of fused surfaces. The default value is None.\n\ngap_tolerance\n\nGap tolerance between faces to be fused. The default value is 0.05.\n\nlocal_remesh\n\nOption to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nn_layers\n\nFace layers around region to be fused. The default value is 2.\n\nseparate\n\nOption to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nside_tolerance\n\nSide tolerance for fusing to the side edges.\n\nuse_absolute_tolerance\n\nOption to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FuseParams object.\n\nset_default\n\nSet the default values of the FuseParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseParams.html#import-detail","title":"FuseParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseParams.html#property-detail","title":"FuseParams > Property detail","text":"Property detail\n\n\n\nproperty FuseParams.angle: float\n\nFaces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.check_interior: bool\n\nOption to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.check_orientation: bool\n\nOption to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.dump_mesh: bool\n\nOption to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.fuse_edges_only: bool\n\nOption to fuse edges. The default value is false. When fuse edges only is true, only edges are fused.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.fuse_option: FuseOption\n\nOption for treatment of fused surfaces. The default value is None.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.gap_tolerance: float\n\nGap tolerance between faces to be fused. The default value is 0.05.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.local_remesh: bool\n\nOption to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.n_layers: int\n\nFace layers around region to be fused. The default value is 2.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.separate: bool\n\nOption to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.side_tolerance: float\n\nSide tolerance for fusing to the side edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseParams.use_absolute_tolerance: bool\n\nOption to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseParams.html#method-detail","title":"FuseParams > Method detail","text":"Method detail\n\n\n\nFuseParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFuseParams.__str__() -> str\n\n\n\n\n\nstatic FuseParams.print_default()\n\nPrint the default values of FuseParams object.\n\nExamples\n\n>>> FuseParams.print_default()\n\n\n\nstatic FuseParams.set_default(use_absolute_tolerance: bool = None, gap_tolerance: float = None, side_tolerance: float = None, check_interior: bool = None, fuse_option: FuseOption = None, check_orientation: bool = None, dump_mesh: bool = None, local_remesh: bool = None, n_layers: int = None, separate: bool = None, angle: float = None, fuse_edges_only: bool = None)\n\nSet the default values of the FuseParams object.\n\nParameters\n\nuse_absolute_tolerance (bool, optional) – Option to use absolute tolerance value. The default value is false. When use absolute tolerance is true, gap tolerance and side tolerance provided are absolute values.\n\ngap_tolerance (float, optional) – Gap tolerance between faces to be fused. The default value is 0.05.\n\nside_tolerance (float, optional) – Side tolerance for fusing to the side edges.\n\ncheck_interior (bool, optional) – Option to check the interior nodes. The default value is false. When check interior is true, checks all nodes including boundary edge nodes and nodes inside the faces.\n\nfuse_option (FuseOption, optional) – Option for treatment of fused surfaces. The default value is None.\n\ncheck_orientation (bool, optional) – Option to check the face normal orientation during fuse operation. The default value is true. When check orientation is true, face normal orientation is checked during fuse operation.\n\ndump_mesh (bool, optional) – Option to save mesh for debugging. The default value is false. When dump mesh is true, mesh is saved for debugging.\n\nlocal_remesh (bool, optional) – Option to remesh the fused region. The default value is true. When local remesh is true, local remeshing of fuse region is performed.\n\nn_layers (int, optional) – Face layers around region to be fused. The default value is 2.\n\nseparate (bool, optional) – Option to separate fused regions. The default value is false. When separate is true, the fuse regions are separated into different zonelets.\n\nangle (float, optional) – Faces zonelets with angle less than the provided value are considered for fuse operation. Default value is 45 degrees.\n\nfuse_edges_only (bool, optional) – Option to fuse edges. The default value is false. When fuse edges only is true, only edges are fused."},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectFacesParams.html#connectfacesparams","title":"ConnectFacesParams","text":"ConnectFacesParams\n\n\n\nclass ansys.meshing.prime.ConnectFacesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, constant_mesh_size: float = None, absolute_tolerance: float = None, json_data: dict = None, **kwargs)\n\nParameters for connect faces operation.\n\nParameters\n\nmodel (Model) – Model to create a ConnectFacesParams object with default parameters.\n\nconstant_mesh_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\nabsolute_tolerance (float, optional) – Absolute distance tolerance between edges or faces for connect faces operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ConnectFacesParams object with provided parameters.\n\nExamples\n\n>>> connect_faces_params = prime.ConnectFacesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectFacesParams.html#overview","title":"ConnectFacesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsolute_tolerance\n\nAbsolute distance tolerance between edges or faces for connect faces operation.\n\nconstant_mesh_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ConnectFacesParams object.\n\nset_default\n\nSet the default values of the ConnectFacesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectFacesParams.html#import-detail","title":"ConnectFacesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectFacesParams.html#property-detail","title":"ConnectFacesParams > Property detail","text":"Property detail\n\n\n\nproperty ConnectFacesParams.absolute_tolerance: float\n\nAbsolute distance tolerance between edges or faces for connect faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ConnectFacesParams.constant_mesh_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectFacesParams.html#method-detail","title":"ConnectFacesParams > Method detail","text":"Method detail\n\n\n\nConnectFacesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nConnectFacesParams.__str__() -> str\n\n\n\n\n\nstatic ConnectFacesParams.print_default()\n\nPrint the default values of ConnectFacesParams object.\n\nExamples\n\n>>> ConnectFacesParams.print_default()\n\n\n\nstatic ConnectFacesParams.set_default(constant_mesh_size: float = None, absolute_tolerance: float = None)\n\nSet the default values of the ConnectFacesParams object.\n\nParameters\n\nconstant_mesh_size (float, optional) – Constant size used for surface meshing.\n\nabsolute_tolerance (float, optional) – Absolute distance tolerance between edges or faces for connect faces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesher/AutoQuadMesher.html#autoquadmesher","title":"AutoQuadMesher","text":"AutoQuadMesher\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesher.AutoQuadMesher(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nGenerate full quad mesh.\n\nParameters\n\nmodel (Model) – Server model to create AutoQuadMesher object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesher/AutoQuadMesher.html#overview","title":"AutoQuadMesher > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncheck_topology\n\nCheck topology for inconsistencies with the given parameters.\n\ndefeature_topology\n\nDefeature topology with given parameters.\n\ndetect_and_treat_features\n\nDetect features in topology and treat them with given parameters.\n\noptimize_quad_mesh\n\nOptimize quad faces with given parameters.\n\nrepair_topology\n\nRepair topology with given parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for AutoQuadMesher.\n\n__exit__\n\nExit context for AutoQuadMesher.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesher/AutoQuadMesher.html#import-detail","title":"AutoQuadMesher > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesher/AutoQuadMesher.html#method-detail","title":"AutoQuadMesher > Method detail","text":"Method detail\n\n\n\nAutoQuadMesher.__enter__()\n\nEnter context for AutoQuadMesher.\n\n\n\nAutoQuadMesher.__exit__(type, value, traceback)\n\nExit context for AutoQuadMesher.\n\n\n\nAutoQuadMesher.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoQuadMesher.check_topology(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CheckTopologyParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nCheck topology for inconsistencies with the given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (CheckTopologyParams) – Parameters of check topology.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.check_topology(part_id, topo_face_ids, params);\n\n\n\nAutoQuadMesher.defeature_topology(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DefeatureTopologyParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nDefeature topology with given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (DefeatureTopologyParams) – Parameters of defeature topology.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.defeature_topology(part_id, topo_face_ids, params);\n\n\n\nAutoQuadMesher.detect_and_treat_features(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DetectAndTreatFeaturesParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nDetect features in topology and treat them with given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (DetectAndTreatFeaturesParams) – Parameters of detect and treat features.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.detect_and_treat_features(part_id, topo_face_ids, params);\n\n\n\nAutoQuadMesher.optimize_quad_mesh(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.OptimizeQuadMeshParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nOptimize quad faces with given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (OptimizeQuadMeshParams) – Parameters of optimize quad mesh.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.optimize_quad_mesh(part_id, topo_face_ids, params);\n\n\n\nAutoQuadMesher.repair_topology(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.RepairTopologyParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nRepair topology with given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (RepairTopologyParams) – Parameters of repair topology.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.repair_topology(part_id, topo_face_ids, params);"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsResults.html#subtractzoneletsresults","title":"SubtractZoneletsResults","text":"SubtractZoneletsResults\n\n\n\nclass ansys.meshing.prime.SubtractZoneletsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with subtracting zonelets.\n\nParameters\n\nmodel (Model) – Model to create a SubtractZoneletsResults object with default parameters.\n\nprocessing_time (float, optional) – Processing time for subtract operation.\n\nerror_code (ErrorCode, optional) – Error Code associated with subtract operation.\n\njson_data (dict, optional) – JSON dictionary to create a SubtractZoneletsResults object with provided parameters.\n\nExamples\n\n>>> subtract_zonelets_results = prime.SubtractZoneletsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsResults.html#overview","title":"SubtractZoneletsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with subtract operation.\n\nprocessing_time\n\nProcessing time for subtract operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SubtractZoneletsResults object.\n\nset_default\n\nSet the default values of the SubtractZoneletsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsResults.html#import-detail","title":"SubtractZoneletsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsResults.html#property-detail","title":"SubtractZoneletsResults > Property detail","text":"Property detail\n\n\n\nproperty SubtractZoneletsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with subtract operation.\n\n\n\nproperty SubtractZoneletsResults.processing_time: float\n\nProcessing time for subtract operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractZoneletsResults.html#method-detail","title":"SubtractZoneletsResults > Method detail","text":"Method detail\n\n\n\nSubtractZoneletsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSubtractZoneletsResults.__str__() -> str\n\n\n\n\n\nstatic SubtractZoneletsResults.print_default()\n\nPrint the default values of SubtractZoneletsResults object.\n\nExamples\n\n>>> SubtractZoneletsResults.print_default()\n\n\n\nstatic SubtractZoneletsResults.set_default(processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SubtractZoneletsResults object.\n\nParameters\n\nprocessing_time (float, optional) – Processing time for subtract operation.\n\nerror_code (ErrorCode, optional) – Error Code associated with subtract operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationResults.html#checkfacedeviationresults","title":"CheckFaceDeviationResults","text":"CheckFaceDeviationResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.CheckFaceDeviationResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_deviated: int = None, maximum_deviation: float = None, json_data: dict = None, **kwargs)\n\nResult structure associated with the check face deviation operations.\n\nParameters\n\nmodel (Model) – Model to create a CheckFaceDeviationResults object with default parameters.\n\nn_deviated (int, optional) – Number of faces with deviation.\n\nmaximum_deviation (float, optional) – Maximum deviation found.\n\njson_data (dict, optional) – JSON dictionary to create a CheckFaceDeviationResults object with provided parameters.\n\nExamples\n\n>>> check_face_deviation_results = prime.CheckFaceDeviationResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationResults.html#overview","title":"CheckFaceDeviationResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmaximum_deviation\n\nMaximum deviation found.\n\nn_deviated\n\nNumber of faces with deviation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckFaceDeviationResults object.\n\nset_default\n\nSet the default values of the CheckFaceDeviationResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationResults.html#import-detail","title":"CheckFaceDeviationResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationResults.html#property-detail","title":"CheckFaceDeviationResults > Property detail","text":"Property detail\n\n\n\nproperty CheckFaceDeviationResults.maximum_deviation: float\n\nMaximum deviation found.\n\n\n\nproperty CheckFaceDeviationResults.n_deviated: int\n\nNumber of faces with deviation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationResults.html#method-detail","title":"CheckFaceDeviationResults > Method detail","text":"Method detail\n\n\n\nCheckFaceDeviationResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckFaceDeviationResults.__str__() -> str\n\n\n\n\n\nstatic CheckFaceDeviationResults.print_default()\n\nPrint the default values of CheckFaceDeviationResults object.\n\nExamples\n\n>>> CheckFaceDeviationResults.print_default()\n\n\n\nstatic CheckFaceDeviationResults.set_default(n_deviated: int = None, maximum_deviation: float = None)\n\nSet the default values of the CheckFaceDeviationResults object.\n\nParameters\n\nn_deviated (int, optional) – Number of faces with deviation.\n\nmaximum_deviation (float, optional) – Maximum deviation found."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsParams.html#mergepartsparams","title":"MergePartsParams","text":"MergePartsParams\n\n\n\nclass ansys.meshing.prime.MergePartsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merged_part_suggested_name: str = None, json_data: dict = None, **kwargs)\n\nParameters to merge parts.\n\nParameters\n\nmodel (Model) – Model to create a MergePartsParams object with default parameters.\n\nmerged_part_suggested_name (str, optional) – Suggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given.\n\njson_data (dict, optional) – JSON dictionary to create a MergePartsParams object with provided parameters.\n\nExamples\n\n>>> merge_parts_params = prime.MergePartsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsParams.html#overview","title":"MergePartsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmerged_part_suggested_name\n\nSuggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergePartsParams object.\n\nset_default\n\nSet the default values of the MergePartsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsParams.html#import-detail","title":"MergePartsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsParams.html#property-detail","title":"MergePartsParams > Property detail","text":"Property detail\n\n\n\nproperty MergePartsParams.merged_part_suggested_name: str\n\nSuggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsParams.html#method-detail","title":"MergePartsParams > Method detail","text":"Method detail\n\n\n\nMergePartsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergePartsParams.__str__() -> str\n\n\n\n\n\nstatic MergePartsParams.print_default()\n\nPrint the default values of MergePartsParams object.\n\nExamples\n\n>>> MergePartsParams.print_default()\n\n\n\nstatic MergePartsParams.set_default(merged_part_suggested_name: str = None)\n\nSet the default values of the MergePartsParams object.\n\nParameters\n\nmerged_part_suggested_name (str, optional) – Suggested name to be set on merged part. First in alphabetical order of given part names will be used, when empty name is given."},{"objectID":"Home","href":"api/ansys/meshing/prime/WarningCode.html#warningcode","title":"WarningCode","text":"WarningCode\n\n\n\nclass ansys.meshing.prime.WarningCode\n\nWarning codes associated with the PyPrimeMesh operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/WarningCode.html#overview","title":"WarningCode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALIGN_OPERATIONINTERRUPTED\n\nAlign operation interrupted.\n\nDUPLICATEINPUT\n\nDuplicate items in input.\n\nENTITIESNOTBELONGTOANYZONE\n\nEntities do not belong to any zone.\n\nEXPORTMAPDLANALYSISSETTINGSFAILED\n\nExport MAPDL analysis settings failed.\n\nEXTERNALOPENFACEZONELETSFOUND\n\nExternal open face zonelets found when computing volumes.\n\nEXTERNALOPENTOPOFACESFOUND\n\nExternal open topofaces found when computing topovolumes.\n\nFACEZONELETSWITHOUTVOLUMES\n\nFace zonelets have no volume associated to them.\n\nFAILEDTOUPDATEVOLUMES\n\nVolumes are not updated after performing the operation. Compute the volumes again.\n\nFUSEOVERLAPREMOVALINCOMPLETE\n\nSelf intersections found. Use Fuse operation to remove it.\n\nIGA_NOGEOMZONELETFORSPLINEFITTING\n\nInvalid input for IGA.\n\nIMPORTOFNODALCOMPONENTASLABELSKIPPED\n\nImport of nodal component as label skipped.\n\nINVALIDENTITIESNOTADDEDTOZONE\n\nEntities with invalid id or type not added to zone.\n\nINVALIDSIZECONTROLSCOPE\n\nInvalid size control type provided.\n\nJOINEDZONELETSFROMMULTIPLEVOLUMES\n\nJoined zonelets from more than two volumes. The volumes are not auto updated on the zonelets.\n\nLOCALSURFERNOFACEREGISTERED\n\nNo face registered with the given register id.\n\nMATERIALPOINTWITHSAMENAMEEXISTS\n\nMaterial point with the same name exists. Overriding with unique name.\n\nMAXOFPRISMCONTROLSMINASPECTRATIO\n\nMaximum value of min aspect ratio from selected prism controls is considered for all selected prism controls.\n\nMESHHASINVALIDSHAPE\n\nMesh has invalid shape.\n\nMESHHASLEFTHANDEDNESSFACES\n\nMesh has invalid shape.\n\nMESHHASNONPOSITIVEAREAS\n\nMesh has non positive areas.\n\nMESHHASNONPOSITIVEVOLUMES\n\nMesh has non positive volumes.\n\nMULTIZONEMESHER_DEFEATUREDTOPOEDGES\n\nTopoEdges that got defeatured in the MultiZone mesh.\n\nMULTIZONEMESHER_DEFEATUREDTOPOFACES\n\nTopoFaces that got defeatured in the MultiZone mesh.\n\nMULTIZONEMESHER_SURFACESCOPEVOLUMESCOPEINCONSISTENCY\n\nMultiZone warning codes\n\nNOCADGEOMETRYFOUND\n\nCAD geometry not found for some or all topo entities. Skipped projection for those topo entities.\n\nNOCADGEOMETRYPROJECTONFACETS\n\nCAD geometry not found for some or all topo entities. Projected on facets for those topo entites.\n\nNOHOLESFOUNDONPLANE\n\nProvides warning when no closed holes are found in the given face zonelets at given plane.\n\nNOVOLUMESCOMPUTED\n\nThere are no volumes found.\n\nNOVOLUMESENCLOSINGMATERIALPOINT\n\nNo computed volumes enclosing material point.\n\nNOWARNING\n\nNo warnings.\n\nNUMERICPARTNAMERENAMETOALPHANUMERIC\n\nNumeric part name renamed to alphanumeric name.\n\nOVERRIDEBOISIZINGPARAMS\n\nOverriding BOI sizing parameters.\n\nOVERRIDECURVATURESIZINGPARAMS\n\nOverriding curvature sizing parameters.\n\nOVERRIDEEDGESCOPEENTITY\n\nOverride edge scope entity.\n\nOVERRIDEGROWTHRATEPARAM\n\nOverriding growth rate parameter.\n\nOVERRIDEHARDSIZINGPARAMS\n\nOverriding hard sizing parameters.\n\nOVERRIDEMESHEDSIZINGPARAMS\n\nOverriding meshed sizing parameters.\n\nOVERRIDEPROXIMITYSIZINGPARAMS\n\nOverriding proximity sizing parameters.\n\nOVERRIDESOFTSIZINGPARAMS\n\nOverriding soft sizing parameters.\n\nOVERRIDESOISIZINGPARAMS\n\nOverriding SOI sizing parameters.\n\nOVERRIDESUGGESTEDNAME\n\nOverride name by suggested name.\n\nOVERRIDESURFACESCOPEENTITY\n\nOverride surface scope entity.\n\nOVERRIDEVOLUMESCOPEENTITY\n\nOverride volume scope entity.\n\nPARTNOTINPARTSCOPE\n\nSelected part is not in the part scope of the periodic control.\n\nREMOVEOVERLAPWITHINTERSECT\n\nSelf intersections found. Use Intersect operation to remove it.\n\nSHELLBLGAPFACTORMINLIMIT\n\nAdjusted ShellBL gap factor to 0.001. As 0.001 is minimum value supported.\n\nSURFERDEGENERATEFACE\n\nDegenerate input.\n\nSURFERLAYEREDQUADFAILED\n\nLayered quad failed with surfer.\n\nSURFER_QUADCLEANUP_MULTITHREADINGNOTSUPPORTED\n\nMultithreading is not supported for quad cleanup operation.\n\nUNKNOWN\n\nUnknown warning.\n\nUNPROCESSEDKEYWORDSINABAQUSFILE\n\nUnprocessed Abaqus keywords have been found.\n\nVT_CANNOTMERGENODES\n\nCannot merge nodes during VT operation.\n\nVT_REMESHFACEFAILED\n\nFailed to remesh face(s) during VT operation.\n\nVT_SKIPPEDENTITIESINDIFFERENTZONES\n\nInput contains entities in different zones which have been skipped.\n\nVT_SKIPPEDFEATUREENTITIES\n\nInput contains feature entities which have been skipped.\n\nVT_SKIPPEDFREEEDGES\n\nInput contains free edges which have been skipped.\n\nVT_SKIPPEDNONMANIFOLDEDGES\n\nInput contains non-manifold edges which have been skipped.\n\nVT_SKIPPEDPROTECTEDENTITIES\n\nInput contains protected entities which have been skipped.\n\nWRAPPER_PATCHFLOWREGIONS_NOHOLESFOUND\n\nNo holes detected to patch.\n\nWRAPPER_SIZECONTROLNOTDEFINED\n\nNo size controls provided for wrapper.\n\nWRAPPER_SIZECONTROLNOTSUPPORTED\n\nSize control is not supported in wrapper.\n\nWRAPPER_SMALLERCONTACTPREVENTIONSIZE\n\nContact prevention size is smaller than base size.\n\nWRAPPER_SMALLERSIZEATFEAURES\n\nSize at features is smaller than base size.\n\nWRITINGCONTACTPAIRSSKIPPED\n\nWriting of contact pairs skipped.\n\nWRITINGTIESSKIPPED\n\nWriting of ties skipped.\n\nWRITINGZONELETOFLABELTOELEMENTCOMPONENTSKIPPED\n\nExport of label as element component skipped."},{"objectID":"Home","href":"api/ansys/meshing/prime/WarningCode.html#import-detail","title":"WarningCode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WarningCode.html#attribute-detail","title":"WarningCode > Attribute detail","text":"Attribute detail\n\n\n\nWarningCode.ALIGN_OPERATIONINTERRUPTED = 1900\n\nAlign operation interrupted.\n\n\n\nWarningCode.DUPLICATEINPUT = 8001\n\nDuplicate items in input.\n\n\n\nWarningCode.ENTITIESNOTBELONGTOANYZONE = 6201\n\nEntities do not belong to any zone.\n\n\n\nWarningCode.EXPORTMAPDLANALYSISSETTINGSFAILED = 11101\n\nExport MAPDL analysis settings failed.\n\n\n\nWarningCode.EXTERNALOPENFACEZONELETSFOUND = 5601\n\nExternal open face zonelets found when computing volumes.\n\n\n\nWarningCode.EXTERNALOPENTOPOFACESFOUND = 5603\n\nExternal open topofaces found when computing topovolumes.\n\n\n\nWarningCode.FACEZONELETSWITHOUTVOLUMES = 5604\n\nFace zonelets have no volume associated to them.\n\n\n\nWarningCode.FAILEDTOUPDATEVOLUMES = 5606\n\nVolumes are not updated after performing the operation. Compute the volumes again.\n\n\n\nWarningCode.FUSEOVERLAPREMOVALINCOMPLETE = 4500\n\nSelf intersections found. Use Fuse operation to remove it.\n\n\n\nWarningCode.IGA_NOGEOMZONELETFORSPLINEFITTING = 5001\n\nInvalid input for IGA.\n\n\n\nWarningCode.IMPORTOFNODALCOMPONENTASLABELSKIPPED = 11201\n\nImport of nodal component as label skipped.\n\n\n\nWarningCode.INVALIDENTITIESNOTADDEDTOZONE = 6202\n\nEntities with invalid id or type not added to zone.\n\n\n\nWarningCode.INVALIDSIZECONTROLSCOPE = 208\n\nInvalid size control type provided.\n\n\n\nWarningCode.JOINEDZONELETSFROMMULTIPLEVOLUMES = 5605\n\nJoined zonelets from more than two volumes. The volumes are not auto updated on the zonelets.\n\n\n\nWarningCode.LOCALSURFERNOFACEREGISTERED = 7001\n\nNo face registered with the given register id.\n\n\n\nWarningCode.MATERIALPOINTWITHSAMENAMEEXISTS = 6005\n\nMaterial point with the same name exists. Overriding with unique name.\n\n\n\nWarningCode.MAXOFPRISMCONTROLSMINASPECTRATIO = 403\n\nMaximum value of min aspect ratio from selected prism controls is considered for all selected prism controls.\n\n\n\nWarningCode.MESHHASINVALIDSHAPE = 7106\n\nMesh has invalid shape.\n\n\n\nWarningCode.MESHHASLEFTHANDEDNESSFACES = 7107\n\nMesh has invalid shape.\n\n\n\nWarningCode.MESHHASNONPOSITIVEAREAS = 7105\n\nMesh has non positive areas.\n\n\n\nWarningCode.MESHHASNONPOSITIVEVOLUMES = 7104\n\nMesh has non positive volumes.\n\n\n\nWarningCode.MULTIZONEMESHER_DEFEATUREDTOPOEDGES = 110002\n\nTopoEdges that got defeatured in the MultiZone mesh.\n\n\n\nWarningCode.MULTIZONEMESHER_DEFEATUREDTOPOFACES = 110003\n\nTopoFaces that got defeatured in the MultiZone mesh.\n\n\n\nWarningCode.MULTIZONEMESHER_SURFACESCOPEVOLUMESCOPEINCONSISTENCY = 110001\n\nMultiZone warning codes\n\n\n\nWarningCode.NOCADGEOMETRYFOUND = 7500\n\nCAD geometry not found for some or all topo entities. Skipped projection for those topo entities.\n\n\n\nWarningCode.NOCADGEOMETRYPROJECTONFACETS = 7501\n\nCAD geometry not found for some or all topo entities. Projected on facets for those topo entites.\n\n\n\nWarningCode.NOHOLESFOUNDONPLANE = 5501\n\nProvides warning when no closed holes are found in the given face zonelets at given plane.\n\n\n\nWarningCode.NOVOLUMESCOMPUTED = 5600\n\nThere are no volumes found.\n\n\n\nWarningCode.NOVOLUMESENCLOSINGMATERIALPOINT = 5602\n\nNo computed volumes enclosing material point.\n\n\n\nWarningCode.NOWARNING = 0\n\nNo warnings.\n\n\n\nWarningCode.NUMERICPARTNAMERENAMETOALPHANUMERIC = 701\n\nNumeric part name renamed to alphanumeric name.\n\n\n\nWarningCode.OVERRIDEBOISIZINGPARAMS = 205\n\nOverriding BOI sizing parameters.\n\n\n\nWarningCode.OVERRIDECURVATURESIZINGPARAMS = 201\n\nOverriding curvature sizing parameters.\n\n\n\nWarningCode.OVERRIDEEDGESCOPEENTITY = 404\n\nOverride edge scope entity.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.OVERRIDEGROWTHRATEPARAM = 209\n\nOverriding growth rate parameter.\n\n\n\nWarningCode.OVERRIDEHARDSIZINGPARAMS = 203\n\nOverriding hard sizing parameters.\n\n\n\nWarningCode.OVERRIDEMESHEDSIZINGPARAMS = 206\n\nOverriding meshed sizing parameters.\n\n\n\nWarningCode.OVERRIDEPROXIMITYSIZINGPARAMS = 204\n\nOverriding proximity sizing parameters.\n\n\n\nWarningCode.OVERRIDESOFTSIZINGPARAMS = 202\n\nOverriding soft sizing parameters.\n\n\n\nWarningCode.OVERRIDESOISIZINGPARAMS = 207\n\nOverriding SOI sizing parameters.\n\n\n\nWarningCode.OVERRIDESUGGESTEDNAME = 301\n\nOverride name by suggested name.\n\n\n\nWarningCode.OVERRIDESURFACESCOPEENTITY = 401\n\nOverride surface scope entity.\n\n\n\nWarningCode.OVERRIDEVOLUMESCOPEENTITY = 402\n\nOverride volume scope entity.\n\n\n\nWarningCode.PARTNOTINPARTSCOPE = 601\n\nSelected part is not in the part scope of the periodic control.\n\n\n\nWarningCode.REMOVEOVERLAPWITHINTERSECT = 4501\n\nSelf intersections found. Use Intersect operation to remove it.\n\n\n\nWarningCode.SHELLBLGAPFACTORMINLIMIT = 405\n\nAdjusted ShellBL gap factor to 0.001. As 0.001 is minimum value supported.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.SURFERDEGENERATEFACE = 1801\n\nDegenerate input.\n\n\n\nWarningCode.SURFERLAYEREDQUADFAILED = 1800\n\nLayered quad failed with surfer.\n\n\n\nWarningCode.SURFER_QUADCLEANUP_MULTITHREADINGNOTSUPPORTED = 102\n\nMultithreading is not supported for quad cleanup operation.\n\n\n\nWarningCode.UNKNOWN = 1\n\nUnknown warning.\n\n\n\nWarningCode.UNPROCESSEDKEYWORDSINABAQUSFILE = 11001\n\nUnprocessed Abaqus keywords have been found.\n\n\n\nWarningCode.VT_CANNOTMERGENODES = 100006\n\nCannot merge nodes during VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_REMESHFACEFAILED = 100007\n\nFailed to remesh face(s) during VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDENTITIESINDIFFERENTZONES = 100005\n\nInput contains entities in different zones which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDFEATUREENTITIES = 100002\n\nInput contains feature entities which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDFREEEDGES = 100003\n\nInput contains free edges which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDNONMANIFOLDEDGES = 100004\n\nInput contains non-manifold edges which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDPROTECTEDENTITIES = 100001\n\nInput contains protected entities which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.WRAPPER_PATCHFLOWREGIONS_NOHOLESFOUND = 6006\n\nNo holes detected to patch.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.WRAPPER_SIZECONTROLNOTDEFINED = 6001\n\nNo size controls provided for wrapper.\n\n\n\nWarningCode.WRAPPER_SIZECONTROLNOTSUPPORTED = 6002\n\nSize control is not supported in wrapper.\n\n\n\nWarningCode.WRAPPER_SMALLERCONTACTPREVENTIONSIZE = 6004\n\nContact prevention size is smaller than base size.\n\n\n\nWarningCode.WRAPPER_SMALLERSIZEATFEAURES = 6003\n\nSize at features is smaller than base size.\n\n\n\nWarningCode.WRITINGCONTACTPAIRSSKIPPED = 11102\n\nWriting of contact pairs skipped.\n\n\n\nWarningCode.WRITINGTIESSKIPPED = 11103\n\nWriting of ties skipped.\n\n\n\nWarningCode.WRITINGZONELETOFLABELTOELEMENTCOMPONENTSKIPPED = 11104\n\nExport of label as element component skipped."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsParams.html#searchbyfoldsparams","title":"SearchByFoldsParams","text":"SearchByFoldsParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchByFoldsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, critical_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters to control fold detection.\n\nParameters\n\nmodel (Model) – Model to create a SearchByFoldsParams object with default parameters.\n\ncritical_angle (float, optional) – Threshold angle for fold detection.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByFoldsParams object with provided parameters.\n\nExamples\n\n>>> search_by_folds_params = prime.SearchByFoldsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsParams.html#overview","title":"SearchByFoldsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncritical_angle\n\nThreshold angle for fold detection.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByFoldsParams object.\n\nset_default\n\nSet the default values of the SearchByFoldsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsParams.html#import-detail","title":"SearchByFoldsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsParams.html#property-detail","title":"SearchByFoldsParams > Property detail","text":"Property detail\n\n\n\nproperty SearchByFoldsParams.critical_angle: float\n\nThreshold angle for fold detection."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsParams.html#method-detail","title":"SearchByFoldsParams > Method detail","text":"Method detail\n\n\n\nSearchByFoldsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByFoldsParams.__str__() -> str\n\n\n\n\n\nstatic SearchByFoldsParams.print_default()\n\nPrint the default values of SearchByFoldsParams object.\n\nExamples\n\n>>> SearchByFoldsParams.print_default()\n\n\n\nstatic SearchByFoldsParams.set_default(critical_angle: float = None)\n\nSet the default values of the SearchByFoldsParams object.\n\nParameters\n\ncritical_angle (float, optional) – Threshold angle for fold detection."},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSplineResults.html#trimmedsplineresults","title":"TrimmedSplineResults","text":"TrimmedSplineResults\n\n\n\nclass ansys.meshing.prime.TrimmedSplineResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults of IGA operations.\n\nParameters\n\nmodel (Model) – Model to create a TrimmedSplineResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if IGA operation is unsuccessful.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a TrimmedSplineResults object with provided parameters.\n\nExamples\n\n>>> trimmed_spline_results = prime.TrimmedSplineResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSplineResults.html#overview","title":"TrimmedSplineResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if IGA operation is unsuccessful.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TrimmedSplineResults object.\n\nset_default\n\nSet the default values of the TrimmedSplineResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSplineResults.html#import-detail","title":"TrimmedSplineResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSplineResults.html#property-detail","title":"TrimmedSplineResults > Property detail","text":"Property detail\n\n\n\nproperty TrimmedSplineResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if IGA operation is unsuccessful.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSplineResults.html#method-detail","title":"TrimmedSplineResults > Method detail","text":"Method detail\n\n\n\nTrimmedSplineResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTrimmedSplineResults.__str__() -> str\n\n\n\n\n\nstatic TrimmedSplineResults.print_default()\n\nPrint the default values of TrimmedSplineResults object.\n\nExamples\n\n>>> TrimmedSplineResults.print_default()\n\n\n\nstatic TrimmedSplineResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the TrimmedSplineResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if IGA operation is unsuccessful."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoUtilities.html#topoutilities","title":"TopoUtilities","text":"TopoUtilities\n\n\n\nclass ansys.meshing.prime.TopoUtilities(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, part_id: int)\n\nPerforms various general topology utility algorithms. For example, fill hole.\n\nParameters\n\nmodel (Model) – Server model to create TopoUtilities object.\n\npart_id (int) – Id of the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoUtilities.html#overview","title":"TopoUtilities > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfill_hole\n\nFill holes bounded by given topoedges.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for TopoUtilities.\n\n__exit__\n\nExit context for TopoUtilities.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoUtilities.html#import-detail","title":"TopoUtilities > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoUtilities.html#method-detail","title":"TopoUtilities > Method detail","text":"Method detail\n\n\n\nTopoUtilities.__enter__()\n\nEnter context for TopoUtilities.\n\n\n\nTopoUtilities.__exit__(type, value, traceback)\n\nExit context for TopoUtilities.\n\n\n\nTopoUtilities.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTopoUtilities.fill_hole(topo_edges: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.TopoFillHoleParams) -> ansys.meshing.prime.params.primestructs.TopoFillHoleResult\n\nFill holes bounded by given topoedges.\n\nParameters\n\ntopo_edges (Iterable[int]) – Ids of topoedges to be used to find holes.\n\nparams (TopoFillHoleParams) – Parameters to fill holes.\n\nReturns\n\nReturn the TopoFillHoleResult.\n\nReturn type\n\nTopoFillHoleResult\n\nExamples\n\n>>> results = topo_utils.fill_hole(topo_edges, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformParams.html#transformparams","title":"TransformParams","text":"TransformParams\n\n\n\nclass ansys.meshing.prime.autogen.transformstructs.TransformParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, transformation_matrix: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nParameters to transform given entities.\n\nParameters\n\nmodel (Model) – Model to create a TransformParams object with default parameters.\n\ntransformation_matrix (Iterable[float], optional) – Transformation matrix(4x4) to be used to transform.\n\njson_data (dict, optional) – JSON dictionary to create a TransformParams object with provided parameters.\n\nExamples\n\n>>> transform_params = prime.TransformParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformParams.html#overview","title":"TransformParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntransformation_matrix\n\nTransformation matrix(4x4) to be used to transform.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TransformParams object.\n\nset_default\n\nSet the default values of the TransformParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformParams.html#import-detail","title":"TransformParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformParams.html#property-detail","title":"TransformParams > Property detail","text":"Property detail\n\n\n\nproperty TransformParams.transformation_matrix: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nTransformation matrix(4x4) to be used to transform."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformParams.html#method-detail","title":"TransformParams > Method detail","text":"Method detail\n\n\n\nTransformParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTransformParams.__str__() -> str\n\n\n\n\n\nstatic TransformParams.print_default()\n\nPrint the default values of TransformParams object.\n\nExamples\n\n>>> TransformParams.print_default()\n\n\n\nstatic TransformParams.set_default(transformation_matrix: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the TransformParams object.\n\nParameters\n\ntransformation_matrix (Iterable[float], optional) – Transformation matrix(4x4) to be used to transform."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/DeleteResults.html#deleteresults","title":"DeleteResults","text":"DeleteResults\n\n\n\nclass ansys.meshing.prime.autogen.commonstructs.DeleteResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the deletion of items.\n\nParameters\n\nmodel (Model) – Model to create a DeleteResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteResults object with provided parameters.\n\nExamples\n\n>>> delete_results = prime.DeleteResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/DeleteResults.html#overview","title":"DeleteResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteResults object.\n\nset_default\n\nSet the default values of the DeleteResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/DeleteResults.html#import-detail","title":"DeleteResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/DeleteResults.html#property-detail","title":"DeleteResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/DeleteResults.html#method-detail","title":"DeleteResults > Method detail","text":"Method detail\n\n\n\nDeleteResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteResults.__str__() -> str\n\n\n\n\n\nstatic DeleteResults.print_default()\n\nPrint the default values of DeleteResults object.\n\nExamples\n\n>>> DeleteResults.print_default()\n\n\n\nstatic DeleteResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#mesh-diagnostics","title":"Mesh diagnostics","text":"Mesh diagnostics"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#mesh-statistics-and-quality","title":"Mesh diagnostics > Mesh statistics and quality","text":"Mesh statistics and quality\n\nYou can use a set of quality metrics to measure the mesh quality. The SurfaceSearch\nand VolumeSearch classes allow you to verify surface and volume mesh quality, respectively."},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#connectivity-checks","title":"Mesh diagnostics > Connectivity checks","text":"Connectivity checks\n\nSurface diagnostics are important prior to generating a volume mesh. You can get a surface diagnostic summary by using\nthe SurfaceSearch.get_surface_diagnostic_summary()\nmethod. The SurfaceDiagnosticSummaryParams class provides for\ndiagnosing surface connectivity for the given scope and controls:\n\nDuplicate faces\n\nFree face edges\n\nMulti face edges\n\nSelf intersections\n\nThis code determines if a wrap surface is closed:\n\nThis code prints the results of the surface diagnostic summary:"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#face-metrics","title":"Mesh diagnostics > Face metrics","text":"Face metrics\n\nThe FaceQualityMeasure class offers various types\nof measures to verify face quality metrics.\n\nThe SKEWNESS metric ranges between 0 (ideal) and 1 (worst).\n\nThe ASPECTRATIO metric is greater than 1. The smaller\nthe aspect ratio, the higher the quality of an element.\n\nThe ELEMENTQUALITY metric ranges between\n0 (worst) and 1 (ideal).\n\nThis code gets face quality measures:\n\nThis code prints face quality summary results:"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#cell-metrics","title":"Mesh diagnostics > Cell metrics","text":"Cell metrics\n\nThe CellQualityMeasure class offers various types\nof measures to verify cell quality metrics.\n\nThe SKEWNESS metric ranges between\n0 (ideal) and 1 (worst).\n\nThe ASPECTRATIO metric\nis greater than 1. The smaller the aspect ratio, the higher the quality of an element.\n\nThe FLUENTASPECTRATIO metric\nis greater than 1. The smaller the Fluent aspect ratio, the higher the quality of an element.\n\nThe ELEMENTQUALITY metric ranges\nbetween 0 (worst) and 1 (ideal).\n\nThis code gets cell quality measures:\n\nThis code prints cell quality summary results:"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#mesh-counts","title":"Mesh diagnostics > Mesh counts","text":"Mesh counts\n\nThe Part.get_summary() method provides the\nnumber of nodes, faces, or cells after meshing with the given parameters.\n\nThis code gets mesh counts:\n\nThis code prints mesh counts:"},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#mesh-improvement","title":"Mesh diagnostics > Mesh improvement","text":"Mesh improvement\n\nWhen the metrics show that the mesh quality is low, the VolumeMeshTool\nclass provides various volume mesh improvement algorithms for improving the mesh."},{"objectID":"Home","href":"user_guide/mesh_diagnostics.html#auto-node-move","title":"Mesh diagnostics > Auto node move","text":"Auto node move\n\nYou can improve volume mesh by auto node move using the\nVolumeMeshTool.improve_by_auto_node_move()\nmethod with given parameters. In addition, you can verify the mesh using the\nVolumeMeshTool.check_mesh() method.\n\nThis code improves and checks the volume mesh:\n\nThis code prints the results of checking mesh operation:"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneEdgeBiasingParams.html#multizoneedgebiasingparams","title":"MultiZoneEdgeBiasingParams","text":"MultiZoneEdgeBiasingParams\n\n\n\nclass ansys.meshing.prime.MultiZoneEdgeBiasingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, face_scope: ScopeDefinition = None, edge_scope: ScopeDefinition = None, bias_factor: float = None, n_divisions: int = None, json_data: dict = None, **kwargs)\n\nDefines MultiZone edge biasing control parameters.\n\nParameters\n\nmodel (Model) – Model to create a MultiZoneEdgeBiasingParams object with default parameters.\n\nface_scope (ScopeDefinition, optional) – Reference face zonelets to control mesh clustering orientation.This is a beta parameter. The behavior and name may change in the future.\n\nedge_scope (ScopeDefinition, optional) – Edge zonelets to control the expanse of edge biasing.This is a beta parameter. The behavior and name may change in the future.\n\nbias_factor (float, optional) – Bias factor used for MultiZone edge biasing control.This is a beta parameter. The behavior and name may change in the future.\n\nn_divisions (int, optional) – Number of divisions on the section where edge biasing is done.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a MultiZoneEdgeBiasingParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_edge_biasing_params = prime.MultiZoneEdgeBiasingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneEdgeBiasingParams.html#overview","title":"MultiZoneEdgeBiasingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbias_factor\n\nBias factor used for MultiZone edge biasing control.\n\nedge_scope\n\nEdge zonelets to control the expanse of edge biasing.\n\nface_scope\n\nReference face zonelets to control mesh clustering orientation.\n\nn_divisions\n\nNumber of divisions on the section where edge biasing is done.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MultiZoneEdgeBiasingParams object.\n\nset_default\n\nSet the default values of the MultiZoneEdgeBiasingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneEdgeBiasingParams.html#import-detail","title":"MultiZoneEdgeBiasingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneEdgeBiasingParams.html#property-detail","title":"MultiZoneEdgeBiasingParams > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneEdgeBiasingParams.bias_factor: float\n\nBias factor used for MultiZone edge biasing control.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneEdgeBiasingParams.edge_scope: ScopeDefinition\n\nEdge zonelets to control the expanse of edge biasing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneEdgeBiasingParams.face_scope: ScopeDefinition\n\nReference face zonelets to control mesh clustering orientation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneEdgeBiasingParams.n_divisions: int\n\nNumber of divisions on the section where edge biasing is done.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneEdgeBiasingParams.html#method-detail","title":"MultiZoneEdgeBiasingParams > Method detail","text":"Method detail\n\n\n\nMultiZoneEdgeBiasingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneEdgeBiasingParams.__str__() -> str\n\n\n\n\n\nstatic MultiZoneEdgeBiasingParams.print_default()\n\nPrint the default values of MultiZoneEdgeBiasingParams object.\n\nExamples\n\n>>> MultiZoneEdgeBiasingParams.print_default()\n\n\n\nstatic MultiZoneEdgeBiasingParams.set_default(face_scope: ScopeDefinition = None, edge_scope: ScopeDefinition = None, bias_factor: float = None, n_divisions: int = None)\n\nSet the default values of the MultiZoneEdgeBiasingParams object.\n\nParameters\n\nface_scope (ScopeDefinition, optional) – Reference face zonelets to control mesh clustering orientation.\n\nedge_scope (ScopeDefinition, optional) – Edge zonelets to control the expanse of edge biasing.\n\nbias_factor (float, optional) – Bias factor used for MultiZone edge biasing control.\n\nn_divisions (int, optional) – Number of divisions on the section where edge biasing is done."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/MorphBCParams.html#morphbcparams","title":"MorphBCParams","text":"MorphBCParams\n\n\n\nclass ansys.meshing.prime.autogen.morpherbcsstructs.MorphBCParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, morph_region_method: BCsVolumetricModality = None, morphable_layers: int = None, morph_region_box_extension: float = None, json_data: dict = None, **kwargs)\n\nMorphBCParams contains the input parameters for calculating the boundary conditions for a morphing problem.\n\nParameters\n\nmodel (Model) – Model to create a MorphBCParams object with default parameters.\n\nmorph_region_method (BCsVolumetricModality, optional) – Indicate options to identify morphable regions in the input volumetric mesh.\n\nmorphable_layers (int, optional) – Number of layers around defined boundary.\n\nmorph_region_box_extension (float, optional) – Percentage extension for the volumetric box.\n\njson_data (dict, optional) – JSON dictionary to create a MorphBCParams object with provided parameters.\n\nExamples\n\n>>> morph_bcparams = prime.MorphBCParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/MorphBCParams.html#overview","title":"MorphBCParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmorph_region_box_extension\n\nPercentage extension for the volumetric box.\n\nmorph_region_method\n\nIndicate options to identify morphable regions in the input volumetric mesh.\n\nmorphable_layers\n\nNumber of layers around defined boundary.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MorphBCParams object.\n\nset_default\n\nSet the default values of the MorphBCParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/MorphBCParams.html#import-detail","title":"MorphBCParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/MorphBCParams.html#property-detail","title":"MorphBCParams > Property detail","text":"Property detail\n\n\n\nproperty MorphBCParams.morph_region_box_extension: float\n\nPercentage extension for the volumetric box.\n\n\n\nproperty MorphBCParams.morph_region_method: BCsVolumetricModality\n\nIndicate options to identify morphable regions in the input volumetric mesh.\n\n\n\nproperty MorphBCParams.morphable_layers: int\n\nNumber of layers around defined boundary."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/MorphBCParams.html#method-detail","title":"MorphBCParams > Method detail","text":"Method detail\n\n\n\nMorphBCParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMorphBCParams.__str__() -> str\n\n\n\n\n\nstatic MorphBCParams.print_default()\n\nPrint the default values of MorphBCParams object.\n\nExamples\n\n>>> MorphBCParams.print_default()\n\n\n\nstatic MorphBCParams.set_default(morph_region_method: BCsVolumetricModality = None, morphable_layers: int = None, morph_region_box_extension: float = None)\n\nSet the default values of the MorphBCParams object.\n\nParameters\n\nmorph_region_method (BCsVolumetricModality, optional) – Indicate options to identify morphable regions in the input volumetric mesh.\n\nmorphable_layers (int, optional) – Number of layers around defined boundary.\n\nmorph_region_box_extension (float, optional) – Percentage extension for the volumetric box."},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteParams.html#filewriteparams","title":"FileWriteParams","text":"FileWriteParams\n\n\n\nclass ansys.meshing.prime.FileWriteParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to write a file.\n\nParameters\n\nmodel (Model) – Model to create a FileWriteParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a FileWriteParams object with provided parameters.\n\nExamples\n\n>>> file_write_params = prime.FileWriteParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteParams.html#overview","title":"FileWriteParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FileWriteParams object.\n\nset_default\n\nSet the default values of the FileWriteParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteParams.html#import-detail","title":"FileWriteParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileWriteParams.html#method-detail","title":"FileWriteParams > Method detail","text":"Method detail\n\n\n\nFileWriteParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileWriteParams.__str__() -> str\n\n\n\n\n\nstatic FileWriteParams.print_default()\n\nPrint the default values of FileWriteParams object.\n\nExamples\n\n>>> FileWriteParams.print_default()\n\n\n\nstatic FileWriteParams.set_default()\n\nSet the default values of the FileWriteParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadParams.html#filereadparams","title":"FileReadParams","text":"FileReadParams\n\n\n\nclass ansys.meshing.prime.FileReadParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, json_data: dict = None, **kwargs)\n\nParameters to read file.\n\nParameters\n\nmodel (Model) – Model to create a FileReadParams object with default parameters.\n\nappend (bool, optional) – Option to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\njson_data (dict, optional) – JSON dictionary to create a FileReadParams object with provided parameters.\n\nExamples\n\n>>> file_read_params = prime.FileReadParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadParams.html#overview","title":"FileReadParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FileReadParams object.\n\nset_default\n\nSet the default values of the FileReadParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadParams.html#import-detail","title":"FileReadParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadParams.html#property-detail","title":"FileReadParams > Property detail","text":"Property detail\n\n\n\nproperty FileReadParams.append: bool\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/FileReadParams.html#method-detail","title":"FileReadParams > Method detail","text":"Method detail\n\n\n\nFileReadParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileReadParams.__str__() -> str\n\n\n\n\n\nstatic FileReadParams.print_default()\n\nPrint the default values of FileReadParams object.\n\nExamples\n\n>>> FileReadParams.print_default()\n\n\n\nstatic FileReadParams.set_default(append: bool = None)\n\nSet the default values of the FileReadParams object.\n\nParameters\n\nappend (bool, optional) – Option to append imported mesh to existing mesh instead of resetting model to imported mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSurf.html#igaunstructuredsplinesurf","title":"IGAUnstructuredSplineSurf","text":"IGAUnstructuredSplineSurf\n\n\n\nclass ansys.meshing.prime.IGAUnstructuredSplineSurf(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id: int = None, degree: int = None, spline_refinement_level: int = None, control_points: ansys.meshing.prime.params.primestructs.Iterable[float] = None, spline_points: ansys.meshing.prime.params.primestructs.Iterable[float] = None, bad_spline_points_indices: ansys.meshing.prime.params.primestructs.Iterable[int] = None, deviation_array: ansys.meshing.prime.params.primestructs.Iterable[float] = None, invalid_jacobian_elements_count: int = None, average_mesh_size: float = None, elements_count: int = None, shell_thickness: float = None, json_data: dict = None, **kwargs)\n\nInformation of unstructured spline surface.\n\nParameters\n\nmodel (Model) – Model to create a IGAUnstructuredSplineSurf object with default parameters.\n\nid (int, optional) – Id of the unstructured spline surface.\n\ndegree (int, optional) – Degree of the spline surface.This is a beta parameter. The behavior and name may change in the future.\n\nspline_refinement_level (int, optional) – Refinement level for rendering of spline points.\n\ncontrol_points (Iterable[float], optional) – Coordinates of the control points of the spline.\n\nspline_points (Iterable[float], optional) – Coordinates of the spline points.\n\nbad_spline_points_indices (Iterable[int], optional) – Node indices in the spline points list which has negative jacobian value.\n\ndeviation_array (Iterable[float], optional) – Deviation value from the spline point to the model geometry.\n\ninvalid_jacobian_elements_count (int, optional) – Count of elements with negative jacobian.\n\naverage_mesh_size (float, optional) – Reference length to compute deviation.\n\nelements_count (int, optional) – Count of shell elements.\n\nshell_thickness (float, optional) – Thickness of shell.\n\njson_data (dict, optional) – JSON dictionary to create a IGAUnstructuredSplineSurf object with provided parameters.\n\nExamples\n\n>>> iga_unstructured_spline_surf = prime.IGAUnstructuredSplineSurf(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSurf.html#overview","title":"IGAUnstructuredSplineSurf > Overview","text":"Overview\n\nProperties\n\n\n\n\n\naverage_mesh_size\n\nReference length to compute deviation.\n\nbad_spline_points_indices\n\nNode indices in the spline points list which has negative jacobian value.\n\ncontrol_points\n\nCoordinates of the control points of the spline.\n\ndegree\n\nDegree of the spline surface.\n\ndeviation_array\n\nDeviation value from the spline point to the model geometry.\n\nelements_count\n\nCount of shell elements.\n\nid\n\nId of the unstructured spline surface.\n\ninvalid_jacobian_elements_count\n\nCount of elements with negative jacobian.\n\nshell_thickness\n\nThickness of shell.\n\nspline_points\n\nCoordinates of the spline points.\n\nspline_refinement_level\n\nRefinement level for rendering of spline points.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IGAUnstructuredSplineSurf object.\n\nset_default\n\nSet the default values of the IGAUnstructuredSplineSurf object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSurf.html#import-detail","title":"IGAUnstructuredSplineSurf > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSurf.html#property-detail","title":"IGAUnstructuredSplineSurf > Property detail","text":"Property detail\n\n\n\nproperty IGAUnstructuredSplineSurf.average_mesh_size: float\n\nReference length to compute deviation.\n\n\n\nproperty IGAUnstructuredSplineSurf.bad_spline_points_indices: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNode indices in the spline points list which has negative jacobian value.\n\n\n\nproperty IGAUnstructuredSplineSurf.control_points: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCoordinates of the control points of the spline.\n\n\n\nproperty IGAUnstructuredSplineSurf.degree: int\n\nDegree of the spline surface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty IGAUnstructuredSplineSurf.deviation_array: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nDeviation value from the spline point to the model geometry.\n\n\n\nproperty IGAUnstructuredSplineSurf.elements_count: int\n\nCount of shell elements.\n\n\n\nproperty IGAUnstructuredSplineSurf.id: int\n\nId of the unstructured spline surface.\n\n\n\nproperty IGAUnstructuredSplineSurf.invalid_jacobian_elements_count: int\n\nCount of elements with negative jacobian.\n\n\n\nproperty IGAUnstructuredSplineSurf.shell_thickness: float\n\nThickness of shell.\n\n\n\nproperty IGAUnstructuredSplineSurf.spline_points: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCoordinates of the spline points.\n\n\n\nproperty IGAUnstructuredSplineSurf.spline_refinement_level: int\n\nRefinement level for rendering of spline points."},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSurf.html#method-detail","title":"IGAUnstructuredSplineSurf > Method detail","text":"Method detail\n\n\n\nIGAUnstructuredSplineSurf.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIGAUnstructuredSplineSurf.__str__() -> str\n\n\n\n\n\nstatic IGAUnstructuredSplineSurf.print_default()\n\nPrint the default values of IGAUnstructuredSplineSurf object.\n\nExamples\n\n>>> IGAUnstructuredSplineSurf.print_default()\n\n\n\nstatic IGAUnstructuredSplineSurf.set_default(id: int = None, degree: int = None, spline_refinement_level: int = None, control_points: ansys.meshing.prime.params.primestructs.Iterable[float] = None, spline_points: ansys.meshing.prime.params.primestructs.Iterable[float] = None, bad_spline_points_indices: ansys.meshing.prime.params.primestructs.Iterable[int] = None, deviation_array: ansys.meshing.prime.params.primestructs.Iterable[float] = None, invalid_jacobian_elements_count: int = None, average_mesh_size: float = None, elements_count: int = None, shell_thickness: float = None)\n\nSet the default values of the IGAUnstructuredSplineSurf object.\n\nParameters\n\nid (int, optional) – Id of the unstructured spline surface.\n\ndegree (int, optional) – Degree of the spline surface.\n\nspline_refinement_level (int, optional) – Refinement level for rendering of spline points.\n\ncontrol_points (Iterable[float], optional) – Coordinates of the control points of the spline.\n\nspline_points (Iterable[float], optional) – Coordinates of the spline points.\n\nbad_spline_points_indices (Iterable[int], optional) – Node indices in the spline points list which has negative jacobian value.\n\ndeviation_array (Iterable[float], optional) – Deviation value from the spline point to the model geometry.\n\ninvalid_jacobian_elements_count (int, optional) – Count of elements with negative jacobian.\n\naverage_mesh_size (float, optional) – Reference length to compute deviation.\n\nelements_count (int, optional) – Count of shell elements.\n\nshell_thickness (float, optional) – Thickness of shell."},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshParams.html#checkmeshparams","title":"CheckMeshParams","text":"CheckMeshParams\n\n\n\nclass ansys.meshing.prime.CheckMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to check mesh.\n\nParameters\n\nmodel (Model) – Model to create a CheckMeshParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a CheckMeshParams object with provided parameters.\n\nExamples\n\n>>> check_mesh_params = prime.CheckMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshParams.html#overview","title":"CheckMeshParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckMeshParams object.\n\nset_default\n\nSet the default values of the CheckMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshParams.html#import-detail","title":"CheckMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckMeshParams.html#method-detail","title":"CheckMeshParams > Method detail","text":"Method detail\n\n\n\nCheckMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckMeshParams.__str__() -> str\n\n\n\n\n\nstatic CheckMeshParams.print_default()\n\nPrint the default values of CheckMeshParams object.\n\nExamples\n\n>>> CheckMeshParams.print_default()\n\n\n\nstatic CheckMeshParams.set_default()\n\nSet the default values of the CheckMeshParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferParams.html#localsurferparams","title":"LocalSurferParams","text":"LocalSurferParams\n\n\n\nclass ansys.meshing.prime.LocalSurferParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min_angle: float = None, max_angle: float = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, min_size: float = None, max_size: float = None, growth_rate: float = None, constant_size: float = None, smooth_boundary: bool = None, n_rings: int = None, json_data: dict = None, **kwargs)\n\nParameters to perform local surface remeshing.\n\nParameters\n\nmodel (Model) – Model to create a LocalSurferParams object with default parameters.\n\nmin_angle (float, optional) – Minimum feature angle limit used to identify and preserve features.\n\nmax_angle (float, optional) – Maximum feature angle limit used to identify and preserve features.\n\nsize_field_type (SizeFieldType, optional) – Size field type used to generate surface mesh.\n\nmin_size (float, optional) – Minimum size to be used in sizing for the surfer.\n\nmax_size (float, optional) – Maximum size to be used in sizing for the surfer.\n\ngrowth_rate (float, optional) – Growth rate to be used to propagate sizes.\n\nconstant_size (float, optional) – Constant size to be used in case of constant size field.\n\nsmooth_boundary (bool, optional) – Option to extend local selection to get smooth boundary of selected elements.\n\nn_rings (int, optional) – Number of rings to extend the registered face selection for remeshing.\n\njson_data (dict, optional) – JSON dictionary to create a LocalSurferParams object with provided parameters.\n\nExamples\n\n>>> local_surfer_params = prime.LocalSurferParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferParams.html#overview","title":"LocalSurferParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nconstant_size\n\nConstant size to be used in case of constant size field.\n\ngrowth_rate\n\nGrowth rate to be used to propagate sizes.\n\nmax_angle\n\nMaximum feature angle limit used to identify and preserve features.\n\nmax_size\n\nMaximum size to be used in sizing for the surfer.\n\nmin_angle\n\nMinimum feature angle limit used to identify and preserve features.\n\nmin_size\n\nMinimum size to be used in sizing for the surfer.\n\nn_rings\n\nNumber of rings to extend the registered face selection for remeshing.\n\nsize_field_type\n\nSize field type used to generate surface mesh.\n\nsmooth_boundary\n\nOption to extend local selection to get smooth boundary of selected elements.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of LocalSurferParams object.\n\nset_default\n\nSet the default values of the LocalSurferParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferParams.html#import-detail","title":"LocalSurferParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferParams.html#property-detail","title":"LocalSurferParams > Property detail","text":"Property detail\n\n\n\nproperty LocalSurferParams.constant_size: float\n\nConstant size to be used in case of constant size field.\n\n\n\nproperty LocalSurferParams.growth_rate: float\n\nGrowth rate to be used to propagate sizes.\n\n\n\nproperty LocalSurferParams.max_angle: float\n\nMaximum feature angle limit used to identify and preserve features.\n\n\n\nproperty LocalSurferParams.max_size: float\n\nMaximum size to be used in sizing for the surfer.\n\n\n\nproperty LocalSurferParams.min_angle: float\n\nMinimum feature angle limit used to identify and preserve features.\n\n\n\nproperty LocalSurferParams.min_size: float\n\nMinimum size to be used in sizing for the surfer.\n\n\n\nproperty LocalSurferParams.n_rings: int\n\nNumber of rings to extend the registered face selection for remeshing.\n\n\n\nproperty LocalSurferParams.size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nSize field type used to generate surface mesh.\n\n\n\nproperty LocalSurferParams.smooth_boundary: bool\n\nOption to extend local selection to get smooth boundary of selected elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferParams.html#method-detail","title":"LocalSurferParams > Method detail","text":"Method detail\n\n\n\nLocalSurferParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nLocalSurferParams.__str__() -> str\n\n\n\n\n\nstatic LocalSurferParams.print_default()\n\nPrint the default values of LocalSurferParams object.\n\nExamples\n\n>>> LocalSurferParams.print_default()\n\n\n\nstatic LocalSurferParams.set_default(min_angle: float = None, max_angle: float = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, min_size: float = None, max_size: float = None, growth_rate: float = None, constant_size: float = None, smooth_boundary: bool = None, n_rings: int = None)\n\nSet the default values of the LocalSurferParams object.\n\nParameters\n\nmin_angle (float, optional) – Minimum feature angle limit used to identify and preserve features.\n\nmax_angle (float, optional) – Maximum feature angle limit used to identify and preserve features.\n\nsize_field_type (SizeFieldType, optional) – Size field type used to generate surface mesh.\n\nmin_size (float, optional) – Minimum size to be used in sizing for the surfer.\n\nmax_size (float, optional) – Maximum size to be used in sizing for the surfer.\n\ngrowth_rate (float, optional) – Growth rate to be used to propagate sizes.\n\nconstant_size (float, optional) – Constant size to be used in case of constant size field.\n\nsmooth_boundary (bool, optional) – Option to extend local selection to get smooth boundary of selected elements.\n\nn_rings (int, optional) – Number of rings to extend the registered face selection for remeshing."},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveZoneResults.html#removezoneresults","title":"RemoveZoneResults","text":"RemoveZoneResults\n\n\n\nclass ansys.meshing.prime.RemoveZoneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the remove zone operation.\n\nParameters\n\nmodel (Model) – Model to create a RemoveZoneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the remove zone operation.\n\njson_data (dict, optional) – JSON dictionary to create a RemoveZoneResults object with provided parameters.\n\nExamples\n\n>>> remove_zone_results = prime.RemoveZoneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveZoneResults.html#overview","title":"RemoveZoneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with the remove zone operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RemoveZoneResults object.\n\nset_default\n\nSet the default values of the RemoveZoneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveZoneResults.html#import-detail","title":"RemoveZoneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveZoneResults.html#property-detail","title":"RemoveZoneResults > Property detail","text":"Property detail\n\n\n\nproperty RemoveZoneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty RemoveZoneResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the remove zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveZoneResults.html#method-detail","title":"RemoveZoneResults > Method detail","text":"Method detail\n\n\n\nRemoveZoneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRemoveZoneResults.__str__() -> str\n\n\n\n\n\nstatic RemoveZoneResults.print_default()\n\nPrint the default values of RemoveZoneResults object.\n\nExamples\n\n>>> RemoveZoneResults.print_default()\n\n\n\nstatic RemoveZoneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the RemoveZoneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the remove zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteResults.html#filewriteresults","title":"FileWriteResults","text":"FileWriteResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.FileWriteResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults of file write operation.\n\nParameters\n\nmodel (Model) – Model to create a FileWriteResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if file write operation is unsuccessful.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the file write operation.\n\njson_data (dict, optional) – JSON dictionary to create a FileWriteResults object with provided parameters.\n\nExamples\n\n>>> file_write_results = prime.FileWriteResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteResults.html#overview","title":"FileWriteResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if file write operation is unsuccessful.\n\nwarning_codes\n\nWarning codes associated with the file write operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FileWriteResults object.\n\nset_default\n\nSet the default values of the FileWriteResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteResults.html#import-detail","title":"FileWriteResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteResults.html#property-detail","title":"FileWriteResults > Property detail","text":"Property detail\n\n\n\nproperty FileWriteResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if file write operation is unsuccessful.\n\n\n\nproperty FileWriteResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the file write operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteResults.html#method-detail","title":"FileWriteResults > Method detail","text":"Method detail\n\n\n\nFileWriteResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileWriteResults.__str__() -> str\n\n\n\n\n\nstatic FileWriteResults.print_default()\n\nPrint the default values of FileWriteResults object.\n\nExamples\n\n>>> FileWriteResults.print_default()\n\n\n\nstatic FileWriteResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the FileWriteResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if file write operation is unsuccessful.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the file write operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_multi_layer_quad_mesh_pcb_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_multi_layer_quad_mesh_pcb_scdoc","title":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_scdoc","text":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeParams.html#searchbyspikeparams","title":"SearchBySpikeParams","text":"SearchBySpikeParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchBySpikeParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, spike_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters to control spike detection.\n\nParameters\n\nmodel (Model) – Model to create a SearchBySpikeParams object with default parameters.\n\nspike_angle (float, optional) – Threshold angle for spike detection.\n\njson_data (dict, optional) – JSON dictionary to create a SearchBySpikeParams object with provided parameters.\n\nExamples\n\n>>> search_by_spike_params = prime.SearchBySpikeParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeParams.html#overview","title":"SearchBySpikeParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nspike_angle\n\nThreshold angle for spike detection.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchBySpikeParams object.\n\nset_default\n\nSet the default values of the SearchBySpikeParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeParams.html#import-detail","title":"SearchBySpikeParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeParams.html#property-detail","title":"SearchBySpikeParams > Property detail","text":"Property detail\n\n\n\nproperty SearchBySpikeParams.spike_angle: float\n\nThreshold angle for spike detection."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeParams.html#method-detail","title":"SearchBySpikeParams > Method detail","text":"Method detail\n\n\n\nSearchBySpikeParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchBySpikeParams.__str__() -> str\n\n\n\n\n\nstatic SearchBySpikeParams.print_default()\n\nPrint the default values of SearchBySpikeParams object.\n\nExamples\n\n>>> SearchBySpikeParams.print_default()\n\n\n\nstatic SearchBySpikeParams.set_default(spike_angle: float = None)\n\nSet the default values of the SearchBySpikeParams object.\n\nParameters\n\nspike_angle (float, optional) – Threshold angle for spike detection."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/FeatureRecoveryParams.html#featurerecoveryparams","title":"FeatureRecoveryParams","text":"FeatureRecoveryParams\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.FeatureRecoveryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, scope: ScopeDefinition = None, enable_feature_octree_refinement: bool = None, size_at_features: float = None, json_data: dict = None, **kwargs)\n\nFeatureRecoveryParams defines feature recovery control parameters for wrapper.\n\nParameters\n\nmodel (Model) – Model to create a FeatureRecoveryParams object with default parameters.\n\nscope (ScopeDefinition, optional) – Scope used for feature recovery control.\n\nenable_feature_octree_refinement (bool, optional) – Checks whether to perform octree refinement at feature edges.\n\nsize_at_features (float, optional) – Refinement size at features.\n\njson_data (dict, optional) – JSON dictionary to create a FeatureRecoveryParams object with provided parameters.\n\nExamples\n\n>>> feature_recovery_params = prime.FeatureRecoveryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/FeatureRecoveryParams.html#overview","title":"FeatureRecoveryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nenable_feature_octree_refinement\n\nChecks whether to perform octree refinement at feature edges.\n\nscope\n\nScope used for feature recovery control.\n\nsize_at_features\n\nRefinement size at features.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FeatureRecoveryParams object.\n\nset_default\n\nSet the default values of the FeatureRecoveryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/FeatureRecoveryParams.html#import-detail","title":"FeatureRecoveryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/FeatureRecoveryParams.html#property-detail","title":"FeatureRecoveryParams > Property detail","text":"Property detail\n\n\n\nproperty FeatureRecoveryParams.enable_feature_octree_refinement: bool\n\nChecks whether to perform octree refinement at feature edges.\n\n\n\nproperty FeatureRecoveryParams.scope: ScopeDefinition\n\nScope used for feature recovery control.\n\n\n\nproperty FeatureRecoveryParams.size_at_features: float\n\nRefinement size at features."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/FeatureRecoveryParams.html#method-detail","title":"FeatureRecoveryParams > Method detail","text":"Method detail\n\n\n\nFeatureRecoveryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFeatureRecoveryParams.__str__() -> str\n\n\n\n\n\nstatic FeatureRecoveryParams.print_default()\n\nPrint the default values of FeatureRecoveryParams object.\n\nExamples\n\n>>> FeatureRecoveryParams.print_default()\n\n\n\nstatic FeatureRecoveryParams.set_default(scope: ScopeDefinition = None, enable_feature_octree_refinement: bool = None, size_at_features: float = None)\n\nSet the default values of the FeatureRecoveryParams object.\n\nParameters\n\nscope (ScopeDefinition, optional) – Scope used for feature recovery control.\n\nenable_feature_octree_refinement (bool, optional) – Checks whether to perform octree refinement at feature edges.\n\nsize_at_features (float, optional) – Refinement size at features."},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSolidSplineCutMode.html#trimmedsolidsplinecutmode","title":"TrimmedSolidSplineCutMode","text":"TrimmedSolidSplineCutMode\n\n\n\nclass ansys.meshing.prime.TrimmedSolidSplineCutMode\n\nTypes of Cut modes used to generate Cartesian grid representing subdomains of trimmed solid spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSolidSplineCutMode.html#overview","title":"TrimmedSolidSplineCutMode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEXACT\n\nThis mode guarantees to represent the exact input mesh for each subdomain without any defeaturing.\n\nHYBRID\n\nThis is faster mode and may defeature the input mesh to represent each subdomain."},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSolidSplineCutMode.html#import-detail","title":"TrimmedSolidSplineCutMode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSolidSplineCutMode.html#attribute-detail","title":"TrimmedSolidSplineCutMode > Attribute detail","text":"Attribute detail\n\n\n\nTrimmedSolidSplineCutMode.EXACT = 1\n\nThis mode guarantees to represent the exact input mesh for each subdomain without any defeaturing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTrimmedSolidSplineCutMode.HYBRID = 0\n\nThis is faster mode and may defeature the input mesh to represent each subdomain.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"user_guide/logging.html#logging","title":"Logging","text":"Logging\n\nA logger can be attached to a session to handle streamed output from PyPrimeMesh.\n\nThis code attaches a logger and formats the output as needed:"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryParams.html#volumequalitysummaryparams","title":"VolumeQualitySummaryParams","text":"VolumeQualitySummaryParams\n\n\n\nclass ansys.meshing.prime.autogen.volumesearchstructs.VolumeQualitySummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cell_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.CellQualityMeasure] = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nParameters to control volume quality summary results.\n\nParameters\n\nmodel (Model) – Model to create a VolumeQualitySummaryParams object with default parameters.\n\ncell_quality_measures (List[CellQualityMeasure], optional) – List of cell quality measures for volume quality diagnostics.\n\nscope (ScopeDefinition, optional) – Scope of the cell zonelets for volume quality diagnostics.\n\nquality_limit (Iterable[float], optional) – Quality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeQualitySummaryParams object with provided parameters.\n\nExamples\n\n>>> volume_quality_summary_params = prime.VolumeQualitySummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryParams.html#overview","title":"VolumeQualitySummaryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncell_quality_measures\n\nList of cell quality measures for volume quality diagnostics.\n\nquality_limit\n\nQuality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used.\n\nscope\n\nScope of the cell zonelets for volume quality diagnostics.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeQualitySummaryParams object.\n\nset_default\n\nSet the default values of the VolumeQualitySummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryParams.html#import-detail","title":"VolumeQualitySummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryParams.html#property-detail","title":"VolumeQualitySummaryParams > Property detail","text":"Property detail\n\n\n\nproperty VolumeQualitySummaryParams.cell_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.CellQualityMeasure]\n\nList of cell quality measures for volume quality diagnostics.\n\n\n\nproperty VolumeQualitySummaryParams.quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nQuality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used.\n\n\n\nproperty VolumeQualitySummaryParams.scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope of the cell zonelets for volume quality diagnostics."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryParams.html#method-detail","title":"VolumeQualitySummaryParams > Method detail","text":"Method detail\n\n\n\nVolumeQualitySummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeQualitySummaryParams.__str__() -> str\n\n\n\n\n\nstatic VolumeQualitySummaryParams.print_default()\n\nPrint the default values of VolumeQualitySummaryParams object.\n\nExamples\n\n>>> VolumeQualitySummaryParams.print_default()\n\n\n\nstatic VolumeQualitySummaryParams.set_default(cell_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.CellQualityMeasure] = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the VolumeQualitySummaryParams object.\n\nParameters\n\ncell_quality_measures (List[CellQualityMeasure], optional) – List of cell quality measures for volume quality diagnostics.\n\nscope (ScopeDefinition, optional) – Scope of the cell zonelets for volume quality diagnostics.\n\nquality_limit (Iterable[float], optional) – Quality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_elbow_fmd.html#ansysmeshingprimeexamplesdownload_elbow_fmd","title":"ansys.meshing.prime.examples.download_elbow_fmd","text":"ansys.meshing.prime.examples.download_elbow_fmd\n\n\n\nansys.meshing.prime.examples.download_elbow_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the mixing elbow example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualityResultsPart.html#volumequalityresultspart","title":"VolumeQualityResultsPart","text":"VolumeQualityResultsPart\n\n\n\nclass ansys.meshing.prime.autogen.volumesearchstructs.VolumeQualityResultsPart(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cell_quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure = None, measure_name: str = None, part_id: int = None, quality_limit: float = None, n_found: int = None, max_quality: float = None, min_quality: float = None, json_data: dict = None, **kwargs)\n\nResult of volume quality of part.\n\nParameters\n\nmodel (Model) – Model to create a VolumeQualityResultsPart object with default parameters.\n\ncell_quality_measure (CellQualityMeasure, optional) – Type of the cell quality measure.\n\nmeasure_name (str, optional) – Name of the cell quality measure.\n\npart_id (int, optional) – Id of the part for which quality is computed.\n\nquality_limit (float, optional) – Target quality limit used to find failures.\n\nn_found (int, optional) – Number of failed cells.\n\nmax_quality (float, optional) – Maximum value of quality measure.\n\nmin_quality (float, optional) – Minimum value of quality measure.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeQualityResultsPart object with provided parameters.\n\nExamples\n\n>>> volume_quality_results_part = prime.VolumeQualityResultsPart(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualityResultsPart.html#overview","title":"VolumeQualityResultsPart > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncell_quality_measure\n\nType of the cell quality measure.\n\nmax_quality\n\nMaximum value of quality measure.\n\nmeasure_name\n\nName of the cell quality measure.\n\nmin_quality\n\nMinimum value of quality measure.\n\nn_found\n\nNumber of failed cells.\n\npart_id\n\nId of the part for which quality is computed.\n\nquality_limit\n\nTarget quality limit used to find failures.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeQualityResultsPart object.\n\nset_default\n\nSet the default values of the VolumeQualityResultsPart object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualityResultsPart.html#import-detail","title":"VolumeQualityResultsPart > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualityResultsPart.html#property-detail","title":"VolumeQualityResultsPart > Property detail","text":"Property detail\n\n\n\nproperty VolumeQualityResultsPart.cell_quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure\n\nType of the cell quality measure.\n\n\n\nproperty VolumeQualityResultsPart.max_quality: float\n\nMaximum value of quality measure.\n\n\n\nproperty VolumeQualityResultsPart.measure_name: str\n\nName of the cell quality measure.\n\n\n\nproperty VolumeQualityResultsPart.min_quality: float\n\nMinimum value of quality measure.\n\n\n\nproperty VolumeQualityResultsPart.n_found: int\n\nNumber of failed cells.\n\n\n\nproperty VolumeQualityResultsPart.part_id: int\n\nId of the part for which quality is computed.\n\n\n\nproperty VolumeQualityResultsPart.quality_limit: float\n\nTarget quality limit used to find failures."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualityResultsPart.html#method-detail","title":"VolumeQualityResultsPart > Method detail","text":"Method detail\n\n\n\nVolumeQualityResultsPart.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeQualityResultsPart.__str__() -> str\n\n\n\n\n\nstatic VolumeQualityResultsPart.print_default()\n\nPrint the default values of VolumeQualityResultsPart object.\n\nExamples\n\n>>> VolumeQualityResultsPart.print_default()\n\n\n\nstatic VolumeQualityResultsPart.set_default(cell_quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure = None, measure_name: str = None, part_id: int = None, quality_limit: float = None, n_found: int = None, max_quality: float = None, min_quality: float = None)\n\nSet the default values of the VolumeQualityResultsPart object.\n\nParameters\n\ncell_quality_measure (CellQualityMeasure, optional) – Type of the cell quality measure.\n\nmeasure_name (str, optional) – Name of the cell quality measure.\n\npart_id (int, optional) – Id of the part for which quality is computed.\n\nquality_limit (float, optional) – Target quality limit used to find failures.\n\nn_found (int, optional) – Number of failed cells.\n\nmax_quality (float, optional) – Maximum value of quality measure.\n\nmin_quality (float, optional) – Minimum value of quality measure."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsParams.html#refineatcontactsparams","title":"RefineAtContactsParams","text":"RefineAtContactsParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.RefineAtContactsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, contact_tolerance: float = None, relative_tolerance: bool = None, refine_max_size: float = None, project_on_geometry: bool = None, json_data: dict = None, **kwargs)\n\nParameters to refine face elements in contact.\n\nParameters\n\nmodel (Model) – Model to create a RefineAtContactsParams object with default parameters.\n\ncontact_tolerance (float, optional) – Maximum tolerance used to identify face elements as contacts.\n\nrelative_tolerance (bool, optional) – Option to specify the contact tolerance is relative or absolute.\n\nrefine_max_size (float, optional) – Maximum size used to refine contact face elements.\n\nproject_on_geometry (bool, optional) – Project on geometry on remesh.\n\njson_data (dict, optional) – JSON dictionary to create a RefineAtContactsParams object with provided parameters.\n\nExamples\n\n>>> refine_at_contacts_params = prime.RefineAtContactsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsParams.html#overview","title":"RefineAtContactsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontact_tolerance\n\nMaximum tolerance used to identify face elements as contacts.\n\nproject_on_geometry\n\nProject on geometry on remesh.\n\nrefine_max_size\n\nMaximum size used to refine contact face elements.\n\nrelative_tolerance\n\nOption to specify the contact tolerance is relative or absolute.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RefineAtContactsParams object.\n\nset_default\n\nSet the default values of the RefineAtContactsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsParams.html#import-detail","title":"RefineAtContactsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsParams.html#property-detail","title":"RefineAtContactsParams > Property detail","text":"Property detail\n\n\n\nproperty RefineAtContactsParams.contact_tolerance: float\n\nMaximum tolerance used to identify face elements as contacts.\n\n\n\nproperty RefineAtContactsParams.project_on_geometry: bool\n\nProject on geometry on remesh.\n\n\n\nproperty RefineAtContactsParams.refine_max_size: float\n\nMaximum size used to refine contact face elements.\n\n\n\nproperty RefineAtContactsParams.relative_tolerance: bool\n\nOption to specify the contact tolerance is relative or absolute."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/RefineAtContactsParams.html#method-detail","title":"RefineAtContactsParams > Method detail","text":"Method detail\n\n\n\nRefineAtContactsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRefineAtContactsParams.__str__() -> str\n\n\n\n\n\nstatic RefineAtContactsParams.print_default()\n\nPrint the default values of RefineAtContactsParams object.\n\nExamples\n\n>>> RefineAtContactsParams.print_default()\n\n\n\nstatic RefineAtContactsParams.set_default(contact_tolerance: float = None, relative_tolerance: bool = None, refine_max_size: float = None, project_on_geometry: bool = None)\n\nSet the default values of the RefineAtContactsParams object.\n\nParameters\n\ncontact_tolerance (float, optional) – Maximum tolerance used to identify face elements as contacts.\n\nrelative_tolerance (bool, optional) – Option to specify the contact tolerance is relative or absolute.\n\nrefine_max_size (float, optional) – Maximum size used to refine contact face elements.\n\nproject_on_geometry (bool, optional) – Project on geometry on remesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/MaterialPointType.html#materialpointtype","title":"MaterialPointType","text":"MaterialPointType\n\n\n\nclass ansys.meshing.prime.autogen.materialpointmanagerstructs.MaterialPointType\n\nDefines define type of material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/MaterialPointType.html#overview","title":"MaterialPointType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDEAD\n\nUsed to define dead material point.\n\nLIVE\n\nUsed to define live material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/MaterialPointType.html#import-detail","title":"MaterialPointType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/MaterialPointType.html#attribute-detail","title":"MaterialPointType > Attribute detail","text":"Attribute detail\n\n\n\nMaterialPointType.DEAD = 0\n\nUsed to define dead material point.\n\n\n\nMaterialPointType.LIVE = 1\n\nUsed to define live material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSurf.html#igaunstructuredsplinesurf","title":"IGAUnstructuredSplineSurf","text":"IGAUnstructuredSplineSurf\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.IGAUnstructuredSplineSurf(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id: int = None, degree: int = None, spline_refinement_level: int = None, control_points: ansys.meshing.prime.params.primestructs.Iterable[float] = None, spline_points: ansys.meshing.prime.params.primestructs.Iterable[float] = None, bad_spline_points_indices: ansys.meshing.prime.params.primestructs.Iterable[int] = None, deviation_array: ansys.meshing.prime.params.primestructs.Iterable[float] = None, invalid_jacobian_elements_count: int = None, average_mesh_size: float = None, elements_count: int = None, shell_thickness: float = None, json_data: dict = None, **kwargs)\n\nInformation of unstructured spline surface.\n\nParameters\n\nmodel (Model) – Model to create a IGAUnstructuredSplineSurf object with default parameters.\n\nid (int, optional) – Id of the unstructured spline surface.\n\ndegree (int, optional) – Degree of the spline surface.This is a beta parameter. The behavior and name may change in the future.\n\nspline_refinement_level (int, optional) – Refinement level for rendering of spline points.\n\ncontrol_points (Iterable[float], optional) – Coordinates of the control points of the spline.\n\nspline_points (Iterable[float], optional) – Coordinates of the spline points.\n\nbad_spline_points_indices (Iterable[int], optional) – Node indices in the spline points list which has negative jacobian value.\n\ndeviation_array (Iterable[float], optional) – Deviation value from the spline point to the model geometry.\n\ninvalid_jacobian_elements_count (int, optional) – Count of elements with negative jacobian.\n\naverage_mesh_size (float, optional) – Reference length to compute deviation.\n\nelements_count (int, optional) – Count of shell elements.\n\nshell_thickness (float, optional) – Thickness of shell.\n\njson_data (dict, optional) – JSON dictionary to create a IGAUnstructuredSplineSurf object with provided parameters.\n\nExamples\n\n>>> iga_unstructured_spline_surf = prime.IGAUnstructuredSplineSurf(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSurf.html#overview","title":"IGAUnstructuredSplineSurf > Overview","text":"Overview\n\nProperties\n\n\n\n\n\naverage_mesh_size\n\nReference length to compute deviation.\n\nbad_spline_points_indices\n\nNode indices in the spline points list which has negative jacobian value.\n\ncontrol_points\n\nCoordinates of the control points of the spline.\n\ndegree\n\nDegree of the spline surface.\n\ndeviation_array\n\nDeviation value from the spline point to the model geometry.\n\nelements_count\n\nCount of shell elements.\n\nid\n\nId of the unstructured spline surface.\n\ninvalid_jacobian_elements_count\n\nCount of elements with negative jacobian.\n\nshell_thickness\n\nThickness of shell.\n\nspline_points\n\nCoordinates of the spline points.\n\nspline_refinement_level\n\nRefinement level for rendering of spline points.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IGAUnstructuredSplineSurf object.\n\nset_default\n\nSet the default values of the IGAUnstructuredSplineSurf object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSurf.html#import-detail","title":"IGAUnstructuredSplineSurf > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSurf.html#property-detail","title":"IGAUnstructuredSplineSurf > Property detail","text":"Property detail\n\n\n\nproperty IGAUnstructuredSplineSurf.average_mesh_size: float\n\nReference length to compute deviation.\n\n\n\nproperty IGAUnstructuredSplineSurf.bad_spline_points_indices: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNode indices in the spline points list which has negative jacobian value.\n\n\n\nproperty IGAUnstructuredSplineSurf.control_points: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCoordinates of the control points of the spline.\n\n\n\nproperty IGAUnstructuredSplineSurf.degree: int\n\nDegree of the spline surface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty IGAUnstructuredSplineSurf.deviation_array: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nDeviation value from the spline point to the model geometry.\n\n\n\nproperty IGAUnstructuredSplineSurf.elements_count: int\n\nCount of shell elements.\n\n\n\nproperty IGAUnstructuredSplineSurf.id: int\n\nId of the unstructured spline surface.\n\n\n\nproperty IGAUnstructuredSplineSurf.invalid_jacobian_elements_count: int\n\nCount of elements with negative jacobian.\n\n\n\nproperty IGAUnstructuredSplineSurf.shell_thickness: float\n\nThickness of shell.\n\n\n\nproperty IGAUnstructuredSplineSurf.spline_points: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCoordinates of the spline points.\n\n\n\nproperty IGAUnstructuredSplineSurf.spline_refinement_level: int\n\nRefinement level for rendering of spline points."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSurf.html#method-detail","title":"IGAUnstructuredSplineSurf > Method detail","text":"Method detail\n\n\n\nIGAUnstructuredSplineSurf.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIGAUnstructuredSplineSurf.__str__() -> str\n\n\n\n\n\nstatic IGAUnstructuredSplineSurf.print_default()\n\nPrint the default values of IGAUnstructuredSplineSurf object.\n\nExamples\n\n>>> IGAUnstructuredSplineSurf.print_default()\n\n\n\nstatic IGAUnstructuredSplineSurf.set_default(id: int = None, degree: int = None, spline_refinement_level: int = None, control_points: ansys.meshing.prime.params.primestructs.Iterable[float] = None, spline_points: ansys.meshing.prime.params.primestructs.Iterable[float] = None, bad_spline_points_indices: ansys.meshing.prime.params.primestructs.Iterable[int] = None, deviation_array: ansys.meshing.prime.params.primestructs.Iterable[float] = None, invalid_jacobian_elements_count: int = None, average_mesh_size: float = None, elements_count: int = None, shell_thickness: float = None)\n\nSet the default values of the IGAUnstructuredSplineSurf object.\n\nParameters\n\nid (int, optional) – Id of the unstructured spline surface.\n\ndegree (int, optional) – Degree of the spline surface.\n\nspline_refinement_level (int, optional) – Refinement level for rendering of spline points.\n\ncontrol_points (Iterable[float], optional) – Coordinates of the control points of the spline.\n\nspline_points (Iterable[float], optional) – Coordinates of the spline points.\n\nbad_spline_points_indices (Iterable[int], optional) – Node indices in the spline points list which has negative jacobian value.\n\ndeviation_array (Iterable[float], optional) – Deviation value from the spline point to the model geometry.\n\ninvalid_jacobian_elements_count (int, optional) – Count of elements with negative jacobian.\n\naverage_mesh_size (float, optional) – Reference length to compute deviation.\n\nelements_count (int, optional) – Count of shell elements.\n\nshell_thickness (float, optional) – Thickness of shell."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveZoneResults.html#removezoneresults","title":"RemoveZoneResults","text":"RemoveZoneResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.RemoveZoneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the remove zone operation.\n\nParameters\n\nmodel (Model) – Model to create a RemoveZoneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the remove zone operation.\n\njson_data (dict, optional) – JSON dictionary to create a RemoveZoneResults object with provided parameters.\n\nExamples\n\n>>> remove_zone_results = prime.RemoveZoneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveZoneResults.html#overview","title":"RemoveZoneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with the remove zone operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RemoveZoneResults object.\n\nset_default\n\nSet the default values of the RemoveZoneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveZoneResults.html#import-detail","title":"RemoveZoneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveZoneResults.html#property-detail","title":"RemoveZoneResults > Property detail","text":"Property detail\n\n\n\nproperty RemoveZoneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty RemoveZoneResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the remove zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/RemoveZoneResults.html#method-detail","title":"RemoveZoneResults > Method detail","text":"Method detail\n\n\n\nRemoveZoneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRemoveZoneResults.__str__() -> str\n\n\n\n\n\nstatic RemoveZoneResults.print_default()\n\nPrint the default values of RemoveZoneResults object.\n\nExamples\n\n>>> RemoveZoneResults.print_default()\n\n\n\nstatic RemoveZoneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the RemoveZoneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the remove zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/BOIType.html#boitype","title":"BOIType","text":"BOIType\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.BOIType\n\nBOI type for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/BOIType.html#overview","title":"BOIType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nOFFSETBOX\n\nBox BOI type for BOI creation.\n\nOFFSETSURFACE\n\nSurface BOI type for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/BOIType.html#import-detail","title":"BOIType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/BOIType.html#attribute-detail","title":"BOIType > Attribute detail","text":"Attribute detail\n\n\n\nBOIType.OFFSETBOX = 1\n\nBox BOI type for BOI creation.\n\n\n\nBOIType.OFFSETSURFACE = 2\n\nSurface BOI type for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateResults.html#triangulateresults","title":"TriangulateResults","text":"TriangulateResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.TriangulateResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_faces_triangulated: int = None, json_data: dict = None, **kwargs)\n\nResults associated with triangulate operation.\n\nParameters\n\nmodel (Model) – Model to create a TriangulateResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of the operation.This is a beta parameter. The behavior and name may change in the future.\n\nn_faces_triangulated (int, optional) – Number of faces that were triangulated.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a TriangulateResults object with provided parameters.\n\nExamples\n\n>>> triangulate_results = prime.TriangulateResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateResults.html#overview","title":"TriangulateResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of the operation.\n\nn_faces_triangulated\n\nNumber of faces that were triangulated.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TriangulateResults object.\n\nset_default\n\nSet the default values of the TriangulateResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateResults.html#import-detail","title":"TriangulateResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateResults.html#property-detail","title":"TriangulateResults > Property detail","text":"Property detail\n\n\n\nproperty TriangulateResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty TriangulateResults.n_faces_triangulated: int\n\nNumber of faces that were triangulated.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateResults.html#method-detail","title":"TriangulateResults > Method detail","text":"Method detail\n\n\n\nTriangulateResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTriangulateResults.__str__() -> str\n\n\n\n\n\nstatic TriangulateResults.print_default()\n\nPrint the default values of TriangulateResults object.\n\nExamples\n\n>>> TriangulateResults.print_default()\n\n\n\nstatic TriangulateResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_faces_triangulated: int = None)\n\nSet the default values of the TriangulateResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of the operation.\n\nn_faces_triangulated (int, optional) – Number of faces that were triangulated."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_deformed_blade_fmd.html#ansysmeshingprimeexamplesdownload_deformed_blade_fmd","title":"ansys.meshing.prime.examples.download_deformed_blade_fmd","text":"ansys.meshing.prime.examples.download_deformed_blade_fmd\n\n\n\nansys.meshing.prime.examples.download_deformed_blade_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the turbine blade example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapPairs.html#overlappairs","title":"OverlapPairs","text":"OverlapPairs\n\n\n\nclass ansys.meshing.prime.OverlapPairs(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, zone_id0: int = None, zone_id1: int = None, json_data: dict = None, **kwargs)\n\nProvides ids of a pair of overlapping face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a OverlapPairs object with default parameters.\n\nzone_id0 (int, optional) – Id of one overlapping face zonelet.\n\nzone_id1 (int, optional) – Id of other overlapping face zonelet.\n\njson_data (dict, optional) – JSON dictionary to create a OverlapPairs object with provided parameters.\n\nExamples\n\n>>> overlap_pairs = prime.OverlapPairs(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapPairs.html#overview","title":"OverlapPairs > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nzone_id0\n\nId of one overlapping face zonelet.\n\nzone_id1\n\nId of other overlapping face zonelet.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of OverlapPairs object.\n\nset_default\n\nSet the default values of the OverlapPairs object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapPairs.html#import-detail","title":"OverlapPairs > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapPairs.html#property-detail","title":"OverlapPairs > Property detail","text":"Property detail\n\n\n\nproperty OverlapPairs.zone_id0: int\n\nId of one overlapping face zonelet.\n\n\n\nproperty OverlapPairs.zone_id1: int\n\nId of other overlapping face zonelet."},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapPairs.html#method-detail","title":"OverlapPairs > Method detail","text":"Method detail\n\n\n\nOverlapPairs.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nOverlapPairs.__str__() -> str\n\n\n\n\n\nstatic OverlapPairs.print_default()\n\nPrint the default values of OverlapPairs object.\n\nExamples\n\n>>> OverlapPairs.print_default()\n\n\n\nstatic OverlapPairs.set_default(zone_id0: int = None, zone_id1: int = None)\n\nSet the default values of the OverlapPairs object.\n\nParameters\n\nzone_id0 (int, optional) – Id of one overlapping face zonelet.\n\nzone_id1 (int, optional) – Id of other overlapping face zonelet."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/utils/check_name_pattern.html#ansysmeshingprimelucidutilscheck_name_pattern","title":"ansys.meshing.prime.lucid.utils.check_name_pattern","text":"ansys.meshing.prime.lucid.utils.check_name_pattern\n\n\n\nansys.meshing.prime.lucid.utils.check_name_pattern(name_patterns: str, name: str) -> bool\n\nCheck several patterns in one string.\n\nParameters\n\nname_patterns (str) – Patterns to check, separated by commas.\nIf pattern starts with !, it shouldn’t be found.\n\nname (str) – String where you look for patterns.\n\nReturns\n\nTrue if all found.\n\nReturn type\n\nbool"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/DeadRegion.html#deadregion","title":"DeadRegion","text":"DeadRegion\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.DeadRegion(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, dead_material_points: ansys.meshing.prime.params.primestructs.List[str] = None, hole_size: float = None, json_data: dict = None, **kwargs)\n\nDeadRegion defines a dead region for patch flow regions operation.\n\nParameters\n\nmodel (Model) – Model to create a DeadRegion object with default parameters.\n\nface_zonelet_ids (Iterable[int], optional) – Face zonelets enclosing dead region.This is a beta parameter. The behavior and name may change in the future.\n\ndead_material_points (List[str], optional) – Material points to identify dead region.This is a beta parameter. The behavior and name may change in the future.\n\nhole_size (float, optional) – Maximum hole size used for patching.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DeadRegion object with provided parameters.\n\nExamples\n\n>>> dead_region = prime.DeadRegion(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/DeadRegion.html#overview","title":"DeadRegion > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndead_material_points\n\nMaterial points to identify dead region.\n\nface_zonelet_ids\n\nFace zonelets enclosing dead region.\n\nhole_size\n\nMaximum hole size used for patching.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeadRegion object.\n\nset_default\n\nSet the default values of the DeadRegion object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/DeadRegion.html#import-detail","title":"DeadRegion > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/DeadRegion.html#property-detail","title":"DeadRegion > Property detail","text":"Property detail\n\n\n\nproperty DeadRegion.dead_material_points: ansys.meshing.prime.params.primestructs.List[str]\n\nMaterial points to identify dead region.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DeadRegion.face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zonelets enclosing dead region.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DeadRegion.hole_size: float\n\nMaximum hole size used for patching.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/DeadRegion.html#method-detail","title":"DeadRegion > Method detail","text":"Method detail\n\n\n\nDeadRegion.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeadRegion.__str__() -> str\n\n\n\n\n\nstatic DeadRegion.print_default()\n\nPrint the default values of DeadRegion object.\n\nExamples\n\n>>> DeadRegion.print_default()\n\n\n\nstatic DeadRegion.set_default(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, dead_material_points: ansys.meshing.prime.params.primestructs.List[str] = None, hole_size: float = None)\n\nSet the default values of the DeadRegion object.\n\nParameters\n\nface_zonelet_ids (Iterable[int], optional) – Face zonelets enclosing dead region.\n\ndead_material_points (List[str], optional) – Material points to identify dead region.\n\nhole_size (float, optional) – Maximum hole size used for patching."},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseTool.html#collapsetool","title":"CollapseTool","text":"CollapseTool\n\n\n\nclass ansys.meshing.prime.CollapseTool(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nPerforms various collapse operations. For example, split and collapse on face zonelets.\n\nParameters\n\nmodel (Model) – Server model to create CollapseTool object."},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseTool.html#overview","title":"CollapseTool > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nsplit_and_collapse_on_zonelets\n\nSplit and collapse elements on face zonelets with the specified register id.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for CollapseTool.\n\n__exit__\n\nExit context for CollapseTool.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseTool.html#import-detail","title":"CollapseTool > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseTool.html#method-detail","title":"CollapseTool > Method detail","text":"Method detail\n\n\n\nCollapseTool.__enter__()\n\nEnter context for CollapseTool.\n\n\n\nCollapseTool.__exit__(type, value, traceback)\n\nExit context for CollapseTool.\n\n\n\nCollapseTool.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCollapseTool.split_and_collapse_on_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, split_params: ansys.meshing.prime.params.primestructs.SplitParams, collapse_params: ansys.meshing.prime.params.primestructs.CollapseParams) -> ansys.meshing.prime.params.primestructs.CollapseResults\n\nSplit and collapse elements on face zonelets with the specified register id.\n\nParameters\n\npart_id (int) – Id of a part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id used to identify face elements to split and collapse.\n\nsplit_params (SplitParams) – Parameters to split longest edge of face elements before collapse.\n\ncollapse_params (CollapseParams) – Parameters to collapse shortest edge of face elements.\n\nReturns\n\nReturns the CollapseResults.\n\nReturn type\n\nCollapseResults\n\nExamples\n\n>>> collapse_tool = prime.CollapseTool(model = model)\n>>> results = collapse_tool.split_and_collapse_on_zonelets(\n>>>     part_id=part.id,\n>>>     face_zonelets=part.get_face_zonelets(),\n>>>     register_id=register_id,\n>>>     split_params=prime.SplitParams(model=model),\n>>>     collapse_params=prime.CollapseParams(model=model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_utilities/DownloadManager.html#downloadmanager","title":"DownloadManager","text":"DownloadManager\n\n\n\nclass ansys.meshing.prime.examples.download_utilities.DownloadManager\n\nManages downloads of example files.\n\nLocal paths are saved in this class so that a global cleanup\nof example files can be performed when the client is closed."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_utilities/DownloadManager.html#overview","title":"DownloadManager > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_file\n\nAdd the path for a downloaded example file to a list.\n\nclear_download_cache\n\nRemove downloaded example files from the local path.\n\ndownload_file\n\nDownload an example file from the PyPrimeMesh repository.\n\nAttributes\n\n\n\n\n\ndownloads_list\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_utilities/DownloadManager.html#import-detail","title":"DownloadManager > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_utilities/DownloadManager.html#attribute-detail","title":"DownloadManager > Attribute detail","text":"Attribute detail\n\n\n\nDownloadManager.downloads_list = []\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_utilities/DownloadManager.html#method-detail","title":"DownloadManager > Method detail","text":"Method detail\n\n\n\nDownloadManager.add_file(file_path: str)\n\nAdd the path for a downloaded example file to a list.\n\nThis list keeps track of where example files are\ndownloaded so that a global cleanup of these files can be\nperformed when the client is closed.\n\nParameters\n\nfile_path (str) – Local path of the downloaded example file.\n\n\n\nDownloadManager.clear_download_cache()\n\nRemove downloaded example files from the local path.\n\n\n\nDownloadManager.download_file(filename: str, *directory: str, destination: str | None = None, force: bool = False) -> str\n\nDownload an example file from the PyPrimeMesh repository.\n\nParameters\n\nfilename (str) – Name of the example file to download.\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to always download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\ndirectory (tuple[str]) – Path under the PyAnsys Github examples repository.\n\nReturns\n\nTuple containing the filepath to use and the local filepath of the downloaded\ndirectory. The two are different in case of containers.\n\nReturn type\n\ntuple[str, str]"},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformParams.html#transformparams","title":"TransformParams","text":"TransformParams\n\n\n\nclass ansys.meshing.prime.TransformParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, transformation_matrix: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nParameters to transform given entities.\n\nParameters\n\nmodel (Model) – Model to create a TransformParams object with default parameters.\n\ntransformation_matrix (Iterable[float], optional) – Transformation matrix(4x4) to be used to transform.\n\njson_data (dict, optional) – JSON dictionary to create a TransformParams object with provided parameters.\n\nExamples\n\n>>> transform_params = prime.TransformParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformParams.html#overview","title":"TransformParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntransformation_matrix\n\nTransformation matrix(4x4) to be used to transform.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TransformParams object.\n\nset_default\n\nSet the default values of the TransformParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformParams.html#import-detail","title":"TransformParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformParams.html#property-detail","title":"TransformParams > Property detail","text":"Property detail\n\n\n\nproperty TransformParams.transformation_matrix: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nTransformation matrix(4x4) to be used to transform."},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformParams.html#method-detail","title":"TransformParams > Method detail","text":"Method detail\n\n\n\nTransformParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTransformParams.__str__() -> str\n\n\n\n\n\nstatic TransformParams.print_default()\n\nPrint the default values of TransformParams object.\n\nExamples\n\n>>> TransformParams.print_default()\n\n\n\nstatic TransformParams.set_default(transformation_matrix: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the TransformParams object.\n\nParameters\n\ntransformation_matrix (Iterable[float], optional) – Transformation matrix(4x4) to be used to transform."},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPatchAxis.html#contactpatchaxis","title":"ContactPatchAxis","text":"ContactPatchAxis\n\n\n\nclass ansys.meshing.prime.ContactPatchAxis\n\nFlow or wake direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPatchAxis.html#overview","title":"ContactPatchAxis > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nX\n\nFlow or wake inflation in the X direction for BOI creation.\n\nY\n\nFlow or wake inflation in the Y direction for BOI creation.\n\nZ\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPatchAxis.html#import-detail","title":"ContactPatchAxis > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPatchAxis.html#attribute-detail","title":"ContactPatchAxis > Attribute detail","text":"Attribute detail\n\n\n\nContactPatchAxis.X = 1\n\nFlow or wake inflation in the X direction for BOI creation.\n\n\n\nContactPatchAxis.Y = 2\n\nFlow or wake inflation in the Y direction for BOI creation.\n\n\n\nContactPatchAxis.Z = 3\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairEdgesParams.html#repairedgesparams","title":"RepairEdgesParams","text":"RepairEdgesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.RepairEdgesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, constant_mesh_size: float = None, absolute_tolerance: float = None, json_data: dict = None, **kwargs)\n\nParameters for repair edges operation.\n\nParameters\n\nmodel (Model) – Model to create a RepairEdgesParams object with default parameters.\n\nconstant_mesh_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\nabsolute_tolerance (float, optional) – Absolute distance tolerance between nodes or edges for repair edges operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a RepairEdgesParams object with provided parameters.\n\nExamples\n\n>>> repair_edges_params = prime.RepairEdgesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairEdgesParams.html#overview","title":"RepairEdgesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsolute_tolerance\n\nAbsolute distance tolerance between nodes or edges for repair edges operation.\n\nconstant_mesh_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RepairEdgesParams object.\n\nset_default\n\nSet the default values of the RepairEdgesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairEdgesParams.html#import-detail","title":"RepairEdgesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairEdgesParams.html#property-detail","title":"RepairEdgesParams > Property detail","text":"Property detail\n\n\n\nproperty RepairEdgesParams.absolute_tolerance: float\n\nAbsolute distance tolerance between nodes or edges for repair edges operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairEdgesParams.constant_mesh_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/RepairEdgesParams.html#method-detail","title":"RepairEdgesParams > Method detail","text":"Method detail\n\n\n\nRepairEdgesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRepairEdgesParams.__str__() -> str\n\n\n\n\n\nstatic RepairEdgesParams.print_default()\n\nPrint the default values of RepairEdgesParams object.\n\nExamples\n\n>>> RepairEdgesParams.print_default()\n\n\n\nstatic RepairEdgesParams.set_default(constant_mesh_size: float = None, absolute_tolerance: float = None)\n\nSet the default values of the RepairEdgesParams object.\n\nParameters\n\nconstant_mesh_size (float, optional) – Constant size used for surface meshing.\n\nabsolute_tolerance (float, optional) – Absolute distance tolerance between nodes or edges for repair edges operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsParams.html#createintersectionedgeloopsparams","title":"CreateIntersectionEdgeLoopsParams","text":"CreateIntersectionEdgeLoopsParams\n\n\n\nclass ansys.meshing.prime.autogen.featureextractionstructs.CreateIntersectionEdgeLoopsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, label_name: str = None, json_data: dict = None, **kwargs)\n\nParameters used to calculate edge loops created by intersection of two groups of face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateIntersectionEdgeLoopsParams object with default parameters.\n\nlabel_name (str, optional) – Label name to be assigned to extracted features.\n\njson_data (dict, optional) – JSON dictionary to create a CreateIntersectionEdgeLoopsParams object with provided parameters.\n\nExamples\n\n>>> create_intersection_edge_loops_params = prime.CreateIntersectionEdgeLoopsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsParams.html#overview","title":"CreateIntersectionEdgeLoopsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nlabel_name\n\nLabel name to be assigned to extracted features.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateIntersectionEdgeLoopsParams object.\n\nset_default\n\nSet the default values of the CreateIntersectionEdgeLoopsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsParams.html#import-detail","title":"CreateIntersectionEdgeLoopsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsParams.html#property-detail","title":"CreateIntersectionEdgeLoopsParams > Property detail","text":"Property detail\n\n\n\nproperty CreateIntersectionEdgeLoopsParams.label_name: str\n\nLabel name to be assigned to extracted features."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsParams.html#method-detail","title":"CreateIntersectionEdgeLoopsParams > Method detail","text":"Method detail\n\n\n\nCreateIntersectionEdgeLoopsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateIntersectionEdgeLoopsParams.__str__() -> str\n\n\n\n\n\nstatic CreateIntersectionEdgeLoopsParams.print_default()\n\nPrint the default values of CreateIntersectionEdgeLoopsParams object.\n\nExamples\n\n>>> CreateIntersectionEdgeLoopsParams.print_default()\n\n\n\nstatic CreateIntersectionEdgeLoopsParams.set_default(label_name: str = None)\n\nSet the default values of the CreateIntersectionEdgeLoopsParams object.\n\nParameters\n\nlabel_name (str, optional) – Label name to be assigned to extracted features."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/quadtospline/QuadToSpline.html#quadtospline","title":"QuadToSpline","text":"QuadToSpline\n\n\n\nclass ansys.meshing.prime.autogen.quadtospline.QuadToSpline(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nConverts all-quad mesh to spline.\n\nParameters\n\nmodel (Model) – Server model to create QuadToSpline object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/quadtospline/QuadToSpline.html#overview","title":"QuadToSpline > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nconvert_quad_to_spline\n\nConverts fully quad mesh with topology to spline with the given conversion parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for QuadToSpline.\n\n__exit__\n\nExit context for QuadToSpline.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/quadtospline/QuadToSpline.html#import-detail","title":"QuadToSpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/quadtospline/QuadToSpline.html#method-detail","title":"QuadToSpline > Method detail","text":"Method detail\n\n\n\nQuadToSpline.__enter__()\n\nEnter context for QuadToSpline.\n\n\n\nQuadToSpline.__exit__(type, value, traceback)\n\nExit context for QuadToSpline.\n\n\n\nQuadToSpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nQuadToSpline.convert_quad_to_spline(input_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition, quad_to_spline_params: ansys.meshing.prime.params.primestructs.QuadToSplineParams) -> ansys.meshing.prime.params.primestructs.IGAResults\n\nConverts fully quad mesh with topology to spline with the given conversion parameters.\n\nParameters\n\ninput_scope (ScopeDefinition) – Scope definition for input quad mesh.\n\nquad_to_spline_params (QuadToSplineParams) – Parameters to convert quad to spline.\n\nReturns\n\nReturns the IGAResults structure.\n\nReturn type\n\nIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = quadToSpline.convert_quad_to_spline(input_scope, quad_to_spline_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadReaderRoute.html#cadreaderroute","title":"CadReaderRoute","text":"CadReaderRoute\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.CadReaderRoute\n\nCAD Reader routes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadReaderRoute.html#overview","title":"CadReaderRoute > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDISCOVERY\n\nDenotes Discovery as CAD reader route.\n\nNATIVE\n\nDenotes native CAD reader route.\n\nPROGRAMCONTROLLED\n\nDenotes program controlled CAD reader route.\n\nSPACECLAIM\n\nDenotes SpaceClaim as CAD reader route.\n\nWORKBENCH\n\nDenotes WorkBench as CAD reader route."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadReaderRoute.html#import-detail","title":"CadReaderRoute > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadReaderRoute.html#attribute-detail","title":"CadReaderRoute > Attribute detail","text":"Attribute detail\n\n\n\nCadReaderRoute.DISCOVERY = 4\n\nDenotes Discovery as CAD reader route.\n\n\n\nCadReaderRoute.NATIVE = 1\n\nDenotes native CAD reader route.\n\n\n\nCadReaderRoute.PROGRAMCONTROLLED = 0\n\nDenotes program controlled CAD reader route.\n\n\n\nCadReaderRoute.SPACECLAIM = 3\n\nDenotes SpaceClaim as CAD reader route.\n\n\n\nCadReaderRoute.WORKBENCH = 2\n\nDenotes WorkBench as CAD reader route."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/index.html#the-partstructspy-module","title":"The partstructs.py module","text":"The partstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/index.html#summary","title":"The partstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAddLabelResults\n\nResults associated with the add label operation.\n\nAddToZoneResults\n\nResults associated with the add to zone operation.\n\nBodyQueryType\n\nIndicates type of entity to query in part.\n\nBoundingBox\n\nProvides information about the definition of a bounding box.\n\nCellZoneletType\n\nTypes of cell zonelet.\n\nComponentChildrenParams\n\nParameters associated with querying child components.\n\nComponentChildrenResults\n\nResults associated with querying child components.\n\nComputeTopoVolumesResults\n\nResults associated with compute topovolumes.\n\nComputeVolumesParams\n\nParameters to compute volumes.\n\nComputeVolumesResults\n\nResults associated with compute volumes.\n\nCreateVolumeZonesType\n\nIndicate type to create volume zones for volumes.\n\nDeleteTopoEntitiesParams\n\nParameters to control delete topoentities.\n\nDeleteTopoEntitiesResults\n\nResults associated with delete topoentities.\n\nDeleteVolumesParams\n\nParameters to delete volumes.\n\nDeleteVolumesResults\n\nResults associated with delete volumes operation.\n\nExtractTopoVolumesParams\n\nParameters to extract flow topovolumes.\n\nExtractTopoVolumesResults\n\nParameters to extract flow topovolumes.\n\nExtractVolumesParams\n\nParameters to extract flow volumes.\n\nExtractVolumesResults\n\nResults associated with compute volumes.\n\nMergeVolumesParams\n\nParameters to merge volumes.\n\nMergeVolumesResults\n\nResults associated with merge volumes operation.\n\nMergeZoneletsParams\n\nParameters to merge zonelets.\n\nMergeZoneletsResults\n\nResults associated with merge zonelets.\n\nNamePatternParams\n\nParameters to be used to match name pattern with names.\n\nPartSummaryParams\n\nParameters to control part summary results.\n\nPartSummaryResults\n\nResults of part summary.\n\nRemoveLabelResults\n\nResults associated with the remove label operation.\n\nRemoveZoneResults\n\nResults associated with the remove zone operation.\n\nVolumeNamingType\n\nIndicate source types used to name volume zones.\n\nZoneType\n\nZoneType decides the type of zone.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/index.html#description","title":"The partstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_pcb_scdoc.html#ansysmeshingprimeexamplesdownload_pcb_scdoc","title":"ansys.meshing.prime.examples.download_pcb_scdoc","text":"ansys.meshing.prime.examples.download_pcb_scdoc\n\n\n\nansys.meshing.prime.examples.download_pcb_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload SCDOC file for the pcb example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pcb = prime_examples.download_pcb_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pcb, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByInvalidNormalsResults.html#searchbyinvalidnormalsresults","title":"SearchByInvalidNormalsResults","text":"SearchByInvalidNormalsResults\n\n\n\nclass ansys.meshing.prime.SearchByInvalidNormalsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with search invalid normals operation.\n\nParameters\n\nmodel (Model) – Model to create a SearchByInvalidNormalsResults object with default parameters.\n\nn_found (int, optional) – Number of invalid normals identified.\n\nerror_code (ErrorCode, optional) – Error code associated with search invalid normals operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByInvalidNormalsResults object with provided parameters.\n\nExamples\n\n>>> search_by_invalid_normals_results = prime.SearchByInvalidNormalsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByInvalidNormalsResults.html#overview","title":"SearchByInvalidNormalsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search invalid normals operation.\n\nn_found\n\nNumber of invalid normals identified.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByInvalidNormalsResults object.\n\nset_default\n\nSet the default values of the SearchByInvalidNormalsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByInvalidNormalsResults.html#import-detail","title":"SearchByInvalidNormalsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByInvalidNormalsResults.html#property-detail","title":"SearchByInvalidNormalsResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByInvalidNormalsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search invalid normals operation.\n\n\n\nproperty SearchByInvalidNormalsResults.n_found: int\n\nNumber of invalid normals identified."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByInvalidNormalsResults.html#method-detail","title":"SearchByInvalidNormalsResults > Method detail","text":"Method detail\n\n\n\nSearchByInvalidNormalsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByInvalidNormalsResults.__str__() -> str\n\n\n\n\n\nstatic SearchByInvalidNormalsResults.print_default()\n\nPrint the default values of SearchByInvalidNormalsResults object.\n\nExamples\n\n>>> SearchByInvalidNormalsResults.print_default()\n\n\n\nstatic SearchByInvalidNormalsResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchByInvalidNormalsResults object.\n\nParameters\n\nn_found (int, optional) – Number of invalid normals identified.\n\nerror_code (ErrorCode, optional) – Error code associated with search invalid normals operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSpline.html#trimmedspline","title":"TrimmedSpline","text":"TrimmedSpline\n\n\n\nclass ansys.meshing.prime.TrimmedSpline(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nHandles creation and meshing of trimmed spline.\n\nParameters\n\nmodel (Model) – Server model to create TrimmedSpline object."},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSpline.html#overview","title":"TrimmedSpline > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_tet_mesh_on_trimmed_solid_spline\n\nCreates tetrahedral mesh on trimmed solid spline.\n\ncreate_trimmed_uniform_solid_spline_by_brep_mapping\n\nCreates uniform solid spline and maps the CAD geometry in its parametric space.\n\nrefine_tet_mesh\n\nRefines tetrahedral mesh.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for TrimmedSpline.\n\n__exit__\n\nExit context for TrimmedSpline.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSpline.html#import-detail","title":"TrimmedSpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TrimmedSpline.html#method-detail","title":"TrimmedSpline > Method detail","text":"Method detail\n\n\n\nTrimmedSpline.__enter__()\n\nEnter context for TrimmedSpline.\n\n\n\nTrimmedSpline.__exit__(type, value, traceback)\n\nExit context for TrimmedSpline.\n\n\n\nTrimmedSpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTrimmedSpline.create_tet_mesh_on_trimmed_solid_spline(part_id: int, mesh_params: ansys.meshing.prime.params.primestructs.TetMeshSplineParams) -> ansys.meshing.prime.params.primestructs.TrimmedSplineResults\n\nCreates tetrahedral mesh on trimmed solid spline.\n\nParameters\n\npart_id (int) – Part on which the tetrahedral meshing is performed.\n\nmesh_params (TetMeshSplineParams) – Parameters to configure the meshing.\n\nReturns\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.CreateTetMeshOnTrimmedSolidSpline(part_id, mesh_params)\n\n\n\nTrimmedSpline.create_trimmed_uniform_solid_spline_by_brep_mapping(part_id: int, spline_params: ansys.meshing.prime.params.primestructs.UniformSolidSplineCreationParams) -> ansys.meshing.prime.params.primestructs.TrimmedSplineResults\n\nCreates uniform solid spline and maps the CAD geometry in its parametric space.\n\nParameters\n\npart_id (int) – Part on which the spline is to be created.\n\nspline_params (UniformSolidSplineCreationParams) – Parameters used to create the spline.\n\nReturns\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.CreateTrimmedUniformSolidSplineByBrepMapping(part_id, spline_params)\n\n\n\nTrimmedSpline.refine_tet_mesh(part_id: int, refine_params: ansys.meshing.prime.params.primestructs.RefineTetMeshParams) -> ansys.meshing.prime.params.primestructs.TrimmedSplineResults\n\nRefines tetrahedral mesh.\n\nParameters\n\npart_id (int) – Part on which mesh refinement is performed.\n\nrefine_params (RefineTetMeshParams) – Parameters to configure mesh refinement.\n\nReturns\n\nReturns the TrimmedSplineResults.\n\nReturn type\n\nTrimmedSplineResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = trimmedSpline.RefineTetMesh(part_id, refine_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsResult.html#wrapperpatchflowregionsresult","title":"WrapperPatchFlowRegionsResult","text":"WrapperPatchFlowRegionsResult\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapperPatchFlowRegionsResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, id: int = None, name: str = None, json_data: dict = None, **kwargs)\n\nResult structure associated with patch holes operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapperPatchFlowRegionsResult object with default parameters.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the patch holes operation.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with a patch holes operation.This is a beta parameter. The behavior and name may change in the future.\n\nid (int, optional) – Id of part created with hole patches.This is a beta parameter. The behavior and name may change in the future.\n\nname (str, optional) – Name of part created with hole patches.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperPatchFlowRegionsResult object with provided parameters.\n\nExamples\n\n>>> wrapper_patch_flow_regions_result = prime.WrapperPatchFlowRegionsResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsResult.html#overview","title":"WrapperPatchFlowRegionsResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a patch holes operation.\n\nid\n\nId of part created with hole patches.\n\nname\n\nName of part created with hole patches.\n\nwarning_codes\n\nWarning codes associated with the patch holes operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperPatchFlowRegionsResult object.\n\nset_default\n\nSet the default values of the WrapperPatchFlowRegionsResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsResult.html#import-detail","title":"WrapperPatchFlowRegionsResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsResult.html#property-detail","title":"WrapperPatchFlowRegionsResult > Property detail","text":"Property detail\n\n\n\nproperty WrapperPatchFlowRegionsResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a patch holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsResult.id: int\n\nId of part created with hole patches.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsResult.name: str\n\nName of part created with hole patches.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsResult.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the patch holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperPatchFlowRegionsResult.html#method-detail","title":"WrapperPatchFlowRegionsResult > Method detail","text":"Method detail\n\n\n\nWrapperPatchFlowRegionsResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperPatchFlowRegionsResult.__str__() -> str\n\n\n\n\n\nstatic WrapperPatchFlowRegionsResult.print_default()\n\nPrint the default values of WrapperPatchFlowRegionsResult object.\n\nExamples\n\n>>> WrapperPatchFlowRegionsResult.print_default()\n\n\n\nstatic WrapperPatchFlowRegionsResult.set_default(warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, id: int = None, name: str = None)\n\nSet the default values of the WrapperPatchFlowRegionsResult object.\n\nParameters\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the patch holes operation.\n\nerror_code (ErrorCode, optional) – Error code associated with a patch holes operation.\n\nid (int, optional) – Id of part created with hole patches.\n\nname (str, optional) – Name of part created with hole patches."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/WriteSizeFieldParams.html#writesizefieldparams","title":"WriteSizeFieldParams","text":"WriteSizeFieldParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.WriteSizeFieldParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, write_only_active_size_fields: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to write size field file.\n\nParameters\n\nmodel (Model) – Model to create a WriteSizeFieldParams object with default parameters.\n\nwrite_only_active_size_fields (bool, optional) – Option to write only active size fields into the file.\n\njson_data (dict, optional) – JSON dictionary to create a WriteSizeFieldParams object with provided parameters.\n\nExamples\n\n>>> write_size_field_params = prime.WriteSizeFieldParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/WriteSizeFieldParams.html#overview","title":"WriteSizeFieldParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nwrite_only_active_size_fields\n\nOption to write only active size fields into the file.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WriteSizeFieldParams object.\n\nset_default\n\nSet the default values of the WriteSizeFieldParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/WriteSizeFieldParams.html#import-detail","title":"WriteSizeFieldParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/WriteSizeFieldParams.html#property-detail","title":"WriteSizeFieldParams > Property detail","text":"Property detail\n\n\n\nproperty WriteSizeFieldParams.write_only_active_size_fields: bool\n\nOption to write only active size fields into the file."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/WriteSizeFieldParams.html#method-detail","title":"WriteSizeFieldParams > Method detail","text":"Method detail\n\n\n\nWriteSizeFieldParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWriteSizeFieldParams.__str__() -> str\n\n\n\n\n\nstatic WriteSizeFieldParams.print_default()\n\nPrint the default values of WriteSizeFieldParams object.\n\nExamples\n\n>>> WriteSizeFieldParams.print_default()\n\n\n\nstatic WriteSizeFieldParams.set_default(write_only_active_size_fields: bool = None)\n\nSet the default values of the WriteSizeFieldParams object.\n\nParameters\n\nwrite_only_active_size_fields (bool, optional) – Option to write only active size fields into the file."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferParams.html#localsurferparams","title":"LocalSurferParams","text":"LocalSurferParams\n\n\n\nclass ansys.meshing.prime.autogen.surferstructs.LocalSurferParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min_angle: float = None, max_angle: float = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, min_size: float = None, max_size: float = None, growth_rate: float = None, constant_size: float = None, smooth_boundary: bool = None, n_rings: int = None, json_data: dict = None, **kwargs)\n\nParameters to perform local surface remeshing.\n\nParameters\n\nmodel (Model) – Model to create a LocalSurferParams object with default parameters.\n\nmin_angle (float, optional) – Minimum feature angle limit used to identify and preserve features.\n\nmax_angle (float, optional) – Maximum feature angle limit used to identify and preserve features.\n\nsize_field_type (SizeFieldType, optional) – Size field type used to generate surface mesh.\n\nmin_size (float, optional) – Minimum size to be used in sizing for the surfer.\n\nmax_size (float, optional) – Maximum size to be used in sizing for the surfer.\n\ngrowth_rate (float, optional) – Growth rate to be used to propagate sizes.\n\nconstant_size (float, optional) – Constant size to be used in case of constant size field.\n\nsmooth_boundary (bool, optional) – Option to extend local selection to get smooth boundary of selected elements.\n\nn_rings (int, optional) – Number of rings to extend the registered face selection for remeshing.\n\njson_data (dict, optional) – JSON dictionary to create a LocalSurferParams object with provided parameters.\n\nExamples\n\n>>> local_surfer_params = prime.LocalSurferParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferParams.html#overview","title":"LocalSurferParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nconstant_size\n\nConstant size to be used in case of constant size field.\n\ngrowth_rate\n\nGrowth rate to be used to propagate sizes.\n\nmax_angle\n\nMaximum feature angle limit used to identify and preserve features.\n\nmax_size\n\nMaximum size to be used in sizing for the surfer.\n\nmin_angle\n\nMinimum feature angle limit used to identify and preserve features.\n\nmin_size\n\nMinimum size to be used in sizing for the surfer.\n\nn_rings\n\nNumber of rings to extend the registered face selection for remeshing.\n\nsize_field_type\n\nSize field type used to generate surface mesh.\n\nsmooth_boundary\n\nOption to extend local selection to get smooth boundary of selected elements.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of LocalSurferParams object.\n\nset_default\n\nSet the default values of the LocalSurferParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferParams.html#import-detail","title":"LocalSurferParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferParams.html#property-detail","title":"LocalSurferParams > Property detail","text":"Property detail\n\n\n\nproperty LocalSurferParams.constant_size: float\n\nConstant size to be used in case of constant size field.\n\n\n\nproperty LocalSurferParams.growth_rate: float\n\nGrowth rate to be used to propagate sizes.\n\n\n\nproperty LocalSurferParams.max_angle: float\n\nMaximum feature angle limit used to identify and preserve features.\n\n\n\nproperty LocalSurferParams.max_size: float\n\nMaximum size to be used in sizing for the surfer.\n\n\n\nproperty LocalSurferParams.min_angle: float\n\nMinimum feature angle limit used to identify and preserve features.\n\n\n\nproperty LocalSurferParams.min_size: float\n\nMinimum size to be used in sizing for the surfer.\n\n\n\nproperty LocalSurferParams.n_rings: int\n\nNumber of rings to extend the registered face selection for remeshing.\n\n\n\nproperty LocalSurferParams.size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nSize field type used to generate surface mesh.\n\n\n\nproperty LocalSurferParams.smooth_boundary: bool\n\nOption to extend local selection to get smooth boundary of selected elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferParams.html#method-detail","title":"LocalSurferParams > Method detail","text":"Method detail\n\n\n\nLocalSurferParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nLocalSurferParams.__str__() -> str\n\n\n\n\n\nstatic LocalSurferParams.print_default()\n\nPrint the default values of LocalSurferParams object.\n\nExamples\n\n>>> LocalSurferParams.print_default()\n\n\n\nstatic LocalSurferParams.set_default(min_angle: float = None, max_angle: float = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, min_size: float = None, max_size: float = None, growth_rate: float = None, constant_size: float = None, smooth_boundary: bool = None, n_rings: int = None)\n\nSet the default values of the LocalSurferParams object.\n\nParameters\n\nmin_angle (float, optional) – Minimum feature angle limit used to identify and preserve features.\n\nmax_angle (float, optional) – Maximum feature angle limit used to identify and preserve features.\n\nsize_field_type (SizeFieldType, optional) – Size field type used to generate surface mesh.\n\nmin_size (float, optional) – Minimum size to be used in sizing for the surfer.\n\nmax_size (float, optional) – Maximum size to be used in sizing for the surfer.\n\ngrowth_rate (float, optional) – Growth rate to be used to propagate sizes.\n\nconstant_size (float, optional) – Constant size to be used in case of constant size field.\n\nsmooth_boundary (bool, optional) – Option to extend local selection to get smooth boundary of selected elements.\n\nn_rings (int, optional) – Number of rings to extend the registered face selection for remeshing."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryParams.html#volumequalitysummaryparams","title":"VolumeQualitySummaryParams","text":"VolumeQualitySummaryParams\n\n\n\nclass ansys.meshing.prime.VolumeQualitySummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cell_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.CellQualityMeasure] = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nParameters to control volume quality summary results.\n\nParameters\n\nmodel (Model) – Model to create a VolumeQualitySummaryParams object with default parameters.\n\ncell_quality_measures (List[CellQualityMeasure], optional) – List of cell quality measures for volume quality diagnostics.\n\nscope (ScopeDefinition, optional) – Scope of the cell zonelets for volume quality diagnostics.\n\nquality_limit (Iterable[float], optional) – Quality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeQualitySummaryParams object with provided parameters.\n\nExamples\n\n>>> volume_quality_summary_params = prime.VolumeQualitySummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryParams.html#overview","title":"VolumeQualitySummaryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncell_quality_measures\n\nList of cell quality measures for volume quality diagnostics.\n\nquality_limit\n\nQuality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used.\n\nscope\n\nScope of the cell zonelets for volume quality diagnostics.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeQualitySummaryParams object.\n\nset_default\n\nSet the default values of the VolumeQualitySummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryParams.html#import-detail","title":"VolumeQualitySummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryParams.html#property-detail","title":"VolumeQualitySummaryParams > Property detail","text":"Property detail\n\n\n\nproperty VolumeQualitySummaryParams.cell_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.CellQualityMeasure]\n\nList of cell quality measures for volume quality diagnostics.\n\n\n\nproperty VolumeQualitySummaryParams.quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nQuality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used.\n\n\n\nproperty VolumeQualitySummaryParams.scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope of the cell zonelets for volume quality diagnostics."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryParams.html#method-detail","title":"VolumeQualitySummaryParams > Method detail","text":"Method detail\n\n\n\nVolumeQualitySummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeQualitySummaryParams.__str__() -> str\n\n\n\n\n\nstatic VolumeQualitySummaryParams.print_default()\n\nPrint the default values of VolumeQualitySummaryParams object.\n\nExamples\n\n>>> VolumeQualitySummaryParams.print_default()\n\n\n\nstatic VolumeQualitySummaryParams.set_default(cell_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.CellQualityMeasure] = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the VolumeQualitySummaryParams object.\n\nParameters\n\ncell_quality_measures (List[CellQualityMeasure], optional) – List of cell quality measures for volume quality diagnostics.\n\nscope (ScopeDefinition, optional) – Scope of the cell zonelets for volume quality diagnostics.\n\nquality_limit (Iterable[float], optional) – Quality limit per cell quality measure. If the quality limit is not specified, the default quality limit is used."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingMaxEdgeSizeLimit.html#cadrefacetingmaxedgesizelimit","title":"CadRefacetingMaxEdgeSizeLimit","text":"CadRefacetingMaxEdgeSizeLimit\n\n\n\nclass ansys.meshing.prime.CadRefacetingMaxEdgeSizeLimit\n\nTypes of maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingMaxEdgeSizeLimit.html#overview","title":"CadRefacetingMaxEdgeSizeLimit > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nABSOLUTE\n\nDenotes absolute maximum edge size limit for CAD faceting.\n\nNONE\n\nDenotes no maximum edge size limit for CAD faceting.\n\nRELATIVE\n\nDenotes relative maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingMaxEdgeSizeLimit.html#import-detail","title":"CadRefacetingMaxEdgeSizeLimit > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingMaxEdgeSizeLimit.html#attribute-detail","title":"CadRefacetingMaxEdgeSizeLimit > Attribute detail","text":"Attribute detail\n\n\n\nCadRefacetingMaxEdgeSizeLimit.ABSOLUTE = 1\n\nDenotes absolute maximum edge size limit for CAD faceting.\n\n\n\nCadRefacetingMaxEdgeSizeLimit.NONE = 0\n\nDenotes no maximum edge size limit for CAD faceting.\n\n\n\nCadRefacetingMaxEdgeSizeLimit.RELATIVE = 2\n\nDenotes relative maximum edge size limit for CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusParams.html#importabaqusparams","title":"ImportAbaqusParams","text":"ImportAbaqusParams\n\n\n\nclass ansys.meshing.prime.ImportAbaqusParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters for importing Abaqus solver input files.\n\nParameters\n\nmodel (Model) – Model to create a ImportAbaqusParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ImportAbaqusParams object with provided parameters.\n\nExamples\n\n>>> import_abaqus_params = prime.ImportAbaqusParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusParams.html#overview","title":"ImportAbaqusParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportAbaqusParams object.\n\nset_default\n\nSet the default values of the ImportAbaqusParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusParams.html#import-detail","title":"ImportAbaqusParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusParams.html#method-detail","title":"ImportAbaqusParams > Method detail","text":"Method detail\n\n\n\nImportAbaqusParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportAbaqusParams.__str__() -> str\n\n\n\n\n\nstatic ImportAbaqusParams.print_default()\n\nPrint the default values of ImportAbaqusParams object.\n\nExamples\n\n>>> ImportAbaqusParams.print_default()\n\n\n\nstatic ImportAbaqusParams.set_default()\n\nSet the default values of the ImportAbaqusParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsResults.html#mergezoneletsresults","title":"MergeZoneletsResults","text":"MergeZoneletsResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.MergeZoneletsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merged_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with merge zonelets.\n\nParameters\n\nmodel (Model) – Model to create a MergeZoneletsResults object with default parameters.\n\nmerged_zonelets (Iterable[int], optional) – Ids of zonelets to which input zonelets are merged.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a MergeZoneletsResults object with provided parameters.\n\nExamples\n\n>>> merge_zonelets_results = prime.MergeZoneletsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsResults.html#overview","title":"MergeZoneletsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nmerged_zonelets\n\nIds of zonelets to which input zonelets are merged.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeZoneletsResults object.\n\nset_default\n\nSet the default values of the MergeZoneletsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsResults.html#import-detail","title":"MergeZoneletsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsResults.html#property-detail","title":"MergeZoneletsResults > Property detail","text":"Property detail\n\n\n\nproperty MergeZoneletsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty MergeZoneletsResults.merged_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of zonelets to which input zonelets are merged."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsResults.html#method-detail","title":"MergeZoneletsResults > Method detail","text":"Method detail\n\n\n\nMergeZoneletsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeZoneletsResults.__str__() -> str\n\n\n\n\n\nstatic MergeZoneletsResults.print_default()\n\nPrint the default values of MergeZoneletsResults object.\n\nExamples\n\n>>> MergeZoneletsResults.print_default()\n\n\n\nstatic MergeZoneletsResults.set_default(merged_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the MergeZoneletsResults object.\n\nParameters\n\nmerged_zonelets (Iterable[int], optional) – Ids of zonelets to which input zonelets are merged.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesher.html#autoquadmesher","title":"AutoQuadMesher","text":"AutoQuadMesher\n\n\n\nclass ansys.meshing.prime.AutoQuadMesher(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nGenerate full quad mesh.\n\nParameters\n\nmodel (Model) – Server model to create AutoQuadMesher object."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesher.html#overview","title":"AutoQuadMesher > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncheck_topology\n\nCheck topology for inconsistencies with the given parameters.\n\ndefeature_topology\n\nDefeature topology with given parameters.\n\ndetect_and_treat_features\n\nDetect features in topology and treat them with given parameters.\n\noptimize_quad_mesh\n\nOptimize quad faces with given parameters.\n\nrepair_topology\n\nRepair topology with given parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for AutoQuadMesher.\n\n__exit__\n\nExit context for AutoQuadMesher.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesher.html#import-detail","title":"AutoQuadMesher > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoQuadMesher.html#method-detail","title":"AutoQuadMesher > Method detail","text":"Method detail\n\n\n\nAutoQuadMesher.__enter__()\n\nEnter context for AutoQuadMesher.\n\n\n\nAutoQuadMesher.__exit__(type, value, traceback)\n\nExit context for AutoQuadMesher.\n\n\n\nAutoQuadMesher.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoQuadMesher.check_topology(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CheckTopologyParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nCheck topology for inconsistencies with the given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (CheckTopologyParams) – Parameters of check topology.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.check_topology(part_id, topo_face_ids, params);\n\n\n\nAutoQuadMesher.defeature_topology(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DefeatureTopologyParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nDefeature topology with given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (DefeatureTopologyParams) – Parameters of defeature topology.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.defeature_topology(part_id, topo_face_ids, params);\n\n\n\nAutoQuadMesher.detect_and_treat_features(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DetectAndTreatFeaturesParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nDetect features in topology and treat them with given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (DetectAndTreatFeaturesParams) – Parameters of detect and treat features.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.detect_and_treat_features(part_id, topo_face_ids, params);\n\n\n\nAutoQuadMesher.optimize_quad_mesh(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.OptimizeQuadMeshParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nOptimize quad faces with given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (OptimizeQuadMeshParams) – Parameters of optimize quad mesh.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.optimize_quad_mesh(part_id, topo_face_ids, params);\n\n\n\nAutoQuadMesher.repair_topology(part_id: int, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.RepairTopologyParams) -> ansys.meshing.prime.params.primestructs.AutoQuadMesherResults\n\nRepair topology with given parameters.\n\nParameters\n\npart_id (int) – Id of the Part.\n\ntopo_face_ids (Iterable[int]) – Ids of topofaces.\n\nparams (RepairTopologyParams) – Parameters of repair topology.\n\nReturns\n\nReturns the AutoQuadMesherResults structure.\n\nReturn type\n\nAutoQuadMesherResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> autoQuadMesher = AutoQuadMesher(model=model)\n>>> results = autoQuadMesher.repair_topology(part_id, topo_face_ids, params);"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrol/PeriodicControl.html#periodiccontrol","title":"PeriodicControl","text":"PeriodicControl\n\n\n\nclass ansys.meshing.prime.autogen.periodiccontrol.PeriodicControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nPeriodic controls provide settings for the recovery of periodic surfaces.\n\nA periodic control is specified by the scope (source surfaces) and the transformation parameters: the center, axis and angle.\n\nParameters\n\nmodel (Model) – Server model to create PeriodicControl object.\n\nid (int) – Id of the PeriodicControl.\n\nobject_id (int) – Object id of the PeriodicControl.\n\nname (str) – Name of the PeriodicControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrol/PeriodicControl.html#overview","title":"PeriodicControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_params\n\nGet the parameters of the periodic control.\n\nget_scope\n\nGets the scope for the periodic control.\n\nget_summary\n\nGet the periodic control summary along with the evaluated scope for the provided parameters.\n\nset_params\n\nSet the periodic control parameters.\n\nset_scope\n\nSets the scope for periodic control to evaluate.\n\nset_suggested_name\n\nSets the unique name for the periodic control based on the suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of PeriodicControl.\n\nname\n\nGet the name of PeriodicControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrol/PeriodicControl.html#import-detail","title":"PeriodicControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrol/PeriodicControl.html#property-detail","title":"PeriodicControl > Property detail","text":"Property detail\n\n\n\nproperty PeriodicControl.id\n\nGet the id of PeriodicControl.\n\n\n\nproperty PeriodicControl.name\n\nGet the name of PeriodicControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrol/PeriodicControl.html#method-detail","title":"PeriodicControl > Method detail","text":"Method detail\n\n\n\nPeriodicControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControl.get_params() -> ansys.meshing.prime.params.primestructs.PeriodicControlParams\n\nGet the parameters of the periodic control.\n\nReturns\n\nReturn parameters of the periodic control.\n\nReturn type\n\nPeriodicControlParams\n\nExamples\n\n>>> params = periodic_control.get_params()\n\n\n\nPeriodicControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the scope for the periodic control.\n\nReturns\n\nReturns the scope of the periodic control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope_definition = periodic_control.get_scope()\n\n\n\nPeriodicControl.get_summary(params: ansys.meshing.prime.params.primestructs.PeriodicControlSummaryParams) -> ansys.meshing.prime.params.primestructs.PeriodicControlSummaryResult\n\nGet the periodic control summary along with the evaluated scope for the provided parameters.\n\nParameters\n\nparams (PeriodicControlSummaryParams) – Periodic control summary parameters.\n\nReturns\n\nReturn the PeriodicControlSummaryResult.\n\nReturn type\n\nPeriodicControlSummaryResult\n\nExamples\n\n>>> results = periodic_control.get_summary(prime.PeriodicControlSummaryParams(model=model))\n\n\n\nPeriodicControl.set_params(periodic_control_params: ansys.meshing.prime.params.primestructs.PeriodicControlParams) -> ansys.meshing.prime.params.primestructs.SetParamsResults\n\nSet the periodic control parameters.\n\nParameters\n\nperiodic_control_params (PeriodicControlParams) – Parameters to control periodic surface recovery.\n\nExamples\n\n>>> periodic_control.set_params(\n>>>                  PeriodicControlParams(model=model,\n>>>                     center=[0,0,0], axis=[0,1,0], angle=180))\n\n\n\nPeriodicControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the scope for periodic control to evaluate.\n\nPeriodic Control uses scope to evaluate entities for which periodic surface recovery must be carried out.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for periodic surface recovery.\n\nReturns\n\nReturns the SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> surface_scope = prime.ScopeDefinition(model=model,\n>>>                     entity_type=prime.ScopeEntity.FACEZONELETS,\n>>>                     evaluation_type=prime.ScopeEvaluationType.LABELS,\n>>>                     label_expression=\"periodic-1\")\n>>> periodic_control.set_scope(surface_scope)\n\n\n\nPeriodicControl.set_suggested_name(name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for the periodic control based on the suggested name.\n\nParameters\n\nname (str) – Suggested name for the periodic control.\n\nReturns\n\nReturns the name of the periodic control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> periodic_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrol/index.html#the-shellblcontrolpy-module","title":"The shellblcontrol.py module","text":"The shellblcontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrol/index.html#summary","title":"The shellblcontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nShellBLControl\n\nShellBLControl allows you to generate quad mesh on face zonelets.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrol/index.html#description","title":"The shellblcontrol.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveResult.html#wrapperimproveresult","title":"WrapperImproveResult","text":"WrapperImproveResult\n\n\n\nclass ansys.meshing.prime.WrapperImproveResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_skew_found: int = None, remaining_skew_faces: int = None, n_face_intersections_found: int = None, unresolved_face_intersections: int = None, json_data: dict = None, **kwargs)\n\nResults structure associated to improve quality.\n\nParameters\n\nmodel (Model) – Model to create a WrapperImproveResult object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrapper operation.\n\nn_skew_found (int, optional) – Number of skewed faces found.\n\nremaining_skew_faces (int, optional) – Number of remaining skew faces.\n\nn_face_intersections_found (int, optional) – Number of self intersections found.\n\nunresolved_face_intersections (int, optional) – Number of remaining self intersections.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperImproveResult object with provided parameters.\n\nExamples\n\n>>> wrapper_improve_result = prime.WrapperImproveResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveResult.html#overview","title":"WrapperImproveResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a wrapper operation.\n\nn_face_intersections_found\n\nNumber of self intersections found.\n\nn_skew_found\n\nNumber of skewed faces found.\n\nremaining_skew_faces\n\nNumber of remaining skew faces.\n\nunresolved_face_intersections\n\nNumber of remaining self intersections.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperImproveResult object.\n\nset_default\n\nSet the default values of the WrapperImproveResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveResult.html#import-detail","title":"WrapperImproveResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveResult.html#property-detail","title":"WrapperImproveResult > Property detail","text":"Property detail\n\n\n\nproperty WrapperImproveResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a wrapper operation.\n\n\n\nproperty WrapperImproveResult.n_face_intersections_found: int\n\nNumber of self intersections found.\n\n\n\nproperty WrapperImproveResult.n_skew_found: int\n\nNumber of skewed faces found.\n\n\n\nproperty WrapperImproveResult.remaining_skew_faces: int\n\nNumber of remaining skew faces.\n\n\n\nproperty WrapperImproveResult.unresolved_face_intersections: int\n\nNumber of remaining self intersections."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveResult.html#method-detail","title":"WrapperImproveResult > Method detail","text":"Method detail\n\n\n\nWrapperImproveResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperImproveResult.__str__() -> str\n\n\n\n\n\nstatic WrapperImproveResult.print_default()\n\nPrint the default values of WrapperImproveResult object.\n\nExamples\n\n>>> WrapperImproveResult.print_default()\n\n\n\nstatic WrapperImproveResult.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_skew_found: int = None, remaining_skew_faces: int = None, n_face_intersections_found: int = None, unresolved_face_intersections: int = None)\n\nSet the default values of the WrapperImproveResult object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with a wrapper operation.\n\nn_skew_found (int, optional) – Number of skewed faces found.\n\nremaining_skew_faces (int, optional) – Number of remaining skew faces.\n\nn_face_intersections_found (int, optional) – Number of self intersections found.\n\nunresolved_face_intersections (int, optional) – Number of remaining self intersections."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#convert-data-when-importing-and-exporting-mesh-and-cad-formats","title":"Convert data when importing and exporting mesh and CAD formats","text":"Convert data when importing and exporting mesh and CAD formats\n\nSummary: This example shows how mesh and geometry formats are converted\nduring import and export."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#objective","title":"Convert data when importing and exporting mesh and CAD formats > Objective","text":"Objective\n\nThe objective is to illustrate how data is converted and passed during import\nand export of mesh and geometry."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#procedure","title":"Convert data when importing and exporting mesh and CAD formats > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance.\n\nInstantiate the meshing utilities from the lucid class.\n\nImport CAD geometry and review the imported entities.\n\nGenerate surface mesh with a constant mesh size of 2mm.\n\nGenerate volume mesh using tetrahedral elements and default settings .\n\nReview the entities to be exported to solvers.\n\nExport the mesh file as pmdat, cdb and cas format.\n\nImport the created solver files to review the entities as they are coming from the solvers.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#launch-ansys-prime-server","title":"Convert data when importing and exporting mesh and CAD formats > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules and\nlaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#import-geometry","title":"Convert data when importing and exporting mesh and CAD formats > Import geometry","text":"Import geometry\n\nDownload the CAD file “pyprime_block_import.fmd” and import its geometry\ninto PyPrimeMesh.\n\nDisplay part details by printing the model. The TopoPart’s\nname from model details is pyprime_block_import.\n\nAfter import of CAD model, within the topopart the facets from the CAD\nexists in the form of geom data. This can be seen in the image below.\n\nThe topology consists of the following TopoEntities , they are TopoEdges, TopoFaces\nand TopoVolumes.\n\nTopoEdge represent the curves/edges present in the CAD.\nIn this case there are 17 edges present in SpaceClaim are imported\nas 17 TopoEdges.\n\nTopoFace represent the surfaces/faces present in the CAD.\nThe 8 CAD Faces present in SpaceClaim are imported as 8 Topofaces in\nPyPrimeMesh.\n\nTopoVolume represent the solid volumes present in the CAD.\nSince there is only one solid body in SpaceClaim, this is imported as one Topovolume\nin PyPrimeMesh.\n\nNamed selections or groups in the CAD become labels after import. In this example ,\nthe Named Selection / Group named my_group in Spaceclaim is imported as a label\nin PyPrimeMesh.\n\nAfter CAD import the solid body, surface body or an edge body  present in SCDM would be defined\nas Volume Zones, Face Zones and Edge Zones in PyPrimeMesh. In the CAD model , there exist a\nsingle solid body named “solid” which after import becomes as a Volume Zone named solid.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#generate-mesh","title":"Convert data when importing and exporting mesh and CAD formats > Generate Mesh","text":"Generate Mesh\n\nThe topo part currently has no mesh associated with it and contains only\ngeometry.\n\nUsing the Lucid API surface_mesh, users can generate a conformal mesh on the topofaces.\nA conformal mesh with a constant mesh size of 2mm is generated. After mesh generation, the\nmesh data is available within the TopoPart.\n\nThis can be seen in the image below\n\nThe mesh for a group of topo faces labeled “my_group” is displayed by defining the\nlabel expression in the display scope. The Volume Mesh is generated keeping the volume fill\nas the default meshing algorithms.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#export-mesh-as-pyprimemesh-pmdat-native-format-mesh-file","title":"Convert data when importing and exporting mesh and CAD formats > Export mesh as PyPrimeMesh (.pmdat) native format mesh file","text":"Export mesh as PyPrimeMesh (.pmdat) native format mesh file\n\nPyPrimeMesh allows user to export mesh in its native format name pmdat.\nThis configuration allows retaining the topology data along with mesh data."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#export-mesh-as-ansys-mapdl-cdb-format-mesh-file","title":"Convert data when importing and exporting mesh and CAD formats > Export mesh as Ansys MAPDL (.cdb) format mesh file","text":"Export mesh as Ansys MAPDL (.cdb) format mesh file\n\nPyPrimeMesh allows export of mesh as Ansys MAPDL (.cdb) format mesh file. While exporting\nthe mesh to Ansys MAPDL, the labels present in session are converted to components\ncontaining nodes."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#export-mesh-ansys-fluent-cas-format-mesh-file","title":"Convert data when importing and exporting mesh and CAD formats > Export mesh Ansys Fluent (CAS) format mesh file","text":"Export mesh Ansys Fluent (CAS) format mesh file\n\nZones in PyPrimeMesh can be defined as a collection of either topo or zonelet entities that\nwe can assign properties to in a solver when exported as mesh , for example “if the user\nwishes to assign a material to a region of the model they can define a volume zone for\nmultiple topo volumes or cell zonelets so they can apply the property.\n\nHence while exporting the mesh as (MSH or CAS) file to the Fluent solver, the\nboundary conditions for the zones needs to be defined. For this reason the topo\nentities / zonelets associated with a labels are converted to volume/face/edge zones\nrespectively.\n\nThe property of a zone is that a zonelet or TopoEntity can only be present in a single zone.\nThe topo entities / zonelets that are not associated with their respective zones types are\nmerged together during export to Fluent formats. The topology data present is removed\nautomatically when export to Fluent(MSH or CAS) formats."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#reading-ansys-pyprimemesh-native-mesh-file-pmdat","title":"Convert data when importing and exporting mesh and CAD formats > Reading Ansys PyPrimeMesh native mesh file (pmdat)","text":"Reading Ansys PyPrimeMesh native mesh file (pmdat)\n\nRead the exported PyPrimeMesh(pmdat) native mesh format file, it is observed that\npart topology contains both geom data as well as mesh data. This is seen in the image below\n\nMeshed zonelets (that contain the mesh data) are only created once the topo part\nis converted to a mesh part by deleting the topo entities. Here , while deleting the topology\nwe are deleting the geom data (face) and retaining the mesh data for solve purpose.\nWhen deleting the topoogy , the TopoPart is converted to MeshPart and the topo entities\nare converted to their respective zonelet type in MeshPart, this is shown as follows;\n\n01 TopoVolumes ->  01 Cell Zonelets\n\n08 TopoFaces ->  08 Face Zonelets\n\n17 TopoEdges -> 17 Edge Zonelets\n\nThe zones association with topoentities would change to their\ncorresponding equivalent zonelet type in MeshParts."},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#reading-ansys-fluent-cas-format-mesh-file","title":"Convert data when importing and exporting mesh and CAD formats > Reading Ansys Fluent (.cas) format mesh file","text":"Reading Ansys Fluent (.cas) format mesh file\n\nRead the exported Fluent format mesh file.\n\nIt would be observed that\nthe zone name my_group is retained and the remaining face zonelets that are not\nassociated with a face zone(s) are merged to create a new zone named wall.\nThere are no labels present in the mesh file.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/00_lucid_file_IO.html#exit-pyprimemesh","title":"Convert data when importing and exporting mesh and CAD formats > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (0 minutes 22.789 seconds)\n\n\n\nDownload Jupyter notebook: 00_lucid_file_IO.ipynb\n\nDownload Python source code: 00_lucid_file_IO.py\n\nDownload zipped: 00_lucid_file_IO.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"user_guide/graphics.html#interactive-graphics-using-pyvista","title":"Interactive graphics using PyVista","text":"Interactive graphics using PyVista\n\nPyPrimeMesh provides support for interactive graphical visualisation using PyVista\nif this package is installed as a dependency.\n\nThis code shows how to display the model using the Graphics class:\n\nUsing the ScopeDefinition class allows\nyou to limit the display to particular regions of the model:\n\nSelections can be made of displayed objects. If selections in the window are made,\ninformation about them can be printed to the console. Selections can also be hidden.\n\nThese graphics buttons are provided to help navigate the model and to\ncarry out basic verifications:"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/SFPeriodicParams.html#sfperiodicparams","title":"SFPeriodicParams","text":"SFPeriodicParams\n\n\n\nclass ansys.meshing.prime.autogen.sizefieldstructs.SFPeriodicParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, axis: ansys.meshing.prime.params.primestructs.Iterable[float] = None, angle: float = None, center: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nParameters for setting periodic size fields.\n\nParameters\n\nmodel (Model) – Model to create a SFPeriodicParams object with default parameters.\n\naxis (Iterable[float], optional) – Axis vector coordinates.\n\nangle (float, optional) – Angle in degrees.\n\ncenter (Iterable[float], optional) – Center coordinates.\n\njson_data (dict, optional) – JSON dictionary to create a SFPeriodicParams object with provided parameters.\n\nExamples\n\n>>> s_fperiodic_params = prime.SFPeriodicParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/SFPeriodicParams.html#overview","title":"SFPeriodicParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nangle\n\nAngle in degrees.\n\naxis\n\nAxis vector coordinates.\n\ncenter\n\nCenter coordinates.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SFPeriodicParams object.\n\nset_default\n\nSet the default values of the SFPeriodicParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/SFPeriodicParams.html#import-detail","title":"SFPeriodicParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/SFPeriodicParams.html#property-detail","title":"SFPeriodicParams > Property detail","text":"Property detail\n\n\n\nproperty SFPeriodicParams.angle: float\n\nAngle in degrees.\n\n\n\nproperty SFPeriodicParams.axis: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nAxis vector coordinates.\n\n\n\nproperty SFPeriodicParams.center: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCenter coordinates."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/SFPeriodicParams.html#method-detail","title":"SFPeriodicParams > Method detail","text":"Method detail\n\n\n\nSFPeriodicParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSFPeriodicParams.__str__() -> str\n\n\n\n\n\nstatic SFPeriodicParams.print_default()\n\nPrint the default values of SFPeriodicParams object.\n\nExamples\n\n>>> SFPeriodicParams.print_default()\n\n\n\nstatic SFPeriodicParams.set_default(axis: ansys.meshing.prime.params.primestructs.Iterable[float] = None, angle: float = None, center: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the SFPeriodicParams object.\n\nParameters\n\naxis (Iterable[float], optional) – Axis vector coordinates.\n\nangle (float, optional) – Angle in degrees.\n\ncenter (Iterable[float], optional) – Center coordinates."},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceQualityMeasure.html#facequalitymeasure","title":"FaceQualityMeasure","text":"FaceQualityMeasure\n\n\n\nclass ansys.meshing.prime.FaceQualityMeasure\n\nThe type of face quality measures to check face quality metrics."},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceQualityMeasure.html#overview","title":"FaceQualityMeasure > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASPECTRATIO\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\nELEMENTQUALITY\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst).\n\nSIZECHANGE\n\nSize Change is the maximum ratio of the area of each neighboring face element to the area of face element when the area of the face element is smaller than the neighbor. The minimum value for size change is 1.\n\nSKEWNESS\n\nThe Skewness metric ranges between 0 (worst) and 1 (best). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst).\n\nWARP\n\nFace quality metric to check warping factor."},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceQualityMeasure.html#import-detail","title":"FaceQualityMeasure > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceQualityMeasure.html#attribute-detail","title":"FaceQualityMeasure > Attribute detail","text":"Attribute detail\n\n\n\nFaceQualityMeasure.ASPECTRATIO = 5\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\n\n\nFaceQualityMeasure.ELEMENTQUALITY = 50\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst).\n\n\n\nFaceQualityMeasure.SIZECHANGE = 2\n\nSize Change is the maximum ratio of the area of each neighboring face element to the area of face element when the area of the face element is smaller than the neighbor. The minimum value for size change is 1.\n\n\n\nFaceQualityMeasure.SKEWNESS = 0\n\nThe Skewness metric ranges between 0 (worst) and 1 (best). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst).\n\n\n\nFaceQualityMeasure.WARP = 7\n\nFace quality metric to check warping factor.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/BOIType.html#boitype","title":"BOIType","text":"BOIType\n\n\n\nclass ansys.meshing.prime.BOIType\n\nBOI type for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/BOIType.html#overview","title":"BOIType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nOFFSETBOX\n\nBox BOI type for BOI creation.\n\nOFFSETSURFACE\n\nSurface BOI type for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/BOIType.html#import-detail","title":"BOIType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BOIType.html#attribute-detail","title":"BOIType > Attribute detail","text":"Attribute detail\n\n\n\nBOIType.OFFSETBOX = 1\n\nBox BOI type for BOI creation.\n\n\n\nBOIType.OFFSETSURFACE = 2\n\nSurface BOI type for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerResults.html#meshstackerresults","title":"MeshStackerResults","text":"MeshStackerResults\n\n\n\nclass ansys.meshing.prime.MeshStackerResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_codes_per_topo_volume: ansys.meshing.prime.params.primestructs.Iterable[int] = None, non_stackable_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, non_stackable_edges: ansys.meshing.prime.params.primestructs.Iterable[int] = None, small_features: ansys.meshing.prime.params.primestructs.Iterable[int] = None, base_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with the mesh stacker operations.\n\nParameters\n\nmodel (Model) – Model to create a MeshStackerResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the operation.\n\nerror_codes_per_topo_volume (Iterable[int], optional) – Error codes associated with the topovolume-by-topovolume stacking.\n\nnon_stackable_faces (Iterable[int], optional) – List of non-stackable faces. Note: Under-resolved faceting can also create non-stackable geometry.\n\nnon_stackable_edges (Iterable[int], optional) – List of non-stackable edges. Note: Under-resolved faceting can also create non-stackable geometry.\n\nsmall_features (Iterable[int], optional) – List of features edges smaller than input tolerance.\n\nbase_face_ids (Iterable[int], optional) – List of base face ids after base creation.\n\nsize_control_ids (Iterable[int], optional) – List of ids of newly created size controls.\n\njson_data (dict, optional) – JSON dictionary to create a MeshStackerResults object with provided parameters.\n\nExamples\n\n>>> mesh_stacker_results = prime.MeshStackerResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerResults.html#overview","title":"MeshStackerResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbase_face_ids\n\nList of base face ids after base creation.\n\nerror_code\n\nError code associated with the operation.\n\nerror_codes_per_topo_volume\n\nError codes associated with the topovolume-by-topovolume stacking.\n\nnon_stackable_edges\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nnon_stackable_faces\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nsize_control_ids\n\nList of ids of newly created size controls.\n\nsmall_features\n\nList of features edges smaller than input tolerance.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MeshStackerResults object.\n\nset_default\n\nSet the default values of the MeshStackerResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerResults.html#import-detail","title":"MeshStackerResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerResults.html#property-detail","title":"MeshStackerResults > Property detail","text":"Property detail\n\n\n\nproperty MeshStackerResults.base_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of base face ids after base creation.\n\n\n\nproperty MeshStackerResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the operation.\n\n\n\nproperty MeshStackerResults.error_codes_per_topo_volume: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nError codes associated with the topovolume-by-topovolume stacking.\n\n\n\nproperty MeshStackerResults.non_stackable_edges: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nType\n\nList of non-stackable edges. Note\n\n\n\nproperty MeshStackerResults.non_stackable_faces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUnder-resolved faceting can also create non-stackable geometry.\n\nType\n\nList of non-stackable faces. Note\n\n\n\nproperty MeshStackerResults.size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of ids of newly created size controls.\n\n\n\nproperty MeshStackerResults.small_features: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of features edges smaller than input tolerance."},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerResults.html#method-detail","title":"MeshStackerResults > Method detail","text":"Method detail\n\n\n\nMeshStackerResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMeshStackerResults.__str__() -> str\n\n\n\n\n\nstatic MeshStackerResults.print_default()\n\nPrint the default values of MeshStackerResults object.\n\nExamples\n\n>>> MeshStackerResults.print_default()\n\n\n\nstatic MeshStackerResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_codes_per_topo_volume: ansys.meshing.prime.params.primestructs.Iterable[int] = None, non_stackable_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, non_stackable_edges: ansys.meshing.prime.params.primestructs.Iterable[int] = None, small_features: ansys.meshing.prime.params.primestructs.Iterable[int] = None, base_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the MeshStackerResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the operation.\n\nerror_codes_per_topo_volume (Iterable[int], optional) – Error codes associated with the topovolume-by-topovolume stacking.\n\nnon_stackable_faces (Iterable[int], optional) – List of non-stackable faces. Note: Under-resolved faceting can also create non-stackable geometry.\n\nnon_stackable_edges (Iterable[int], optional) – List of non-stackable edges. Note: Under-resolved faceting can also create non-stackable geometry.\n\nsmall_features (Iterable[int], optional) – List of features edges smaller than input tolerance.\n\nbase_face_ids (Iterable[int], optional) – List of base face ids after base creation.\n\nsize_control_ids (Iterable[int], optional) – List of ids of newly created size controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/OptimizeQuadMeshParams.html#optimizequadmeshparams","title":"OptimizeQuadMeshParams","text":"OptimizeQuadMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.OptimizeQuadMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, suppress_topo_edge_and_mesh_cleanup: bool = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, generate_quads: bool = None, project_on_geometry: bool = None, delete_interior_nodes_params: DeleteInteriorNodesParams = None, json_data: dict = None, **kwargs)\n\nParameters for optimize quad mesh operations.\n\nParameters\n\nmodel (Model) – Model to create a OptimizeQuadMeshParams object with default parameters.\n\nsuppress_topo_edge_and_mesh_cleanup (bool, optional) – Option to suppress topoedges and clean up mesh.This is a beta parameter. The behavior and name may change in the future.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.This is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\ngenerate_quads (bool, optional) – Option to generate quadrilateral surface mesh.This is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry (bool, optional) – Option to project on geometry when meshing.This is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes_params (DeleteInteriorNodesParams, optional) – Parameters to control delete interior nodes operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a OptimizeQuadMeshParams object with provided parameters.\n\nExamples\n\n>>> optimize_quad_mesh_params = prime.OptimizeQuadMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/OptimizeQuadMeshParams.html#overview","title":"OptimizeQuadMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_interior_nodes_params\n\nParameters to control delete interior nodes operation.\n\nedge_mesh_constant_size\n\nConstant size used for edge meshing.\n\ngenerate_quads\n\nOption to generate quadrilateral surface mesh.\n\nproject_on_geometry\n\nOption to project on geometry when meshing.\n\nsuppress_topo_edge_and_mesh_cleanup\n\nOption to suppress topoedges and clean up mesh.\n\nsurface_mesh_constant_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of OptimizeQuadMeshParams object.\n\nset_default\n\nSet the default values of the OptimizeQuadMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/OptimizeQuadMeshParams.html#import-detail","title":"OptimizeQuadMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/OptimizeQuadMeshParams.html#property-detail","title":"OptimizeQuadMeshParams > Property detail","text":"Property detail\n\n\n\nproperty OptimizeQuadMeshParams.delete_interior_nodes_params: DeleteInteriorNodesParams\n\nParameters to control delete interior nodes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.generate_quads: bool\n\nOption to generate quadrilateral surface mesh.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.project_on_geometry: bool\n\nOption to project on geometry when meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.suppress_topo_edge_and_mesh_cleanup: bool\n\nOption to suppress topoedges and clean up mesh.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/OptimizeQuadMeshParams.html#method-detail","title":"OptimizeQuadMeshParams > Method detail","text":"Method detail\n\n\n\nOptimizeQuadMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nOptimizeQuadMeshParams.__str__() -> str\n\n\n\n\n\nstatic OptimizeQuadMeshParams.print_default()\n\nPrint the default values of OptimizeQuadMeshParams object.\n\nExamples\n\n>>> OptimizeQuadMeshParams.print_default()\n\n\n\nstatic OptimizeQuadMeshParams.set_default(suppress_topo_edge_and_mesh_cleanup: bool = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, generate_quads: bool = None, project_on_geometry: bool = None, delete_interior_nodes_params: DeleteInteriorNodesParams = None)\n\nSet the default values of the OptimizeQuadMeshParams object.\n\nParameters\n\nsuppress_topo_edge_and_mesh_cleanup (bool, optional) – Option to suppress topoedges and clean up mesh.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.\n\ngenerate_quads (bool, optional) – Option to generate quadrilateral surface mesh.\n\nproject_on_geometry (bool, optional) – Option to project on geometry when meshing.\n\ndelete_interior_nodes_params (DeleteInteriorNodesParams, optional) – Parameters to control delete interior nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationParams.html#checkfacedeviationparams","title":"CheckFaceDeviationParams","text":"CheckFaceDeviationParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.CheckFaceDeviationParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, distance: float = None, json_data: dict = None, **kwargs)\n\nParameters used for check face deviation operations.\n\nParameters\n\nmodel (Model) – Model to create a CheckFaceDeviationParams object with default parameters.\n\ndistance (float, optional) – Distance above which deviated entities are collected.\n\njson_data (dict, optional) – JSON dictionary to create a CheckFaceDeviationParams object with provided parameters.\n\nExamples\n\n>>> check_face_deviation_params = prime.CheckFaceDeviationParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationParams.html#overview","title":"CheckFaceDeviationParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndistance\n\nDistance above which deviated entities are collected.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckFaceDeviationParams object.\n\nset_default\n\nSet the default values of the CheckFaceDeviationParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationParams.html#import-detail","title":"CheckFaceDeviationParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationParams.html#property-detail","title":"CheckFaceDeviationParams > Property detail","text":"Property detail\n\n\n\nproperty CheckFaceDeviationParams.distance: float\n\nDistance above which deviated entities are collected."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/CheckFaceDeviationParams.html#method-detail","title":"CheckFaceDeviationParams > Method detail","text":"Method detail\n\n\n\nCheckFaceDeviationParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckFaceDeviationParams.__str__() -> str\n\n\n\n\n\nstatic CheckFaceDeviationParams.print_default()\n\nPrint the default values of CheckFaceDeviationParams object.\n\nExamples\n\n>>> CheckFaceDeviationParams.print_default()\n\n\n\nstatic CheckFaceDeviationParams.set_default(distance: float = None)\n\nSet the default values of the CheckFaceDeviationParams object.\n\nParameters\n\ndistance (float, optional) – Distance above which deviated entities are collected."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/index.html#the-volumesweeperstructspy-module","title":"The volumesweeperstructs.py module","text":"The volumesweeperstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/index.html#summary","title":"The volumesweeperstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMeshStackerParams\n\nInput parameters associated with the mesh stacker operations.\n\nMeshStackerResults\n\nResults associated with the mesh stacker operations.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeperstructs/index.html#description","title":"The volumesweeperstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesParams.html#mergevolumesparams","title":"MergeVolumesParams","text":"MergeVolumesParams\n\n\n\nclass ansys.meshing.prime.MergeVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merge_to_neighbor_volume: bool = None, neighbor_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nParameters to merge volumes.\n\nParameters\n\nmodel (Model) – Model to create a MergeVolumesParams object with default parameters.\n\nmerge_to_neighbor_volume (bool, optional) – Option to merge given volumes to their neighbor volume.\n\nneighbor_volumes (Iterable[int], optional) – Ids of volume that are neighbors to given volumes for merging.\n\njson_data (dict, optional) – JSON dictionary to create a MergeVolumesParams object with provided parameters.\n\nExamples\n\n>>> merge_volumes_params = prime.MergeVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesParams.html#overview","title":"MergeVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmerge_to_neighbor_volume\n\nOption to merge given volumes to their neighbor volume.\n\nneighbor_volumes\n\nIds of volume that are neighbors to given volumes for merging.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeVolumesParams object.\n\nset_default\n\nSet the default values of the MergeVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesParams.html#import-detail","title":"MergeVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesParams.html#property-detail","title":"MergeVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty MergeVolumesParams.merge_to_neighbor_volume: bool\n\nOption to merge given volumes to their neighbor volume.\n\n\n\nproperty MergeVolumesParams.neighbor_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of volume that are neighbors to given volumes for merging."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesParams.html#method-detail","title":"MergeVolumesParams > Method detail","text":"Method detail\n\n\n\nMergeVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeVolumesParams.__str__() -> str\n\n\n\n\n\nstatic MergeVolumesParams.print_default()\n\nPrint the default values of MergeVolumesParams object.\n\nExamples\n\n>>> MergeVolumesParams.print_default()\n\n\n\nstatic MergeVolumesParams.set_default(merge_to_neighbor_volume: bool = None, neighbor_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the MergeVolumesParams object.\n\nParameters\n\nmerge_to_neighbor_volume (bool, optional) – Option to merge given volumes to their neighbor volume.\n\nneighbor_volumes (Iterable[int], optional) – Ids of volume that are neighbors to given volumes for merging."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsResults.html#deletefringesandoverlapsresults","title":"DeleteFringesAndOverlapsResults","text":"DeleteFringesAndOverlapsResults\n\n\n\nclass ansys.meshing.prime.DeleteFringesAndOverlapsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_deleted: int = None, json_data: dict = None, **kwargs)\n\nResults associated with the delete fringes and overlapping faces operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteFringesAndOverlapsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nn_deleted (int, optional) – Number of face elements deleted.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteFringesAndOverlapsResults object with provided parameters.\n\nExamples\n\n>>> delete_fringes_and_overlaps_results = prime.DeleteFringesAndOverlapsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsResults.html#overview","title":"DeleteFringesAndOverlapsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nn_deleted\n\nNumber of face elements deleted.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteFringesAndOverlapsResults object.\n\nset_default\n\nSet the default values of the DeleteFringesAndOverlapsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsResults.html#import-detail","title":"DeleteFringesAndOverlapsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsResults.html#property-detail","title":"DeleteFringesAndOverlapsResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteFringesAndOverlapsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty DeleteFringesAndOverlapsResults.n_deleted: int\n\nNumber of face elements deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsResults.html#method-detail","title":"DeleteFringesAndOverlapsResults > Method detail","text":"Method detail\n\n\n\nDeleteFringesAndOverlapsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteFringesAndOverlapsResults.__str__() -> str\n\n\n\n\n\nstatic DeleteFringesAndOverlapsResults.print_default()\n\nPrint the default values of DeleteFringesAndOverlapsResults object.\n\nExamples\n\n>>> DeleteFringesAndOverlapsResults.print_default()\n\n\n\nstatic DeleteFringesAndOverlapsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_deleted: int = None)\n\nSet the default values of the DeleteFringesAndOverlapsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nn_deleted (int, optional) – Number of face elements deleted."},{"objectID":"Home","href":"getting_started/index.html#getting-started","title":"Getting started","text":"Getting started\n\nPyPrimeMesh is a Python client for Ansys Prime Server,\nwhich provides core Ansys meshing technology.\n\nTo use PyPrimeMesh, you must have a local installation of Ansys 2023 R1 or later.\nThe Ansys version that you have installed dictates the features available to you.\n\nFor more information on getting a licensed copy of Ansys, visit the Ansys website.\n\nThe PyPrimeMesh client release has one-to-one compatibility with the Ansys Prime Server release.\nThat is, the PyPrimeMesh client is only compatible with its corresponding Ansys Prime Server.\n\nThis table provides compatibility information:\n\n\n\n\n\n\n\nPyPrimeMesh client release\n\nAnsys Prime Server release\n\nSupported python versions\n\n0.2.x\n\n0.3.x\n\n0.4.x\n\n0.5.x\n\n0.6.x\n\n0.7.x\n\n0.8.x\n\n0.9.x\n\n23.1.0 (2023 R1)\n\n23.1.1 (2023 R1 SP1)\n\n23.2.0 (2023 R2)\n\n24.1.0 (2024 R1)\n\n24.2.0 (2024 R2)\n\n25.1.0 (2025 R1)\n\n25.1.1 (2025 R1 SP1)/\n25.1.2 (2025 R1 SP2)\n\n25.2.0 (2025 R2)\n\n3.7 to 3.11\n\n3.7 to 3.11\n\n3.8 to 3.11\n\n3.8 to 3.11\n\n3.8 to 3.11\n\n3.10 to 3.12\n\n3.10 to 3.12\n\n3.10 to 3.13\n\n"},{"objectID":"Home","href":"getting_started/index.html#installation","title":"Getting started > Installation","text":"Installation\n\nThe ansys-meshing-prime package currently supports Python 3.10\nto Python 3.13 on the Windows and Linux operating systems.\n\nYou can install PyPrimeMesh with all dependencies directly from PyPI  with this command:\n\nAlternatively, you can clone this repository and install the client using these commands:\n\nThe preceding commands install all features that are important to development.\nTo install a basic version of the client, use this command instead:"},{"objectID":"Home","href":"getting_started/index.html#dependencies","title":"Getting started > Dependencies","text":"Dependencies\n\nYou must have Ansys 2023 R1 or later installed to have access to Ansys Prime\nServer. Optionally, CAD readers can be configured.\n\nAnsys Prime Server requires one of the following licenses to run. The system\nchecks out the first available license from the list in the following order:\n\nCFD PrepPost\n\nCFD PrepPost Pro\n\nMechanical Enterprise PrepPost\n\nMechanical Enterprise\n\nMechanical Pro\n\nMechanical Premium\n\nAnsys LS-DYNA"},{"objectID":"Home","href":"getting_started/index.html#launch-pyprimemesh","title":"Getting started > Launch PyPrimeMesh","text":"Launch PyPrimeMesh\n\nTo launch PyPrimeMesh, use this code:"},{"objectID":"Home","href":"getting_started/index.html#launching-pyprimemesh-through-docker","title":"Getting started > Launching PyPrimeMesh through docker","text":"Launching PyPrimeMesh through docker\n\nAnsys Prime Server is capable of being launched through docker.\nDocker is an open platform for developing, shipping, and running apps in a containerized way.\nContainers are standard units of software that package the code and all its dependencies.\nHence, the app runs quickly and reliably from one computing environment to another.\n\nAnsys Prime Server can be built as a Linux Docker container.\nHence, you should have a linux machine to run the Ansys Prime Server."},{"objectID":"Home","href":"getting_started/index.html#docker-for-linux-containers","title":"Getting started > Docker for Linux containers","text":"Docker for Linux containers\n\nTo run the Linux Docker container for the Ansys Prime Server,\nensure that you follow these steps when installing the Docker:\n\nInstall Docker Engine.\n\nRestart your machine and start Docker Engine after completing the installation.\n\nYour Docker engine supports running Linux Docker containers, you can build or install the Ansys Prime Server image.\n\nAnsys Prime Server uses Intel MPI library for performing meshing operations. Intel MPI library requires NUMA support.\nDocker desktop allows to run linux containers on windows using WSL. Existing Linux distributions used for WSL do not typically support NUMA.\nIt is expected that a custom Linux distribution would be required for WSL to run the Ansys Prime Server container to support NUMA.\nAnsys does not recommend you to run the Ansys Prime Server image without NUMA support."},{"objectID":"Home","href":"getting_started/index.html#build-or-install-the-ansys-prime-server-image","title":"Getting started > Build or install the Ansys Prime Server image","text":"Build or install the Ansys Prime Server image\n\nYou can install the Ansys Prime Server image in the following ways:\n\nDownload it from the GitHub Container Registry.\n\nBuild the Ansys Prime Server Linux container."},{"objectID":"Home","href":"getting_started/index.html#github-container-registry","title":"Getting started > GitHub container registry","text":"GitHub container registry\n\nYou should have write access to the repository or should be a members of the Ansys organization.\n\nAfter installing Docker on your machine, follow these steps to download the Linux Docker container\nfor the Ansys Prime Server and install this image.\n\nDownload the Docker image from the PyPrimeMesh repository on GitHub using your GitHub credentials.\n\nUse a GitHub personal access token with permission for reading packages to authorize Docker to access the PyPrimeMesh repository. For more information, see Managing your personal access tokens in the GitHub documentation.\n\nSave the token to a file using this command:\n\n\n\nAuthorize Docker to access the repository and run the commands for your OS.\n\nLinux:\n\n\n\nPull the Ansys Prime Server locally using Docker using the following command:\n\n"},{"objectID":"Home","href":"getting_started/index.html#build-the-ansys-prime-server-linux-container","title":"Getting started > Build the Ansys Prime Server linux container","text":"Build the Ansys Prime Server linux container\n\nYou can build the Ansys Prime Server Docker containers from the PyPrimeMesh repository docker folder.\nThe docker folder has the linux/Dockerfile that builds the Linux-based Docker image.\n\nAnsys Prime Server does not support building windows-based docker images.\n\nYou can build the docker image file as follows:\n\nBuild from available Ansys installation: Builds the Docker image using the Ansys installation available in the machine where the Docker image is being built."},{"objectID":"Home","href":"getting_started/index.html#prerequisites","title":"Getting started > Prerequisites","text":"Prerequisites\n\nEnsure that Docker is installed in your machine. If you do not have Docker available, see Docker for Linux containers."},{"objectID":"Home","href":"getting_started/index.html#build-from-available-ansys-installation","title":"Getting started > Build from available Ansys installation","text":"Build from available Ansys installation\n\nTo build your own image from your Ansys installation, follow these instructions:\n\nGo to the Docker folder in your local PyPrimeMesh repository.\n\nExecute the script with the following command (no specific location needed):\n\n\n\nFor example,\n\n\n\nCheck that the image has been created successfully.\n\nYou can view the docker image created with latest tag as follows:"},{"objectID":"Home","href":"getting_started/index.html#launch-the-ansys-prime-server","title":"Getting started > Launch the Ansys Prime Server","text":"Launch the Ansys Prime Server\n\nAnsys Prime Server can be launched using the PyPrimeMesh launcher.\nYou should set the following mandatory environment variable for launching the Ansys Prime Server:\n\nPYPRIMEMESH_LAUNCH_CONTAINER: Launches the Ansys Prime Server form the PyPrimeMesh container.\n\nPYPRIMEMESH_IMAGE_TAG: Latest version of the Ansys Prime Server docker image.\n\nANSYSLMD_LICENSE_FILE: License server required for launching the Ansys Prime Server."},{"objectID":"Home","href":"getting_started/index.html#setting-the-environment-variable","title":"Getting started > Setting the environment variable","text":"Setting the environment variable\n\nDefine the following general environment variables prior to using the Ansys Prime Server launcher.\n\nLinux\n\n\n\nPyPrimeMesh supports Docker image creation from 2025 R1 version."},{"objectID":"Home","href":"getting_started/index.html#launching-ansys-prime-server","title":"Getting started > Launching Ansys Prime Server","text":"Launching Ansys Prime Server\n\nEnsure that you have installed ansys-meshing-prime package before launching Ansys Prime Server.\nTo install ansys-meshing-prime package, refer Installation.\nAnsys Prime Server can be launched as follows:"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessResults.html#addthicknessresults","title":"AddThicknessResults","text":"AddThicknessResults\n\n\n\nclass ansys.meshing.prime.AddThicknessResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None, json_data: dict = None, **kwargs)\n\nResult structure associated with add thickness zonelets.\n\nParameters\n\nmodel (Model) – Model to create a AddThicknessResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\npart_id (int, optional) – The created thickness part id.\n\njson_data (dict, optional) – JSON dictionary to create a AddThicknessResults object with provided parameters.\n\nExamples\n\n>>> add_thickness_results = prime.AddThicknessResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessResults.html#overview","title":"AddThicknessResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\npart_id\n\nThe created thickness part id.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AddThicknessResults object.\n\nset_default\n\nSet the default values of the AddThicknessResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessResults.html#import-detail","title":"AddThicknessResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessResults.html#property-detail","title":"AddThicknessResults > Property detail","text":"Property detail\n\n\n\nproperty AddThicknessResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty AddThicknessResults.part_id: int\n\nThe created thickness part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/AddThicknessResults.html#method-detail","title":"AddThicknessResults > Method detail","text":"Method detail\n\n\n\nAddThicknessResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAddThicknessResults.__str__() -> str\n\n\n\n\n\nstatic AddThicknessResults.print_default()\n\nPrint the default values of AddThicknessResults object.\n\nExamples\n\n>>> AddThicknessResults.print_default()\n\n\n\nstatic AddThicknessResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None)\n\nSet the default values of the AddThicknessResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\npart_id (int, optional) – The created thickness part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/WarningCode.html#warningcode","title":"WarningCode","text":"WarningCode\n\n\n\nclass ansys.meshing.prime.autogen.primeconfig.WarningCode\n\nWarning codes associated with the PyPrimeMesh operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/WarningCode.html#overview","title":"WarningCode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALIGN_OPERATIONINTERRUPTED\n\nAlign operation interrupted.\n\nDUPLICATEINPUT\n\nDuplicate items in input.\n\nENTITIESNOTBELONGTOANYZONE\n\nEntities do not belong to any zone.\n\nEXPORTMAPDLANALYSISSETTINGSFAILED\n\nExport MAPDL analysis settings failed.\n\nEXTERNALOPENFACEZONELETSFOUND\n\nExternal open face zonelets found when computing volumes.\n\nEXTERNALOPENTOPOFACESFOUND\n\nExternal open topofaces found when computing topovolumes.\n\nFACEZONELETSWITHOUTVOLUMES\n\nFace zonelets have no volume associated to them.\n\nFAILEDTOUPDATEVOLUMES\n\nVolumes are not updated after performing the operation. Compute the volumes again.\n\nFUSEOVERLAPREMOVALINCOMPLETE\n\nSelf intersections found. Use Fuse operation to remove it.\n\nIGA_NOGEOMZONELETFORSPLINEFITTING\n\nInvalid input for IGA.\n\nIMPORTOFNODALCOMPONENTASLABELSKIPPED\n\nImport of nodal component as label skipped.\n\nINVALIDENTITIESNOTADDEDTOZONE\n\nEntities with invalid id or type not added to zone.\n\nINVALIDSIZECONTROLSCOPE\n\nInvalid size control type provided.\n\nJOINEDZONELETSFROMMULTIPLEVOLUMES\n\nJoined zonelets from more than two volumes. The volumes are not auto updated on the zonelets.\n\nLOCALSURFERNOFACEREGISTERED\n\nNo face registered with the given register id.\n\nMATERIALPOINTWITHSAMENAMEEXISTS\n\nMaterial point with the same name exists. Overriding with unique name.\n\nMAXOFPRISMCONTROLSMINASPECTRATIO\n\nMaximum value of min aspect ratio from selected prism controls is considered for all selected prism controls.\n\nMESHHASINVALIDSHAPE\n\nMesh has invalid shape.\n\nMESHHASLEFTHANDEDNESSFACES\n\nMesh has invalid shape.\n\nMESHHASNONPOSITIVEAREAS\n\nMesh has non positive areas.\n\nMESHHASNONPOSITIVEVOLUMES\n\nMesh has non positive volumes.\n\nMULTIZONEMESHER_DEFEATUREDTOPOEDGES\n\nTopoEdges that got defeatured in the MultiZone mesh.\n\nMULTIZONEMESHER_DEFEATUREDTOPOFACES\n\nTopoFaces that got defeatured in the MultiZone mesh.\n\nMULTIZONEMESHER_SURFACESCOPEVOLUMESCOPEINCONSISTENCY\n\nMultiZone warning codes\n\nNOCADGEOMETRYFOUND\n\nCAD geometry not found for some or all topo entities. Skipped projection for those topo entities.\n\nNOCADGEOMETRYPROJECTONFACETS\n\nCAD geometry not found for some or all topo entities. Projected on facets for those topo entites.\n\nNOHOLESFOUNDONPLANE\n\nProvides warning when no closed holes are found in the given face zonelets at given plane.\n\nNOVOLUMESCOMPUTED\n\nThere are no volumes found.\n\nNOVOLUMESENCLOSINGMATERIALPOINT\n\nNo computed volumes enclosing material point.\n\nNOWARNING\n\nNo warnings.\n\nNUMERICPARTNAMERENAMETOALPHANUMERIC\n\nNumeric part name renamed to alphanumeric name.\n\nOVERRIDEBOISIZINGPARAMS\n\nOverriding BOI sizing parameters.\n\nOVERRIDECURVATURESIZINGPARAMS\n\nOverriding curvature sizing parameters.\n\nOVERRIDEEDGESCOPEENTITY\n\nOverride edge scope entity.\n\nOVERRIDEGROWTHRATEPARAM\n\nOverriding growth rate parameter.\n\nOVERRIDEHARDSIZINGPARAMS\n\nOverriding hard sizing parameters.\n\nOVERRIDEMESHEDSIZINGPARAMS\n\nOverriding meshed sizing parameters.\n\nOVERRIDEPROXIMITYSIZINGPARAMS\n\nOverriding proximity sizing parameters.\n\nOVERRIDESOFTSIZINGPARAMS\n\nOverriding soft sizing parameters.\n\nOVERRIDESOISIZINGPARAMS\n\nOverriding SOI sizing parameters.\n\nOVERRIDESUGGESTEDNAME\n\nOverride name by suggested name.\n\nOVERRIDESURFACESCOPEENTITY\n\nOverride surface scope entity.\n\nOVERRIDEVOLUMESCOPEENTITY\n\nOverride volume scope entity.\n\nPARTNOTINPARTSCOPE\n\nSelected part is not in the part scope of the periodic control.\n\nREMOVEOVERLAPWITHINTERSECT\n\nSelf intersections found. Use Intersect operation to remove it.\n\nSHELLBLGAPFACTORMINLIMIT\n\nAdjusted ShellBL gap factor to 0.001. As 0.001 is minimum value supported.\n\nSURFERDEGENERATEFACE\n\nDegenerate input.\n\nSURFERLAYEREDQUADFAILED\n\nLayered quad failed with surfer.\n\nSURFER_QUADCLEANUP_MULTITHREADINGNOTSUPPORTED\n\nMultithreading is not supported for quad cleanup operation.\n\nUNKNOWN\n\nUnknown warning.\n\nUNPROCESSEDKEYWORDSINABAQUSFILE\n\nUnprocessed Abaqus keywords have been found.\n\nVT_CANNOTMERGENODES\n\nCannot merge nodes during VT operation.\n\nVT_REMESHFACEFAILED\n\nFailed to remesh face(s) during VT operation.\n\nVT_SKIPPEDENTITIESINDIFFERENTZONES\n\nInput contains entities in different zones which have been skipped.\n\nVT_SKIPPEDFEATUREENTITIES\n\nInput contains feature entities which have been skipped.\n\nVT_SKIPPEDFREEEDGES\n\nInput contains free edges which have been skipped.\n\nVT_SKIPPEDNONMANIFOLDEDGES\n\nInput contains non-manifold edges which have been skipped.\n\nVT_SKIPPEDPROTECTEDENTITIES\n\nInput contains protected entities which have been skipped.\n\nWRAPPER_PATCHFLOWREGIONS_NOHOLESFOUND\n\nNo holes detected to patch.\n\nWRAPPER_SIZECONTROLNOTDEFINED\n\nNo size controls provided for wrapper.\n\nWRAPPER_SIZECONTROLNOTSUPPORTED\n\nSize control is not supported in wrapper.\n\nWRAPPER_SMALLERCONTACTPREVENTIONSIZE\n\nContact prevention size is smaller than base size.\n\nWRAPPER_SMALLERSIZEATFEAURES\n\nSize at features is smaller than base size.\n\nWRITINGCONTACTPAIRSSKIPPED\n\nWriting of contact pairs skipped.\n\nWRITINGTIESSKIPPED\n\nWriting of ties skipped.\n\nWRITINGZONELETOFLABELTOELEMENTCOMPONENTSKIPPED\n\nExport of label as element component skipped."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/WarningCode.html#import-detail","title":"WarningCode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/WarningCode.html#attribute-detail","title":"WarningCode > Attribute detail","text":"Attribute detail\n\n\n\nWarningCode.ALIGN_OPERATIONINTERRUPTED = 1900\n\nAlign operation interrupted.\n\n\n\nWarningCode.DUPLICATEINPUT = 8001\n\nDuplicate items in input.\n\n\n\nWarningCode.ENTITIESNOTBELONGTOANYZONE = 6201\n\nEntities do not belong to any zone.\n\n\n\nWarningCode.EXPORTMAPDLANALYSISSETTINGSFAILED = 11101\n\nExport MAPDL analysis settings failed.\n\n\n\nWarningCode.EXTERNALOPENFACEZONELETSFOUND = 5601\n\nExternal open face zonelets found when computing volumes.\n\n\n\nWarningCode.EXTERNALOPENTOPOFACESFOUND = 5603\n\nExternal open topofaces found when computing topovolumes.\n\n\n\nWarningCode.FACEZONELETSWITHOUTVOLUMES = 5604\n\nFace zonelets have no volume associated to them.\n\n\n\nWarningCode.FAILEDTOUPDATEVOLUMES = 5606\n\nVolumes are not updated after performing the operation. Compute the volumes again.\n\n\n\nWarningCode.FUSEOVERLAPREMOVALINCOMPLETE = 4500\n\nSelf intersections found. Use Fuse operation to remove it.\n\n\n\nWarningCode.IGA_NOGEOMZONELETFORSPLINEFITTING = 5001\n\nInvalid input for IGA.\n\n\n\nWarningCode.IMPORTOFNODALCOMPONENTASLABELSKIPPED = 11201\n\nImport of nodal component as label skipped.\n\n\n\nWarningCode.INVALIDENTITIESNOTADDEDTOZONE = 6202\n\nEntities with invalid id or type not added to zone.\n\n\n\nWarningCode.INVALIDSIZECONTROLSCOPE = 208\n\nInvalid size control type provided.\n\n\n\nWarningCode.JOINEDZONELETSFROMMULTIPLEVOLUMES = 5605\n\nJoined zonelets from more than two volumes. The volumes are not auto updated on the zonelets.\n\n\n\nWarningCode.LOCALSURFERNOFACEREGISTERED = 7001\n\nNo face registered with the given register id.\n\n\n\nWarningCode.MATERIALPOINTWITHSAMENAMEEXISTS = 6005\n\nMaterial point with the same name exists. Overriding with unique name.\n\n\n\nWarningCode.MAXOFPRISMCONTROLSMINASPECTRATIO = 403\n\nMaximum value of min aspect ratio from selected prism controls is considered for all selected prism controls.\n\n\n\nWarningCode.MESHHASINVALIDSHAPE = 7106\n\nMesh has invalid shape.\n\n\n\nWarningCode.MESHHASLEFTHANDEDNESSFACES = 7107\n\nMesh has invalid shape.\n\n\n\nWarningCode.MESHHASNONPOSITIVEAREAS = 7105\n\nMesh has non positive areas.\n\n\n\nWarningCode.MESHHASNONPOSITIVEVOLUMES = 7104\n\nMesh has non positive volumes.\n\n\n\nWarningCode.MULTIZONEMESHER_DEFEATUREDTOPOEDGES = 110002\n\nTopoEdges that got defeatured in the MultiZone mesh.\n\n\n\nWarningCode.MULTIZONEMESHER_DEFEATUREDTOPOFACES = 110003\n\nTopoFaces that got defeatured in the MultiZone mesh.\n\n\n\nWarningCode.MULTIZONEMESHER_SURFACESCOPEVOLUMESCOPEINCONSISTENCY = 110001\n\nMultiZone warning codes\n\n\n\nWarningCode.NOCADGEOMETRYFOUND = 7500\n\nCAD geometry not found for some or all topo entities. Skipped projection for those topo entities.\n\n\n\nWarningCode.NOCADGEOMETRYPROJECTONFACETS = 7501\n\nCAD geometry not found for some or all topo entities. Projected on facets for those topo entites.\n\n\n\nWarningCode.NOHOLESFOUNDONPLANE = 5501\n\nProvides warning when no closed holes are found in the given face zonelets at given plane.\n\n\n\nWarningCode.NOVOLUMESCOMPUTED = 5600\n\nThere are no volumes found.\n\n\n\nWarningCode.NOVOLUMESENCLOSINGMATERIALPOINT = 5602\n\nNo computed volumes enclosing material point.\n\n\n\nWarningCode.NOWARNING = 0\n\nNo warnings.\n\n\n\nWarningCode.NUMERICPARTNAMERENAMETOALPHANUMERIC = 701\n\nNumeric part name renamed to alphanumeric name.\n\n\n\nWarningCode.OVERRIDEBOISIZINGPARAMS = 205\n\nOverriding BOI sizing parameters.\n\n\n\nWarningCode.OVERRIDECURVATURESIZINGPARAMS = 201\n\nOverriding curvature sizing parameters.\n\n\n\nWarningCode.OVERRIDEEDGESCOPEENTITY = 404\n\nOverride edge scope entity.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.OVERRIDEGROWTHRATEPARAM = 209\n\nOverriding growth rate parameter.\n\n\n\nWarningCode.OVERRIDEHARDSIZINGPARAMS = 203\n\nOverriding hard sizing parameters.\n\n\n\nWarningCode.OVERRIDEMESHEDSIZINGPARAMS = 206\n\nOverriding meshed sizing parameters.\n\n\n\nWarningCode.OVERRIDEPROXIMITYSIZINGPARAMS = 204\n\nOverriding proximity sizing parameters.\n\n\n\nWarningCode.OVERRIDESOFTSIZINGPARAMS = 202\n\nOverriding soft sizing parameters.\n\n\n\nWarningCode.OVERRIDESOISIZINGPARAMS = 207\n\nOverriding SOI sizing parameters.\n\n\n\nWarningCode.OVERRIDESUGGESTEDNAME = 301\n\nOverride name by suggested name.\n\n\n\nWarningCode.OVERRIDESURFACESCOPEENTITY = 401\n\nOverride surface scope entity.\n\n\n\nWarningCode.OVERRIDEVOLUMESCOPEENTITY = 402\n\nOverride volume scope entity.\n\n\n\nWarningCode.PARTNOTINPARTSCOPE = 601\n\nSelected part is not in the part scope of the periodic control.\n\n\n\nWarningCode.REMOVEOVERLAPWITHINTERSECT = 4501\n\nSelf intersections found. Use Intersect operation to remove it.\n\n\n\nWarningCode.SHELLBLGAPFACTORMINLIMIT = 405\n\nAdjusted ShellBL gap factor to 0.001. As 0.001 is minimum value supported.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.SURFERDEGENERATEFACE = 1801\n\nDegenerate input.\n\n\n\nWarningCode.SURFERLAYEREDQUADFAILED = 1800\n\nLayered quad failed with surfer.\n\n\n\nWarningCode.SURFER_QUADCLEANUP_MULTITHREADINGNOTSUPPORTED = 102\n\nMultithreading is not supported for quad cleanup operation.\n\n\n\nWarningCode.UNKNOWN = 1\n\nUnknown warning.\n\n\n\nWarningCode.UNPROCESSEDKEYWORDSINABAQUSFILE = 11001\n\nUnprocessed Abaqus keywords have been found.\n\n\n\nWarningCode.VT_CANNOTMERGENODES = 100006\n\nCannot merge nodes during VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_REMESHFACEFAILED = 100007\n\nFailed to remesh face(s) during VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDENTITIESINDIFFERENTZONES = 100005\n\nInput contains entities in different zones which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDFEATUREENTITIES = 100002\n\nInput contains feature entities which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDFREEEDGES = 100003\n\nInput contains free edges which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDNONMANIFOLDEDGES = 100004\n\nInput contains non-manifold edges which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.VT_SKIPPEDPROTECTEDENTITIES = 100001\n\nInput contains protected entities which have been skipped.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.WRAPPER_PATCHFLOWREGIONS_NOHOLESFOUND = 6006\n\nNo holes detected to patch.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nWarningCode.WRAPPER_SIZECONTROLNOTDEFINED = 6001\n\nNo size controls provided for wrapper.\n\n\n\nWarningCode.WRAPPER_SIZECONTROLNOTSUPPORTED = 6002\n\nSize control is not supported in wrapper.\n\n\n\nWarningCode.WRAPPER_SMALLERCONTACTPREVENTIONSIZE = 6004\n\nContact prevention size is smaller than base size.\n\n\n\nWarningCode.WRAPPER_SMALLERSIZEATFEAURES = 6003\n\nSize at features is smaller than base size.\n\n\n\nWarningCode.WRITINGCONTACTPAIRSSKIPPED = 11102\n\nWriting of contact pairs skipped.\n\n\n\nWarningCode.WRITINGTIESSKIPPED = 11103\n\nWriting of ties skipped.\n\n\n\nWarningCode.WRITINGZONELETOFLABELTOELEMENTCOMPONENTSKIPPED = 11104\n\nExport of label as element component skipped."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/Graphics.html#graphics","title":"Graphics","text":"Graphics\n\n\n\nclass ansys.meshing.prime.graphics.plotter.Graphics(model: ansys.meshing.prime.Model, use_trame: bool = False)\n\nManages graphics in PyPrime.\n\nDeprecated since version 0.6.0: Use PrimePlotter instead.\n\nParameters\n\nmodel (prime.Model) – Model to show.\n\nuse_trame (bool, default: False) – Whether to use the Trame visualizer."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/Graphics.html#overview","title":"Graphics > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nmodel\n\n\n\nuse_trame\n\n\n\nSpecial methods\n\n\n\n\n\n__call__\n\nShow the appropriate display based on parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/Graphics.html#import-detail","title":"Graphics > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/Graphics.html#attribute-detail","title":"Graphics > Attribute detail","text":"Attribute detail\n\n\n\nGraphics.model\n\n\n\n\n\nGraphics.use_trame = False\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/Graphics.html#method-detail","title":"Graphics > Method detail","text":"Method detail\n\n\n\nGraphics.__call__(parts: List = None, update: bool = True, spline: bool = False, scope: ansys.meshing.prime.ScopeDefinition = None) -> None\n\nShow the appropriate display based on parameters.\n\nParameters\n\nparts (Any, default: None) – Parts to show.\n\nupdate (bool, default: True) – Whether to update the display.\n\nspline (bool, default: False) – Whether to use splines.\n\nscope (prime.ScopeDefinition, default: None) – Scope of the parts."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbParams.html#exportmapdlcdbparams","title":"ExportMapdlCdbParams","text":"ExportMapdlCdbParams\n\n\n\nclass ansys.meshing.prime.ExportMapdlCdbParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, config_settings: str = None, pre_solution_settings: str = None, material_properties: str = None, boundary_conditions: str = None, analysis_settings: str = None, write_cells: bool = None, enable_face_based_labels: bool = None, label_export_params: LabelExportParams = None, write_by_zones: bool = None, consider_general_connectors_as_spot_weld: bool = None, analysis_type: CdbAnalysisType = None, simulation_type: CdbSimulationType = None, analysis_settings_file_name: str = None, write_separate_blocks: bool = None, write_components_with_element_blocks: bool = None, separate_blocks_format_type: SeparateBlocksFormatType = None, export_fasteners_as_swgen: bool = None, export_rigid_bodies_as_rbgen: bool = None, write_component_based_ties: bool = None, mortar_contact_for_ties: bool = None, write_thickness_file: bool = None, contact_element_types: ContactElementTypeParams = None, json_data: dict = None, **kwargs)\n\nParameters to control MAPDL CDB export settings.\n\nParameters\n\nmodel (Model) – Model to create a ExportMapdlCdbParams object with default parameters.\n\nconfig_settings (str, optional) – MAPDL configuration settings in CDB format to be added at the beginning of the file.This is a beta parameter. The behavior and name may change in the future.\n\npre_solution_settings (str, optional) – MAPDL Settings in CDB format to be added before the solution block in the file.This is a beta parameter. The behavior and name may change in the future.\n\nmaterial_properties (str, optional) – Materials in CDB format to be added to the file.This is a beta parameter. The behavior and name may change in the future.\n\nboundary_conditions (str, optional) – Boundary conditions in CDB format to be added to the file.This is a beta parameter. The behavior and name may change in the future.\n\nanalysis_settings (str, optional) – MAPDL analysis settings in CDB format to be added after the solution block in the file. Note: Boundary conditions can be included into analysis settings.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_cells (bool, optional) – Option to write out cells as part of the file.This is a beta parameter. The behavior and name may change in the future.\n\nenable_face_based_labels (bool, optional) – Use LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.This is a beta parameter. The behavior and name may change in the future.\n\nlabel_export_params (LabelExportParams, optional) – Parameters to control the export of labels as Nodal or Element Components in CDB.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_by_zones (bool, optional) – Option to write zones in the file.This is a beta parameter. The behavior and name may change in the future.\n\nconsider_general_connectors_as_spot_weld (bool, optional) – Option to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.This is a beta parameter. The behavior and name may change in the future.\n\nanalysis_type (CdbAnalysisType, optional) – Option to specify CDB analysis type.This is a beta parameter. The behavior and name may change in the future.\n\nsimulation_type (CdbSimulationType, optional) – Simulation type for the file.This is a beta parameter. The behavior and name may change in the future.\n\nanalysis_settings_file_name (str, optional) – File path to export mapdl analysis settings.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_separate_blocks (bool, optional) – Controls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_components_with_element_blocks (bool, optional) – Controls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.This is a beta parameter. The behavior and name may change in the future.\n\nseparate_blocks_format_type (SeparateBlocksFormatType, optional) – Controls the format type when writing separate element blocks. Only used when write_separate_blocks is true.This is a beta parameter. The behavior and name may change in the future.\n\nexport_fasteners_as_swgen (bool, optional) – Option to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.This is a beta parameter. The behavior and name may change in the future.\n\nexport_rigid_bodies_as_rbgen (bool, optional) – Option to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_component_based_ties (bool, optional) – Option to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.This is a beta parameter. The behavior and name may change in the future.\n\nmortar_contact_for_ties (bool, optional) – Option to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_thickness_file (bool, optional) – Option to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.This is a beta parameter. The behavior and name may change in the future.\n\ncontact_element_types (ContactElementTypeParams, optional) – Parameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportMapdlCdbParams object with provided parameters.\n\nExamples\n\n>>> export_mapdl_cdb_params = prime.ExportMapdlCdbParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbParams.html#overview","title":"ExportMapdlCdbParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nanalysis_settings\n\nBoundary conditions can be included into analysis settings.\n\nanalysis_settings_file_name\n\nFile path to export mapdl analysis settings.\n\nanalysis_type\n\nOption to specify CDB analysis type.\n\nboundary_conditions\n\nBoundary conditions in CDB format to be added to the file.\n\nconfig_settings\n\nMAPDL configuration settings in CDB format to be added at the beginning of the file.\n\nconsider_general_connectors_as_spot_weld\n\nOption to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\ncontact_element_types\n\nParameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs.\n\nenable_face_based_labels\n\nUse LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nexport_fasteners_as_swgen\n\nOption to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nexport_rigid_bodies_as_rbgen\n\nOption to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nlabel_export_params\n\nParameters to control the export of labels as Nodal or Element Components in CDB.\n\nmaterial_properties\n\nMaterials in CDB format to be added to the file.\n\nmortar_contact_for_ties\n\nOption to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\npre_solution_settings\n\nMAPDL Settings in CDB format to be added before the solution block in the file.\n\nseparate_blocks_format_type\n\nControls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nsimulation_type\n\nSimulation type for the file.\n\nwrite_by_zones\n\nOption to write zones in the file.\n\nwrite_cells\n\nOption to write out cells as part of the file.\n\nwrite_component_based_ties\n\nOption to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nwrite_components_with_element_blocks\n\nControls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nwrite_separate_blocks\n\nControls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nwrite_thickness_file\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportMapdlCdbParams object.\n\nset_default\n\nSet the default values of the ExportMapdlCdbParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbParams.html#import-detail","title":"ExportMapdlCdbParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbParams.html#property-detail","title":"ExportMapdlCdbParams > Property detail","text":"Property detail\n\n\n\nproperty ExportMapdlCdbParams.analysis_settings: str\n\nBoundary conditions can be included into analysis settings.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nType\n\nMAPDL analysis settings in CDB format to be added after the solution block in the file. Note\n\n\n\nproperty ExportMapdlCdbParams.analysis_settings_file_name: str\n\nFile path to export mapdl analysis settings.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.analysis_type: CdbAnalysisType\n\nOption to specify CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.boundary_conditions: str\n\nBoundary conditions in CDB format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.config_settings: str\n\nMAPDL configuration settings in CDB format to be added at the beginning of the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.consider_general_connectors_as_spot_weld: bool\n\nOption to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.contact_element_types: ContactElementTypeParams\n\nParameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.enable_face_based_labels: bool\n\nUse LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.export_fasteners_as_swgen: bool\n\nOption to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.export_rigid_bodies_as_rbgen: bool\n\nOption to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.label_export_params: LabelExportParams\n\nParameters to control the export of labels as Nodal or Element Components in CDB.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.material_properties: str\n\nMaterials in CDB format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.mortar_contact_for_ties: bool\n\nOption to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.pre_solution_settings: str\n\nMAPDL Settings in CDB format to be added before the solution block in the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.separate_blocks_format_type: SeparateBlocksFormatType\n\nControls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.simulation_type: CdbSimulationType\n\nSimulation type for the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_by_zones: bool\n\nOption to write zones in the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_cells: bool\n\nOption to write out cells as part of the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_component_based_ties: bool\n\nOption to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_components_with_element_blocks: bool\n\nControls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_separate_blocks: bool\n\nControls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_thickness_file: bool\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportMapdlCdbParams.html#method-detail","title":"ExportMapdlCdbParams > Method detail","text":"Method detail\n\n\n\nExportMapdlCdbParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportMapdlCdbParams.__str__() -> str\n\n\n\n\n\nstatic ExportMapdlCdbParams.print_default()\n\nPrint the default values of ExportMapdlCdbParams object.\n\nExamples\n\n>>> ExportMapdlCdbParams.print_default()\n\n\n\nstatic ExportMapdlCdbParams.set_default(config_settings: str = None, pre_solution_settings: str = None, material_properties: str = None, boundary_conditions: str = None, analysis_settings: str = None, write_cells: bool = None, enable_face_based_labels: bool = None, label_export_params: LabelExportParams = None, write_by_zones: bool = None, consider_general_connectors_as_spot_weld: bool = None, analysis_type: CdbAnalysisType = None, simulation_type: CdbSimulationType = None, analysis_settings_file_name: str = None, write_separate_blocks: bool = None, write_components_with_element_blocks: bool = None, separate_blocks_format_type: SeparateBlocksFormatType = None, export_fasteners_as_swgen: bool = None, export_rigid_bodies_as_rbgen: bool = None, write_component_based_ties: bool = None, mortar_contact_for_ties: bool = None, write_thickness_file: bool = None, contact_element_types: ContactElementTypeParams = None)\n\nSet the default values of the ExportMapdlCdbParams object.\n\nParameters\n\nconfig_settings (str, optional) – MAPDL configuration settings in CDB format to be added at the beginning of the file.\n\npre_solution_settings (str, optional) – MAPDL Settings in CDB format to be added before the solution block in the file.\n\nmaterial_properties (str, optional) – Materials in CDB format to be added to the file.\n\nboundary_conditions (str, optional) – Boundary conditions in CDB format to be added to the file.\n\nanalysis_settings (str, optional) – MAPDL analysis settings in CDB format to be added after the solution block in the file. Note: Boundary conditions can be included into analysis settings.\n\nwrite_cells (bool, optional) – Option to write out cells as part of the file.\n\nenable_face_based_labels (bool, optional) – Use LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nlabel_export_params (LabelExportParams, optional) – Parameters to control the export of labels as Nodal or Element Components in CDB.\n\nwrite_by_zones (bool, optional) – Option to write zones in the file.\n\nconsider_general_connectors_as_spot_weld (bool, optional) – Option to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\nanalysis_type (CdbAnalysisType, optional) – Option to specify CDB analysis type.\n\nsimulation_type (CdbSimulationType, optional) – Simulation type for the file.\n\nanalysis_settings_file_name (str, optional) – File path to export mapdl analysis settings.\n\nwrite_separate_blocks (bool, optional) – Controls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nwrite_components_with_element_blocks (bool, optional) – Controls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nseparate_blocks_format_type (SeparateBlocksFormatType, optional) – Controls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nexport_fasteners_as_swgen (bool, optional) – Option to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nexport_rigid_bodies_as_rbgen (bool, optional) – Option to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nwrite_component_based_ties (bool, optional) – Option to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nmortar_contact_for_ties (bool, optional) – Option to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\nwrite_thickness_file (bool, optional) – Option to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\ncontact_element_types (ContactElementTypeParams, optional) – Parameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_f1_rw_end_plates_stl.html#ansysmeshingprimeexamplesdownload_f1_rw_end_plates_stl","title":"ansys.meshing.prime.examples.download_f1_rw_end_plates_stl","text":"ansys.meshing.prime.examples.download_f1_rw_end_plates_stl\n\n\n\nansys.meshing.prime.examples.download_f1_rw_end_plates_stl(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_end_plates = prime_examples.download_f1_rw_end_plates_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_end_plates, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumesweeper/VolumeSweeper.html#volumesweeper","title":"VolumeSweeper","text":"VolumeSweeper\n\n\n\nclass ansys.meshing.prime.core.volumesweeper.VolumeSweeper(model: ansys.meshing.prime.core.model.Model)\n\nProvides operations to generate volume meshes using stacker technology.\n\nTopoVolumes are volume meshed by sweeping or stacking a set of face\nand edge zonelets.\n\nParameters\n\nmodel (Model) – Server model to create VolumeSweeper object."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumesweeper/VolumeSweeper.html#overview","title":"VolumeSweeper > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_base_face\n\nCreate a face at the specified origin.\n\nstack_base_face\n\nGenerate volume mesh by stacking a meshed face.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VolumeSweeper.\n\n__exit__\n\nExit context for VolumeSweeper.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumesweeper/VolumeSweeper.html#import-detail","title":"VolumeSweeper > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumesweeper/VolumeSweeper.html#attribute-detail","title":"VolumeSweeper > Attribute detail","text":"Attribute detail\n\n\n\nVolumeSweeper.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumesweeper/VolumeSweeper.html#method-detail","title":"VolumeSweeper > Method detail","text":"Method detail\n\n\n\nVolumeSweeper.__enter__()\n\nEnter context for VolumeSweeper.\n\n\n\nVolumeSweeper.__exit__(type, value, traceback)\n\nExit context for VolumeSweeper.\n\n\n\nVolumeSweeper.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeSweeper.create_base_face(part_id: int, topo_volume_ids: Iterable[int], params: ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerParams) -> ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerResults\n\nCreate a face at the specified origin.\n\nThis method creates a face at the specified origin and perpendicular to the\nspecified direction. Also, it imprints model edges on the face, makes necessary\nedge repairs, and duplicates relevant size controls on the base face.\n\nParameters\n\npart_id (int) – ID of part.\n\ntopo_volume_ids (Iterable[int]) – IDs of the volumes to mesh.\n\nparams (MeshStackerParams) – Mesh stacker parameters.\n\nReturns\n\nResults from creating the face.\n\nReturn type\n\nMeshStackerResults\n\nExamples\n\n>>> results = volumesweeper.create_base_face(part_id, topo_volume_ids, params)\n\n\n\nVolumeSweeper.stack_base_face(part_id: int, base_face_ids: Iterable[int], topo_volume_ids: Iterable[int], params: ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerParams) -> ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerResults\n\nGenerate volume mesh by stacking a meshed face.\n\nThis method generates volume mesh by stacking a meshed face, layer by layer, along\nthe given direction. It calculates the stack layers using size controls and global\nsize parameters.\n\nParameters\n\npart_id (int) – ID of the part.\n\nbase_face_ids (Iterable[int]) – IDs of the base faces to stack.\n\ntopo_volume_ids (Iterable[int]) – IDs of the volumes to mesh.\n\nparams (MeshStackerParams) – Mesh stacker parameters.\n\nReturns\n\nResults from generating the volume mesh.\n\nReturn type\n\nMeshStackerResults\n\nExamples\n\n>>> results = volumesweeper.stack_base_face(part_id, base_face_ids, topo_volume_ids, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrolstructs/ThinVolumeMeshParams.html#thinvolumemeshparams","title":"ThinVolumeMeshParams","text":"ThinVolumeMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.thinvolumecontrolstructs.ThinVolumeMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_layers: int = None, imprint_sides: bool = None, n_ignore_rings: int = None, json_data: dict = None, **kwargs)\n\nParameters to generate thin volume mesh. This is for internal use only.\n\nParameters\n\nmodel (Model) – Model to create a ThinVolumeMeshParams object with default parameters.\n\nn_layers (int, optional) – Number of thin volume layers to be generated.\n\nimprint_sides (bool, optional) – Checks whether to imprint quad faces on side zonelets.\n\nn_ignore_rings (int, optional) – Number of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally.\n\njson_data (dict, optional) – JSON dictionary to create a ThinVolumeMeshParams object with provided parameters.\n\nExamples\n\n>>> thin_volume_mesh_params = prime.ThinVolumeMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrolstructs/ThinVolumeMeshParams.html#overview","title":"ThinVolumeMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nimprint_sides\n\nChecks whether to imprint quad faces on side zonelets.\n\nn_ignore_rings\n\nNumber of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally.\n\nn_layers\n\nNumber of thin volume layers to be generated.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ThinVolumeMeshParams object.\n\nset_default\n\nSet the default values of the ThinVolumeMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrolstructs/ThinVolumeMeshParams.html#import-detail","title":"ThinVolumeMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrolstructs/ThinVolumeMeshParams.html#property-detail","title":"ThinVolumeMeshParams > Property detail","text":"Property detail\n\n\n\nproperty ThinVolumeMeshParams.imprint_sides: bool\n\nChecks whether to imprint quad faces on side zonelets.\n\n\n\nproperty ThinVolumeMeshParams.n_ignore_rings: int\n\nNumber of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally.\n\n\n\nproperty ThinVolumeMeshParams.n_layers: int\n\nNumber of thin volume layers to be generated."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrolstructs/ThinVolumeMeshParams.html#method-detail","title":"ThinVolumeMeshParams > Method detail","text":"Method detail\n\n\n\nThinVolumeMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nThinVolumeMeshParams.__str__() -> str\n\n\n\n\n\nstatic ThinVolumeMeshParams.print_default()\n\nPrint the default values of ThinVolumeMeshParams object.\n\nExamples\n\n>>> ThinVolumeMeshParams.print_default()\n\n\n\nstatic ThinVolumeMeshParams.set_default(n_layers: int = None, imprint_sides: bool = None, n_ignore_rings: int = None)\n\nSet the default values of the ThinVolumeMeshParams object.\n\nParameters\n\nn_layers (int, optional) – Number of thin volume layers to be generated.\n\nimprint_sides (bool, optional) – Checks whether to imprint quad faces on side zonelets.\n\nn_ignore_rings (int, optional) – Number of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally."},{"objectID":"Home","href":"api/ansys/meshing/prime/Morpher.html#morpher","title":"Morpher","text":"Morpher\n\n\n\nclass ansys.meshing.prime.Morpher(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nMorpher contain functionalities to change the geometry, adapting the mesh accordingly without a recomputation.\n\nParameters\n\nmodel (Model) – Server model to create Morpher object."},{"objectID":"Home","href":"api/ansys/meshing/prime/Morpher.html#overview","title":"Morpher > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nmatch_morph\n\nMatches source and target zonelets defined using match pairs with prescribed boundary conditions for each pair. Also, solves boundary condition parameters to define uniform surface and volume regions in source neighborhood.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Morpher.\n\n__exit__\n\nExit context for Morpher.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/Morpher.html#import-detail","title":"Morpher > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/Morpher.html#method-detail","title":"Morpher > Method detail","text":"Method detail\n\n\n\nMorpher.__enter__()\n\nEnter context for Morpher.\n\n\n\nMorpher.__exit__(type, value, traceback)\n\nExit context for Morpher.\n\n\n\nMorpher.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMorpher.match_morph(part_id: int, match_pairs: List[ansys.meshing.prime.params.primestructs.MatchPair], match_morph_params: ansys.meshing.prime.params.primestructs.MatchMorphParams, bc_params: ansys.meshing.prime.params.primestructs.MorphBCParams, solve_params: ansys.meshing.prime.params.primestructs.MorphSolveParams) -> ansys.meshing.prime.params.primestructs.MatchMorphResults\n\nMatches source and target zonelets defined using match pairs with prescribed boundary conditions for each pair. Also, solves boundary condition parameters to define uniform surface and volume regions in source neighborhood.\n\nParameters\n\npart_id (int) – Id of source part.\n\nmatch_pairs (MatchPairArray) – Array of  source and target match pairs.\n\nmatch_morph_params (MatchMorphParams) – Match morph parameters.\n\nbc_params (MorphBCParams) – Morph boundary condition parameters.\n\nsolve_params (MorphSolveParams) – Morpher solve parameters.\n\nReturns\n\nReturns the MatchMorphResults.\n\nReturn type\n\nMatchMorphResults\n\nExamples\n\n>>> result = morph.match_morph([match_pair1, match_pair2], match_morph_params, bc_params, solve_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderMergeResults.html#scaffoldermergeresults","title":"ScaffolderMergeResults","text":"ScaffolderMergeResults\n\n\n\nclass ansys.meshing.prime.ScaffolderMergeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_merged: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult structure associated with merge overlapping topofaces and delete shadowed topofaces operations.\n\nParameters\n\nmodel (Model) – Model to create a ScaffolderMergeResults object with default parameters.\n\nn_merged (int, optional) – Number of merged topofaces.\n\nerror_code (ErrorCode, optional) – Error code associated with merge overlapping topofaces operation.\n\njson_data (dict, optional) – JSON dictionary to create a ScaffolderMergeResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_merge_results = prime.ScaffolderMergeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderMergeResults.html#overview","title":"ScaffolderMergeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with merge overlapping topofaces operation.\n\nn_merged\n\nNumber of merged topofaces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScaffolderMergeResults object.\n\nset_default\n\nSet the default values of the ScaffolderMergeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderMergeResults.html#import-detail","title":"ScaffolderMergeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderMergeResults.html#property-detail","title":"ScaffolderMergeResults > Property detail","text":"Property detail\n\n\n\nproperty ScaffolderMergeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with merge overlapping topofaces operation.\n\n\n\nproperty ScaffolderMergeResults.n_merged: int\n\nNumber of merged topofaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderMergeResults.html#method-detail","title":"ScaffolderMergeResults > Method detail","text":"Method detail\n\n\n\nScaffolderMergeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolderMergeResults.__str__() -> str\n\n\n\n\n\nstatic ScaffolderMergeResults.print_default()\n\nPrint the default values of ScaffolderMergeResults object.\n\nExamples\n\n>>> ScaffolderMergeResults.print_default()\n\n\n\nstatic ScaffolderMergeResults.set_default(n_merged: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ScaffolderMergeResults object.\n\nParameters\n\nn_merged (int, optional) – Number of merged topofaces.\n\nerror_code (ErrorCode, optional) – Error code associated with merge overlapping topofaces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesParams.html#smoothdihedralfacenodesparams","title":"SmoothDihedralFaceNodesParams","text":"SmoothDihedralFaceNodesParams\n\n\n\nclass ansys.meshing.prime.SmoothDihedralFaceNodesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min_dihedral_angle: float = None, tolerance: float = None, type: SmoothType = None, json_data: dict = None, **kwargs)\n\nParameters to smooth dihedral face nodes.\n\nParameters\n\nmodel (Model) – Model to create a SmoothDihedralFaceNodesParams object with default parameters.\n\nmin_dihedral_angle (float, optional) – Minimum angle to be used to identify dihedral faces.\n\ntolerance (float, optional) – Tolerance relative to local mesh size to control smooth movement of nodes.\n\ntype (SmoothType, optional) – Option to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle.\n\njson_data (dict, optional) – JSON dictionary to create a SmoothDihedralFaceNodesParams object with provided parameters.\n\nExamples\n\n>>> smooth_dihedral_face_nodes_params = prime.SmoothDihedralFaceNodesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesParams.html#overview","title":"SmoothDihedralFaceNodesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmin_dihedral_angle\n\nMinimum angle to be used to identify dihedral faces.\n\ntolerance\n\nTolerance relative to local mesh size to control smooth movement of nodes.\n\ntype\n\nOption to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SmoothDihedralFaceNodesParams object.\n\nset_default\n\nSet the default values of the SmoothDihedralFaceNodesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesParams.html#import-detail","title":"SmoothDihedralFaceNodesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesParams.html#property-detail","title":"SmoothDihedralFaceNodesParams > Property detail","text":"Property detail\n\n\n\nproperty SmoothDihedralFaceNodesParams.min_dihedral_angle: float\n\nMinimum angle to be used to identify dihedral faces.\n\n\n\nproperty SmoothDihedralFaceNodesParams.tolerance: float\n\nTolerance relative to local mesh size to control smooth movement of nodes.\n\n\n\nproperty SmoothDihedralFaceNodesParams.type: SmoothType\n\nOption to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle."},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothDihedralFaceNodesParams.html#method-detail","title":"SmoothDihedralFaceNodesParams > Method detail","text":"Method detail\n\n\n\nSmoothDihedralFaceNodesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSmoothDihedralFaceNodesParams.__str__() -> str\n\n\n\n\n\nstatic SmoothDihedralFaceNodesParams.print_default()\n\nPrint the default values of SmoothDihedralFaceNodesParams object.\n\nExamples\n\n>>> SmoothDihedralFaceNodesParams.print_default()\n\n\n\nstatic SmoothDihedralFaceNodesParams.set_default(min_dihedral_angle: float = None, tolerance: float = None, type: SmoothType = None)\n\nSet the default values of the SmoothDihedralFaceNodesParams object.\n\nParameters\n\nmin_dihedral_angle (float, optional) – Minimum angle to be used to identify dihedral faces.\n\ntolerance (float, optional) – Tolerance relative to local mesh size to control smooth movement of nodes.\n\ntype (SmoothType, optional) – Option to inflate neighbor nodes of dihedral face edges or smooth dihedral face edge nodes to improve dihedral angle."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_bracket_scdoc.html#ansysmeshingprimeexamplesdownload_bracket_scdoc","title":"ansys.meshing.prime.examples.download_bracket_scdoc","text":"ansys.meshing.prime.examples.download_bracket_scdoc\n\n\n\nansys.meshing.prime.examples.download_bracket_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the bracket scaffold example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByTypeWidget.html#colorbytypewidget","title":"ColorByTypeWidget","text":"ColorByTypeWidget\n\n\n\nclass ansys.meshing.prime.graphics.widgets.color_by_type.ColorByTypeWidget(prime_plotter: ansys.meshing.prime.graphics.plotter.PrimePlotter)\n\nInitializes the color by the type button widget.\n\nThis widget lets you change the color of the mesh\nbased on the zone, zonelet, or part.\n\nParameters\n\nprime_plotter (Plotter) – Plotter object to use."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByTypeWidget.html#overview","title":"ColorByTypeWidget > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncallback\n\nDefine the callback function for the button widget.\n\nset_color_by_type\n\nGet the colors of faces.\n\nupdate\n\nDefine the configuration and representation of the button widget button.\n\nProperties\n\n\n\n\n\nplotter\n\nPlotter object that the widget is assigned to.\n\nAttributes\n\n\n\n\n\n__slots__\n\n\n\nprime_plotter\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByTypeWidget.html#import-detail","title":"ColorByTypeWidget > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByTypeWidget.html#property-detail","title":"ColorByTypeWidget > Property detail","text":"Property detail\n\n\n\nproperty ColorByTypeWidget.plotter: pyvista.Plotter\n\nPlotter object that the widget is assigned to."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByTypeWidget.html#attribute-detail","title":"ColorByTypeWidget > Attribute detail","text":"Attribute detail\n\n\n\nColorByTypeWidget.__slots__ = ()\n\n\n\n\n\nColorByTypeWidget.prime_plotter\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByTypeWidget.html#method-detail","title":"ColorByTypeWidget > Method detail","text":"Method detail\n\n\n\nColorByTypeWidget.callback(state) -> None\n\nDefine the callback function for the button widget.\n\n\n\nColorByTypeWidget.set_color_by_type(color_type: ColorByType, mesh_info: ansys.meshing.prime.core.mesh.DisplayMeshInfo)\n\nGet the colors of faces.\n\nParameters\n\ncolor_type (ColorByType) – Color type to use.\n\nmesh_info (DisplayMeshInfo) – Mesh information that generates an appropriate color.\n\nReturns\n\nList of colors for faces.\n\nReturn type\n\nList\n\n\n\nColorByTypeWidget.update(color_type=ColorByType.ZONE) -> None\n\nDefine the configuration and representation of the button widget button.\n\nParameters\n\ncolor_type (ColorByType, default: ColorByType.ZONE) – Color type to use."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSearch.html#volumesearch","title":"VolumeSearch","text":"VolumeSearch\n\n\n\nclass ansys.meshing.prime.VolumeSearch(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nVolumeSearch allows you to check volume mesh quality.\n\nVolumeSearch performs volume mesh quality check based on different cell quality measures.\n\nParameters\n\nmodel (Model) – Server model to create VolumeSearch object."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSearch.html#overview","title":"VolumeSearch > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_volume_quality_summary\n\nGets the volume quality summary.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VolumeSearch.\n\n__exit__\n\nExit context for VolumeSearch.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSearch.html#import-detail","title":"VolumeSearch > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSearch.html#method-detail","title":"VolumeSearch > Method detail","text":"Method detail\n\n\n\nVolumeSearch.__enter__()\n\nEnter context for VolumeSearch.\n\n\n\nVolumeSearch.__exit__(type, value, traceback)\n\nExit context for VolumeSearch.\n\n\n\nVolumeSearch.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeSearch.get_volume_quality_summary(params: ansys.meshing.prime.params.primestructs.VolumeQualitySummaryParams) -> ansys.meshing.prime.params.primestructs.VolumeQualitySummaryResults\n\nGets the volume quality summary.\n\nDiagnose volume quality for the given scope and cell quality measures provided in the VolumeQualitySummaryParams structure.\nUse default quality limit if the parameters are not specified.\n\nParameters\n\nparams (VolumeQualitySummaryParams) – Volume quality summary parameters.\n\nReturns\n\nReturns the VolumeQualitySummaryResults.\n\nReturn type\n\nVolumeQualitySummaryResults\n\nExamples\n\n>>> vol_search = VolumeSearch(model=model)\n>>> results = vol_search.get_volume_quality_summary(VolumeQualitySummaryParams(model=model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProximitySizingParams.html#proximitysizingparams","title":"ProximitySizingParams","text":"ProximitySizingParams\n\n\n\nclass ansys.meshing.prime.ProximitySizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min: float = None, max: float = None, growth_rate: float = None, elements_per_gap: float = None, ignore_self_proximity: bool = None, ignore_orientation: bool = None, json_data: dict = None, **kwargs)\n\nSize field using proximity size control computes edge and face sizes in gaps using the specified minimum number of element layers.\n\nParameters\n\nmodel (Model) – Model to create a ProximitySizingParams object with default parameters.\n\nmin (float, optional) – Minimum size used for computing edge and face size using proximity size control.\n\nmax (float, optional) – Maximum size used for computing edge and face size using proximity size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\nelements_per_gap (float, optional) – The number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\nignore_self_proximity (bool, optional) – Ignore proximity within zonelets.\n\nignore_orientation (bool, optional) – The ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false.\n\njson_data (dict, optional) – JSON dictionary to create a ProximitySizingParams object with provided parameters.\n\nExamples\n\n>>> proximity_sizing_params = prime.ProximitySizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProximitySizingParams.html#overview","title":"ProximitySizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nelements_per_gap\n\nThe number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nignore_orientation\n\nThe ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false.\n\nignore_self_proximity\n\nIgnore proximity within zonelets.\n\nmax\n\nMaximum size used for computing edge and face size using proximity size control.\n\nmin\n\nMinimum size used for computing edge and face size using proximity size control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ProximitySizingParams object.\n\nset_default\n\nSet the default values of the ProximitySizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProximitySizingParams.html#import-detail","title":"ProximitySizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProximitySizingParams.html#property-detail","title":"ProximitySizingParams > Property detail","text":"Property detail\n\n\n\nproperty ProximitySizingParams.elements_per_gap: float\n\nThe number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\n\n\nproperty ProximitySizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty ProximitySizingParams.ignore_orientation: bool\n\nThe ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false.\n\n\n\nproperty ProximitySizingParams.ignore_self_proximity: bool\n\nIgnore proximity within zonelets.\n\n\n\nproperty ProximitySizingParams.max: float\n\nMaximum size used for computing edge and face size using proximity size control.\n\n\n\nproperty ProximitySizingParams.min: float\n\nMinimum size used for computing edge and face size using proximity size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/ProximitySizingParams.html#method-detail","title":"ProximitySizingParams > Method detail","text":"Method detail\n\n\n\nProximitySizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nProximitySizingParams.__str__() -> str\n\n\n\n\n\nstatic ProximitySizingParams.print_default()\n\nPrint the default values of ProximitySizingParams object.\n\nExamples\n\n>>> ProximitySizingParams.print_default()\n\n\n\nstatic ProximitySizingParams.set_default(min: float = None, max: float = None, growth_rate: float = None, elements_per_gap: float = None, ignore_self_proximity: bool = None, ignore_orientation: bool = None)\n\nSet the default values of the ProximitySizingParams object.\n\nParameters\n\nmin (float, optional) – Minimum size used for computing edge and face size using proximity size control.\n\nmax (float, optional) – Maximum size used for computing edge and face size using proximity size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\nelements_per_gap (float, optional) – The number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\nignore_self_proximity (bool, optional) – Ignore proximity within zonelets.\n\nignore_orientation (bool, optional) – The ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteParams.html#filewriteparams","title":"FileWriteParams","text":"FileWriteParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.FileWriteParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to write a file.\n\nParameters\n\nmodel (Model) – Model to create a FileWriteParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a FileWriteParams object with provided parameters.\n\nExamples\n\n>>> file_write_params = prime.FileWriteParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteParams.html#overview","title":"FileWriteParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FileWriteParams object.\n\nset_default\n\nSet the default values of the FileWriteParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteParams.html#import-detail","title":"FileWriteParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/FileWriteParams.html#method-detail","title":"FileWriteParams > Method detail","text":"Method detail\n\n\n\nFileWriteParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileWriteParams.__str__() -> str\n\n\n\n\n\nstatic FileWriteParams.print_default()\n\nPrint the default values of FileWriteParams object.\n\nExamples\n\n>>> FileWriteParams.print_default()\n\n\n\nstatic FileWriteParams.set_default()\n\nSet the default values of the FileWriteParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPair.html#matchpair","title":"MatchPair","text":"MatchPair\n\n\n\nclass ansys.meshing.prime.MatchPair(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, source_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, target_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, target_type: MatchPairTargetType = None, bc_pairs: ansys.meshing.prime.params.primestructs.List[BCPair] = None, json_data: dict = None, **kwargs)\n\nMatch pair to specify sources, targets for match morphing. Included boundary conditions specification.\n\nParameters\n\nmodel (Model) – Model to create a MatchPair object with default parameters.\n\nsource_surfaces (Iterable[int], optional) – Ids of source surfaces.\n\ntarget_surfaces (Iterable[int], optional) – Ids of target surfaces.\n\ntarget_type (MatchPairTargetType, optional) – Option to specify target surface type.\n\nbc_pairs (List[BCPair], optional) – Array of boundary condition pairs.\n\njson_data (dict, optional) – JSON dictionary to create a MatchPair object with provided parameters.\n\nExamples\n\n>>> match_pair = prime.MatchPair(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPair.html#overview","title":"MatchPair > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbc_pairs\n\nArray of boundary condition pairs.\n\nsource_surfaces\n\nIds of source surfaces.\n\ntarget_surfaces\n\nIds of target surfaces.\n\ntarget_type\n\nOption to specify target surface type.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MatchPair object.\n\nset_default\n\nSet the default values of the MatchPair object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPair.html#import-detail","title":"MatchPair > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPair.html#property-detail","title":"MatchPair > Property detail","text":"Property detail\n\n\n\nproperty MatchPair.bc_pairs: ansys.meshing.prime.params.primestructs.List[BCPair]\n\nArray of boundary condition pairs.\n\n\n\nproperty MatchPair.source_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of source surfaces.\n\n\n\nproperty MatchPair.target_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of target surfaces.\n\n\n\nproperty MatchPair.target_type: MatchPairTargetType\n\nOption to specify target surface type."},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPair.html#method-detail","title":"MatchPair > Method detail","text":"Method detail\n\n\n\nMatchPair.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMatchPair.__str__() -> str\n\n\n\n\n\nstatic MatchPair.print_default()\n\nPrint the default values of MatchPair object.\n\nExamples\n\n>>> MatchPair.print_default()\n\n\n\nstatic MatchPair.set_default(source_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, target_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, target_type: MatchPairTargetType = None, bc_pairs: ansys.meshing.prime.params.primestructs.List[BCPair] = None)\n\nSet the default values of the MatchPair object.\n\nParameters\n\nsource_surfaces (Iterable[int], optional) – Ids of source surfaces.\n\ntarget_surfaces (Iterable[int], optional) – Ids of target surfaces.\n\ntarget_type (MatchPairTargetType, optional) – Option to specify target surface type.\n\nbc_pairs (List[BCPair], optional) – Array of boundary condition pairs."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesResults.html#extracttopovolumesresults","title":"ExtractTopoVolumesResults","text":"ExtractTopoVolumesResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ExtractTopoVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nParameters to extract flow topovolumes.\n\nParameters\n\nmodel (Model) – Model to create a ExtractTopoVolumesResults object with default parameters.\n\nvolumes (Iterable[int], optional) – Ids of extracted flow topovolumes.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractTopoVolumesResults object with provided parameters.\n\nExamples\n\n>>> extract_topo_volumes_results = prime.ExtractTopoVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesResults.html#overview","title":"ExtractTopoVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nvolumes\n\nIds of extracted flow topovolumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractTopoVolumesResults object.\n\nset_default\n\nSet the default values of the ExtractTopoVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesResults.html#import-detail","title":"ExtractTopoVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesResults.html#property-detail","title":"ExtractTopoVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty ExtractTopoVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ExtractTopoVolumesResults.volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of extracted flow topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesResults.html#method-detail","title":"ExtractTopoVolumesResults > Method detail","text":"Method detail\n\n\n\nExtractTopoVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractTopoVolumesResults.__str__() -> str\n\n\n\n\n\nstatic ExtractTopoVolumesResults.print_default()\n\nPrint the default values of ExtractTopoVolumesResults object.\n\nExamples\n\n>>> ExtractTopoVolumesResults.print_default()\n\n\n\nstatic ExtractTopoVolumesResults.set_default(volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ExtractTopoVolumesResults object.\n\nParameters\n\nvolumes (Iterable[int], optional) – Ids of extracted flow topovolumes.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/TetParams.html#tetparams","title":"TetParams","text":"TetParams\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.TetParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, quadratic: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control tetrahedral mesh generation.\n\nParameters\n\nmodel (Model) – Model to create a TetParams object with default parameters.\n\nquadratic (bool, optional) – Option to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh.\n\njson_data (dict, optional) – JSON dictionary to create a TetParams object with provided parameters.\n\nExamples\n\n>>> tet_params = prime.TetParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/TetParams.html#overview","title":"TetParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nquadratic\n\nOption to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TetParams object.\n\nset_default\n\nSet the default values of the TetParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/TetParams.html#import-detail","title":"TetParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/TetParams.html#property-detail","title":"TetParams > Property detail","text":"Property detail\n\n\n\nproperty TetParams.quadratic: bool\n\nOption to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/TetParams.html#method-detail","title":"TetParams > Method detail","text":"Method detail\n\n\n\nTetParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTetParams.__str__() -> str\n\n\n\n\n\nstatic TetParams.print_default()\n\nPrint the default values of TetParams object.\n\nExamples\n\n>>> TetParams.print_default()\n\n\n\nstatic TetParams.set_default(quadratic: bool = None)\n\nSet the default values of the TetParams object.\n\nParameters\n\nquadratic (bool, optional) – Option to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryParams.html#surfacequalitysummaryparams","title":"SurfaceQualitySummaryParams","text":"SurfaceQualitySummaryParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SurfaceQualitySummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, face_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.FaceQualityMeasure] = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nParameters to control surface quality summary results.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceQualitySummaryParams object with default parameters.\n\nface_quality_measures (List[FaceQualityMeasure], optional) – List of face quality measures for surface quality diagnostics.\n\nscope (ScopeDefinition, optional) – Scope the face zonelets for surface quality diagnostics.\n\nquality_limit (Iterable[float], optional) – Quality limit per face quality measure. If the quality limit is not specified, the default quality limit is used.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceQualitySummaryParams object with provided parameters.\n\nExamples\n\n>>> surface_quality_summary_params = prime.SurfaceQualitySummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryParams.html#overview","title":"SurfaceQualitySummaryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_quality_measures\n\nList of face quality measures for surface quality diagnostics.\n\nquality_limit\n\nQuality limit per face quality measure. If the quality limit is not specified, the default quality limit is used.\n\nscope\n\nScope the face zonelets for surface quality diagnostics.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceQualitySummaryParams object.\n\nset_default\n\nSet the default values of the SurfaceQualitySummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryParams.html#import-detail","title":"SurfaceQualitySummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryParams.html#property-detail","title":"SurfaceQualitySummaryParams > Property detail","text":"Property detail\n\n\n\nproperty SurfaceQualitySummaryParams.face_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.FaceQualityMeasure]\n\nList of face quality measures for surface quality diagnostics.\n\n\n\nproperty SurfaceQualitySummaryParams.quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nQuality limit per face quality measure. If the quality limit is not specified, the default quality limit is used.\n\n\n\nproperty SurfaceQualitySummaryParams.scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope the face zonelets for surface quality diagnostics."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryParams.html#method-detail","title":"SurfaceQualitySummaryParams > Method detail","text":"Method detail\n\n\n\nSurfaceQualitySummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceQualitySummaryParams.__str__() -> str\n\n\n\n\n\nstatic SurfaceQualitySummaryParams.print_default()\n\nPrint the default values of SurfaceQualitySummaryParams object.\n\nExamples\n\n>>> SurfaceQualitySummaryParams.print_default()\n\n\n\nstatic SurfaceQualitySummaryParams.set_default(face_quality_measures: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.FaceQualityMeasure] = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, quality_limit: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the SurfaceQualitySummaryParams object.\n\nParameters\n\nface_quality_measures (List[FaceQualityMeasure], optional) – List of face quality measures for surface quality diagnostics.\n\nscope (ScopeDefinition, optional) – Scope the face zonelets for surface quality diagnostics.\n\nquality_limit (Iterable[float], optional) – Quality limit per face quality measure. If the quality limit is not specified, the default quality limit is used."},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureRecoveryParams.html#featurerecoveryparams","title":"FeatureRecoveryParams","text":"FeatureRecoveryParams\n\n\n\nclass ansys.meshing.prime.FeatureRecoveryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, scope: ScopeDefinition = None, enable_feature_octree_refinement: bool = None, size_at_features: float = None, json_data: dict = None, **kwargs)\n\nFeatureRecoveryParams defines feature recovery control parameters for wrapper.\n\nParameters\n\nmodel (Model) – Model to create a FeatureRecoveryParams object with default parameters.\n\nscope (ScopeDefinition, optional) – Scope used for feature recovery control.\n\nenable_feature_octree_refinement (bool, optional) – Checks whether to perform octree refinement at feature edges.\n\nsize_at_features (float, optional) – Refinement size at features.\n\njson_data (dict, optional) – JSON dictionary to create a FeatureRecoveryParams object with provided parameters.\n\nExamples\n\n>>> feature_recovery_params = prime.FeatureRecoveryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureRecoveryParams.html#overview","title":"FeatureRecoveryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nenable_feature_octree_refinement\n\nChecks whether to perform octree refinement at feature edges.\n\nscope\n\nScope used for feature recovery control.\n\nsize_at_features\n\nRefinement size at features.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FeatureRecoveryParams object.\n\nset_default\n\nSet the default values of the FeatureRecoveryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureRecoveryParams.html#import-detail","title":"FeatureRecoveryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureRecoveryParams.html#property-detail","title":"FeatureRecoveryParams > Property detail","text":"Property detail\n\n\n\nproperty FeatureRecoveryParams.enable_feature_octree_refinement: bool\n\nChecks whether to perform octree refinement at feature edges.\n\n\n\nproperty FeatureRecoveryParams.scope: ScopeDefinition\n\nScope used for feature recovery control.\n\n\n\nproperty FeatureRecoveryParams.size_at_features: float\n\nRefinement size at features."},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureRecoveryParams.html#method-detail","title":"FeatureRecoveryParams > Method detail","text":"Method detail\n\n\n\nFeatureRecoveryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFeatureRecoveryParams.__str__() -> str\n\n\n\n\n\nstatic FeatureRecoveryParams.print_default()\n\nPrint the default values of FeatureRecoveryParams object.\n\nExamples\n\n>>> FeatureRecoveryParams.print_default()\n\n\n\nstatic FeatureRecoveryParams.set_default(scope: ScopeDefinition = None, enable_feature_octree_refinement: bool = None, size_at_features: float = None)\n\nSet the default values of the FeatureRecoveryParams object.\n\nParameters\n\nscope (ScopeDefinition, optional) – Scope used for feature recovery control.\n\nenable_feature_octree_refinement (bool, optional) – Checks whether to perform octree refinement at feature edges.\n\nsize_at_features (float, optional) – Refinement size at features."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateVolumeZonesType.html#createvolumezonestype","title":"CreateVolumeZonesType","text":"CreateVolumeZonesType\n\n\n\nclass ansys.meshing.prime.CreateVolumeZonesType\n\nIndicate type to create volume zones for volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateVolumeZonesType.html#overview","title":"CreateVolumeZonesType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\nOption to not create volume zones.\n\nPERNAMESOURCE\n\nOption to create zone per name computed from face zonelets of volume. Single zone is created for multiple volumes if same zone name is identified using face zonelets for the volumes.\n\nPERVOLUME\n\nOption to create volume zone per volume. Suffix is added to volume zone name, if same name is identified for different volumes using face zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateVolumeZonesType.html#import-detail","title":"CreateVolumeZonesType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateVolumeZonesType.html#attribute-detail","title":"CreateVolumeZonesType > Attribute detail","text":"Attribute detail\n\n\n\nCreateVolumeZonesType.NONE = 0\n\nOption to not create volume zones.\n\n\n\nCreateVolumeZonesType.PERNAMESOURCE = 2\n\nOption to create zone per name computed from face zonelets of volume. Single zone is created for multiple volumes if same zone name is identified using face zonelets for the volumes.\n\n\n\nCreateVolumeZonesType.PERVOLUME = 1\n\nOption to create volume zone per volume. Suffix is added to volume zone name, if same name is identified for different volumes using face zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/utils/index.html#the-utilspy-module","title":"The utils.py module","text":"The utils.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/utils/index.html#summary","title":"The utils.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ncheck_name_pattern\n\nCheck several patterns in one string.\n\nmatch_pattern\n\nPattern matching function for strings.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/utils/index.html#description","title":"The utils.py module > Description","text":"Description\n\nUtil functions for lucid modules."},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSolid.html#igaunstructuredsplinesolid","title":"IGAUnstructuredSplineSolid","text":"IGAUnstructuredSplineSolid\n\n\n\nclass ansys.meshing.prime.IGAUnstructuredSplineSolid(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id: int = None, degree: int = None, invalid_jacobian_elements_count: int = None, json_data: dict = None, **kwargs)\n\nInformation of unstructured spline solid.\n\nParameters\n\nmodel (Model) – Model to create a IGAUnstructuredSplineSolid object with default parameters.\n\nid (int, optional) – Id of the unstructured spline solid.This is a beta parameter. The behavior and name may change in the future.\n\ndegree (int, optional) – Degree of the spline solid.This is a beta parameter. The behavior and name may change in the future.\n\ninvalid_jacobian_elements_count (int, optional) – Count of elements with negative jacobian.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a IGAUnstructuredSplineSolid object with provided parameters.\n\nExamples\n\n>>> iga_unstructured_spline_solid = prime.IGAUnstructuredSplineSolid(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSolid.html#overview","title":"IGAUnstructuredSplineSolid > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndegree\n\nDegree of the spline solid.\n\nid\n\nId of the unstructured spline solid.\n\ninvalid_jacobian_elements_count\n\nCount of elements with negative jacobian.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IGAUnstructuredSplineSolid object.\n\nset_default\n\nSet the default values of the IGAUnstructuredSplineSolid object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSolid.html#import-detail","title":"IGAUnstructuredSplineSolid > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSolid.html#property-detail","title":"IGAUnstructuredSplineSolid > Property detail","text":"Property detail\n\n\n\nproperty IGAUnstructuredSplineSolid.degree: int\n\nDegree of the spline solid.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty IGAUnstructuredSplineSolid.id: int\n\nId of the unstructured spline solid.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty IGAUnstructuredSplineSolid.invalid_jacobian_elements_count: int\n\nCount of elements with negative jacobian.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/IGAUnstructuredSplineSolid.html#method-detail","title":"IGAUnstructuredSplineSolid > Method detail","text":"Method detail\n\n\n\nIGAUnstructuredSplineSolid.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIGAUnstructuredSplineSolid.__str__() -> str\n\n\n\n\n\nstatic IGAUnstructuredSplineSolid.print_default()\n\nPrint the default values of IGAUnstructuredSplineSolid object.\n\nExamples\n\n>>> IGAUnstructuredSplineSolid.print_default()\n\n\n\nstatic IGAUnstructuredSplineSolid.set_default(id: int = None, degree: int = None, invalid_jacobian_elements_count: int = None)\n\nSet the default values of the IGAUnstructuredSplineSolid object.\n\nParameters\n\nid (int, optional) – Id of the unstructured spline solid.\n\ndegree (int, optional) – Degree of the spline solid.\n\ninvalid_jacobian_elements_count (int, optional) – Count of elements with negative jacobian."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsParams.html#wrapperclosegapsparams","title":"WrapperCloseGapsParams","text":"WrapperCloseGapsParams\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapperCloseGapsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, target: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, gap_size: float = None, material_point_name: str = None, suggested_part_name: str = None, number_of_threads: int = None, create_new_part: bool = None, resolution_factor: float = None, json_data: dict = None, **kwargs)\n\nWrapperCloseGapsParams to define parameters for close gaps operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapperCloseGapsParams object with default parameters.\n\ntarget (ScopeDefinition, optional) – Scope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope.\n\ngap_size (float, optional) – Maximum gap size to be closed.\n\nmaterial_point_name (str, optional) – Material point name near the gaps to be closed.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\ncreate_new_part (bool, optional) – Creates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\nresolution_factor (float, optional) – Factor to resolve the smallest gap for the given gap size.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperCloseGapsParams object with provided parameters.\n\nExamples\n\n>>> wrapper_close_gaps_params = prime.WrapperCloseGapsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsParams.html#overview","title":"WrapperCloseGapsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreate_new_part\n\nCreates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\ngap_size\n\nMaximum gap size to be closed.\n\nmaterial_point_name\n\nMaterial point name near the gaps to be closed.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\nresolution_factor\n\nFactor to resolve the smallest gap for the given gap size.\n\nsuggested_part_name\n\nSuggested part name for created patching surfaces.\n\ntarget\n\nScope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperCloseGapsParams object.\n\nset_default\n\nSet the default values of the WrapperCloseGapsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsParams.html#import-detail","title":"WrapperCloseGapsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsParams.html#property-detail","title":"WrapperCloseGapsParams > Property detail","text":"Property detail\n\n\n\nproperty WrapperCloseGapsParams.create_new_part: bool\n\nCreates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\n\n\nproperty WrapperCloseGapsParams.gap_size: float\n\nMaximum gap size to be closed.\n\n\n\nproperty WrapperCloseGapsParams.material_point_name: str\n\nMaterial point name near the gaps to be closed.\n\n\n\nproperty WrapperCloseGapsParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\n\n\nproperty WrapperCloseGapsParams.resolution_factor: float\n\nFactor to resolve the smallest gap for the given gap size.\n\n\n\nproperty WrapperCloseGapsParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces.\n\n\n\nproperty WrapperCloseGapsParams.target: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsParams.html#method-detail","title":"WrapperCloseGapsParams > Method detail","text":"Method detail\n\n\n\nWrapperCloseGapsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperCloseGapsParams.__str__() -> str\n\n\n\n\n\nstatic WrapperCloseGapsParams.print_default()\n\nPrint the default values of WrapperCloseGapsParams object.\n\nExamples\n\n>>> WrapperCloseGapsParams.print_default()\n\n\n\nstatic WrapperCloseGapsParams.set_default(target: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, gap_size: float = None, material_point_name: str = None, suggested_part_name: str = None, number_of_threads: int = None, create_new_part: bool = None, resolution_factor: float = None)\n\nSet the default values of the WrapperCloseGapsParams object.\n\nParameters\n\ntarget (ScopeDefinition, optional) – Scope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope.\n\ngap_size (float, optional) – Maximum gap size to be closed.\n\nmaterial_point_name (str, optional) – Material point name near the gaps to be closed.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\ncreate_new_part (bool, optional) – Creates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\nresolution_factor (float, optional) – Factor to resolve the smallest gap for the given gap size."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeper/VolumeSweeper.html#volumesweeper","title":"VolumeSweeper","text":"VolumeSweeper\n\n\n\nclass ansys.meshing.prime.autogen.volumesweeper.VolumeSweeper(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, part_id: int)\n\nVolumeSweeper class provide functions to volume mesh a given set of topovolumes by sweeping or stacking a set of face and edge zonelets. Provide operations to generate volume mesh using stacker technology.\n\nParameters\n\nmodel (Model) – Server model to create VolumeSweeper object.\n\npart_id (int) – Id of the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeper/VolumeSweeper.html#overview","title":"VolumeSweeper > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_base_face\n\nCreates a face at the specified origin perpendicular to the specified direction. Also, imprint model edges on the face, make necessary edge repairs, and duplicate relevant size controls on the base face.\n\nstack_base_face\n\nGenerates volume mesh stacking a meshed face layer by layer along the given direction. Calculates the stack layers using size controls and global size parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VolumeSweeper.\n\n__exit__\n\nExit context for VolumeSweeper.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeper/VolumeSweeper.html#import-detail","title":"VolumeSweeper > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesweeper/VolumeSweeper.html#method-detail","title":"VolumeSweeper > Method detail","text":"Method detail\n\n\n\nVolumeSweeper.__enter__()\n\nEnter context for VolumeSweeper.\n\n\n\nVolumeSweeper.__exit__(type, value, traceback)\n\nExit context for VolumeSweeper.\n\n\n\nVolumeSweeper.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeSweeper.create_base_face(topo_volume_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MeshStackerParams) -> ansys.meshing.prime.params.primestructs.MeshStackerResults\n\nCreates a face at the specified origin perpendicular to the specified direction. Also, imprint model edges on the face, make necessary edge repairs, and duplicate relevant size controls on the base face.\n\nParameters\n\ntopo_volume_ids (Iterable[int]) – Ids of volumes that need to be meshed.\n\nparams (MeshStackerParams) – Mesh stacker parameters.\n\nReturns\n\nReturns the MeshStackerResults.\n\nReturn type\n\nMeshStackerResults\n\nExamples\n\n>>> results = volumesweeper.create_base_face(topo_volume_ids, params)\n\n\n\nVolumeSweeper.stack_base_face(base_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int], topo_volume_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MeshStackerParams) -> ansys.meshing.prime.params.primestructs.MeshStackerResults\n\nGenerates volume mesh stacking a meshed face layer by layer along the given direction. Calculates the stack layers using size controls and global size parameters.\n\nParameters\n\nbase_face_ids (Iterable[int]) – Ids of base faces to be stacked\n\ntopo_volume_ids (Iterable[int]) – Ids of volumes that need to be meshed.\n\nparams (MeshStackerParams) – Mesh stacker parameters.\n\nReturns\n\nReturns the MeshStackerResults.\n\nReturn type\n\nMeshStackerResults\n\nExamples\n\n>>> results = volumesweeper.stack_base_face(base_face_ids, topo_volume_ids, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedResult.html#deleteunwettedresult","title":"DeleteUnwettedResult","text":"DeleteUnwettedResult\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.DeleteUnwettedResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with delete unwetted surfaces operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteUnwettedResult object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with delete unwetted surfaces operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteUnwettedResult object with provided parameters.\n\nExamples\n\n>>> delete_unwetted_result = prime.DeleteUnwettedResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedResult.html#overview","title":"DeleteUnwettedResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with delete unwetted surfaces operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteUnwettedResult object.\n\nset_default\n\nSet the default values of the DeleteUnwettedResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedResult.html#import-detail","title":"DeleteUnwettedResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedResult.html#property-detail","title":"DeleteUnwettedResult > Property detail","text":"Property detail\n\n\n\nproperty DeleteUnwettedResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with delete unwetted surfaces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedResult.html#method-detail","title":"DeleteUnwettedResult > Method detail","text":"Method detail\n\n\n\nDeleteUnwettedResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteUnwettedResult.__str__() -> str\n\n\n\n\n\nstatic DeleteUnwettedResult.print_default()\n\nPrint the default values of DeleteUnwettedResult object.\n\nExamples\n\n>>> DeleteUnwettedResult.print_default()\n\n\n\nstatic DeleteUnwettedResult.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteUnwettedResult object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with delete unwetted surfaces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoftSizingParams.html#softsizingparams","title":"SoftSizingParams","text":"SoftSizingParams\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.SoftSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nSize field computed using soft size control enables you to set the maximum size on the scoped zonelets .\n\nWhen the soft sizing is computed for edges or faces, the size will be affected by size computed using other controls.\nThe minimum size on the zonelet will be determined based on the influence of other size controls,\nelse a uniform size will be maintained.\n\nParameters\n\nmodel (Model) – Model to create a SoftSizingParams object with default parameters.\n\nmax (float, optional) – Maximum size used for computing edge and face size using soft size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\njson_data (dict, optional) – JSON dictionary to create a SoftSizingParams object with provided parameters.\n\nExamples\n\n>>> soft_sizing_params = prime.SoftSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoftSizingParams.html#overview","title":"SoftSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nmax\n\nMaximum size used for computing edge and face size using soft size control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SoftSizingParams object.\n\nset_default\n\nSet the default values of the SoftSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoftSizingParams.html#import-detail","title":"SoftSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoftSizingParams.html#property-detail","title":"SoftSizingParams > Property detail","text":"Property detail\n\n\n\nproperty SoftSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty SoftSizingParams.max: float\n\nMaximum size used for computing edge and face size using soft size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SoftSizingParams.html#method-detail","title":"SoftSizingParams > Method detail","text":"Method detail\n\n\n\nSoftSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSoftSizingParams.__str__() -> str\n\n\n\n\n\nstatic SoftSizingParams.print_default()\n\nPrint the default values of SoftSizingParams object.\n\nExamples\n\n>>> SoftSizingParams.print_default()\n\n\n\nstatic SoftSizingParams.set_default(max: float = None, growth_rate: float = None)\n\nSet the default values of the SoftSizingParams object.\n\nParameters\n\nmax (float, optional) – Maximum size used for computing edge and face size using soft size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/index.html#the-volumesearchstructspy-module","title":"The volumesearchstructs.py module","text":"The volumesearchstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/index.html#summary","title":"The volumesearchstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVolumeQualityResultsPart\n\nResult of volume quality of part.\n\nVolumeQualitySummaryParams\n\nParameters to control volume quality summary results.\n\nVolumeQualitySummaryResults\n\nResults of volume quality summary.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/index.html#description","title":"The volumesearchstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CdbAnalysisType.html#cdbanalysistype","title":"CdbAnalysisType","text":"CdbAnalysisType\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.CdbAnalysisType\n\nProvides the MAPDL CDB analysis type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CdbAnalysisType.html#overview","title":"CdbAnalysisType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBELGIAN\n\nOption to select Belgian as CDB analysis type.\n\nNONE\n\nOption to select no analysis type. This is the default option.\n\nOUTERPANELSTIFFNESS\n\nOption to select Outer Panel Stiffness as CDB analysis type.\n\nSEATRETRACTOR\n\nOption to select Seat Retractor as CDB analysis type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CdbAnalysisType.html#import-detail","title":"CdbAnalysisType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CdbAnalysisType.html#attribute-detail","title":"CdbAnalysisType > Attribute detail","text":"Attribute detail\n\n\n\nCdbAnalysisType.BELGIAN = 2\n\nOption to select Belgian as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nCdbAnalysisType.NONE = 0\n\nOption to select no analysis type. This is the default option.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nCdbAnalysisType.OUTERPANELSTIFFNESS = 1\n\nOption to select Outer Panel Stiffness as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nCdbAnalysisType.SEATRETRACTOR = 3\n\nOption to select Seat Retractor as CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSplineParams.html#quadtosplineparams","title":"QuadToSplineParams","text":"QuadToSplineParams\n\n\n\nclass ansys.meshing.prime.QuadToSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, shell_thickness: float = None, solid_shell: bool = None, separate_by_zone: bool = None, zone_name_shell_thickness_pairs: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, json_data: dict = None, **kwargs)\n\nParameters to control conversion of quadrilateral mesh to spline.\n\nParameters\n\nmodel (Model) – Model to create a QuadToSplineParams object with default parameters.\n\nfeature_capture_type (SplineFeatureCaptureType, optional) – Feature capture options.This is a beta parameter. The behavior and name may change in the future.\n\nfeature_angle (float, optional) – Angle to capture the feature.This is a beta parameter. The behavior and name may change in the future.\n\ncorner_angle (float, optional) – Corner angle of the feature.This is a beta parameter. The behavior and name may change in the future.\n\nshell_thickness (float, optional) – Thickness of shell.This is a beta parameter. The behavior and name may change in the future.\n\nsolid_shell (bool, optional) – Solid shell option. Set true to generate solid shell spline, and set false to generate surface spline.This is a beta parameter. The behavior and name may change in the future.\n\nseparate_by_zone (bool, optional) – Option to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.This is a beta parameter. The behavior and name may change in the future.\n\nzone_name_shell_thickness_pairs (Dict[str, Union[str, int, float, bool]], optional) – Zone name and thickness pair list. For example, {“Zone1Name”: Zone1Thickness, “Zone2Name”: Zone2Thickness, …}.This is a beta parameter. The behavior and name may change in the future.\n\ncontinuity (SplineContinuityType, optional) – Spline Continuity options.This is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry (bool, optional) – Option to project on geometry.This is a beta parameter. The behavior and name may change in the future.\n\nuse_projection_scope (bool, optional) – Option to use projection scope.This is a beta parameter. The behavior and name may change in the future.\n\nprojection_scope (ScopeDefinition, optional) – Scope to evaluate entities for projection.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a QuadToSplineParams object with provided parameters.\n\nExamples\n\n>>> quad_to_spline_params = prime.QuadToSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSplineParams.html#overview","title":"QuadToSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontinuity\n\nSpline Continuity options.\n\ncorner_angle\n\nCorner angle of the feature.\n\nfeature_angle\n\nAngle to capture the feature.\n\nfeature_capture_type\n\nFeature capture options.\n\nproject_on_geometry\n\nOption to project on geometry.\n\nprojection_scope\n\nScope to evaluate entities for projection.\n\nseparate_by_zone\n\nOption to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nshell_thickness\n\nThickness of shell.\n\nsolid_shell\n\nSolid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nuse_projection_scope\n\nOption to use projection scope.\n\nzone_name_shell_thickness_pairs\n\nZone2Thickness, …}.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of QuadToSplineParams object.\n\nset_default\n\nSet the default values of the QuadToSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSplineParams.html#import-detail","title":"QuadToSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSplineParams.html#property-detail","title":"QuadToSplineParams > Property detail","text":"Property detail\n\n\n\nproperty QuadToSplineParams.continuity: SplineContinuityType\n\nSpline Continuity options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.corner_angle: float\n\nCorner angle of the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.feature_angle: float\n\nAngle to capture the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.feature_capture_type: SplineFeatureCaptureType\n\nFeature capture options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.project_on_geometry: bool\n\nOption to project on geometry.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope to evaluate entities for projection.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.separate_by_zone: bool\n\nOption to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.shell_thickness: float\n\nThickness of shell.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.solid_shell: bool\n\nSolid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.use_projection_scope: bool\n\nOption to use projection scope.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.zone_name_shell_thickness_pairs: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]]\n\nZone2Thickness, …}.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nType\n\nZone name and thickness pair list. For example, {“Zone1Name”\n\nType\n\nZone1Thickness, “Zone2Name”"},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSplineParams.html#method-detail","title":"QuadToSplineParams > Method detail","text":"Method detail\n\n\n\nQuadToSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nQuadToSplineParams.__str__() -> str\n\n\n\n\n\nstatic QuadToSplineParams.print_default()\n\nPrint the default values of QuadToSplineParams object.\n\nExamples\n\n>>> QuadToSplineParams.print_default()\n\n\n\nstatic QuadToSplineParams.set_default(feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, shell_thickness: float = None, solid_shell: bool = None, separate_by_zone: bool = None, zone_name_shell_thickness_pairs: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None)\n\nSet the default values of the QuadToSplineParams object.\n\nParameters\n\nfeature_capture_type (SplineFeatureCaptureType, optional) – Feature capture options.\n\nfeature_angle (float, optional) – Angle to capture the feature.\n\ncorner_angle (float, optional) – Corner angle of the feature.\n\nshell_thickness (float, optional) – Thickness of shell.\n\nsolid_shell (bool, optional) – Solid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nseparate_by_zone (bool, optional) – Option to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nzone_name_shell_thickness_pairs (Dict[str, Union[str, int, float, bool]], optional) – Zone name and thickness pair list. For example, {“Zone1Name”: Zone1Thickness, “Zone2Name”: Zone2Thickness, …}.\n\ncontinuity (SplineContinuityType, optional) – Spline Continuity options.\n\nproject_on_geometry (bool, optional) – Option to project on geometry.\n\nuse_projection_scope (bool, optional) – Option to use projection scope.\n\nprojection_scope (ScopeDefinition, optional) – Scope to evaluate entities for projection."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadParams.html#importcadparams","title":"ImportCadParams","text":"ImportCadParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportCadParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, ansys_release: str = None, cad_reader_route: CadReaderRoute = None, part_creation_type: PartCreationType = None, geometry_transfer: bool = None, length_unit: LengthUnit = None, refacet: bool = None, cad_refaceting_params: CadRefacetingParams = None, stitch_tolerance: float = None, cad_update_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, validate_shared_topology: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control CAD import settings.\n\nParameters\n\nmodel (Model) – Model to create a ImportCadParams object with default parameters.\n\nappend (bool, optional) – Append imported CAD into existing model when true.\n\nansys_release (str, optional) – Configures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\ncad_reader_route (CadReaderRoute, optional) – Specify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\npart_creation_type (PartCreationType, optional) – Create a part per CAD Model, Assembly, Part, Body.\n\ngeometry_transfer (bool, optional) – Option to enable transfer of geometry data (NURBS).\n\nlength_unit (LengthUnit, optional) – Specify length unit for import.\n\nrefacet (bool, optional) – Refine or coarsen the CAD faceting based on refaceting parameters when true.\n\ncad_refaceting_params (CadRefacetingParams, optional) – Specify refaceting parameters.\n\nstitch_tolerance (float, optional) – Stitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\ncad_update_parameters (Dict[str, Union[str, int, float, bool]], optional) – Specify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\nvalidate_shared_topology (bool, optional) – Specify whether to validate the shared topology information.\n\njson_data (dict, optional) – JSON dictionary to create a ImportCadParams object with provided parameters.\n\nExamples\n\n>>> import_cad_params = prime.ImportCadParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadParams.html#overview","title":"ImportCadParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nansys_release\n\nConfigures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\nappend\n\nAppend imported CAD into existing model when true.\n\ncad_reader_route\n\nSpecify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\ncad_refaceting_params\n\nSpecify refaceting parameters.\n\ncad_update_parameters\n\nSpecify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\ngeometry_transfer\n\nOption to enable transfer of geometry data (NURBS).\n\nlength_unit\n\nSpecify length unit for import.\n\npart_creation_type\n\nCreate a part per CAD Model, Assembly, Part, Body.\n\nrefacet\n\nRefine or coarsen the CAD faceting based on refaceting parameters when true.\n\nstitch_tolerance\n\nStitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\nvalidate_shared_topology\n\nSpecify whether to validate the shared topology information.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportCadParams object.\n\nset_default\n\nSet the default values of the ImportCadParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadParams.html#import-detail","title":"ImportCadParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadParams.html#property-detail","title":"ImportCadParams > Property detail","text":"Property detail\n\n\n\nproperty ImportCadParams.ansys_release: str\n\nConfigures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\n\n\nproperty ImportCadParams.append: bool\n\nAppend imported CAD into existing model when true.\n\n\n\nproperty ImportCadParams.cad_reader_route: CadReaderRoute\n\nSpecify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\n\n\nproperty ImportCadParams.cad_refaceting_params: CadRefacetingParams\n\nSpecify refaceting parameters.\n\n\n\nproperty ImportCadParams.cad_update_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]]\n\nSpecify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\n\n\nproperty ImportCadParams.geometry_transfer: bool\n\nOption to enable transfer of geometry data (NURBS).\n\n\n\nproperty ImportCadParams.length_unit: LengthUnit\n\nSpecify length unit for import.\n\n\n\nproperty ImportCadParams.part_creation_type: PartCreationType\n\nCreate a part per CAD Model, Assembly, Part, Body.\n\n\n\nproperty ImportCadParams.refacet: bool\n\nRefine or coarsen the CAD faceting based on refaceting parameters when true.\n\n\n\nproperty ImportCadParams.stitch_tolerance: float\n\nStitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\n\n\nproperty ImportCadParams.validate_shared_topology: bool\n\nSpecify whether to validate the shared topology information."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportCadParams.html#method-detail","title":"ImportCadParams > Method detail","text":"Method detail\n\n\n\nImportCadParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportCadParams.__str__() -> str\n\n\n\n\n\nstatic ImportCadParams.print_default()\n\nPrint the default values of ImportCadParams object.\n\nExamples\n\n>>> ImportCadParams.print_default()\n\n\n\nstatic ImportCadParams.set_default(append: bool = None, ansys_release: str = None, cad_reader_route: CadReaderRoute = None, part_creation_type: PartCreationType = None, geometry_transfer: bool = None, length_unit: LengthUnit = None, refacet: bool = None, cad_refaceting_params: CadRefacetingParams = None, stitch_tolerance: float = None, cad_update_parameters: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, validate_shared_topology: bool = None)\n\nSet the default values of the ImportCadParams object.\n\nParameters\n\nappend (bool, optional) – Append imported CAD into existing model when true.\n\nansys_release (str, optional) – Configures the Ansys release to be used for loading CAD data through non Native route. Supported formats for specifying Ansys release version are ‘25.2’, ‘252’, ‘v252’, ‘25R2’.\n\ncad_reader_route (CadReaderRoute, optional) – Specify the available CAD reader routes. The available CAD reader routes are ProgramControlled, Native, WorkBench, SpaceClaim.\n\npart_creation_type (PartCreationType, optional) – Create a part per CAD Model, Assembly, Part, Body.\n\ngeometry_transfer (bool, optional) – Option to enable transfer of geometry data (NURBS).\n\nlength_unit (LengthUnit, optional) – Specify length unit for import.\n\nrefacet (bool, optional) – Refine or coarsen the CAD faceting based on refaceting parameters when true.\n\ncad_refaceting_params (CadRefacetingParams, optional) – Specify refaceting parameters.\n\nstitch_tolerance (float, optional) – Stitch facets based on tolerance. Available only with WorkBench CAD Reader route.\n\ncad_update_parameters (Dict[str, Union[str, int, float, bool]], optional) – Specify the CAD parameters for parametric CAD update. Available only with WorkBench CAD Reader route.\n\nvalidate_shared_topology (bool, optional) – Specify whether to validate the shared topology information."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapRegion.html#wrapregion","title":"WrapRegion","text":"WrapRegion\n\n\n\nclass ansys.meshing.prime.WrapRegion\n\nIndicates source type to extract wrapper region."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapRegion.html#overview","title":"WrapRegion > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEXTERNAL\n\nOption to extract exterior wrapper region.\n\nLARGESTINTERNAL\n\nOption to extract largest internal wrapper region.\n\nMATERIALPOINT\n\nOption to use live material points to extract wrapper region."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapRegion.html#import-detail","title":"WrapRegion > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapRegion.html#attribute-detail","title":"WrapRegion > Attribute detail","text":"Attribute detail\n\n\n\nWrapRegion.EXTERNAL = 1\n\nOption to extract exterior wrapper region.\n\n\n\nWrapRegion.LARGESTINTERNAL = 2\n\nOption to extract largest internal wrapper region.\n\n\n\nWrapRegion.MATERIALPOINT = 0\n\nOption to use live material points to extract wrapper region."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_toy_car_pmdat.html#ansysmeshingprimeexamplesdownload_toy_car_pmdat","title":"ansys.meshing.prime.examples.download_toy_car_pmdat","text":"ansys.meshing.prime.examples.download_toy_car_pmdat\n\n\n\nansys.meshing.prime.examples.download_toy_car_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the toy car example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(toy_car, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeTopoVolumesResults.html#computetopovolumesresults","title":"ComputeTopoVolumesResults","text":"ComputeTopoVolumesResults\n\n\n\nclass ansys.meshing.prime.ComputeTopoVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, material_point_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, external_open_topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, new_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, deleted_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with compute topovolumes.\n\nParameters\n\nmodel (Model) – Model to create a ComputeTopoVolumesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nerror_locations (Iterable[float], optional) – Coordinates of problematic locations in the surface mesh.\n\ntopo_volumes (Iterable[int], optional) – Ids of all topovolumes computed.\n\nmaterial_point_topo_volumes (Iterable[int], optional) – Ids of topovolumes enclosing material points.\n\nexternal_open_topo_faces (Iterable[int], optional) – Topoface ids that are in external space and not part of any topovolumes.\n\nnew_topo_volumes (Iterable[int], optional) – Ids of new topovolumes computed.\n\ndeleted_topo_volumes (Iterable[int], optional) – Ids of existing topovolumes that got deleted.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute topovolumes.\n\njson_data (dict, optional) – JSON dictionary to create a ComputeTopoVolumesResults object with provided parameters.\n\nExamples\n\n>>> compute_topo_volumes_results = prime.ComputeTopoVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeTopoVolumesResults.html#overview","title":"ComputeTopoVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndeleted_topo_volumes\n\nIds of existing topovolumes that got deleted.\n\nerror_code\n\nError code associated with the failure of operation.\n\nerror_locations\n\nCoordinates of problematic locations in the surface mesh.\n\nexternal_open_topo_faces\n\nTopoface ids that are in external space and not part of any topovolumes.\n\nmaterial_point_topo_volumes\n\nIds of topovolumes enclosing material points.\n\nnew_topo_volumes\n\nIds of new topovolumes computed.\n\ntopo_volumes\n\nIds of all topovolumes computed.\n\nwarning_codes\n\nWarning codes associated with the compute topovolumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComputeTopoVolumesResults object.\n\nset_default\n\nSet the default values of the ComputeTopoVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeTopoVolumesResults.html#import-detail","title":"ComputeTopoVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeTopoVolumesResults.html#property-detail","title":"ComputeTopoVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty ComputeTopoVolumesResults.deleted_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of existing topovolumes that got deleted.\n\n\n\nproperty ComputeTopoVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ComputeTopoVolumesResults.error_locations: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCoordinates of problematic locations in the surface mesh.\n\n\n\nproperty ComputeTopoVolumesResults.external_open_topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoface ids that are in external space and not part of any topovolumes.\n\n\n\nproperty ComputeTopoVolumesResults.material_point_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of topovolumes enclosing material points.\n\n\n\nproperty ComputeTopoVolumesResults.new_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new topovolumes computed.\n\n\n\nproperty ComputeTopoVolumesResults.topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of all topovolumes computed.\n\n\n\nproperty ComputeTopoVolumesResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the compute topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeTopoVolumesResults.html#method-detail","title":"ComputeTopoVolumesResults > Method detail","text":"Method detail\n\n\n\nComputeTopoVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComputeTopoVolumesResults.__str__() -> str\n\n\n\n\n\nstatic ComputeTopoVolumesResults.print_default()\n\nPrint the default values of ComputeTopoVolumesResults object.\n\nExamples\n\n>>> ComputeTopoVolumesResults.print_default()\n\n\n\nstatic ComputeTopoVolumesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, material_point_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, external_open_topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, new_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, deleted_topo_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ComputeTopoVolumesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nerror_locations (Iterable[float], optional) – Coordinates of problematic locations in the surface mesh.\n\ntopo_volumes (Iterable[int], optional) – Ids of all topovolumes computed.\n\nmaterial_point_topo_volumes (Iterable[int], optional) – Ids of topovolumes enclosing material points.\n\nexternal_open_topo_faces (Iterable[int], optional) – Topoface ids that are in external space and not part of any topovolumes.\n\nnew_topo_volumes (Iterable[int], optional) – Ids of new topovolumes computed.\n\ndeleted_topo_volumes (Iterable[int], optional) – Ids of existing topovolumes that got deleted.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute topovolumes."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#mesh-a-saddle-bracket-for-a-structural-analysis","title":"Mesh a saddle bracket for a structural analysis","text":"Mesh a saddle bracket for a structural analysis\n\nSummary: This example demonstrates how to mesh a thin\nsolid with hexahedral and prism cells."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#objective","title":"Mesh a saddle bracket for a structural analysis > Objective","text":"Objective\n\nThis example creates a mainly hexahedral mesh on a thin solid volume."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#procedure","title":"Mesh a saddle bracket for a structural analysis > Procedure","text":"Procedure\n\nLaunch Ansys Prime Server.\n\nImport the CAD geometry.\n\nQuad surface mesh the source face.\n\nSurface mesh the remaining unmeshed TopoFaces with tri surface mesh.\n\nDelete the topology.\n\nDefine volume meshing controls to use thin volume meshing.\n\nVolume mesh with hexahedral and prism cells.\n\nWrite a CDB file for use in the APDL solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#launch-ansys-prime-server","title":"Mesh a saddle bracket for a structural analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#import-geometry","title":"Mesh a saddle bracket for a structural analysis > Import geometry","text":"Import geometry\n\nDownload the saddle bracket geometry (FMD) file exported by SpaceClaim.\nImport the geometry and display all.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#quad-mesh-source-faces","title":"Mesh a saddle bracket for a structural analysis > Quad mesh source faces","text":"Quad mesh source faces\n\nMesh the source faces for the thin volume control with quads.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#surface-mesh-unmeshed-faces","title":"Mesh a saddle bracket for a structural analysis > Surface mesh unmeshed faces","text":"Surface mesh unmeshed faces\n\nMesh unmeshed faces with tri surface mesh.  Tri surface mesh on the target\nand side faces is used to show more clearly that the result of the thin\nvolume control is a hex mesh that is imprinted up to the side faces.\nAll quads could be used for the surface mesh to simplify the process.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#delete-topology","title":"Mesh a saddle bracket for a structural analysis > Delete topology","text":"Delete topology\n\nDelete topology to leave only the surface mesh.  This is necessary for the\nthin volume control to be used."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#define-volume-meshing-controls","title":"Mesh a saddle bracket for a structural analysis > Define volume meshing controls","text":"Define volume meshing controls\n\nDefine volume meshing controls to use thin volume meshing.\nSpecify source and target faces for the thin volume using imported labels.\nSet the number of layers of cells through the thickness of the thin solid to be 4.\nTo create a fully hexahedral and prism mesh the side faces must be imprinted on\nthe side faces. If needed, a buffer region at the sides of the volume can be\ndefined where the volume fill type used for the volume mesh parameters is\nused to infill. This is useful on more complex geometries, where it provides\nmore robustness of the method. To create a buffer region set imprint_sides\nto False and specify how many rings of cells to ignore at the sides\nusing n_ignore_rings."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#generate-volume-mesh","title":"Mesh a saddle bracket for a structural analysis > Generate volume mesh","text":"Generate volume mesh\n\nVolume mesh to obtain hexahedral and prism mesh.\nPrint mesh summary.\nDisplay volume mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#write-mesh","title":"Mesh a saddle bracket for a structural analysis > Write mesh","text":"Write mesh\n\nWrite a CDB file for use in the MAPDL solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/07_saddle_bracket.html#exit-pyprimemesh","title":"Mesh a saddle bracket for a structural analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (0 minutes 24.768 seconds)\n\n\n\nDownload Jupyter notebook: 07_saddle_bracket.ipynb\n\nDownload Python source code: 07_saddle_bracket.py\n\nDownload zipped: 07_saddle_bracket.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentMeshingMeshParams.html#exportfluentmeshingmeshparams","title":"ExportFluentMeshingMeshParams","text":"ExportFluentMeshingMeshParams\n\n\n\nclass ansys.meshing.prime.ExportFluentMeshingMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cff_format: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to export fluent meshing mesh.\n\nParameters\n\nmodel (Model) – Model to create a ExportFluentMeshingMeshParams object with default parameters.\n\ncff_format (bool, optional) – Option to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz).This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportFluentMeshingMeshParams object with provided parameters.\n\nExamples\n\n>>> export_fluent_meshing_mesh_params = prime.ExportFluentMeshingMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentMeshingMeshParams.html#overview","title":"ExportFluentMeshingMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncff_format\n\nOption to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz).\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportFluentMeshingMeshParams object.\n\nset_default\n\nSet the default values of the ExportFluentMeshingMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentMeshingMeshParams.html#import-detail","title":"ExportFluentMeshingMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentMeshingMeshParams.html#property-detail","title":"ExportFluentMeshingMeshParams > Property detail","text":"Property detail\n\n\n\nproperty ExportFluentMeshingMeshParams.cff_format: bool\n\nOption to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz).\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentMeshingMeshParams.html#method-detail","title":"ExportFluentMeshingMeshParams > Method detail","text":"Method detail\n\n\n\nExportFluentMeshingMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportFluentMeshingMeshParams.__str__() -> str\n\n\n\n\n\nstatic ExportFluentMeshingMeshParams.print_default()\n\nPrint the default values of ExportFluentMeshingMeshParams object.\n\nExamples\n\n>>> ExportFluentMeshingMeshParams.print_default()\n\n\n\nstatic ExportFluentMeshingMeshParams.set_default(cff_format: bool = None)\n\nSet the default values of the ExportFluentMeshingMeshParams object.\n\nParameters\n\ncff_format (bool, optional) – Option to specify whether to export Fluent mesh file in CFF format (.msh.h5) or legacy format (.msh, .msh.gz)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesParams.html#mergeboundarynodesparams","title":"MergeBoundaryNodesParams","text":"MergeBoundaryNodesParams\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.MergeBoundaryNodesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tolerance: float = None, use_absolute_tolerance: bool = None, merge_node_type: MergeNodeType = None, json_data: dict = None, **kwargs)\n\nParameters used for the merge boundary nodes operation.\n\nParameters\n\nmodel (Model) – Model to create a MergeBoundaryNodesParams object with default parameters.\n\ntolerance (float, optional) – Distance tolerance for merging boundary nodes.\n\nuse_absolute_tolerance (bool, optional) – Indicates whether the tolerance provided is an absolute value or not.\n\nmerge_node_type (MergeNodeType, optional) – Type of nodes to be merged.\n\njson_data (dict, optional) – JSON dictionary to create a MergeBoundaryNodesParams object with provided parameters.\n\nExamples\n\n>>> merge_boundary_nodes_params = prime.MergeBoundaryNodesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesParams.html#overview","title":"MergeBoundaryNodesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmerge_node_type\n\nType of nodes to be merged.\n\ntolerance\n\nDistance tolerance for merging boundary nodes.\n\nuse_absolute_tolerance\n\nIndicates whether the tolerance provided is an absolute value or not.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeBoundaryNodesParams object.\n\nset_default\n\nSet the default values of the MergeBoundaryNodesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesParams.html#import-detail","title":"MergeBoundaryNodesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesParams.html#property-detail","title":"MergeBoundaryNodesParams > Property detail","text":"Property detail\n\n\n\nproperty MergeBoundaryNodesParams.merge_node_type: MergeNodeType\n\nType of nodes to be merged.\n\n\n\nproperty MergeBoundaryNodesParams.tolerance: float\n\nDistance tolerance for merging boundary nodes.\n\n\n\nproperty MergeBoundaryNodesParams.use_absolute_tolerance: bool\n\nIndicates whether the tolerance provided is an absolute value or not."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeBoundaryNodesParams.html#method-detail","title":"MergeBoundaryNodesParams > Method detail","text":"Method detail\n\n\n\nMergeBoundaryNodesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeBoundaryNodesParams.__str__() -> str\n\n\n\n\n\nstatic MergeBoundaryNodesParams.print_default()\n\nPrint the default values of MergeBoundaryNodesParams object.\n\nExamples\n\n>>> MergeBoundaryNodesParams.print_default()\n\n\n\nstatic MergeBoundaryNodesParams.set_default(tolerance: float = None, use_absolute_tolerance: bool = None, merge_node_type: MergeNodeType = None)\n\nSet the default values of the MergeBoundaryNodesParams object.\n\nParameters\n\ntolerance (float, optional) – Distance tolerance for merging boundary nodes.\n\nuse_absolute_tolerance (bool, optional) – Indicates whether the tolerance provided is an absolute value or not.\n\nmerge_node_type (MergeNodeType, optional) – Type of nodes to be merged."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeResults.html#fixinvalidnormalnoderesults","title":"FixInvalidNormalNodeResults","text":"FixInvalidNormalNodeResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.FixInvalidNormalNodeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with fix invalid average face normal at nodes.\n\nParameters\n\nmodel (Model) – Model to create a FixInvalidNormalNodeResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a FixInvalidNormalNodeResults object with provided parameters.\n\nExamples\n\n>>> fix_invalid_normal_node_results = prime.FixInvalidNormalNodeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeResults.html#overview","title":"FixInvalidNormalNodeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FixInvalidNormalNodeResults object.\n\nset_default\n\nSet the default values of the FixInvalidNormalNodeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeResults.html#import-detail","title":"FixInvalidNormalNodeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeResults.html#property-detail","title":"FixInvalidNormalNodeResults > Property detail","text":"Property detail\n\n\n\nproperty FixInvalidNormalNodeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FixInvalidNormalNodeResults.html#method-detail","title":"FixInvalidNormalNodeResults > Method detail","text":"Method detail\n\n\n\nFixInvalidNormalNodeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFixInvalidNormalNodeResults.__str__() -> str\n\n\n\n\n\nstatic FixInvalidNormalNodeResults.print_default()\n\nPrint the default values of FixInvalidNormalNodeResults object.\n\nExamples\n\n>>> FixInvalidNormalNodeResults.print_default()\n\n\n\nstatic FixInvalidNormalNodeResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the FixInvalidNormalNodeResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/index.html#the-primeconfigpy-module","title":"The primeconfig.py module","text":"The primeconfig.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/index.html#summary","title":"The primeconfig.py module > Summary","text":"Summary\n\nEnums\n\n\n\n\n\nErrorCode\n\nError codes associated with the failure of PyPrimeMesh operation.\n\nWarningCode\n\nWarning codes associated with the PyPrimeMesh operation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/index.html#description","title":"The primeconfig.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeField.html#sizefield","title":"SizeField","text":"SizeField\n\n\n\nclass ansys.meshing.prime.SizeField(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nThe size field is computed based on the size control defined.\n\nYou can remesh surfaces and edges based on the size field.\n\nParameters\n\nmodel (Model) – Server model to create SizeField object."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeField.html#overview","title":"SizeField > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncompute_volumetric\n\nComputes the volumetric size field using given size control ids.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for SizeField.\n\n__exit__\n\nExit context for SizeField.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeField.html#import-detail","title":"SizeField > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeField.html#method-detail","title":"SizeField > Method detail","text":"Method detail\n\n\n\nSizeField.__enter__()\n\nEnter context for SizeField.\n\n\n\nSizeField.__exit__(type, value, traceback)\n\nExit context for SizeField.\n\n\n\nSizeField.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeField.compute_volumetric(size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int], volumetric_sizefield_params: ansys.meshing.prime.params.primestructs.VolumetricSizeFieldComputeParams) -> ansys.meshing.prime.params.primestructs.VolumetricSizeFieldComputeResults\n\nComputes the volumetric size field using given size control ids.\n\nParameters\n\nsize_control_ids (Iterable[int]) – Ids of size controls.\n\nExamples\n\n>>> size_field.compute_volumetric(\n>>>           [size_control.id for size_control in model.control_data.size_controls], volumetric_sizefield_params))"},{"objectID":"Home","href":"api/ansys/meshing/prime/CdbSimulationType.html#cdbsimulationtype","title":"CdbSimulationType","text":"CdbSimulationType\n\n\n\nclass ansys.meshing.prime.CdbSimulationType\n\nSimulation Type for CDB export."},{"objectID":"Home","href":"api/ansys/meshing/prime/CdbSimulationType.html#overview","title":"CdbSimulationType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEXPLICIT\n\nExplicit Simulation.\n\nIMPLICIT\n\nImplicit simulation."},{"objectID":"Home","href":"api/ansys/meshing/prime/CdbSimulationType.html#import-detail","title":"CdbSimulationType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CdbSimulationType.html#attribute-detail","title":"CdbSimulationType > Attribute detail","text":"Attribute detail\n\n\n\nCdbSimulationType.EXPLICIT = 1\n\nExplicit Simulation.\n\n\n\nCdbSimulationType.IMPLICIT = 0\n\nImplicit simulation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilities/index.html#the-surfaceutilitiespy-module","title":"The surfaceutilities.py module","text":"The surfaceutilities.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilities/index.html#summary","title":"The surfaceutilities.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSurfaceUtilities\n\nPerforms various general surface utilities algorithms. For example, copy zonelets, resolve surface intersections.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilities/index.html#description","title":"The surfaceutilities.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothType.html#smoothtype","title":"SmoothType","text":"SmoothType\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.SmoothType\n\nIndicates the the type of operation to be performed during the smooth dihedral face nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothType.html#overview","title":"SmoothType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nAUTO\n\nPerforms smoothing using optimal node movements during the operation.\n\nINFLATE\n\nPerforms inflation during the operation.\n\nSMOOTH\n\nPerforms smoothing during the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothType.html#import-detail","title":"SmoothType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothType.html#attribute-detail","title":"SmoothType > Attribute detail","text":"Attribute detail\n\n\n\nSmoothType.AUTO = 3\n\nPerforms smoothing using optimal node movements during the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSmoothType.INFLATE = 2\n\nPerforms inflation during the operation.\n\n\n\nSmoothType.SMOOTH = 1\n\nPerforms smoothing during the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/index.html#the-wrapperstructspy-module","title":"The wrapperstructs.py module","text":"The wrapperstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/index.html#summary","title":"The wrapperstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDeadRegion\n\nDeadRegion defines a dead region for patch flow regions operation.\n\nWrapParams\n\nWrapParams defines parameters for wrapping.\n\nWrapRegion\n\nIndicates source type to extract wrapper region.\n\nWrapResult\n\nResult structure associated to Wrap operation.\n\nWrapperCloseGapsParams\n\nWrapperCloseGapsParams to define parameters for close gaps operation.\n\nWrapperCloseGapsResult\n\nResult structure associated with close gaps operation.\n\nWrapperImproveQualityParams\n\nWrapperImproveQualityParams defines parameters to improve wrapper part.\n\nWrapperImproveResult\n\nResults structure associated to improve quality.\n\nWrapperPatchFlowRegionsParams\n\nWrapperPatchFlowRegionsParams to define parameters for patch flow regions operation.\n\nWrapperPatchFlowRegionsResult\n\nResult structure associated with patch holes operation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/index.html#description","title":"The wrapperstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#mesh-a-set-of-solder-balls-beta","title":"Mesh a set of solder balls (beta)","text":"Mesh a set of solder balls (beta)\n\nSummary: This example demonstrates how to mesh a set of solder balls with mainly\nhexahedral elements. The solder is initially modelled as cylindrical to allow meshing\nusing stacker and then local match morph controls are applied to recover the\nspherical shapes.\n\nThis example contains a beta API. The behavior and implementation may change in future."},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#objective","title":"Mesh a set of solder balls (beta) > Objective","text":"Objective\n\nThis example uses locally defined match morphing controls to morph a hexahedral mesh,\ncreated using volume sweep, to many spherical solder balls."},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#procedure","title":"Mesh a set of solder balls (beta) > Procedure","text":"Procedure\n\nImport libraries necessary to run the script.\n\nLaunch an Ansys Prime Server instance.\n\nImport stackable simplified CAD geometry with refaceting.\n\nConnect the geometry using scaffolding.\n\nMesh with hex dominant elements using the volume sweeper.\n\nImport the target CAD geometry for the solders for match morphing.\n\nLocally match morph the simplified mesh to the target spherical solders.\n\nDelete the target and export the morphed mesh.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#import-modules","title":"Mesh a set of solder balls (beta) > Import modules","text":"Import modules\n\nImport libraries necessary to run the script."},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#launch-ansys-prime-server","title":"Mesh a set of solder balls (beta) > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model."},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#import-cad-geometry","title":"Mesh a set of solder balls (beta) > Import CAD geometry","text":"Import CAD geometry\n\nFMD is exported from SpaceClaim for the geometry.\nGeometry consists of multiple non overlapping and disconnected volumes.\nThe model has multiple layers either side of several solder balls with pads\nand contains an infill volume around the solder. During import, the part\ncreation type is set to BODY so that each body in the CAD is imported as a\nseparate part. Refaceting is specified for more control of the scaffolding\noperation. Consistent faceting for the curved surfaces to be joined can be\nobtained by specifying CadRefacetingMaxEdgeSizeLimit as ABSOLUTE. To avoid\nover refinement of the faceting the max_edge_size is allowed to reach a size\nof 1.0. Labels can be assigned to manage the entities of each volume.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#connect-geometry","title":"Mesh a set of solder balls (beta) > Connect geometry","text":"Connect geometry\n\nMerge all parts into a single part so they can be connected.\nImprint adjacent topo faces by connecting topo faces and topo edges.\nMesh all topo faces to allow splitting the imprinted topo faces by mesh regions.\nDelete mesh on topo faces after splitting.\nMerge newly created overlapping topo faces so only a single topo face exists\nbetween connected volumes.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#volume-sweeper","title":"Mesh a set of solder balls (beta) > Volume sweeper","text":"Volume sweeper\n\nSetup a size control to refine the mesh around the solder.\nSetup stacker parameters to define the volume sweep mesh.\nCreate the base face to quad surface mesh and use for sweeping.\nStack the base face to create the volume mesh.\nDelete topology on mesh part to allow use of surface utilities and feature extraction.\nA large lateral defeature tolerance of 0.1 is used to avoid additional topo nodes\nfrom scaffolding impacting the final mesh.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#import-sphere-geometry-for-match-morphing","title":"Mesh a set of solder balls (beta) > Import sphere geometry for match morphing","text":"Import sphere geometry for match morphing\n\nCreate a single part on CAD import by setting the part creation type to MODEL.\nConvert topology to mesh face zonelets to use surface utilities.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#match-morph-the-mesh-to-the-spherical-solder","title":"Mesh a set of solder balls (beta) > Match morph the mesh to the spherical solder","text":"Match morph the mesh to the spherical solder\n\nDelete feature edge zonelets on the mesh source.\nGet lists of the source and target face zonelets for the match morph.\nPair source and target faces based on overlapping bounding box locations.\nFor each source face extract feature edges with nodes attached to faces.\nDefine edge pairs for each match pair control as a morph boundary condition.\nMatch morph solder faces and edges.\nDelete target sphere part and retain the morphed mesh for export.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#export-mesh","title":"Mesh a set of solder balls (beta) > Export mesh","text":"Export mesh\n\nExport a CDB file."},{"objectID":"Home","href":"examples/gallery_examples/gallery/11_solder_ball.html#exit-pyprimemesh","title":"Mesh a set of solder balls (beta) > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (2 minutes 31.595 seconds)\n\n\n\nDownload Jupyter notebook: 11_solder_ball.ipynb\n\nDownload Python source code: 11_solder_ball.py\n\nDownload zipped: 11_solder_ball.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByIntersectionResults.html#searchbyintersectionresults","title":"SearchByIntersectionResults","text":"SearchByIntersectionResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchByIntersectionResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with search by face element intersection (face elements interfering with each other).\n\nParameters\n\nmodel (Model) – Model to create a SearchByIntersectionResults object with default parameters.\n\nn_found (int, optional) – Number of face elements identified by intersection(face elements interfering with each other).\n\nerror_code (ErrorCode, optional) – Error code associated with search intersection operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByIntersectionResults object with provided parameters.\n\nExamples\n\n>>> search_by_intersection_results = prime.SearchByIntersectionResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByIntersectionResults.html#overview","title":"SearchByIntersectionResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search intersection operation.\n\nn_found\n\nNumber of face elements identified by intersection(face elements interfering with each other).\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByIntersectionResults object.\n\nset_default\n\nSet the default values of the SearchByIntersectionResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByIntersectionResults.html#import-detail","title":"SearchByIntersectionResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByIntersectionResults.html#property-detail","title":"SearchByIntersectionResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByIntersectionResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search intersection operation.\n\n\n\nproperty SearchByIntersectionResults.n_found: int\n\nNumber of face elements identified by intersection(face elements interfering with each other)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByIntersectionResults.html#method-detail","title":"SearchByIntersectionResults > Method detail","text":"Method detail\n\n\n\nSearchByIntersectionResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByIntersectionResults.__str__() -> str\n\n\n\n\n\nstatic SearchByIntersectionResults.print_default()\n\nPrint the default values of SearchByIntersectionResults object.\n\nExamples\n\n>>> SearchByIntersectionResults.print_default()\n\n\n\nstatic SearchByIntersectionResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchByIntersectionResults object.\n\nParameters\n\nn_found (int, optional) – Number of face elements identified by intersection(face elements interfering with each other).\n\nerror_code (ErrorCode, optional) – Error code associated with search intersection operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryResults.html#surfacequalitysummaryresults","title":"SurfaceQualitySummaryResults","text":"SurfaceQualitySummaryResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SurfaceQualitySummaryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, quality_results: ansys.meshing.prime.params.primestructs.List[SurfaceQualityResult] = None, summary: str = None, json_data: dict = None, **kwargs)\n\nResults of surface quality summary.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceQualitySummaryResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the surface quality summary.\n\nquality_results (List[SurfaceQualityResult], optional) – Contains surface quality result per face quality measure specified in parameters.\n\nsummary (str, optional) – Surface quality summary text.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceQualitySummaryResults object with provided parameters.\n\nExamples\n\n>>> surface_quality_summary_results = prime.SurfaceQualitySummaryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryResults.html#overview","title":"SurfaceQualitySummaryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the surface quality summary.\n\nquality_results\n\nContains surface quality result per face quality measure specified in parameters.\n\nsummary\n\nSurface quality summary text.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceQualitySummaryResults object.\n\nset_default\n\nSet the default values of the SurfaceQualitySummaryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryResults.html#import-detail","title":"SurfaceQualitySummaryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryResults.html#property-detail","title":"SurfaceQualitySummaryResults > Property detail","text":"Property detail\n\n\n\nproperty SurfaceQualitySummaryResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the surface quality summary.\n\n\n\nproperty SurfaceQualitySummaryResults.quality_results: ansys.meshing.prime.params.primestructs.List[SurfaceQualityResult]\n\nContains surface quality result per face quality measure specified in parameters.\n\n\n\nproperty SurfaceQualitySummaryResults.summary: str\n\nSurface quality summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceQualitySummaryResults.html#method-detail","title":"SurfaceQualitySummaryResults > Method detail","text":"Method detail\n\n\n\nSurfaceQualitySummaryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceQualitySummaryResults.__str__() -> str\n\n\n\n\n\nstatic SurfaceQualitySummaryResults.print_default()\n\nPrint the default values of SurfaceQualitySummaryResults object.\n\nExamples\n\n>>> SurfaceQualitySummaryResults.print_default()\n\n\n\nstatic SurfaceQualitySummaryResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, quality_results: ansys.meshing.prime.params.primestructs.List[SurfaceQualityResult] = None, summary: str = None)\n\nSet the default values of the SurfaceQualitySummaryResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the surface quality summary.\n\nquality_results (List[SurfaceQualityResult], optional) – Contains surface quality result per face quality measure specified in parameters.\n\nsummary (str, optional) – Surface quality summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformResults.html#transformresults","title":"TransformResults","text":"TransformResults\n\n\n\nclass ansys.meshing.prime.autogen.transformstructs.TransformResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the transformation.\n\nParameters\n\nmodel (Model) – Model to create a TransformResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a TransformResults object with provided parameters.\n\nExamples\n\n>>> transform_results = prime.TransformResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformResults.html#overview","title":"TransformResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TransformResults object.\n\nset_default\n\nSet the default values of the TransformResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformResults.html#import-detail","title":"TransformResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformResults.html#property-detail","title":"TransformResults > Property detail","text":"Property detail\n\n\n\nproperty TransformResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/TransformResults.html#method-detail","title":"TransformResults > Method detail","text":"Method detail\n\n\n\nTransformResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTransformResults.__str__() -> str\n\n\n\n\n\nstatic TransformResults.print_default()\n\nPrint the default values of TransformResults object.\n\nExamples\n\n>>> TransformResults.print_default()\n\n\n\nstatic TransformResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the TransformResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_wheel_ground_fmd.html#ansysmeshingprimeexamplesexamplesdownload_wheel_ground_fmd","title":"ansys.meshing.prime.examples.examples.download_wheel_ground_fmd","text":"ansys.meshing.prime.examples.examples.download_wheel_ground_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_wheel_ground_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the wheel ground contact patch example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPreventionParams.html#contactpreventionparams","title":"ContactPreventionParams","text":"ContactPreventionParams\n\n\n\nclass ansys.meshing.prime.ContactPreventionParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, source_scope: ScopeDefinition = None, target_scope: ScopeDefinition = None, size: float = None, json_data: dict = None, **kwargs)\n\nContactPreventionParams defines contact prevention control parameters for wrapper.\n\nParameters\n\nmodel (Model) – Model to create a ContactPreventionParams object with default parameters.\n\nsource_scope (ScopeDefinition, optional) – Source scope used for contact prevention control.\n\ntarget_scope (ScopeDefinition, optional) – Target scope used for contact prevention control.\n\nsize (float, optional) – Minimum gap size (gap/4) to resolve contact between source and target.\n\njson_data (dict, optional) – JSON dictionary to create a ContactPreventionParams object with provided parameters.\n\nExamples\n\n>>> contact_prevention_params = prime.ContactPreventionParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPreventionParams.html#overview","title":"ContactPreventionParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsize\n\nMinimum gap size (gap/4) to resolve contact between source and target.\n\nsource_scope\n\nSource scope used for contact prevention control.\n\ntarget_scope\n\nTarget scope used for contact prevention control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ContactPreventionParams object.\n\nset_default\n\nSet the default values of the ContactPreventionParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPreventionParams.html#import-detail","title":"ContactPreventionParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPreventionParams.html#property-detail","title":"ContactPreventionParams > Property detail","text":"Property detail\n\n\n\nproperty ContactPreventionParams.size: float\n\nMinimum gap size (gap/4) to resolve contact between source and target.\n\n\n\nproperty ContactPreventionParams.source_scope: ScopeDefinition\n\nSource scope used for contact prevention control.\n\n\n\nproperty ContactPreventionParams.target_scope: ScopeDefinition\n\nTarget scope used for contact prevention control."},{"objectID":"Home","href":"api/ansys/meshing/prime/ContactPreventionParams.html#method-detail","title":"ContactPreventionParams > Method detail","text":"Method detail\n\n\n\nContactPreventionParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nContactPreventionParams.__str__() -> str\n\n\n\n\n\nstatic ContactPreventionParams.print_default()\n\nPrint the default values of ContactPreventionParams object.\n\nExamples\n\n>>> ContactPreventionParams.print_default()\n\n\n\nstatic ContactPreventionParams.set_default(source_scope: ScopeDefinition = None, target_scope: ScopeDefinition = None, size: float = None)\n\nSet the default values of the ContactPreventionParams object.\n\nParameters\n\nsource_scope (ScopeDefinition, optional) – Source scope used for contact prevention control.\n\ntarget_scope (ScopeDefinition, optional) – Target scope used for contact prevention control.\n\nsize (float, optional) – Minimum gap size (gap/4) to resolve contact between source and target."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/CheckTopologyParams.html#checktopologyparams","title":"CheckTopologyParams","text":"CheckTopologyParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.CheckTopologyParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, topo_search_field_mask: int = None, json_data: dict = None, **kwargs)\n\nParameters for check topology operations.\n\nParameters\n\nmodel (Model) – Model to create a CheckTopologyParams object with default parameters.\n\ntopo_search_field_mask (int, optional) – Toposearch field option for topology check.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a CheckTopologyParams object with provided parameters.\n\nExamples\n\n>>> check_topology_params = prime.CheckTopologyParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/CheckTopologyParams.html#overview","title":"CheckTopologyParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntopo_search_field_mask\n\nToposearch field option for topology check.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckTopologyParams object.\n\nset_default\n\nSet the default values of the CheckTopologyParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/CheckTopologyParams.html#import-detail","title":"CheckTopologyParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/CheckTopologyParams.html#property-detail","title":"CheckTopologyParams > Property detail","text":"Property detail\n\n\n\nproperty CheckTopologyParams.topo_search_field_mask: int\n\nToposearch field option for topology check.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/CheckTopologyParams.html#method-detail","title":"CheckTopologyParams > Method detail","text":"Method detail\n\n\n\nCheckTopologyParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckTopologyParams.__str__() -> str\n\n\n\n\n\nstatic CheckTopologyParams.print_default()\n\nPrint the default values of CheckTopologyParams object.\n\nExamples\n\n>>> CheckTopologyParams.print_default()\n\n\n\nstatic CheckTopologyParams.set_default(topo_search_field_mask: int = None)\n\nSet the default values of the CheckTopologyParams object.\n\nParameters\n\ntopo_search_field_mask (int, optional) – Toposearch field option for topology check."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/compute_face_list_from_structured_nodes.html#ansysmeshingprimecoremeshcompute_face_list_from_structured_nodes","title":"ansys.meshing.prime.core.mesh.compute_face_list_from_structured_nodes","text":"ansys.meshing.prime.core.mesh.compute_face_list_from_structured_nodes\n\n\n\nansys.meshing.prime.core.mesh.compute_face_list_from_structured_nodes(dim)\n\nCompute the distances from the nodes.\n\nParameters\n\ndim (List[int]) – List with the number of elements in each dimension.\n\nReturns\n\nList with the faces.\n\nReturn type\n\nList"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointResults.html#creatematerialpointresults","title":"CreateMaterialPointResults","text":"CreateMaterialPointResults\n\n\n\nclass ansys.meshing.prime.CreateMaterialPointResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id: int = None, assigned_name: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults structure associated with create material point operation.\n\nParameters\n\nmodel (Model) – Model to create a CreateMaterialPointResults object with default parameters.\n\nid (int, optional) – Id of the material point created.\n\nassigned_name (str, optional) – Assigned name of the material point created.\n\nerror_code (ErrorCode, optional) – Error code associated with create material point operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with create material point operation.\n\njson_data (dict, optional) – JSON dictionary to create a CreateMaterialPointResults object with provided parameters.\n\nExamples\n\n>>> create_material_point_results = prime.CreateMaterialPointResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointResults.html#overview","title":"CreateMaterialPointResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_name\n\nAssigned name of the material point created.\n\nerror_code\n\nError code associated with create material point operation.\n\nid\n\nId of the material point created.\n\nwarning_codes\n\nWarning codes associated with create material point operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateMaterialPointResults object.\n\nset_default\n\nSet the default values of the CreateMaterialPointResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointResults.html#import-detail","title":"CreateMaterialPointResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointResults.html#property-detail","title":"CreateMaterialPointResults > Property detail","text":"Property detail\n\n\n\nproperty CreateMaterialPointResults.assigned_name: str\n\nAssigned name of the material point created.\n\n\n\nproperty CreateMaterialPointResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with create material point operation.\n\n\n\nproperty CreateMaterialPointResults.id: int\n\nId of the material point created.\n\n\n\nproperty CreateMaterialPointResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with create material point operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointResults.html#method-detail","title":"CreateMaterialPointResults > Method detail","text":"Method detail\n\n\n\nCreateMaterialPointResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateMaterialPointResults.__str__() -> str\n\n\n\n\n\nstatic CreateMaterialPointResults.print_default()\n\nPrint the default values of CreateMaterialPointResults object.\n\nExamples\n\n>>> CreateMaterialPointResults.print_default()\n\n\n\nstatic CreateMaterialPointResults.set_default(id: int = None, assigned_name: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the CreateMaterialPointResults object.\n\nParameters\n\nid (int, optional) – Id of the material point created.\n\nassigned_name (str, optional) – Assigned name of the material point created.\n\nerror_code (ErrorCode, optional) – Error code associated with create material point operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with create material point operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/QuadToSplineParams.html#quadtosplineparams","title":"QuadToSplineParams","text":"QuadToSplineParams\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.QuadToSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, shell_thickness: float = None, solid_shell: bool = None, separate_by_zone: bool = None, zone_name_shell_thickness_pairs: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, json_data: dict = None, **kwargs)\n\nParameters to control conversion of quadrilateral mesh to spline.\n\nParameters\n\nmodel (Model) – Model to create a QuadToSplineParams object with default parameters.\n\nfeature_capture_type (SplineFeatureCaptureType, optional) – Feature capture options.This is a beta parameter. The behavior and name may change in the future.\n\nfeature_angle (float, optional) – Angle to capture the feature.This is a beta parameter. The behavior and name may change in the future.\n\ncorner_angle (float, optional) – Corner angle of the feature.This is a beta parameter. The behavior and name may change in the future.\n\nshell_thickness (float, optional) – Thickness of shell.This is a beta parameter. The behavior and name may change in the future.\n\nsolid_shell (bool, optional) – Solid shell option. Set true to generate solid shell spline, and set false to generate surface spline.This is a beta parameter. The behavior and name may change in the future.\n\nseparate_by_zone (bool, optional) – Option to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.This is a beta parameter. The behavior and name may change in the future.\n\nzone_name_shell_thickness_pairs (Dict[str, Union[str, int, float, bool]], optional) – Zone name and thickness pair list. For example, {“Zone1Name”: Zone1Thickness, “Zone2Name”: Zone2Thickness, …}.This is a beta parameter. The behavior and name may change in the future.\n\ncontinuity (SplineContinuityType, optional) – Spline Continuity options.This is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry (bool, optional) – Option to project on geometry.This is a beta parameter. The behavior and name may change in the future.\n\nuse_projection_scope (bool, optional) – Option to use projection scope.This is a beta parameter. The behavior and name may change in the future.\n\nprojection_scope (ScopeDefinition, optional) – Scope to evaluate entities for projection.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a QuadToSplineParams object with provided parameters.\n\nExamples\n\n>>> quad_to_spline_params = prime.QuadToSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/QuadToSplineParams.html#overview","title":"QuadToSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontinuity\n\nSpline Continuity options.\n\ncorner_angle\n\nCorner angle of the feature.\n\nfeature_angle\n\nAngle to capture the feature.\n\nfeature_capture_type\n\nFeature capture options.\n\nproject_on_geometry\n\nOption to project on geometry.\n\nprojection_scope\n\nScope to evaluate entities for projection.\n\nseparate_by_zone\n\nOption to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nshell_thickness\n\nThickness of shell.\n\nsolid_shell\n\nSolid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nuse_projection_scope\n\nOption to use projection scope.\n\nzone_name_shell_thickness_pairs\n\nZone2Thickness, …}.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of QuadToSplineParams object.\n\nset_default\n\nSet the default values of the QuadToSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/QuadToSplineParams.html#import-detail","title":"QuadToSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/QuadToSplineParams.html#property-detail","title":"QuadToSplineParams > Property detail","text":"Property detail\n\n\n\nproperty QuadToSplineParams.continuity: SplineContinuityType\n\nSpline Continuity options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.corner_angle: float\n\nCorner angle of the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.feature_angle: float\n\nAngle to capture the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.feature_capture_type: SplineFeatureCaptureType\n\nFeature capture options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.project_on_geometry: bool\n\nOption to project on geometry.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope to evaluate entities for projection.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.separate_by_zone: bool\n\nOption to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.shell_thickness: float\n\nThickness of shell.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.solid_shell: bool\n\nSolid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.use_projection_scope: bool\n\nOption to use projection scope.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty QuadToSplineParams.zone_name_shell_thickness_pairs: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]]\n\nZone2Thickness, …}.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nType\n\nZone name and thickness pair list. For example, {“Zone1Name”\n\nType\n\nZone1Thickness, “Zone2Name”"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/QuadToSplineParams.html#method-detail","title":"QuadToSplineParams > Method detail","text":"Method detail\n\n\n\nQuadToSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nQuadToSplineParams.__str__() -> str\n\n\n\n\n\nstatic QuadToSplineParams.print_default()\n\nPrint the default values of QuadToSplineParams object.\n\nExamples\n\n>>> QuadToSplineParams.print_default()\n\n\n\nstatic QuadToSplineParams.set_default(feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, shell_thickness: float = None, solid_shell: bool = None, separate_by_zone: bool = None, zone_name_shell_thickness_pairs: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None)\n\nSet the default values of the QuadToSplineParams object.\n\nParameters\n\nfeature_capture_type (SplineFeatureCaptureType, optional) – Feature capture options.\n\nfeature_angle (float, optional) – Angle to capture the feature.\n\ncorner_angle (float, optional) – Corner angle of the feature.\n\nshell_thickness (float, optional) – Thickness of shell.\n\nsolid_shell (bool, optional) – Solid shell option. Set true to generate solid shell spline, and set false to generate surface spline.\n\nseparate_by_zone (bool, optional) – Option to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.\n\nzone_name_shell_thickness_pairs (Dict[str, Union[str, int, float, bool]], optional) – Zone name and thickness pair list. For example, {“Zone1Name”: Zone1Thickness, “Zone2Name”: Zone2Thickness, …}.\n\ncontinuity (SplineContinuityType, optional) – Spline Continuity options.\n\nproject_on_geometry (bool, optional) – Option to project on geometry.\n\nuse_projection_scope (bool, optional) – Option to use projection scope.\n\nprojection_scope (ScopeDefinition, optional) – Scope to evaluate entities for projection."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_f1_rw_enclosure_stl.html#ansysmeshingprimeexamplesdownload_f1_rw_enclosure_stl","title":"ansys.meshing.prime.examples.download_f1_rw_enclosure_stl","text":"ansys.meshing.prime.examples.download_f1_rw_enclosure_stl\n\n\n\nansys.meshing.prime.examples.download_f1_rw_enclosure_stl(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_enclosure = prime_examples.download_f1_rw_enclosure_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_enclosure, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_solder_ball_fmd.html#ansysmeshingprimeexamplesexamplesdownload_solder_ball_fmd","title":"ansys.meshing.prime.examples.examples.download_solder_ball_fmd","text":"ansys.meshing.prime.examples.examples.download_solder_ball_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_solder_ball_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload a FMD file for the solder ball example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     solder_ball = prime_examples.download_solder_ball_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(solder_ball, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsResults.html#searchbyfoldsresults","title":"SearchByFoldsResults","text":"SearchByFoldsResults\n\n\n\nclass ansys.meshing.prime.SearchByFoldsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with search folds operation.\n\nParameters\n\nmodel (Model) – Model to create a SearchByFoldsResults object with default parameters.\n\nn_found (int, optional) – Number of folds identified.\n\nerror_code (ErrorCode, optional) – Error code associated with search folds operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByFoldsResults object with provided parameters.\n\nExamples\n\n>>> search_by_folds_results = prime.SearchByFoldsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsResults.html#overview","title":"SearchByFoldsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search folds operation.\n\nn_found\n\nNumber of folds identified.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByFoldsResults object.\n\nset_default\n\nSet the default values of the SearchByFoldsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsResults.html#import-detail","title":"SearchByFoldsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsResults.html#property-detail","title":"SearchByFoldsResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByFoldsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search folds operation.\n\n\n\nproperty SearchByFoldsResults.n_found: int\n\nNumber of folds identified."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsResults.html#method-detail","title":"SearchByFoldsResults > Method detail","text":"Method detail\n\n\n\nSearchByFoldsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByFoldsResults.__str__() -> str\n\n\n\n\n\nstatic SearchByFoldsResults.print_default()\n\nPrint the default values of SearchByFoldsResults object.\n\nExamples\n\n>>> SearchByFoldsResults.print_default()\n\n\n\nstatic SearchByFoldsResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchByFoldsResults object.\n\nParameters\n\nn_found (int, optional) – Number of folds identified.\n\nerror_code (ErrorCode, optional) – Error code associated with search folds operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairTopologyParams.html#repairtopologyparams","title":"RepairTopologyParams","text":"RepairTopologyParams\n\n\n\nclass ansys.meshing.prime.RepairTopologyParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, connect_faces: bool = None, repair_edges: bool = None, split_topo_edges_at_apex_point: bool = None, fillet_max_radius: float = None, smallest_edge_length: float = None, merge_edge_allow_self_close: bool = None, suppress_shared_edges_when_merging: bool = None, edge_connect_type: int = None, connect_faces_params: ConnectFacesParams = None, repair_edges_params: RepairEdgesParams = None, json_data: dict = None, **kwargs)\n\nParameters for repair topology operations.\n\nParameters\n\nmodel (Model) – Model to create a RepairTopologyParams object with default parameters.\n\nconnect_faces (bool, optional) – Option to connect faces.This is a beta parameter. The behavior and name may change in the future.\n\nrepair_edges (bool, optional) – Option to repair edges.This is a beta parameter. The behavior and name may change in the future.\n\nsplit_topo_edges_at_apex_point (bool, optional) – Option to split edges at apex point.This is a beta parameter. The behavior and name may change in the future.\n\nfillet_max_radius (float, optional) – Maximum radius of fillets to be detected.This is a beta parameter. The behavior and name may change in the future.\n\nsmallest_edge_length (float, optional) – Length of smallest edge for which split is applied.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\nsuppress_shared_edges_when_merging (bool, optional) – Option for suppressing shared edges when merging.This is a beta parameter. The behavior and name may change in the future.\n\nedge_connect_type (int, optional) – Edge connection type.This is a beta parameter. The behavior and name may change in the future.\n\nconnect_faces_params (ConnectFacesParams, optional) – Parameters for connect faces operation.This is a beta parameter. The behavior and name may change in the future.\n\nrepair_edges_params (RepairEdgesParams, optional) – Parameters for repair edges operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a RepairTopologyParams object with provided parameters.\n\nExamples\n\n>>> repair_topology_params = prime.RepairTopologyParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairTopologyParams.html#overview","title":"RepairTopologyParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nconnect_faces\n\nOption to connect faces.\n\nconnect_faces_params\n\nParameters for connect faces operation.\n\nedge_connect_type\n\nEdge connection type.\n\nfillet_max_radius\n\nMaximum radius of fillets to be detected.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nrepair_edges\n\nOption to repair edges.\n\nrepair_edges_params\n\nParameters for repair edges operation.\n\nsmallest_edge_length\n\nLength of smallest edge for which split is applied.\n\nsplit_topo_edges_at_apex_point\n\nOption to split edges at apex point.\n\nsuppress_shared_edges_when_merging\n\nOption for suppressing shared edges when merging.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RepairTopologyParams object.\n\nset_default\n\nSet the default values of the RepairTopologyParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairTopologyParams.html#import-detail","title":"RepairTopologyParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairTopologyParams.html#property-detail","title":"RepairTopologyParams > Property detail","text":"Property detail\n\n\n\nproperty RepairTopologyParams.connect_faces: bool\n\nOption to connect faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.connect_faces_params: ConnectFacesParams\n\nParameters for connect faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.edge_connect_type: int\n\nEdge connection type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.fillet_max_radius: float\n\nMaximum radius of fillets to be detected.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.repair_edges: bool\n\nOption to repair edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.repair_edges_params: RepairEdgesParams\n\nParameters for repair edges operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.smallest_edge_length: float\n\nLength of smallest edge for which split is applied.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.split_topo_edges_at_apex_point: bool\n\nOption to split edges at apex point.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairTopologyParams.suppress_shared_edges_when_merging: bool\n\nOption for suppressing shared edges when merging.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairTopologyParams.html#method-detail","title":"RepairTopologyParams > Method detail","text":"Method detail\n\n\n\nRepairTopologyParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRepairTopologyParams.__str__() -> str\n\n\n\n\n\nstatic RepairTopologyParams.print_default()\n\nPrint the default values of RepairTopologyParams object.\n\nExamples\n\n>>> RepairTopologyParams.print_default()\n\n\n\nstatic RepairTopologyParams.set_default(connect_faces: bool = None, repair_edges: bool = None, split_topo_edges_at_apex_point: bool = None, fillet_max_radius: float = None, smallest_edge_length: float = None, merge_edge_allow_self_close: bool = None, suppress_shared_edges_when_merging: bool = None, edge_connect_type: int = None, connect_faces_params: ConnectFacesParams = None, repair_edges_params: RepairEdgesParams = None)\n\nSet the default values of the RepairTopologyParams object.\n\nParameters\n\nconnect_faces (bool, optional) – Option to connect faces.\n\nrepair_edges (bool, optional) – Option to repair edges.\n\nsplit_topo_edges_at_apex_point (bool, optional) – Option to split edges at apex point.\n\nfillet_max_radius (float, optional) – Maximum radius of fillets to be detected.\n\nsmallest_edge_length (float, optional) – Length of smallest edge for which split is applied.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.\n\nsuppress_shared_edges_when_merging (bool, optional) – Option for suppressing shared edges when merging.\n\nedge_connect_type (int, optional) – Edge connection type.\n\nconnect_faces_params (ConnectFacesParams, optional) – Parameters for connect faces operation.\n\nrepair_edges_params (RepairEdgesParams, optional) – Parameters for repair edges operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/periodiccontrol/index.html#the-periodiccontrolpy-module","title":"The periodiccontrol.py module","text":"The periodiccontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/periodiccontrol/index.html#summary","title":"The periodiccontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPeriodicControl\n\nPeriodic controls provide settings for the recovery of periodic surfaces.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/periodiccontrol/index.html#description","title":"The periodiccontrol.py module > Description","text":"Description\n\nModule containing classes and methods related to periodic control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshResults.html#importfluentmeshingmeshresults","title":"ImportFluentMeshingMeshResults","text":"ImportFluentMeshingMeshResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportFluentMeshingMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, new_parts_created: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with fluent meshing mesh import.\n\nParameters\n\nmodel (Model) – Model to create a ImportFluentMeshingMeshResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nnew_parts_created (Iterable[int], optional) – Ids of new parts created for each file unreferenced fluent meshing mesh zones.\n\njson_data (dict, optional) – JSON dictionary to create a ImportFluentMeshingMeshResults object with provided parameters.\n\nExamples\n\n>>> import_fluent_meshing_mesh_results = prime.ImportFluentMeshingMeshResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshResults.html#overview","title":"ImportFluentMeshingMeshResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nnew_parts_created\n\nIds of new parts created for each file unreferenced fluent meshing mesh zones.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportFluentMeshingMeshResults object.\n\nset_default\n\nSet the default values of the ImportFluentMeshingMeshResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshResults.html#import-detail","title":"ImportFluentMeshingMeshResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshResults.html#property-detail","title":"ImportFluentMeshingMeshResults > Property detail","text":"Property detail\n\n\n\nproperty ImportFluentMeshingMeshResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ImportFluentMeshingMeshResults.new_parts_created: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new parts created for each file unreferenced fluent meshing mesh zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshResults.html#method-detail","title":"ImportFluentMeshingMeshResults > Method detail","text":"Method detail\n\n\n\nImportFluentMeshingMeshResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportFluentMeshingMeshResults.__str__() -> str\n\n\n\n\n\nstatic ImportFluentMeshingMeshResults.print_default()\n\nPrint the default values of ImportFluentMeshingMeshResults object.\n\nExamples\n\n>>> ImportFluentMeshingMeshResults.print_default()\n\n\n\nstatic ImportFluentMeshingMeshResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, new_parts_created: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ImportFluentMeshingMeshResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nnew_parts_created (Iterable[int], optional) – Ids of new parts created for each file unreferenced fluent meshing mesh zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesParams.html#stretchfreeboundariesparams","title":"StretchFreeBoundariesParams","text":"StretchFreeBoundariesParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.StretchFreeBoundariesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used for stretch free boundaries operation.\n\nParameters\n\nmodel (Model) – Model to create a StretchFreeBoundariesParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a StretchFreeBoundariesParams object with provided parameters.\n\nExamples\n\n>>> stretch_free_boundaries_params = prime.StretchFreeBoundariesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesParams.html#overview","title":"StretchFreeBoundariesParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of StretchFreeBoundariesParams object.\n\nset_default\n\nSet the default values of the StretchFreeBoundariesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesParams.html#import-detail","title":"StretchFreeBoundariesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesParams.html#method-detail","title":"StretchFreeBoundariesParams > Method detail","text":"Method detail\n\n\n\nStretchFreeBoundariesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nStretchFreeBoundariesParams.__str__() -> str\n\n\n\n\n\nstatic StretchFreeBoundariesParams.print_default()\n\nPrint the default values of StretchFreeBoundariesParams object.\n\nExamples\n\n>>> StretchFreeBoundariesParams.print_default()\n\n\n\nstatic StretchFreeBoundariesParams.set_default()\n\nSet the default values of the StretchFreeBoundariesParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_deformed_blade_dsco.html#ansysmeshingprimeexamplesexamplesdownload_deformed_blade_dsco","title":"ansys.meshing.prime.examples.examples.download_deformed_blade_dsco","text":"ansys.meshing.prime.examples.examples.download_deformed_blade_dsco\n\n\n\nansys.meshing.prime.examples.examples.download_deformed_blade_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the turbine blade example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     deformed_blade = prime_examples.download_deformed_blade_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(deformed_blade, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripParams.html#searchbythinstripparams","title":"SearchByThinStripParams","text":"SearchByThinStripParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchByThinStripParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, strip_height_limit: float = None, quality_limit: float = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType = None, feature_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters to search by thin strip of face elements.\n\nParameters\n\nmodel (Model) – Model to create a SearchByThinStripParams object with default parameters.\n\nstrip_height_limit (float, optional) – Absolute height limit to ignore strips with height more than provided limit.\n\nquality_limit (float, optional) – Quality limit used for search strip of face elements.\n\nface_quality_measure (FaceQualityMeasure, optional) – Quality measure used for search strip of face elements.\n\nfeature_type (SurfaceFeatureType, optional) – Used to identify thin strip of face elements based on the provided feature type.\n\nfeature_angle (float, optional) – Angle used to identify angle based features.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByThinStripParams object with provided parameters.\n\nExamples\n\n>>> search_by_thin_strip_params = prime.SearchByThinStripParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripParams.html#overview","title":"SearchByThinStripParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_quality_measure\n\nQuality measure used for search strip of face elements.\n\nfeature_angle\n\nAngle used to identify angle based features.\n\nfeature_type\n\nUsed to identify thin strip of face elements based on the provided feature type.\n\nquality_limit\n\nQuality limit used for search strip of face elements.\n\nstrip_height_limit\n\nAbsolute height limit to ignore strips with height more than provided limit.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByThinStripParams object.\n\nset_default\n\nSet the default values of the SearchByThinStripParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripParams.html#import-detail","title":"SearchByThinStripParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripParams.html#property-detail","title":"SearchByThinStripParams > Property detail","text":"Property detail\n\n\n\nproperty SearchByThinStripParams.face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure\n\nQuality measure used for search strip of face elements.\n\n\n\nproperty SearchByThinStripParams.feature_angle: float\n\nAngle used to identify angle based features.\n\n\n\nproperty SearchByThinStripParams.feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType\n\nUsed to identify thin strip of face elements based on the provided feature type.\n\n\n\nproperty SearchByThinStripParams.quality_limit: float\n\nQuality limit used for search strip of face elements.\n\n\n\nproperty SearchByThinStripParams.strip_height_limit: float\n\nAbsolute height limit to ignore strips with height more than provided limit."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripParams.html#method-detail","title":"SearchByThinStripParams > Method detail","text":"Method detail\n\n\n\nSearchByThinStripParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByThinStripParams.__str__() -> str\n\n\n\n\n\nstatic SearchByThinStripParams.print_default()\n\nPrint the default values of SearchByThinStripParams object.\n\nExamples\n\n>>> SearchByThinStripParams.print_default()\n\n\n\nstatic SearchByThinStripParams.set_default(strip_height_limit: float = None, quality_limit: float = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType = None, feature_angle: float = None)\n\nSet the default values of the SearchByThinStripParams object.\n\nParameters\n\nstrip_height_limit (float, optional) – Absolute height limit to ignore strips with height more than provided limit.\n\nquality_limit (float, optional) – Quality limit used for search strip of face elements.\n\nface_quality_measure (FaceQualityMeasure, optional) – Quality measure used for search strip of face elements.\n\nfeature_type (SurfaceFeatureType, optional) – Used to identify thin strip of face elements based on the provided feature type.\n\nfeature_angle (float, optional) – Angle used to identify angle based features."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripResults.html#searchbythinstripresults","title":"SearchByThinStripResults","text":"SearchByThinStripResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchByThinStripResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with search by thin strip of face elements.\n\nParameters\n\nmodel (Model) – Model to create a SearchByThinStripResults object with default parameters.\n\nn_found (int, optional) – Number of face elements identified as thin strips.\n\nerror_code (ErrorCode, optional) – Error code associated with search thin strips operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByThinStripResults object with provided parameters.\n\nExamples\n\n>>> search_by_thin_strip_results = prime.SearchByThinStripResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripResults.html#overview","title":"SearchByThinStripResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search thin strips operation.\n\nn_found\n\nNumber of face elements identified as thin strips.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByThinStripResults object.\n\nset_default\n\nSet the default values of the SearchByThinStripResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripResults.html#import-detail","title":"SearchByThinStripResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripResults.html#property-detail","title":"SearchByThinStripResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByThinStripResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search thin strips operation.\n\n\n\nproperty SearchByThinStripResults.n_found: int\n\nNumber of face elements identified as thin strips."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByThinStripResults.html#method-detail","title":"SearchByThinStripResults > Method detail","text":"Method detail\n\n\n\nSearchByThinStripResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByThinStripResults.__str__() -> str\n\n\n\n\n\nstatic SearchByThinStripResults.print_default()\n\nPrint the default values of SearchByThinStripResults object.\n\nExamples\n\n>>> SearchByThinStripResults.print_default()\n\n\n\nstatic SearchByThinStripResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchByThinStripResults object.\n\nParameters\n\nn_found (int, optional) – Number of face elements identified as thin strips.\n\nerror_code (ErrorCode, optional) – Error code associated with search thin strips operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfer/Surfer.html#surfer","title":"Surfer","text":"Surfer\n\n\n\nclass ansys.meshing.prime.core.surfer.Surfer(model: ansys.meshing.prime.core.model.Model)\n\nGenerates surface mesh.\n\nPerforms surface meshing using various surface meshing algorithms on topofaces or face zonelets.\nFor example, constant size or volumetric size surface meshing.\n\nParameters\n\nmodel (Model) – Server model to create Surfer object."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfer/Surfer.html#overview","title":"Surfer > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_shell_bl_using_controls\n\nCreate ShellBL using data stored in controls.\n\ninitialize_surfer_params_for_wrapper\n\nInitialize surfer parameters to mesh surfaces generated by the wrapper.\n\nmesh_topo_faces\n\nPerform meshing on TopoFaces with given parameters.\n\nremesh_face_zonelets\n\nPerform meshing on face zonelets with given parameters.\n\nremesh_face_zonelets_locally\n\nRemesh face zonelets locally at the registered faces with given parameters.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nRun initializing context manager.\n\n__exit__\n\nRun when closing the context manager.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfer/Surfer.html#import-detail","title":"Surfer > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfer/Surfer.html#attribute-detail","title":"Surfer > Attribute detail","text":"Attribute detail\n\n\n\nSurfer.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfer/Surfer.html#method-detail","title":"Surfer > Method detail","text":"Method detail\n\n\n\nSurfer.__enter__()\n\nRun initializing context manager.\n\n\n\nSurfer.__exit__(type, value, traceback)\n\nRun when closing the context manager.\n\n\n\nSurfer.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfer.create_shell_bl_using_controls(part_id: int, shell_bl_control_ids: Iterable[int], shell_bl_params: ansys.meshing.prime.autogen.surferstructs.ShellBLParams) -> ansys.meshing.prime.autogen.surferstructs.CreateShellBLResults\n\nCreate ShellBL using data stored in controls.\n\nParameters\n\npart_id (int) – Id of the part.\n\nshell_bl_control_ids (Iterable[int]) – Ids of ShellBL control.\n\nshell_bl_params (ShellBLParams) – Parameters related to ShellBL.\n\nReturns\n\nReturns the CreateShellBLResults.\n\nReturn type\n\nCreateShellBLResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = surfer.create_shell_bl_using_controls(part_id,\n                                                    shell_bl_control_ids,\n                                                    shell_bl_params)\n\n\n\nSurfer.initialize_surfer_params_for_wrapper() -> ansys.meshing.prime.autogen.surferstructs.SurferParams\n\nInitialize surfer parameters to mesh surfaces generated by the wrapper.\n\nReturns\n\nSurfer parameters initialized for wrapper inputs.\n\nReturn type\n\nSurferParams\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = surfer.initialize_surfer_params_for_wrapper()\n\n\n\nSurfer.mesh_topo_faces(part_id: int, topo_faces: Iterable[int], params: ansys.meshing.prime.autogen.surferstructs.SurferParams) -> ansys.meshing.prime.autogen.surferstructs.SurferResults\n\nPerform meshing on TopoFaces with given parameters.\n\nParameters\n\npart_id (int) – ID of part.\n\ntopo_faces (Iterable[int]) – IDs of the TopoFaces.\n\nparams (SurferParams) – Surfer parameters.\n\nReturns\n\nResults from performing meshing on the TopoFaces.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = prime.SurferParams(model)\n>>> results = surfer.mesh_topo_faces(part_id, topo_faces, surfer_params)\n\n\n\nSurfer.remesh_face_zonelets(part_id: int, face_zonelets: Iterable[int], edge_zonelets: Iterable[int], params: ansys.meshing.prime.autogen.surferstructs.SurferParams) -> ansys.meshing.prime.autogen.surferstructs.SurferResults\n\nPerform meshing on face zonelets with given parameters.\n\nParameters\n\npart_id (int) – ID of part.\n\nface_zonelets (Iterable[int]) – IDs of the face zonelets.\n\nedge_zonelets (Iterable[int]) – IDs of the edge zonelets.\n\nparams (SurferParams) – Surfer parameters.\n\nReturns\n\nResults from meshing the face zonelets.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = prime.SurferParams(model)\n>>> results = surfer.remesh_face_zonelets(part_id,\n                face_zonelets, edge_zonelets, surfer_params)\n\n\n\nSurfer.remesh_face_zonelets_locally(part_id: int, face_zonelets: Iterable[int], register_id: int, local_surfer_params: ansys.meshing.prime.autogen.surferstructs.LocalSurferParams) -> ansys.meshing.prime.autogen.surferstructs.LocalSurferResults\n\nRemesh face zonelets locally at the registered faces with given parameters.\n\nParameters\n\npart_id (int) – ID of part.\n\nface_zonelets (Iterable[int]) – IDs of the face zonelets.\n\nregister_id (int) – Register ID of the target faces.\n\nlocal_surfer_params (LocalSurferParams) – Local surfer parameters.\n\nReturns\n\nResults from remeshing the face zonelets.\n\nReturn type\n\nLocalSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> local_surfer_params = prime.LocalSurferParams(model)\n>>> results = surfer.remesh_face_zonelets_locally(part_id,\n                face_zonelets, register_id, local_surfer_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationParams.html#checkfacedeviationparams","title":"CheckFaceDeviationParams","text":"CheckFaceDeviationParams\n\n\n\nclass ansys.meshing.prime.CheckFaceDeviationParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, distance: float = None, json_data: dict = None, **kwargs)\n\nParameters used for check face deviation operations.\n\nParameters\n\nmodel (Model) – Model to create a CheckFaceDeviationParams object with default parameters.\n\ndistance (float, optional) – Distance above which deviated entities are collected.\n\njson_data (dict, optional) – JSON dictionary to create a CheckFaceDeviationParams object with provided parameters.\n\nExamples\n\n>>> check_face_deviation_params = prime.CheckFaceDeviationParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationParams.html#overview","title":"CheckFaceDeviationParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndistance\n\nDistance above which deviated entities are collected.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckFaceDeviationParams object.\n\nset_default\n\nSet the default values of the CheckFaceDeviationParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationParams.html#import-detail","title":"CheckFaceDeviationParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationParams.html#property-detail","title":"CheckFaceDeviationParams > Property detail","text":"Property detail\n\n\n\nproperty CheckFaceDeviationParams.distance: float\n\nDistance above which deviated entities are collected."},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationParams.html#method-detail","title":"CheckFaceDeviationParams > Method detail","text":"Method detail\n\n\n\nCheckFaceDeviationParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckFaceDeviationParams.__str__() -> str\n\n\n\n\n\nstatic CheckFaceDeviationParams.print_default()\n\nPrint the default values of CheckFaceDeviationParams object.\n\nExamples\n\n>>> CheckFaceDeviationParams.print_default()\n\n\n\nstatic CheckFaceDeviationParams.set_default(distance: float = None)\n\nSet the default values of the CheckFaceDeviationParams object.\n\nParameters\n\ndistance (float, optional) – Distance above which deviated entities are collected."},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityParams.html#faceandedgeconnectivityparams","title":"FaceAndEdgeConnectivityParams","text":"FaceAndEdgeConnectivityParams\n\n\n\nclass ansys.meshing.prime.FaceAndEdgeConnectivityParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, reorder_face_zonelets_mid_nodes: bool = None, reorder_edge_zonelets_mid_nodes: bool = None, json_data: dict = None, **kwargs)\n\nParameters to get face and edge connectivity information.\n\nParameters\n\nmodel (Model) – Model to create a FaceAndEdgeConnectivityParams object with default parameters.\n\nreorder_face_zonelets_mid_nodes (bool, optional) – Option to reorder mid nodes for quadratic faces.\n\nreorder_edge_zonelets_mid_nodes (bool, optional) – Option to reorder mid nodes for quadratic edges.\n\njson_data (dict, optional) – JSON dictionary to create a FaceAndEdgeConnectivityParams object with provided parameters.\n\nExamples\n\n>>> face_and_edge_connectivity_params = prime.FaceAndEdgeConnectivityParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityParams.html#overview","title":"FaceAndEdgeConnectivityParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nreorder_edge_zonelets_mid_nodes\n\nOption to reorder mid nodes for quadratic edges.\n\nreorder_face_zonelets_mid_nodes\n\nOption to reorder mid nodes for quadratic faces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FaceAndEdgeConnectivityParams object.\n\nset_default\n\nSet the default values of the FaceAndEdgeConnectivityParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityParams.html#import-detail","title":"FaceAndEdgeConnectivityParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityParams.html#property-detail","title":"FaceAndEdgeConnectivityParams > Property detail","text":"Property detail\n\n\n\nproperty FaceAndEdgeConnectivityParams.reorder_edge_zonelets_mid_nodes: bool\n\nOption to reorder mid nodes for quadratic edges.\n\n\n\nproperty FaceAndEdgeConnectivityParams.reorder_face_zonelets_mid_nodes: bool\n\nOption to reorder mid nodes for quadratic faces."},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityParams.html#method-detail","title":"FaceAndEdgeConnectivityParams > Method detail","text":"Method detail\n\n\n\nFaceAndEdgeConnectivityParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFaceAndEdgeConnectivityParams.__str__() -> str\n\n\n\n\n\nstatic FaceAndEdgeConnectivityParams.print_default()\n\nPrint the default values of FaceAndEdgeConnectivityParams object.\n\nExamples\n\n>>> FaceAndEdgeConnectivityParams.print_default()\n\n\n\nstatic FaceAndEdgeConnectivityParams.set_default(reorder_face_zonelets_mid_nodes: bool = None, reorder_edge_zonelets_mid_nodes: bool = None)\n\nSet the default values of the FaceAndEdgeConnectivityParams object.\n\nParameters\n\nreorder_face_zonelets_mid_nodes (bool, optional) – Option to reorder mid nodes for quadratic faces.\n\nreorder_edge_zonelets_mid_nodes (bool, optional) – Option to reorder mid nodes for quadratic edges."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeResults.html#volumetricsizefieldcomputeresults","title":"VolumetricSizeFieldComputeResults","text":"VolumetricSizeFieldComputeResults\n\n\n\nclass ansys.meshing.prime.autogen.sizefieldstructs.VolumetricSizeFieldComputeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, size_field_id: int = None, json_data: dict = None, **kwargs)\n\nResults associated with the compute volumetric size field operation.\n\nParameters\n\nmodel (Model) – Model to create a VolumetricSizeFieldComputeResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the compute volumetric size field operation.\n\nsize_field_id (int, optional) – Id of the computed size field.\n\njson_data (dict, optional) – JSON dictionary to create a VolumetricSizeFieldComputeResults object with provided parameters.\n\nExamples\n\n>>> volumetric_size_field_compute_results = prime.VolumetricSizeFieldComputeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeResults.html#overview","title":"VolumetricSizeFieldComputeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the compute volumetric size field operation.\n\nsize_field_id\n\nId of the computed size field.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumetricSizeFieldComputeResults object.\n\nset_default\n\nSet the default values of the VolumetricSizeFieldComputeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeResults.html#import-detail","title":"VolumetricSizeFieldComputeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeResults.html#property-detail","title":"VolumetricSizeFieldComputeResults > Property detail","text":"Property detail\n\n\n\nproperty VolumetricSizeFieldComputeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the compute volumetric size field operation.\n\n\n\nproperty VolumetricSizeFieldComputeResults.size_field_id: int\n\nId of the computed size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/VolumetricSizeFieldComputeResults.html#method-detail","title":"VolumetricSizeFieldComputeResults > Method detail","text":"Method detail\n\n\n\nVolumetricSizeFieldComputeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumetricSizeFieldComputeResults.__str__() -> str\n\n\n\n\n\nstatic VolumetricSizeFieldComputeResults.print_default()\n\nPrint the default values of VolumetricSizeFieldComputeResults object.\n\nExamples\n\n>>> VolumetricSizeFieldComputeResults.print_default()\n\n\n\nstatic VolumetricSizeFieldComputeResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, size_field_id: int = None)\n\nSet the default values of the VolumetricSizeFieldComputeResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the compute volumetric size field operation.\n\nsize_field_id (int, optional) – Id of the computed size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrappercontrol/index.html#the-wrappercontrolpy-module","title":"The wrappercontrol.py module","text":"The wrappercontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrappercontrol/index.html#summary","title":"The wrappercontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nWrapperControl\n\nWrapper Control to describe all parameters and controls used for wrapping..\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrappercontrol/index.html#description","title":"The wrappercontrol.py module > Description","text":"Description\n\nModule containing WrapperControl related classes and methods."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesParams.html#subtractvolumesparams","title":"SubtractVolumesParams","text":"SubtractVolumesParams\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.SubtractVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, ignore_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, check_cutters: bool = None, keep_cutters: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control the volume subtract operation.\n\nParameters\n\nmodel (Model) – Model to create a SubtractVolumesParams object with default parameters.\n\nignore_face_zonelets (Iterable[int], optional) – Face zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\ncheck_cutters (bool, optional) – Option to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\nkeep_cutters (bool, optional) – Option to retain cutter volumes.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a SubtractVolumesParams object with provided parameters.\n\nExamples\n\n>>> subtract_volumes_params = prime.SubtractVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesParams.html#overview","title":"SubtractVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncheck_cutters\n\nOption to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\nignore_face_zonelets\n\nFace zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\nkeep_cutters\n\nOption to retain cutter volumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SubtractVolumesParams object.\n\nset_default\n\nSet the default values of the SubtractVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesParams.html#import-detail","title":"SubtractVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesParams.html#property-detail","title":"SubtractVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty SubtractVolumesParams.check_cutters: bool\n\nOption to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\n\n\nproperty SubtractVolumesParams.ignore_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\n\n\nproperty SubtractVolumesParams.keep_cutters: bool\n\nOption to retain cutter volumes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesParams.html#method-detail","title":"SubtractVolumesParams > Method detail","text":"Method detail\n\n\n\nSubtractVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSubtractVolumesParams.__str__() -> str\n\n\n\n\n\nstatic SubtractVolumesParams.print_default()\n\nPrint the default values of SubtractVolumesParams object.\n\nExamples\n\n>>> SubtractVolumesParams.print_default()\n\n\n\nstatic SubtractVolumesParams.set_default(ignore_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, check_cutters: bool = None, keep_cutters: bool = None)\n\nSet the default values of the SubtractVolumesParams object.\n\nParameters\n\nignore_face_zonelets (Iterable[int], optional) – Face zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\ncheck_cutters (bool, optional) – Option to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\nkeep_cutters (bool, optional) – Option to retain cutter volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfer/Surfer.html#surfer","title":"Surfer","text":"Surfer\n\n\n\nclass ansys.meshing.prime.autogen.surfer.Surfer(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, part_id: int)\n\nGenerates surface mesh.\n\nPerforms surface meshing using various surface meshing algorithms on topofaces or face zonelets.\nFor example, constant size or volumetric size surface meshing.\n\nParameters\n\nmodel (Model) – Server model to create Surfer object.\n\npart_id (int) – Id of the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfer/Surfer.html#overview","title":"Surfer > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_shell_bl_using_controls\n\nCreates ShellBL using data stored in controls.\n\ninitialize_surfer_params_for_wrapper\n\nInitializes surfer parameters to mesh surfaces generated by wrapper.\n\nmesh_topo_faces\n\nPerforms meshing on the given topofaces with provided parameters.\n\nrefacet_topo_faces\n\nPerforms refaceting on the given topofaces with provided parameters.\n\nremesh_face_zonelets\n\nPerforms meshing on the given face zonelets with provided parameters.\n\nremesh_face_zonelets_locally\n\nRemesh the given face zonelets locally at the registered faces with provided parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Surfer.\n\n__exit__\n\nExit context for Surfer.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfer/Surfer.html#import-detail","title":"Surfer > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfer/Surfer.html#method-detail","title":"Surfer > Method detail","text":"Method detail\n\n\n\nSurfer.__enter__()\n\nEnter context for Surfer.\n\n\n\nSurfer.__exit__(type, value, traceback)\n\nExit context for Surfer.\n\n\n\nSurfer.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfer.create_shell_bl_using_controls(part_id: int, shell_bl_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int], shell_bl_params: ansys.meshing.prime.params.primestructs.ShellBLParams) -> ansys.meshing.prime.params.primestructs.CreateShellBLResults\n\nCreates ShellBL using data stored in controls.\n\nParameters\n\npart_id (int) – Id of the part.\n\nshell_bl_control_ids (Iterable[int]) – Ids of ShellBL control.\n\nshell_bl_params (ShellBLParams) – Parameters related to ShellBL.\n\nReturns\n\nReturns the CreateShellBLResults.\n\nReturn type\n\nCreateShellBLResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = surfer.create_shell_bl_using_controls(part_id,shell_bl_control_ids,shell_bl_params)\n\n\n\nSurfer.initialize_surfer_params_for_wrapper() -> ansys.meshing.prime.params.primestructs.SurferParams\n\nInitializes surfer parameters to mesh surfaces generated by wrapper.\n\nReturns\n\nReturns the SurferParams initialized for wrapper inputs.\n\nReturn type\n\nSurferParams\n\nExamples\n\n>>> surfer_params = surfer.initialize_surfer_params_for_wrapper()\n\n\n\nSurfer.mesh_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.SurferParams) -> ansys.meshing.prime.params.primestructs.SurferResults\n\nPerforms meshing on the given topofaces with provided parameters.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces.\n\nparams (SurferParams) – Surfer Parameters.\n\nReturns\n\nReturns the SurferResults.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> results = surfer.mesh_topo_faces(topo_faces, params)\n\n\n\nSurfer.refacet_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.SurferParams) -> ansys.meshing.prime.params.primestructs.SurferResults\n\nPerforms refaceting on the given topofaces with provided parameters.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces.\n\nparams (SurferParams) – Surfer Parameters.\n\nReturns\n\nReturns the SurferResults.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> results = surfer.RefacetTopoFaces(topo_faces, params)\n\n\n\nSurfer.remesh_face_zonelets(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.SurferParams) -> ansys.meshing.prime.params.primestructs.SurferResults\n\nPerforms meshing on the given face zonelets with provided parameters.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nedge_zonelets (Iterable[int]) – Ids of edge zonelets.\n\nparams (SurferParams) – Surfer parameters.\n\nReturns\n\nReturns the SurferResults.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> results = surfer.remesh_face_zonelets(face_zonelets, edge_zonelets, params)\n\n\n\nSurfer.remesh_face_zonelets_locally(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, local_surfer_params: ansys.meshing.prime.params.primestructs.LocalSurferParams) -> ansys.meshing.prime.params.primestructs.LocalSurferResults\n\nRemesh the given face zonelets locally at the registered faces with provided parameters.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Register id of the target faces.\n\nlocal_surfer_params (LocalSurferParams) – Local surfer Parameters.\n\nReturns\n\nReturns the LocalSurferResults.\n\nReturn type\n\nLocalSurferResults\n\nExamples\n\n>>> results = surfer.remesh_face_zonelets_locally(face_zonelets, register_id, local_surfer_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/DeleteMaterialPointResults.html#deletematerialpointresults","title":"DeleteMaterialPointResults","text":"DeleteMaterialPointResults\n\n\n\nclass ansys.meshing.prime.autogen.materialpointmanagerstructs.DeleteMaterialPointResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with delete material point operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteMaterialPointResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteMaterialPointResults object with provided parameters.\n\nExamples\n\n>>> delete_material_point_results = prime.DeleteMaterialPointResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/DeleteMaterialPointResults.html#overview","title":"DeleteMaterialPointResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteMaterialPointResults object.\n\nset_default\n\nSet the default values of the DeleteMaterialPointResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/DeleteMaterialPointResults.html#import-detail","title":"DeleteMaterialPointResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/DeleteMaterialPointResults.html#property-detail","title":"DeleteMaterialPointResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteMaterialPointResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/DeleteMaterialPointResults.html#method-detail","title":"DeleteMaterialPointResults > Method detail","text":"Method detail\n\n\n\nDeleteMaterialPointResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteMaterialPointResults.__str__() -> str\n\n\n\n\n\nstatic DeleteMaterialPointResults.print_default()\n\nPrint the default values of DeleteMaterialPointResults object.\n\nExamples\n\n>>> DeleteMaterialPointResults.print_default()\n\n\n\nstatic DeleteMaterialPointResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteMaterialPointResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_toy_car_fmd.html#ansysmeshingprimeexamplesexamplesdownload_toy_car_fmd","title":"ansys.meshing.prime.examples.examples.download_toy_car_fmd","text":"ansys.meshing.prime.examples.examples.download_toy_car_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_toy_car_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the toy car example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddLabelResults.html#addlabelresults","title":"AddLabelResults","text":"AddLabelResults\n\n\n\nclass ansys.meshing.prime.AddLabelResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the add label operation.\n\nParameters\n\nmodel (Model) – Model to create a AddLabelResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the add label operation.\n\njson_data (dict, optional) – JSON dictionary to create a AddLabelResults object with provided parameters.\n\nExamples\n\n>>> add_label_results = prime.AddLabelResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddLabelResults.html#overview","title":"AddLabelResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the add label operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AddLabelResults object.\n\nset_default\n\nSet the default values of the AddLabelResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddLabelResults.html#import-detail","title":"AddLabelResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AddLabelResults.html#property-detail","title":"AddLabelResults > Property detail","text":"Property detail\n\n\n\nproperty AddLabelResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the add label operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/AddLabelResults.html#method-detail","title":"AddLabelResults > Method detail","text":"Method detail\n\n\n\nAddLabelResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAddLabelResults.__str__() -> str\n\n\n\n\n\nstatic AddLabelResults.print_default()\n\nPrint the default values of AddLabelResults object.\n\nExamples\n\n>>> AddLabelResults.print_default()\n\n\n\nstatic AddLabelResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the AddLabelResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the add label operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentCaseParams.html#exportfluentcaseparams","title":"ExportFluentCaseParams","text":"ExportFluentCaseParams\n\n\n\nclass ansys.meshing.prime.ExportFluentCaseParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cff_format: bool = None, json_data: dict = None, **kwargs)\n\nParameters to export fluent case file.\n\nParameters\n\nmodel (Model) – Model to create a ExportFluentCaseParams object with default parameters.\n\ncff_format (bool, optional) – Option to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz).\n\njson_data (dict, optional) – JSON dictionary to create a ExportFluentCaseParams object with provided parameters.\n\nExamples\n\n>>> export_fluent_case_params = prime.ExportFluentCaseParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentCaseParams.html#overview","title":"ExportFluentCaseParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncff_format\n\nOption to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz).\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportFluentCaseParams object.\n\nset_default\n\nSet the default values of the ExportFluentCaseParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentCaseParams.html#import-detail","title":"ExportFluentCaseParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentCaseParams.html#property-detail","title":"ExportFluentCaseParams > Property detail","text":"Property detail\n\n\n\nproperty ExportFluentCaseParams.cff_format: bool\n\nOption to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz)."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportFluentCaseParams.html#method-detail","title":"ExportFluentCaseParams > Method detail","text":"Method detail\n\n\n\nExportFluentCaseParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportFluentCaseParams.__str__() -> str\n\n\n\n\n\nstatic ExportFluentCaseParams.print_default()\n\nPrint the default values of ExportFluentCaseParams object.\n\nExamples\n\n>>> ExportFluentCaseParams.print_default()\n\n\n\nstatic ExportFluentCaseParams.set_default(cff_format: bool = None)\n\nSet the default values of the ExportFluentCaseParams object.\n\nParameters\n\ncff_format (bool, optional) – Option to specify whether to export Fluent case file in CFF format (.cas.h5) or legacy format (.cas, .cas.gz)."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_block_model_scdoc.html#ansysmeshingprimeexamplesdownload_block_model_scdoc","title":"ansys.meshing.prime.examples.download_block_model_scdoc","text":"ansys.meshing.prime.examples.download_block_model_scdoc\n\n\n\nansys.meshing.prime.examples.download_block_model_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload CAD file for the block model example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(block_model, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#wrap-a-toy-car-for-a-flow-analysis","title":"Wrap a toy car for a flow analysis","text":"Wrap a toy car for a flow analysis\n\nSummary: This example demonstrates how to wrap a toy car for a flow analysis."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#objective","title":"Wrap a toy car for a flow analysis > Objective","text":"Objective\n\nThis example wraps a toy car and volume meshes with a tetrahedral mesh with prisms.\nIt uses several meshing utilities available in the lucid class for convenience and ease."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#procedure","title":"Wrap a toy car for a flow analysis > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance.\n\nInstantiate the meshing utilities from the lucid class.\n\nImport the geometry.\n\nCoarse wrap parts with holes to clean up.\n\nExtract the fluid region using a wrapper.\n\nCheck that the wrap surface is closed and that the quality is suitable.\n\nMesh only fluid with tetrahedral elements and boundary layer refinement.\n\nCreate face zones from labels imported from the geometry.\n\nPrint statistics on the generated mesh.\n\nImprove the mesh quality.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#launch-ansys-prime-server","title":"Wrap a toy car for a flow analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules and launch an instance of Ansys Prime Server.\nFrom the PyPrimeMesh client get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#import-geometry","title":"Wrap a toy car for a flow analysis > Import geometry","text":"Import geometry\n\nDownload the toy car geometry (FMD) file exported by SpaceClaim.\nImport the geometry and display everything except the tunnel.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#close-holes","title":"Wrap a toy car for a flow analysis > Close holes","text":"Close holes\n\nSeveral parts are open surfaces (with holes).\nCoarse wrap to close the holes and delete the originals.\nYou could use leakage detection to close these regions.\nThis example uses a coarse wrap and disables feature edge refinement to walk over the holes.\nAs this is not the final wrap, this example does not remesh after the wrap.\nWrapping each object in turn avoids coarse wrap bridging across narrow gaps.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#extract-fluid-using-a-wrapper","title":"Wrap a toy car for a flow analysis > Extract fluid using a wrapper","text":"Extract fluid using a wrapper\n\nWrap the full model and extract the largest internal region as the fluid.\nCreate edges at intersecting regions to improve the quality.\nRefine mesh to avoid contact between different parts.\nThe new wrap object replaces all original geometry unless keep_input\nis set to True.  Volumes are generated from the wrap for use later."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#check-wrap","title":"Wrap a toy car for a flow analysis > Check wrap","text":"Check wrap\n\nCheck that the wrap surface is closed and that the quality is suitable to use\nas surface mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#create-zones","title":"Wrap a toy car for a flow analysis > Create zones","text":"Create zones\n\nCreate face zones from labels imported from the geometry that can be used\nin the solver to define boundary conditions.\nIf specifying individual labels to create zones, the order is important.\nThe last label in the list wins.\nProviding no label_expression flattens all labels into zones.\nFor example, if LabelA and LabelB are overlapping, three zones are\ncreated: LabelA, LabelB, and LabelA_LabelB."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#volume-mesh","title":"Wrap a toy car for a flow analysis > Volume mesh","text":"Volume mesh\n\nMesh only fluid volume with tetrahedral elements and boundary layer refinement.\nThis example does not mesh other volumetric regions.\nVolume zones exist already for volume meshing and passing to the solver.\nThe largest face zonelet is used by default to define volume zone names at creation.\nAfter volume meshing, you can see that you have a cell zonelet in the part summary.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#print-mesh-stats","title":"Wrap a toy car for a flow analysis > Print mesh stats","text":"Print mesh stats\n\nPrint statistics on the generated mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#improve-quality","title":"Wrap a toy car for a flow analysis > Improve quality","text":"Improve quality\n\nBecause the mesh quality is poor, use the improve_by_auto_node_move method\nto improve the mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#write-mesh","title":"Wrap a toy car for a flow analysis > Write mesh","text":"Write mesh\n\nWrite a CAS file for use in the Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/04_lucid_toy_car.html#exit-pyprimemesh","title":"Wrap a toy car for a flow analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (3 minutes 35.634 seconds)\n\n\n\nDownload Jupyter notebook: 04_lucid_toy_car.ipynb\n\nDownload Python source code: 04_lucid_toy_car.py\n\nDownload zipped: 04_lucid_toy_car.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/PartialDefeatureParams.html#partialdefeatureparams","title":"PartialDefeatureParams","text":"PartialDefeatureParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.PartialDefeatureParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, edge_sharp_corner_angle: float = None, merge_face_normals_angle: float = None, merge_edge_allow_self_close: bool = None, json_data: dict = None, **kwargs)\n\nParameters for partial defeature operation.\n\nParameters\n\nmodel (Model) – Model to create a PartialDefeatureParams object with default parameters.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a PartialDefeatureParams object with provided parameters.\n\nExamples\n\n>>> partial_defeature_params = prime.PartialDefeatureParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/PartialDefeatureParams.html#overview","title":"PartialDefeatureParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_sharp_corner_angle\n\nMerge edges when the angle between the edges are below the provided value.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmerge_face_normals_angle\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PartialDefeatureParams object.\n\nset_default\n\nSet the default values of the PartialDefeatureParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/PartialDefeatureParams.html#import-detail","title":"PartialDefeatureParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/PartialDefeatureParams.html#property-detail","title":"PartialDefeatureParams > Property detail","text":"Property detail\n\n\n\nproperty PartialDefeatureParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty PartialDefeatureParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty PartialDefeatureParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/PartialDefeatureParams.html#method-detail","title":"PartialDefeatureParams > Method detail","text":"Method detail\n\n\n\nPartialDefeatureParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPartialDefeatureParams.__str__() -> str\n\n\n\n\n\nstatic PartialDefeatureParams.print_default()\n\nPrint the default values of PartialDefeatureParams object.\n\nExamples\n\n>>> PartialDefeatureParams.print_default()\n\n\n\nstatic PartialDefeatureParams.set_default(edge_sharp_corner_angle: float = None, merge_face_normals_angle: float = None, merge_edge_allow_self_close: bool = None)\n\nSet the default values of the PartialDefeatureParams object.\n\nParameters\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/IntersectParams.html#intersectparams","title":"IntersectParams","text":"IntersectParams\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.IntersectParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, collapse_feature_angle: float = None, collapse_target_skewness: float = None, json_data: dict = None, **kwargs)\n\nParameters used for intersection.\n\nParameters\n\nmodel (Model) – Model to create a IntersectParams object with default parameters.\n\ntolerance (float, optional) – Intersection tolerance.\n\nuse_absolute_tolerance (bool, optional) – True if tolerance provided is absolute value.\n\nremesh (bool, optional) – Local remesh at the intersection.\n\ncollapse_feature_angle (float, optional) – Angle to preserve features while performing collapse in improve operation.\n\ncollapse_target_skewness (float, optional) – Perform collapse on faces with skewness above the provided target skewness.\n\njson_data (dict, optional) – JSON dictionary to create a IntersectParams object with provided parameters.\n\nExamples\n\n>>> intersect_params = prime.IntersectParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/IntersectParams.html#overview","title":"IntersectParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncollapse_feature_angle\n\nAngle to preserve features while performing collapse in improve operation.\n\ncollapse_target_skewness\n\nPerform collapse on faces with skewness above the provided target skewness.\n\nremesh\n\nLocal remesh at the intersection.\n\ntolerance\n\nIntersection tolerance.\n\nuse_absolute_tolerance\n\nTrue if tolerance provided is absolute value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IntersectParams object.\n\nset_default\n\nSet the default values of the IntersectParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/IntersectParams.html#import-detail","title":"IntersectParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/IntersectParams.html#property-detail","title":"IntersectParams > Property detail","text":"Property detail\n\n\n\nproperty IntersectParams.collapse_feature_angle: float\n\nAngle to preserve features while performing collapse in improve operation.\n\n\n\nproperty IntersectParams.collapse_target_skewness: float\n\nPerform collapse on faces with skewness above the provided target skewness.\n\n\n\nproperty IntersectParams.remesh: bool\n\nLocal remesh at the intersection.\n\n\n\nproperty IntersectParams.tolerance: float\n\nIntersection tolerance.\n\n\n\nproperty IntersectParams.use_absolute_tolerance: bool\n\nTrue if tolerance provided is absolute value."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/IntersectParams.html#method-detail","title":"IntersectParams > Method detail","text":"Method detail\n\n\n\nIntersectParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIntersectParams.__str__() -> str\n\n\n\n\n\nstatic IntersectParams.print_default()\n\nPrint the default values of IntersectParams object.\n\nExamples\n\n>>> IntersectParams.print_default()\n\n\n\nstatic IntersectParams.set_default(tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, collapse_feature_angle: float = None, collapse_target_skewness: float = None)\n\nSet the default values of the IntersectParams object.\n\nParameters\n\ntolerance (float, optional) – Intersection tolerance.\n\nuse_absolute_tolerance (bool, optional) – True if tolerance provided is absolute value.\n\nremesh (bool, optional) – Local remesh at the intersection.\n\ncollapse_feature_angle (float, optional) – Angle to preserve features while performing collapse in improve operation.\n\ncollapse_target_skewness (float, optional) – Perform collapse on faces with skewness above the provided target skewness."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MorphSolveParams.html#morphsolveparams","title":"MorphSolveParams","text":"MorphSolveParams\n\n\n\nclass ansys.meshing.prime.autogen.morpherstructs.MorphSolveParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nMorpher solve parameters.\n\nParameters\n\nmodel (Model) – Model to create a MorphSolveParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a MorphSolveParams object with provided parameters.\n\nExamples\n\n>>> morph_solve_params = prime.MorphSolveParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MorphSolveParams.html#overview","title":"MorphSolveParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MorphSolveParams object.\n\nset_default\n\nSet the default values of the MorphSolveParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MorphSolveParams.html#import-detail","title":"MorphSolveParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MorphSolveParams.html#method-detail","title":"MorphSolveParams > Method detail","text":"Method detail\n\n\n\nMorphSolveParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMorphSolveParams.__str__() -> str\n\n\n\n\n\nstatic MorphSolveParams.print_default()\n\nPrint the default values of MorphSolveParams object.\n\nExamples\n\n>>> MorphSolveParams.print_default()\n\n\n\nstatic MorphSolveParams.set_default()\n\nSet the default values of the MorphSolveParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsResults.html#createintersectionedgeloopsresults","title":"CreateIntersectionEdgeLoopsResults","text":"CreateIntersectionEdgeLoopsResults\n\n\n\nclass ansys.meshing.prime.CreateIntersectionEdgeLoopsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, extracted_ids: ansys.meshing.prime.params.primestructs.List[ExtractedFeatureIds] = None, json_data: dict = None, **kwargs)\n\nResults for the edge loops created by intersection of two groups of face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateIntersectionEdgeLoopsResults object with default parameters.\n\nprocessing_time (float, optional) – Time taken to extract edges formed by intersecting faces.\n\nerror_code (ErrorCode, optional) – Error code returned by edge extraction function.\n\nextracted_ids (List[ExtractedFeatureIds], optional) – List of ExtractedFeatureIds that contains ids of extracted edges.\n\njson_data (dict, optional) – JSON dictionary to create a CreateIntersectionEdgeLoopsResults object with provided parameters.\n\nExamples\n\n>>> create_intersection_edge_loops_results = prime.CreateIntersectionEdgeLoopsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsResults.html#overview","title":"CreateIntersectionEdgeLoopsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code returned by edge extraction function.\n\nextracted_ids\n\nList of ExtractedFeatureIds that contains ids of extracted edges.\n\nprocessing_time\n\nTime taken to extract edges formed by intersecting faces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateIntersectionEdgeLoopsResults object.\n\nset_default\n\nSet the default values of the CreateIntersectionEdgeLoopsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsResults.html#import-detail","title":"CreateIntersectionEdgeLoopsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsResults.html#property-detail","title":"CreateIntersectionEdgeLoopsResults > Property detail","text":"Property detail\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code returned by edge extraction function.\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.extracted_ids: ansys.meshing.prime.params.primestructs.List[ExtractedFeatureIds]\n\nList of ExtractedFeatureIds that contains ids of extracted edges.\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.processing_time: float\n\nTime taken to extract edges formed by intersecting faces."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateIntersectionEdgeLoopsResults.html#method-detail","title":"CreateIntersectionEdgeLoopsResults > Method detail","text":"Method detail\n\n\n\nCreateIntersectionEdgeLoopsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateIntersectionEdgeLoopsResults.__str__() -> str\n\n\n\n\n\nstatic CreateIntersectionEdgeLoopsResults.print_default()\n\nPrint the default values of CreateIntersectionEdgeLoopsResults object.\n\nExamples\n\n>>> CreateIntersectionEdgeLoopsResults.print_default()\n\n\n\nstatic CreateIntersectionEdgeLoopsResults.set_default(processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, extracted_ids: ansys.meshing.prime.params.primestructs.List[ExtractedFeatureIds] = None)\n\nSet the default values of the CreateIntersectionEdgeLoopsResults object.\n\nParameters\n\nprocessing_time (float, optional) – Time taken to extract edges formed by intersecting faces.\n\nerror_code (ErrorCode, optional) – Error code returned by edge extraction function.\n\nextracted_ids (List[ExtractedFeatureIds], optional) – List of ExtractedFeatureIds that contains ids of extracted edges."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneMapMeshParams.html#multizonemapmeshparams","title":"MultiZoneMapMeshParams","text":"MultiZoneMapMeshParams\n\n\n\nclass ansys.meshing.prime.MultiZoneMapMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, scope: ScopeDefinition = None, json_data: dict = None, **kwargs)\n\nDefine controlling parameters for the map mesh using MultiZone.\n\nParameters\n\nmodel (Model) – Model to create a MultiZoneMapMeshParams object with default parameters.\n\nscope (ScopeDefinition, optional) – Scope used for MultiZone map mesh control.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a MultiZoneMapMeshParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_map_mesh_params = prime.MultiZoneMapMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneMapMeshParams.html#overview","title":"MultiZoneMapMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nscope\n\nScope used for MultiZone map mesh control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MultiZoneMapMeshParams object.\n\nset_default\n\nSet the default values of the MultiZoneMapMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneMapMeshParams.html#import-detail","title":"MultiZoneMapMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneMapMeshParams.html#property-detail","title":"MultiZoneMapMeshParams > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneMapMeshParams.scope: ScopeDefinition\n\nScope used for MultiZone map mesh control.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneMapMeshParams.html#method-detail","title":"MultiZoneMapMeshParams > Method detail","text":"Method detail\n\n\n\nMultiZoneMapMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneMapMeshParams.__str__() -> str\n\n\n\n\n\nstatic MultiZoneMapMeshParams.print_default()\n\nPrint the default values of MultiZoneMapMeshParams object.\n\nExamples\n\n>>> MultiZoneMapMeshParams.print_default()\n\n\n\nstatic MultiZoneMapMeshParams.set_default(scope: ScopeDefinition = None)\n\nSet the default values of the MultiZoneMapMeshParams object.\n\nParameters\n\nscope (ScopeDefinition, optional) – Scope used for MultiZone map mesh control."},{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateResults.html#triangulateresults","title":"TriangulateResults","text":"TriangulateResults\n\n\n\nclass ansys.meshing.prime.TriangulateResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_faces_triangulated: int = None, json_data: dict = None, **kwargs)\n\nResults associated with triangulate operation.\n\nParameters\n\nmodel (Model) – Model to create a TriangulateResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of the operation.This is a beta parameter. The behavior and name may change in the future.\n\nn_faces_triangulated (int, optional) – Number of faces that were triangulated.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a TriangulateResults object with provided parameters.\n\nExamples\n\n>>> triangulate_results = prime.TriangulateResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateResults.html#overview","title":"TriangulateResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of the operation.\n\nn_faces_triangulated\n\nNumber of faces that were triangulated.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TriangulateResults object.\n\nset_default\n\nSet the default values of the TriangulateResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateResults.html#import-detail","title":"TriangulateResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateResults.html#property-detail","title":"TriangulateResults > Property detail","text":"Property detail\n\n\n\nproperty TriangulateResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty TriangulateResults.n_faces_triangulated: int\n\nNumber of faces that were triangulated.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/TriangulateResults.html#method-detail","title":"TriangulateResults > Method detail","text":"Method detail\n\n\n\nTriangulateResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTriangulateResults.__str__() -> str\n\n\n\n\n\nstatic TriangulateResults.print_default()\n\nPrint the default values of TriangulateResults object.\n\nExamples\n\n>>> TriangulateResults.print_default()\n\n\n\nstatic TriangulateResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_faces_triangulated: int = None)\n\nSet the default values of the TriangulateResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of the operation.\n\nn_faces_triangulated (int, optional) – Number of faces that were triangulated."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connect/index.html#the-connectpy-module","title":"The connect.py module","text":"The connect.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connect/index.html#summary","title":"The connect.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nConnect\n\nConnect face zonelets.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connect/index.html#description","title":"The connect.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesParams.html#deletetopoentitiesparams","title":"DeleteTopoEntitiesParams","text":"DeleteTopoEntitiesParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.DeleteTopoEntitiesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, delete_geom_zonelets: bool = None, delete_mesh_zonelets: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control delete topoentities.\n\nParameters\n\nmodel (Model) – Model to create a DeleteTopoEntitiesParams object with default parameters.\n\ndelete_geom_zonelets (bool, optional) – Option to delete geometry zonelets of topology.\n\ndelete_mesh_zonelets (bool, optional) – Option to delete mesh zonelets of topology.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteTopoEntitiesParams object with provided parameters.\n\nExamples\n\n>>> delete_topo_entities_params = prime.DeleteTopoEntitiesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesParams.html#overview","title":"DeleteTopoEntitiesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_geom_zonelets\n\nOption to delete geometry zonelets of topology.\n\ndelete_mesh_zonelets\n\nOption to delete mesh zonelets of topology.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteTopoEntitiesParams object.\n\nset_default\n\nSet the default values of the DeleteTopoEntitiesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesParams.html#import-detail","title":"DeleteTopoEntitiesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesParams.html#property-detail","title":"DeleteTopoEntitiesParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteTopoEntitiesParams.delete_geom_zonelets: bool\n\nOption to delete geometry zonelets of topology.\n\n\n\nproperty DeleteTopoEntitiesParams.delete_mesh_zonelets: bool\n\nOption to delete mesh zonelets of topology."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteTopoEntitiesParams.html#method-detail","title":"DeleteTopoEntitiesParams > Method detail","text":"Method detail\n\n\n\nDeleteTopoEntitiesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteTopoEntitiesParams.__str__() -> str\n\n\n\n\n\nstatic DeleteTopoEntitiesParams.print_default()\n\nPrint the default values of DeleteTopoEntitiesParams object.\n\nExamples\n\n>>> DeleteTopoEntitiesParams.print_default()\n\n\n\nstatic DeleteTopoEntitiesParams.set_default(delete_geom_zonelets: bool = None, delete_mesh_zonelets: bool = None)\n\nSet the default values of the DeleteTopoEntitiesParams object.\n\nParameters\n\ndelete_geom_zonelets (bool, optional) – Option to delete geometry zonelets of topology.\n\ndelete_mesh_zonelets (bool, optional) – Option to delete mesh zonelets of topology."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefield/index.html#the-sizefieldpy-module","title":"The sizefield.py module","text":"The sizefield.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefield/index.html#summary","title":"The sizefield.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSizeField\n\nThe size field is computed based on the size control defined.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefield/index.html#description","title":"The sizefield.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityParams.html#searchbyqualityparams","title":"SearchByQualityParams","text":"SearchByQualityParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchByQualityParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, quality_limit: float = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, json_data: dict = None, **kwargs)\n\nParameters to control search by quality results.\n\nParameters\n\nmodel (Model) – Model to create a SearchByQualityParams object with default parameters.\n\nquality_limit (float, optional) – Quality limit used for search face elements.\n\nface_quality_measure (FaceQualityMeasure, optional) – Quality measure used for search face elements.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByQualityParams object with provided parameters.\n\nExamples\n\n>>> search_by_quality_params = prime.SearchByQualityParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityParams.html#overview","title":"SearchByQualityParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_quality_measure\n\nQuality measure used for search face elements.\n\nquality_limit\n\nQuality limit used for search face elements.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByQualityParams object.\n\nset_default\n\nSet the default values of the SearchByQualityParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityParams.html#import-detail","title":"SearchByQualityParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityParams.html#property-detail","title":"SearchByQualityParams > Property detail","text":"Property detail\n\n\n\nproperty SearchByQualityParams.face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure\n\nQuality measure used for search face elements.\n\n\n\nproperty SearchByQualityParams.quality_limit: float\n\nQuality limit used for search face elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByQualityParams.html#method-detail","title":"SearchByQualityParams > Method detail","text":"Method detail\n\n\n\nSearchByQualityParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByQualityParams.__str__() -> str\n\n\n\n\n\nstatic SearchByQualityParams.print_default()\n\nPrint the default values of SearchByQualityParams object.\n\nExamples\n\n>>> SearchByQualityParams.print_default()\n\n\n\nstatic SearchByQualityParams.set_default(quality_limit: float = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None)\n\nSet the default values of the SearchByQualityParams object.\n\nParameters\n\nquality_limit (float, optional) – Quality limit used for search face elements.\n\nface_quality_measure (FaceQualityMeasure, optional) – Quality measure used for search face elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsParams.html#cellstatisticsparams","title":"CellStatisticsParams","text":"CellStatisticsParams\n\n\n\nclass ansys.meshing.prime.CellStatisticsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, get_volume: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to calculate cell statistics.\n\nParameters\n\nmodel (Model) – Model to create a CellStatisticsParams object with default parameters.\n\nget_volume (bool, optional) – Provides option to compute and get cumulative cell volume of all element.\n\njson_data (dict, optional) – JSON dictionary to create a CellStatisticsParams object with provided parameters.\n\nExamples\n\n>>> cell_statistics_params = prime.CellStatisticsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsParams.html#overview","title":"CellStatisticsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nget_volume\n\nProvides option to compute and get cumulative cell volume of all element.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CellStatisticsParams object.\n\nset_default\n\nSet the default values of the CellStatisticsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsParams.html#import-detail","title":"CellStatisticsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsParams.html#property-detail","title":"CellStatisticsParams > Property detail","text":"Property detail\n\n\n\nproperty CellStatisticsParams.get_volume: bool\n\nProvides option to compute and get cumulative cell volume of all element."},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsParams.html#method-detail","title":"CellStatisticsParams > Method detail","text":"Method detail\n\n\n\nCellStatisticsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCellStatisticsParams.__str__() -> str\n\n\n\n\n\nstatic CellStatisticsParams.print_default()\n\nPrint the default values of CellStatisticsParams object.\n\nExamples\n\n>>> CellStatisticsParams.print_default()\n\n\n\nstatic CellStatisticsParams.set_default(get_volume: bool = None)\n\nSet the default values of the CellStatisticsParams object.\n\nParameters\n\nget_volume (bool, optional) – Provides option to compute and get cumulative cell volume of all element."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIResults.html#createboiresults","title":"CreateBOIResults","text":"CreateBOIResults\n\n\n\nclass ansys.meshing.prime.CreateBOIResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None, json_data: dict = None, **kwargs)\n\nResult structure associated with BOI creation of zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateBOIResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\npart_id (int, optional) – The BOI part id.\n\njson_data (dict, optional) – JSON dictionary to create a CreateBOIResults object with provided parameters.\n\nExamples\n\n>>> create_boiresults = prime.CreateBOIResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIResults.html#overview","title":"CreateBOIResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\npart_id\n\nThe BOI part id.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateBOIResults object.\n\nset_default\n\nSet the default values of the CreateBOIResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIResults.html#import-detail","title":"CreateBOIResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIResults.html#property-detail","title":"CreateBOIResults > Property detail","text":"Property detail\n\n\n\nproperty CreateBOIResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty CreateBOIResults.part_id: int\n\nThe BOI part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIResults.html#method-detail","title":"CreateBOIResults > Method detail","text":"Method detail\n\n\n\nCreateBOIResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateBOIResults.__str__() -> str\n\n\n\n\n\nstatic CreateBOIResults.print_default()\n\nPrint the default values of CreateBOIResults object.\n\nExamples\n\n>>> CreateBOIResults.print_default()\n\n\n\nstatic CreateBOIResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None)\n\nSet the default values of the CreateBOIResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\npart_id (int, optional) – The BOI part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchResults.html#createcontactpatchresults","title":"CreateContactPatchResults","text":"CreateContactPatchResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.CreateContactPatchResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None, json_data: dict = None, **kwargs)\n\nResult structure associated with created contact patch zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateContactPatchResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the contact patch creation operation.\n\npart_id (int, optional) – Contact patch part id.\n\njson_data (dict, optional) – JSON dictionary to create a CreateContactPatchResults object with provided parameters.\n\nExamples\n\n>>> create_contact_patch_results = prime.CreateContactPatchResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchResults.html#overview","title":"CreateContactPatchResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the contact patch creation operation.\n\npart_id\n\nContact patch part id.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateContactPatchResults object.\n\nset_default\n\nSet the default values of the CreateContactPatchResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchResults.html#import-detail","title":"CreateContactPatchResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchResults.html#property-detail","title":"CreateContactPatchResults > Property detail","text":"Property detail\n\n\n\nproperty CreateContactPatchResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the contact patch creation operation.\n\n\n\nproperty CreateContactPatchResults.part_id: int\n\nContact patch part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchResults.html#method-detail","title":"CreateContactPatchResults > Method detail","text":"Method detail\n\n\n\nCreateContactPatchResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateContactPatchResults.__str__() -> str\n\n\n\n\n\nstatic CreateContactPatchResults.print_default()\n\nPrint the default values of CreateContactPatchResults object.\n\nExamples\n\n>>> CreateContactPatchResults.print_default()\n\n\n\nstatic CreateContactPatchResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None)\n\nSet the default values of the CreateContactPatchResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the contact patch creation operation.\n\npart_id (int, optional) – Contact patch part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mapdlcdbexportutils/generate_mapdl_commands.html#ansysmeshingprimecoremapdlcdbexportutilsgenerate_mapdl_commands","title":"ansys.meshing.prime.core.mapdlcdbexportutils.generate_mapdl_commands","text":"ansys.meshing.prime.core.mapdlcdbexportutils.generate_mapdl_commands\n\n\n\nansys.meshing.prime.core.mapdlcdbexportutils.generate_mapdl_commands(model: ansys.meshing.prime.Model, simulation_data: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbParams) -> Tuple[str, str]\n\nGenerate the additional MAPDL commands to be added to the CDB export file.\n\nParameters\n\nmodel (prime.Model) – Model that the methods are to work on.\n\nsimulation_data (str) – The simulation data of the part in json format.\n\nparams (ExportMapdlCdbParams) – Parameters to export a CDB file.\n\nReturns\n\nTuple[str, str]\n\nTwo strings containing material settings and analysis settings respectively.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_multi_layer_quad_mesh_pcb_pmdb.html#ansysmeshingprimeexamplesdownload_multi_layer_quad_mesh_pcb_pmdb","title":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdb","text":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdb\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_pmdb(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDB file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_pmdb()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/multizonecontrol/MultiZoneControl.html#multizonecontrol","title":"MultiZoneControl","text":"MultiZoneControl\n\n\n\nclass ansys.meshing.prime.autogen.multizonecontrol.MultiZoneControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nMultiZoneControl provides a way to gather all the information required for MultiZone meshing.\n\nThe MultiZone meshing provides hex meshing capabilities.\nDifferent type of mesh can be generated using MultiZoneControl. For example, sweep mesh, map mesh and edge biased mesh.\n\nParameters\n\nmodel (Model) – Server model to create MultiZoneControl object.\n\nid (int) – Id of the MultiZoneControl.\n\nobject_id (int) – Object id of the MultiZoneControl.\n\nname (str) – Name of the MultiZoneControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/multizonecontrol/MultiZoneControl.html#overview","title":"MultiZoneControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nset_edge_biasing_params\n\nSets the parameters for edge biasing in terms of topoedges and topofaces during MultiZone mesh.\n\nset_map_mesh_params\n\nSet the parameters for map meshing in terms of topofaces during MultiZone mesh.\n\nset_multi_zone_sizing_params\n\nSets the MultiZone parameters.\n\nset_surface_scope\n\nSets the scope for surface in terms of topofaces.\n\nset_sweep_mesh_params\n\nSet the parameters for sweep meshing in terms of topofaces during MultiZone mesh.\n\nset_volume_scope\n\nSets the scope for volume in terms of topovolumes.The topovolumes given by the scope are imported by MultiZone to generate MultiZone mesh on it.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of MultiZoneControl.\n\nname\n\nGet the name of MultiZoneControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/multizonecontrol/MultiZoneControl.html#import-detail","title":"MultiZoneControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/multizonecontrol/MultiZoneControl.html#property-detail","title":"MultiZoneControl > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneControl.id\n\nGet the id of MultiZoneControl.\n\n\n\nproperty MultiZoneControl.name\n\nGet the name of MultiZoneControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/multizonecontrol/MultiZoneControl.html#method-detail","title":"MultiZoneControl > Method detail","text":"Method detail\n\n\n\nMultiZoneControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneControl.set_edge_biasing_params(scope_info: ansys.meshing.prime.params.primestructs.MultiZoneEdgeBiasingParams)\n\nSets the parameters for edge biasing in terms of topoedges and topofaces during MultiZone mesh.\n\nParameters\n\nscope_info (MultiZoneEdgeBiasingParams) – Information for edge biasing in MultiZone meshing.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_edge_biasing_params(scope_info)\n\n\n\nMultiZoneControl.set_map_mesh_params(scope_info: ansys.meshing.prime.params.primestructs.MultiZoneMapMeshParams)\n\nSet the parameters for map meshing in terms of topofaces during MultiZone mesh.\n\nParameters\n\nscope_info (MultiZoneMapMeshParams) – Scoped topofaces to be map meshed.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_map_mesh_params(scope_info)\n\n\n\nMultiZoneControl.set_multi_zone_sizing_params(params: ansys.meshing.prime.params.primestructs.MultiZoneSizingParams)\n\nSets the MultiZone parameters.\n\nParameters\n\nparams (MultiZoneSizingParams) – Parameters required for MultiZone mesh.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_multi_zone_params(params)\n\n\n\nMultiZoneControl.set_surface_scope(scope_info: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets the scope for surface in terms of topofaces.\n\nParameters\n\nscope_info (ScopeDefinition) – Scoped topofaces.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_surface_scope(scope_info)\n\n\n\nMultiZoneControl.set_sweep_mesh_params(scope_info: ansys.meshing.prime.params.primestructs.MultiZoneSweepMeshParams)\n\nSet the parameters for sweep meshing in terms of topofaces during MultiZone mesh.\n\nParameters\n\nscope_info (MultiZoneSweepMeshParams) – Information required for sweep meshing.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_sweep_mesh_params(scope_info)\n\n\n\nMultiZoneControl.set_volume_scope(scope_info: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets the scope for volume in terms of topovolumes.The topovolumes given by the scope are imported by MultiZone to generate MultiZone mesh on it.\n\nParameters\n\nscope_info (ScopeDefinition) – Scoped topovolumes.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control.set_volume_scope(scope_info)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTool.html#deletetool","title":"DeleteTool","text":"DeleteTool\n\n\n\nclass ansys.meshing.prime.DeleteTool(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nPerforms various delete operation. For example, delete fringes and overlapping faces.\n\nParameters\n\nmodel (Model) – Server model to create DeleteTool object."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTool.html#overview","title":"DeleteTool > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndelete_fringes_and_overlaps_on_zonelets\n\nDeletes fringes and overlapping faces on the given face zonelets.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for DeleteTool.\n\n__exit__\n\nExit context for DeleteTool.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTool.html#import-detail","title":"DeleteTool > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTool.html#method-detail","title":"DeleteTool > Method detail","text":"Method detail\n\n\n\nDeleteTool.__enter__()\n\nEnter context for DeleteTool.\n\n\n\nDeleteTool.__exit__(type, value, traceback)\n\nExit context for DeleteTool.\n\n\n\nDeleteTool.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteTool.delete_fringes_and_overlaps_on_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DeleteFringesAndOverlapsParams) -> ansys.meshing.prime.params.primestructs.DeleteFringesAndOverlapsResults\n\nDeletes fringes and overlapping faces on the given face zonelets.\n\nParameters\n\npart_id (int) – Id of a part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nparams (DeleteFringesAndOverlapsParams) – Parameters to delete the fringes and overlapping faces.\n\nReturns\n\nReturns the DeleteFringesAndOverlapsResults.\n\nReturn type\n\nDeleteFringesAndOverlapsResults\n\nExamples\n\n>>> delete_tool = prime.DeleteTool(model = model)\n>>> results = delete_tool.delete_fringes_and_overlaps_on_zonelets(\n>>>                                    part.id,\n>>>                                    part.get_face_zonelets(),\n>>>                                    prime.DeleteFringesAndOverlapsParams(\n>>>                                       model=model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_f1_rw_enclosure_stl.html#ansysmeshingprimeexamplesexamplesdownload_f1_rw_enclosure_stl","title":"ansys.meshing.prime.examples.examples.download_f1_rw_enclosure_stl","text":"ansys.meshing.prime.examples.examples.download_f1_rw_enclosure_stl\n\n\n\nansys.meshing.prime.examples.examples.download_f1_rw_enclosure_stl(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_enclosure = prime_examples.download_f1_rw_enclosure_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_enclosure, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/PartCreationType.html#partcreationtype","title":"PartCreationType","text":"PartCreationType\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.PartCreationType\n\nPart Creation Type decides whether to create a part per CAD Model, Assembly, Part, Body."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/PartCreationType.html#overview","title":"PartCreationType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASSEMBLY\n\nDenotes a part per CAD Assembly.\n\nBODY\n\nDenotes a part per CAD Body.\n\nMODEL\n\nDenotes a part per CAD Model.\n\nPART\n\nDenotes a part per CAD Part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/PartCreationType.html#import-detail","title":"PartCreationType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/PartCreationType.html#attribute-detail","title":"PartCreationType > Attribute detail","text":"Attribute detail\n\n\n\nPartCreationType.ASSEMBLY = 1\n\nDenotes a part per CAD Assembly.\n\n\n\nPartCreationType.BODY = 3\n\nDenotes a part per CAD Body.\n\n\n\nPartCreationType.MODEL = 0\n\nDenotes a part per CAD Model.\n\n\n\nPartCreationType.PART = 2\n\nDenotes a part per CAD Part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreTransitionLayerType.html#hexcoretransitionlayertype","title":"HexCoreTransitionLayerType","text":"HexCoreTransitionLayerType\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.HexCoreTransitionLayerType\n\nHandle size transition of hex cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreTransitionLayerType.html#overview","title":"HexCoreTransitionLayerType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDELETEBOTH\n\nRemove neighboring hexes of different size by deleting both smaller and larger cell layers. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\nDELETELARGE\n\nRemove neighboring hexes of different size by deleting a layer of larger cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\nDELETESMALL\n\nRemove neighboring hexes of different size by deleting a layer of smaller cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\nHANGINGNODES\n\nAllow different size hexes to be neighbors."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreTransitionLayerType.html#import-detail","title":"HexCoreTransitionLayerType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreTransitionLayerType.html#attribute-detail","title":"HexCoreTransitionLayerType > Attribute detail","text":"Attribute detail\n\n\n\nHexCoreTransitionLayerType.DELETEBOTH = 3\n\nRemove neighboring hexes of different size by deleting both smaller and larger cell layers. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\n\n\nHexCoreTransitionLayerType.DELETELARGE = 2\n\nRemove neighboring hexes of different size by deleting a layer of larger cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\n\n\nHexCoreTransitionLayerType.DELETESMALL = 1\n\nRemove neighboring hexes of different size by deleting a layer of smaller cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\n\n\nHexCoreTransitionLayerType.HANGINGNODES = 0\n\nAllow different size hexes to be neighbors."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumecontrol/index.html#the-volumecontrolpy-module","title":"The volumecontrol.py module","text":"The volumecontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumecontrol/index.html#summary","title":"The volumecontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVolumeControl\n\nDefines the scope and type of volume mesh to generate.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/volumecontrol/index.html#description","title":"The volumecontrol.py module > Description","text":"Description\n\nModule containing VolumeControl related classes and methods."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshParams.html#automeshparams","title":"AutoMeshParams","text":"AutoMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.AutoMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, max_size: float = None, prism_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, thin_volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, multi_zone_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, volume_fill_type: VolumeFillType = None, prism: PrismParams = None, tet: TetParams = None, hexcore: HexCoreParams = None, volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, periodic_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nParameters for volume meshing.\n\nParameters\n\nmodel (Model) – Model to create a AutoMeshParams object with default parameters.\n\nsize_field_type (SizeFieldType, optional) – Type of sizing to be used to generate volume mesh.\n\nmax_size (float, optional) – Maximum cell size.\n\nprism_control_ids (Iterable[int], optional) – Set prism control ids.\n\nthin_volume_control_ids (Iterable[int], optional) – Set thin volume control ids.\n\nmulti_zone_control_ids (Iterable[int], optional) – Set MultiZone control ids.\n\nvolume_fill_type (VolumeFillType, optional) – Option to fill volume.\n\nprism (PrismParams, optional) – Prism control parameters.\n\ntet (TetParams, optional) – Parameters to control tetrahedral mesh generation.\n\nhexcore (HexCoreParams, optional) – Parameters to control hexahedral mesh generation.\n\nvolume_control_ids (Iterable[int], optional) – Ids of the volume controls.\n\nperiodic_control_ids (Iterable[int], optional) – Ids of the periodic controls.\n\njson_data (dict, optional) – JSON dictionary to create a AutoMeshParams object with provided parameters.\n\nExamples\n\n>>> auto_mesh_params = prime.AutoMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshParams.html#overview","title":"AutoMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nhexcore\n\nParameters to control hexahedral mesh generation.\n\nmax_size\n\nMaximum cell size.\n\nmulti_zone_control_ids\n\nSet MultiZone control ids.\n\nperiodic_control_ids\n\nIds of the periodic controls.\n\nprism\n\nPrism control parameters.\n\nprism_control_ids\n\nSet prism control ids.\n\nsize_field_type\n\nType of sizing to be used to generate volume mesh.\n\ntet\n\nParameters to control tetrahedral mesh generation.\n\nthin_volume_control_ids\n\nSet thin volume control ids.\n\nvolume_control_ids\n\nIds of the volume controls.\n\nvolume_fill_type\n\nOption to fill volume.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AutoMeshParams object.\n\nset_default\n\nSet the default values of the AutoMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshParams.html#import-detail","title":"AutoMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshParams.html#property-detail","title":"AutoMeshParams > Property detail","text":"Property detail\n\n\n\nproperty AutoMeshParams.hexcore: HexCoreParams\n\nParameters to control hexahedral mesh generation.\n\n\n\nproperty AutoMeshParams.max_size: float\n\nMaximum cell size.\n\n\n\nproperty AutoMeshParams.multi_zone_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nSet MultiZone control ids.\n\n\n\nproperty AutoMeshParams.periodic_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the periodic controls.\n\n\n\nproperty AutoMeshParams.prism: PrismParams\n\nPrism control parameters.\n\n\n\nproperty AutoMeshParams.prism_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nSet prism control ids.\n\n\n\nproperty AutoMeshParams.size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nType of sizing to be used to generate volume mesh.\n\n\n\nproperty AutoMeshParams.tet: TetParams\n\nParameters to control tetrahedral mesh generation.\n\n\n\nproperty AutoMeshParams.thin_volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nSet thin volume control ids.\n\n\n\nproperty AutoMeshParams.volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the volume controls.\n\n\n\nproperty AutoMeshParams.volume_fill_type: VolumeFillType\n\nOption to fill volume."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/AutoMeshParams.html#method-detail","title":"AutoMeshParams > Method detail","text":"Method detail\n\n\n\nAutoMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoMeshParams.__str__() -> str\n\n\n\n\n\nstatic AutoMeshParams.print_default()\n\nPrint the default values of AutoMeshParams object.\n\nExamples\n\n>>> AutoMeshParams.print_default()\n\n\n\nstatic AutoMeshParams.set_default(size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, max_size: float = None, prism_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, thin_volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, multi_zone_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, volume_fill_type: VolumeFillType = None, prism: PrismParams = None, tet: TetParams = None, hexcore: HexCoreParams = None, volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, periodic_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the AutoMeshParams object.\n\nParameters\n\nsize_field_type (SizeFieldType, optional) – Type of sizing to be used to generate volume mesh.\n\nmax_size (float, optional) – Maximum cell size.\n\nprism_control_ids (Iterable[int], optional) – Set prism control ids.\n\nthin_volume_control_ids (Iterable[int], optional) – Set thin volume control ids.\n\nmulti_zone_control_ids (Iterable[int], optional) – Set MultiZone control ids.\n\nvolume_fill_type (VolumeFillType, optional) – Option to fill volume.\n\nprism (PrismParams, optional) – Prism control parameters.\n\ntet (TetParams, optional) – Parameters to control tetrahedral mesh generation.\n\nhexcore (HexCoreParams, optional) – Parameters to control hexahedral mesh generation.\n\nvolume_control_ids (Iterable[int], optional) – Ids of the volume controls.\n\nperiodic_control_ids (Iterable[int], optional) – Ids of the periodic controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionResult.html#resolveintersectionresult","title":"ResolveIntersectionResult","text":"ResolveIntersectionResult\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.ResolveIntersectionResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult structure associated with resolve intersections operation.\n\nParameters\n\nmodel (Model) – Model to create a ResolveIntersectionResult object with default parameters.\n\nerror_code (ErrorCode, optional) – Errror code associated with a resolve intersections operation.\n\njson_data (dict, optional) – JSON dictionary to create a ResolveIntersectionResult object with provided parameters.\n\nExamples\n\n>>> resolve_intersection_result = prime.ResolveIntersectionResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionResult.html#overview","title":"ResolveIntersectionResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nErrror code associated with a resolve intersections operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ResolveIntersectionResult object.\n\nset_default\n\nSet the default values of the ResolveIntersectionResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionResult.html#import-detail","title":"ResolveIntersectionResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionResult.html#property-detail","title":"ResolveIntersectionResult > Property detail","text":"Property detail\n\n\n\nproperty ResolveIntersectionResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nErrror code associated with a resolve intersections operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ResolveIntersectionResult.html#method-detail","title":"ResolveIntersectionResult > Method detail","text":"Method detail\n\n\n\nResolveIntersectionResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nResolveIntersectionResult.__str__() -> str\n\n\n\n\n\nstatic ResolveIntersectionResult.print_default()\n\nPrint the default values of ResolveIntersectionResult object.\n\nExamples\n\n>>> ResolveIntersectionResult.print_default()\n\n\n\nstatic ResolveIntersectionResult.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ResolveIntersectionResult object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Errror code associated with a resolve intersections operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseResults.html#importfluentcaseresults","title":"ImportFluentCaseResults","text":"ImportFluentCaseResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportFluentCaseResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with fluent case import.\n\nParameters\n\nmodel (Model) – Model to create a ImportFluentCaseResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a ImportFluentCaseResults object with provided parameters.\n\nExamples\n\n>>> import_fluent_case_results = prime.ImportFluentCaseResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseResults.html#overview","title":"ImportFluentCaseResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportFluentCaseResults object.\n\nset_default\n\nSet the default values of the ImportFluentCaseResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseResults.html#import-detail","title":"ImportFluentCaseResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseResults.html#property-detail","title":"ImportFluentCaseResults > Property detail","text":"Property detail\n\n\n\nproperty ImportFluentCaseResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseResults.html#method-detail","title":"ImportFluentCaseResults > Method detail","text":"Method detail\n\n\n\nImportFluentCaseResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportFluentCaseResults.__str__() -> str\n\n\n\n\n\nstatic ImportFluentCaseResults.print_default()\n\nPrint the default values of ImportFluentCaseResults object.\n\nExamples\n\n>>> ImportFluentCaseResults.print_default()\n\n\n\nstatic ImportFluentCaseResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ImportFluentCaseResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusParams.html#importabaqusparams","title":"ImportAbaqusParams","text":"ImportAbaqusParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportAbaqusParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters for importing Abaqus solver input files.\n\nParameters\n\nmodel (Model) – Model to create a ImportAbaqusParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ImportAbaqusParams object with provided parameters.\n\nExamples\n\n>>> import_abaqus_params = prime.ImportAbaqusParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusParams.html#overview","title":"ImportAbaqusParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportAbaqusParams object.\n\nset_default\n\nSet the default values of the ImportAbaqusParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusParams.html#import-detail","title":"ImportAbaqusParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportAbaqusParams.html#method-detail","title":"ImportAbaqusParams > Method detail","text":"Method detail\n\n\n\nImportAbaqusParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportAbaqusParams.__str__() -> str\n\n\n\n\n\nstatic ImportAbaqusParams.print_default()\n\nPrint the default values of ImportAbaqusParams object.\n\nExamples\n\n>>> ImportAbaqusParams.print_default()\n\n\n\nstatic ImportAbaqusParams.set_default()\n\nSet the default values of the ImportAbaqusParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesResults.html#computevolumesresults","title":"ComputeVolumesResults","text":"ComputeVolumesResults\n\n\n\nclass ansys.meshing.prime.ComputeVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, material_point_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, external_open_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with compute volumes.\n\nParameters\n\nmodel (Model) – Model to create a ComputeVolumesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nerror_locations (Iterable[float], optional) – Coordinates of problematic locations in the surface mesh.\n\nvolumes (Iterable[int], optional) – Ids of computed volumes.\n\nmaterial_point_volumes (Iterable[int], optional) – Ids of computed volumes enclosing material points.\n\nexternal_open_face_zonelets (Iterable[int], optional) – Face zonelet ids that are in external space and not part of any computed volumes.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute volumes.\n\njson_data (dict, optional) – JSON dictionary to create a ComputeVolumesResults object with provided parameters.\n\nExamples\n\n>>> compute_volumes_results = prime.ComputeVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesResults.html#overview","title":"ComputeVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nerror_locations\n\nCoordinates of problematic locations in the surface mesh.\n\nexternal_open_face_zonelets\n\nFace zonelet ids that are in external space and not part of any computed volumes.\n\nmaterial_point_volumes\n\nIds of computed volumes enclosing material points.\n\nvolumes\n\nIds of computed volumes.\n\nwarning_codes\n\nWarning codes associated with the compute volumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComputeVolumesResults object.\n\nset_default\n\nSet the default values of the ComputeVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesResults.html#import-detail","title":"ComputeVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesResults.html#property-detail","title":"ComputeVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty ComputeVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ComputeVolumesResults.error_locations: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCoordinates of problematic locations in the surface mesh.\n\n\n\nproperty ComputeVolumesResults.external_open_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zonelet ids that are in external space and not part of any computed volumes.\n\n\n\nproperty ComputeVolumesResults.material_point_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of computed volumes enclosing material points.\n\n\n\nproperty ComputeVolumesResults.volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of computed volumes.\n\n\n\nproperty ComputeVolumesResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the compute volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/ComputeVolumesResults.html#method-detail","title":"ComputeVolumesResults > Method detail","text":"Method detail\n\n\n\nComputeVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComputeVolumesResults.__str__() -> str\n\n\n\n\n\nstatic ComputeVolumesResults.print_default()\n\nPrint the default values of ComputeVolumesResults object.\n\nExamples\n\n>>> ComputeVolumesResults.print_default()\n\n\n\nstatic ComputeVolumesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, material_point_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, external_open_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ComputeVolumesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nerror_locations (Iterable[float], optional) – Coordinates of problematic locations in the surface mesh.\n\nvolumes (Iterable[int], optional) – Ids of computed volumes.\n\nmaterial_point_volumes (Iterable[int], optional) – Ids of computed volumes enclosing material points.\n\nexternal_open_face_zonelets (Iterable[int], optional) – Face zonelet ids that are in external space and not part of any computed volumes.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/index.html#the-dynaexportutilspy-module","title":"The dynaexportutils.py module","text":"The dynaexportutils.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/index.html#summary","title":"The dynaexportutils.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDatabaseProcessor\n\nProcesses the part’s simulation data and generates LS-DYNA cards for database keywords.\n\nMaterialProcessor\n\nProcesses the material information.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/index.html#description","title":"The dynaexportutils.py module > Description","text":"Description\n\nModule for LS-DYNA export utilities."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/model/Model.html#model","title":"Model","text":"Model\n\n\n\nclass ansys.meshing.prime.autogen.model.Model(comm, id: int, object_id: int, name: str)\n\nModel is the nucleus of Prime. Model forms the base and contains all the information about Prime.\n\nYou can access any information in Prime only through Model.\nModel allows you to query TopoData, ControlData, Parts, SizeFields and more.\n\nParameters\n\ncomm (Communicator) – Communicator to connect with the Ansys Prime server.\n\nid (int) – Id of the Model.\n\nobject_id (int) – Object id of the Model.\n\nname (str) – Name of the Model."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/model/Model.html#overview","title":"Model > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nactivate_volumetric_size_fields\n\nActivate the sizefields identified by the given sizefield ids.\n\ncreate_zone\n\nCreates zone for the given zone type.\n\ndeactivate_volumetric_size_fields\n\nDeactivate the size fields with the given size field ids.\n\ndelete_parts\n\nDelete the parts and its entities.\n\ndelete_volumetric_size_fields\n\nDelete the sizefields identified by the given sizefield ids.\n\ndelete_zone\n\nDeletes zone with the given id.\n\nget_active_volumetric_size_fields\n\nGet the active sizefield ids.\n\nget_num_compute_nodes\n\nGet the number of compute nodes.\n\nget_num_threads\n\nGet the number of threads enabled for multithreaded operation.\n\nget_size_field_name\n\nGets the name of size field with the given id.\n\nget_volumetric_size_fields\n\nGet the sizefield ids.\n\nget_zone_by_name\n\nGets the zone with the provided name.\n\nget_zone_name\n\nGet the name of given zone.\n\nmerge_parts\n\nMerge given parts into one.\n\nset_global_sizing_params\n\nSet the global sizing parameters to initialize surfer parameters and various size control parameters.\n\nset_num_threads\n\nSets the number of threads for multithreaded operation.\n\nset_suggested_size_field_name\n\nSets the suggested name of size field with the given id.\n\nset_suggested_zone_name\n\nSets the unique name for zone with given id based on the suggested name.\n\nset_working_directory\n\nSet working directory.\n\nstart_distributed_meshing\n\nEnables distributed meshing mode.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of Model.\n\nname\n\nGet the name of Model.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/model/Model.html#import-detail","title":"Model > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/model/Model.html#property-detail","title":"Model > Property detail","text":"Property detail\n\n\n\nproperty Model.id\n\nGet the id of Model.\n\n\n\nproperty Model.name\n\nGet the name of Model."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/model/Model.html#method-detail","title":"Model > Method detail","text":"Method detail\n\n\n\nModel.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nModel.activate_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nActivate the sizefields identified by the given sizefield ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.activate_volumetric_size_fields(size_field_ids)\n\n\n\nModel.create_zone(suggested_name: str, type: ansys.meshing.prime.params.primestructs.ZoneType) -> ansys.meshing.prime.params.primestructs.CreateZoneResults\n\nCreates zone for the given zone type.\n\nParameters\n\nsuggested_name (str) – Suggested name for the zone to be created.\n\ntype (ZoneType) – Type of the zone to be created.\n\nReturns\n\nReturns the CreateZoneResults.\n\nReturn type\n\nCreateZoneResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.create_zone(\"wall\", prime.ZoneType.FACE)\n\n\n\nModel.deactivate_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nDeactivate the size fields with the given size field ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.deactivate_volumetric_size_fields(size_field_ids)\n\n\n\nModel.delete_parts(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.DeleteResults\n\nDelete the parts and its entities.\n\nParameters\n\npart_ids (Iterable[int]) – Ids of parts to be deleted.\n\nReturns\n\nReturn the DeleteResults.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = model.delete_parts(part_ids)\n\n\n\nModel.delete_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nDelete the sizefields identified by the given sizefield ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.delete_volumetric_size_fields(size_field_ids)\n\n\n\nModel.delete_zone(zone_id: int) -> ansys.meshing.prime.params.primestructs.DeleteZoneResults\n\nDeletes zone with the given id.\n\nParameters\n\nzone_id (int) – Id of the zone to be deleted.\n\nReturns\n\nReturns the DeleteZoneResults.\n\nReturn type\n\nDeleteZoneResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.delete_zone(1)\n\n\n\nModel.get_active_volumetric_size_fields() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the active sizefield ids.\n\nReturns\n\nReturn the list of active sizefield ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> model = client.model\n>>> active_size_field_ids = model.get_active_volumetric_size_fields()\n\n\n\nModel.get_num_compute_nodes() -> int\n\nGet the number of compute nodes.\n\nReturns\n\nReturns the number of compute nodes.\n\nReturn type\n\nint\n\nExamples\n\n>>> model = client.model\n>>> num_compute_nodes = model.get_num_compute_nodes()\n\n\n\nModel.get_num_threads() -> int\n\nGet the number of threads enabled for multithreaded operation.\n\nReturns\n\nReturns the number of threads.\n\nReturn type\n\nint\n\nExamples\n\n>>> model = client.model\n>>> num_threads = model.get_num_threads()\n\n\n\nModel.get_size_field_name(size_field_id: int) -> str\n\nGets the name of size field with the given id.\n\nParameters\n\nsize_field_id (int) – Size field id.\n\nReturns\n\nReturns the name of the size field.\n\nReturn type\n\nstr\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> model = client.model\n>>> model.get_size_field_name(size_field_id)\n\n\n\nModel.get_volumetric_size_fields() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the sizefield ids.\n\nReturns\n\nReturn the list of sizefield ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> model = client.model\n>>> size_field_ids = model.get_volumetric_size_fields()\n\n\n\nModel.get_zone_by_name(zone_name: str) -> int\n\nGets the zone with the provided name.\n\nParameters\n\nzone_name (str) – Name of the zone.\n\nReturns\n\nReturns id of the zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> zone_id = model.get_zone_by_name(\"inlet\")\n\n\n\nModel.get_zone_name(id: int) -> str\n\nGet the name of given zone.\n\nParameters\n\nid (int) – Id of zone.\n\nReturns\n\nReturn the zone name. Return empty name if the id is invalid.\n\nReturn type\n\nstr\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> name = model.get_zone_name(id)\n\n\n\nModel.merge_parts(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergePartsParams) -> ansys.meshing.prime.params.primestructs.MergePartsResults\n\nMerge given parts into one.\n\nParameters\n\npart_ids (Iterable[int]) – Ids of parts to be merged.\n\nparams (MergePartsParams) – Parameters to merge parts.\n\nReturns\n\nReturns the MergePartsResults.\n\nReturn type\n\nMergePartsResults\n\nExamples\n\n>>> params = prime.MergePartsParams(model = model)\n>>> results = model.merge_parts(part_ids, params)\n\n\n\nModel.set_global_sizing_params(params: ansys.meshing.prime.params.primestructs.GlobalSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the global sizing parameters to initialize surfer parameters and various size control parameters.\n\nParameters\n\nparams (GlobalSizingParams) – Global sizing parameters.\n\nExamples\n\n>>> model = client.model\n>>> model.set_global_sizing_params(\n>>>           prime.GlobalSizingParams(model=model,\n>>>           min = 0.1, max = 1.0, growth_rate = 1.2))\n\n\n\nModel.set_num_threads(num: int)\n\nSets the number of threads for multithreaded operation.\n\nParameters\n\nnum (int) – Number of threads.\n\nExamples\n\n>>> model = client.model\n>>> model.set_num_threads(4)\n\n\n\nModel.set_suggested_size_field_name(size_field_id: int, name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the suggested name of size field with the given id.\n\nParameters\n\nsize_field_id (int) – Size field id.\n\nname (str) – Name of the size field.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> model = client.model\n>>> model.set_suggested_size_field_name(size_field_id, name)\n\n\n\nModel.set_suggested_zone_name(id: int, name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for zone with given id based on the suggested name.\n\nParameters\n\nid (int) – Id of the zone to set suggested name.\n\nname (str) – Suggested name for the zone.\n\nReturns\n\nReturns the SetNameResults. results.assignedName indicates the assigned name to the zone.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.set_suggested_zone_name(id = 5, name = \"zone1\")\n\n\n\nModel.set_working_directory(path: str)\n\nSet working directory.\n\nSet working directory to be considered for file i/o when file paths are relative.\n\nParameters\n\npath (str) – Path to the directory.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> zones = model.set_working_directory(\"C:/input_files\")\n\n\n\nModel.start_distributed_meshing()\n\nEnables distributed meshing mode.\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> model.start_distributed_meshing()"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_elbow_dsco.html#ansysmeshingprimeexamplesexamplesdownload_elbow_dsco","title":"ansys.meshing.prime.examples.examples.download_elbow_dsco","text":"ansys.meshing.prime.examples.examples.download_elbow_dsco\n\n\n\nansys.meshing.prime.examples.examples.download_elbow_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the mixing elbow example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveQualityParams.html#wrapperimprovequalityparams","title":"WrapperImproveQualityParams","text":"WrapperImproveQualityParams\n\n\n\nclass ansys.meshing.prime.WrapperImproveQualityParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, target_skewness: float = None, island_count: int = None, island_tol: float = None, overlap_count: int = None, overlap_tol: float = None, resolve_spikes: bool = None, resolve_intersections: bool = None, inflate_dihedral_face_nodes: bool = None, resolve_invalid_node_normals: bool = None, aggressively: bool = None, sharp_angle: float = None, geom_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, number_of_threads: int = None, json_data: dict = None, **kwargs)\n\nWrapperImproveQualityParams defines parameters to improve wrapper part.\n\nParameters\n\nmodel (Model) – Model to create a WrapperImproveQualityParams object with default parameters.\n\ntarget_skewness (float, optional) – Target skewness.\n\nisland_count (int, optional) – Face count of smallest island.\n\nisland_tol (float, optional) – Relative face count of smallest island.\n\noverlap_count (int, optional) – Face count of non-manifold overlap.\n\noverlap_tol (float, optional) – Relative face count of non-manifold overlap.\n\nresolve_spikes (bool, optional) – Control to perform removing spikes or not.\n\nresolve_intersections (bool, optional) – Control to resolve face intersections or not.\n\ninflate_dihedral_face_nodes (bool, optional) – Control to resolve face dihedral angle by inflating opposite nodes or not.\n\nresolve_invalid_node_normals (bool, optional) – Control to resolve invalid node normals by inflating opposite nodes or not.\n\naggressively (bool, optional) – Control to improve surfaces aggressively or not.\n\nsharp_angle (float, optional) – Maximum off feature sharp node angle.\n\ngeom_zonelets (Iterable[int], optional) – Associated underlying geometry zonelet ids.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperImproveQualityParams object with provided parameters.\n\nExamples\n\n>>> wrapper_improve_quality_params = prime.WrapperImproveQualityParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveQualityParams.html#overview","title":"WrapperImproveQualityParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\naggressively\n\nControl to improve surfaces aggressively or not.\n\ngeom_zonelets\n\nAssociated underlying geometry zonelet ids.\n\ninflate_dihedral_face_nodes\n\nControl to resolve face dihedral angle by inflating opposite nodes or not.\n\nisland_count\n\nFace count of smallest island.\n\nisland_tol\n\nRelative face count of smallest island.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\noverlap_count\n\nFace count of non-manifold overlap.\n\noverlap_tol\n\nRelative face count of non-manifold overlap.\n\nresolve_intersections\n\nControl to resolve face intersections or not.\n\nresolve_invalid_node_normals\n\nControl to resolve invalid node normals by inflating opposite nodes or not.\n\nresolve_spikes\n\nControl to perform removing spikes or not.\n\nsharp_angle\n\nMaximum off feature sharp node angle.\n\ntarget_skewness\n\nTarget skewness.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperImproveQualityParams object.\n\nset_default\n\nSet the default values of the WrapperImproveQualityParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveQualityParams.html#import-detail","title":"WrapperImproveQualityParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveQualityParams.html#property-detail","title":"WrapperImproveQualityParams > Property detail","text":"Property detail\n\n\n\nproperty WrapperImproveQualityParams.aggressively: bool\n\nControl to improve surfaces aggressively or not.\n\n\n\nproperty WrapperImproveQualityParams.geom_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nAssociated underlying geometry zonelet ids.\n\n\n\nproperty WrapperImproveQualityParams.inflate_dihedral_face_nodes: bool\n\nControl to resolve face dihedral angle by inflating opposite nodes or not.\n\n\n\nproperty WrapperImproveQualityParams.island_count: int\n\nFace count of smallest island.\n\n\n\nproperty WrapperImproveQualityParams.island_tol: float\n\nRelative face count of smallest island.\n\n\n\nproperty WrapperImproveQualityParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\n\n\nproperty WrapperImproveQualityParams.overlap_count: int\n\nFace count of non-manifold overlap.\n\n\n\nproperty WrapperImproveQualityParams.overlap_tol: float\n\nRelative face count of non-manifold overlap.\n\n\n\nproperty WrapperImproveQualityParams.resolve_intersections: bool\n\nControl to resolve face intersections or not.\n\n\n\nproperty WrapperImproveQualityParams.resolve_invalid_node_normals: bool\n\nControl to resolve invalid node normals by inflating opposite nodes or not.\n\n\n\nproperty WrapperImproveQualityParams.resolve_spikes: bool\n\nControl to perform removing spikes or not.\n\n\n\nproperty WrapperImproveQualityParams.sharp_angle: float\n\nMaximum off feature sharp node angle.\n\n\n\nproperty WrapperImproveQualityParams.target_skewness: float\n\nTarget skewness."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperImproveQualityParams.html#method-detail","title":"WrapperImproveQualityParams > Method detail","text":"Method detail\n\n\n\nWrapperImproveQualityParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperImproveQualityParams.__str__() -> str\n\n\n\n\n\nstatic WrapperImproveQualityParams.print_default()\n\nPrint the default values of WrapperImproveQualityParams object.\n\nExamples\n\n>>> WrapperImproveQualityParams.print_default()\n\n\n\nstatic WrapperImproveQualityParams.set_default(target_skewness: float = None, island_count: int = None, island_tol: float = None, overlap_count: int = None, overlap_tol: float = None, resolve_spikes: bool = None, resolve_intersections: bool = None, inflate_dihedral_face_nodes: bool = None, resolve_invalid_node_normals: bool = None, aggressively: bool = None, sharp_angle: float = None, geom_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, number_of_threads: int = None)\n\nSet the default values of the WrapperImproveQualityParams object.\n\nParameters\n\ntarget_skewness (float, optional) – Target skewness.\n\nisland_count (int, optional) – Face count of smallest island.\n\nisland_tol (float, optional) – Relative face count of smallest island.\n\noverlap_count (int, optional) – Face count of non-manifold overlap.\n\noverlap_tol (float, optional) – Relative face count of non-manifold overlap.\n\nresolve_spikes (bool, optional) – Control to perform removing spikes or not.\n\nresolve_intersections (bool, optional) – Control to resolve face intersections or not.\n\ninflate_dihedral_face_nodes (bool, optional) – Control to resolve face dihedral angle by inflating opposite nodes or not.\n\nresolve_invalid_node_normals (bool, optional) – Control to resolve invalid node normals by inflating opposite nodes or not.\n\naggressively (bool, optional) – Control to improve surfaces aggressively or not.\n\nsharp_angle (float, optional) – Maximum off feature sharp node angle.\n\ngeom_zonelets (Iterable[int], optional) – Associated underlying geometry zonelet ids.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading."},{"objectID":"Home","href":"user_guide/iga.html#isogeometric-analysis","title":"Isogeometric analysis","text":"Isogeometric analysis\n\nThis is a beta feature. API behavior and implementation might change in the future.\n\nIsogeometric Analysis (IGA) is a new approach using NURBS to capture the CAD geometry accurately than the FE analysis.\nThe FE analysis discretize the CAD geometry approximately into smaller elements to capture the features.\nThis approximation may affect the accuracy of the result and increase the computational cost.\nIGA uses spline to exactly represent the  CAD geometry to analyse the geometry and solver solves on the splines.\n\nIn PyPrimeMesh, IGA-Quad to Spline allows you to extract control points and splines based on the input quadrilateral surface mesh and export it as LS-DYNA IGA K file for the IGA solver.\n\nThe prerequisites required for preparing Input CAD Model for Quad to Spline conversion:\n\nClean up the input geometry in PyPrimeMesh.\n\nGenerates full quad mesh on the input geometry.\n\nPerform mesh edit operations to reduce the triangles.\n\nIGA Quad to Spline performs the following:\n\nExecute quad to spline operation using any of the following options:\n\nWhen you provide Ignore Features, ignores all the features while converting the input geometry to spline.\n\nWhen you provide Use Angle, captures the provided angle while creating the spline for the input geometry.\n\nWhen you provide Use Edges, uses the provided edges while creating spline for the input geometry.\n\nChecks if any Negative Jacobian values are present while creating splines.\n\nExport Splines as LS-DYNA IGA K file if no Negative Jacobian values are present in the input geometry.\n\nProvides the file to the LS-DYNA IGA solver.\n\nThe below example shows IGA Quad to spline conversion:\n\nImport the geometry.\n\nCheck whether the model is a topology or mesh part.\n\nOutput:\n\nDefine the input scope for the geometry or mesh part.\n\nInitialize QuadToSpline and provide the required parameters in QuadToSplineParams to perform the quad to spline conversion.\n\nOutput:\n\nGet the unstructured spline created.\n\nOutput:\n\nCheck the quality of the created spline.\n\nOutput:\n\nWrite the created .k file to the specified location and export to LS-DYNA."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSpline.html#hextospline","title":"HexToSpline","text":"HexToSpline\n\n\n\nclass ansys.meshing.prime.HexToSpline(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nConverts all-hex mesh to spline.\n\nParameters\n\nmodel (Model) – Server model to create HexToSpline object."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSpline.html#overview","title":"HexToSpline > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nconvert_hex_to_spline\n\nConverts fully hex mesh with topology to spline.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for HexToSpline.\n\n__exit__\n\nExit context for HexToSpline.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSpline.html#import-detail","title":"HexToSpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSpline.html#method-detail","title":"HexToSpline > Method detail","text":"Method detail\n\n\n\nHexToSpline.__enter__()\n\nEnter context for HexToSpline.\n\n\n\nHexToSpline.__exit__(type, value, traceback)\n\nExit context for HexToSpline.\n\n\n\nHexToSpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nHexToSpline.convert_hex_to_spline(input_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition, hex_to_spline_params: ansys.meshing.prime.params.primestructs.HexToSplineParams) -> ansys.meshing.prime.params.primestructs.IGAResults\n\nConverts fully hex mesh with topology to spline.\n\nParameters\n\ninput_scope (ScopeDefinition) – Scope definition for input hex mesh.\n\nhex_to_spline_params (HexToSplineParams) – Parameters to convert hex to spline.\n\nReturns\n\nReturns the IGAResults structure.\n\nReturn type\n\nIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = hexToSpline.ConvertHexToSpline(input_scope, hex_to_spline_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismStairStep.html#prismstairstep","title":"PrismStairStep","text":"PrismStairStep\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.PrismStairStep(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, check_proximity: bool = None, gap_factor_scale: float = None, json_data: dict = None, **kwargs)\n\nParameters to control prism stairsteping.\n\nParameters\n\nmodel (Model) – Model to create a PrismStairStep object with default parameters.\n\ncheck_proximity (bool, optional) – Check whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\ngap_factor_scale (float, optional) – Scale factor for prism proximity detection gap factor.\n\njson_data (dict, optional) – JSON dictionary to create a PrismStairStep object with provided parameters.\n\nExamples\n\n>>> prism_stair_step = prime.PrismStairStep(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismStairStep.html#overview","title":"PrismStairStep > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncheck_proximity\n\nCheck whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\ngap_factor_scale\n\nScale factor for prism proximity detection gap factor.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PrismStairStep object.\n\nset_default\n\nSet the default values of the PrismStairStep object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismStairStep.html#import-detail","title":"PrismStairStep > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismStairStep.html#property-detail","title":"PrismStairStep > Property detail","text":"Property detail\n\n\n\nproperty PrismStairStep.check_proximity: bool\n\nCheck whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\n\n\nproperty PrismStairStep.gap_factor_scale: float\n\nScale factor for prism proximity detection gap factor."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/PrismStairStep.html#method-detail","title":"PrismStairStep > Method detail","text":"Method detail\n\n\n\nPrismStairStep.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismStairStep.__str__() -> str\n\n\n\n\n\nstatic PrismStairStep.print_default()\n\nPrint the default values of PrismStairStep object.\n\nExamples\n\n>>> PrismStairStep.print_default()\n\n\n\nstatic PrismStairStep.set_default(check_proximity: bool = None, gap_factor_scale: float = None)\n\nSet the default values of the PrismStairStep object.\n\nParameters\n\ncheck_proximity (bool, optional) – Check whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\ngap_factor_scale (float, optional) – Scale factor for prism proximity detection gap factor."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectCircularHolesParams.html#detectcircularholesparams","title":"DetectCircularHolesParams","text":"DetectCircularHolesParams\n\n\n\nclass ansys.meshing.prime.DetectCircularHolesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, allow_curved_topo_faces: bool = None, max_radius_circular_holes: float = None, min_radius_circular_holes: float = None, merge_edge_allow_self_close: bool = None, json_data: dict = None, **kwargs)\n\nParameters for detect circular holes operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectCircularHolesParams object with default parameters.\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.This is a beta parameter. The behavior and name may change in the future.\n\nmax_radius_circular_holes (float, optional) – Maximum radius of circular holes.This is a beta parameter. The behavior and name may change in the future.\n\nmin_radius_circular_holes (float, optional) – Minimum radius of circular holes.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectCircularHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_circular_holes_params = prime.DetectCircularHolesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectCircularHolesParams.html#overview","title":"DetectCircularHolesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nallow_curved_topo_faces\n\nOption to allow holes in curved topoface.\n\nmax_radius_circular_holes\n\nMaximum radius of circular holes.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmin_radius_circular_holes\n\nMinimum radius of circular holes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectCircularHolesParams object.\n\nset_default\n\nSet the default values of the DetectCircularHolesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectCircularHolesParams.html#import-detail","title":"DetectCircularHolesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectCircularHolesParams.html#property-detail","title":"DetectCircularHolesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectCircularHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectCircularHolesParams.max_radius_circular_holes: float\n\nMaximum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectCircularHolesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectCircularHolesParams.min_radius_circular_holes: float\n\nMinimum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectCircularHolesParams.html#method-detail","title":"DetectCircularHolesParams > Method detail","text":"Method detail\n\n\n\nDetectCircularHolesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectCircularHolesParams.__str__() -> str\n\n\n\n\n\nstatic DetectCircularHolesParams.print_default()\n\nPrint the default values of DetectCircularHolesParams object.\n\nExamples\n\n>>> DetectCircularHolesParams.print_default()\n\n\n\nstatic DetectCircularHolesParams.set_default(allow_curved_topo_faces: bool = None, max_radius_circular_holes: float = None, min_radius_circular_holes: float = None, merge_edge_allow_self_close: bool = None)\n\nSet the default values of the DetectCircularHolesParams object.\n\nParameters\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.\n\nmax_radius_circular_holes (float, optional) – Maximum radius of circular holes.\n\nmin_radius_circular_holes (float, optional) – Minimum radius of circular holes.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesResults.html#smoothdihedralfacenodesresults","title":"SmoothDihedralFaceNodesResults","text":"SmoothDihedralFaceNodesResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.SmoothDihedralFaceNodesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_nodes_smoothed: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with smooth dihedral face nodes.\n\nParameters\n\nmodel (Model) – Model to create a SmoothDihedralFaceNodesResults object with default parameters.\n\nn_nodes_smoothed (int, optional) – Number of dihedral face nodes smoothed.\n\nerror_code (ErrorCode, optional) – Error Code associated with creating offset surface.\n\njson_data (dict, optional) – JSON dictionary to create a SmoothDihedralFaceNodesResults object with provided parameters.\n\nExamples\n\n>>> smooth_dihedral_face_nodes_results = prime.SmoothDihedralFaceNodesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesResults.html#overview","title":"SmoothDihedralFaceNodesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with creating offset surface.\n\nn_nodes_smoothed\n\nNumber of dihedral face nodes smoothed.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SmoothDihedralFaceNodesResults object.\n\nset_default\n\nSet the default values of the SmoothDihedralFaceNodesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesResults.html#import-detail","title":"SmoothDihedralFaceNodesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesResults.html#property-detail","title":"SmoothDihedralFaceNodesResults > Property detail","text":"Property detail\n\n\n\nproperty SmoothDihedralFaceNodesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with creating offset surface.\n\n\n\nproperty SmoothDihedralFaceNodesResults.n_nodes_smoothed: int\n\nNumber of dihedral face nodes smoothed."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SmoothDihedralFaceNodesResults.html#method-detail","title":"SmoothDihedralFaceNodesResults > Method detail","text":"Method detail\n\n\n\nSmoothDihedralFaceNodesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSmoothDihedralFaceNodesResults.__str__() -> str\n\n\n\n\n\nstatic SmoothDihedralFaceNodesResults.print_default()\n\nPrint the default values of SmoothDihedralFaceNodesResults object.\n\nExamples\n\n>>> SmoothDihedralFaceNodesResults.print_default()\n\n\n\nstatic SmoothDihedralFaceNodesResults.set_default(n_nodes_smoothed: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SmoothDihedralFaceNodesResults object.\n\nParameters\n\nn_nodes_smoothed (int, optional) – Number of dihedral face nodes smoothed.\n\nerror_code (ErrorCode, optional) – Error Code associated with creating offset surface."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesResults.html#extractvolumesresults","title":"ExtractVolumesResults","text":"ExtractVolumesResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ExtractVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, assigned_zone_name: str = None, face_zonelets_without_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with compute volumes.\n\nParameters\n\nmodel (Model) – Model to create a ExtractVolumesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nvolumes (Iterable[int], optional) – Ids of computed volumes.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute volumes.\n\nassigned_zone_name (str, optional) – Assigned name of zone for extracted flow volumes.\n\nface_zonelets_without_volumes (Iterable[int], optional) – Ids of face zonelets for which volumes were not extracted.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractVolumesResults object with provided parameters.\n\nExamples\n\n>>> extract_volumes_results = prime.ExtractVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesResults.html#overview","title":"ExtractVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_zone_name\n\nAssigned name of zone for extracted flow volumes.\n\nerror_code\n\nError code associated with the failure of operation.\n\nface_zonelets_without_volumes\n\nIds of face zonelets for which volumes were not extracted.\n\nvolumes\n\nIds of computed volumes.\n\nwarning_codes\n\nWarning codes associated with the compute volumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractVolumesResults object.\n\nset_default\n\nSet the default values of the ExtractVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesResults.html#import-detail","title":"ExtractVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesResults.html#property-detail","title":"ExtractVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty ExtractVolumesResults.assigned_zone_name: str\n\nAssigned name of zone for extracted flow volumes.\n\n\n\nproperty ExtractVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ExtractVolumesResults.face_zonelets_without_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of face zonelets for which volumes were not extracted.\n\n\n\nproperty ExtractVolumesResults.volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of computed volumes.\n\n\n\nproperty ExtractVolumesResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the compute volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesResults.html#method-detail","title":"ExtractVolumesResults > Method detail","text":"Method detail\n\n\n\nExtractVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractVolumesResults.__str__() -> str\n\n\n\n\n\nstatic ExtractVolumesResults.print_default()\n\nPrint the default values of ExtractVolumesResults object.\n\nExamples\n\n>>> ExtractVolumesResults.print_default()\n\n\n\nstatic ExtractVolumesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, assigned_zone_name: str = None, face_zonelets_without_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ExtractVolumesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nvolumes (Iterable[int], optional) – Ids of computed volumes.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute volumes.\n\nassigned_zone_name (str, optional) – Assigned name of zone for extracted flow volumes.\n\nface_zonelets_without_volumes (Iterable[int], optional) – Ids of face zonelets for which volumes were not extracted."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeEntity.html#scopeentity","title":"ScopeEntity","text":"ScopeEntity\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.ScopeEntity\n\nScopeDefinition uses entity type to scope entities."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeEntity.html#overview","title":"ScopeEntity > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGEZONELETS\n\nEvaluate scope to get the edge zonelets.\n\nFACEANDEDGEZONELETS\n\nEvaluate scope to get face and edge zonelets.\n\nFACEZONELETS\n\nEvaluate scope to get the face zonelets.\n\nVOLUME\n\nEvaluate scope to get volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeEntity.html#import-detail","title":"ScopeEntity > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeEntity.html#attribute-detail","title":"ScopeEntity > Attribute detail","text":"Attribute detail\n\n\n\nScopeEntity.EDGEZONELETS = 2\n\nEvaluate scope to get the edge zonelets.\n\n\n\nScopeEntity.FACEANDEDGEZONELETS = 3\n\nEvaluate scope to get face and edge zonelets.\n\n\n\nScopeEntity.FACEZONELETS = 1\n\nEvaluate scope to get the face zonelets.\n\n\n\nScopeEntity.VOLUME = 6\n\nEvaluate scope to get volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsResults.html#searchbyfoldsresults","title":"SearchByFoldsResults","text":"SearchByFoldsResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchByFoldsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with search folds operation.\n\nParameters\n\nmodel (Model) – Model to create a SearchByFoldsResults object with default parameters.\n\nn_found (int, optional) – Number of folds identified.\n\nerror_code (ErrorCode, optional) – Error code associated with search folds operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByFoldsResults object with provided parameters.\n\nExamples\n\n>>> search_by_folds_results = prime.SearchByFoldsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsResults.html#overview","title":"SearchByFoldsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search folds operation.\n\nn_found\n\nNumber of folds identified.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByFoldsResults object.\n\nset_default\n\nSet the default values of the SearchByFoldsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsResults.html#import-detail","title":"SearchByFoldsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsResults.html#property-detail","title":"SearchByFoldsResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByFoldsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search folds operation.\n\n\n\nproperty SearchByFoldsResults.n_found: int\n\nNumber of folds identified."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchByFoldsResults.html#method-detail","title":"SearchByFoldsResults > Method detail","text":"Method detail\n\n\n\nSearchByFoldsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByFoldsResults.__str__() -> str\n\n\n\n\n\nstatic SearchByFoldsResults.print_default()\n\nPrint the default values of SearchByFoldsResults object.\n\nExamples\n\n>>> SearchByFoldsResults.print_default()\n\n\n\nstatic SearchByFoldsResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchByFoldsResults object.\n\nParameters\n\nn_found (int, optional) – Number of folds identified.\n\nerror_code (ErrorCode, optional) – Error code associated with search folds operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsResults.html#copyzoneletsresults","title":"CopyZoneletsResults","text":"CopyZoneletsResults\n\n\n\nclass ansys.meshing.prime.CopyZoneletsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, copied_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, copied_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult structure associated with copying zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CopyZoneletsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\ncopied_zonelets (Iterable[int], optional) – Ids of the copied zonelets.\n\ncopied_face_zonelets (Iterable[int], optional) – Ids of the copied bounding faces of cell zonelets.\n\njson_data (dict, optional) – JSON dictionary to create a CopyZoneletsResults object with provided parameters.\n\nExamples\n\n>>> copy_zonelets_results = prime.CopyZoneletsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsResults.html#overview","title":"CopyZoneletsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncopied_face_zonelets\n\nIds of the copied bounding faces of cell zonelets.\n\ncopied_zonelets\n\nIds of the copied zonelets.\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CopyZoneletsResults object.\n\nset_default\n\nSet the default values of the CopyZoneletsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsResults.html#import-detail","title":"CopyZoneletsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsResults.html#property-detail","title":"CopyZoneletsResults > Property detail","text":"Property detail\n\n\n\nproperty CopyZoneletsResults.copied_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the copied bounding faces of cell zonelets.\n\n\n\nproperty CopyZoneletsResults.copied_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the copied zonelets.\n\n\n\nproperty CopyZoneletsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsResults.html#method-detail","title":"CopyZoneletsResults > Method detail","text":"Method detail\n\n\n\nCopyZoneletsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCopyZoneletsResults.__str__() -> str\n\n\n\n\n\nstatic CopyZoneletsResults.print_default()\n\nPrint the default values of CopyZoneletsResults object.\n\nExamples\n\n>>> CopyZoneletsResults.print_default()\n\n\n\nstatic CopyZoneletsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, copied_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, copied_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the CopyZoneletsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\ncopied_zonelets (Iterable[int], optional) – Ids of the copied zonelets.\n\ncopied_face_zonelets (Iterable[int], optional) – Ids of the copied bounding faces of cell zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeExpressionType.html#scopeexpressiontype","title":"ScopeExpressionType","text":"ScopeExpressionType\n\n\n\nclass ansys.meshing.prime.ScopeExpressionType\n\nScopeExpressionType uses expression type to evaluate the scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeExpressionType.html#overview","title":"ScopeExpressionType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNAMEPATTERN\n\nUse name pattern expression to evaluate scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeExpressionType.html#import-detail","title":"ScopeExpressionType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScopeExpressionType.html#attribute-detail","title":"ScopeExpressionType > Attribute detail","text":"Attribute detail\n\n\n\nScopeExpressionType.NAMEPATTERN = 2\n\nUse name pattern expression to evaluate scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ContactPreventionParams.html#contactpreventionparams","title":"ContactPreventionParams","text":"ContactPreventionParams\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.ContactPreventionParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, source_scope: ScopeDefinition = None, target_scope: ScopeDefinition = None, size: float = None, json_data: dict = None, **kwargs)\n\nContactPreventionParams defines contact prevention control parameters for wrapper.\n\nParameters\n\nmodel (Model) – Model to create a ContactPreventionParams object with default parameters.\n\nsource_scope (ScopeDefinition, optional) – Source scope used for contact prevention control.\n\ntarget_scope (ScopeDefinition, optional) – Target scope used for contact prevention control.\n\nsize (float, optional) – Minimum gap size (gap/4) to resolve contact between source and target.\n\njson_data (dict, optional) – JSON dictionary to create a ContactPreventionParams object with provided parameters.\n\nExamples\n\n>>> contact_prevention_params = prime.ContactPreventionParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ContactPreventionParams.html#overview","title":"ContactPreventionParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsize\n\nMinimum gap size (gap/4) to resolve contact between source and target.\n\nsource_scope\n\nSource scope used for contact prevention control.\n\ntarget_scope\n\nTarget scope used for contact prevention control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ContactPreventionParams object.\n\nset_default\n\nSet the default values of the ContactPreventionParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ContactPreventionParams.html#import-detail","title":"ContactPreventionParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ContactPreventionParams.html#property-detail","title":"ContactPreventionParams > Property detail","text":"Property detail\n\n\n\nproperty ContactPreventionParams.size: float\n\nMinimum gap size (gap/4) to resolve contact between source and target.\n\n\n\nproperty ContactPreventionParams.source_scope: ScopeDefinition\n\nSource scope used for contact prevention control.\n\n\n\nproperty ContactPreventionParams.target_scope: ScopeDefinition\n\nTarget scope used for contact prevention control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ContactPreventionParams.html#method-detail","title":"ContactPreventionParams > Method detail","text":"Method detail\n\n\n\nContactPreventionParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nContactPreventionParams.__str__() -> str\n\n\n\n\n\nstatic ContactPreventionParams.print_default()\n\nPrint the default values of ContactPreventionParams object.\n\nExamples\n\n>>> ContactPreventionParams.print_default()\n\n\n\nstatic ContactPreventionParams.set_default(source_scope: ScopeDefinition = None, target_scope: ScopeDefinition = None, size: float = None)\n\nSet the default values of the ContactPreventionParams object.\n\nParameters\n\nsource_scope (ScopeDefinition, optional) – Source scope used for contact prevention control.\n\ntarget_scope (ScopeDefinition, optional) – Target scope used for contact prevention control.\n\nsize (float, optional) – Minimum gap size (gap/4) to resolve contact between source and target."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ContactPatchAxis.html#contactpatchaxis","title":"ContactPatchAxis","text":"ContactPatchAxis\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.ContactPatchAxis\n\nFlow or wake direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ContactPatchAxis.html#overview","title":"ContactPatchAxis > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nX\n\nFlow or wake inflation in the X direction for BOI creation.\n\nY\n\nFlow or wake inflation in the Y direction for BOI creation.\n\nZ\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ContactPatchAxis.html#import-detail","title":"ContactPatchAxis > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ContactPatchAxis.html#attribute-detail","title":"ContactPatchAxis > Attribute detail","text":"Attribute detail\n\n\n\nContactPatchAxis.X = 1\n\nFlow or wake inflation in the X direction for BOI creation.\n\n\n\nContactPatchAxis.Y = 2\n\nFlow or wake inflation in the Y direction for BOI creation.\n\n\n\nContactPatchAxis.Z = 3\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#mesh-a-mixing-elbow-for-a-flow-analysis","title":"Mesh a mixing elbow for a flow analysis","text":"Mesh a mixing elbow for a flow analysis\n\nSummary: This example demonstrates how to mesh a mixing elbow for a flow analysis."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#objective","title":"Mesh a mixing elbow for a flow analysis > Objective","text":"Objective\n\nThis example meshes a mixing elbow with polyhedral elements and wall boundary\nlayer refinement. It uses several meshing utilities available in the lucid class for\nconvenience and ease."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#procedure","title":"Mesh a mixing elbow for a flow analysis > Procedure","text":"Procedure\n\nLaunch Ansys Prime Server and instantiate meshing utilities from the lucid class.\n\nImport the geometry and create face zones from labels imported from the geometry.\n\nSurface mesh geometry with curvature sizing.\n\nVolume mesh with polyhedral elements and boundary layer refinement.\n\nPrint statistics on the generated mesh.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#launch-ansys-prime-server","title":"Mesh a mixing elbow for a flow analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#import-geometry","title":"Mesh a mixing elbow for a flow analysis > Import geometry","text":"Import geometry\n\nDownload the elbow geometry (FMD) file exported by SpaceClaim.\nImport the geometry.\nCreate face zones from labels imported from the geometry for use in Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#surface-mesh","title":"Mesh a mixing elbow for a flow analysis > Surface mesh","text":"Surface mesh\n\nSurface mesh the geometry setting minimum and maximum sizing\nto use for curvature refinement."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#volume-mesh","title":"Mesh a mixing elbow for a flow analysis > Volume mesh","text":"Volume mesh\n\nVolume mesh with polyhedral elements and boundary layer refinement.\nFill the volume with polyhedral and prism mesh\nspecifying the location and number of layers for prisms.\nUse expressions to define the surfaces to have prisms grown\nwhere * !inlet !outlet states all not inlet or outlet.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#print-mesh-statistics","title":"Mesh a mixing elbow for a flow analysis > Print mesh statistics","text":"Print mesh statistics"},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#write-mesh","title":"Mesh a mixing elbow for a flow analysis > Write mesh","text":"Write mesh\n\nWrite a CAS file for use in the Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/02_lucid_mixing_elbow.html#exit-pyprimemesh","title":"Mesh a mixing elbow for a flow analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (0 minutes 21.275 seconds)\n\n\n\nDownload Jupyter notebook: 02_lucid_mixing_elbow.ipynb\n\nDownload Python source code: 02_lucid_mixing_elbow.py\n\nDownload zipped: 02_lucid_mixing_elbow.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#create-a-contact-patch-for-wrapping-between-a-wheel-and-ground-interface","title":"Create a contact patch for wrapping between a wheel and ground interface","text":"Create a contact patch for wrapping between a wheel and ground interface\n\nSummary: This example demonstrates how to create a contact patch for use with wrapping\nto avoid meshing into a narrow contact region between two objects."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#objective","title":"Create a contact patch for wrapping between a wheel and ground interface > Objective","text":"Objective\n\nThis example uses a contact patch for wrapping to avoid the interface of a wheel with the ground\nto improve mesh quality when growing prism layers in the region of the contacting faces.\n\nThe preceding image shows the following:\n\nTop left: Wheel/ground interface\n\nTop right: Addition of contact patch\n\nLower left: Grouping tolerance at 4 with multiple contact patches\n\nLower right: Grouping tolerance at 20 with merged single contact patch"},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#procedure","title":"Create a contact patch for wrapping between a wheel and ground interface > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance and instantiate the meshing utilities\nfrom the lucid class.\n\nImport the wheel ground geometry.\n\nConvert the topo parts to mesh parts so that the contact patch can be created.\n\nCreate a contact patch between the wheel and the ground.\n\nExtract the fluid region using wrapping.\n\nVolume mesh with polyhedral and prism cells.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#launch-ansys-prime-server","title":"Create a contact patch for wrapping between a wheel and ground interface > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules and launch an instance of Ansys Prime Server.\nFrom the PyPrimeMesh client, get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#import-cad-geometry","title":"Create a contact patch for wrapping between a wheel and ground interface > Import CAD geometry","text":"Import CAD geometry\n\nDownload the wheel ground geometry (FMD) file exported by SpaceClaim.\nImport the CAD geometry. The geometry consists of two topo parts: a wheel and an enclosing box.\nLabels are defined for the ground topo face on the enclosure and for the wheel\nas all the topo faces of the wheel part."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#convert-topo-parts-to-mesh-parts","title":"Create a contact patch for wrapping between a wheel and ground interface > Convert topo parts to mesh parts","text":"Convert topo parts to mesh parts\n\nConvert the faceted geometry of the topology to mesh for all parts as the contact patch\nrequires face zonelets from mesh parts as input."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#create-a-contact-patch","title":"Create a contact patch for wrapping between a wheel and ground interface > Create a contact patch","text":"Create a contact patch\n\nTo create a contact patch, a direction is needed to define the resulting shape of the patch.\nA new part is created containing the patch.\nA prefix can be specified for the label created for the contact patch face zonelets generated.\nThe offset distance determines the thickness and extent of the patch.  The source face zonelet is\noffset to intersect the planar target face and the intersection used to define the contact patch.\nDue to the depth of the treads on the wheel, 20.0 is used as the offset to reach the tire surface.\nIf multiple contact regions are found, they can be merged by grouping them using the grouping\ntolerance distance.  With a grouping tolerance of 4.0, separate contact regions are created for\nsome of the treads of the tire, see the image at the top of the example. To merge these contact\nregions into a single patch, the grouping tolerance distance is increased to 20.0, avoiding small\ngaps between contact regions."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#wrap-the-fluid-region","title":"Create a contact patch for wrapping between a wheel and ground interface > Wrap the fluid region","text":"Wrap the fluid region\n\nThe largest internal region in this instance is the fluid region around the wheel.\nIntersection loops are created to capture the features at the corners between the\npatch, ground, and wheel."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#open-a-pyvistaqt-window","title":"Create a contact patch for wrapping between a wheel and ground interface > Open a pyvistaqt window","text":"Open a pyvistaqt window"},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#volume-mesh","title":"Create a contact patch for wrapping between a wheel and ground interface > Volume mesh","text":"Volume mesh\n\nApply five layers of prisms to the wheel, patch, and ground. Mesh with polyhedrals.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#write-model","title":"Create a contact patch for wrapping between a wheel and ground interface > Write model","text":"Write model\n\nWrite a CAS file for use in the Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/10_wheel_ground_contact_patch.html#exit-the-pyprimemesh-session","title":"Create a contact patch for wrapping between a wheel and ground interface > Exit the PyPrimeMesh session","text":"Exit the PyPrimeMesh session\n\nTotal running time of the script: (2 minutes 36.853 seconds)\n\n\n\nDownload Jupyter notebook: 10_wheel_ground_contact_patch.ipynb\n\nDownload Python source code: 10_wheel_ground_contact_patch.py\n\nDownload zipped: 10_wheel_ground_contact_patch.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/AdvancedSurferSetup.html#advancedsurfersetup","title":"AdvancedSurferSetup","text":"AdvancedSurferSetup\n\n\n\nclass ansys.meshing.prime.autogen.surferstructs.AdvancedSurferSetup\n\nDefine advanced settings for remeshing operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/AdvancedSurferSetup.html#overview","title":"AdvancedSurferSetup > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\nOption to define no advanced settings.\n\nWRAPPER\n\nOption to define advanced settings for wrapper surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/AdvancedSurferSetup.html#import-detail","title":"AdvancedSurferSetup > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/AdvancedSurferSetup.html#attribute-detail","title":"AdvancedSurferSetup > Attribute detail","text":"Attribute detail\n\n\n\nAdvancedSurferSetup.NONE = 0\n\nOption to define no advanced settings.\n\n\n\nAdvancedSurferSetup.WRAPPER = 1\n\nOption to define advanced settings for wrapper surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/Mesh.html#mesh","title":"Mesh","text":"Mesh\n\n\n\nclass ansys.meshing.prime.lucid.Mesh(model: ansys.meshing.prime.Model)\n\nProvides methods for users who are new to meshing.\n\nThis class also serves as a tutorial for commonly used meshing workflows.\n\nThe Mesh class provides these functionalities:\n\nSurface meshing with constant and variable sizing with triangle\nor quad dominant mesh\n\nVolume meshing with prism, tetrahedral, and polyhedral elements\n\nSurface wrapping\n\nHelper method for creating zones from labels\n\nHelper methods for reading and writing files"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/Mesh.html#overview","title":"Mesh > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncompute_volumes\n\nCompute volumes in the parts defined by the part expression.\n\nconnect_faces\n\nConnect face zonelets with a label name pattern within a given tolerance.\n\ncreate_constant_size_control\n\nGenerate constant size control on a scope.\n\ncreate_curvature_size_control\n\nGenerate a curvature size control on a scope.\n\ncreate_flow_volume\n\nCreate flow volume by the face labels defining the boundary of the volume.\n\ncreate_zones_from_labels\n\nCreate zones from labels.\n\ndelete_topology\n\nDelete topology in one or more parts.\n\nmerge_parts\n\nMerge multiple parts into a single part.\n\nread\n\nRead or import files of different formats based on file extensions.\n\nsurface_mesh\n\nGenerate a surface mesh on a scope.\n\nsurface_mesh_with_size_controls\n\nGenerate a surface mesh on a scope using the given size controls.\n\nvolume_mesh\n\nGenerate a volume mesh on the model.\n\nwrap\n\nWrap and remesh the input.\n\nwrite\n\nWrite or export files of different formats based on file extensions."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/Mesh.html#import-detail","title":"Mesh > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/Mesh.html#method-detail","title":"Mesh > Method detail","text":"Method detail\n\n\n\nMesh.compute_volumes(part_expression: str = '*', create_zones_per_volume: bool = True)\n\nCompute volumes in the parts defined by the part expression.\n\nParameters\n\npart_expression (str, optional) – Expression of the parts where the topology must be deleted.\nThe default is \"*\".\n\ncreate_zones_per_volume (bool, optional) – Whether to create volume zones for each volume. The default\nis True.\n\n\n\nMesh.connect_faces(part_expression: str = '*', face_labels: str = '*', target_face_labels: str = '*', tolerance: float = 0.05)\n\nConnect face zonelets with a label name pattern within a given tolerance.\n\nThis method connects face zonelets with a label name pattern to\nface zonelets with target face labels within a given tolerance. The connection\nhappens within the part. Face zonelets of a part are connected with face zonelets\nof the same part only.\n\nParameters\n\npart_expression (str, optional) – Name pattern of the parts to use for connecting the face zonelets. The\ndefault is \"*\".\n\nface_labels (str, optional) – Name pattern of the face labels used for connecting the face zonelets.\nThe default is \"*\".\n\ntarget_face_labels (str, optional) – Name pattern of the face labels to connect. The default is \"*\".\n\ntolerance (float, optional) – Tolerance for the connection. The default is 0.05.\n\n\n\nMesh.create_constant_size_control(control_name: str = 'size_control', size: float = 1.0, scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nGenerate constant size control on a scope.\n\nParameters\n\ncontrol_name (str) – Name of the control.\n\nsize (float, optional) – Constant edge length of the mesh. The default is 1.0.\n\nscope (SurfaceScope) – Scope for creating the size control.\n\n\n\nMesh.create_curvature_size_control(control_name: str = 'size_control', min: float = 1.0, max: float = 2.0, scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nGenerate a curvature size control on a scope.\n\nParameters\n\ncontrol_name (str, optional) – Name of the control. The default is \"size_control\".\n\nmin (float, optional) – Minimum edge length of the mesh. The default is 1.0.\n\nmax (float) – Maximum edge length of the mesh. The default is 2.0.\n\nscope (SurfaceScope) – Scope for creating the size control.\n\n\n\nMesh.create_flow_volume(flow_volume_zone_name: str = 'flow_volume', cap_scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nCreate flow volume by the face labels defining the boundary of the volume.\n\nParameters\n\nflow_volume_zone_name (str, optional) – Name for the volume zone of the created flow volume. The default is\n\"flow_volume\".\n\ncap_scope (SurfaceScope) – Scope defining the face zonelets where the cap for flow volume must\nbe created.\n\n\n\nMesh.create_zones_from_labels(label_expression: str = None, conversion_method: LabelToZoneMethod = LabelToZoneMethod.SIMPLE)\n\nCreate zones from labels.\n\nWhen exporting to various solvers, zones play a very important role.\nZones are where material properties and boundary conditions\ncan be set in respective solvers.\n\nZones allow downstream setting of boundary conditions or material properties.\n\nZone names in PyPrimeMesh are translated into equivalent concepts in the solver.\nCurrently, only one method is available to convert a zone to a label, and\nonly face zones are created.\n\nThe create_zones_from_labels method finds the entities by labels\nand then adds them to zones with the same names as the labels.\n\nIf the label_expression parameter is not provided, all labels are\nflattened to create zones. If overlaps occur, label names are combined, and\nseparate zones are created.\n\nFor example, if “LabelA” and “LabelB” have overlapping TopoFaces,\nthese zones are created: \"LabelA\", \"LabelB\", and\n\"LabelA_LabelB\" for the overlap.\n\nParameters\n\nlabel_expression (str, optional) – Expression for the labels to convert to zones. The\ndefault is None.\n\nconversion_method (LabelToZoneMethod, optional) – Method for converting the labels to zones. The default\nis LabelToZoneMethod.SIMPLE.\n\nExamples\n\n>>> from ansys.meshing.prime import lucid\n>>> mesh_util = lucid.Mesh(model)\n>>> mesh_util.create_zones_from_labels()\n\n\n\nMesh.delete_topology(part_expression: str = '*', delete_edges: bool = True)\n\nDelete topology in one or more parts.\n\nParameters\n\npart_expression (str, optional) – Expression of the parts where the topology must be deleted.\nThe default is \"*\".\n\ndelete_edges (bool, optional) – Whether to delete edge zonelets. The default is True.\n\n\n\nMesh.merge_parts(parts_expression: str = '*', new_name: str = 'merged_part')\n\nMerge multiple parts into a single part.\n\nParameters\n\nparts_expression (str, optional) – Expression of the parts to merge. The default is \"*\".\n\nnew_name (str, optional) – Name of the new part that is created from the merged parts.\nThe default is \"merged_part\".\n\n\n\nMesh.read(file_name: str, append: bool = False, cad_reader_route: ansys.meshing.prime.CadReaderRoute = None)\n\nRead or import files of different formats based on file extensions.\n\nThis method supports reading and importing these file formats:\n\nReading PyPrimeMesh’s native PMDAT files\n\nImporting various types of CAD files\n\nImporting Fluent Meshing’s MSH files\n\nImporting Fluent’s CAS files\n\nImporting MAPDL’s CDB files\n\nParameters\n\nfile_name (str) – Path to the file to read or import.\n\nappend (bool, optional) – Whether to append to the file. The default is False, in which case\n\nthe file is overwritten.\n\ncad_reader_route (prime.CadReaderRoute, optional) – Route of the CAD reader. The default is None.\n\n\n\nMesh.surface_mesh(min_size: float = None, max_size: float = None, generate_quads: bool = False, scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nGenerate a surface mesh on a scope.\n\nThis method is used to generate a surface mesh of a constant or variable\nsize. It supports generating quad dominant or triangular elements.\n\nIf minimum and maximum sizes are provided, a variable size mesh is generated\nbetween the minimum size and maximum size by applying sizes based on curvature.\n\nIf only the minimum size or maximum size is provided, a constant size mesh\nis generated with the provided size.\n\nIf neither minimum size or maximum size is provided, the global maximum setting\nis used to generate a constant size mesh.\n\nParameters\n\nmin_size (float, optional) – Minimum edge length of the mesh. The default is None.\n\nmax_size (float, optional) – Maximum edge length of the mesh. The default is None.\n\ngenerate_quads (bool, optional) – Whether to generate a quad dominant mesh. The default is\nFalse, in which case a triangular mesh is generated.\n\nscope (SurfaceScope) – Scope for generating the surface mesh.\n\n\n\nMesh.surface_mesh_with_size_controls(size_control_names: str = '*', generate_quads: bool = False, scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nGenerate a surface mesh on a scope using the given size controls.\n\nThis method supports generating quad dominant or triangular elements.\n\nParameters\n\nsize_control_names (str, optional) – Name pattern for the size controls. The default is \"*\".\n\ngenerate_quads (bool, optional) – Whether to generate a quad dominant mesh. The default is\nFalse, in which case a triangular mesh is generated.\n\nscope (SurfaceScope) – Scope for generating the surface mesh.\n\n\n\nMesh.volume_mesh(volume_fill_type: ansys.meshing.prime.VolumeFillType = prime.VolumeFillType.TET, quadratic: bool = False, prism_layers: int = None, prism_surface_expression: str = '*', prism_volume_expression: str = '*', growth_rate: float = 1.2, scope: ansys.meshing.prime.lucid.scope.VolumeScope = VolumeScope())\n\nGenerate a volume mesh on the model.\n\nParameters\n\nvolume_fill_type (prime.VolumeFillType) – Type of volume elements to generate.\n\nquadratic (bool, optional) – Whether to generate a quadratic mesh. The default is False.\nA quadratic mesh is not supported with parallel meshing.\nIt is only supported with a pure tetrahedral mesh.\n\nprism_layers (int, optional) – Number of prism layers to grow. The default is None.\nIf a value for prism layers is specified, prism layers are generated.\n\nprism_surface_expression (str, optional) – Face zones or TopoFaces to grow prisms from. The default is \"*\",\nin which case prisms are grown from all surfaces.\n\nprism_volume_expression (str, optional) – Volumes or TopoVolumes to grow prisms in.\nThe default is \"*\". This expression evaluates\nto zone names and volumes, or TopoVolumes are queried\nbased on the zones evaluated.\n\ngrowth_rate (float, optional) – Prism growth rate. The default is 1.2.\n\nscope (VolumeScope) – Scope of volumes to mesh.\n\n\n\nMesh.wrap(min_size: float = None, max_size: float = None, growth_rate: float = 1.2, elements_per_gap: float = None, normal_angle: float = 18.0, input_parts: str = '*', input_labels: str = '*', keep_inputs: bool = False, region_extract: ansys.meshing.prime.WrapRegion = prime.WrapRegion.EXTERNAL, material_point: List[float] = None, extract_features: bool = True, create_intersection_loops: bool = False, use_existing_features: bool = False, enable_feature_octree_refinement: bool = True, feature_angle: float = 40.0, contact_prevention_size: float = None, number_of_threads: int = None, remesh_postwrap: bool = True, recompute_remesh_sizes: bool = False, use_existing_size_fields: bool = False, size_fields: List[ansys.meshing.prime.SizeField] = None, wrap_size_controls: List[ansys.meshing.prime.SizeControl] = None, remesh_size_controls: List[ansys.meshing.prime.SizeControl] = None, feature_recovery_params: List[ansys.meshing.prime.FeatureRecoveryParams] = None, contact_prevention_params: List[ansys.meshing.prime.ContactPreventionParams] = None, leak_prevention_params: List[ansys.meshing.prime.LeakPreventionParams] = None)\n\nWrap and remesh the input.\n\nThe default behavior is to perform an external wrap of all parts in the model\nusing curvature sizing and extracting features. The wrap is then remeshed\nto provide a surface mesh for the extracted region.\n\nGeodesic sizing is used only if soft and curvature controls are set.\nIf contact prevention size is set and geodesic sizing is available, contact\ndetection is used globally.\n\nIf minimum and maximum sizes are provided, variable size mesh is generated\nbetween the minimum size and maximum size by applying sizes based on curvature.\n\nIf either minimum size or maximum size is provided, constant size mesh\nis generated with the provided size.\n\nIf neither minimum size or maximum size is provided, global minimum and\nmaximum settings are used to generate a variable size mesh based on curvature.\n\nParameters\n\nmin_size (float, optional) – Minimum edge length of the mesh. The default is None.\n\nmax_size (float, optional) – Maximum edge length of the mesh. The default is None.\n\ngrowth_rate (float, optional) – Growth rate. The default is 1.2.\n\nelements_per_gap (float, optional) – Global proximity size control elements per gap with self proximity.\nThe default is None.\n\nnormal_angle (float, optional) – Global curvature size control normal angle. The default is 18.0.\n\ninput_parts (str, optional) – Parts to wrap. The default is \"*\".\n\ninput_labels (str) – Labels to wrap. The default is \"*\".\n\nkeep_inputs (bool, optional) – Whether to retain inputs. The default is False.\n\nregion_extract (prime.WrapRegion) – Region to wrap. The default is prime.WrapRegion.EXTERNAL.\n\nmaterial_point (List[float], optional) – Material point if the region extraction method is set to\nmaterial point. The default is None.\n\nextract_features (bool, optional) – Whether to extract feature edges using the feature angle. The\ndefault is True.\n\ncreate_intersection_loops (bool, optional) – Whether to create intersection loops between all parts.\nThe default is False.\n\nuse_existing_features (bool, optional) – Whether to maintain existing features on parts. The\ndefault is False.\n\nenable_feature_octree_refinement (bool, optional) – Whether to apply refinement to feature edges during the wrap.\nThe default is True.\n\nfeature_angle (float, optional) – Angle to use for extracting features. The default is 40.0.\n\ncontact_prevention_size (float, optional) – Global proximity size controls between all parts.\nThe default is None.\n\nnumber_of_threads (int, optional) – Number of threads. The default is None.\n\nremesh_postwrap (bool, optional) – Whether to remesh the wrap. The default is True.\n\nrecompute_remesh_sizes (bool, optional) – Whether to recompute sizes from global controls using\nthe wrap surface. The default is False.\n\nuse_existing_size_fields (bool, optional) – Whether to use precomputed size fields. The default is False.\n\nsize_fields (List[prime.SizeField], optional) – List of size fields to use. The default is None.\n\nwrap_size_controls (List[prime.SizeControl], optional) – List of wrap size controls to use. The default is None.\n\nremesh_size_controls (List[prime.SizeControl], optional) – List of remesh size controls to use. The default is None.\n\nfeature_recovery_params (List[prime.FeatureRecoveryParams], optional) – List of feature recovery parameters to use. The default is None.\n\ncontact_prevention_params (List[prime.ContactPreventionParams], optional) – List of contact prevention parameters to use. The default is None.\n\nleak_prevention_params (List[prime.LeakPreventionParams], optional) – List of leak prevention parameters to use.  The default is None.\n\nReturns\n\nReturns Part.\n\nReturn type\n\nWrapped part\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> from ansys.meshing.prime import lucid\n>>> prime_client = prime.launch_prime()\n>>> model = prime_client.model\n>>> mesh = lucid.Mesh(model)\n>>> mesh.read(\"/my_geometry.stl\")\n>>> mesh.wrap(min_size=1, max_size=20, create_intersection_loops=True)\n>>> mesh.write(\"/mesh_output.pmdat\")\n>>> prime_client.exit()\n\n\n\nMesh.write(file_name: str)\n\nWrite or export files of different formats based on file extensions.\n\nThis method supports writing and exporting these file formats:\n\nWriting PyPrimeMesh’s native PMDAT files\n\nExporting Fluent Meshing’s MSH files\n\nExporting Fluent’s CAS files\n\nExporting MAPDL’s CDB files.\n\nExporting STL files.\n\nParameters\n\nfile_name (str) – Path of the file to write or export."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveQualityParams.html#wrapperimprovequalityparams","title":"WrapperImproveQualityParams","text":"WrapperImproveQualityParams\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapperImproveQualityParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, target_skewness: float = None, island_count: int = None, island_tol: float = None, overlap_count: int = None, overlap_tol: float = None, resolve_spikes: bool = None, resolve_intersections: bool = None, inflate_dihedral_face_nodes: bool = None, resolve_invalid_node_normals: bool = None, aggressively: bool = None, sharp_angle: float = None, geom_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, number_of_threads: int = None, json_data: dict = None, **kwargs)\n\nWrapperImproveQualityParams defines parameters to improve wrapper part.\n\nParameters\n\nmodel (Model) – Model to create a WrapperImproveQualityParams object with default parameters.\n\ntarget_skewness (float, optional) – Target skewness.\n\nisland_count (int, optional) – Face count of smallest island.\n\nisland_tol (float, optional) – Relative face count of smallest island.\n\noverlap_count (int, optional) – Face count of non-manifold overlap.\n\noverlap_tol (float, optional) – Relative face count of non-manifold overlap.\n\nresolve_spikes (bool, optional) – Control to perform removing spikes or not.\n\nresolve_intersections (bool, optional) – Control to resolve face intersections or not.\n\ninflate_dihedral_face_nodes (bool, optional) – Control to resolve face dihedral angle by inflating opposite nodes or not.\n\nresolve_invalid_node_normals (bool, optional) – Control to resolve invalid node normals by inflating opposite nodes or not.\n\naggressively (bool, optional) – Control to improve surfaces aggressively or not.\n\nsharp_angle (float, optional) – Maximum off feature sharp node angle.\n\ngeom_zonelets (Iterable[int], optional) – Associated underlying geometry zonelet ids.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperImproveQualityParams object with provided parameters.\n\nExamples\n\n>>> wrapper_improve_quality_params = prime.WrapperImproveQualityParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveQualityParams.html#overview","title":"WrapperImproveQualityParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\naggressively\n\nControl to improve surfaces aggressively or not.\n\ngeom_zonelets\n\nAssociated underlying geometry zonelet ids.\n\ninflate_dihedral_face_nodes\n\nControl to resolve face dihedral angle by inflating opposite nodes or not.\n\nisland_count\n\nFace count of smallest island.\n\nisland_tol\n\nRelative face count of smallest island.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\noverlap_count\n\nFace count of non-manifold overlap.\n\noverlap_tol\n\nRelative face count of non-manifold overlap.\n\nresolve_intersections\n\nControl to resolve face intersections or not.\n\nresolve_invalid_node_normals\n\nControl to resolve invalid node normals by inflating opposite nodes or not.\n\nresolve_spikes\n\nControl to perform removing spikes or not.\n\nsharp_angle\n\nMaximum off feature sharp node angle.\n\ntarget_skewness\n\nTarget skewness.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperImproveQualityParams object.\n\nset_default\n\nSet the default values of the WrapperImproveQualityParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveQualityParams.html#import-detail","title":"WrapperImproveQualityParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveQualityParams.html#property-detail","title":"WrapperImproveQualityParams > Property detail","text":"Property detail\n\n\n\nproperty WrapperImproveQualityParams.aggressively: bool\n\nControl to improve surfaces aggressively or not.\n\n\n\nproperty WrapperImproveQualityParams.geom_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nAssociated underlying geometry zonelet ids.\n\n\n\nproperty WrapperImproveQualityParams.inflate_dihedral_face_nodes: bool\n\nControl to resolve face dihedral angle by inflating opposite nodes or not.\n\n\n\nproperty WrapperImproveQualityParams.island_count: int\n\nFace count of smallest island.\n\n\n\nproperty WrapperImproveQualityParams.island_tol: float\n\nRelative face count of smallest island.\n\n\n\nproperty WrapperImproveQualityParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\n\n\nproperty WrapperImproveQualityParams.overlap_count: int\n\nFace count of non-manifold overlap.\n\n\n\nproperty WrapperImproveQualityParams.overlap_tol: float\n\nRelative face count of non-manifold overlap.\n\n\n\nproperty WrapperImproveQualityParams.resolve_intersections: bool\n\nControl to resolve face intersections or not.\n\n\n\nproperty WrapperImproveQualityParams.resolve_invalid_node_normals: bool\n\nControl to resolve invalid node normals by inflating opposite nodes or not.\n\n\n\nproperty WrapperImproveQualityParams.resolve_spikes: bool\n\nControl to perform removing spikes or not.\n\n\n\nproperty WrapperImproveQualityParams.sharp_angle: float\n\nMaximum off feature sharp node angle.\n\n\n\nproperty WrapperImproveQualityParams.target_skewness: float\n\nTarget skewness."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveQualityParams.html#method-detail","title":"WrapperImproveQualityParams > Method detail","text":"Method detail\n\n\n\nWrapperImproveQualityParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperImproveQualityParams.__str__() -> str\n\n\n\n\n\nstatic WrapperImproveQualityParams.print_default()\n\nPrint the default values of WrapperImproveQualityParams object.\n\nExamples\n\n>>> WrapperImproveQualityParams.print_default()\n\n\n\nstatic WrapperImproveQualityParams.set_default(target_skewness: float = None, island_count: int = None, island_tol: float = None, overlap_count: int = None, overlap_tol: float = None, resolve_spikes: bool = None, resolve_intersections: bool = None, inflate_dihedral_face_nodes: bool = None, resolve_invalid_node_normals: bool = None, aggressively: bool = None, sharp_angle: float = None, geom_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, number_of_threads: int = None)\n\nSet the default values of the WrapperImproveQualityParams object.\n\nParameters\n\ntarget_skewness (float, optional) – Target skewness.\n\nisland_count (int, optional) – Face count of smallest island.\n\nisland_tol (float, optional) – Relative face count of smallest island.\n\noverlap_count (int, optional) – Face count of non-manifold overlap.\n\noverlap_tol (float, optional) – Relative face count of non-manifold overlap.\n\nresolve_spikes (bool, optional) – Control to perform removing spikes or not.\n\nresolve_intersections (bool, optional) – Control to resolve face intersections or not.\n\ninflate_dihedral_face_nodes (bool, optional) – Control to resolve face dihedral angle by inflating opposite nodes or not.\n\nresolve_invalid_node_normals (bool, optional) – Control to resolve invalid node normals by inflating opposite nodes or not.\n\naggressively (bool, optional) – Control to improve surfaces aggressively or not.\n\nsharp_angle (float, optional) – Maximum off feature sharp node angle.\n\ngeom_zonelets (Iterable[int], optional) – Associated underlying geometry zonelet ids.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryParams.html#surfacediagnosticsummaryparams","title":"SurfaceDiagnosticSummaryParams","text":"SurfaceDiagnosticSummaryParams\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SurfaceDiagnosticSummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, compute_self_intersections: bool = None, compute_free_edges: bool = None, compute_multi_edges: bool = None, compute_duplicate_faces: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control surface diagnostics summary results.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceDiagnosticSummaryParams object with default parameters.\n\nscope (ScopeDefinition, optional) – Scope the face zonelets for surface diagnostics.\n\ncompute_self_intersections (bool, optional) – Control to identify face intersections are present or not.\n\ncompute_free_edges (bool, optional) – Control to identify free face edges are present or not.\n\ncompute_multi_edges (bool, optional) – Control to identify multi face edges are present or not.\n\ncompute_duplicate_faces (bool, optional) – Control to identify duplicate faces are present or not.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceDiagnosticSummaryParams object with provided parameters.\n\nExamples\n\n>>> surface_diagnostic_summary_params = prime.SurfaceDiagnosticSummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryParams.html#overview","title":"SurfaceDiagnosticSummaryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncompute_duplicate_faces\n\nControl to identify duplicate faces are present or not.\n\ncompute_free_edges\n\nControl to identify free face edges are present or not.\n\ncompute_multi_edges\n\nControl to identify multi face edges are present or not.\n\ncompute_self_intersections\n\nControl to identify face intersections are present or not.\n\nscope\n\nScope the face zonelets for surface diagnostics.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceDiagnosticSummaryParams object.\n\nset_default\n\nSet the default values of the SurfaceDiagnosticSummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryParams.html#import-detail","title":"SurfaceDiagnosticSummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryParams.html#property-detail","title":"SurfaceDiagnosticSummaryParams > Property detail","text":"Property detail\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_duplicate_faces: bool\n\nControl to identify duplicate faces are present or not.\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_free_edges: bool\n\nControl to identify free face edges are present or not.\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_multi_edges: bool\n\nControl to identify multi face edges are present or not.\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_self_intersections: bool\n\nControl to identify face intersections are present or not.\n\n\n\nproperty SurfaceDiagnosticSummaryParams.scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope the face zonelets for surface diagnostics."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryParams.html#method-detail","title":"SurfaceDiagnosticSummaryParams > Method detail","text":"Method detail\n\n\n\nSurfaceDiagnosticSummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceDiagnosticSummaryParams.__str__() -> str\n\n\n\n\n\nstatic SurfaceDiagnosticSummaryParams.print_default()\n\nPrint the default values of SurfaceDiagnosticSummaryParams object.\n\nExamples\n\n>>> SurfaceDiagnosticSummaryParams.print_default()\n\n\n\nstatic SurfaceDiagnosticSummaryParams.set_default(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, compute_self_intersections: bool = None, compute_free_edges: bool = None, compute_multi_edges: bool = None, compute_duplicate_faces: bool = None)\n\nSet the default values of the SurfaceDiagnosticSummaryParams object.\n\nParameters\n\nscope (ScopeDefinition, optional) – Scope the face zonelets for surface diagnostics.\n\ncompute_self_intersections (bool, optional) – Control to identify face intersections are present or not.\n\ncompute_free_edges (bool, optional) – Control to identify free face edges are present or not.\n\ncompute_multi_edges (bool, optional) – Control to identify multi face edges are present or not.\n\ncompute_duplicate_faces (bool, optional) – Control to identify duplicate faces are present or not."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesResults.html#extractvolumesresults","title":"ExtractVolumesResults","text":"ExtractVolumesResults\n\n\n\nclass ansys.meshing.prime.ExtractVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, assigned_zone_name: str = None, face_zonelets_without_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with compute volumes.\n\nParameters\n\nmodel (Model) – Model to create a ExtractVolumesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nvolumes (Iterable[int], optional) – Ids of computed volumes.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute volumes.\n\nassigned_zone_name (str, optional) – Assigned name of zone for extracted flow volumes.\n\nface_zonelets_without_volumes (Iterable[int], optional) – Ids of face zonelets for which volumes were not extracted.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractVolumesResults object with provided parameters.\n\nExamples\n\n>>> extract_volumes_results = prime.ExtractVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesResults.html#overview","title":"ExtractVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_zone_name\n\nAssigned name of zone for extracted flow volumes.\n\nerror_code\n\nError code associated with the failure of operation.\n\nface_zonelets_without_volumes\n\nIds of face zonelets for which volumes were not extracted.\n\nvolumes\n\nIds of computed volumes.\n\nwarning_codes\n\nWarning codes associated with the compute volumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractVolumesResults object.\n\nset_default\n\nSet the default values of the ExtractVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesResults.html#import-detail","title":"ExtractVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesResults.html#property-detail","title":"ExtractVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty ExtractVolumesResults.assigned_zone_name: str\n\nAssigned name of zone for extracted flow volumes.\n\n\n\nproperty ExtractVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ExtractVolumesResults.face_zonelets_without_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of face zonelets for which volumes were not extracted.\n\n\n\nproperty ExtractVolumesResults.volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of computed volumes.\n\n\n\nproperty ExtractVolumesResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the compute volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesResults.html#method-detail","title":"ExtractVolumesResults > Method detail","text":"Method detail\n\n\n\nExtractVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractVolumesResults.__str__() -> str\n\n\n\n\n\nstatic ExtractVolumesResults.print_default()\n\nPrint the default values of ExtractVolumesResults object.\n\nExamples\n\n>>> ExtractVolumesResults.print_default()\n\n\n\nstatic ExtractVolumesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, assigned_zone_name: str = None, face_zonelets_without_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ExtractVolumesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nvolumes (Iterable[int], optional) – Ids of computed volumes.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute volumes.\n\nassigned_zone_name (str, optional) – Assigned name of zone for extracted flow volumes.\n\nface_zonelets_without_volumes (Iterable[int], optional) – Ids of face zonelets for which volumes were not extracted."},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinStripType.html#thinstriptype","title":"ThinStripType","text":"ThinStripType\n\n\n\nclass ansys.meshing.prime.ThinStripType\n\nThe type to identify strip of face elements as thin strips using shape formed by features around the strip of face elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinStripType.html#overview","title":"ThinStripType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALL\n\nThin strips of all shapes.\n\nEXCLUDEVSHAPE\n\nThin strips of all, but not v shape.\n\nVSHAPE\n\nThin strips of v shape only."},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinStripType.html#import-detail","title":"ThinStripType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinStripType.html#attribute-detail","title":"ThinStripType > Attribute detail","text":"Attribute detail\n\n\n\nThinStripType.ALL = 0\n\nThin strips of all shapes.\n\n\n\nThinStripType.EXCLUDEVSHAPE = 1\n\nThin strips of all, but not v shape.\n\n\n\nThinStripType.VSHAPE = 2\n\nThin strips of v shape only."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderParams.html#scaffolderparams","title":"ScaffolderParams","text":"ScaffolderParams\n\n\n\nclass ansys.meshing.prime.autogen.scaffolderstructs.ScaffolderParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, absolute_dist_tol: float = None, repair_mode: ScaffolderRepairMode = None, size_field_type: int = None, intersection_control_mask: IntersectionMask = None, edge_merge_control: int = None, constant_mesh_size: float = None, remove_holes_critical_radius: float = None, remove_slivers_abs_dist_tol_ratio: float = None, triangles_coplanar_angle_cos: float = None, json_data: dict = None, **kwargs)\n\nParameters to control scaffold operation.\n\nParameters\n\nmodel (Model) – Model to create a ScaffolderParams object with default parameters.\n\nabsolute_dist_tol (float, optional) – Defines the maximum gap to connect.\n\nrepair_mode (ScaffolderRepairMode, optional) – Defines the mode to be used during repair or connect.This is a beta parameter. The behavior and name may change in the future.\n\nsize_field_type (int, optional) – Specifies the type of size field used for scaffolding.This is a beta parameter. The behavior and name may change in the future.\n\nintersection_control_mask (IntersectionMask, optional) – Specifies the nature of intersection to be computed.\n\nedge_merge_control (int, optional) – Specifies type of edge pairs to be merged during scaffold operation.This is a beta parameter. The behavior and name may change in the future.\n\nconstant_mesh_size (float, optional) – Defines the constant edge mesh size to check connection.\n\nremove_holes_critical_radius (float, optional) – Defines the maximum radius of holes to be removed.This is a beta parameter. The behavior and name may change in the future.\n\nremove_slivers_abs_dist_tol_ratio (float, optional) – Defines the maximum aspect ratio to remove sliver faces.This is a beta parameter. The behavior and name may change in the future.\n\ntriangles_coplanar_angle_cos (float, optional) – Lower bound for cos angle to consider coplanar faces for scaffolding.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ScaffolderParams object with provided parameters.\n\nExamples\n\n>>> scaffolder_params = prime.ScaffolderParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderParams.html#overview","title":"ScaffolderParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsolute_dist_tol\n\nDefines the maximum gap to connect.\n\nconstant_mesh_size\n\nDefines the constant edge mesh size to check connection.\n\nedge_merge_control\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nintersection_control_mask\n\nSpecifies the nature of intersection to be computed.\n\nremove_holes_critical_radius\n\nDefines the maximum radius of holes to be removed.\n\nremove_slivers_abs_dist_tol_ratio\n\nDefines the maximum aspect ratio to remove sliver faces.\n\nrepair_mode\n\nDefines the mode to be used during repair or connect.\n\nsize_field_type\n\nSpecifies the type of size field used for scaffolding.\n\ntriangles_coplanar_angle_cos\n\nLower bound for cos angle to consider coplanar faces for scaffolding.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScaffolderParams object.\n\nset_default\n\nSet the default values of the ScaffolderParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderParams.html#import-detail","title":"ScaffolderParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderParams.html#property-detail","title":"ScaffolderParams > Property detail","text":"Property detail\n\n\n\nproperty ScaffolderParams.absolute_dist_tol: float\n\nDefines the maximum gap to connect.\n\n\n\nproperty ScaffolderParams.constant_mesh_size: float\n\nDefines the constant edge mesh size to check connection.\n\n\n\nproperty ScaffolderParams.edge_merge_control: int\n\nSpecifies type of edge pairs to be merged during scaffold operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.intersection_control_mask: IntersectionMask\n\nSpecifies the nature of intersection to be computed.\n\n\n\nproperty ScaffolderParams.remove_holes_critical_radius: float\n\nDefines the maximum radius of holes to be removed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.remove_slivers_abs_dist_tol_ratio: float\n\nDefines the maximum aspect ratio to remove sliver faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.repair_mode: ScaffolderRepairMode\n\nDefines the mode to be used during repair or connect.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.size_field_type: int\n\nSpecifies the type of size field used for scaffolding.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ScaffolderParams.triangles_coplanar_angle_cos: float\n\nLower bound for cos angle to consider coplanar faces for scaffolding.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderParams.html#method-detail","title":"ScaffolderParams > Method detail","text":"Method detail\n\n\n\nScaffolderParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolderParams.__str__() -> str\n\n\n\n\n\nstatic ScaffolderParams.print_default()\n\nPrint the default values of ScaffolderParams object.\n\nExamples\n\n>>> ScaffolderParams.print_default()\n\n\n\nstatic ScaffolderParams.set_default(absolute_dist_tol: float = None, repair_mode: ScaffolderRepairMode = None, size_field_type: int = None, intersection_control_mask: IntersectionMask = None, edge_merge_control: int = None, constant_mesh_size: float = None, remove_holes_critical_radius: float = None, remove_slivers_abs_dist_tol_ratio: float = None, triangles_coplanar_angle_cos: float = None)\n\nSet the default values of the ScaffolderParams object.\n\nParameters\n\nabsolute_dist_tol (float, optional) – Defines the maximum gap to connect.\n\nrepair_mode (ScaffolderRepairMode, optional) – Defines the mode to be used during repair or connect.\n\nsize_field_type (int, optional) – Specifies the type of size field used for scaffolding.\n\nintersection_control_mask (IntersectionMask, optional) – Specifies the nature of intersection to be computed.\n\nedge_merge_control (int, optional) – Specifies type of edge pairs to be merged during scaffold operation.\n\nconstant_mesh_size (float, optional) – Defines the constant edge mesh size to check connection.\n\nremove_holes_critical_radius (float, optional) – Defines the maximum radius of holes to be removed.\n\nremove_slivers_abs_dist_tol_ratio (float, optional) – Defines the maximum aspect ratio to remove sliver faces.\n\ntriangles_coplanar_angle_cos (float, optional) – Lower bound for cos angle to consider coplanar faces for scaffolding."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseResults.html#importfluentcaseresults","title":"ImportFluentCaseResults","text":"ImportFluentCaseResults\n\n\n\nclass ansys.meshing.prime.ImportFluentCaseResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with fluent case import.\n\nParameters\n\nmodel (Model) – Model to create a ImportFluentCaseResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a ImportFluentCaseResults object with provided parameters.\n\nExamples\n\n>>> import_fluent_case_results = prime.ImportFluentCaseResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseResults.html#overview","title":"ImportFluentCaseResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportFluentCaseResults object.\n\nset_default\n\nSet the default values of the ImportFluentCaseResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseResults.html#import-detail","title":"ImportFluentCaseResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseResults.html#property-detail","title":"ImportFluentCaseResults > Property detail","text":"Property detail\n\n\n\nproperty ImportFluentCaseResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseResults.html#method-detail","title":"ImportFluentCaseResults > Method detail","text":"Method detail\n\n\n\nImportFluentCaseResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportFluentCaseResults.__str__() -> str\n\n\n\n\n\nstatic ImportFluentCaseResults.print_default()\n\nPrint the default values of ImportFluentCaseResults object.\n\nExamples\n\n>>> ImportFluentCaseResults.print_default()\n\n\n\nstatic ImportFluentCaseResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ImportFluentCaseResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_pipe_tee_dsco.html#ansysmeshingprimeexamplesdownload_pipe_tee_dsco","title":"ansys.meshing.prime.examples.download_pipe_tee_dsco","text":"ansys.meshing.prime.examples.download_pipe_tee_dsco\n\n\n\nansys.meshing.prime.examples.download_pipe_tee_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the pipe tee example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_pipe_tee_fmd.html#ansysmeshingprimeexamplesdownload_pipe_tee_fmd","title":"ansys.meshing.prime.examples.download_pipe_tee_fmd","text":"ansys.meshing.prime.examples.download_pipe_tee_fmd\n\n\n\nansys.meshing.prime.examples.download_pipe_tee_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the pipe tee example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Option to  download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeZoneletParams.html#scopezoneletparams","title":"ScopeZoneletParams","text":"ScopeZoneletParams\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.ScopeZoneletParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to get the scoped face or edge zonelets.\n\nParameters\n\nmodel (Model) – Model to create a ScopeZoneletParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ScopeZoneletParams object with provided parameters.\n\nExamples\n\n>>> scope_zonelet_params = prime.ScopeZoneletParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeZoneletParams.html#overview","title":"ScopeZoneletParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScopeZoneletParams object.\n\nset_default\n\nSet the default values of the ScopeZoneletParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeZoneletParams.html#import-detail","title":"ScopeZoneletParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeZoneletParams.html#method-detail","title":"ScopeZoneletParams > Method detail","text":"Method detail\n\n\n\nScopeZoneletParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScopeZoneletParams.__str__() -> str\n\n\n\n\n\nstatic ScopeZoneletParams.print_default()\n\nPrint the default values of ScopeZoneletParams object.\n\nExamples\n\n>>> ScopeZoneletParams.print_default()\n\n\n\nstatic ScopeZoneletParams.set_default()\n\nSet the default values of the ScopeZoneletParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteInteriorNodesParams.html#deleteinteriornodesparams","title":"DeleteInteriorNodesParams","text":"DeleteInteriorNodesParams\n\n\n\nclass ansys.meshing.prime.DeleteInteriorNodesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merge_face_normals_angle: float = None, merge_edge_allow_self_close: bool = None, edge_sharp_corner_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters for delete interior nodes operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteInteriorNodesParams object with default parameters.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteInteriorNodesParams object with provided parameters.\n\nExamples\n\n>>> delete_interior_nodes_params = prime.DeleteInteriorNodesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteInteriorNodesParams.html#overview","title":"DeleteInteriorNodesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_sharp_corner_angle\n\nMerge edges when the angle between the edges are below the provided value.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmerge_face_normals_angle\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteInteriorNodesParams object.\n\nset_default\n\nSet the default values of the DeleteInteriorNodesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteInteriorNodesParams.html#import-detail","title":"DeleteInteriorNodesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteInteriorNodesParams.html#property-detail","title":"DeleteInteriorNodesParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteInteriorNodesParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DeleteInteriorNodesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DeleteInteriorNodesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteInteriorNodesParams.html#method-detail","title":"DeleteInteriorNodesParams > Method detail","text":"Method detail\n\n\n\nDeleteInteriorNodesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteInteriorNodesParams.__str__() -> str\n\n\n\n\n\nstatic DeleteInteriorNodesParams.print_default()\n\nPrint the default values of DeleteInteriorNodesParams object.\n\nExamples\n\n>>> DeleteInteriorNodesParams.print_default()\n\n\n\nstatic DeleteInteriorNodesParams.set_default(merge_face_normals_angle: float = None, merge_edge_allow_self_close: bool = None, edge_sharp_corner_angle: float = None)\n\nSet the default values of the DeleteInteriorNodesParams object.\n\nParameters\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/index.html#the-meshpy-module","title":"The mesh.py module","text":"The mesh.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/index.html#summary","title":"The mesh.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDisplayMeshInfo\n\nContains the mesh information to display.\n\nMesh\n\nProcesses the mesh for visualization in the GUI.\n\nEnums\n\n\n\n\n\nColorByType\n\nContains the zone types to display.\n\nDisplayMeshType\n\nContains the mesh types to display.\n\nFunctions\n\n\n\n\n\ncompute_distance\n\nCompute the distance between two points.\n\ncompute_face_list_from_structured_nodes\n\nCompute the distances from the nodes.\n\nAttributes\n\n\n\n\n\ncolor_matrix\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/index.html#description","title":"The mesh.py module > Description","text":"Description\n\nProcess the mesh for visualization in the GUI."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/index.html#module-detail","title":"The mesh.py module > Module detail","text":"Module detail\n\n\n\nmesh.color_matrix\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/ErrorCode.html#errorcode","title":"ErrorCode","text":"ErrorCode\n\n\n\nclass ansys.meshing.prime.autogen.primeconfig.ErrorCode\n\nError codes associated with the failure of PyPrimeMesh operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/ErrorCode.html#overview","title":"ErrorCode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nADDINGPROVIDEDENTITIESNOTSUPPORTEDFORTOPOLOGYPART\n\nAdding provided entities is not supported for part with topology data.\n\nADDTHICKNESSRESULTSFAILED\n\nAdding thickness failed.\n\nAITOVERLAPALONGMULTIFOUND\n\nTopology identification failed because of overlapping faces.\n\nALIGNMENTFAILED\n\nAlignment failed.\n\nALREADYVOLUMEMESHED\n\nVolume is already meshed.\n\nAUTOMESHFAILED\n\nAuto meshing failed.\n\nAUTOMESHHEXCOREFAILED\n\nHex generation part of volume meshing failed.\n\nAUTOMESHINITFAILED\n\nAuto mesh initialization failed.\n\nAUTOMESHINVALIDMAXSIZE\n\nInvalid max size for auto volume meshing.\n\nAUTONODEMOVEFAILED\n\nAuto node move failed.\n\nAUTOQUADMESHER_INVALIDMINMAXSIZES\n\nDifference in maximum value and minimum value is negative.\n\nAUTOQUADMESHER_NEGATIVEINPUTPARAMETER\n\nAutoquadmesher error codes.\n\nBOIRESULTSFAILED\n\nBOI creation failed.\n\nCADGEOMETRYNOTFOUND\n\nNo CAD Geometry found for projections.\n\nCADIMPORTFAILED\n\nCAD import failed.\n\nCELLSEPARATIONFAILED\n\nCell separation failed.\n\nCHECKPERIODICPAIRSFAILED\n\nCould not find a matching periodic face pair.\n\nCOLOCATEFUSEDNODESFAILED\n\nColocation of fused nodes failed.\n\nCOMPUTEVOLUMESFAILED\n\nCompute volumes failed.\n\nCONTACTPATCHRESULTSFAILED\n\nContact patch creation process failed. Check the inputs.\n\nCONTROLNOTFOUND\n\nControl not found.\n\nCREATEBOI_INVALIDFLOWDIRECTION\n\nBOI creation failed. Invalid flow or wake direction.\n\nCREATEBOI_INVALIDSCALE\n\nBOI creation failed. Scale factors should not be less than one.\n\nCREATEBOI_INVALIDSCOPE\n\nBOI creation failed. Invalid face zonelets as input.\n\nCREATEBOI_INVALIDTYPEFORWRAP\n\nBOI creation failed. Wrapping is invalid for this BOI type.\n\nCREATEBOI_INVALIDWAKELEVELS\n\nBOI creation failed. Invalid wake levels input.\n\nCREATEBOI_IVALIDWRAPMESHSIZE\n\nBOI creation failed. Wrap cannot be performed with invalid mesh size.\n\nCREATECAPONFACEZONELETSFAILED\n\nFailed to create cap on face zonelets.\n\nCREATECONTACTPATCH_INVALIDCONTACTPATCHAXIS\n\nContact patch creation process failed. Invalid contact patch creation axis.\n\nCREATECONTACTPATCH_INVALIDOFFSETDISTANCE\n\nContact patch creation process failed. Scale factors should not be less than zero.\n\nCREATECONTACTPATCH_INVALIDTOLERANCEVALUE\n\nContact patch creation process failed. Tolerance value should not be less than zero.\n\nCREATEEDGEZONELETFAILED\n\nCreating edge zonelet failed.\n\nDELETECONTROLSFAILED\n\nDelete controls failed.\n\nDELETEFRINGESANDOVERLAPSFAILED\n\nDeleting fringes and overlaps failed.\n\nDELETEMESHFACESFAILED\n\nDelete Mesh faces failed\n\nDELETEMESHFACES_CELLFOUND\n\nDeleting faces failed as they have cell neighbors.\n\nDELETEMESHFACES_TOPOLOGYNOTSUPPORTED\n\nTopoentities do not support deleting faces.\n\nDELETEMESHFAILED\n\nDeleting mesh failed.\n\nDELETEPARTSFAILED\n\nDelete parts failed.\n\nDELETEVOLUMESFAILED\n\nDelete volumes failed.\n\nDELETEZONELETSCONNECTEDTOCELLS\n\nCannot delete zonelets connected to volume mesh.\n\nDELETEZONELETSFAILED\n\nDelete zonelets failed.\n\nDUPLICATEFACESFOUND\n\nDuplicate faces found.\n\nDUPLICATENODESFOUND\n\nDuplicate nodes found.\n\nEDGEINTERSECTINGFACEFOUND\n\nEdge intersecting face found.\n\nENTITIESSHOULDBEADDEDTOZONEUSINGPARTITBELONGS\n\nEntities should be added to zone using part it belongs.\n\nEXPORTFLUENTCASEFAILED\n\nExport fluent case failed.\n\nEXPORTFLUENTMESHINGMSHFAILED\n\nExport fluent meshing mesh failed.\n\nEXPORTSTLFAILED\n\nExport STL failed.\n\nEXPORTSTLFAILEDWITHEMPTYPARTIDLIST\n\nExport STL failed. List of part ids is empty.\n\nEXPORTSTLFAILEDWITHHIGHERORDERMESH\n\nExport STL not supported for higher order mesh.\n\nEXPORTSTLFAILEDWITHINCORRECTPARTID\n\nExport STL failed. Part id is incorrect.\n\nEXPORTSTLFAILEDWITHPOLYFACES\n\nExport STL not supported for mesh with poly faces.\n\nEXPORTSTLFAILEDWITHQUADFACES\n\nExport STL not supported for mesh with quad faces.\n\nEXPORTSTLFAILEDWITHTOPOLOGY\n\nExport STL not supported for part with topology data.\n\nEXTRACTFEATURESBYANGLEFAILED\n\nFeature extraction by angle failed.\n\nEXTRACTFEATURESBYEDGESFAILED\n\nExtracting features by angle failed.\n\nEXTRACTFEATURESBYINTERSECTIONFAILED\n\nFeature extraction by intersection failed.\n\nEXTRACTVOLUMESFAILED\n\nExtract volumes failed.\n\nFACEZONELETSFEATURESNOTUPTODATE\n\nFace zonelets features are not up to date.\n\nFACEZONELETSHAVECELLSCONNECTED\n\nFace zonelets have cells connected.\n\nFILENOTFOUND\n\nFile path or name not found.\n\nFILLHOLEFAILED\n\nUnable to create capping surface.\n\nFREEZEMESHERROR\n\nCannot remesh freezed mesh.\n\nFUSEINTERIORFAILED\n\nFusing interior region of overlap failed.\n\nFUSEOPTIONINVALID\n\nInvalid option chosen to connect two different parts.\n\nGETELEMENTCOUNTFAILED\n\nFailed to get element count.\n\nGETSTATISTICSFAILED\n\nFailed to get mesh statistics.\n\nIGA_EDGEPATHCOMPUTATIONFAILED\n\nEdge path computation failed.\n\nIGA_HREFINEMENTFAILED\n\nH-refinement of spline failed.\n\nIGA_INCORRECTCONTROLPOINTSIZEWRTDEGREE\n\nIncorrect control point size with respect to degree.\n\nIGA_INCORRECTCONTROLPOINTSIZEWRTINPUT\n\nIncorrect control point size with respect to mesh size.\n\nIGA_INCORRECTDEGREE\n\nIncorrect degree.\n\nIGA_INVALIDINPUTFILEFORGENUSZEROFITTING\n\nInvalid model for genus-zero spline fitting.\n\nIGA_INVALIDINPUTFILEFORSTRUCTUREDHEXMESHFITTING\n\nInvalid model for structured hex-mesh spline fitting.\n\nIGA_NEGATIVEJACOBIAN\n\nSpline has negative jacobian.\n\nIGA_NOCELLZONELETS\n\nNo cell zonelets found.\n\nIGA_NODEINDEXINGFAILED\n\nHex mesh is unstructured.\n\nIGA_NOFACEZONELETS\n\nNo face zonelets found.\n\nIGA_NURBSFITTINGFAILED\n\nSpline fitting failed.\n\nIGA_NURBSOPFAILED\n\nSpline operation failed.\n\nIGA_NURBSSMOOTHFAILED\n\nSmoothing of spline failed.\n\nIGA_PERIODICKNOTVECTORCONVERSIONFAILED\n\nPeriodic knot conversion of spline failed.\n\nIGA_PREFINEMENTFAILED\n\nP-refinement of spline failed.\n\nIGA_QUADRATICMESHINPUT\n\nQuadratic mesh is not supported for solid spline creation.\n\nIGA_QUADTOSPLINEBASISFAILED\n\nQuad to spline operation failed.\n\nIGA_UNIFORMTRIMMEDNURBSFAILED\n\nUniform trimmed spline creation failed.\n\nIMPORTABAQUSFAILEDDURINGMESHCREATION\n\nImport Abaqus failed. Failed to create mesh entities.\n\nIMPORTABAQUSFAILEDWITHPARSINGFAILURE\n\nImport Abaqus failed. Failed to parse file.\n\nIMPORTABAQUSFAILEDWITHUNKNOWNERROR\n\nImport Abaqus failed. Failed with unknown error.\n\nIMPORTFLUENTCASEFAILED\n\nFailed to import fluent case file.\n\nIMPORTFLUENTMESHINGMSHFAILED\n\nFailed to import fluent meshing mesh file.\n\nIMPRINTBOUNDARYEDGESFAILED\n\nImprint of boundary edges failed.\n\nIMPRINTBOUNDARYNODESFAILED\n\nImprint of boundary nodes failed.\n\nIMPROVESURFACEMESHQUALITYFAILED\n\nImprove surface mesh quality failed.\n\nINCLUDEKFILENOTFOUND\n\nInclude keyword file not found.\n\nINCREMENTALVOLUMEMESHINGNOTSUPPORTED\n\nIncremental volume meshing is not supported.\n\nINPUTNOTCOMPLETE\n\nInput provided is incomplete.\n\nINTERRUPTED\n\nMethod call interrupted.\n\nINTERSECTIONINCUTTERVOLUMES\n\nFound overlapping or intersecting cutter volumes.\n\nINTERSECTIONINTARGETVOLUMES\n\nFound overlapping or intersecting target volumes.\n\nINVALIDCELLQUALITYLIMIT\n\nInvalid cell quality limit.\n\nINVALIDCMBLOCKFORMAT\n\nCMBLOCK command format error in CDB file.\n\nINVALIDCONTROLPARAMS\n\nInvalid control parameters.\n\nINVALIDCURVATURESIZINGINPUT\n\nInvalid curvature sizing input.\n\nINVALIDFILEEXTENSIONFORFLUENTCASEEXPORT\n\nProvided file extension is invalid. If cff_format is set to False, then supported extensions are .cas and .cas.gz. If cff_format is set to True, then supported extension is .cas.h5 .\n\nINVALIDFIRSTASPECTRATIO\n\nInvalid first aspect ratio.\n\nINVALIDFIRSTHEIGHT\n\nInvalid first height.\n\nINVALIDGLOBALMINMAX\n\nInvalid global min and max value.\n\nINVALIDGROWTHRATE\n\nInvalid growth rate.\n\nINVALIDINPUTPART\n\nInvalid input part.\n\nINVALIDINPUTPOINT\n\nInvalid input point.\n\nINVALIDINPUTVOLUMES\n\nList of volume ids provided is empty or incorrect.\n\nINVALIDINPUTZONELETS\n\nInvalid input zonelets.\n\nINVALIDLASTASPECTRATIO\n\nInvalid last aspect ratio.\n\nINVALIDLAYERS\n\nInvalid number of layers.\n\nINVALIDNEIGHBORVOLUMES\n\nInvalid neighbor volumes selected to merge volumes.\n\nINVALIDPLANEPOINTS\n\nInvalid plane points, cannot define a plane.\n\nINVALIDPRISMCONTROLS\n\nInvalid prism controls.\n\nINVALIDPRISMCONTROLS_INCORRECTSCOPEENTITY\n\nInvalid scope entity.\n\nINVALIDPROXIMITYSIZINGINPUT\n\nInvalid proximity sizing input.\n\nINVALIDREGISTERID\n\nInvalid register id provided. Register ids between 1 to 28 are valid.\n\nINVALIDSCOPEENTITYTYPEINPUT\n\nInvalid input scope entity type.\n\nINVALIDSHELLBLCONTROLS\n\nInvalid ShellBL controls.\n\nINVALIDSHELLBLCONTROLS_INCORRECTSCOPEENTITY\n\nInvalid scope entity.\n\nINVALIDSIZECONTROLINPUTS\n\nInvalid size control input.\n\nINVALIDSIZECONTROLS\n\nInvalid size controls.\n\nINVALIDSIZECONTROLSCOPE\n\nInvalid size control scope.\n\nINVALIDTHINVOLUMECONTROLS\n\nInvalid input provided for thin volume control.\n\nINVALIDTRANSFORMATIONMATRIX\n\nInvalid transformation matrix.\n\nINVALIDVOLUMECONTROLS\n\nInvalid volume controls specified for volume meshing.\n\nINVALIDWRAPPERCONTROL\n\nInvalid wrapper control.\n\nLOCALSURFERINVALIDNUMRINGS\n\nInvalid number of rings input for the local surface mesh operation.\n\nMATCHMORPH_BCPAIRINPUTTYPEMISMATCH\n\nEntity type does not match with input for defined boundary condition pair.\n\nMATCHMORPH_INVALIDSOURCEINPUT\n\nInvalid source input for match morphing.\n\nMATERIALPOINTWITHGIVENIDDOESNTEXIST\n\nMaterial point with the given ID already exists.\n\nMATERIALPOINTWITHGIVENNAMEDOESNTEXIST\n\nMaterial point with the given name does not exist.\n\nMATERIALPOINTWITHSAMENAMEEXISTS\n\nMaterial point with the same name already exists.\n\nMERGEPARTSFAILED\n\nMerge parts failed.\n\nMERGEPARTSWANDWOTOPO\n\nMerge parts with topology and parts without topology are not supported.\n\nMERGESMALLZONELETSSUPPORTEDFORFACEZONELETS\n\nMerge small zonelets option is supported for only face zonelets.\n\nMERGEVOLUMESFAILED\n\nMerge volumes failed.\n\nMERGEVOLUMESNOTSUPPORTEDFORTOPOLOGYPART\n\nMerge volumes is not supported for part with topology data.\n\nMERGEZONELETSFAILED\n\nMerge zonelets failed.\n\nMERGEZONELETSNOTSUPPORTEDFORTOPOLOGYPART\n\nMerge zonelets is not supported for part with topology data.\n\nMESHDECOUPLEDFAILED\n\nInvalid load balancing or failed in volume meshing for one or more parts.\n\nMESHNOTFOUNDTOEXPORTFLUENTMESHINGMESH\n\nMesh not found to export fluent meshing mesh.\n\nMICROSTRUCTUREBADSHAPEPROPERTIES\n\nBad shape properties.\n\nMICROSTRUCTUREINVALIDELEMENTTYPE\n\nInvalid input provided. Invalid Element Type.\n\nMICROSTRUCTUREINVALIDSHAPETYPE\n\nInvalid input provided. Invalid Shape.\n\nMICROSTRUCTUREQUADRATICHEXREQUIREDQUADRATICVOXELGRID\n\nVolume mesh generation for hexahedra requires generation of a quadratic voxel grid.\n\nMICROSTRUCTUREREMESHNOTSUPPORTED\n\nSurface remesh operation is not supported.\n\nMICROSTRUCTURESMOOTHNOTSUPPORTED\n\nSmoothing operation is not supported.\n\nMICROSTRUCTUREWRONGAPICALLSEQUENCE\n\nWrong API call sequence.\n\nMORPHER_COMPUTEBCS\n\nFailed to compute boundary conditions.\n\nMULTIZONEMESHER_BLOCKINGFAILED\n\nCreating MultiZone blocking failed.\n\nMULTIZONEMESHER_MESHINGFAILED\n\nGenerating MultiZone mesh failed.\n\nMULTIZONEMESHER_MESHTRANSFERFAILED\n\nMultiZone mesh transfer failed.\n\nMULTIZONEMESHER_MULTIPLECONTROLSNOTSUPPORTED\n\nMultiZone mesh does not support multiple controls.\n\nMULTIZONEMESHER_NOVOLUMESFORGEOMETRYTRANSFER\n\nNo volumes for geometry import.\n\nMULTIZONEMESHER_NOVOLUMESSCOPEDINCURRENTPART\n\nNo volumes for geometry import in the current part.\n\nMULTIZONEMESHER_USERINPUTTOPOLOGYMISSING\n\nInput does not have topology for MultiZone mesh.\n\nNOACTIVESFFOUND\n\nNo active size fields found.\n\nNOCELLSSEPARATED\n\nNo cells separated based on given input.\n\nNOERROR\n\nNo error.\n\nNOINPUT\n\nNo input provided.\n\nNOTSUPPORTEDFORDISTRIBUTEMESHING\n\nMethod not supported for distributed meshing.\n\nNOTSUPPORTEDFORHIGHERORDERMESHPART\n\nOperation does not support higher order elements.\n\nNOTSUPPORTEDFORNONQUADFACEZONE\n\nOperation supports only quads.\n\nNOTSUPPORTEDFORNONTRIFACEZONE\n\nOnly triangular face zone is supported.\n\nNOTSUPPORTEDFORPOLYMESHPART\n\nOperation does not support poly elements.\n\nNOTSUPPORTEDFORTOPOLOGYPART\n\nNot supported for part with topology data.\n\nNUMENMETHODNOTFOUND\n\nCould not find numen method.\n\nOCTREELIMITREACHED\n\nLimit reached for the number of octants supported.\n\nOGRIDREFINEFAILED\n\nPost refinement of ShellBl quads failed.\n\nOUTOFMEMORY\n\nOut of memory.\n\nPARTDOESNOTHAVETOPOLOGY\n\nPart does not have topology.\n\nPARTHASTOPOLOGY\n\nPart has a topology.\n\nPARTNOTFOUND\n\nGiven part not found.\n\nPARTNOTMESHED\n\nPart is not meshed.\n\nPATHNOTFOUND\n\nInvalid path.\n\nPERIODICEDGESNOTSUPPORTEDFORSHELLBL\n\nPeriodic surfaces selected for ShellBL generation are not supported.\n\nPERIODICRECOVERYFORALREADYVOLUMEMESHEDPART\n\nPeriodic recovery unsupported for already volume meshed part.\n\nPERIODICSURFACESEDGESMISMATCH\n\nEdge entities do not match on periodic source and target surfaces.\n\nPERIODICSURFACESNOTSUPPORTEDFORPRISMS\n\nPeriodic surfaces selected for prism generation are not supported.\n\nPLANECOLLINEARPOINTS\n\nCollinear or duplicate points given to define plane.\n\nPLUGINLOADFAILURE\n\nFailed to load Surface Editor plugin.\n\nPOLYMESHFAILED\n\nPoly meshing failed.\n\nPREPAREFORVOLUMEMESHINGFAILED\n\nPrepare for volume meshing failed.\n\nPRISMMESHFAILED\n\nPrism meshing failed.\n\nPROJECTONCADGEOMETRYFAILED\n\nProjection on CAD Geometry failed.\n\nPYRAMIDMESHFAILED\n\nPyramid meshing failed.\n\nQUADRATICMESHSUPPORTEDONLYFORTETS\n\nQuadratic elements can only be generated for tetrahedral elements.\n\nQUADRATICMESH_WRITEMESHFAILED\n\nWriting failed with quadratic mesh.\n\nQUADRATICTETNOTSUPPORTEDINPARALLEL\n\nQuadratic tetrahedal meshing is not supported in parallel mode.\n\nQUADRATICTETNOTSUPPORTEDWITHPRISMS\n\nQuadratic tetrahedral meshing is not supported with prism.\n\nREADCDBFAILED\n\nReading CDB file failed.\n\nREADKEYWORDFILEFAILED\n\nReading LS-Dyna Keyword file failed.\n\nREADMESHFAILED\n\nReading mesh file failed.\n\nREADPMDATFAILED\n\nPMDAT file read failed.\n\nREADSHELLBLCONTROLFAILED\n\nRead thin ShellBL control failed.\n\nREADSIZECONTROLFAILED\n\nReading size control file failed.\n\nREADSIZEFIELDFAILED\n\nReading size field file failed.\n\nRECOVERPERIODICSURFACESFAILED\n\nUnable to recover periodic surfaces.\n\nRECOVERPERIODICSURFACESINVALIDSCOPE\n\nInvalid scope input for periodic surface recovery.\n\nREFINEATCONTACTSFAILED\n\nFailed to refine at contacts.\n\nREFRESHSIZEFIELDSFAILED\n\nRefreshing size field failed.\n\nREMESHFACEZONELETSLOCALLYNOTSUPPORTEDFORTOPOLOGYPART\n\nRemesh face zonelets locally is not supported for topology part.\n\nREMESHFACEZONELETSNOTSUPPORTEDFORTOPOLOGYPART\n\nRemesh face zonelets is not supported for topology part.\n\nSCAFFOLDERBADINPUTEMPTYTOPO\n\nIncorrect input. No topo faces or edges in input.\n\nSCAFFOLDERBADINPUTNOFREEFACES\n\nIncorrect input. No free faces in input.\n\nSCAFFOLDERBADINPUTPARAMS\n\nIncorrect input parameters.\n\nSCAFFOLDERINVALIDABSOLUTEDISTOL\n\nInvalid absolute distance tolerance for scaffold operation.\n\nSCAFFOLDERINVALIDCONSTANTMESHSIZE\n\nInvalid constant mesh size input for scaffold operation.\n\nSCALINGFAILED\n\nScaling failed.\n\nSEPARATIONRESULTSFAILED\n\nSeparation failed.\n\nSETNAMEFAILED\n\nSet name failed.\n\nSHELLBLCONTROLFAILED\n\nWrite ShellBL control failed.\n\nSHELLBLFAILED\n\nShellBL creation failed.\n\nSHELLBLFEWLAYERS\n\nOnly few ShellBL layers are created.\n\nSHELLBLNOMESH\n\nShellBL is not supported for unmeshed topofaces.\n\nSHELLBLQUADS\n\nShellBL quads.\n\nSHELLBLWRONGTOPO\n\nFound topofaces with invalid topology.\n\nSIDEZONELETSNOTFIT\n\nSide face zonelets are not sweepable for thin volume mesh.\n\nSIGSEGV\n\nSegmentation violation.\n\nSIZEFIELDCOMPUTATIONFAILED\n\nSize field computation failed.\n\nSIZEFIELDNOTFOUND\n\nSize field not found.\n\nSIZEFIELDTYPENOTSUPPORTED\n\nProvided Size Field Type is not supported by this operation.\n\nSMOOTHSIZETRANSITIONNOTSUPPORTEDFORTOPO\n\nSmooth size transition option is not supported for topology surface meshing yet.\n\nSOURCEFACINGCELLZONELETS\n\nSource face zonelets facing existing volume mesh.\n\nSOURCEORTARGETNOTSPECIFIED\n\nNo target or source faces specified.\n\nSOURCETARGETZONELETSNOTFIT\n\nSource and target zonelets do not fit to thin volume mesh.\n\nSPHEREATINVALIDNORMALNODESFAILED\n\nSphere creation at invalid normals failed.\n\nSPLITANDCOLLAPSEFACEELEMENTSFAILED\n\nFailed to split and collapse face element(s).\n\nSPLITINTERSECTINGBOUNDARYEDGESFAILED\n\nSplitting of intersecting boundary edges failed.\n\nSPLITTOTRIFAILED\n\nShellBL quads split to triangles failed.\n\nSTACKER_BASEFACEUNMESHED\n\nBase face list input has unmeshed topofaces.\n\nSTACKER_FACESEPARATIONFAILED\n\nStacker failed to separate base face.\n\nSTACKER_FAILED\n\nStacker failed to mesh the model.\n\nSTACKER_INCORRECTBODYDEFINITION\n\nSome bodies are intersecting or incorrectly defined.\n\nSTACKER_INVALIDBASEFACEINPUT\n\nBase face list input is invalid.\n\nSTACKER_INVALIDINPUTVOLUMES\n\nInvalid input volumes provided to stacker.\n\nSTACKER_INVALIDPARAMS\n\nInvalid parameters provided to stacker.\n\nSTACKER_MESHEDFACESFOUND\n\nSome faces in the input model have existing mesh.\n\nSTACKER_NOFACEFOUNDINVOLUMES\n\nNo faces are found in the specified volumes.\n\nSTACKER_NONSTACKABLEVOLUMESFOUND\n\nSome volumes are not aligned in the stacking direction.\n\nSTITCHENTITIESFAILED\n\nStitch entities failed.\n\nSTITCHWITHPRESERVEDENTITIESFAILED\n\nStitch with preserved entities failed.\n\nSUBTRACTVOLUMEFAILED\n\nFailed to subtract volumes.\n\nSUBTRACTZONELETSFAILED\n\nUnable to subtract cutters from input zonelets.\n\nSURFACEFEATURETYPENOTSUPPORTED\n\nSurface search for provided feature type is not supported.\n\nSURFACESEARCHFAILED\n\nSurface search failed.\n\nSURFACESEARCHPARTWITHMESHNOTFOUND\n\nPart with mesh not found for surface quality check.\n\nSURFERAUTOSIZEMUSTBEVOLUMETRIC\n\nAuto sizing must be of volumetric type.\n\nSURFERAUTOSIZEQUADUNSUPPORTED\n\nAuto sizing for quad meshing is not supported.\n\nSURFERCANNOTREMESHPERIODICZONELETS\n\nCannot remesh periodic face zonelets.\n\nSURFERFAILED\n\nSurface meshing failed.\n\nSURFERINVALIDANGLES\n\nInvalid Corner angle or min angle more than max angle specified for surface meshing.\n\nSURFERINVALIDCONSTANTSIZE\n\nInvalid size for constant size surface meshing.\n\nSURFERINVALIDINPUT\n\nInvalid input for surface meshing.\n\nSURFERINVALIDMINORMAXSIZES\n\nInvalid min or max size for surface meshing.\n\nSURFERLAYEREDQUADFAILED\n\nFailed to layer quad meshing.\n\nSURFERNONMANIFOLDEDGE\n\nNon manifold edge for meshing.\n\nSURFEROPENINITIALFRONTLOOP\n\nOpen initial front loop for meshing.\n\nSURFERQUADFAILED\n\nQuad surface meshing failed.\n\nTARGETWITHCELLZONELETS\n\nTarget face zonelets with volume mesh on both side.\n\nTARGETZONELETS_NOTWATERTIGHT\n\nTarget zonelets do not form a watertight volume.\n\nTARGETZONELETS_SELFINTERSECTING\n\nTarget zonelets form a self intersecting volume.\n\nTETIMPROVEFAILED\n\nTet improve failed.\n\nTHINVOLUMECONTROLINVALIDCONTROL\n\nSame face scope is set as target for multiple thin volume controls.\n\nTHINVOLUMECONTROLINVALIDNUMBEROFLAYER\n\nInvalid number of layers provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDSCOPE\n\nSame source and target scope provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDSOURCESCOPE\n\nInvalid source scope provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDSOURCESCOPEENTITY\n\nInvalid source scope entity provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDTARGETSCOPE\n\nInvalid target scope provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDTARGETSCOPEENTITY\n\nInvalid target scope entity provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDVOLUMESCOPE\n\nInvalid volume scope provided for thin volume control.\n\nTHINVOLUMECONTROLSAMESOURCEFORMORETHANTWOCONTROL\n\nSame face scope is set as source for more than two thin volume controls.\n\nTHINVOLUMECONTROLTOPOLOGYNOTSUPPORTED\n\nThin volume mesh controls not supported for part with topology data.\n\nTHINVOLUMEMESHFAILED\n\nThin volume meshing failed.\n\nTHINVOLUMEMESHNOTSUPPORTEDWITHFACEBASEDDATABASE\n\nThin volume mesh is not supported with face based database.\n\nTOLERANCEVALUEINVALID\n\nInvalid tolerance value specified.\n\nTOOLZONELETS_NOTWATERTIGHT\n\nTool zonelets do not form a watertight volume.\n\nTOOLZONELETS_SELFINTERSECTING\n\nTool zonelets form a self intersecting volume.\n\nTOPODATANOTFOUND\n\nTopoData not found.\n\nTOPOEDGESREMESHFAILED\n\nFailed to remesh topoedges.\n\nTOPOFACESREMESHFAILED\n\nFailed to remesh topofaces.\n\nTRANSFORMATIONFAILED\n\nTransformation failed.\n\nTRIANGULATIONFAILED\n\nTriangulation failed.\n\nUNITEZONELETSFAILED\n\nFailed to unite input zonelets.\n\nUNKNOWN\n\nUnknown error.\n\nUNSUPPORTEDFILEEXTENSIONFORFLUENTCASE\n\nProvided file extension is not supported. Supported extensions are .cas, .cas.gz and .cas.h5.\n\nUNSUPPORTEDFILEEXTENSIONFORFLUENTMESHINGMESH\n\nProvided file extension is not supported. Supported extensions are .msh and .msh.gz.\n\nUNSUPPORTEDFILEEXTENSIONFORFLUENTSIZEFIELD\n\nProvided file extension is not supported. Supported extensions are .sf and .sf.gz.\n\nUNSUPPORTEDFILEEXTENSIONFORKEYWORDFILE\n\nProvided file extension is not supported. Supported extensions are .k and .key.\n\nUNSUPPORTEDFILEEXTENSIONFORMAPDLCDB\n\nProvided file extension is not supported. Supported extension is .cdb.\n\nUNSUPPORTEDFILEEXTENSIONFORPMDAT\n\nProvided file extension is not supported. Supported extensions are .pmdat and .pmdat.gz.\n\nUNSUPPORTEDFILEEXTENSIONFORSIZEFIELD\n\nProvided file extension is not supported. Supported extensions are .psf and .psf.gz.\n\nVOLUMEMESHNOTFOUND\n\nVolume mesh not found.\n\nVOLUMEMESH_MIDNODESNOTSUPPORTED\n\nMid side nodes are not supported.\n\nVOLUMENOTFOUND\n\nVolumes not found.\n\nVOLUMESEARCHFAILED\n\nVolume search failed.\n\nVOLUMESEARCHPARTWITHMESHNOTFOUND\n\nPart with mesh not found for volume quality check.\n\nVOLUMESNOTUPTODATE\n\nVolumes are not updated.\n\nVOLUMEZONESNOTFOUNDTOEXPORTFLUENTCASE\n\nVolume zones are not found to export fluent case.\n\nVT_COLLAPSESHORTEDGESFAILED\n\nCollapse short edges operation failed.\n\nVT_CREATELEADINGEDGEFAILED\n\nCreate leading edge operation failed.\n\nVT_CREATEMIDEDGEFAILED\n\nCreate mid edge operation failed.\n\nVT_FILLANNULARHOLEFAILED\n\nFill annular hole operation failed.\n\nVT_FILLHOLEFAILED\n\nFill hole operation failed.\n\nVT_INVALIDINPUT\n\nInvalid input provided for VT operation.\n\nVT_MERGEFACESFAILED\n\nMerge faces operation failed.\n\nVT_MERGETHINEXTFAILED\n\nMerge thin extensions operation failed.\n\nVT_MERGETHINSTRIPESFAILED\n\nMerge thin stripes operation failed.\n\nVT_OPERATIONFAILED\n\nVT operation failed.\n\nVT_PINCHFACESFAILED\n\nPinch faces operation failed.\n\nVT_REPAIRSHARPCORNERANGLESFAILED\n\nRepair sharp corner angles operation failed.\n\nVT_SEPARATEFACESFAILED\n\nSeparate faces operation failed.\n\nWRAPPERCLOSEGAPSFAILED\n\nWrapper gap closing failed.\n\nWRAPPERCLOSEGAPS_INVALIDGAPSIZE\n\nGap size specified for patching should be positive double.\n\nWRAPPERCLOSEGAPS_INVALIDRESOLUTIONFACTOR\n\nResolution Factor should be greater than 0 but less than or equal to 1.\n\nWRAPPERCLOSEGAPS_INVALIDSCOPE\n\nScope specified for close gaps is invalid.\n\nWRAPPERCONNECTFAILED\n\nWrapper connect failed.\n\nWRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLID\n\nContact prevention specified under wrapper control doesn’t exist.\n\nWRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLINPUTS\n\nContact prevention control specified under wrapper is invalid.\n\nWRAPPERCONTROL_INVALIDFEATURERECOVERYCONTROLID\n\nFeature recovery control specified under wrapper control doesn’t exist.\n\nWRAPPERCONTROL_INVALIDGEOMETRYSCOPE\n\nGeometry scope specified under wrapper control is invalid.\n\nWRAPPERCONTROL_INVALIDLEAKPREVENTIONCONTROLINPUTS\n\nLeak prevention control specified under wrapper is invalid.\n\nWRAPPERCONTROL_INVALIDLEAKPREVENTIONID\n\nLeak prevention specified under wrapper control doesn’t exist.\n\nWRAPPERCONTROL_LEAKPREVENTIONMPTCANNOTBELIVE\n\nDead material point cannot be same as live.\n\nWRAPPERCONTROL_LIVEMATERIALPOINTDOESNTEXIST\n\nLive material point does not exist for wrapper.\n\nWRAPPERCONTROL_MATERIALPOINTWITHGIVENNAMEDOESNTEXIST\n\nLive material point added to wrapper control doesn’t exist.\n\nWRAPPERCONTROL_NOLIVEMATERIALPOINTSPROVIDED\n\nLive material points list provided for wrapper control is empty.\n\nWRAPPERCOULDNOTEXTRACTINTERFACE\n\nFailed to extract wrapper interface.\n\nWRAPPERGLOBALSETTINGSNOTSET\n\nGlobal settings for wrapper not set.\n\nWRAPPERIMPROVEFAILED\n\nWrapper improve quality failed.\n\nWRAPPERLEAKINGFLUIDREGIONS\n\nTwo or more fluid regions leaking into each other.\n\nWRAPPERLEAKPREVENTIONFAILED\n\nWrapper leak prevention failed.\n\nWRAPPEROCTREEREGIONINGFAILED\n\nOctree regioning failed.\n\nWRAPPERPATCHFLOWREGIONS_EMPTYORINVALIDINPUT\n\nEmpty or invalid input face zonelet ids.\n\nWRAPPERPATCHFLOWREGIONS_FAILED\n\nUnable to create patch surfaces.\n\nWRAPPERPATCHFLOWREGIONS_INVALIDBASESIZE\n\nBase size specified for patching should be positive double.\n\nWRAPPERPATCHFLOWREGIONS_INVALIDHOLESIZE\n\nHole size specified for dead region should be positive double.\n\nWRAPPERPATCHFLOWREGIONS_TOOSMALLHOLESIZE\n\nToo small hole size provided for dead region.\n\nWRAPPERPROJECTIONFAILED\n\nProjection failed for wrapper.\n\nWRAPPERRESOLVEINTERSECTIONFAILED\n\nResolving intersections failed for wrapper.\n\nWRAPPERSIZEFIELDSNOTDEFINED\n\nNo size field ids provided for wrapping.\n\nWRAPPERSIZINGMETHODNOTSUPPORTED\n\nSizing method is not supported for wrapper.\n\nWRAPPERSURFACEHASHOLES\n\nWrapper surface has holes.\n\nWRAPPERUNSUPPORTEDWRAPREGION\n\nWrap region option provided does not support wrap operation.\n\nWRITECDBFAILED\n\nWriting CDB file failed.\n\nWRITEKEYWORDFILEFAILED\n\nWriting LS-Dyna Keyword file failed.\n\nWRITEMESHFAILED\n\nWriting mesh file failed.\n\nWRITEPMDATFAILED\n\nFailed to write PMDAT file.\n\nWRITESIZECONTROLFAILED\n\nWriting size control file failed.\n\nWRITESIZEFIELDFAILED\n\nWriting size field failed.\n\nZEROELEMENTSFORCDBEXPORT\n\nNo elements found for cdb export.\n\nZEROELEMENTSREADFROMCDBFILE\n\nNo elements read from CDB file.\n\nZERONODESREADFROMCDBFILE\n\nNo nodes read from CDB file.\n\nZONELETSARENOTOFSAMEDIMENSION\n\nZonelets are not of same dimension.\n\nZONENOTFOUND\n\nGiven zone not found.\n\nZONESARENOTOFSAMETYPE\n\nZones are not of same type.\n\nZONESARENOTSUPPORTEDFORCELLZONELETS\n\nZones are not supported for cell zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/ErrorCode.html#import-detail","title":"ErrorCode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/primeconfig/ErrorCode.html#attribute-detail","title":"ErrorCode > Attribute detail","text":"Attribute detail\n\n\n\nErrorCode.ADDINGPROVIDEDENTITIESNOTSUPPORTEDFORTOPOLOGYPART = 1205\n\nAdding provided entities is not supported for part with topology data.\n\n\n\nErrorCode.ADDTHICKNESSRESULTSFAILED = 380\n\nAdding thickness failed.\n\n\n\nErrorCode.AITOVERLAPALONGMULTIFOUND = 101\n\nTopology identification failed because of overlapping faces.\n\n\n\nErrorCode.ALIGNMENTFAILED = 3002\n\nAlignment failed.\n\n\n\nErrorCode.ALREADYVOLUMEMESHED = 110\n\nVolume is already meshed.\n\n\n\nErrorCode.AUTOMESHFAILED = 100\n\nAuto meshing failed.\n\n\n\nErrorCode.AUTOMESHHEXCOREFAILED = 117\n\nHex generation part of volume meshing failed.\n\n\n\nErrorCode.AUTOMESHINITFAILED = 139\n\nAuto mesh initialization failed.\n\n\n\nErrorCode.AUTOMESHINVALIDMAXSIZE = 116\n\nInvalid max size for auto volume meshing.\n\n\n\nErrorCode.AUTONODEMOVEFAILED = 107\n\nAuto node move failed.\n\n\n\nErrorCode.AUTOQUADMESHER_INVALIDMINMAXSIZES = 15001\n\nDifference in maximum value and minimum value is negative.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.AUTOQUADMESHER_NEGATIVEINPUTPARAMETER = 15000\n\nAutoquadmesher error codes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.BOIRESULTSFAILED = 381\n\nBOI creation failed.\n\n\n\nErrorCode.CADGEOMETRYNOTFOUND = 306\n\nNo CAD Geometry found for projections.\n\n\n\nErrorCode.CADIMPORTFAILED = 502\n\nCAD import failed.\n\n\n\nErrorCode.CELLSEPARATIONFAILED = 6000\n\nCell separation failed.\n\n\n\nErrorCode.CHECKPERIODICPAIRSFAILED = 2911\n\nCould not find a matching periodic face pair.\n\n\n\nErrorCode.COLOCATEFUSEDNODESFAILED = 851\n\nColocation of fused nodes failed.\n\n\n\nErrorCode.COMPUTEVOLUMESFAILED = 129\n\nCompute volumes failed.\n\n\n\nErrorCode.CONTACTPATCHRESULTSFAILED = 391\n\nContact patch creation process failed. Check the inputs.\n\n\n\nErrorCode.CONTROLNOTFOUND = 1304\n\nControl not found.\n\n\n\nErrorCode.CREATEBOI_INVALIDFLOWDIRECTION = 383\n\nBOI creation failed. Invalid flow or wake direction.\n\n\n\nErrorCode.CREATEBOI_INVALIDSCALE = 382\n\nBOI creation failed. Scale factors should not be less than one.\n\n\n\nErrorCode.CREATEBOI_INVALIDSCOPE = 387\n\nBOI creation failed. Invalid face zonelets as input.\n\n\n\nErrorCode.CREATEBOI_INVALIDTYPEFORWRAP = 386\n\nBOI creation failed. Wrapping is invalid for this BOI type.\n\n\n\nErrorCode.CREATEBOI_INVALIDWAKELEVELS = 385\n\nBOI creation failed. Invalid wake levels input.\n\n\n\nErrorCode.CREATEBOI_IVALIDWRAPMESHSIZE = 384\n\nBOI creation failed. Wrap cannot be performed with invalid mesh size.\n\n\n\nErrorCode.CREATECAPONFACEZONELETSFAILED = 2906\n\nFailed to create cap on face zonelets.\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDCONTACTPATCHAXIS = 390\n\nContact patch creation process failed. Invalid contact patch creation axis.\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDOFFSETDISTANCE = 388\n\nContact patch creation process failed. Scale factors should not be less than zero.\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDTOLERANCEVALUE = 389\n\nContact patch creation process failed. Tolerance value should not be less than zero.\n\n\n\nErrorCode.CREATEEDGEZONELETFAILED = 1602\n\nCreating edge zonelet failed.\n\n\n\nErrorCode.DELETECONTROLSFAILED = 1307\n\nDelete controls failed.\n\n\n\nErrorCode.DELETEFRINGESANDOVERLAPSFAILED = 3203\n\nDeleting fringes and overlaps failed.\n\n\n\nErrorCode.DELETEMESHFACESFAILED = 3200\n\nDelete Mesh faces failed\n\n\n\nErrorCode.DELETEMESHFACES_CELLFOUND = 3202\n\nDeleting faces failed as they have cell neighbors.\n\n\n\nErrorCode.DELETEMESHFACES_TOPOLOGYNOTSUPPORTED = 3201\n\nTopoentities do not support deleting faces.\n\n\n\nErrorCode.DELETEMESHFAILED = 142\n\nDeleting mesh failed.\n\n\n\nErrorCode.DELETEPARTSFAILED = 1306\n\nDelete parts failed.\n\n\n\nErrorCode.DELETEVOLUMESFAILED = 134\n\nDelete volumes failed.\n\n\n\nErrorCode.DELETEZONELETSCONNECTEDTOCELLS = 3204\n\nCannot delete zonelets connected to volume mesh.\n\n\n\nErrorCode.DELETEZONELETSFAILED = 3205\n\nDelete zonelets failed.\n\n\n\nErrorCode.DUPLICATEFACESFOUND = 105\n\nDuplicate faces found.\n\n\n\nErrorCode.DUPLICATENODESFOUND = 103\n\nDuplicate nodes found.\n\n\n\nErrorCode.EDGEINTERSECTINGFACEFOUND = 104\n\nEdge intersecting face found.\n\n\n\nErrorCode.ENTITIESSHOULDBEADDEDTOZONEUSINGPARTITBELONGS = 309\n\nEntities should be added to zone using part it belongs.\n\n\n\nErrorCode.EXPORTFLUENTCASEFAILED = 526\n\nExport fluent case failed.\n\n\n\nErrorCode.EXPORTFLUENTMESHINGMSHFAILED = 531\n\nExport fluent meshing mesh failed.\n\n\n\nErrorCode.EXPORTSTLFAILED = 549\n\nExport STL failed.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHEMPTYPARTIDLIST = 557\n\nExport STL failed. List of part ids is empty.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHHIGHERORDERMESH = 556\n\nExport STL not supported for higher order mesh.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHINCORRECTPARTID = 558\n\nExport STL failed. Part id is incorrect.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHPOLYFACES = 555\n\nExport STL not supported for mesh with poly faces.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHQUADFACES = 554\n\nExport STL not supported for mesh with quad faces.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHTOPOLOGY = 553\n\nExport STL not supported for part with topology data.\n\n\n\nErrorCode.EXTRACTFEATURESBYANGLEFAILED = 1600\n\nFeature extraction by angle failed.\n\n\n\nErrorCode.EXTRACTFEATURESBYEDGESFAILED = 1601\n\nExtracting features by angle failed.\n\n\n\nErrorCode.EXTRACTFEATURESBYINTERSECTIONFAILED = 1603\n\nFeature extraction by intersection failed.\n\n\n\nErrorCode.EXTRACTVOLUMESFAILED = 132\n\nExtract volumes failed.\n\n\n\nErrorCode.FACEZONELETSFEATURESNOTUPTODATE = 10\n\nFace zonelets features are not up to date.\n\n\n\nErrorCode.FACEZONELETSHAVECELLSCONNECTED = 10205\n\nFace zonelets have cells connected.\n\n\n\nErrorCode.FILENOTFOUND = 524\n\nFile path or name not found.\n\n\n\nErrorCode.FILLHOLEFAILED = 2901\n\nUnable to create capping surface.\n\n\n\nErrorCode.FREEZEMESHERROR = 30\n\nCannot remesh freezed mesh.\n\n\n\nErrorCode.FUSEINTERIORFAILED = 855\n\nFusing interior region of overlap failed.\n\n\n\nErrorCode.FUSEOPTIONINVALID = 850\n\nInvalid option chosen to connect two different parts.\n\n\n\nErrorCode.GETELEMENTCOUNTFAILED = 251\n\nFailed to get element count.\n\n\n\nErrorCode.GETSTATISTICSFAILED = 250\n\nFailed to get mesh statistics.\n\n\n\nErrorCode.IGA_EDGEPATHCOMPUTATIONFAILED = 2414\n\nEdge path computation failed.\n\n\n\nErrorCode.IGA_HREFINEMENTFAILED = 2406\n\nH-refinement of spline failed.\n\n\n\nErrorCode.IGA_INCORRECTCONTROLPOINTSIZEWRTDEGREE = 2401\n\nIncorrect control point size with respect to degree.\n\n\n\nErrorCode.IGA_INCORRECTCONTROLPOINTSIZEWRTINPUT = 2402\n\nIncorrect control point size with respect to mesh size.\n\n\n\nErrorCode.IGA_INCORRECTDEGREE = 2415\n\nIncorrect degree.\n\n\n\nErrorCode.IGA_INVALIDINPUTFILEFORGENUSZEROFITTING = 2412\n\nInvalid model for genus-zero spline fitting.\n\n\n\nErrorCode.IGA_INVALIDINPUTFILEFORSTRUCTUREDHEXMESHFITTING = 2411\n\nInvalid model for structured hex-mesh spline fitting.\n\n\n\nErrorCode.IGA_NEGATIVEJACOBIAN = 2404\n\nSpline has negative jacobian.\n\n\n\nErrorCode.IGA_NOCELLZONELETS = 2410\n\nNo cell zonelets found.\n\n\n\nErrorCode.IGA_NODEINDEXINGFAILED = 2409\n\nHex mesh is unstructured.\n\n\n\nErrorCode.IGA_NOFACEZONELETS = 2413\n\nNo face zonelets found.\n\n\n\nErrorCode.IGA_NURBSFITTINGFAILED = 2403\n\nSpline fitting failed.\n\n\n\nErrorCode.IGA_NURBSOPFAILED = 2400\n\nSpline operation failed.\n\n\n\nErrorCode.IGA_NURBSSMOOTHFAILED = 2408\n\nSmoothing of spline failed.\n\n\n\nErrorCode.IGA_PERIODICKNOTVECTORCONVERSIONFAILED = 2405\n\nPeriodic knot conversion of spline failed.\n\n\n\nErrorCode.IGA_PREFINEMENTFAILED = 2407\n\nP-refinement of spline failed.\n\n\n\nErrorCode.IGA_QUADRATICMESHINPUT = 2416\n\nQuadratic mesh is not supported for solid spline creation.\n\n\n\nErrorCode.IGA_QUADTOSPLINEBASISFAILED = 2421\n\nQuad to spline operation failed.\n\n\n\nErrorCode.IGA_UNIFORMTRIMMEDNURBSFAILED = 2417\n\nUniform trimmed spline creation failed.\n\n\n\nErrorCode.IMPORTABAQUSFAILEDDURINGMESHCREATION = 16202\n\nImport Abaqus failed. Failed to create mesh entities.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.IMPORTABAQUSFAILEDWITHPARSINGFAILURE = 16201\n\nImport Abaqus failed. Failed to parse file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.IMPORTABAQUSFAILEDWITHUNKNOWNERROR = 16200\n\nImport Abaqus failed. Failed with unknown error.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.IMPORTFLUENTCASEFAILED = 529\n\nFailed to import fluent case file.\n\n\n\nErrorCode.IMPORTFLUENTMESHINGMSHFAILED = 528\n\nFailed to import fluent meshing mesh file.\n\n\n\nErrorCode.IMPRINTBOUNDARYEDGESFAILED = 853\n\nImprint of boundary edges failed.\n\n\n\nErrorCode.IMPRINTBOUNDARYNODESFAILED = 852\n\nImprint of boundary nodes failed.\n\n\n\nErrorCode.IMPROVESURFACEMESHQUALITYFAILED = 2102\n\nImprove surface mesh quality failed.\n\n\n\nErrorCode.INCLUDEKFILENOTFOUND = 520\n\nInclude keyword file not found.\n\n\n\nErrorCode.INCREMENTALVOLUMEMESHINGNOTSUPPORTED = 143\n\nIncremental volume meshing is not supported.\n\n\n\nErrorCode.INPUTNOTCOMPLETE = 1308\n\nInput provided is incomplete.\n\n\n\nErrorCode.INTERRUPTED = 201\n\nMethod call interrupted.\n\n\n\nErrorCode.INTERSECTIONINCUTTERVOLUMES = 49\n\nFound overlapping or intersecting cutter volumes.\n\n\n\nErrorCode.INTERSECTIONINTARGETVOLUMES = 48\n\nFound overlapping or intersecting target volumes.\n\n\n\nErrorCode.INVALIDCELLQUALITYLIMIT = 2852\n\nInvalid cell quality limit.\n\n\n\nErrorCode.INVALIDCMBLOCKFORMAT = 16502\n\nCMBLOCK command format error in CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.INVALIDCONTROLPARAMS = 12201\n\nInvalid control parameters.\n\n\n\nErrorCode.INVALIDCURVATURESIZINGINPUT = 1503\n\nInvalid curvature sizing input.\n\n\n\nErrorCode.INVALIDFILEEXTENSIONFORFLUENTCASEEXPORT = 9009\n\nProvided file extension is invalid. If cff_format is set to False, then supported extensions are .cas and .cas.gz. If cff_format is set to True, then supported extension is .cas.h5 .\n\n\n\nErrorCode.INVALIDFIRSTASPECTRATIO = 124\n\nInvalid first aspect ratio.\n\n\n\nErrorCode.INVALIDFIRSTHEIGHT = 126\n\nInvalid first height.\n\n\n\nErrorCode.INVALIDGLOBALMINMAX = 1500\n\nInvalid global min and max value.\n\n\n\nErrorCode.INVALIDGROWTHRATE = 128\n\nInvalid growth rate.\n\n\n\nErrorCode.INVALIDINPUTPART = 305\n\nInvalid input part.\n\n\n\nErrorCode.INVALIDINPUTPOINT = 16000\n\nInvalid input point.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.INVALIDINPUTVOLUMES = 1312\n\nList of volume ids provided is empty or incorrect.\n\n\n\nErrorCode.INVALIDINPUTZONELETS = 1309\n\nInvalid input zonelets.\n\n\n\nErrorCode.INVALIDLASTASPECTRATIO = 125\n\nInvalid last aspect ratio.\n\n\n\nErrorCode.INVALIDLAYERS = 127\n\nInvalid number of layers.\n\n\n\nErrorCode.INVALIDNEIGHBORVOLUMES = 136\n\nInvalid neighbor volumes selected to merge volumes.\n\n\n\nErrorCode.INVALIDPLANEPOINTS = 2804\n\nInvalid plane points, cannot define a plane.\n\n\n\nErrorCode.INVALIDPRISMCONTROLS = 111\n\nInvalid prism controls.\n\n\n\nErrorCode.INVALIDPRISMCONTROLS_INCORRECTSCOPEENTITY = 123\n\nInvalid scope entity.\n\n\n\nErrorCode.INVALIDPROXIMITYSIZINGINPUT = 1504\n\nInvalid proximity sizing input.\n\n\n\nErrorCode.INVALIDREGISTERID = 2806\n\nInvalid register id provided. Register ids between 1 to 28 are valid.\n\n\n\nErrorCode.INVALIDSCOPEENTITYTYPEINPUT = 1505\n\nInvalid input scope entity type.\n\n\n\nErrorCode.INVALIDSHELLBLCONTROLS = 67\n\nInvalid ShellBL controls.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.INVALIDSHELLBLCONTROLS_INCORRECTSCOPEENTITY = 68\n\nInvalid scope entity.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.INVALIDSIZECONTROLINPUTS = 1501\n\nInvalid size control input.\n\n\n\nErrorCode.INVALIDSIZECONTROLS = 401\n\nInvalid size controls.\n\n\n\nErrorCode.INVALIDSIZECONTROLSCOPE = 1502\n\nInvalid size control scope.\n\n\n\nErrorCode.INVALIDTHINVOLUMECONTROLS = 12101\n\nInvalid input provided for thin volume control.\n\n\n\nErrorCode.INVALIDTRANSFORMATIONMATRIX = 3003\n\nInvalid transformation matrix.\n\n\n\nErrorCode.INVALIDVOLUMECONTROLS = 118\n\nInvalid volume controls specified for volume meshing.\n\n\n\nErrorCode.INVALIDWRAPPERCONTROL = 3427\n\nInvalid wrapper control.\n\n\n\nErrorCode.LOCALSURFERINVALIDNUMRINGS = 44\n\nInvalid number of rings input for the local surface mesh operation.\n\n\n\nErrorCode.MATCHMORPH_BCPAIRINPUTTYPEMISMATCH = 1451\n\nEntity type does not match with input for defined boundary condition pair.\n\n\n\nErrorCode.MATCHMORPH_INVALIDSOURCEINPUT = 1450\n\nInvalid source input for match morphing.\n\n\n\nErrorCode.MATERIALPOINTWITHGIVENIDDOESNTEXIST = 3302\n\nMaterial point with the given ID already exists.\n\n\n\nErrorCode.MATERIALPOINTWITHGIVENNAMEDOESNTEXIST = 3301\n\nMaterial point with the given name does not exist.\n\n\n\nErrorCode.MATERIALPOINTWITHSAMENAMEEXISTS = 3300\n\nMaterial point with the same name already exists.\n\n\n\nErrorCode.MERGEPARTSFAILED = 1301\n\nMerge parts failed.\n\n\n\nErrorCode.MERGEPARTSWANDWOTOPO = 1302\n\nMerge parts with topology and parts without topology are not supported.\n\n\n\nErrorCode.MERGESMALLZONELETSSUPPORTEDFORFACEZONELETS = 1311\n\nMerge small zonelets option is supported for only face zonelets.\n\n\n\nErrorCode.MERGEVOLUMESFAILED = 133\n\nMerge volumes failed.\n\n\n\nErrorCode.MERGEVOLUMESNOTSUPPORTEDFORTOPOLOGYPART = 1207\n\nMerge volumes is not supported for part with topology data.\n\n\n\nErrorCode.MERGEZONELETSFAILED = 1310\n\nMerge zonelets failed.\n\n\n\nErrorCode.MERGEZONELETSNOTSUPPORTEDFORTOPOLOGYPART = 1206\n\nMerge zonelets is not supported for part with topology data.\n\n\n\nErrorCode.MESHDECOUPLEDFAILED = 16900\n\nInvalid load balancing or failed in volume meshing for one or more parts.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.MESHNOTFOUNDTOEXPORTFLUENTMESHINGMESH = 533\n\nMesh not found to export fluent meshing mesh.\n\n\n\nErrorCode.MICROSTRUCTUREBADSHAPEPROPERTIES = 13003\n\nBad shape properties.\n\n\n\nErrorCode.MICROSTRUCTUREINVALIDELEMENTTYPE = 13000\n\nInvalid input provided. Invalid Element Type.\n\n\n\nErrorCode.MICROSTRUCTUREINVALIDSHAPETYPE = 13001\n\nInvalid input provided. Invalid Shape.\n\n\n\nErrorCode.MICROSTRUCTUREQUADRATICHEXREQUIREDQUADRATICVOXELGRID = 13006\n\nVolume mesh generation for hexahedra requires generation of a quadratic voxel grid.\n\n\n\nErrorCode.MICROSTRUCTUREREMESHNOTSUPPORTED = 13005\n\nSurface remesh operation is not supported.\n\n\n\nErrorCode.MICROSTRUCTURESMOOTHNOTSUPPORTED = 13004\n\nSmoothing operation is not supported.\n\n\n\nErrorCode.MICROSTRUCTUREWRONGAPICALLSEQUENCE = 13002\n\nWrong API call sequence.\n\n\n\nErrorCode.MORPHER_COMPUTEBCS = 1410\n\nFailed to compute boundary conditions.\n\n\n\nErrorCode.MULTIZONEMESHER_BLOCKINGFAILED = 2601\n\nCreating MultiZone blocking failed.\n\n\n\nErrorCode.MULTIZONEMESHER_MESHINGFAILED = 2603\n\nGenerating MultiZone mesh failed.\n\n\n\nErrorCode.MULTIZONEMESHER_MESHTRANSFERFAILED = 2604\n\nMultiZone mesh transfer failed.\n\n\n\nErrorCode.MULTIZONEMESHER_MULTIPLECONTROLSNOTSUPPORTED = 2611\n\nMultiZone mesh does not support multiple controls.\n\n\n\nErrorCode.MULTIZONEMESHER_NOVOLUMESFORGEOMETRYTRANSFER = 2612\n\nNo volumes for geometry import.\n\n\n\nErrorCode.MULTIZONEMESHER_NOVOLUMESSCOPEDINCURRENTPART = 2613\n\nNo volumes for geometry import in the current part.\n\n\n\nErrorCode.MULTIZONEMESHER_USERINPUTTOPOLOGYMISSING = 2610\n\nInput does not have topology for MultiZone mesh.\n\n\n\nErrorCode.NOACTIVESFFOUND = 114\n\nNo active size fields found.\n\n\n\nErrorCode.NOCELLSSEPARATED = 6001\n\nNo cells separated based on given input.\n\n\n\nErrorCode.NOERROR = 0\n\nNo error.\n\n\n\nErrorCode.NOINPUT = 1305\n\nNo input provided.\n\n\n\nErrorCode.NOTSUPPORTEDFORDISTRIBUTEMESHING = 2001\n\nMethod not supported for distributed meshing.\n\n\n\nErrorCode.NOTSUPPORTEDFORHIGHERORDERMESHPART = 1201\n\nOperation does not support higher order elements.\n\n\n\nErrorCode.NOTSUPPORTEDFORNONQUADFACEZONE = 1203\n\nOperation supports only quads.\n\n\n\nErrorCode.NOTSUPPORTEDFORNONTRIFACEZONE = 1202\n\nOnly triangular face zone is supported.\n\n\n\nErrorCode.NOTSUPPORTEDFORPOLYMESHPART = 1208\n\nOperation does not support poly elements.\n\n\n\nErrorCode.NOTSUPPORTEDFORTOPOLOGYPART = 1200\n\nNot supported for part with topology data.\n\n\n\nErrorCode.NUMENMETHODNOTFOUND = 3801\n\nCould not find numen method.\n\n\n\nErrorCode.OCTREELIMITREACHED = 3350\n\nLimit reached for the number of octants supported.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.OGRIDREFINEFAILED = 65\n\nPost refinement of ShellBl quads failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.OUTOFMEMORY = 200\n\nOut of memory.\n\n\n\nErrorCode.PARTDOESNOTHAVETOPOLOGY = 310\n\nPart does not have topology.\n\n\n\nErrorCode.PARTHASTOPOLOGY = 2800\n\nPart has a topology.\n\n\n\nErrorCode.PARTNOTFOUND = 300\n\nGiven part not found.\n\n\n\nErrorCode.PARTNOTMESHED = 304\n\nPart is not meshed.\n\n\n\nErrorCode.PATHNOTFOUND = 511\n\nInvalid path.\n\n\n\nErrorCode.PERIODICEDGESNOTSUPPORTEDFORSHELLBL = 69\n\nPeriodic surfaces selected for ShellBL generation are not supported.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.PERIODICRECOVERYFORALREADYVOLUMEMESHEDPART = 2913\n\nPeriodic recovery unsupported for already volume meshed part.\n\n\n\nErrorCode.PERIODICSURFACESEDGESMISMATCH = 2912\n\nEdge entities do not match on periodic source and target surfaces.\n\n\n\nErrorCode.PERIODICSURFACESNOTSUPPORTEDFORPRISMS = 135\n\nPeriodic surfaces selected for prism generation are not supported.\n\n\n\nErrorCode.PLANECOLLINEARPOINTS = 2805\n\nCollinear or duplicate points given to define plane.\n\n\n\nErrorCode.PLUGINLOADFAILURE = 10001\n\nFailed to load Surface Editor plugin.\n\n\n\nErrorCode.POLYMESHFAILED = 140\n\nPoly meshing failed.\n\n\n\nErrorCode.PREPAREFORVOLUMEMESHINGFAILED = 2000\n\nPrepare for volume meshing failed.\n\n\n\nErrorCode.PRISMMESHFAILED = 138\n\nPrism meshing failed.\n\n\n\nErrorCode.PROJECTONCADGEOMETRYFAILED = 351\n\nProjection on CAD Geometry failed.\n\n\n\nErrorCode.PYRAMIDMESHFAILED = 141\n\nPyramid meshing failed.\n\n\n\nErrorCode.QUADRATICMESHSUPPORTEDONLYFORTETS = 113\n\nQuadratic elements can only be generated for tetrahedral elements.\n\n\n\nErrorCode.QUADRATICMESH_WRITEMESHFAILED = 519\n\nWriting failed with quadratic mesh.\n\n\n\nErrorCode.QUADRATICTETNOTSUPPORTEDINPARALLEL = 130\n\nQuadratic tetrahedal meshing is not supported in parallel mode.\n\n\n\nErrorCode.QUADRATICTETNOTSUPPORTEDWITHPRISMS = 131\n\nQuadratic tetrahedral meshing is not supported with prism.\n\n\n\nErrorCode.READCDBFAILED = 505\n\nReading CDB file failed.\n\n\n\nErrorCode.READKEYWORDFILEFAILED = 517\n\nReading LS-Dyna Keyword file failed.\n\n\n\nErrorCode.READMESHFAILED = 500\n\nReading mesh file failed.\n\n\n\nErrorCode.READPMDATFAILED = 525\n\nPMDAT file read failed.\n\n\n\nErrorCode.READSHELLBLCONTROLFAILED = 567\n\nRead thin ShellBL control failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.READSIZECONTROLFAILED = 522\n\nReading size control file failed.\n\n\n\nErrorCode.READSIZEFIELDFAILED = 503\n\nReading size field file failed.\n\n\n\nErrorCode.RECOVERPERIODICSURFACESFAILED = 2909\n\nUnable to recover periodic surfaces.\n\n\n\nErrorCode.RECOVERPERIODICSURFACESINVALIDSCOPE = 2910\n\nInvalid scope input for periodic surface recovery.\n\n\n\nErrorCode.REFINEATCONTACTSFAILED = 2908\n\nFailed to refine at contacts.\n\n\n\nErrorCode.REFRESHSIZEFIELDSFAILED = 402\n\nRefreshing size field failed.\n\n\n\nErrorCode.REMESHFACEZONELETSLOCALLYNOTSUPPORTEDFORTOPOLOGYPART = 32\n\nRemesh face zonelets locally is not supported for topology part.\n\n\n\nErrorCode.REMESHFACEZONELETSNOTSUPPORTEDFORTOPOLOGYPART = 31\n\nRemesh face zonelets is not supported for topology part.\n\n\n\nErrorCode.SCAFFOLDERBADINPUTEMPTYTOPO = 50\n\nIncorrect input. No topo faces or edges in input.\n\n\n\nErrorCode.SCAFFOLDERBADINPUTNOFREEFACES = 51\n\nIncorrect input. No free faces in input.\n\n\n\nErrorCode.SCAFFOLDERBADINPUTPARAMS = 52\n\nIncorrect input parameters.\n\n\n\nErrorCode.SCAFFOLDERINVALIDABSOLUTEDISTOL = 53\n\nInvalid absolute distance tolerance for scaffold operation.\n\n\n\nErrorCode.SCAFFOLDERINVALIDCONSTANTMESHSIZE = 54\n\nInvalid constant mesh size input for scaffold operation.\n\n\n\nErrorCode.SCALINGFAILED = 3001\n\nScaling failed.\n\n\n\nErrorCode.SEPARATIONRESULTSFAILED = 360\n\nSeparation failed.\n\n\n\nErrorCode.SETNAMEFAILED = 1303\n\nSet name failed.\n\n\n\nErrorCode.SHELLBLCONTROLFAILED = 566\n\nWrite ShellBL control failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLFAILED = 60\n\nShellBL creation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLFEWLAYERS = 63\n\nOnly few ShellBL layers are created.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLNOMESH = 62\n\nShellBL is not supported for unmeshed topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLQUADS = 61\n\nShellBL quads.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLWRONGTOPO = 64\n\nFound topofaces with invalid topology.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SIDEZONELETSNOTFIT = 121\n\nSide face zonelets are not sweepable for thin volume mesh.\n\n\n\nErrorCode.SIGSEGV = 2\n\nSegmentation violation.\n\n\n\nErrorCode.SIZEFIELDCOMPUTATIONFAILED = 400\n\nSize field computation failed.\n\n\n\nErrorCode.SIZEFIELDNOTFOUND = 302\n\nSize field not found.\n\n\n\nErrorCode.SIZEFIELDTYPENOTSUPPORTED = 8001\n\nProvided Size Field Type is not supported by this operation.\n\n\n\nErrorCode.SMOOTHSIZETRANSITIONNOTSUPPORTEDFORTOPO = 43\n\nSmooth size transition option is not supported for topology surface meshing yet.\n\n\n\nErrorCode.SOURCEFACINGCELLZONELETS = 119\n\nSource face zonelets facing existing volume mesh.\n\n\n\nErrorCode.SOURCEORTARGETNOTSPECIFIED = 857\n\nNo target or source faces specified.\n\n\n\nErrorCode.SOURCETARGETZONELETSNOTFIT = 122\n\nSource and target zonelets do not fit to thin volume mesh.\n\n\n\nErrorCode.SPHEREATINVALIDNORMALNODESFAILED = 350\n\nSphere creation at invalid normals failed.\n\n\n\nErrorCode.SPLITANDCOLLAPSEFACEELEMENTSFAILED = 2101\n\nFailed to split and collapse face element(s).\n\n\n\nErrorCode.SPLITINTERSECTINGBOUNDARYEDGESFAILED = 854\n\nSplitting of intersecting boundary edges failed.\n\n\n\nErrorCode.SPLITTOTRIFAILED = 66\n\nShellBL quads split to triangles failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.STACKER_BASEFACEUNMESHED = 10111\n\nBase face list input has unmeshed topofaces.\n\n\n\nErrorCode.STACKER_FACESEPARATIONFAILED = 10103\n\nStacker failed to separate base face.\n\n\n\nErrorCode.STACKER_FAILED = 10104\n\nStacker failed to mesh the model.\n\n\n\nErrorCode.STACKER_INCORRECTBODYDEFINITION = 10110\n\nSome bodies are intersecting or incorrectly defined.\n\n\n\nErrorCode.STACKER_INVALIDBASEFACEINPUT = 10107\n\nBase face list input is invalid.\n\n\n\nErrorCode.STACKER_INVALIDINPUTVOLUMES = 10101\n\nInvalid input volumes provided to stacker.\n\n\n\nErrorCode.STACKER_INVALIDPARAMS = 10102\n\nInvalid parameters provided to stacker.\n\n\n\nErrorCode.STACKER_MESHEDFACESFOUND = 10106\n\nSome faces in the input model have existing mesh.\n\n\n\nErrorCode.STACKER_NOFACEFOUNDINVOLUMES = 10105\n\nNo faces are found in the specified volumes.\n\n\n\nErrorCode.STACKER_NONSTACKABLEVOLUMESFOUND = 10109\n\nSome volumes are not aligned in the stacking direction.\n\n\n\nErrorCode.STITCHENTITIESFAILED = 859\n\nStitch entities failed.\n\n\n\nErrorCode.STITCHWITHPRESERVEDENTITIESFAILED = 858\n\nStitch with preserved entities failed.\n\n\n\nErrorCode.SUBTRACTVOLUMEFAILED = 47\n\nFailed to subtract volumes.\n\n\n\nErrorCode.SUBTRACTZONELETSFAILED = 2903\n\nUnable to subtract cutters from input zonelets.\n\n\n\nErrorCode.SURFACEFEATURETYPENOTSUPPORTED = 2807\n\nSurface search for provided feature type is not supported.\n\n\n\nErrorCode.SURFACESEARCHFAILED = 2802\n\nSurface search failed.\n\n\n\nErrorCode.SURFACESEARCHPARTWITHMESHNOTFOUND = 2803\n\nPart with mesh not found for surface quality check.\n\n\n\nErrorCode.SURFERAUTOSIZEMUSTBEVOLUMETRIC = 12\n\nAuto sizing must be of volumetric type.\n\n\n\nErrorCode.SURFERAUTOSIZEQUADUNSUPPORTED = 11\n\nAuto sizing for quad meshing is not supported.\n\n\n\nErrorCode.SURFERCANNOTREMESHPERIODICZONELETS = 45\n\nCannot remesh periodic face zonelets.\n\n\n\nErrorCode.SURFERFAILED = 3\n\nSurface meshing failed.\n\n\n\nErrorCode.SURFERINVALIDANGLES = 42\n\nInvalid Corner angle or min angle more than max angle specified for surface meshing.\n\n\n\nErrorCode.SURFERINVALIDCONSTANTSIZE = 40\n\nInvalid size for constant size surface meshing.\n\n\n\nErrorCode.SURFERINVALIDINPUT = 7\n\nInvalid input for surface meshing.\n\n\n\nErrorCode.SURFERINVALIDMINORMAXSIZES = 41\n\nInvalid min or max size for surface meshing.\n\n\n\nErrorCode.SURFERLAYEREDQUADFAILED = 6\n\nFailed to layer quad meshing.\n\n\n\nErrorCode.SURFERNONMANIFOLDEDGE = 14\n\nNon manifold edge for meshing.\n\n\n\nErrorCode.SURFEROPENINITIALFRONTLOOP = 16\n\nOpen initial front loop for meshing.\n\n\n\nErrorCode.SURFERQUADFAILED = 8\n\nQuad surface meshing failed.\n\n\n\nErrorCode.TARGETWITHCELLZONELETS = 120\n\nTarget face zonelets with volume mesh on both side.\n\n\n\nErrorCode.TARGETZONELETS_NOTWATERTIGHT = 10003\n\nTarget zonelets do not form a watertight volume.\n\n\n\nErrorCode.TARGETZONELETS_SELFINTERSECTING = 10002\n\nTarget zonelets form a self intersecting volume.\n\n\n\nErrorCode.TETIMPROVEFAILED = 106\n\nTet improve failed.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDCONTROL = 12110\n\nSame face scope is set as target for multiple thin volume controls.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDNUMBEROFLAYER = 12107\n\nInvalid number of layers provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSCOPE = 12104\n\nSame source and target scope provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSOURCESCOPE = 12102\n\nInvalid source scope provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSOURCESCOPEENTITY = 12105\n\nInvalid source scope entity provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDTARGETSCOPE = 12103\n\nInvalid target scope provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDTARGETSCOPEENTITY = 12106\n\nInvalid target scope entity provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDVOLUMESCOPE = 12109\n\nInvalid volume scope provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLSAMESOURCEFORMORETHANTWOCONTROL = 12111\n\nSame face scope is set as source for more than two thin volume controls.\n\n\n\nErrorCode.THINVOLUMECONTROLTOPOLOGYNOTSUPPORTED = 12108\n\nThin volume mesh controls not supported for part with topology data.\n\n\n\nErrorCode.THINVOLUMEMESHFAILED = 137\n\nThin volume meshing failed.\n\n\n\nErrorCode.THINVOLUMEMESHNOTSUPPORTEDWITHFACEBASEDDATABASE = 12112\n\nThin volume mesh is not supported with face based database.\n\n\n\nErrorCode.TOLERANCEVALUEINVALID = 856\n\nInvalid tolerance value specified.\n\n\n\nErrorCode.TOOLZONELETS_NOTWATERTIGHT = 10005\n\nTool zonelets do not form a watertight volume.\n\n\n\nErrorCode.TOOLZONELETS_SELFINTERSECTING = 10004\n\nTool zonelets form a self intersecting volume.\n\n\n\nErrorCode.TOPODATANOTFOUND = 301\n\nTopoData not found.\n\n\n\nErrorCode.TOPOEDGESREMESHFAILED = 5\n\nFailed to remesh topoedges.\n\n\n\nErrorCode.TOPOFACESREMESHFAILED = 4\n\nFailed to remesh topofaces.\n\n\n\nErrorCode.TRANSFORMATIONFAILED = 3000\n\nTransformation failed.\n\n\n\nErrorCode.TRIANGULATIONFAILED = 102\n\nTriangulation failed.\n\n\n\nErrorCode.UNITEZONELETSFAILED = 2907\n\nFailed to unite input zonelets.\n\n\n\nErrorCode.UNKNOWN = 1\n\nUnknown error.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTCASE = 9003\n\nProvided file extension is not supported. Supported extensions are .cas, .cas.gz and .cas.h5.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTMESHINGMESH = 9002\n\nProvided file extension is not supported. Supported extensions are .msh and .msh.gz.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTSIZEFIELD = 9005\n\nProvided file extension is not supported. Supported extensions are .sf and .sf.gz.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORKEYWORDFILE = 9004\n\nProvided file extension is not supported. Supported extensions are .k and .key.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORMAPDLCDB = 9007\n\nProvided file extension is not supported. Supported extension is .cdb.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORPMDAT = 9001\n\nProvided file extension is not supported. Supported extensions are .pmdat and .pmdat.gz.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORSIZEFIELD = 9006\n\nProvided file extension is not supported. Supported extensions are .psf and .psf.gz.\n\n\n\nErrorCode.VOLUMEMESHNOTFOUND = 1801\n\nVolume mesh not found.\n\n\n\nErrorCode.VOLUMEMESH_MIDNODESNOTSUPPORTED = 1800\n\nMid side nodes are not supported.\n\n\n\nErrorCode.VOLUMENOTFOUND = 307\n\nVolumes not found.\n\n\n\nErrorCode.VOLUMESEARCHFAILED = 2851\n\nVolume search failed.\n\n\n\nErrorCode.VOLUMESEARCHPARTWITHMESHNOTFOUND = 2850\n\nPart with mesh not found for volume quality check.\n\n\n\nErrorCode.VOLUMESNOTUPTODATE = 112\n\nVolumes are not updated.\n\n\n\nErrorCode.VOLUMEZONESNOTFOUNDTOEXPORTFLUENTCASE = 527\n\nVolume zones are not found to export fluent case.\n\n\n\nErrorCode.VT_COLLAPSESHORTEDGESFAILED = 3608\n\nCollapse short edges operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_CREATELEADINGEDGEFAILED = 3610\n\nCreate leading edge operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_CREATEMIDEDGEFAILED = 3611\n\nCreate mid edge operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_FILLANNULARHOLEFAILED = 3607\n\nFill annular hole operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_FILLHOLEFAILED = 3606\n\nFill hole operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_INVALIDINPUT = 3600\n\nInvalid input provided for VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_MERGEFACESFAILED = 3601\n\nMerge faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_MERGETHINEXTFAILED = 3603\n\nMerge thin extensions operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_MERGETHINSTRIPESFAILED = 3602\n\nMerge thin stripes operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_OPERATIONFAILED = 3612\n\nVT operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_PINCHFACESFAILED = 3605\n\nPinch faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_REPAIRSHARPCORNERANGLESFAILED = 3604\n\nRepair sharp corner angles operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_SEPARATEFACESFAILED = 3609\n\nSeparate faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERCLOSEGAPSFAILED = 3442\n\nWrapper gap closing failed.\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDGAPSIZE = 3440\n\nGap size specified for patching should be positive double.\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDRESOLUTIONFACTOR = 3443\n\nResolution Factor should be greater than 0 but less than or equal to 1.\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDSCOPE = 3441\n\nScope specified for close gaps is invalid.\n\n\n\nErrorCode.WRAPPERCONNECTFAILED = 3402\n\nWrapper connect failed.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLID = 3421\n\nContact prevention specified under wrapper control doesn’t exist.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLINPUTS = 3422\n\nContact prevention control specified under wrapper is invalid.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDFEATURERECOVERYCONTROLID = 3425\n\nFeature recovery control specified under wrapper control doesn’t exist.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDGEOMETRYSCOPE = 3420\n\nGeometry scope specified under wrapper control is invalid.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDLEAKPREVENTIONCONTROLINPUTS = 3424\n\nLeak prevention control specified under wrapper is invalid.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDLEAKPREVENTIONID = 3423\n\nLeak prevention specified under wrapper control doesn’t exist.\n\n\n\nErrorCode.WRAPPERCONTROL_LEAKPREVENTIONMPTCANNOTBELIVE = 3426\n\nDead material point cannot be same as live.\n\n\n\nErrorCode.WRAPPERCONTROL_LIVEMATERIALPOINTDOESNTEXIST = 3414\n\nLive material point does not exist for wrapper.\n\n\n\nErrorCode.WRAPPERCONTROL_MATERIALPOINTWITHGIVENNAMEDOESNTEXIST = 3413\n\nLive material point added to wrapper control doesn’t exist.\n\n\n\nErrorCode.WRAPPERCONTROL_NOLIVEMATERIALPOINTSPROVIDED = 3408\n\nLive material points list provided for wrapper control is empty.\n\n\n\nErrorCode.WRAPPERCOULDNOTEXTRACTINTERFACE = 3405\n\nFailed to extract wrapper interface.\n\n\n\nErrorCode.WRAPPERGLOBALSETTINGSNOTSET = 3400\n\nGlobal settings for wrapper not set.\n\n\n\nErrorCode.WRAPPERIMPROVEFAILED = 3416\n\nWrapper improve quality failed.\n\n\n\nErrorCode.WRAPPERLEAKINGFLUIDREGIONS = 3444\n\nTwo or more fluid regions leaking into each other.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERLEAKPREVENTIONFAILED = 3406\n\nWrapper leak prevention failed.\n\n\n\nErrorCode.WRAPPEROCTREEREGIONINGFAILED = 3411\n\nOctree regioning failed.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_EMPTYORINVALIDINPUT = 3449\n\nEmpty or invalid input face zonelet ids.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_FAILED = 3446\n\nUnable to create patch surfaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_INVALIDBASESIZE = 3448\n\nBase size specified for patching should be positive double.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_INVALIDHOLESIZE = 3445\n\nHole size specified for dead region should be positive double.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_TOOSMALLHOLESIZE = 3447\n\nToo small hole size provided for dead region.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPROJECTIONFAILED = 3412\n\nProjection failed for wrapper.\n\n\n\nErrorCode.WRAPPERRESOLVEINTERSECTIONFAILED = 3401\n\nResolving intersections failed for wrapper.\n\n\n\nErrorCode.WRAPPERSIZEFIELDSNOTDEFINED = 3419\n\nNo size field ids provided for wrapping.\n\n\n\nErrorCode.WRAPPERSIZINGMETHODNOTSUPPORTED = 3415\n\nSizing method is not supported for wrapper.\n\n\n\nErrorCode.WRAPPERSURFACEHASHOLES = 3410\n\nWrapper surface has holes.\n\n\n\nErrorCode.WRAPPERUNSUPPORTEDWRAPREGION = 3407\n\nWrap region option provided does not support wrap operation.\n\n\n\nErrorCode.WRITECDBFAILED = 506\n\nWriting CDB file failed.\n\n\n\nErrorCode.WRITEKEYWORDFILEFAILED = 518\n\nWriting LS-Dyna Keyword file failed.\n\n\n\nErrorCode.WRITEMESHFAILED = 501\n\nWriting mesh file failed.\n\n\n\nErrorCode.WRITEPMDATFAILED = 530\n\nFailed to write PMDAT file.\n\n\n\nErrorCode.WRITESIZECONTROLFAILED = 523\n\nWriting size control file failed.\n\n\n\nErrorCode.WRITESIZEFIELDFAILED = 532\n\nWriting size field failed.\n\n\n\nErrorCode.ZEROELEMENTSFORCDBEXPORT = 16600\n\nNo elements found for cdb export.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.ZEROELEMENTSREADFROMCDBFILE = 16500\n\nNo elements read from CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.ZERONODESREADFROMCDBFILE = 16501\n\nNo nodes read from CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.ZONELETSARENOTOFSAMEDIMENSION = 374\n\nZonelets are not of same dimension.\n\n\n\nErrorCode.ZONENOTFOUND = 308\n\nGiven zone not found.\n\n\n\nErrorCode.ZONESARENOTOFSAMETYPE = 303\n\nZones are not of same type.\n\n\n\nErrorCode.ZONESARENOTSUPPORTEDFORCELLZONELETS = 311\n\nZones are not supported for cell zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureResults.html#extractfeatureresults","title":"ExtractFeatureResults","text":"ExtractFeatureResults\n\n\n\nclass ansys.meshing.prime.ExtractFeatureResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult of edge zonelet extraction by angle.\n\nParameters\n\nmodel (Model) – Model to create a ExtractFeatureResults object with default parameters.\n\nprocessing_time (float, optional) – Time taken for edge extraction.\n\nerror_code (ErrorCode, optional) – Error code returned by edge extraction function.\n\nnew_edge_zonelets (Iterable[int], optional) – Ids of new edge zonelets extracted.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractFeatureResults object with provided parameters.\n\nExamples\n\n>>> extract_feature_results = prime.ExtractFeatureResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureResults.html#overview","title":"ExtractFeatureResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code returned by edge extraction function.\n\nnew_edge_zonelets\n\nIds of new edge zonelets extracted.\n\nprocessing_time\n\nTime taken for edge extraction.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractFeatureResults object.\n\nset_default\n\nSet the default values of the ExtractFeatureResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureResults.html#import-detail","title":"ExtractFeatureResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureResults.html#property-detail","title":"ExtractFeatureResults > Property detail","text":"Property detail\n\n\n\nproperty ExtractFeatureResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code returned by edge extraction function.\n\n\n\nproperty ExtractFeatureResults.new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new edge zonelets extracted.\n\n\n\nproperty ExtractFeatureResults.processing_time: float\n\nTime taken for edge extraction."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractFeatureResults.html#method-detail","title":"ExtractFeatureResults > Method detail","text":"Method detail\n\n\n\nExtractFeatureResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractFeatureResults.__str__() -> str\n\n\n\n\n\nstatic ExtractFeatureResults.print_default()\n\nPrint the default values of ExtractFeatureResults object.\n\nExamples\n\n>>> ExtractFeatureResults.print_default()\n\n\n\nstatic ExtractFeatureResults.set_default(processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ExtractFeatureResults object.\n\nParameters\n\nprocessing_time (float, optional) – Time taken for edge extraction.\n\nerror_code (ErrorCode, optional) – Error code returned by edge extraction function.\n\nnew_edge_zonelets (Iterable[int], optional) – Ids of new edge zonelets extracted."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrolstructs/index.html#the-shellblcontrolstructspy-module","title":"The shellblcontrolstructs.py module","text":"The shellblcontrolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrolstructs/index.html#summary","title":"The shellblcontrolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nShellBLControlGrowthParams\n\nGrowth parameters for ShellBL control.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/shellblcontrolstructs/index.html#description","title":"The shellblcontrolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/Mesh.html#mesh","title":"Mesh","text":"Mesh\n\n\n\nclass ansys.meshing.prime.lucid.mesh_util.Mesh(model: ansys.meshing.prime.Model)\n\nProvides methods for users who are new to meshing.\n\nThis class also serves as a tutorial for commonly used meshing workflows.\n\nThe Mesh class provides these functionalities:\n\nSurface meshing with constant and variable sizing with triangle\nor quad dominant mesh\n\nVolume meshing with prism, tetrahedral, and polyhedral elements\n\nSurface wrapping\n\nHelper method for creating zones from labels\n\nHelper methods for reading and writing files"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/Mesh.html#overview","title":"Mesh > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncompute_volumes\n\nCompute volumes in the parts defined by the part expression.\n\nconnect_faces\n\nConnect face zonelets with a label name pattern within a given tolerance.\n\ncreate_constant_size_control\n\nGenerate constant size control on a scope.\n\ncreate_curvature_size_control\n\nGenerate a curvature size control on a scope.\n\ncreate_flow_volume\n\nCreate flow volume by the face labels defining the boundary of the volume.\n\ncreate_zones_from_labels\n\nCreate zones from labels.\n\ndelete_topology\n\nDelete topology in one or more parts.\n\nmerge_parts\n\nMerge multiple parts into a single part.\n\nread\n\nRead or import files of different formats based on file extensions.\n\nsurface_mesh\n\nGenerate a surface mesh on a scope.\n\nsurface_mesh_with_size_controls\n\nGenerate a surface mesh on a scope using the given size controls.\n\nvolume_mesh\n\nGenerate a volume mesh on the model.\n\nwrap\n\nWrap and remesh the input.\n\nwrite\n\nWrite or export files of different formats based on file extensions."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/Mesh.html#import-detail","title":"Mesh > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/Mesh.html#method-detail","title":"Mesh > Method detail","text":"Method detail\n\n\n\nMesh.compute_volumes(part_expression: str = '*', create_zones_per_volume: bool = True)\n\nCompute volumes in the parts defined by the part expression.\n\nParameters\n\npart_expression (str, optional) – Expression of the parts where the topology must be deleted.\nThe default is \"*\".\n\ncreate_zones_per_volume (bool, optional) – Whether to create volume zones for each volume. The default\nis True.\n\n\n\nMesh.connect_faces(part_expression: str = '*', face_labels: str = '*', target_face_labels: str = '*', tolerance: float = 0.05)\n\nConnect face zonelets with a label name pattern within a given tolerance.\n\nThis method connects face zonelets with a label name pattern to\nface zonelets with target face labels within a given tolerance. The connection\nhappens within the part. Face zonelets of a part are connected with face zonelets\nof the same part only.\n\nParameters\n\npart_expression (str, optional) – Name pattern of the parts to use for connecting the face zonelets. The\ndefault is \"*\".\n\nface_labels (str, optional) – Name pattern of the face labels used for connecting the face zonelets.\nThe default is \"*\".\n\ntarget_face_labels (str, optional) – Name pattern of the face labels to connect. The default is \"*\".\n\ntolerance (float, optional) – Tolerance for the connection. The default is 0.05.\n\n\n\nMesh.create_constant_size_control(control_name: str = 'size_control', size: float = 1.0, scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nGenerate constant size control on a scope.\n\nParameters\n\ncontrol_name (str) – Name of the control.\n\nsize (float, optional) – Constant edge length of the mesh. The default is 1.0.\n\nscope (SurfaceScope) – Scope for creating the size control.\n\n\n\nMesh.create_curvature_size_control(control_name: str = 'size_control', min: float = 1.0, max: float = 2.0, scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nGenerate a curvature size control on a scope.\n\nParameters\n\ncontrol_name (str, optional) – Name of the control. The default is \"size_control\".\n\nmin (float, optional) – Minimum edge length of the mesh. The default is 1.0.\n\nmax (float) – Maximum edge length of the mesh. The default is 2.0.\n\nscope (SurfaceScope) – Scope for creating the size control.\n\n\n\nMesh.create_flow_volume(flow_volume_zone_name: str = 'flow_volume', cap_scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nCreate flow volume by the face labels defining the boundary of the volume.\n\nParameters\n\nflow_volume_zone_name (str, optional) – Name for the volume zone of the created flow volume. The default is\n\"flow_volume\".\n\ncap_scope (SurfaceScope) – Scope defining the face zonelets where the cap for flow volume must\nbe created.\n\n\n\nMesh.create_zones_from_labels(label_expression: str = None, conversion_method: LabelToZoneMethod = LabelToZoneMethod.SIMPLE)\n\nCreate zones from labels.\n\nWhen exporting to various solvers, zones play a very important role.\nZones are where material properties and boundary conditions\ncan be set in respective solvers.\n\nZones allow downstream setting of boundary conditions or material properties.\n\nZone names in PyPrimeMesh are translated into equivalent concepts in the solver.\nCurrently, only one method is available to convert a zone to a label, and\nonly face zones are created.\n\nThe create_zones_from_labels method finds the entities by labels\nand then adds them to zones with the same names as the labels.\n\nIf the label_expression parameter is not provided, all labels are\nflattened to create zones. If overlaps occur, label names are combined, and\nseparate zones are created.\n\nFor example, if “LabelA” and “LabelB” have overlapping TopoFaces,\nthese zones are created: \"LabelA\", \"LabelB\", and\n\"LabelA_LabelB\" for the overlap.\n\nParameters\n\nlabel_expression (str, optional) – Expression for the labels to convert to zones. The\ndefault is None.\n\nconversion_method (LabelToZoneMethod, optional) – Method for converting the labels to zones. The default\nis LabelToZoneMethod.SIMPLE.\n\nExamples\n\n>>> from ansys.meshing.prime import lucid\n>>> mesh_util = lucid.Mesh(model)\n>>> mesh_util.create_zones_from_labels()\n\n\n\nMesh.delete_topology(part_expression: str = '*', delete_edges: bool = True)\n\nDelete topology in one or more parts.\n\nParameters\n\npart_expression (str, optional) – Expression of the parts where the topology must be deleted.\nThe default is \"*\".\n\ndelete_edges (bool, optional) – Whether to delete edge zonelets. The default is True.\n\n\n\nMesh.merge_parts(parts_expression: str = '*', new_name: str = 'merged_part')\n\nMerge multiple parts into a single part.\n\nParameters\n\nparts_expression (str, optional) – Expression of the parts to merge. The default is \"*\".\n\nnew_name (str, optional) – Name of the new part that is created from the merged parts.\nThe default is \"merged_part\".\n\n\n\nMesh.read(file_name: str, append: bool = False, cad_reader_route: ansys.meshing.prime.CadReaderRoute = None)\n\nRead or import files of different formats based on file extensions.\n\nThis method supports reading and importing these file formats:\n\nReading PyPrimeMesh’s native PMDAT files\n\nImporting various types of CAD files\n\nImporting Fluent Meshing’s MSH files\n\nImporting Fluent’s CAS files\n\nImporting MAPDL’s CDB files\n\nParameters\n\nfile_name (str) – Path to the file to read or import.\n\nappend (bool, optional) – Whether to append to the file. The default is False, in which case\n\nthe file is overwritten.\n\ncad_reader_route (prime.CadReaderRoute, optional) – Route of the CAD reader. The default is None.\n\n\n\nMesh.surface_mesh(min_size: float = None, max_size: float = None, generate_quads: bool = False, scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nGenerate a surface mesh on a scope.\n\nThis method is used to generate a surface mesh of a constant or variable\nsize. It supports generating quad dominant or triangular elements.\n\nIf minimum and maximum sizes are provided, a variable size mesh is generated\nbetween the minimum size and maximum size by applying sizes based on curvature.\n\nIf only the minimum size or maximum size is provided, a constant size mesh\nis generated with the provided size.\n\nIf neither minimum size or maximum size is provided, the global maximum setting\nis used to generate a constant size mesh.\n\nParameters\n\nmin_size (float, optional) – Minimum edge length of the mesh. The default is None.\n\nmax_size (float, optional) – Maximum edge length of the mesh. The default is None.\n\ngenerate_quads (bool, optional) – Whether to generate a quad dominant mesh. The default is\nFalse, in which case a triangular mesh is generated.\n\nscope (SurfaceScope) – Scope for generating the surface mesh.\n\n\n\nMesh.surface_mesh_with_size_controls(size_control_names: str = '*', generate_quads: bool = False, scope: ansys.meshing.prime.lucid.scope.SurfaceScope = SurfaceScope())\n\nGenerate a surface mesh on a scope using the given size controls.\n\nThis method supports generating quad dominant or triangular elements.\n\nParameters\n\nsize_control_names (str, optional) – Name pattern for the size controls. The default is \"*\".\n\ngenerate_quads (bool, optional) – Whether to generate a quad dominant mesh. The default is\nFalse, in which case a triangular mesh is generated.\n\nscope (SurfaceScope) – Scope for generating the surface mesh.\n\n\n\nMesh.volume_mesh(volume_fill_type: ansys.meshing.prime.VolumeFillType = prime.VolumeFillType.TET, quadratic: bool = False, prism_layers: int = None, prism_surface_expression: str = '*', prism_volume_expression: str = '*', growth_rate: float = 1.2, scope: ansys.meshing.prime.lucid.scope.VolumeScope = VolumeScope())\n\nGenerate a volume mesh on the model.\n\nParameters\n\nvolume_fill_type (prime.VolumeFillType) – Type of volume elements to generate.\n\nquadratic (bool, optional) – Whether to generate a quadratic mesh. The default is False.\nA quadratic mesh is not supported with parallel meshing.\nIt is only supported with a pure tetrahedral mesh.\n\nprism_layers (int, optional) – Number of prism layers to grow. The default is None.\nIf a value for prism layers is specified, prism layers are generated.\n\nprism_surface_expression (str, optional) – Face zones or TopoFaces to grow prisms from. The default is \"*\",\nin which case prisms are grown from all surfaces.\n\nprism_volume_expression (str, optional) – Volumes or TopoVolumes to grow prisms in.\nThe default is \"*\". This expression evaluates\nto zone names and volumes, or TopoVolumes are queried\nbased on the zones evaluated.\n\ngrowth_rate (float, optional) – Prism growth rate. The default is 1.2.\n\nscope (VolumeScope) – Scope of volumes to mesh.\n\n\n\nMesh.wrap(min_size: float = None, max_size: float = None, growth_rate: float = 1.2, elements_per_gap: float = None, normal_angle: float = 18.0, input_parts: str = '*', input_labels: str = '*', keep_inputs: bool = False, region_extract: ansys.meshing.prime.WrapRegion = prime.WrapRegion.EXTERNAL, material_point: List[float] = None, extract_features: bool = True, create_intersection_loops: bool = False, use_existing_features: bool = False, enable_feature_octree_refinement: bool = True, feature_angle: float = 40.0, contact_prevention_size: float = None, number_of_threads: int = None, remesh_postwrap: bool = True, recompute_remesh_sizes: bool = False, use_existing_size_fields: bool = False, size_fields: List[ansys.meshing.prime.SizeField] = None, wrap_size_controls: List[ansys.meshing.prime.SizeControl] = None, remesh_size_controls: List[ansys.meshing.prime.SizeControl] = None, feature_recovery_params: List[ansys.meshing.prime.FeatureRecoveryParams] = None, contact_prevention_params: List[ansys.meshing.prime.ContactPreventionParams] = None, leak_prevention_params: List[ansys.meshing.prime.LeakPreventionParams] = None)\n\nWrap and remesh the input.\n\nThe default behavior is to perform an external wrap of all parts in the model\nusing curvature sizing and extracting features. The wrap is then remeshed\nto provide a surface mesh for the extracted region.\n\nGeodesic sizing is used only if soft and curvature controls are set.\nIf contact prevention size is set and geodesic sizing is available, contact\ndetection is used globally.\n\nIf minimum and maximum sizes are provided, variable size mesh is generated\nbetween the minimum size and maximum size by applying sizes based on curvature.\n\nIf either minimum size or maximum size is provided, constant size mesh\nis generated with the provided size.\n\nIf neither minimum size or maximum size is provided, global minimum and\nmaximum settings are used to generate a variable size mesh based on curvature.\n\nParameters\n\nmin_size (float, optional) – Minimum edge length of the mesh. The default is None.\n\nmax_size (float, optional) – Maximum edge length of the mesh. The default is None.\n\ngrowth_rate (float, optional) – Growth rate. The default is 1.2.\n\nelements_per_gap (float, optional) – Global proximity size control elements per gap with self proximity.\nThe default is None.\n\nnormal_angle (float, optional) – Global curvature size control normal angle. The default is 18.0.\n\ninput_parts (str, optional) – Parts to wrap. The default is \"*\".\n\ninput_labels (str) – Labels to wrap. The default is \"*\".\n\nkeep_inputs (bool, optional) – Whether to retain inputs. The default is False.\n\nregion_extract (prime.WrapRegion) – Region to wrap. The default is prime.WrapRegion.EXTERNAL.\n\nmaterial_point (List[float], optional) – Material point if the region extraction method is set to\nmaterial point. The default is None.\n\nextract_features (bool, optional) – Whether to extract feature edges using the feature angle. The\ndefault is True.\n\ncreate_intersection_loops (bool, optional) – Whether to create intersection loops between all parts.\nThe default is False.\n\nuse_existing_features (bool, optional) – Whether to maintain existing features on parts. The\ndefault is False.\n\nenable_feature_octree_refinement (bool, optional) – Whether to apply refinement to feature edges during the wrap.\nThe default is True.\n\nfeature_angle (float, optional) – Angle to use for extracting features. The default is 40.0.\n\ncontact_prevention_size (float, optional) – Global proximity size controls between all parts.\nThe default is None.\n\nnumber_of_threads (int, optional) – Number of threads. The default is None.\n\nremesh_postwrap (bool, optional) – Whether to remesh the wrap. The default is True.\n\nrecompute_remesh_sizes (bool, optional) – Whether to recompute sizes from global controls using\nthe wrap surface. The default is False.\n\nuse_existing_size_fields (bool, optional) – Whether to use precomputed size fields. The default is False.\n\nsize_fields (List[prime.SizeField], optional) – List of size fields to use. The default is None.\n\nwrap_size_controls (List[prime.SizeControl], optional) – List of wrap size controls to use. The default is None.\n\nremesh_size_controls (List[prime.SizeControl], optional) – List of remesh size controls to use. The default is None.\n\nfeature_recovery_params (List[prime.FeatureRecoveryParams], optional) – List of feature recovery parameters to use. The default is None.\n\ncontact_prevention_params (List[prime.ContactPreventionParams], optional) – List of contact prevention parameters to use. The default is None.\n\nleak_prevention_params (List[prime.LeakPreventionParams], optional) – List of leak prevention parameters to use.  The default is None.\n\nReturns\n\nReturns Part.\n\nReturn type\n\nWrapped part\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> from ansys.meshing.prime import lucid\n>>> prime_client = prime.launch_prime()\n>>> model = prime_client.model\n>>> mesh = lucid.Mesh(model)\n>>> mesh.read(\"/my_geometry.stl\")\n>>> mesh.wrap(min_size=1, max_size=20, create_intersection_loops=True)\n>>> mesh.write(\"/mesh_output.pmdat\")\n>>> prime_client.exit()\n\n\n\nMesh.write(file_name: str)\n\nWrite or export files of different formats based on file extensions.\n\nThis method supports writing and exporting these file formats:\n\nWriting PyPrimeMesh’s native PMDAT files\n\nExporting Fluent Meshing’s MSH files\n\nExporting Fluent’s CAS files\n\nExporting MAPDL’s CDB files.\n\nExporting STL files.\n\nParameters\n\nfile_name (str) – Path of the file to write or export."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/fileio/index.html#the-fileiopy-module","title":"The fileio.py module","text":"The fileio.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/fileio/index.html#summary","title":"The fileio.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nFileIO\n\nHandles reading or writing files from the disk.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/fileio/index.html#description","title":"The fileio.py module > Description","text":"Description\n\nModule for mangaging file inputs and outputs."},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckTopologyParams.html#checktopologyparams","title":"CheckTopologyParams","text":"CheckTopologyParams\n\n\n\nclass ansys.meshing.prime.CheckTopologyParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, topo_search_field_mask: int = None, json_data: dict = None, **kwargs)\n\nParameters for check topology operations.\n\nParameters\n\nmodel (Model) – Model to create a CheckTopologyParams object with default parameters.\n\ntopo_search_field_mask (int, optional) – Toposearch field option for topology check.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a CheckTopologyParams object with provided parameters.\n\nExamples\n\n>>> check_topology_params = prime.CheckTopologyParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckTopologyParams.html#overview","title":"CheckTopologyParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntopo_search_field_mask\n\nToposearch field option for topology check.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckTopologyParams object.\n\nset_default\n\nSet the default values of the CheckTopologyParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckTopologyParams.html#import-detail","title":"CheckTopologyParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckTopologyParams.html#property-detail","title":"CheckTopologyParams > Property detail","text":"Property detail\n\n\n\nproperty CheckTopologyParams.topo_search_field_mask: int\n\nToposearch field option for topology check.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckTopologyParams.html#method-detail","title":"CheckTopologyParams > Method detail","text":"Method detail\n\n\n\nCheckTopologyParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckTopologyParams.__str__() -> str\n\n\n\n\n\nstatic CheckTopologyParams.print_default()\n\nPrint the default values of CheckTopologyParams object.\n\nExamples\n\n>>> CheckTopologyParams.print_default()\n\n\n\nstatic CheckTopologyParams.set_default(topo_search_field_mask: int = None)\n\nSet the default values of the CheckTopologyParams object.\n\nParameters\n\ntopo_search_field_mask (int, optional) – Toposearch field option for topology check."},{"objectID":"Home","href":"examples/gallery_examples/misc/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n00:18.785 total execution time for 1 file from examples/gallery_examples/misc:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_misc_example_template.py (example_template.py)\n\n00:18.785\n\n0.0"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_saddle_bracket_fmd.html#ansysmeshingprimeexamplesdownload_saddle_bracket_fmd","title":"ansys.meshing.prime.examples.download_saddle_bracket_fmd","text":"ansys.meshing.prime.examples.download_saddle_bracket_fmd\n\n\n\nansys.meshing.prime.examples.download_saddle_bracket_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload FMD file for the saddle bracket example\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/compute_distance.html#ansysmeshingprimecoremeshcompute_distance","title":"ansys.meshing.prime.core.mesh.compute_distance","text":"ansys.meshing.prime.core.mesh.compute_distance\n\n\n\nansys.meshing.prime.core.mesh.compute_distance(point1, point2) -> float\n\nCompute the distance between two points.\n\nParameters\n\npoint1 (list) – List with the coordinates of the first point.\n\npoint2 (list) – List with the coordinates of the second point.\n\nReturns\n\nDistance between the two points.\n\nReturn type\n\nfloat"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryResults.html#surfacediagnosticsummaryresults","title":"SurfaceDiagnosticSummaryResults","text":"SurfaceDiagnosticSummaryResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SurfaceDiagnosticSummaryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_self_intersections: int = None, n_free_edges: int = None, n_multi_edges: int = None, n_duplicate_faces: int = None, json_data: dict = None, **kwargs)\n\nResults of surface diagnostic summary.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceDiagnosticSummaryResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the surface diagnostic summary.\n\nn_self_intersections (int, optional) – Number of self intersecting faces identified.\n\nn_free_edges (int, optional) – Number of free face edges identified.\n\nn_multi_edges (int, optional) – Number of multi face edges identified.\n\nn_duplicate_faces (int, optional) – Number of duplicate faces identified.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceDiagnosticSummaryResults object with provided parameters.\n\nExamples\n\n>>> surface_diagnostic_summary_results = prime.SurfaceDiagnosticSummaryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryResults.html#overview","title":"SurfaceDiagnosticSummaryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the surface diagnostic summary.\n\nn_duplicate_faces\n\nNumber of duplicate faces identified.\n\nn_free_edges\n\nNumber of free face edges identified.\n\nn_multi_edges\n\nNumber of multi face edges identified.\n\nn_self_intersections\n\nNumber of self intersecting faces identified.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceDiagnosticSummaryResults object.\n\nset_default\n\nSet the default values of the SurfaceDiagnosticSummaryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryResults.html#import-detail","title":"SurfaceDiagnosticSummaryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryResults.html#property-detail","title":"SurfaceDiagnosticSummaryResults > Property detail","text":"Property detail\n\n\n\nproperty SurfaceDiagnosticSummaryResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the surface diagnostic summary.\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_duplicate_faces: int\n\nNumber of duplicate faces identified.\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_free_edges: int\n\nNumber of free face edges identified.\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_multi_edges: int\n\nNumber of multi face edges identified.\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_self_intersections: int\n\nNumber of self intersecting faces identified."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SurfaceDiagnosticSummaryResults.html#method-detail","title":"SurfaceDiagnosticSummaryResults > Method detail","text":"Method detail\n\n\n\nSurfaceDiagnosticSummaryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceDiagnosticSummaryResults.__str__() -> str\n\n\n\n\n\nstatic SurfaceDiagnosticSummaryResults.print_default()\n\nPrint the default values of SurfaceDiagnosticSummaryResults object.\n\nExamples\n\n>>> SurfaceDiagnosticSummaryResults.print_default()\n\n\n\nstatic SurfaceDiagnosticSummaryResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_self_intersections: int = None, n_free_edges: int = None, n_multi_edges: int = None, n_duplicate_faces: int = None)\n\nSet the default values of the SurfaceDiagnosticSummaryResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the surface diagnostic summary.\n\nn_self_intersections (int, optional) – Number of self intersecting faces identified.\n\nn_free_edges (int, optional) – Number of free face edges identified.\n\nn_multi_edges (int, optional) – Number of multi face edges identified.\n\nn_duplicate_faces (int, optional) – Number of duplicate faces identified."},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerParams.html#vtcomposerparams","title":"VTComposerParams","text":"VTComposerParams\n\n\n\nclass ansys.meshing.prime.VTComposerParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, thin_stripes_tol: float = None, json_data: dict = None, **kwargs)\n\nParameters to control VTComposer operations.\n\nParameters\n\nmodel (Model) – Model to create a VTComposerParams object with default parameters.\n\nthin_stripes_tol (float, optional) – This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a VTComposerParams object with provided parameters.\n\nExamples\n\n>>> v_tcomposer_params = prime.VTComposerParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerParams.html#overview","title":"VTComposerParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nthin_stripes_tol\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VTComposerParams object.\n\nset_default\n\nSet the default values of the VTComposerParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerParams.html#import-detail","title":"VTComposerParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerParams.html#property-detail","title":"VTComposerParams > Property detail","text":"Property detail\n\n\n\nproperty VTComposerParams.thin_stripes_tol: float\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposerParams.html#method-detail","title":"VTComposerParams > Method detail","text":"Method detail\n\n\n\nVTComposerParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVTComposerParams.__str__() -> str\n\n\n\n\n\nstatic VTComposerParams.print_default()\n\nPrint the default values of VTComposerParams object.\n\nExamples\n\n>>> VTComposerParams.print_default()\n\n\n\nstatic VTComposerParams.set_default(thin_stripes_tol: float = None)\n\nSet the default values of the VTComposerParams object.\n\nParameters\n\nthin_stripes_tol (float, optional)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsParams.html#cellstatisticsparams","title":"CellStatisticsParams","text":"CellStatisticsParams\n\n\n\nclass ansys.meshing.prime.autogen.meshinfostructs.CellStatisticsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, get_volume: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to calculate cell statistics.\n\nParameters\n\nmodel (Model) – Model to create a CellStatisticsParams object with default parameters.\n\nget_volume (bool, optional) – Provides option to compute and get cumulative cell volume of all element.\n\njson_data (dict, optional) – JSON dictionary to create a CellStatisticsParams object with provided parameters.\n\nExamples\n\n>>> cell_statistics_params = prime.CellStatisticsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsParams.html#overview","title":"CellStatisticsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nget_volume\n\nProvides option to compute and get cumulative cell volume of all element.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CellStatisticsParams object.\n\nset_default\n\nSet the default values of the CellStatisticsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsParams.html#import-detail","title":"CellStatisticsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsParams.html#property-detail","title":"CellStatisticsParams > Property detail","text":"Property detail\n\n\n\nproperty CellStatisticsParams.get_volume: bool\n\nProvides option to compute and get cumulative cell volume of all element."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsParams.html#method-detail","title":"CellStatisticsParams > Method detail","text":"Method detail\n\n\n\nCellStatisticsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCellStatisticsParams.__str__() -> str\n\n\n\n\n\nstatic CellStatisticsParams.print_default()\n\nPrint the default values of CellStatisticsParams object.\n\nExamples\n\n>>> CellStatisticsParams.print_default()\n\n\n\nstatic CellStatisticsParams.set_default(get_volume: bool = None)\n\nSet the default values of the CellStatisticsParams object.\n\nParameters\n\nget_volume (bool, optional) – Provides option to compute and get cumulative cell volume of all element."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/BCsVolumetricModality.html#bcsvolumetricmodality","title":"BCsVolumetricModality","text":"BCsVolumetricModality\n\n\n\nclass ansys.meshing.prime.autogen.morpherbcsstructs.BCsVolumetricModality\n\nIndicate options to identify morphable region in input volumetric mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/BCsVolumetricModality.html#overview","title":"BCsVolumetricModality > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALL\n\nOption to identify all nodes expect fixed nodes as morphable nodes from the input volumetric mesh.\n\nBOX\n\nOption to identify nodes enclosed by bounding box as morphable nodes from the input volumetric mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/BCsVolumetricModality.html#import-detail","title":"BCsVolumetricModality > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherbcsstructs/BCsVolumetricModality.html#attribute-detail","title":"BCsVolumetricModality > Attribute detail","text":"Attribute detail\n\n\n\nBCsVolumetricModality.ALL = 2\n\nOption to identify all nodes expect fixed nodes as morphable nodes from the input volumetric mesh.\n\n\n\nBCsVolumetricModality.BOX = 1\n\nOption to identify nodes enclosed by bounding box as morphable nodes from the input volumetric mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/index.html#the-picked_infopy-module","title":"The picked_info.py module","text":"The picked_info.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/index.html#summary","title":"The picked_info.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPickedInfo\n\nInitializes the picked information button widget.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/index.html#description","title":"The picked_info.py module > Description","text":"Description\n\nModule for PickedInfo widget."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryResult.html#periodiccontrolsummaryresult","title":"PeriodicControlSummaryResult","text":"PeriodicControlSummaryResult\n\n\n\nclass ansys.meshing.prime.autogen.periodiccontrolstructs.PeriodicControlSummaryResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, message: str = None, json_data: dict = None, **kwargs)\n\nResults of Periodic control summary.\n\nParameters\n\nmodel (Model) – Model to create a PeriodicControlSummaryResult object with default parameters.\n\nmessage (str, optional) – String with the periodic control summary.\n\njson_data (dict, optional) – JSON dictionary to create a PeriodicControlSummaryResult object with provided parameters.\n\nExamples\n\n>>> periodic_control_summary_result = prime.PeriodicControlSummaryResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryResult.html#overview","title":"PeriodicControlSummaryResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmessage\n\nString with the periodic control summary.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PeriodicControlSummaryResult object.\n\nset_default\n\nSet the default values of the PeriodicControlSummaryResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryResult.html#import-detail","title":"PeriodicControlSummaryResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryResult.html#property-detail","title":"PeriodicControlSummaryResult > Property detail","text":"Property detail\n\n\n\nproperty PeriodicControlSummaryResult.message: str\n\nString with the periodic control summary."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryResult.html#method-detail","title":"PeriodicControlSummaryResult > Method detail","text":"Method detail\n\n\n\nPeriodicControlSummaryResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControlSummaryResult.__str__() -> str\n\n\n\n\n\nstatic PeriodicControlSummaryResult.print_default()\n\nPrint the default values of PeriodicControlSummaryResult object.\n\nExamples\n\n>>> PeriodicControlSummaryResult.print_default()\n\n\n\nstatic PeriodicControlSummaryResult.set_default(message: str = None)\n\nSet the default values of the PeriodicControlSummaryResult object.\n\nParameters\n\nmessage (str, optional) – String with the periodic control summary."},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneMeshResult.html#zonemeshresult","title":"ZoneMeshResult","text":"ZoneMeshResult\n\n\n\nclass ansys.meshing.prime.ZoneMeshResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, zone_name: str = None, element_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, centroids: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nResults containing zone-wise mesh information.\n\nContains zone name, element ids and their corresponding data (such as centroid coordinates)\nfor elements within a zone.\n\nParameters\n\nmodel (Model) – Model to create a ZoneMeshResult object with default parameters.\n\nzone_name (str, optional) – Name of the zone where the elements belong to.This is a beta parameter. The behavior and name may change in the future.\n\nelement_ids (Iterable[int], optional) – List of element ids in the zone.This is a beta parameter. The behavior and name may change in the future.\n\ncentroids (Iterable[float], optional) – Flattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…].This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ZoneMeshResult object with provided parameters.\n\nExamples\n\n>>> zone_mesh_result = prime.ZoneMeshResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneMeshResult.html#overview","title":"ZoneMeshResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncentroids\n\nFlattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…].\n\nelement_ids\n\nList of element ids in the zone.\n\nzone_name\n\nName of the zone where the elements belong to.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ZoneMeshResult object.\n\nset_default\n\nSet the default values of the ZoneMeshResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneMeshResult.html#import-detail","title":"ZoneMeshResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneMeshResult.html#property-detail","title":"ZoneMeshResult > Property detail","text":"Property detail\n\n\n\nproperty ZoneMeshResult.centroids: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nFlattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…].\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ZoneMeshResult.element_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of element ids in the zone.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ZoneMeshResult.zone_name: str\n\nName of the zone where the elements belong to.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneMeshResult.html#method-detail","title":"ZoneMeshResult > Method detail","text":"Method detail\n\n\n\nZoneMeshResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nZoneMeshResult.__str__() -> str\n\n\n\n\n\nstatic ZoneMeshResult.print_default()\n\nPrint the default values of ZoneMeshResult object.\n\nExamples\n\n>>> ZoneMeshResult.print_default()\n\n\n\nstatic ZoneMeshResult.set_default(zone_name: str = None, element_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, centroids: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the ZoneMeshResult object.\n\nParameters\n\nzone_name (str, optional) – Name of the zone where the elements belong to.\n\nelement_ids (Iterable[int], optional) – List of element ids in the zone.\n\ncentroids (Iterable[float], optional) – Flattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…]."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/index.html#the-meshinfostructspy-module","title":"The meshinfostructs.py module","text":"The meshinfostructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/index.html#summary","title":"The meshinfostructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCellStatisticsParams\n\nParameters used to calculate cell statistics.\n\nCellStatisticsResults\n\nResults of cell statistics information.\n\nEdgeConnectivityResults\n\nResult of the edge connectivity information.\n\nFaceAndEdgeConnectivityParams\n\nParameters to get face and edge connectivity information.\n\nFaceAndEdgeConnectivityResults\n\nResult of the face and edge connectivity information.\n\nFaceConnectivityResults\n\nResult of the face connectivity information.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/index.html#description","title":"The meshinfostructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SweepType.html#sweeptype","title":"SweepType","text":"SweepType\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.SweepType\n\nProvides the Sweep Mesh Decomposition type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SweepType.html#overview","title":"SweepType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nMEDIALAXIS\n\nCreates swept blocks on axisymmetric sweepable geometries.\n\nPROGRAMCONTROLLED\n\nMultizone chooses the best decomposition method based on geometry analysis and decomposition tries.\n\nSTANDARD\n\nMultizone create mapped and swept blocks if possible (should be default).\n\nTHINSWEEP\n\nCreates swept blocks on thin wall geometries."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SweepType.html#import-detail","title":"SweepType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SweepType.html#attribute-detail","title":"SweepType > Attribute detail","text":"Attribute detail\n\n\n\nSweepType.MEDIALAXIS = 3\n\nCreates swept blocks on axisymmetric sweepable geometries.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSweepType.PROGRAMCONTROLLED = 4\n\nMultizone chooses the best decomposition method based on geometry analysis and decomposition tries.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSweepType.STANDARD = 1\n\nMultizone create mapped and swept blocks if possible (should be default).\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSweepType.THINSWEEP = 2\n\nCreates swept blocks on thin wall geometries.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesResults.html#deletevolumesresults","title":"DeleteVolumesResults","text":"DeleteVolumesResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.DeleteVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, deleted_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with delete volumes operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteVolumesResults object with default parameters.\n\ndeleted_volumes (Iterable[int], optional) – Ids of deleted volumes.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume deletion operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteVolumesResults object with provided parameters.\n\nExamples\n\n>>> delete_volumes_results = prime.DeleteVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesResults.html#overview","title":"DeleteVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndeleted_volumes\n\nIds of deleted volumes.\n\nerror_code\n\nError code associated with the volume deletion operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteVolumesResults object.\n\nset_default\n\nSet the default values of the DeleteVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesResults.html#import-detail","title":"DeleteVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesResults.html#property-detail","title":"DeleteVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteVolumesResults.deleted_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of deleted volumes.\n\n\n\nproperty DeleteVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume deletion operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesResults.html#method-detail","title":"DeleteVolumesResults > Method detail","text":"Method detail\n\n\n\nDeleteVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteVolumesResults.__str__() -> str\n\n\n\n\n\nstatic DeleteVolumesResults.print_default()\n\nPrint the default values of DeleteVolumesResults object.\n\nExamples\n\n>>> DeleteVolumesResults.print_default()\n\n\n\nstatic DeleteVolumesResults.set_default(deleted_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteVolumesResults object.\n\nParameters\n\ndeleted_volumes (Iterable[int], optional) – Ids of deleted volumes.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume deletion operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_multi_layer_quad_mesh_pcb_pmdb.html#ansysmeshingprimeexamplesexamplesdownload_multi_layer_quad_mesh_pcb_pmdb","title":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_pmdb","text":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_pmdb\n\n\n\nansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_pmdb(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDB file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_pmdb()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedResult.html#deleteunwettedresult","title":"DeleteUnwettedResult","text":"DeleteUnwettedResult\n\n\n\nclass ansys.meshing.prime.DeleteUnwettedResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with delete unwetted surfaces operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteUnwettedResult object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with delete unwetted surfaces operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteUnwettedResult object with provided parameters.\n\nExamples\n\n>>> delete_unwetted_result = prime.DeleteUnwettedResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedResult.html#overview","title":"DeleteUnwettedResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with delete unwetted surfaces operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteUnwettedResult object.\n\nset_default\n\nSet the default values of the DeleteUnwettedResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedResult.html#import-detail","title":"DeleteUnwettedResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedResult.html#property-detail","title":"DeleteUnwettedResult > Property detail","text":"Property detail\n\n\n\nproperty DeleteUnwettedResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with delete unwetted surfaces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteUnwettedResult.html#method-detail","title":"DeleteUnwettedResult > Method detail","text":"Method detail\n\n\n\nDeleteUnwettedResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteUnwettedResult.__str__() -> str\n\n\n\n\n\nstatic DeleteUnwettedResult.print_default()\n\nPrint the default values of DeleteUnwettedResult object.\n\nExamples\n\n>>> DeleteUnwettedResult.print_default()\n\n\n\nstatic DeleteUnwettedResult.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteUnwettedResult object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with delete unwetted surfaces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeResults.html#fixinvalidnormalnoderesults","title":"FixInvalidNormalNodeResults","text":"FixInvalidNormalNodeResults\n\n\n\nclass ansys.meshing.prime.FixInvalidNormalNodeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with fix invalid average face normal at nodes.\n\nParameters\n\nmodel (Model) – Model to create a FixInvalidNormalNodeResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a FixInvalidNormalNodeResults object with provided parameters.\n\nExamples\n\n>>> fix_invalid_normal_node_results = prime.FixInvalidNormalNodeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeResults.html#overview","title":"FixInvalidNormalNodeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FixInvalidNormalNodeResults object.\n\nset_default\n\nSet the default values of the FixInvalidNormalNodeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeResults.html#import-detail","title":"FixInvalidNormalNodeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeResults.html#property-detail","title":"FixInvalidNormalNodeResults > Property detail","text":"Property detail\n\n\n\nproperty FixInvalidNormalNodeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeResults.html#method-detail","title":"FixInvalidNormalNodeResults > Method detail","text":"Method detail\n\n\n\nFixInvalidNormalNodeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFixInvalidNormalNodeResults.__str__() -> str\n\n\n\n\n\nstatic FixInvalidNormalNodeResults.print_default()\n\nPrint the default values of FixInvalidNormalNodeResults object.\n\nExamples\n\n>>> FixInvalidNormalNodeResults.print_default()\n\n\n\nstatic FixInvalidNormalNodeResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the FixInvalidNormalNodeResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsResults.html#mergepartsresults","title":"MergePartsResults","text":"MergePartsResults\n\n\n\nclass ansys.meshing.prime.MergePartsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, merged_part_assigned_name: str = None, merged_part_id: int = None, json_data: dict = None, **kwargs)\n\nParameters to merge parts.\n\nParameters\n\nmodel (Model) – Model to create a MergePartsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nmerged_part_assigned_name (str, optional) – Name assigned to merged part. Suffix is added to suggested name if the name not available.\n\nmerged_part_id (int, optional) – Id assigned to merged part.\n\njson_data (dict, optional) – JSON dictionary to create a MergePartsResults object with provided parameters.\n\nExamples\n\n>>> merge_parts_results = prime.MergePartsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsResults.html#overview","title":"MergePartsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nmerged_part_assigned_name\n\nName assigned to merged part. Suffix is added to suggested name if the name not available.\n\nmerged_part_id\n\nId assigned to merged part.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergePartsResults object.\n\nset_default\n\nSet the default values of the MergePartsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsResults.html#import-detail","title":"MergePartsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsResults.html#property-detail","title":"MergePartsResults > Property detail","text":"Property detail\n\n\n\nproperty MergePartsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty MergePartsResults.merged_part_assigned_name: str\n\nName assigned to merged part. Suffix is added to suggested name if the name not available.\n\n\n\nproperty MergePartsResults.merged_part_id: int\n\nId assigned to merged part."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergePartsResults.html#method-detail","title":"MergePartsResults > Method detail","text":"Method detail\n\n\n\nMergePartsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergePartsResults.__str__() -> str\n\n\n\n\n\nstatic MergePartsResults.print_default()\n\nPrint the default values of MergePartsResults object.\n\nExamples\n\n>>> MergePartsResults.print_default()\n\n\n\nstatic MergePartsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, merged_part_assigned_name: str = None, merged_part_id: int = None)\n\nSet the default values of the MergePartsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nmerged_part_assigned_name (str, optional) – Name assigned to merged part. Suffix is added to suggested name if the name not available.\n\nmerged_part_id (int, optional) – Id assigned to merged part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapper/Wrapper.html#wrapper","title":"Wrapper","text":"Wrapper\n\n\n\nclass ansys.meshing.prime.autogen.wrapper.Wrapper(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nProvide operations to generate surface mesh using wrapper technology.\n\nParameters\n\nmodel (Model) – Server model to create Wrapper object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapper/Wrapper.html#overview","title":"Wrapper > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nclose_gaps\n\nClose gaps create patching surfaces within the face zonelets specified by scope using gap size.\n\nimprove_quality\n\nImprove the surface quality and resolve connectivity issues like intersections, multi, free, spikes, point contacts and so on.\n\npatch_flow_regions\n\nPatch flow regions create patching surfaces for regions identified by dead regions from wrapper patch holes parameters.\n\nwrap\n\nPerforms wrapping with specified controls in wrapper control and with provided parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Wrapper.\n\n__exit__\n\nExit context for Wrapper.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapper/Wrapper.html#import-detail","title":"Wrapper > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapper/Wrapper.html#method-detail","title":"Wrapper > Method detail","text":"Method detail\n\n\n\nWrapper.__enter__()\n\nEnter context for Wrapper.\n\n\n\nWrapper.__exit__(type, value, traceback)\n\nExit context for Wrapper.\n\n\n\nWrapper.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapper.close_gaps(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition, params: ansys.meshing.prime.params.primestructs.WrapperCloseGapsParams) -> ansys.meshing.prime.params.primestructs.WrapperCloseGapsResult\n\nClose gaps create patching surfaces within the face zonelets specified by scope using gap size.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition of face zonelets.\n\nparams (WrapperCloseGapsParams) – Wrapper close gaps parameters.\n\nReturns\n\nReturns the WrapperCloseGapsResult.\n\nReturn type\n\nWrapperCloseGapsResult\n\nExamples\n\n>>> result = wrapper.close_gaps(scope, params)\n\n\n\nWrapper.improve_quality(part_id: int, params: ansys.meshing.prime.params.primestructs.WrapperImproveQualityParams) -> ansys.meshing.prime.params.primestructs.WrapperImproveResult\n\nImprove the surface quality and resolve connectivity issues like intersections, multi, free, spikes, point contacts and so on.\n\nParameters\n\npart_id (int) – Id of the part.\n\nparams (WrapperImproveQualityParams) – Wrapper improve quality parameters.\n\nReturns\n\nReturn the Wrapper improve result.\n\nReturn type\n\nWrapperImproveResult\n\nExamples\n\n>>> result = wrapper.improve_quality(part_id, params)\n\n\n\nWrapper.patch_flow_regions(live_material_point: str, params: ansys.meshing.prime.params.primestructs.WrapperPatchFlowRegionsParams) -> ansys.meshing.prime.params.primestructs.WrapperPatchFlowRegionsResult\n\nPatch flow regions create patching surfaces for regions identified by dead regions from wrapper patch holes parameters.\n\nParameters\n\nlive_material_point (str) – Name of live material point.\n\nparams (WrapperPatchFlowRegionsParams) – Parameters to define patch flow regions operation.\n\nReturns\n\nReturns the WrapperPatchFlowRegionsResult.\n\nReturn type\n\nWrapperPatchFlowRegionsResult\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = wrapper.PatchFlowRegions(live_material_point, params)\n\n\n\nWrapper.wrap(wrapper_control_id: int, params: ansys.meshing.prime.params.primestructs.WrapParams) -> ansys.meshing.prime.params.primestructs.WrapResult\n\nPerforms wrapping with specified controls in wrapper control and with provided parameters.\n\nParameters\n\nwrapper_control_id (int) – Id of wrapper control.\n\nparams (WrapParams) – Wrap Parameters.\n\nReturns\n\nReturns the WrapResult.\n\nReturn type\n\nWrapResult\n\nExamples\n\n>>> results = wrapper.wrap(wrapper_control_id, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMesh.html#automesh","title":"AutoMesh","text":"AutoMesh\n\n\n\nclass ansys.meshing.prime.AutoMesh(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nGenerates volume mesh.\n\nPerforms volume meshing using various volume meshing algorithms.\nFor example, with prisms.\n\nParameters\n\nmodel (Model) – Server model to create AutoMesh object."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMesh.html#overview","title":"AutoMesh > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nmesh\n\nPerforms volume meshing on the part with the given meshing parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for AutoMesh.\n\n__exit__\n\nExit context for AutoMesh.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMesh.html#import-detail","title":"AutoMesh > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMesh.html#method-detail","title":"AutoMesh > Method detail","text":"Method detail\n\n\n\nAutoMesh.__enter__()\n\nEnter context for AutoMesh.\n\n\n\nAutoMesh.__exit__(type, value, traceback)\n\nExit context for AutoMesh.\n\n\n\nAutoMesh.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoMesh.mesh(part_id: int, automesh_params: ansys.meshing.prime.params.primestructs.AutoMeshParams) -> ansys.meshing.prime.params.primestructs.AutoMeshResults\n\nPerforms volume meshing on the part with the given meshing parameters.\n\nParameters\n\npart_id (int) – Id of the part.\n\nautomesh_params (AutoMeshParams) – Parameters for auto mesh.\n\nReturns\n\nReturns the AutomeshResults.\n\nReturn type\n\nAutoMeshResults\n\nExamples\n\n>>> auto_mesh = AutoMesh(model = model)\n>>> automesh_params = AutoMeshParams(model = model)\n>>> results = auto_mesh.mesh(part_id, automesh_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveResult.html#wrapperimproveresult","title":"WrapperImproveResult","text":"WrapperImproveResult\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapperImproveResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_skew_found: int = None, remaining_skew_faces: int = None, n_face_intersections_found: int = None, unresolved_face_intersections: int = None, json_data: dict = None, **kwargs)\n\nResults structure associated to improve quality.\n\nParameters\n\nmodel (Model) – Model to create a WrapperImproveResult object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrapper operation.\n\nn_skew_found (int, optional) – Number of skewed faces found.\n\nremaining_skew_faces (int, optional) – Number of remaining skew faces.\n\nn_face_intersections_found (int, optional) – Number of self intersections found.\n\nunresolved_face_intersections (int, optional) – Number of remaining self intersections.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperImproveResult object with provided parameters.\n\nExamples\n\n>>> wrapper_improve_result = prime.WrapperImproveResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveResult.html#overview","title":"WrapperImproveResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a wrapper operation.\n\nn_face_intersections_found\n\nNumber of self intersections found.\n\nn_skew_found\n\nNumber of skewed faces found.\n\nremaining_skew_faces\n\nNumber of remaining skew faces.\n\nunresolved_face_intersections\n\nNumber of remaining self intersections.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperImproveResult object.\n\nset_default\n\nSet the default values of the WrapperImproveResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveResult.html#import-detail","title":"WrapperImproveResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveResult.html#property-detail","title":"WrapperImproveResult > Property detail","text":"Property detail\n\n\n\nproperty WrapperImproveResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a wrapper operation.\n\n\n\nproperty WrapperImproveResult.n_face_intersections_found: int\n\nNumber of self intersections found.\n\n\n\nproperty WrapperImproveResult.n_skew_found: int\n\nNumber of skewed faces found.\n\n\n\nproperty WrapperImproveResult.remaining_skew_faces: int\n\nNumber of remaining skew faces.\n\n\n\nproperty WrapperImproveResult.unresolved_face_intersections: int\n\nNumber of remaining self intersections."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperImproveResult.html#method-detail","title":"WrapperImproveResult > Method detail","text":"Method detail\n\n\n\nWrapperImproveResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperImproveResult.__str__() -> str\n\n\n\n\n\nstatic WrapperImproveResult.print_default()\n\nPrint the default values of WrapperImproveResult object.\n\nExamples\n\n>>> WrapperImproveResult.print_default()\n\n\n\nstatic WrapperImproveResult.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_skew_found: int = None, remaining_skew_faces: int = None, n_face_intersections_found: int = None, unresolved_face_intersections: int = None)\n\nSet the default values of the WrapperImproveResult object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with a wrapper operation.\n\nn_skew_found (int, optional) – Number of skewed faces found.\n\nremaining_skew_faces (int, optional) – Number of remaining skew faces.\n\nn_face_intersections_found (int, optional) – Number of self intersections found.\n\nunresolved_face_intersections (int, optional) – Number of remaining self intersections."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CdbSimulationType.html#cdbsimulationtype","title":"CdbSimulationType","text":"CdbSimulationType\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.CdbSimulationType\n\nSimulation Type for CDB export."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CdbSimulationType.html#overview","title":"CdbSimulationType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEXPLICIT\n\nExplicit Simulation.\n\nIMPLICIT\n\nImplicit simulation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CdbSimulationType.html#import-detail","title":"CdbSimulationType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CdbSimulationType.html#attribute-detail","title":"CdbSimulationType > Attribute detail","text":"Attribute detail\n\n\n\nCdbSimulationType.EXPLICIT = 1\n\nExplicit Simulation.\n\n\n\nCdbSimulationType.IMPLICIT = 0\n\nImplicit simulation."},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformResults.html#transformresults","title":"TransformResults","text":"TransformResults\n\n\n\nclass ansys.meshing.prime.TransformResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the transformation.\n\nParameters\n\nmodel (Model) – Model to create a TransformResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a TransformResults object with provided parameters.\n\nExamples\n\n>>> transform_results = prime.TransformResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformResults.html#overview","title":"TransformResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TransformResults object.\n\nset_default\n\nSet the default values of the TransformResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformResults.html#import-detail","title":"TransformResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformResults.html#property-detail","title":"TransformResults > Property detail","text":"Property detail\n\n\n\nproperty TransformResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/TransformResults.html#method-detail","title":"TransformResults > Method detail","text":"Method detail\n\n\n\nTransformResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTransformResults.__str__() -> str\n\n\n\n\n\nstatic TransformResults.print_default()\n\nPrint the default values of TransformResults object.\n\nExamples\n\n>>> TransformResults.print_default()\n\n\n\nstatic TransformResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the TransformResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreParams.html#hexcoreparams","title":"HexCoreParams","text":"HexCoreParams\n\n\n\nclass ansys.meshing.prime.HexCoreParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, transition_size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, buffer_layers: int = None, rel_peel_layer_offset: float = None, transition_layer_type: HexCoreTransitionLayerType = None, cell_element_type: HexCoreCellElementType = None, surface_mesh_size_scaling: SurfaceMeshSizeScaling = None, enable_region_based_hexcore: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control hexahedral mesh generation.\n\nParameters\n\nmodel (Model) – Model to create a HexCoreParams object with default parameters.\n\ntransition_size_field_type (SizeFieldType, optional) – Size field type to be used for transition volume (volume between hexcore and boundary).\n\nbuffer_layers (int, optional) – Minimum number of cell layers of the same size before the cell size halves or doubles.\n\nrel_peel_layer_offset (float, optional) – Gap between hexahedral core and geometry surface relative to the surface mesh size.\n\ntransition_layer_type (HexCoreTransitionLayerType, optional) – Handle size transition of hex cells.\n\ncell_element_type (HexCoreCellElementType, optional) – Cell element type of hex-shaped cells.\n\nsurface_mesh_size_scaling (SurfaceMeshSizeScaling, optional) – Setting for scaling surface mesh size for hexcore refinement.\n\nenable_region_based_hexcore (bool, optional) – Checks whether to enable region based hexcore or not.\n\njson_data (dict, optional) – JSON dictionary to create a HexCoreParams object with provided parameters.\n\nExamples\n\n>>> hex_core_params = prime.HexCoreParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreParams.html#overview","title":"HexCoreParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbuffer_layers\n\nMinimum number of cell layers of the same size before the cell size halves or doubles.\n\ncell_element_type\n\nCell element type of hex-shaped cells.\n\nenable_region_based_hexcore\n\nChecks whether to enable region based hexcore or not.\n\nrel_peel_layer_offset\n\nGap between hexahedral core and geometry surface relative to the surface mesh size.\n\nsurface_mesh_size_scaling\n\nSetting for scaling surface mesh size for hexcore refinement.\n\ntransition_layer_type\n\nHandle size transition of hex cells.\n\ntransition_size_field_type\n\nSize field type to be used for transition volume (volume between hexcore and boundary).\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of HexCoreParams object.\n\nset_default\n\nSet the default values of the HexCoreParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreParams.html#import-detail","title":"HexCoreParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreParams.html#property-detail","title":"HexCoreParams > Property detail","text":"Property detail\n\n\n\nproperty HexCoreParams.buffer_layers: int\n\nMinimum number of cell layers of the same size before the cell size halves or doubles.\n\n\n\nproperty HexCoreParams.cell_element_type: HexCoreCellElementType\n\nCell element type of hex-shaped cells.\n\n\n\nproperty HexCoreParams.enable_region_based_hexcore: bool\n\nChecks whether to enable region based hexcore or not.\n\n\n\nproperty HexCoreParams.rel_peel_layer_offset: float\n\nGap between hexahedral core and geometry surface relative to the surface mesh size.\n\n\n\nproperty HexCoreParams.surface_mesh_size_scaling: SurfaceMeshSizeScaling\n\nSetting for scaling surface mesh size for hexcore refinement.\n\n\n\nproperty HexCoreParams.transition_layer_type: HexCoreTransitionLayerType\n\nHandle size transition of hex cells.\n\n\n\nproperty HexCoreParams.transition_size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nSize field type to be used for transition volume (volume between hexcore and boundary)."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreParams.html#method-detail","title":"HexCoreParams > Method detail","text":"Method detail\n\n\n\nHexCoreParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nHexCoreParams.__str__() -> str\n\n\n\n\n\nstatic HexCoreParams.print_default()\n\nPrint the default values of HexCoreParams object.\n\nExamples\n\n>>> HexCoreParams.print_default()\n\n\n\nstatic HexCoreParams.set_default(transition_size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, buffer_layers: int = None, rel_peel_layer_offset: float = None, transition_layer_type: HexCoreTransitionLayerType = None, cell_element_type: HexCoreCellElementType = None, surface_mesh_size_scaling: SurfaceMeshSizeScaling = None, enable_region_based_hexcore: bool = None)\n\nSet the default values of the HexCoreParams object.\n\nParameters\n\ntransition_size_field_type (SizeFieldType, optional) – Size field type to be used for transition volume (volume between hexcore and boundary).\n\nbuffer_layers (int, optional) – Minimum number of cell layers of the same size before the cell size halves or doubles.\n\nrel_peel_layer_offset (float, optional) – Gap between hexahedral core and geometry surface relative to the surface mesh size.\n\ntransition_layer_type (HexCoreTransitionLayerType, optional) – Handle size transition of hex cells.\n\ncell_element_type (HexCoreCellElementType, optional) – Cell element type of hex-shaped cells.\n\nsurface_mesh_size_scaling (SurfaceMeshSizeScaling, optional) – Setting for scaling surface mesh size for hexcore refinement.\n\nenable_region_based_hexcore (bool, optional) – Checks whether to enable region based hexcore or not."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/ColorByType.html#colorbytype","title":"ColorByType","text":"ColorByType\n\n\n\nclass ansys.meshing.prime.core.mesh.ColorByType\n\nContains the zone types to display."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/ColorByType.html#overview","title":"ColorByType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nPART\n\n\n\nZONE\n\n\n\nZONELET\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/ColorByType.html#import-detail","title":"ColorByType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/ColorByType.html#attribute-detail","title":"ColorByType > Attribute detail","text":"Attribute detail\n\n\n\nColorByType.PART = 2\n\n\n\n\n\nColorByType.ZONE = 0\n\n\n\n\n\nColorByType.ZONELET = 1\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrol/index.html#the-prismcontrolpy-module","title":"The prismcontrol.py module","text":"The prismcontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrol/index.html#summary","title":"The prismcontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPrismControl\n\nPrismControl allows you to generate prisms.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrol/index.html#description","title":"The prismcontrol.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIGAResults.html#exportlsdynaigaresults","title":"ExportLSDynaIGAResults","text":"ExportLSDynaIGAResults\n\n\n\nclass ansys.meshing.prime.ExportLSDynaIGAResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the LS-DYNA export.\n\nParameters\n\nmodel (Model) – Model to create a ExportLSDynaIGAResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportLSDynaIGAResults object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_igaesults = prime.ExportLSDynaIGAResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIGAResults.html#overview","title":"ExportLSDynaIGAResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportLSDynaIGAResults object.\n\nset_default\n\nSet the default values of the ExportLSDynaIGAResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIGAResults.html#import-detail","title":"ExportLSDynaIGAResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIGAResults.html#property-detail","title":"ExportLSDynaIGAResults > Property detail","text":"Property detail\n\n\n\nproperty ExportLSDynaIGAResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaIGAResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIGAResults.html#method-detail","title":"ExportLSDynaIGAResults > Method detail","text":"Method detail\n\n\n\nExportLSDynaIGAResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportLSDynaIGAResults.__str__() -> str\n\n\n\n\n\nstatic ExportLSDynaIGAResults.print_default()\n\nPrint the default values of ExportLSDynaIGAResults object.\n\nExamples\n\n>>> ExportLSDynaIGAResults.print_default()\n\n\n\nstatic ExportLSDynaIGAResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ExportLSDynaIGAResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartZonelets.html#partzonelets","title":"PartZonelets","text":"PartZonelets\n\n\n\nclass ansys.meshing.prime.PartZonelets(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, part_id: int = None, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nA structure containing some or all face zonelet ids available in a part.\n\nParameters\n\nmodel (Model) – Model to create a PartZonelets object with default parameters.\n\npart_id (int, optional) – Id of part.\n\nface_zonelets (Iterable[int], optional) – List of face zonelet ids available in the part.\n\njson_data (dict, optional) – JSON dictionary to create a PartZonelets object with provided parameters.\n\nExamples\n\n>>> part_zonelets = prime.PartZonelets(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartZonelets.html#overview","title":"PartZonelets > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_zonelets\n\nList of face zonelet ids available in the part.\n\npart_id\n\nId of part.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PartZonelets object.\n\nset_default\n\nSet the default values of the PartZonelets object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartZonelets.html#import-detail","title":"PartZonelets > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartZonelets.html#property-detail","title":"PartZonelets > Property detail","text":"Property detail\n\n\n\nproperty PartZonelets.face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of face zonelet ids available in the part.\n\n\n\nproperty PartZonelets.part_id: int\n\nId of part."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartZonelets.html#method-detail","title":"PartZonelets > Method detail","text":"Method detail\n\n\n\nPartZonelets.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPartZonelets.__str__() -> str\n\n\n\n\n\nstatic PartZonelets.print_default()\n\nPrint the default values of PartZonelets object.\n\nExamples\n\n>>> PartZonelets.print_default()\n\n\n\nstatic PartZonelets.set_default(part_id: int = None, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the PartZonelets object.\n\nParameters\n\npart_id (int, optional) – Id of part.\n\nface_zonelets (Iterable[int], optional) – List of face zonelet ids available in the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_bracket_dsco.html#ansysmeshingprimeexamplesexamplesdownload_bracket_dsco","title":"ansys.meshing.prime.examples.examples.download_bracket_dsco","text":"ansys.meshing.prime.examples.examples.download_bracket_dsco\n\n\n\nansys.meshing.prime.examples.examples.download_bracket_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the bracket scaffold example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairEdgesParams.html#repairedgesparams","title":"RepairEdgesParams","text":"RepairEdgesParams\n\n\n\nclass ansys.meshing.prime.RepairEdgesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, constant_mesh_size: float = None, absolute_tolerance: float = None, json_data: dict = None, **kwargs)\n\nParameters for repair edges operation.\n\nParameters\n\nmodel (Model) – Model to create a RepairEdgesParams object with default parameters.\n\nconstant_mesh_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\nabsolute_tolerance (float, optional) – Absolute distance tolerance between nodes or edges for repair edges operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a RepairEdgesParams object with provided parameters.\n\nExamples\n\n>>> repair_edges_params = prime.RepairEdgesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairEdgesParams.html#overview","title":"RepairEdgesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsolute_tolerance\n\nAbsolute distance tolerance between nodes or edges for repair edges operation.\n\nconstant_mesh_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RepairEdgesParams object.\n\nset_default\n\nSet the default values of the RepairEdgesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairEdgesParams.html#import-detail","title":"RepairEdgesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairEdgesParams.html#property-detail","title":"RepairEdgesParams > Property detail","text":"Property detail\n\n\n\nproperty RepairEdgesParams.absolute_tolerance: float\n\nAbsolute distance tolerance between nodes or edges for repair edges operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty RepairEdgesParams.constant_mesh_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/RepairEdgesParams.html#method-detail","title":"RepairEdgesParams > Method detail","text":"Method detail\n\n\n\nRepairEdgesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRepairEdgesParams.__str__() -> str\n\n\n\n\n\nstatic RepairEdgesParams.print_default()\n\nPrint the default values of RepairEdgesParams object.\n\nExamples\n\n>>> RepairEdgesParams.print_default()\n\n\n\nstatic RepairEdgesParams.set_default(constant_mesh_size: float = None, absolute_tolerance: float = None)\n\nSet the default values of the RepairEdgesParams object.\n\nParameters\n\nconstant_mesh_size (float, optional) – Constant size used for surface meshing.\n\nabsolute_tolerance (float, optional) – Absolute distance tolerance between nodes or edges for repair edges operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryResults.html#projectongeometryresults","title":"ProjectOnGeometryResults","text":"ProjectOnGeometryResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.ProjectOnGeometryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, success: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with projection of topofaces nodes on its geometry.\n\nParameters\n\nmodel (Model) – Model to create a ProjectOnGeometryResults object with default parameters.\n\nsuccess (bool, optional) – Defines the operation was successful or not.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning code associated with operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ProjectOnGeometryResults object with provided parameters.\n\nExamples\n\n>>> project_on_geometry_results = prime.ProjectOnGeometryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryResults.html#overview","title":"ProjectOnGeometryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nsuccess\n\nDefines the operation was successful or not.\n\nwarning_codes\n\nWarning code associated with operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ProjectOnGeometryResults object.\n\nset_default\n\nSet the default values of the ProjectOnGeometryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryResults.html#import-detail","title":"ProjectOnGeometryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryResults.html#property-detail","title":"ProjectOnGeometryResults > Property detail","text":"Property detail\n\n\n\nproperty ProjectOnGeometryResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ProjectOnGeometryResults.success: bool\n\nDefines the operation was successful or not.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ProjectOnGeometryResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning code associated with operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/ProjectOnGeometryResults.html#method-detail","title":"ProjectOnGeometryResults > Method detail","text":"Method detail\n\n\n\nProjectOnGeometryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nProjectOnGeometryResults.__str__() -> str\n\n\n\n\n\nstatic ProjectOnGeometryResults.print_default()\n\nPrint the default values of ProjectOnGeometryResults object.\n\nExamples\n\n>>> ProjectOnGeometryResults.print_default()\n\n\n\nstatic ProjectOnGeometryResults.set_default(success: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ProjectOnGeometryResults object.\n\nParameters\n\nsuccess (bool, optional) – Defines the operation was successful or not.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning code associated with operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryResults.html#volumequalitysummaryresults","title":"VolumeQualitySummaryResults","text":"VolumeQualitySummaryResults\n\n\n\nclass ansys.meshing.prime.autogen.volumesearchstructs.VolumeQualitySummaryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, quality_results_part: ansys.meshing.prime.params.primestructs.List[VolumeQualityResultsPart] = None, message: str = None, json_data: dict = None, **kwargs)\n\nResults of volume quality summary.\n\nParameters\n\nmodel (Model) – Model to create a VolumeQualitySummaryResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume quality summary.\n\nquality_results_part (List[VolumeQualityResultsPart], optional) – Contains volume quality result per cell quality measure by parts specified in parameters.\n\nmessage (str, optional) – Volume quality summary text.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeQualitySummaryResults object with provided parameters.\n\nExamples\n\n>>> volume_quality_summary_results = prime.VolumeQualitySummaryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryResults.html#overview","title":"VolumeQualitySummaryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the volume quality summary.\n\nmessage\n\nVolume quality summary text.\n\nquality_results_part\n\nContains volume quality result per cell quality measure by parts specified in parameters.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeQualitySummaryResults object.\n\nset_default\n\nSet the default values of the VolumeQualitySummaryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryResults.html#import-detail","title":"VolumeQualitySummaryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryResults.html#property-detail","title":"VolumeQualitySummaryResults > Property detail","text":"Property detail\n\n\n\nproperty VolumeQualitySummaryResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume quality summary.\n\n\n\nproperty VolumeQualitySummaryResults.message: str\n\nVolume quality summary text.\n\n\n\nproperty VolumeQualitySummaryResults.quality_results_part: ansys.meshing.prime.params.primestructs.List[VolumeQualityResultsPart]\n\nContains volume quality result per cell quality measure by parts specified in parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearchstructs/VolumeQualitySummaryResults.html#method-detail","title":"VolumeQualitySummaryResults > Method detail","text":"Method detail\n\n\n\nVolumeQualitySummaryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeQualitySummaryResults.__str__() -> str\n\n\n\n\n\nstatic VolumeQualitySummaryResults.print_default()\n\nPrint the default values of VolumeQualitySummaryResults object.\n\nExamples\n\n>>> VolumeQualitySummaryResults.print_default()\n\n\n\nstatic VolumeQualitySummaryResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, quality_results_part: ansys.meshing.prime.params.primestructs.List[VolumeQualityResultsPart] = None, message: str = None)\n\nSet the default values of the VolumeQualitySummaryResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the volume quality summary.\n\nquality_results_part (List[VolumeQualityResultsPart], optional) – Contains volume quality result per cell quality measure by parts specified in parameters.\n\nmessage (str, optional) – Volume quality summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizingType.html#sizingtype","title":"SizingType","text":"SizingType\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.SizingType\n\nSizing type decides the type of size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizingType.html#overview","title":"SizingType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBOI\n\nDenotes the size control type is body of influence.\n\nCURVATURE\n\nDenotes the size control type is curvature.\n\nHARD\n\nDenotes the size control type is hard.\n\nMESHED\n\nDenotes the size control type is meshed.\n\nPROXIMITY\n\nDenotes the size control type is proximity.\n\nSOFT\n\nDenotes the size control type is soft.\n\nSOI\n\nDenotes the size control type is sphere of influence."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizingType.html#import-detail","title":"SizingType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizingType.html#attribute-detail","title":"SizingType > Attribute detail","text":"Attribute detail\n\n\n\nSizingType.BOI = 5\n\nDenotes the size control type is body of influence.\n\n\n\nSizingType.CURVATURE = 0\n\nDenotes the size control type is curvature.\n\n\n\nSizingType.HARD = 2\n\nDenotes the size control type is hard.\n\n\n\nSizingType.MESHED = 4\n\nDenotes the size control type is meshed.\n\n\n\nSizingType.PROXIMITY = 1\n\nDenotes the size control type is proximity.\n\n\n\nSizingType.SOFT = 3\n\nDenotes the size control type is soft.\n\n\n\nSizingType.SOI = 6\n\nDenotes the size control type is sphere of influence.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilities/TopoUtilities.html#topoutilities","title":"TopoUtilities","text":"TopoUtilities\n\n\n\nclass ansys.meshing.prime.autogen.topoutilities.TopoUtilities(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, part_id: int)\n\nPerforms various general topology utility algorithms. For example, fill hole.\n\nParameters\n\nmodel (Model) – Server model to create TopoUtilities object.\n\npart_id (int) – Id of the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilities/TopoUtilities.html#overview","title":"TopoUtilities > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfill_hole\n\nFill holes bounded by given topoedges.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for TopoUtilities.\n\n__exit__\n\nExit context for TopoUtilities.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilities/TopoUtilities.html#import-detail","title":"TopoUtilities > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilities/TopoUtilities.html#method-detail","title":"TopoUtilities > Method detail","text":"Method detail\n\n\n\nTopoUtilities.__enter__()\n\nEnter context for TopoUtilities.\n\n\n\nTopoUtilities.__exit__(type, value, traceback)\n\nExit context for TopoUtilities.\n\n\n\nTopoUtilities.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTopoUtilities.fill_hole(topo_edges: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.TopoFillHoleParams) -> ansys.meshing.prime.params.primestructs.TopoFillHoleResult\n\nFill holes bounded by given topoedges.\n\nParameters\n\ntopo_edges (Iterable[int]) – Ids of topoedges to be used to find holes.\n\nparams (TopoFillHoleParams) – Parameters to fill holes.\n\nReturns\n\nReturn the TopoFillHoleResult.\n\nReturn type\n\nTopoFillHoleResult\n\nExamples\n\n>>> results = topo_utils.fill_hole(topo_edges, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_wheel_ground_dsco.html#ansysmeshingprimeexamplesexamplesdownload_wheel_ground_dsco","title":"ansys.meshing.prime.examples.examples.download_wheel_ground_dsco","text":"ansys.meshing.prime.examples.examples.download_wheel_ground_dsco\n\n\n\nansys.meshing.prime.examples.examples.download_wheel_ground_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the wheel ground contact patch example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TetMeshSplineParams.html#tetmeshsplineparams","title":"TetMeshSplineParams","text":"TetMeshSplineParams\n\n\n\nclass ansys.meshing.prime.autogen.trimmedsplinestructs.TetMeshSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_angle: float = None, mode: TrimmedSolidSplineCutMode = None, decimation_factor: float = None, json_data: dict = None, **kwargs)\n\nParameters for meshing the solid spline.\n\nParameters\n\nmodel (Model) – Model to create a TetMeshSplineParams object with default parameters.\n\nfeature_angle (float, optional) – Feature angle used in meshing of the solid spline.This is a beta parameter. The behavior and name may change in the future.\n\nmode (TrimmedSolidSplineCutMode, optional) – Cut mode to specify rule for mesh cell selection in the volume mesh.This is a beta parameter. The behavior and name may change in the future.\n\ndecimation_factor (float, optional) – Decimation factor used in meshing of the solid spline.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a TetMeshSplineParams object with provided parameters.\n\nExamples\n\n>>> tet_mesh_spline_params = prime.TetMeshSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TetMeshSplineParams.html#overview","title":"TetMeshSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndecimation_factor\n\nDecimation factor used in meshing of the solid spline.\n\nfeature_angle\n\nFeature angle used in meshing of the solid spline.\n\nmode\n\nCut mode to specify rule for mesh cell selection in the volume mesh.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TetMeshSplineParams object.\n\nset_default\n\nSet the default values of the TetMeshSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TetMeshSplineParams.html#import-detail","title":"TetMeshSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TetMeshSplineParams.html#property-detail","title":"TetMeshSplineParams > Property detail","text":"Property detail\n\n\n\nproperty TetMeshSplineParams.decimation_factor: float\n\nDecimation factor used in meshing of the solid spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty TetMeshSplineParams.feature_angle: float\n\nFeature angle used in meshing of the solid spline.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty TetMeshSplineParams.mode: TrimmedSolidSplineCutMode\n\nCut mode to specify rule for mesh cell selection in the volume mesh.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TetMeshSplineParams.html#method-detail","title":"TetMeshSplineParams > Method detail","text":"Method detail\n\n\n\nTetMeshSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTetMeshSplineParams.__str__() -> str\n\n\n\n\n\nstatic TetMeshSplineParams.print_default()\n\nPrint the default values of TetMeshSplineParams object.\n\nExamples\n\n>>> TetMeshSplineParams.print_default()\n\n\n\nstatic TetMeshSplineParams.set_default(feature_angle: float = None, mode: TrimmedSolidSplineCutMode = None, decimation_factor: float = None)\n\nSet the default values of the TetMeshSplineParams object.\n\nParameters\n\nfeature_angle (float, optional) – Feature angle used in meshing of the solid spline.\n\nmode (TrimmedSolidSplineCutMode, optional) – Cut mode to specify rule for mesh cell selection in the volume mesh.\n\ndecimation_factor (float, optional) – Decimation factor used in meshing of the solid spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/VolumeScope.html#volumescope","title":"VolumeScope","text":"VolumeScope\n\n\n\nclass ansys.meshing.prime.lucid.scope.VolumeScope(part_expression: str = '*', entity_expression: str = '*', scope_evaluation_type: ansys.meshing.prime.autogen.controlstructs.ScopeEvaluationType = ScopeEvaluationType.ZONES)\n\nVolumeScope is one of the classes in Lucid API.\n\nThis class is meant for beginners to meshing. This class is used to define\na scope for operation on volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/VolumeScope.html#overview","title":"VolumeScope > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_scope_definition\n\nGet the scope definition of the scope.\n\nSpecial methods\n\n\n\n\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/VolumeScope.html#import-detail","title":"VolumeScope > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/VolumeScope.html#method-detail","title":"VolumeScope > Method detail","text":"Method detail\n\n\n\nVolumeScope.__str__() -> str\n\n\n\n\n\nVolumeScope.get_scope_definition(model: ansys.meshing.prime.core.model.Model) -> ansys.meshing.prime.autogen.controlstructs.ScopeDefinition\n\nGet the scope definition of the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\nReturns\n\nReturns the scope definition.\n\nReturn type\n\nScopeDefinition"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaResults.html#exportlsdynaresults","title":"ExportLSDynaResults","text":"ExportLSDynaResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, summary_log: str = None, zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the LS-DYNA export.\n\nParameters\n\nmodel (Model) – Model to create a ExportLSDynaResults object with default parameters.\n\nsummary_log (str, optional) – Summary log for the import operation in json format.This is a beta parameter. The behavior and name may change in the future.\n\nzone_mesh_results (List[ZoneMeshResult], optional) – Zone-wise mesh information for elements in the exported model.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportLSDynaResults object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_results = prime.ExportLSDynaResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaResults.html#overview","title":"ExportLSDynaResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nsummary_log\n\nSummary log for the import operation in json format.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nzone_mesh_results\n\nZone-wise mesh information for elements in the exported model.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportLSDynaResults object.\n\nset_default\n\nSet the default values of the ExportLSDynaResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaResults.html#import-detail","title":"ExportLSDynaResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaResults.html#property-detail","title":"ExportLSDynaResults > Property detail","text":"Property detail\n\n\n\nproperty ExportLSDynaResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaResults.summary_log: str\n\nSummary log for the import operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaResults.zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult]\n\nZone-wise mesh information for elements in the exported model.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaResults.html#method-detail","title":"ExportLSDynaResults > Method detail","text":"Method detail\n\n\n\nExportLSDynaResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportLSDynaResults.__str__() -> str\n\n\n\n\n\nstatic ExportLSDynaResults.print_default()\n\nPrint the default values of ExportLSDynaResults object.\n\nExamples\n\n>>> ExportLSDynaResults.print_default()\n\n\n\nstatic ExportLSDynaResults.set_default(summary_log: str = None, zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ExportLSDynaResults object.\n\nParameters\n\nsummary_log (str, optional) – Summary log for the import operation in json format.\n\nzone_mesh_results (List[ZoneMeshResult], optional) – Zone-wise mesh information for elements in the exported model.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseParams.html#importfluentcaseparams","title":"ImportFluentCaseParams","text":"ImportFluentCaseParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportFluentCaseParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, json_data: dict = None, **kwargs)\n\nParameters to import fluent case file.\n\nParameters\n\nmodel (Model) – Model to create a ImportFluentCaseParams object with default parameters.\n\nappend (bool, optional) – Option to append imported case instead of resetting model to imported case.\n\njson_data (dict, optional) – JSON dictionary to create a ImportFluentCaseParams object with provided parameters.\n\nExamples\n\n>>> import_fluent_case_params = prime.ImportFluentCaseParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseParams.html#overview","title":"ImportFluentCaseParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append imported case instead of resetting model to imported case.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportFluentCaseParams object.\n\nset_default\n\nSet the default values of the ImportFluentCaseParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseParams.html#import-detail","title":"ImportFluentCaseParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseParams.html#property-detail","title":"ImportFluentCaseParams > Property detail","text":"Property detail\n\n\n\nproperty ImportFluentCaseParams.append: bool\n\nOption to append imported case instead of resetting model to imported case."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentCaseParams.html#method-detail","title":"ImportFluentCaseParams > Method detail","text":"Method detail\n\n\n\nImportFluentCaseParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportFluentCaseParams.__str__() -> str\n\n\n\n\n\nstatic ImportFluentCaseParams.print_default()\n\nPrint the default values of ImportFluentCaseParams object.\n\nExamples\n\n>>> ImportFluentCaseParams.print_default()\n\n\n\nstatic ImportFluentCaseParams.set_default(append: bool = None)\n\nSet the default values of the ImportFluentCaseParams object.\n\nParameters\n\nappend (bool, optional) – Option to append imported case instead of resetting model to imported case."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlOffsetType.html#prismcontroloffsettype","title":"PrismControlOffsetType","text":"PrismControlOffsetType\n\n\n\nclass ansys.meshing.prime.autogen.prismcontrolstructs.PrismControlOffsetType\n\nOffset type for prism control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlOffsetType.html#overview","title":"PrismControlOffsetType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASPECTRATIO\n\nOption to grow prism layers based on first aspect ratio specified.\n\nLASTRATIO\n\nOption to grow prism layers based on first height and last aspect ratio.\n\nUNIFORM\n\nOption to grow prism layers with uniform offset height based on first height."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlOffsetType.html#import-detail","title":"PrismControlOffsetType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrolstructs/PrismControlOffsetType.html#attribute-detail","title":"PrismControlOffsetType > Attribute detail","text":"Attribute detail\n\n\n\nPrismControlOffsetType.ASPECTRATIO = 1\n\nOption to grow prism layers based on first aspect ratio specified.\n\n\n\nPrismControlOffsetType.LASTRATIO = 2\n\nOption to grow prism layers based on first height and last aspect ratio.\n\n\n\nPrismControlOffsetType.UNIFORM = 0\n\nOption to grow prism layers with uniform offset height based on first height."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/SurfaceScope.html#surfacescope","title":"SurfaceScope","text":"SurfaceScope\n\n\n\nclass ansys.meshing.prime.lucid.scope.SurfaceScope(part_expression: str = '*', entity_expression: str = '*', scope_evaluation_type: ansys.meshing.prime.autogen.controlstructs.ScopeEvaluationType = ScopeEvaluationType.LABELS)\n\nSurfaceScope is one of the classes in Lucid API.\n\nThis class is meant for beginners to meshing. This class is used to define\na scope for operation on surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/SurfaceScope.html#overview","title":"SurfaceScope > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_face_zonelets\n\nGet the list of face zonelets for the given part in the scope.\n\nget_parts\n\nGet the list of part ids in the scope.\n\nget_scope_definition\n\nGet the scope definition of the scope.\n\nget_topo_faces\n\nGet the list of topofaces for the given part in the scope.\n\nSpecial methods\n\n\n\n\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/SurfaceScope.html#import-detail","title":"SurfaceScope > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/SurfaceScope.html#method-detail","title":"SurfaceScope > Method detail","text":"Method detail\n\n\n\nSurfaceScope.__str__() -> str\n\n\n\n\n\nSurfaceScope.get_face_zonelets(model: ansys.meshing.prime.core.model.Model, part_id: int) -> Iterable[int]\n\nGet the list of face zonelets for the given part in the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\npart_id (int) – Id of the part.\n\nReturns\n\nReturns the list of zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> face_zonelets = su.get_face_zonelets(model, 2)\n\n\n\nSurfaceScope.get_parts(model: ansys.meshing.prime.core.model.Model) -> Iterable[int]\n\nGet the list of part ids in the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\nReturns\n\nReturns the list of part ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> part_ids = su.get_parts()\n\n\n\nSurfaceScope.get_scope_definition(model: ansys.meshing.prime.core.model.Model) -> ansys.meshing.prime.autogen.controlstructs.ScopeDefinition\n\nGet the scope definition of the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\nReturns\n\nReturns the scope definition.\n\nReturn type\n\nScopeDefinition\n\n\n\nSurfaceScope.get_topo_faces(model: ansys.meshing.prime.core.model.Model, part_id: int) -> Iterable[int]\n\nGet the list of topofaces for the given part in the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\npart_id (int) – Id of the part.\n\nReturns\n\nReturns the list of zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> topo_faces = su.get_topo_faces(model, 2)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BodyQueryType.html#bodyquerytype","title":"BodyQueryType","text":"BodyQueryType\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.BodyQueryType\n\nIndicates type of entity to query in part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BodyQueryType.html#overview","title":"BodyQueryType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALL\n\nReturns all entities in part.\n\nFREE\n\nReturns only free entities in part.\n\nNONFREE\n\nReturns entities associated with non-free body in part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BodyQueryType.html#import-detail","title":"BodyQueryType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BodyQueryType.html#attribute-detail","title":"BodyQueryType > Attribute detail","text":"Attribute detail\n\n\n\nBodyQueryType.ALL = 0\n\nReturns all entities in part.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nBodyQueryType.FREE = 1\n\nReturns only free entities in part.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nBodyQueryType.NONFREE = 2\n\nReturns entities associated with non-free body in part.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlGrowthParams.html#prismcontrolgrowthparams","title":"PrismControlGrowthParams","text":"PrismControlGrowthParams\n\n\n\nclass ansys.meshing.prime.PrismControlGrowthParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, offset_type: PrismControlOffsetType = None, n_layers: int = None, growth_rate: float = None, first_height: float = None, first_aspect_ratio: float = None, last_aspect_ratio: float = None, min_aspect_ratio: float = None, json_data: dict = None, **kwargs)\n\nGrowth parameters for prism control.\n\nParameters\n\nmodel (Model) – Model to create a PrismControlGrowthParams object with default parameters.\n\noffset_type (PrismControlOffsetType, optional) – Offset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height.\n\nn_layers (int, optional) – Number of prism layers to be generated. It is used for all prism control offset types.\n\ngrowth_rate (float, optional) – Growth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\nfirst_height (float, optional) – Height to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\nfirst_aspect_ratio (float, optional) – Aspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\nlast_aspect_ratio (float, optional) – Apsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\nmin_aspect_ratio (float, optional) – Minimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types.\n\njson_data (dict, optional) – JSON dictionary to create a PrismControlGrowthParams object with provided parameters.\n\nExamples\n\n>>> prism_control_growth_params = prime.PrismControlGrowthParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlGrowthParams.html#overview","title":"PrismControlGrowthParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nfirst_aspect_ratio\n\nAspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\nfirst_height\n\nHeight to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\ngrowth_rate\n\nGrowth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\nlast_aspect_ratio\n\nApsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\nmin_aspect_ratio\n\nMinimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types.\n\nn_layers\n\nNumber of prism layers to be generated. It is used for all prism control offset types.\n\noffset_type\n\nOffset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PrismControlGrowthParams object.\n\nset_default\n\nSet the default values of the PrismControlGrowthParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlGrowthParams.html#import-detail","title":"PrismControlGrowthParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlGrowthParams.html#property-detail","title":"PrismControlGrowthParams > Property detail","text":"Property detail\n\n\n\nproperty PrismControlGrowthParams.first_aspect_ratio: float\n\nAspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\n\n\nproperty PrismControlGrowthParams.first_height: float\n\nHeight to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\n\n\nproperty PrismControlGrowthParams.growth_rate: float\n\nGrowth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\n\n\nproperty PrismControlGrowthParams.last_aspect_ratio: float\n\nApsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\n\n\nproperty PrismControlGrowthParams.min_aspect_ratio: float\n\nMinimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types.\n\n\n\nproperty PrismControlGrowthParams.n_layers: int\n\nNumber of prism layers to be generated. It is used for all prism control offset types.\n\n\n\nproperty PrismControlGrowthParams.offset_type: PrismControlOffsetType\n\nOffset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControlGrowthParams.html#method-detail","title":"PrismControlGrowthParams > Method detail","text":"Method detail\n\n\n\nPrismControlGrowthParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismControlGrowthParams.__str__() -> str\n\n\n\n\n\nstatic PrismControlGrowthParams.print_default()\n\nPrint the default values of PrismControlGrowthParams object.\n\nExamples\n\n>>> PrismControlGrowthParams.print_default()\n\n\n\nstatic PrismControlGrowthParams.set_default(offset_type: PrismControlOffsetType = None, n_layers: int = None, growth_rate: float = None, first_height: float = None, first_aspect_ratio: float = None, last_aspect_ratio: float = None, min_aspect_ratio: float = None)\n\nSet the default values of the PrismControlGrowthParams object.\n\nParameters\n\noffset_type (PrismControlOffsetType, optional) – Offset type controls the method that is used to compute prism layer heights. The following options are supported.The aspect ratio option takes first aspect ratio, number of layers and growth rate. It ignores first height as input.The uniform option takes first height, number of layers and growth rate. It ignores first aspect ratio as input.Aspect ratio is ratio of prism base to height.\n\nn_layers (int, optional) – Number of prism layers to be generated. It is used for all prism control offset types.\n\ngrowth_rate (float, optional) – Growth rate to be used to compute prism layer heights. It is used when prism control offset type is ASPECTRATIO or UNIFORM.\n\nfirst_height (float, optional) – Height to be used for first layer and adjust following layer height based on other settings. It is used when prism control offset type is UNIFORM.\n\nfirst_aspect_ratio (float, optional) – Aspect ratio to be used to compute first layer height. It is used only when prism control offset type is ASPECTRATIO.\n\nlast_aspect_ratio (float, optional) – Apsect ratio of the last layer. The heights of the other layers is computed based on number of layers and first height. This is used only when prism control offset type is LASTRATIO.\n\nmin_aspect_ratio (float, optional) – Minimum apsect ratio limit to be used for all the layers. This condition is respected in all offset types."},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryParams.html#projectongeometryparams","title":"ProjectOnGeometryParams","text":"ProjectOnGeometryParams\n\n\n\nclass ansys.meshing.prime.ProjectOnGeometryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, project_only_mid_nodes: bool = None, project_on_facets_if_cadnot_found: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to project topoface nodes on associated geometry.\n\nParameters\n\nmodel (Model) – Model to create a ProjectOnGeometryParams object with default parameters.\n\nproject_only_mid_nodes (bool, optional) – Option to project only the mid nodes.This is a beta parameter. The behavior and name may change in the future.\n\nproject_on_facets_if_cadnot_found (bool, optional) – Option to project on facet if geometry is not found.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ProjectOnGeometryParams object with provided parameters.\n\nExamples\n\n>>> project_on_geometry_params = prime.ProjectOnGeometryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryParams.html#overview","title":"ProjectOnGeometryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nproject_on_facets_if_cadnot_found\n\nOption to project on facet if geometry is not found.\n\nproject_only_mid_nodes\n\nOption to project only the mid nodes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ProjectOnGeometryParams object.\n\nset_default\n\nSet the default values of the ProjectOnGeometryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryParams.html#import-detail","title":"ProjectOnGeometryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryParams.html#property-detail","title":"ProjectOnGeometryParams > Property detail","text":"Property detail\n\n\n\nproperty ProjectOnGeometryParams.project_on_facets_if_cadnot_found: bool\n\nOption to project on facet if geometry is not found.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ProjectOnGeometryParams.project_only_mid_nodes: bool\n\nOption to project only the mid nodes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ProjectOnGeometryParams.html#method-detail","title":"ProjectOnGeometryParams > Method detail","text":"Method detail\n\n\n\nProjectOnGeometryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nProjectOnGeometryParams.__str__() -> str\n\n\n\n\n\nstatic ProjectOnGeometryParams.print_default()\n\nPrint the default values of ProjectOnGeometryParams object.\n\nExamples\n\n>>> ProjectOnGeometryParams.print_default()\n\n\n\nstatic ProjectOnGeometryParams.set_default(project_only_mid_nodes: bool = None, project_on_facets_if_cadnot_found: bool = None)\n\nSet the default values of the ProjectOnGeometryParams object.\n\nParameters\n\nproject_only_mid_nodes (bool, optional) – Option to project only the mid nodes.\n\nproject_on_facets_if_cadnot_found (bool, optional) – Option to project on facet if geometry is not found."},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectResults.html#connectresults","title":"ConnectResults","text":"ConnectResults\n\n\n\nclass ansys.meshing.prime.ConnectResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the connection operations.\n\nParameters\n\nmodel (Model) – Model to create a ConnectResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.\n\njson_data (dict, optional) – JSON dictionary to create a ConnectResults object with provided parameters.\n\nExamples\n\n>>> connect_results = prime.ConnectResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectResults.html#overview","title":"ConnectResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ConnectResults object.\n\nset_default\n\nSet the default values of the ConnectResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectResults.html#import-detail","title":"ConnectResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectResults.html#property-detail","title":"ConnectResults > Property detail","text":"Property detail\n\n\n\nproperty ConnectResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with failure of operation.\n\n\n\nproperty ConnectResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ConnectResults.html#method-detail","title":"ConnectResults > Method detail","text":"Method detail\n\n\n\nConnectResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nConnectResults.__str__() -> str\n\n\n\n\n\nstatic ConnectResults.print_default()\n\nPrint the default values of ConnectResults object.\n\nExamples\n\n>>> ConnectResults.print_default()\n\n\n\nstatic ConnectResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ConnectResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddToZoneResults.html#addtozoneresults","title":"AddToZoneResults","text":"AddToZoneResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.AddToZoneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the add to zone operation.\n\nParameters\n\nmodel (Model) – Model to create a AddToZoneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the add to zone operation.\n\njson_data (dict, optional) – JSON dictionary to create a AddToZoneResults object with provided parameters.\n\nExamples\n\n>>> add_to_zone_results = prime.AddToZoneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddToZoneResults.html#overview","title":"AddToZoneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with the add to zone operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AddToZoneResults object.\n\nset_default\n\nSet the default values of the AddToZoneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddToZoneResults.html#import-detail","title":"AddToZoneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddToZoneResults.html#property-detail","title":"AddToZoneResults > Property detail","text":"Property detail\n\n\n\nproperty AddToZoneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty AddToZoneResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the add to zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddToZoneResults.html#method-detail","title":"AddToZoneResults > Method detail","text":"Method detail\n\n\n\nAddToZoneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAddToZoneResults.__str__() -> str\n\n\n\n\n\nstatic AddToZoneResults.print_default()\n\nPrint the default values of AddToZoneResults object.\n\nExamples\n\n>>> AddToZoneResults.print_default()\n\n\n\nstatic AddToZoneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the AddToZoneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the add to zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_pcb_pmdat.html#ansysmeshingprimeexamplesdownload_pcb_pmdat","title":"ansys.meshing.prime.examples.download_pcb_pmdat","text":"ansys.meshing.prime.examples.download_pcb_pmdat\n\n\n\nansys.meshing.prime.examples.download_pcb_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the PCB example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pcb = prime_examples.download_pcb_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(pcb, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeParams.html#fixinvalidnormalnodeparams","title":"FixInvalidNormalNodeParams","text":"FixInvalidNormalNodeParams\n\n\n\nclass ansys.meshing.prime.FixInvalidNormalNodeParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, nugget_size: float = None, nugget_mesh_size: float = None, label: str = None, json_data: dict = None, **kwargs)\n\nParameters to fix invalid average face normal at nodes by creating a nugget.\n\nParameters\n\nmodel (Model) – Model to create a FixInvalidNormalNodeParams object with default parameters.\n\nnugget_size (float, optional) – Relative size used to create nugget at invalid normal node. The size is relative to mesh size at the node.\n\nnugget_mesh_size (float, optional) – Relative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\nlabel (str, optional) – Label to set on new face zonelets created.\n\njson_data (dict, optional) – JSON dictionary to create a FixInvalidNormalNodeParams object with provided parameters.\n\nExamples\n\n>>> fix_invalid_normal_node_params = prime.FixInvalidNormalNodeParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeParams.html#overview","title":"FixInvalidNormalNodeParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nlabel\n\nLabel to set on new face zonelets created.\n\nnugget_mesh_size\n\nRelative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\nnugget_size\n\nRelative size used to create nugget at invalid normal node. The size is relative to mesh size at the node.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FixInvalidNormalNodeParams object.\n\nset_default\n\nSet the default values of the FixInvalidNormalNodeParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeParams.html#import-detail","title":"FixInvalidNormalNodeParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeParams.html#property-detail","title":"FixInvalidNormalNodeParams > Property detail","text":"Property detail\n\n\n\nproperty FixInvalidNormalNodeParams.label: str\n\nLabel to set on new face zonelets created.\n\n\n\nproperty FixInvalidNormalNodeParams.nugget_mesh_size: float\n\nRelative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\n\n\nproperty FixInvalidNormalNodeParams.nugget_size: float\n\nRelative size used to create nugget at invalid normal node. The size is relative to mesh size at the node."},{"objectID":"Home","href":"api/ansys/meshing/prime/FixInvalidNormalNodeParams.html#method-detail","title":"FixInvalidNormalNodeParams > Method detail","text":"Method detail\n\n\n\nFixInvalidNormalNodeParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFixInvalidNormalNodeParams.__str__() -> str\n\n\n\n\n\nstatic FixInvalidNormalNodeParams.print_default()\n\nPrint the default values of FixInvalidNormalNodeParams object.\n\nExamples\n\n>>> FixInvalidNormalNodeParams.print_default()\n\n\n\nstatic FixInvalidNormalNodeParams.set_default(nugget_size: float = None, nugget_mesh_size: float = None, label: str = None)\n\nSet the default values of the FixInvalidNormalNodeParams object.\n\nParameters\n\nnugget_size (float, optional) – Relative size used to create nugget at invalid normal node. The size is relative to mesh size at the node.\n\nnugget_mesh_size (float, optional) – Relative size used as max size to mesh nugget created at invalid normal node. The size is relative to mesh size at the node.\n\nlabel (str, optional) – Label to set on new face zonelets created."},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectionMask.html#intersectionmask","title":"IntersectionMask","text":"IntersectionMask\n\n\n\nclass ansys.meshing.prime.IntersectionMask\n\nScaffold parameters use intersection mask to define nature of intersection computation."},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectionMask.html#overview","title":"IntersectionMask > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGEEDGE\n\nPerforms edge to edge intersection.\n\nFACEFACE\n\nPerforms face to face intersection.\n\nFACEFACEANDEDGEEDGE\n\nPerform face to face and edge to edge intersections."},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectionMask.html#import-detail","title":"IntersectionMask > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/IntersectionMask.html#attribute-detail","title":"IntersectionMask > Attribute detail","text":"Attribute detail\n\n\n\nIntersectionMask.EDGEEDGE = 1\n\nPerforms edge to edge intersection.\n\n\n\nIntersectionMask.FACEFACE = 2\n\nPerforms face to face intersection.\n\n\n\nIntersectionMask.FACEFACEANDEDGEEDGE = 3\n\nPerform face to face and edge to edge intersections."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_bracket_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_bracket_scdoc","title":"ansys.meshing.prime.examples.examples.download_bracket_scdoc","text":"ansys.meshing.prime.examples.examples.download_bracket_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_bracket_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the bracket scaffold example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/boundaryfittednurbs/BoundaryFittedSpline.html#boundaryfittedspline","title":"BoundaryFittedSpline","text":"BoundaryFittedSpline\n\n\n\nclass ansys.meshing.prime.autogen.boundaryfittednurbs.BoundaryFittedSpline(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nBoundaryFittedSpline helps you to create splines for structured hex-mesh model.\n\nBoundaryFittedSpline allows you to perform H and P refinement.\n\nParameters\n\nmodel (Model) – Server model to create BoundaryFittedSpline object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/boundaryfittednurbs/BoundaryFittedSpline.html#overview","title":"BoundaryFittedSpline > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_boundary_fitted_spline\n\nCreate boundary fitted spline for structured hex-mesh.\n\nrefine_spline\n\nRefine boundary fitted splines.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for BoundaryFittedSpline.\n\n__exit__\n\nExit context for BoundaryFittedSpline.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/boundaryfittednurbs/BoundaryFittedSpline.html#import-detail","title":"BoundaryFittedSpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/boundaryfittednurbs/BoundaryFittedSpline.html#method-detail","title":"BoundaryFittedSpline > Method detail","text":"Method detail\n\n\n\nBoundaryFittedSpline.__enter__()\n\nEnter context for BoundaryFittedSpline.\n\n\n\nBoundaryFittedSpline.__exit__(type, value, traceback)\n\nExit context for BoundaryFittedSpline.\n\n\n\nBoundaryFittedSpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBoundaryFittedSpline.create_boundary_fitted_spline(part_id: int, cell_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], boundary_fitted_spline_params: ansys.meshing.prime.params.primestructs.BoundaryFittedSplineParams) -> ansys.meshing.prime.params.primestructs.IGAResults\n\nCreate boundary fitted spline for structured hex-mesh.\n\nThe hex-mesh can be structured in blocks but must be conformally connected.\nThat is, each block must have six sided volume and must be connected to other blocks through unique face.\nThe degree and number of control points of the spline can be set in the fitting parameter structure.\n\nParameters\n\npart_id (int) – Id of the part.\n\ncell_zonelet_ids (Iterable[int]) – Ids of the cell zonelets on which spline will be fit.\n\nboundary_fitted_spline_params (BoundaryFittedSplineParams) – Structure containing spline fitting parameters.\n\nReturns\n\nReturns the IGAResults.\n\nReturn type\n\nIGAResults\n\nExamples\n\n>>> from ansys.meshing.prime import BoundaryFittedSpline\n>>> #connect client to server and get model from it\n>>> client = Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> boundary_fitted_spline = BoundaryFittedSpline(model = model)\n>>> results = boundary_fitted_spline.create_boundary_fitted_spline(part_id, cell_zonelet_ids, boundary_fitted_spline_params)\n\n\n\nBoundaryFittedSpline.refine_spline(part_id: int, spline_ids: ansys.meshing.prime.params.primestructs.Iterable[int], refine_spline_params: ansys.meshing.prime.params.primestructs.RefineSplineParams) -> ansys.meshing.prime.params.primestructs.IGAResults\n\nRefine boundary fitted splines.\n\nNow H and P refinement are supported.\nRefinement along one or more dimension can be suppressed using refinement parameters in the input.\n\nParameters\n\npart_id (int) – Id of the part.\n\nspline_ids (Iterable[int]) – Ids of the splines on which refinement is performed.\n\nrefine_spline_params (RefineSplineParams) – Structure containing parameters for spline refinement.\n\nReturns\n\nReturns the IGAResults Structure.\n\nReturn type\n\nIGAResults\n\nExamples\n\n>>> from ansys.meshing.prime import BoundaryFittedSpline\n>>> #connect client to server and get model from it\n>>> client = Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> boundary_fitted_spline = BoundaryFittedSpline(model = model)\n>>> results = boundary_fitted_spline.refine_spline(part_id, spline_ids, refine_spline_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeMeshParams.html#thinvolumemeshparams","title":"ThinVolumeMeshParams","text":"ThinVolumeMeshParams\n\n\n\nclass ansys.meshing.prime.ThinVolumeMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_layers: int = None, imprint_sides: bool = None, n_ignore_rings: int = None, json_data: dict = None, **kwargs)\n\nParameters to generate thin volume mesh. This is for internal use only.\n\nParameters\n\nmodel (Model) – Model to create a ThinVolumeMeshParams object with default parameters.\n\nn_layers (int, optional) – Number of thin volume layers to be generated.\n\nimprint_sides (bool, optional) – Checks whether to imprint quad faces on side zonelets.\n\nn_ignore_rings (int, optional) – Number of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally.\n\njson_data (dict, optional) – JSON dictionary to create a ThinVolumeMeshParams object with provided parameters.\n\nExamples\n\n>>> thin_volume_mesh_params = prime.ThinVolumeMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeMeshParams.html#overview","title":"ThinVolumeMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nimprint_sides\n\nChecks whether to imprint quad faces on side zonelets.\n\nn_ignore_rings\n\nNumber of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally.\n\nn_layers\n\nNumber of thin volume layers to be generated.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ThinVolumeMeshParams object.\n\nset_default\n\nSet the default values of the ThinVolumeMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeMeshParams.html#import-detail","title":"ThinVolumeMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeMeshParams.html#property-detail","title":"ThinVolumeMeshParams > Property detail","text":"Property detail\n\n\n\nproperty ThinVolumeMeshParams.imprint_sides: bool\n\nChecks whether to imprint quad faces on side zonelets.\n\n\n\nproperty ThinVolumeMeshParams.n_ignore_rings: int\n\nNumber of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally.\n\n\n\nproperty ThinVolumeMeshParams.n_layers: int\n\nNumber of thin volume layers to be generated."},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeMeshParams.html#method-detail","title":"ThinVolumeMeshParams > Method detail","text":"Method detail\n\n\n\nThinVolumeMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nThinVolumeMeshParams.__str__() -> str\n\n\n\n\n\nstatic ThinVolumeMeshParams.print_default()\n\nPrint the default values of ThinVolumeMeshParams object.\n\nExamples\n\n>>> ThinVolumeMeshParams.print_default()\n\n\n\nstatic ThinVolumeMeshParams.set_default(n_layers: int = None, imprint_sides: bool = None, n_ignore_rings: int = None)\n\nSet the default values of the ThinVolumeMeshParams object.\n\nParameters\n\nn_layers (int, optional) – Number of thin volume layers to be generated.\n\nimprint_sides (bool, optional) – Checks whether to imprint quad faces on side zonelets.\n\nn_ignore_rings (int, optional) – Number of rings of cells at the sides to ignore when no imprint on sides. Volume fill type will be used in this buffer region at the thin volume sides to transition to thin volume mesh internally."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperControl.html#wrappercontrol","title":"WrapperControl","text":"WrapperControl\n\n\n\nclass ansys.meshing.prime.WrapperControl(model: ansys.meshing.prime.internals.comm_manager.CommunicationManager, id: int, object_id: int, name: str)\n\nWrapper Control to describe all parameters and controls used for wrapping..\n\nParameters\n\nmodel (Model) – Server model to create WrapperControl object.\n\nid (int) – Id of the WrapperControl.\n\nobject_id (int) – Object id of the WrapperControl.\n\nname (str) – Name of the WrapperControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperControl.html#overview","title":"WrapperControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_geometry_scope\n\nGets geometry scope of wrapper control.\n\nget_live_material_points\n\nGets list of material point names.\n\nset_contact_preventions\n\nSet contact preventions to the wrapper control.\n\nset_feature_recoveries\n\nSet feature recoveries to the wrapper control.\n\nset_geometry_scope\n\nSets geometry scope to given scope.\n\nset_leak_preventions\n\nSet leak preventions to the wrapper control.\n\nset_live_material_points\n\nSet live material points to the wrapper control.\n\nset_shadow_geometry_scope\n\nSets shadow geometry scope to given scope.\n\nset_suggested_name\n\nSet the unique name for the wrapper control based on a suggested name.\n\nset_suggested_wrapper_part_name\n\nSets the given name for the created wrapper part  after wrapping with the wrapper control.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of WrapperControl.\n\nname\n\nGet the name of the wrapper control.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nGet a representation of the class in string format."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperControl.html#import-detail","title":"WrapperControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperControl.html#property-detail","title":"WrapperControl > Property detail","text":"Property detail\n\n\n\nproperty WrapperControl.id\n\nGet the id of WrapperControl.\n\n\n\nproperty WrapperControl.name\n\nGet the name of the wrapper control.\n\nReturns\n\nName of the wrapper control.\n\nReturn type\n\nstr\n\nExamples\n\n>>> print(wrapper_control.name)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperControl.html#method-detail","title":"WrapperControl > Method detail","text":"Method detail\n\n\n\nWrapperControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperControl.__str__() -> str\n\nGet a representation of the class in string format.\n\nReturns\n\nClass data in string format.\n\nReturn type\n\nstr\n\n\n\nWrapperControl.get_geometry_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets geometry scope of wrapper control.\n\nReturns\n\nReturns ScopeDefinition to scope entities from wrapper control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> geom_scope = wrapper_control.get_geometry_scope()\n\n\n\nWrapperControl.get_live_material_points() -> List[str]\n\nGets list of material point names.\n\nReturns\n\nReturns the list of material point names.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> live_material_point_names = wrapper_control.get_live_material_points()\n\n\n\nWrapperControl.set_contact_preventions(params: List[ansys.meshing.prime.params.primestructs.ContactPreventionParams]) -> ansys.meshing.prime.params.primestructs.SetContactPreventionsResults\n\nSet contact preventions to the wrapper control.\n\nParameters\n\nparams (ContactPreventionParamsArray) – List of contact prevention parameters.\n\nReturns\n\nReturn the set contact prevention results.\n\nReturn type\n\nSetContactPreventionsResults\n\nExamples\n\n>>> set_cont_prev_results = wrapper_control.set_contact_preventions([params])\n\n\n\nWrapperControl.set_feature_recoveries(params: List[ansys.meshing.prime.params.primestructs.FeatureRecoveryParams]) -> ansys.meshing.prime.params.primestructs.SetFeatureRecoveriesResults\n\nSet feature recoveries to the wrapper control.\n\nParameters\n\nparams (FeatureRecoveryParamsArray) – List of feature recovery parameters.\n\nReturns\n\nReturn the set feature recoveries results.\n\nReturn type\n\nSetFeatureRecoveriesResults\n\nExamples\n\n>>> set_feat_rec_results = wrapper_control.set_feature_recoveries([params])\n\n\n\nWrapperControl.set_geometry_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets geometry scope to given scope.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for wrapping.\n\nExamples\n\n>>> wrapper_control.set_geometry_scope(scope)\n\n\n\nWrapperControl.set_leak_preventions(params: List[ansys.meshing.prime.params.primestructs.LeakPreventionParams]) -> ansys.meshing.prime.params.primestructs.SetLeakPreventionsResults\n\nSet leak preventions to the wrapper control.\n\nParameters\n\nparams (LeakPreventionParamsArray) – List of leak prevention parameters.\n\nReturns\n\nReturn the set leak prevention results.\n\nReturn type\n\nSetLeakPreventionsResults\n\nExamples\n\n>>> set_leak_prev_results = wrapper_control.set_leak_preventions([params])\n\n\n\nWrapperControl.set_live_material_points(material_point_names: List[str])\n\nSet live material points to the wrapper control.\n\nParameters\n\nmaterial_point_names (List[str]) – List of live material points.\n\nExamples\n\n>>> wrapper_control.set_live_material_points([\"Fluid1\"])\n\n\n\nWrapperControl.set_shadow_geometry_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets shadow geometry scope to given scope.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope shadow entities for wrapping.\n\nExamples\n\n>>> wrapper_control.set_shadow_geometry_scope(scope)\n\n\n\nWrapperControl.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the wrapper control based on a suggested name.\n\nParameters\n\nname (str) – Suggested name for the wrapper control.\n\nReturns\n\nNewly assigned name of the wrapper control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> wrapper_control.set_suggested_name(\"wrapper_control1\")\n\n\n\nWrapperControl.set_suggested_wrapper_part_name(name: str)\n\nSets the given name for the created wrapper part  after wrapping with the wrapper control.\n\nParameters\n\nname (str) – Suggested name of the wrapper part to be created.\n\nExamples\n\n>>> wrapper_control.set_suggested_wrapper_part_name(\"wrap\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodata/index.html#the-topodatapy-module","title":"The topodata.py module","text":"The topodata.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodata/index.html#summary","title":"The topodata.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTopoData\n\nTopodata has all information about connectivity of nodes, edges, elements and more.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodata/index.html#description","title":"The topodata.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"examples/index.html#examples","title":"Examples","text":"Examples\n\nThese examples show how to use PyPrimeMesh to prepare meshes.\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py\n\nsphx_glr_examples_gallery_examples_gallery_11_solder_ball.py"},{"objectID":"Home","href":"examples/index.html#miscellaneous-examples","title":"Examples > Miscellaneous examples","text":"Miscellaneous examples\n\nThese examples provide tips and tricks for using PyPrimeMesh.\n\nsphx_glr_examples_gallery_examples_misc_example_template.py\n\n\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automesh/AutoMesh.html#automesh","title":"AutoMesh","text":"AutoMesh\n\n\n\nclass ansys.meshing.prime.autogen.automesh.AutoMesh(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nGenerates volume mesh.\n\nPerforms volume meshing using various volume meshing algorithms.\nFor example, with prisms.\n\nParameters\n\nmodel (Model) – Server model to create AutoMesh object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automesh/AutoMesh.html#overview","title":"AutoMesh > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nmesh\n\nPerforms volume meshing on the part with the given meshing parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for AutoMesh.\n\n__exit__\n\nExit context for AutoMesh.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automesh/AutoMesh.html#import-detail","title":"AutoMesh > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automesh/AutoMesh.html#method-detail","title":"AutoMesh > Method detail","text":"Method detail\n\n\n\nAutoMesh.__enter__()\n\nEnter context for AutoMesh.\n\n\n\nAutoMesh.__exit__(type, value, traceback)\n\nExit context for AutoMesh.\n\n\n\nAutoMesh.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoMesh.mesh(part_id: int, automesh_params: ansys.meshing.prime.params.primestructs.AutoMeshParams) -> ansys.meshing.prime.params.primestructs.AutoMeshResults\n\nPerforms volume meshing on the part with the given meshing parameters.\n\nParameters\n\npart_id (int) – Id of the part.\n\nautomesh_params (AutoMeshParams) – Parameters for auto mesh.\n\nReturns\n\nReturns the AutomeshResults.\n\nReturn type\n\nAutoMeshResults\n\nExamples\n\n>>> auto_mesh = AutoMesh(model = model)\n>>> automesh_params = AutoMeshParams(model = model)\n>>> results = auto_mesh.mesh(part_id, automesh_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/ProximitySizingParams.html#proximitysizingparams","title":"ProximitySizingParams","text":"ProximitySizingParams\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.ProximitySizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min: float = None, max: float = None, growth_rate: float = None, elements_per_gap: float = None, ignore_self_proximity: bool = None, ignore_orientation: bool = None, json_data: dict = None, **kwargs)\n\nSize field using proximity size control computes edge and face sizes in gaps using the specified minimum number of element layers.\n\nParameters\n\nmodel (Model) – Model to create a ProximitySizingParams object with default parameters.\n\nmin (float, optional) – Minimum size used for computing edge and face size using proximity size control.\n\nmax (float, optional) – Maximum size used for computing edge and face size using proximity size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\nelements_per_gap (float, optional) – The number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\nignore_self_proximity (bool, optional) – Ignore proximity within zonelets.\n\nignore_orientation (bool, optional) – The ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false.\n\njson_data (dict, optional) – JSON dictionary to create a ProximitySizingParams object with provided parameters.\n\nExamples\n\n>>> proximity_sizing_params = prime.ProximitySizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/ProximitySizingParams.html#overview","title":"ProximitySizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nelements_per_gap\n\nThe number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nignore_orientation\n\nThe ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false.\n\nignore_self_proximity\n\nIgnore proximity within zonelets.\n\nmax\n\nMaximum size used for computing edge and face size using proximity size control.\n\nmin\n\nMinimum size used for computing edge and face size using proximity size control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ProximitySizingParams object.\n\nset_default\n\nSet the default values of the ProximitySizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/ProximitySizingParams.html#import-detail","title":"ProximitySizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/ProximitySizingParams.html#property-detail","title":"ProximitySizingParams > Property detail","text":"Property detail\n\n\n\nproperty ProximitySizingParams.elements_per_gap: float\n\nThe number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\n\n\nproperty ProximitySizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty ProximitySizingParams.ignore_orientation: bool\n\nThe ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false.\n\n\n\nproperty ProximitySizingParams.ignore_self_proximity: bool\n\nIgnore proximity within zonelets.\n\n\n\nproperty ProximitySizingParams.max: float\n\nMaximum size used for computing edge and face size using proximity size control.\n\n\n\nproperty ProximitySizingParams.min: float\n\nMinimum size used for computing edge and face size using proximity size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/ProximitySizingParams.html#method-detail","title":"ProximitySizingParams > Method detail","text":"Method detail\n\n\n\nProximitySizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nProximitySizingParams.__str__() -> str\n\n\n\n\n\nstatic ProximitySizingParams.print_default()\n\nPrint the default values of ProximitySizingParams object.\n\nExamples\n\n>>> ProximitySizingParams.print_default()\n\n\n\nstatic ProximitySizingParams.set_default(min: float = None, max: float = None, growth_rate: float = None, elements_per_gap: float = None, ignore_self_proximity: bool = None, ignore_orientation: bool = None)\n\nSet the default values of the ProximitySizingParams object.\n\nParameters\n\nmin (float, optional) – Minimum size used for computing edge and face size using proximity size control.\n\nmax (float, optional) – Maximum size used for computing edge and face size using proximity size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\nelements_per_gap (float, optional) – The number of elements per gap can be a real value.  This has the effect of stretching face elements with larger sizes along side faces,  or gaps, thereby reducing the overall face count, and ultimately the cell count.\n\nignore_self_proximity (bool, optional) – Ignore proximity within zonelets.\n\nignore_orientation (bool, optional) – The ignore orientation option can be used to ignore the face normal orientation during the proximity calculation. The default is false."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderResults.html#scaffolderresults","title":"ScaffolderResults","text":"ScaffolderResults\n\n\n\nclass ansys.meshing.prime.ScaffolderResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_incomplete_topo_faces: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated to scaffold operation.\n\nParameters\n\nmodel (Model) – Model to create a ScaffolderResults object with default parameters.\n\nn_incomplete_topo_faces (int, optional) – Number of topofaces failed in scaffold operation.\n\nerror_code (ErrorCode, optional) – Error code associated with scaffold operation.\n\njson_data (dict, optional) – JSON dictionary to create a ScaffolderResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_results = prime.ScaffolderResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderResults.html#overview","title":"ScaffolderResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with scaffold operation.\n\nn_incomplete_topo_faces\n\nNumber of topofaces failed in scaffold operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScaffolderResults object.\n\nset_default\n\nSet the default values of the ScaffolderResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderResults.html#import-detail","title":"ScaffolderResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderResults.html#property-detail","title":"ScaffolderResults > Property detail","text":"Property detail\n\n\n\nproperty ScaffolderResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with scaffold operation.\n\n\n\nproperty ScaffolderResults.n_incomplete_topo_faces: int\n\nNumber of topofaces failed in scaffold operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderResults.html#method-detail","title":"ScaffolderResults > Method detail","text":"Method detail\n\n\n\nScaffolderResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolderResults.__str__() -> str\n\n\n\n\n\nstatic ScaffolderResults.print_default()\n\nPrint the default values of ScaffolderResults object.\n\nExamples\n\n>>> ScaffolderResults.print_default()\n\n\n\nstatic ScaffolderResults.set_default(n_incomplete_topo_faces: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ScaffolderResults object.\n\nParameters\n\nn_incomplete_topo_faces (int, optional) – Number of topofaces failed in scaffold operation.\n\nerror_code (ErrorCode, optional) – Error code associated with scaffold operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryResults.html#partsummaryresults","title":"PartSummaryResults","text":"PartSummaryResults\n\n\n\nclass ansys.meshing.prime.PartSummaryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, message: str = None, n_topo_edges: int = None, n_topo_faces: int = None, n_topo_volumes: int = None, n_edge_zonelets: int = None, n_face_zonelets: int = None, n_cell_zonelets: int = None, n_edge_zones: int = None, n_face_zones: int = None, n_volume_zones: int = None, n_labels: int = None, n_nodes: int = None, n_faces: int = None, n_cells: int = None, n_tri_faces: int = None, n_poly_faces: int = None, n_quad_faces: int = None, n_second_order_tri_faces: int = None, n_second_order_quad_faces: int = None, n_tet_cells: int = None, n_pyra_cells: int = None, n_prism_cells: int = None, n_poly_cells: int = None, n_hex_cells: int = None, n_second_order_tet_cells: int = None, n_second_order_pyra_cells: int = None, n_second_order_prism_cells: int = None, n_second_order_hex_cells: int = None, n_unmeshed_topo_faces: int = None, json_data: dict = None, **kwargs)\n\nResults of part summary.\n\nParameters\n\nmodel (Model) – Model to create a PartSummaryResults object with default parameters.\n\nmessage (str, optional) – Part summary text.\n\nn_topo_edges (int, optional) – Number of topoedges.\n\nn_topo_faces (int, optional) – Number of topofaces.\n\nn_topo_volumes (int, optional) – Number of topovolumes.\n\nn_edge_zonelets (int, optional) – Number of edge zonelets.\n\nn_face_zonelets (int, optional) – Number of face zonelets.\n\nn_cell_zonelets (int, optional) – Number of cell zonelets.\n\nn_edge_zones (int, optional) – Number of edge zones.\n\nn_face_zones (int, optional) – Number of face zones.\n\nn_volume_zones (int, optional) – Number of volume zones.\n\nn_labels (int, optional) – Number of labels.\n\nn_nodes (int, optional) – Number of nodes.\n\nn_faces (int, optional) – Number of faces.\n\nn_cells (int, optional) – Number of cells.\n\nn_tri_faces (int, optional) – Number of triangular faces.\n\nn_poly_faces (int, optional) – Number of polygonal faces.\n\nn_quad_faces (int, optional) – Number of quadrilateral faces.\n\nn_second_order_tri_faces (int, optional) – Number of second order triangular faces.\n\nn_second_order_quad_faces (int, optional) – Number of second order quadrilateral faces.\n\nn_tet_cells (int, optional) – Number of tetrahedral cells.\n\nn_pyra_cells (int, optional) – Number of pyramid cells.\n\nn_prism_cells (int, optional) – Number of prism cells.\n\nn_poly_cells (int, optional) – Number of polyhedral cells.\n\nn_hex_cells (int, optional) – Number of hexahedral cells.\n\nn_second_order_tet_cells (int, optional) – Number of second order tetrahedral cells.\n\nn_second_order_pyra_cells (int, optional) – Number of second order pyramid cells.\n\nn_second_order_prism_cells (int, optional) – Number of second order prism cells.\n\nn_second_order_hex_cells (int, optional) – Number of second order hexahedral cells.\n\nn_unmeshed_topo_faces (int, optional) – Number of unmeshed topofaces.\n\njson_data (dict, optional) – JSON dictionary to create a PartSummaryResults object with provided parameters.\n\nExamples\n\n>>> part_summary_results = prime.PartSummaryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryResults.html#overview","title":"PartSummaryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmessage\n\nPart summary text.\n\nn_cell_zonelets\n\nNumber of cell zonelets.\n\nn_cells\n\nNumber of cells.\n\nn_edge_zonelets\n\nNumber of edge zonelets.\n\nn_edge_zones\n\nNumber of edge zones.\n\nn_face_zonelets\n\nNumber of face zonelets.\n\nn_face_zones\n\nNumber of face zones.\n\nn_faces\n\nNumber of faces.\n\nn_hex_cells\n\nNumber of hexahedral cells.\n\nn_labels\n\nNumber of labels.\n\nn_nodes\n\nNumber of nodes.\n\nn_poly_cells\n\nNumber of polyhedral cells.\n\nn_poly_faces\n\nNumber of polygonal faces.\n\nn_prism_cells\n\nNumber of prism cells.\n\nn_pyra_cells\n\nNumber of pyramid cells.\n\nn_quad_faces\n\nNumber of quadrilateral faces.\n\nn_second_order_hex_cells\n\nNumber of second order hexahedral cells.\n\nn_second_order_prism_cells\n\nNumber of second order prism cells.\n\nn_second_order_pyra_cells\n\nNumber of second order pyramid cells.\n\nn_second_order_quad_faces\n\nNumber of second order quadrilateral faces.\n\nn_second_order_tet_cells\n\nNumber of second order tetrahedral cells.\n\nn_second_order_tri_faces\n\nNumber of second order triangular faces.\n\nn_tet_cells\n\nNumber of tetrahedral cells.\n\nn_topo_edges\n\nNumber of topoedges.\n\nn_topo_faces\n\nNumber of topofaces.\n\nn_topo_volumes\n\nNumber of topovolumes.\n\nn_tri_faces\n\nNumber of triangular faces.\n\nn_unmeshed_topo_faces\n\nNumber of unmeshed topofaces.\n\nn_volume_zones\n\nNumber of volume zones.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PartSummaryResults object.\n\nset_default\n\nSet the default values of the PartSummaryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryResults.html#import-detail","title":"PartSummaryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryResults.html#property-detail","title":"PartSummaryResults > Property detail","text":"Property detail\n\n\n\nproperty PartSummaryResults.message: str\n\nPart summary text.\n\n\n\nproperty PartSummaryResults.n_cell_zonelets: int\n\nNumber of cell zonelets.\n\n\n\nproperty PartSummaryResults.n_cells: int\n\nNumber of cells.\n\n\n\nproperty PartSummaryResults.n_edge_zonelets: int\n\nNumber of edge zonelets.\n\n\n\nproperty PartSummaryResults.n_edge_zones: int\n\nNumber of edge zones.\n\n\n\nproperty PartSummaryResults.n_face_zonelets: int\n\nNumber of face zonelets.\n\n\n\nproperty PartSummaryResults.n_face_zones: int\n\nNumber of face zones.\n\n\n\nproperty PartSummaryResults.n_faces: int\n\nNumber of faces.\n\n\n\nproperty PartSummaryResults.n_hex_cells: int\n\nNumber of hexahedral cells.\n\n\n\nproperty PartSummaryResults.n_labels: int\n\nNumber of labels.\n\n\n\nproperty PartSummaryResults.n_nodes: int\n\nNumber of nodes.\n\n\n\nproperty PartSummaryResults.n_poly_cells: int\n\nNumber of polyhedral cells.\n\n\n\nproperty PartSummaryResults.n_poly_faces: int\n\nNumber of polygonal faces.\n\n\n\nproperty PartSummaryResults.n_prism_cells: int\n\nNumber of prism cells.\n\n\n\nproperty PartSummaryResults.n_pyra_cells: int\n\nNumber of pyramid cells.\n\n\n\nproperty PartSummaryResults.n_quad_faces: int\n\nNumber of quadrilateral faces.\n\n\n\nproperty PartSummaryResults.n_second_order_hex_cells: int\n\nNumber of second order hexahedral cells.\n\n\n\nproperty PartSummaryResults.n_second_order_prism_cells: int\n\nNumber of second order prism cells.\n\n\n\nproperty PartSummaryResults.n_second_order_pyra_cells: int\n\nNumber of second order pyramid cells.\n\n\n\nproperty PartSummaryResults.n_second_order_quad_faces: int\n\nNumber of second order quadrilateral faces.\n\n\n\nproperty PartSummaryResults.n_second_order_tet_cells: int\n\nNumber of second order tetrahedral cells.\n\n\n\nproperty PartSummaryResults.n_second_order_tri_faces: int\n\nNumber of second order triangular faces.\n\n\n\nproperty PartSummaryResults.n_tet_cells: int\n\nNumber of tetrahedral cells.\n\n\n\nproperty PartSummaryResults.n_topo_edges: int\n\nNumber of topoedges.\n\n\n\nproperty PartSummaryResults.n_topo_faces: int\n\nNumber of topofaces.\n\n\n\nproperty PartSummaryResults.n_topo_volumes: int\n\nNumber of topovolumes.\n\n\n\nproperty PartSummaryResults.n_tri_faces: int\n\nNumber of triangular faces.\n\n\n\nproperty PartSummaryResults.n_unmeshed_topo_faces: int\n\nNumber of unmeshed topofaces.\n\n\n\nproperty PartSummaryResults.n_volume_zones: int\n\nNumber of volume zones."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryResults.html#method-detail","title":"PartSummaryResults > Method detail","text":"Method detail\n\n\n\nPartSummaryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPartSummaryResults.__str__() -> str\n\n\n\n\n\nstatic PartSummaryResults.print_default()\n\nPrint the default values of PartSummaryResults object.\n\nExamples\n\n>>> PartSummaryResults.print_default()\n\n\n\nstatic PartSummaryResults.set_default(message: str = None, n_topo_edges: int = None, n_topo_faces: int = None, n_topo_volumes: int = None, n_edge_zonelets: int = None, n_face_zonelets: int = None, n_cell_zonelets: int = None, n_edge_zones: int = None, n_face_zones: int = None, n_volume_zones: int = None, n_labels: int = None, n_nodes: int = None, n_faces: int = None, n_cells: int = None, n_tri_faces: int = None, n_poly_faces: int = None, n_quad_faces: int = None, n_second_order_tri_faces: int = None, n_second_order_quad_faces: int = None, n_tet_cells: int = None, n_pyra_cells: int = None, n_prism_cells: int = None, n_poly_cells: int = None, n_hex_cells: int = None, n_second_order_tet_cells: int = None, n_second_order_pyra_cells: int = None, n_second_order_prism_cells: int = None, n_second_order_hex_cells: int = None, n_unmeshed_topo_faces: int = None)\n\nSet the default values of the PartSummaryResults object.\n\nParameters\n\nmessage (str, optional) – Part summary text.\n\nn_topo_edges (int, optional) – Number of topoedges.\n\nn_topo_faces (int, optional) – Number of topofaces.\n\nn_topo_volumes (int, optional) – Number of topovolumes.\n\nn_edge_zonelets (int, optional) – Number of edge zonelets.\n\nn_face_zonelets (int, optional) – Number of face zonelets.\n\nn_cell_zonelets (int, optional) – Number of cell zonelets.\n\nn_edge_zones (int, optional) – Number of edge zones.\n\nn_face_zones (int, optional) – Number of face zones.\n\nn_volume_zones (int, optional) – Number of volume zones.\n\nn_labels (int, optional) – Number of labels.\n\nn_nodes (int, optional) – Number of nodes.\n\nn_faces (int, optional) – Number of faces.\n\nn_cells (int, optional) – Number of cells.\n\nn_tri_faces (int, optional) – Number of triangular faces.\n\nn_poly_faces (int, optional) – Number of polygonal faces.\n\nn_quad_faces (int, optional) – Number of quadrilateral faces.\n\nn_second_order_tri_faces (int, optional) – Number of second order triangular faces.\n\nn_second_order_quad_faces (int, optional) – Number of second order quadrilateral faces.\n\nn_tet_cells (int, optional) – Number of tetrahedral cells.\n\nn_pyra_cells (int, optional) – Number of pyramid cells.\n\nn_prism_cells (int, optional) – Number of prism cells.\n\nn_poly_cells (int, optional) – Number of polyhedral cells.\n\nn_hex_cells (int, optional) – Number of hexahedral cells.\n\nn_second_order_tet_cells (int, optional) – Number of second order tetrahedral cells.\n\nn_second_order_pyra_cells (int, optional) – Number of second order pyramid cells.\n\nn_second_order_prism_cells (int, optional) – Number of second order prism cells.\n\nn_second_order_hex_cells (int, optional) – Number of second order hexahedral cells.\n\nn_unmeshed_topo_faces (int, optional) – Number of unmeshed topofaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controldata/index.html#the-controldatapy-module","title":"The controldata.py module","text":"The controldata.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controldata/index.html#summary","title":"The controldata.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nControlData\n\nControlData has all controls like size controls, prism controls, wrapper controls and more.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controldata/index.html#description","title":"The controldata.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellZoneletType.html#cellzonelettype","title":"CellZoneletType","text":"CellZoneletType\n\n\n\nclass ansys.meshing.prime.CellZoneletType\n\nTypes of cell zonelet."},{"objectID":"Home","href":"api/ansys/meshing/prime/CellZoneletType.html#overview","title":"CellZoneletType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDEAD\n\nCell zonelet type is dead.\n\nFLUID\n\nCell zonelet type is fluid.\n\nSOLID\n\nCell zonelet type is solid."},{"objectID":"Home","href":"api/ansys/meshing/prime/CellZoneletType.html#import-detail","title":"CellZoneletType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellZoneletType.html#attribute-detail","title":"CellZoneletType > Attribute detail","text":"Attribute detail\n\n\n\nCellZoneletType.DEAD = 0\n\nCell zonelet type is dead.\n\n\n\nCellZoneletType.FLUID = 1\n\nCell zonelet type is fluid.\n\n\n\nCellZoneletType.SOLID = 17\n\nCell zonelet type is solid."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfer/index.html#the-surferpy-module","title":"The surfer.py module","text":"The surfer.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfer/index.html#summary","title":"The surfer.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSurfer\n\nGenerates surface mesh.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfer/index.html#description","title":"The surfer.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/RefineSplineParams.html#refinesplineparams","title":"RefineSplineParams","text":"RefineSplineParams\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.RefineSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, refine_flag_u: bool = None, refine_flag_v: bool = None, refine_flag_w: bool = None, spline_refinement_type: SplineRefinementType = None, json_data: dict = None, **kwargs)\n\nSpline refinement parameters.\n\nParameters\n\nmodel (Model) – Model to create a RefineSplineParams object with default parameters.\n\nrefine_flag_u (bool, optional) – Indicates whether refinement is applied in u direction.\n\nrefine_flag_v (bool, optional) – Indicates whether refinement is applied in v direction.\n\nrefine_flag_w (bool, optional) – Indicates whether refinement is applied in w direction.\n\nspline_refinement_type (SplineRefinementType, optional) – Type of spline refinement. Currently, supports h-refinement and p-refinement.\n\njson_data (dict, optional) – JSON dictionary to create a RefineSplineParams object with provided parameters.\n\nExamples\n\n>>> refine_spline_params = prime.RefineSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/RefineSplineParams.html#overview","title":"RefineSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nrefine_flag_u\n\nIndicates whether refinement is applied in u direction.\n\nrefine_flag_v\n\nIndicates whether refinement is applied in v direction.\n\nrefine_flag_w\n\nIndicates whether refinement is applied in w direction.\n\nspline_refinement_type\n\nType of spline refinement. Currently, supports h-refinement and p-refinement.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RefineSplineParams object.\n\nset_default\n\nSet the default values of the RefineSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/RefineSplineParams.html#import-detail","title":"RefineSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/RefineSplineParams.html#property-detail","title":"RefineSplineParams > Property detail","text":"Property detail\n\n\n\nproperty RefineSplineParams.refine_flag_u: bool\n\nIndicates whether refinement is applied in u direction.\n\n\n\nproperty RefineSplineParams.refine_flag_v: bool\n\nIndicates whether refinement is applied in v direction.\n\n\n\nproperty RefineSplineParams.refine_flag_w: bool\n\nIndicates whether refinement is applied in w direction.\n\n\n\nproperty RefineSplineParams.spline_refinement_type: SplineRefinementType\n\nType of spline refinement. Currently, supports h-refinement and p-refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/RefineSplineParams.html#method-detail","title":"RefineSplineParams > Method detail","text":"Method detail\n\n\n\nRefineSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRefineSplineParams.__str__() -> str\n\n\n\n\n\nstatic RefineSplineParams.print_default()\n\nPrint the default values of RefineSplineParams object.\n\nExamples\n\n>>> RefineSplineParams.print_default()\n\n\n\nstatic RefineSplineParams.set_default(refine_flag_u: bool = None, refine_flag_v: bool = None, refine_flag_w: bool = None, spline_refinement_type: SplineRefinementType = None)\n\nSet the default values of the RefineSplineParams object.\n\nParameters\n\nrefine_flag_u (bool, optional) – Indicates whether refinement is applied in u direction.\n\nrefine_flag_v (bool, optional) – Indicates whether refinement is applied in v direction.\n\nrefine_flag_w (bool, optional) – Indicates whether refinement is applied in w direction.\n\nspline_refinement_type (SplineRefinementType, optional) – Type of spline refinement. Currently, supports h-refinement and p-refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/Part.html#part","title":"Part","text":"Part\n\n\n\nclass ansys.meshing.prime.core.part.Part(model, id: int, object_id: int, name: str)\n\nPart contains zonelets and topoentities.\n\nTopoentities and zonelets are characterized by dimension of entities.\nZonelets are a group of interconnected elements in a mesh. There are three types of zonelets.\nThey are:\n\nFaceZonelet: A group of interconnected face elements.\n\nEdgeZonelet: A group of interconnected edge elements.\n\nCellZonelet: A group of interconnected cell elements.\n\nTopoentities represent connectivity information.\nTopoentities can be queried from higher order to lower order topoentities and vice versa.\nTopoentities have geometric representation which may be defined by splines or facets.\nThe mesh generated on topoentities will be projected on geometry representation.\n\nTopoFace: Topoentity representing surfaces.\n\nTopoEdge: Topoentity representing curves.\n\nTopoVolume: Topoentity representing volumes.\n\nParameters\n\nmodel (Model) – Server model to create Part object.\n\nid (int) – Id of the Part.\n\nobject_id (int) – Object id of the Part.\n\nname (str) – Name of the Part."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/Part.html#overview","title":"Part > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_labels_on_topo_entities\n\nAdd the given labels on the provided topoentities.\n\nadd_labels_on_zonelets\n\nAdd the given labels on the provided zonelets.\n\nadd_topo_entities_to_zone\n\nAdd topoentities to zone.\n\nadd_volumes_to_zone\n\nAdd volumes to zone.\n\nadd_zonelets_to_zone\n\nAdd zonelets to zone.\n\ncompute_closed_volumes\n\nComputes volume by identifying closed volumes defined by face zonelets of the part.\n\ncompute_topo_volumes\n\nCompute topovolumes by identifying closed volumes defined by topofaces of the part.\n\ndelete_topo_entities\n\nDelete topoentities of part controled by parameters.\n\ndelete_volumes\n\nDelete volumes by deleting its face zonelets.\n\ndelete_zonelets\n\nDelete given face zonelets.\n\nextract_topo_volumes\n\nExtract topovolumes connected to given cap topofaces.\n\nextract_volumes\n\nExtract volumes connected to given face zonelets.\n\nget_adjacent_face_zonelets_of_face_zonelets\n\nGets the adjacent facezonelets for the provided facezonelet ids.\n\nget_adjacent_volumes_of_volumes\n\nGet the adjacent volumes for the provided volume ids.\n\nget_cell_zonelets\n\nGet the cell zonelet ids in the part.\n\nget_component_children_by_path\n\nGets the child components for a component using the given parameters.\n\nget_components_by_path_expression\n\nGets component names with the provided path expression.\n\nget_edge_zonelets\n\nGet the edge zonelets of a part.\n\nget_edge_zonelets_of_label_name_pattern\n\nGet edge zonelet ids of labels with name matching the given name pattern.\n\nget_edge_zones\n\nGet all the edge zones of the part.\n\nget_face_zone_of_zonelet\n\nGets the face zone of given zonelet.\n\nget_face_zonelets\n\nGet the face zonelets of a part.\n\nget_face_zonelets_of_component_body_name_pattern\n\nGets face zonelet ids belonging to components or bodies with name matching the given name pattern.\n\nget_face_zonelets_of_label_name_pattern\n\nGet face zonelet ids of labels with name matching the given name pattern.\n\nget_face_zonelets_of_volumes\n\nGet the face zonelets of given volumes.\n\nget_face_zonelets_of_zone_name_pattern\n\nGet ids of face zonelets of zones with name matching the given name pattern.\n\nget_face_zones\n\nGet all the face zones of the part.\n\nget_face_zones_of_name_pattern\n\nGet ids of face zones with name matching the given name pattern.\n\nget_labels\n\nGet all labels on entities of part.\n\nget_labels_on_zonelet\n\nGets labels associated with zonelet.\n\nget_name\n\nGets the name of the Part.\n\nget_splines\n\nGets the list of spline ids.\n\nget_summary\n\nGet the part summary.\n\nget_topo_edges\n\nGet the topoedges of a part.\n\nget_topo_edges_of_label_name_pattern\n\nGet topoedge ids of labels with name matching the given name pattern.\n\nget_topo_faces\n\nGet the topofaces of a part.\n\nget_topo_faces_of_component_body_name_pattern\n\nGets topoface ids of component or bodies with name matching the given name pattern.\n\nget_topo_faces_of_label_name_pattern\n\nGet topoface ids of labels with name matching the given name pattern.\n\nget_topo_faces_of_topo_volumes\n\nGets the topofaces of given topovolumes.\n\nget_topo_faces_of_zone_name_pattern\n\nGet topoface ids of zones with name matching the given name pattern.\n\nget_topo_volumes\n\nGet topovolumes of part.\n\nget_topo_volumes_of_label_name_pattern\n\nGets the topovolumes of labels of the given label name expression.\n\nget_topo_volumes_of_zone_name_pattern\n\nGets the topovolume ids of zones with name matching the given name pattern.\n\nget_unstructured_spline_solid\n\nGets the unstructured solid spline for the part.\n\nget_unstructured_spline_surface\n\nGets the unstructured surface spline for the part.\n\nget_volume_zone_of_volume\n\nGets the volume zone of given volume.\n\nget_volume_zones\n\nGet all the volume zones of the part.\n\nget_volume_zones_of_name_pattern\n\nGet ids of volume zones with name matching the given name pattern.\n\nget_volumes\n\nGet all the volumes of the part.\n\nget_volumes_of_face_zonelet\n\nGet volume ids of given face zonelet.\n\nget_volumes_of_zone_name_pattern\n\nGet volume ids of zones with name matching the given name pattern.\n\nmerge_volumes\n\nMerge volumes by removing shared face zonelets.\n\nmerge_zonelets\n\nMerge zonelets.\n\nremove_labels_from_topo_entities\n\nRemove the given labels from the provided topoentities.\n\nremove_labels_from_zonelets\n\nRemove the given labels from the provided zonelets.\n\nremove_zone_on_topo_entities\n\nRemoves zone on the given topoentities.\n\nremove_zone_on_volumes\n\nRemoves zone on the given volumes.\n\nremove_zone_on_zonelets\n\nRemoves zone on the given zonelets.\n\nset_suggested_name\n\nSet the unique name for the part to a suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of Part.\n\nname\n\nGet the name of Part.\n\nprint_id\n\nWhether IDs of TopoEntities or zonelets are set to print along with the part summary.\n\nprint_mesh\n\nWhether the mesh summary is set to print along with the part summary.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__call__\n\nGet a summary of the part.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nPrint the summary of a part."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/Part.html#import-detail","title":"Part > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/Part.html#property-detail","title":"Part > Property detail","text":"Property detail\n\n\n\nproperty Part.id\n\nGet the id of Part.\n\n\n\nproperty Part.name\n\nGet the name of Part.\n\n\n\nproperty Part.print_id: bool\n\nWhether IDs of TopoEntities or zonelets are set to print along with the part summary.\n\n\n\nproperty Part.print_mesh: bool\n\nWhether the mesh summary is set to print along with the part summary."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/Part.html#attribute-detail","title":"Part > Attribute detail","text":"Attribute detail\n\n\n\nPart.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/Part.html#method-detail","title":"Part > Method detail","text":"Method detail\n\n\n\nPart.__call__(*args: Any, **kwds: Any) -> str\n\nGet a summary of the part.\n\nThis method provides a callable interface of the part for getting a part summary\nusing supported keyword arguments.\n\nParameters\n\nprint_mesh (bool, optional) – Whether to get the mesh summary along with the part summary. The default is\nFalse.\n\nprint_id (bool, optional) – Whether to get IDs of TopEntities or zonelets along with the part summary.\nThe default is False.\n\nReturns\n\nSummary of the part.\n\nReturn type\n\nstr\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part_by_name(\"Part.1\")\n>>> print(part(print_mesh=True, print_id=True))\n\n\n\nPart.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPart.__str__() -> str\n\nPrint the summary of a part.\n\nThis method uses the print_mesh and print_id properties\nto control the summary of a part.\n\nReturns\n\nSummary of the part.\n\nReturn type\n\nstr\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part_by_name(\"Part.1\")\n>>> print(part)\n\n\n\nPart.add_labels_on_topo_entities(labels: List[str], topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddLabelResults\n\nAdd the given labels on the provided topoentities.\n\nParameters\n\nlabels (List[str]) – Labels to be added on topoentities.\n\ntopo_entities (Iterable[int]) – Ids of topoentities.\n\nReturns\n\nReturns the AddLabelResults.\n\nReturn type\n\nAddLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.add_labels_on_topo_entities(labels, topo_entities)\n\n\n\nPart.add_labels_on_zonelets(labels: List[str], zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddLabelResults\n\nAdd the given labels on the provided zonelets.\n\nParameters\n\nlabels (List[str]) – Labels to be added on zonelets.\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns the AddLabelResults.\n\nReturn type\n\nAddLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.add_labels_on_zonelets(labels, zonelets)\n\n\n\nPart.add_topo_entities_to_zone(zone_id: int, topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd topoentities to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\ntopo_entities (Iterable[int]) – Ids of topoentities to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_topo_entities_to_zone(zone_id, topo_entities)\n\n\n\nPart.add_volumes_to_zone(zone_id: int, volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd volumes to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\nvolumes (Iterable[int]) – Ids of volumes to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_volumes_to_zone(zone_id, volumes)\n\n\n\nPart.add_zonelets_to_zone(zone_id: int, zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd zonelets to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\nzonelets (Iterable[int]) – Ids of zonelets to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_zonelets_to_zone(zone_id, zonelets)\n\n\n\nPart.compute_closed_volumes(params: ansys.meshing.prime.params.primestructs.ComputeVolumesParams) -> ansys.meshing.prime.params.primestructs.ComputeVolumesResults\n\nComputes volume by identifying closed volumes defined by face zonelets of the part.\n\nParameters\n\nparams (ComputeVolumesParams) – Parameters to compute volumes.\n\nReturns\n\nReturns the ComputeVolumesResults.\n\nReturn type\n\nComputeVolumesResults\n\nExamples\n\n>>> params = prime.ComputeVolumesParams(model = model, create_zones_type = prime.CreateVolumeZonesType.PERVOLUME)\n>>> results = part.compute_closed_volumes(params)\n\n\n\nPart.compute_topo_volumes(params: ansys.meshing.prime.params.primestructs.ComputeVolumesParams) -> ansys.meshing.prime.params.primestructs.ComputeTopoVolumesResults\n\nCompute topovolumes by identifying closed volumes defined by topofaces of the part.\n\nParameters\n\nparams (ComputeVolumesParams) – Parameters to compute topovolumes.\n\nReturns\n\nReturn the ComputeTopoVolumesResults.\n\nReturn type\n\nComputeTopoVolumesResults\n\nExamples\n\n>>> params = prime.ComputeVolumesParams(model = model, create_zones_type = prime.CreateVolumeZonesType.PERVOLUME)\n>>> results = part.compute_topo_volumes(params)\n\n\n\nPart.delete_topo_entities(params: ansys.meshing.prime.params.primestructs.DeleteTopoEntitiesParams) -> ansys.meshing.prime.params.primestructs.DeleteTopoEntitiesResults\n\nDelete topoentities of part controled by parameters.\n\nParameters\n\nparams (DeleteTopoEntitiesParams) – Parameters for control delete topoentities operation.\n\nReturns\n\nReturn results of delete topoentities.\n\nReturn type\n\nDeleteTopoEntitiesResults\n\nExamples\n\n>>> results = part.delete_topo_entities(params)\n\n\n\nPart.delete_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DeleteVolumesParams) -> ansys.meshing.prime.params.primestructs.DeleteVolumesResults\n\nDelete volumes by deleting its face zonelets.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes to be deleted.\n\nparams (DeleteVolumesParams) – Parameters to delete volumes.\n\nReturns\n\nReturns the DeleteVolumesResults.\n\nReturn type\n\nDeleteVolumesResults\n\nExamples\n\nparams = prime.DeleteVolumesParams(model = model)\nresults = part.delete_volumes(volumes, params)\n\n\n\nPart.delete_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.DeleteResults\n\nDelete given face zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets to be deleted.\n\nReturns\n\nReturn DeleteResults.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = part.delete_zonelets(zonelets)\n\n\n\nPart.extract_topo_volumes(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ExtractTopoVolumesParams) -> ansys.meshing.prime.params.primestructs.ExtractTopoVolumesResults\n\nExtract topovolumes connected to given cap topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces connected to topovolumes.\n\nparams (ExtractTopoVolumesParams) – Parameters to compute topovolumes.\n\nReturns\n\nReturn the ExtractTopoVolumesResults.\n\nReturn type\n\nExtractTopoVolumesResults\n\nExamples\n\n>>> results = part.extract_flow_topo_volumes(topo_faces, params)\n\n\n\nPart.extract_volumes(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ExtractVolumesParams) -> ansys.meshing.prime.params.primestructs.ExtractVolumesResults\n\nExtract volumes connected to given face zonelets.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of face zonelets connected to volumes.\n\nparams (ExtractVolumesParams) – Parameters to compute volumes.\n\nReturns\n\nReturn the ExtractVolumesResults.\n\nReturn type\n\nExtractVolumesResults\n\nExamples\n\n>>> results = part.extract_volumes(face_zonelets, params)\n\n\n\nPart.get_adjacent_face_zonelets_of_face_zonelets(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the adjacent facezonelets for the provided facezonelet ids.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of facezonelets.\n\nReturns\n\nReturns the list of adjacent facezonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets_of_face_zonelet = part.get_adjacent_face_zonelets_of_face_zonelets(face_zonelets)\n\n\n\nPart.get_adjacent_volumes_of_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the adjacent volumes for the provided volume ids.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of the volume.\n\nReturns\n\nReturns the list of adjacent volume ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> adjacent_volumes_of_volumes = part.get_adjacent_volumes_of_volumes(volumes)\n\n\n\nPart.get_cell_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the cell zonelet ids in the part.\n\nReturns\n\nReturn the ids of cell zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> cell_zonelet_ids = part.get_cell_zonelets()\n\n\n\nPart.get_component_children_by_path(path: str, params: ansys.meshing.prime.params.primestructs.ComponentChildrenParams) -> ansys.meshing.prime.params.primestructs.ComponentChildrenResults\n\nGets the child components for a component using the given parameters.\n\nParameters\n\npath (str) – Path to component for which child components are queried.\n\nparams (ComponentChildrenParams) – Parameters to get child component.\n\nReturns\n\nReturns the ComponentChildrenResults structure.\n\nReturn type\n\nComponentChildrenResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = part.get_component_children_by_path(path, params)\n\n\n\nPart.get_components_by_path_expression(path_expression: str) -> List[str]\n\nGets component names with the provided path expression.\n\nParameters\n\npath_expression (str) – Path expression to determine component names that should be returned.\n\nReturns\n\nReturns a list of component names.\n\nReturn type\n\nList[str]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = part.get_components_by_path_expression(path_expression)\n\n\n\nPart.get_edge_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the edge zonelets of a part.\n\nReturns\n\nReturn the ids of edge zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> edge_zonelets = part.get_edge_zonelets()\n\n\n\nPart.get_edge_zonelets_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet edge zonelet ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn edge zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> edge_zonelets = part.get_edge_zonelets_of_label_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_edge_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the edge zones of the part.\n\nReturns\n\nReturn ids of edge zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> edge_zones = part.get_edge_zones()\n\n\n\nPart.get_face_zone_of_zonelet(zonelet: int) -> int\n\nGets the face zone of given zonelet.\n\nParameters\n\nzonelet (int) – Id of zonelet.\n\nReturns\n\nReturns the id of face zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> face_zone = part.get_face_zone_of_zonelet(zonelet)\n\n\n\nPart.get_face_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelets of a part.\n\nReturns\n\nReturn the ids of face zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = part.get_face_zonelets()\n\n\n\nPart.get_face_zonelets_of_component_body_name_pattern(component_body_name_pattern: str, type: ansys.meshing.prime.params.primestructs.BodyQueryType, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets face zonelet ids belonging to components or bodies with name matching the given name pattern.\n\nParameters\n\ncomponent_body_name_pattern (str) – Name pattern to be matched with component or body names.\n\ntype (BodyQueryType) – Type of query used to match component or body name pattern.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match component or body name pattern.\n\nReturns\n\nReturns face zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_component_body_pattern(\"/body*\", type, name_pattern_params)\n\n\n\nPart.get_face_zonelets_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet face zonelet ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn face zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_label_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_face_zonelets_of_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelets of given volumes.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes.\n\nReturns\n\nReturn the ids of face zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = part.get_face_zonelets_of_volumes(volumes)\n\n\n\nPart.get_face_zonelets_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of face zonelets of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn face zonelet ids of zones with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_zone_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_face_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the face zones of the part.\n\nReturns\n\nReturn ids of face zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zones = part.get_face_zones()\n\n\n\nPart.get_face_zones_of_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of face zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn list of face zone ids matching the zone name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> zones = part.get_face_zones_of_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_labels() -> List[str]\n\nGet all labels on entities of part.\n\nReturns\n\nReturn labels on entities of part.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> part.get_labels()\n\n\n\nPart.get_labels_on_zonelet(zonelet_id: int) -> List[str]\n\nGets labels associated with zonelet.\n\nParameters\n\nzonelet_id (int) – Id of zonelet for which label is queried.\n\nReturns\n\nReturns labels associated with zonelet.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> results = part.get_labels_on_zonelet(zonelet_id)\n\n\n\nPart.get_name() -> str\n\nGets the name of the Part.\n\nReturns\n\nReturns part name.\n\nReturn type\n\nstr\n\nExamples\n\n>>> part_name = part.get_name()\n\n\n\nPart.get_splines() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the list of spline ids.\n\nReturns\n\nReturns the list of spline ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> results = part.get_splines()\n\n\n\nPart.get_summary(params: ansys.meshing.prime.params.primestructs.PartSummaryParams) -> ansys.meshing.prime.params.primestructs.PartSummaryResults\n\nGet the part summary.\n\nProvides the part summary for the given parameters.\n\nParameters\n\nparams (PartSummaryParams) – Part summary parameters.\n\nReturns\n\nReturn the PartSummaryResults.\n\nReturn type\n\nPartSummaryResults\n\nExamples\n\n>>> results = part.get_summary(PartSummaryParams(model=model))\n\n\n\nPart.get_topo_edges() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the topoedges of a part.\n\nReturns\n\nReturn the ids of topoedges.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n\n\nPart.get_topo_edges_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoedge ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn the ids of topoedges.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges = part.get_topo_edges_of_label_name_pattern(\n>>>                   label_name_pattern = \"edge_label\",\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the topofaces of a part.\n\nIterable[int]\n\nReturn the ids of topofaces.\n\nReturn the ids of topofaces.\n\n>>> topo_faces = part.get_topo_faces()\n\n\n\nPart.get_topo_faces_of_component_body_name_pattern(component_body_name_pattern: str, type: ansys.meshing.prime.params.primestructs.BodyQueryType, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets topoface ids of component or bodies with name matching the given name pattern.\n\nParameters\n\ncomponent_body_name_pattern (str) – Name pattern to be matched with component or body name.\n\ntype (BodyQueryType) – Type of query used to match component or body name pattern.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match component or body name pattern.\n\nReturns\n\nReturns the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_component_body_name_pattern(\n>>>                   component_body_name_pattern = \"body*\",\n>>>                   type = BodyQueryType_All,\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoface ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_label_name_pattern(\n>>>                   label_name_pattern = \"face_label\",\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces_of_topo_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topofaces of given topovolumes.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of topovolumes.\n\nReturns\n\nReturns the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_topo_volumes(volumes)\n\n\n\nPart.get_topo_faces_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoface ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn topoface ids of zones with name matching the name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> topo_faces = part.get_topo_faces_of_zone_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_topo_volumes() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topovolumes of part.\n\nReturns\n\nReturns the list of topovolume ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> results = part.get_topo_volumes()\n\n\n\nPart.get_topo_volumes_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topovolumes of labels of the given label name expression.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with topovolume name\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match topovolume name pattern.\n\nReturns\n\nReturns the ids of the topovolumes.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_volumes = prime.get_topo_volumes_of_label_name_pattern(\n>>>                      label_name_pattern = \"solid*\",\n>>>                      params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_volumes_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topovolume ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturns topovolume ids of zones with name matching the name pattern.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_volumes = part.get_topo_volumes_of_zone_name_pattern(zone_name_pattern = \"solid*\",\nname_pattern_params = prime.NamePatternParams(model = model))\n\n\n\nPart.get_unstructured_spline_solid() -> ansys.meshing.prime.params.primestructs.IGAUnstructuredSplineSolid\n\nGets the unstructured solid spline for the part.\n\nReturns\n\nReturns the solid spline structure.\n\nReturn type\n\nIGAUnstructuredSplineSolid\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> spline = part.GetUnstructuredSplineSolid()\n\n\n\nPart.get_unstructured_spline_surface() -> ansys.meshing.prime.params.primestructs.IGAUnstructuredSplineSurf\n\nGets the unstructured surface spline for the part.\n\nReturns\n\nReturns the surface spline structure.\n\nReturn type\n\nIGAUnstructuredSplineSurf\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> spline = part.GetUnstructuredSplineSurface()\n\n\n\nPart.get_volume_zone_of_volume(volume: int) -> int\n\nGets the volume zone of given volume.\n\nParameters\n\nvolume (int) – Id of volume.\n\nReturns\n\nReturns the id of volume zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> volume_zone = part.get_volume_zone_of_volume(volume)\n\n\n\nPart.get_volume_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the volume zones of the part.\n\nReturns\n\nReturn ids of volume zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volume_zones = part.get_volume_zones()\n\n\n\nPart.get_volume_zones_of_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of volume zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturns a list of volume zone ids matching the zone name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> zones = part.get_volume_zones_of_name_pattern(\"solid*\", name_pattern_params)\n\n\n\nPart.get_volumes() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the volumes of the part.\n\nReturns\n\nReturn ids of volumes.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volumes = part.get_volumes()\n\n\n\nPart.get_volumes_of_face_zonelet(face_zonelet: int) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet volume ids of given face zonelet.\n\nParameters\n\nface_zonelet (int) – Id of face zonelet.\n\nReturns\n\nReturn volume ids of given face zonelet.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volumes = part.get_volumes_of_face_zonelet(face_zonelet)\n\n\n\nPart.get_volumes_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet volume ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn volume ids of zones with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> volumes = part.get_volumes_of_zone_name_pattern(\"body*\", name_pattern_params)\n\n\n\nPart.merge_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergeVolumesParams) -> ansys.meshing.prime.params.primestructs.MergeVolumesResults\n\nMerge volumes by removing shared face zonelets.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes to be merged.\n\nparams (MergeVolumesParams) – Parameters to merge volumes.\n\nReturns\n\nReturns the MergeVolumesResults.\n\nReturn type\n\nMergeVolumesResults\n\nExamples\n\nparams = prime.MergeVolumesParams(model = model)\nresults = part.merge_volumes(volumes, params)\n\n\n\nPart.merge_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergeZoneletsParams) -> ansys.meshing.prime.params.primestructs.MergeZoneletsResults\n\nMerge zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets to be merged.\n\nparams (MergeZoneletsParams) – Parameters to merge zonelets.\n\nReturns\n\nReturns the MergeZoneletsResults.\n\nReturn type\n\nMergeZoneletsResults\n\nExamples\n\nparams = prime.MergeZoneletsParams(model = model)\nresults = part.merge_zonelets(zonelets, params)\n\n\n\nPart.remove_labels_from_topo_entities(labels: List[str], topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveLabelResults\n\nRemove the given labels from the provided topoentities.\n\nParameters\n\nlabels (List[str]) – Labels to be removed from topoentities.\n\ntopo_entities (Iterable[int]) – Ids of topoentities.\n\nReturns\n\nReturns the RemoveLabelResults.\n\nReturn type\n\nRemoveLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.remove_labels_from_topo_entities(labels, topo_entities)\n\n\n\nPart.remove_labels_from_zonelets(labels: List[str], zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveLabelResults\n\nRemove the given labels from the provided zonelets.\n\nParameters\n\nlabels (List[str]) – Labels to be removed from zonelets.\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns the RemoveLabelResults.\n\nReturn type\n\nRemoveLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.remove_labels_from_zonelets(labels, zonelets)\n\n\n\nPart.remove_zone_on_topo_entities(topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given topoentities.\n\nParameters\n\ntopo_entities (Iterable[int]) – Topoentity ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_topo_entities(topo_entities)\n\n\n\nPart.remove_zone_on_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given volumes.\n\nParameters\n\nvolumes (Iterable[int]) – Volume ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_volumes(volumes)\n\n\n\nPart.remove_zone_on_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Zonelet ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_zonelets(zonelets)\n\n\n\nPart.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the part to a suggested name.\n\nParameters\n\nname (str) – Suggested name for the part.\n\nReturns\n\nNewly suggested name for the part.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> part.set_suggested_name(\"part1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/SoiSizingParams.html#soisizingparams","title":"SoiSizingParams","text":"SoiSizingParams\n\n\n\nclass ansys.meshing.prime.SoiSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, centers: ansys.meshing.prime.params.primestructs.Iterable[float] = None, radius: float = None, max: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nParameters for sphere of influence size control.\n\nParameters\n\nmodel (Model) – Model to create a SoiSizingParams object with default parameters.\n\ncenters (Iterable[float], optional) – Centers of the spheres within which the size is limited to the specified max value.This is a beta parameter. The behavior and name may change in the future.\n\nradius (float, optional) – Radius of the sphere within which the size is limited to the specified max value.This is a beta parameter. The behavior and name may change in the future.\n\nmax (float, optional) – Maximum size within the sphere.This is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate (float, optional) – The rate at which size grows outwards from the sphere boundary.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a SoiSizingParams object with provided parameters.\n\nExamples\n\n>>> soi_sizing_params = prime.SoiSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SoiSizingParams.html#overview","title":"SoiSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncenters\n\nCenters of the spheres within which the size is limited to the specified max value.\n\ngrowth_rate\n\nThe rate at which size grows outwards from the sphere boundary.\n\nmax\n\nMaximum size within the sphere.\n\nradius\n\nRadius of the sphere within which the size is limited to the specified max value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SoiSizingParams object.\n\nset_default\n\nSet the default values of the SoiSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SoiSizingParams.html#import-detail","title":"SoiSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SoiSizingParams.html#property-detail","title":"SoiSizingParams > Property detail","text":"Property detail\n\n\n\nproperty SoiSizingParams.centers: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCenters of the spheres within which the size is limited to the specified max value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty SoiSizingParams.growth_rate: float\n\nThe rate at which size grows outwards from the sphere boundary.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty SoiSizingParams.max: float\n\nMaximum size within the sphere.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty SoiSizingParams.radius: float\n\nRadius of the sphere within which the size is limited to the specified max value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/SoiSizingParams.html#method-detail","title":"SoiSizingParams > Method detail","text":"Method detail\n\n\n\nSoiSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSoiSizingParams.__str__() -> str\n\n\n\n\n\nstatic SoiSizingParams.print_default()\n\nPrint the default values of SoiSizingParams object.\n\nExamples\n\n>>> SoiSizingParams.print_default()\n\n\n\nstatic SoiSizingParams.set_default(centers: ansys.meshing.prime.params.primestructs.Iterable[float] = None, radius: float = None, max: float = None, growth_rate: float = None)\n\nSet the default values of the SoiSizingParams object.\n\nParameters\n\ncenters (Iterable[float], optional) – Centers of the spheres within which the size is limited to the specified max value.\n\nradius (float, optional) – Radius of the sphere within which the size is limited to the specified max value.\n\nmax (float, optional) – Maximum size within the sphere.\n\ngrowth_rate (float, optional) – The rate at which size grows outwards from the sphere boundary."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadFaceter.html#cadfaceter","title":"CadFaceter","text":"CadFaceter\n\n\n\nclass ansys.meshing.prime.CadFaceter\n\nTypes of CAD faceter."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadFaceter.html#overview","title":"CadFaceter > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nACIS\n\nDenotes CAD faceter is Acis.\n\nPARASOLID\n\nDenotes CAD faceter is Parasolid."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadFaceter.html#import-detail","title":"CadFaceter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadFaceter.html#attribute-detail","title":"CadFaceter > Attribute detail","text":"Attribute detail\n\n\n\nCadFaceter.ACIS = 0\n\nDenotes CAD faceter is Acis.\n\n\n\nCadFaceter.PARASOLID = 1\n\nDenotes CAD faceter is Parasolid."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdResults.html#searchinfobyregisteridresults","title":"SearchInfoByRegisterIdResults","text":"SearchInfoByRegisterIdResults\n\n\n\nclass ansys.meshing.prime.SearchInfoByRegisterIdResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_found: int = None, locations_found: ansys.meshing.prime.params.primestructs.Iterable[float] = None, face_zonelets_found: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult structure containing information on registered face elements.\n\nParameters\n\nmodel (Model) – Model to create a SearchInfoByRegisterIdResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the retreiving information based on register id.\n\nn_found (int, optional) – Number of registered face elements.\n\nlocations_found (Iterable[float], optional) – Locations of each cluster of registered face elements.\n\nface_zonelets_found (Iterable[int], optional) – Ids of the face zonelets containing atleast one registered face element.\n\njson_data (dict, optional) – JSON dictionary to create a SearchInfoByRegisterIdResults object with provided parameters.\n\nExamples\n\n>>> search_info_by_register_id_results = prime.SearchInfoByRegisterIdResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdResults.html#overview","title":"SearchInfoByRegisterIdResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the retreiving information based on register id.\n\nface_zonelets_found\n\nIds of the face zonelets containing atleast one registered face element.\n\nlocations_found\n\nLocations of each cluster of registered face elements.\n\nn_found\n\nNumber of registered face elements.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchInfoByRegisterIdResults object.\n\nset_default\n\nSet the default values of the SearchInfoByRegisterIdResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdResults.html#import-detail","title":"SearchInfoByRegisterIdResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdResults.html#property-detail","title":"SearchInfoByRegisterIdResults > Property detail","text":"Property detail\n\n\n\nproperty SearchInfoByRegisterIdResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the retreiving information based on register id.\n\n\n\nproperty SearchInfoByRegisterIdResults.face_zonelets_found: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the face zonelets containing atleast one registered face element.\n\n\n\nproperty SearchInfoByRegisterIdResults.locations_found: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nLocations of each cluster of registered face elements.\n\n\n\nproperty SearchInfoByRegisterIdResults.n_found: int\n\nNumber of registered face elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchInfoByRegisterIdResults.html#method-detail","title":"SearchInfoByRegisterIdResults > Method detail","text":"Method detail\n\n\n\nSearchInfoByRegisterIdResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchInfoByRegisterIdResults.__str__() -> str\n\n\n\n\n\nstatic SearchInfoByRegisterIdResults.print_default()\n\nPrint the default values of SearchInfoByRegisterIdResults object.\n\nExamples\n\n>>> SearchInfoByRegisterIdResults.print_default()\n\n\n\nstatic SearchInfoByRegisterIdResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_found: int = None, locations_found: ansys.meshing.prime.params.primestructs.Iterable[float] = None, face_zonelets_found: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SearchInfoByRegisterIdResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the retreiving information based on register id.\n\nn_found (int, optional) – Number of registered face elements.\n\nlocations_found (Iterable[float], optional) – Locations of each cluster of registered face elements.\n\nface_zonelets_found (Iterable[int], optional) – Ids of the face zonelets containing atleast one registered face element."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileio/FileIO.html#fileio","title":"FileIO","text":"FileIO\n\n\n\nclass ansys.meshing.prime.autogen.fileio.FileIO(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nHandles reading or writing files from the disk.\n\nParameters\n\nmodel (Model) – Server model to create FileIO object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileio/FileIO.html#overview","title":"FileIO > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nexport_boundary_fitted_spline_kfile\n\nExports IGA LS-DYNA Keyword file for boundary fitted spline.\n\nexport_fluent_case\n\nExports Fluent case file. Fluent case files have cas extension.\n\nexport_fluent_meshing_mesh\n\nExports Fluent Meshing mesh file. Fluent Meshing mesh files have .msh extension.\n\nexport_lsdyna_iga_keyword_file\n\nExports IGA LS-DYNA Keyword file for solid, surface splines, or both.\n\nexport_lsdyna_keyword_file\n\nExport FEA LS-DYNA Keyword file for solid, surface mesh or both.\n\nexport_mapdl_cdb\n\nFunction that exports MAPDL CDB file(cdb).\n\nexport_stl\n\nExports STL file.\n\nget_abaqus_simulation_data\n\nGets simulation document generated by Abaqus import for a given part.\n\nimport_abaqus_inp\n\nImport a Abaqus file.\n\nimport_cad\n\nImports CAD file from disk.\n\nimport_fluent_case\n\nImports fluent case file on disk.\n\nimport_fluent_meshing_meshes\n\nImports fluent meshing meshes of given files on disk.\n\nimport_fluent_meshing_size_field\n\nImports Fluent-Meshing’s size field file from disk.\n\nimport_mapdl_cdb\n\nFunction that imports MAPDL CDB file(cdb).\n\nread_pmdat\n\nFunction that reads PRIME’s database file.\n\nread_size_field\n\nRead PRIME’s sizefield file from disk.\n\nwrite_pmdat\n\nWrites Prime mesh data file. Prime mesh data files have .pmdat extension.\n\nwrite_size_field\n\nWrite PRIME’s sizefield (.psf) to file.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for FileIO.\n\n__exit__\n\nExit context for FileIO.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileio/FileIO.html#import-detail","title":"FileIO > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileio/FileIO.html#method-detail","title":"FileIO > Method detail","text":"Method detail\n\n\n\nFileIO.__enter__()\n\nEnter context for FileIO.\n\n\n\nFileIO.__exit__(type, value, traceback)\n\nExit context for FileIO.\n\n\n\nFileIO.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileIO.export_boundary_fitted_spline_kfile(file_name: str, export_params: ansys.meshing.prime.params.primestructs.ExportBoundaryFittedSplineParams) -> ansys.meshing.prime.params.primestructs.FileWriteResults\n\nExports IGA LS-DYNA Keyword file for boundary fitted spline.\n\nParameters\n\nfile_name (str) – Name of the file.\n\nexport_params (ExportBoundaryFittedSplineParams) – Parameters for IGA LS-DYNA Keyword file export.\n\nReturns\n\nReturns FileWriteResults.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.export_boundary_fitted_spline_k_file(file_name, ExportBoundaryFittedSplineParams(model = model))\n\n\n\nFileIO.export_fluent_case(file_name: str, export_fluent_case_params: ansys.meshing.prime.params.primestructs.ExportFluentCaseParams) -> ansys.meshing.prime.params.primestructs.FileWriteResults\n\nExports Fluent case file. Fluent case files have cas extension.\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nexport_fluent_case_params (ExportFluentCaseParams) – Parameters to export fluent case file.\n\nReturns\n\nReturns the FileWriteResults structure.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> file_io = FileIO(model = model)\n>>> results = file_io.export_fluent_case(\"/tmp/fluent.cas\", prime.ExportFluentCaseParams(model = model))\n\n\n\nFileIO.export_fluent_meshing_mesh(file_name: str, export_fluent_mesh_params: ansys.meshing.prime.params.primestructs.ExportFluentMeshingMeshParams) -> ansys.meshing.prime.params.primestructs.FileWriteResults\n\nExports Fluent Meshing mesh file. Fluent Meshing mesh files have .msh extension.\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nexport_fluent_mesh_params (ExportFluentMeshingMeshParams) – Parameters to export Fluent Meshing mesh file.\n\nReturns\n\nReturns the FileWriteResults structure.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.export_fluent_meshing_mesh(\"/tmp/fluent_meshing.msh\", ExportFluentMeshingMeshParams(model = model))\n\n\n\nFileIO.export_lsdyna_iga_keyword_file(file_name: str, export_params: ansys.meshing.prime.params.primestructs.ExportLSDynaIgaKeywordFileParams) -> ansys.meshing.prime.params.primestructs.ExportLSDynaIGAResults\n\nExports IGA LS-DYNA Keyword file for solid, surface splines, or both.\n\nParameters\n\nfile_name (str) – Name of the file.\n\nexport_params (ExportLSDynaIgaKeywordFileParams) – Parameters for IGA LS-DYNA Keyword file export.\n\nReturns\n\nReturns FileWriteResults.\n\nReturn type\n\nExportLSDynaIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.export_lsdyna_iga_keyword_file(file_name, ExportLSDynaIgaKeywordFileParams(model = model))\n\n\n\nFileIO.export_lsdyna_keyword_file(file_name: str, export_params: ansys.meshing.prime.params.primestructs.ExportLSDynaKeywordFileParams) -> ansys.meshing.prime.params.primestructs.ExportLSDynaResults\n\nExport FEA LS-DYNA Keyword file for solid, surface mesh or both.\n\nParameters\n\nfile_name (str) – Name of the file.\n\nexport_params (ExportLSDynaKeywordFileParams) – Parameters for FEA LS-DYNA Keyword file export.\n\nReturns\n\nReturns FileWriteResults.\n\nReturn type\n\nExportLSDynaResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.export_lsdyna_keyword_file(file_name, ExportLSDynaKeywordFileParams(model = model))\n\n\n\nFileIO.export_mapdl_cdb(file_name: str, params: ansys.meshing.prime.params.primestructs.ExportMapdlCdbParams) -> ansys.meshing.prime.params.primestructs.ExportMapdlCdbResults\n\nFunction that exports MAPDL CDB file(cdb).\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nparams (ExportMapdlCdbParams) – Parameter to export a CDB file.\n\nReturns\n\nReturns ExportMapdlCdbResults.\n\nReturn type\n\nExportMapdlCdbResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model = model)\n>>> params = prime.ExportMapdlCdbParams(model = model)\n>>> results = file_io.export_mapdl_cdb(\"/tmp/file.cdb\", params)\n\n\n\nFileIO.export_stl(file_name: str, params: ansys.meshing.prime.params.primestructs.ExportSTLParams) -> ansys.meshing.prime.params.primestructs.FileWriteResults\n\nExports STL file.\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nparams (ExportSTLParams) – Parameters for writing the file.\n\nReturns\n\nReturns the FileWriteResults.\n\nReturn type\n\nFileWriteResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> fileio = prime.FileIO(model=model)\n>>> out_file_path = r\"/tmp/output.stl\"\n>>> part_ids = [part.id for part in model.parts]\n>>> export_stl_params=prime.ExportSTLParams(model=model,part_ids=part_ids)\n>>> results = fileio.export_stl(out_file_path,export_stl_params)\n\n\n\nFileIO.get_abaqus_simulation_data(partId: int) -> str\n\nGets simulation document generated by Abaqus import for a given part.\n\nThis method will return the JSON Simulation Document for a part if the part exists. Otherwise,\nit returns an empty string.\n\nParameters\n\npartId (int) – Part Id.\n\nReturns\n\nReturns the string containing a JSON document for simulation data.\n\nReturn type\n\nstr\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> import json\n>>> simdata = json.loads(file_io.get_abaqus_simulation_data(2)\n\n\n\nFileIO.import_abaqus_inp(file_name: str, params: ansys.meshing.prime.params.primestructs.ImportAbaqusParams) -> ansys.meshing.prime.params.primestructs.ImportAbaqusResults\n\nImport a Abaqus file.\n\nImport abaqus files as dead mesh and also store simulation-specific information into Prime in the form of JSON documents.\n\nParameters\n\nfile_name (str) – Name of file to import.\n\nparams (ImportAbaqusParams) – Parameters to specify options during import.\n\nReturns\n\nReturns the results of the abaqus database import.\n\nReturn type\n\nImportAbaqusResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.import_abaqus_inp(r\"/tmp/file.inp\")\n\n\n\nFileIO.import_cad(file_name: str, import_cad_params: ansys.meshing.prime.params.primestructs.ImportCadParams) -> ansys.meshing.prime.params.primestructs.ImportCadResults\n\nImports CAD file from disk.\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nimport_cad_params (ImportCadParams) – Parameters to control CAD import options.\n\nReturns\n\nReturns the ImportCadResults.\n\nReturn type\n\nImportCadResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> file_io = prime.FileIO(model = model)\n>>> params = prime.ImportCadParams(model = model)\n>>> results = file_io.import_cad(file_name=\"/tmp/my_cad.x_t\", import_cad_params=params)\n\n\n\nFileIO.import_fluent_case(file_name: str, import_fluent_case_params: ansys.meshing.prime.params.primestructs.ImportFluentCaseParams) -> ansys.meshing.prime.params.primestructs.ImportFluentCaseResults\n\nImports fluent case file on disk.\n\nFluent case files have cas extension.\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nimport_fluent_case_params (ImportFluentCaseParams) – Parameters to import fluent case file.\n\nReturns\n\nReturns the ImportFluentCaseResults.\n\nReturn type\n\nImportFluentCaseResults\n\nNotes\n\nThis API does not support unicode paths now.\n\nExamples\n\n>>> file_io = prime.FileIO(model = model)\n>>> params = prime.ImportFluentCaseParams(model = model)\n>>> results = file_io.import_fluent_case(\"/tmp/fluent.cas\", params)\n\n\n\nFileIO.import_fluent_meshing_meshes(file_names: List[str], import_fluent_meshing_mesh_params: ansys.meshing.prime.params.primestructs.ImportFluentMeshingMeshParams) -> ansys.meshing.prime.params.primestructs.ImportFluentMeshingMeshResults\n\nImports fluent meshing meshes of given files on disk.\n\nFluent Meshing mesh files have msh and msh.gz extension.\n\nParameters\n\nfile_names (List[str]) – Full path of files to be imported.\n\nimport_fluent_meshing_mesh_params (ImportFluentMeshingMeshParams) – Parameters to import fluent meshing mesh.\n\nReturns\n\nReturns the FileReadResults.\n\nReturn type\n\nImportFluentMeshingMeshResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> file_io = prime.FileIO(model = model)\n>>> params = prime.ImportFluentMeshingMeshParams(model = model)\n>>> results = file_io.import_fluent_meshing_meshes([\"/tmp/mesh.msh\", \"/tmp/mesh1.msh\"], params)\n\n\n\nFileIO.import_fluent_meshing_size_field(file_name: str) -> ansys.meshing.prime.params.primestructs.SizeFieldFileReadResults\n\nImports Fluent-Meshing’s size field file from disk.\n\nFluent-Meshing’s sizefield files have sf and sf.gz extension.\n\nParameters\n\nfile_name (str) – Path to file on disk\n\nReturns\n\nReturn the SizeFieldFileReadResults.\n\nReturn type\n\nSizeFieldFileReadResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> file_io = prime.FileIO(model = model)\n>>> results = file_io.import_fluent_meshing_size_field(\"/tmp/my_sizefield.sf\")\n\n\n\nFileIO.import_mapdl_cdb(file_name: str, params: ansys.meshing.prime.params.primestructs.ImportMapdlCdbParams) -> ansys.meshing.prime.params.primestructs.ImportMapdlCdbResults\n\nFunction that imports MAPDL CDB file(cdb).\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nparams (ImportMapdlCdbParams) – Parameter to import a CDB file.\n\nReturns\n\nReturns ImportMapdlCdbResults.\n\nReturn type\n\nImportMapdlCdbResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model = model)\n>>> params = prime.ImportMapdlCdbParams(model = model)\n>>> results = file_io.import_mapdl_cdb(\"/tmp/file.cdb\", params)\n\n\n\nFileIO.read_pmdat(file_name: str, file_read_params: ansys.meshing.prime.params.primestructs.FileReadParams) -> ansys.meshing.prime.params.primestructs.FileReadResults\n\nFunction that reads PRIME’s database file.\n\nPRIME’s database files have pmdat extension.\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nfile_read_params (FileReadParams) – Parameter to read a file.\n\nReturns\n\nReturns FileReadResults.\n\nReturn type\n\nFileReadResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model = model)\n>>> file_read_params = prime.FileReadParams(model = model)\n>>> results = file_io.read_pmdat(\"/tmp/file.pmdat\", file_read_params)\n\n\n\nFileIO.read_size_field(file_name: str, params: ansys.meshing.prime.params.primestructs.ReadSizeFieldParams) -> ansys.meshing.prime.params.primestructs.SizeFieldFileReadResults\n\nRead PRIME’s sizefield file from disk.\n\nPRIME’s sizefield files have psf and psf.gz extension.\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nparams (ReadSizeFieldParams) – Parameters to read size field file.\n\nReturns\n\nReturn the SizeFieldFileReadResults.\n\nReturn type\n\nSizeFieldFileReadResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> file_io = prime.FileIO(model = model)\n>>> params = prime.ReadSizeFieldParams(model = model)\n>>> results = file_io.read_size_field(\"/tmp/my_prime_sizefield.psf\", params)\n\n\n\nFileIO.write_pmdat(file_name: str, file_write_params: ansys.meshing.prime.params.primestructs.FileWriteParams) -> ansys.meshing.prime.params.primestructs.FileWriteResults\n\nWrites Prime mesh data file. Prime mesh data files have .pmdat extension.\n\nParameters\n\nfile_name (str) – Path to write file on disk.\n\nfile_write_params (FileWriteParams) – Parameters to write Prime mesh data file.\n\nReturns\n\nReturns the FileWriteResults structure.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.write_pmdat(\"/tmp/prime_mesh_data.pmdat\", prime.FileWriteParams(model = model))\n\n\n\nFileIO.write_size_field(file_name: str, params: ansys.meshing.prime.params.primestructs.WriteSizeFieldParams) -> ansys.meshing.prime.params.primestructs.FileWriteResults\n\nWrite PRIME’s sizefield (.psf) to file.\n\nParameters\n\nfile_name (str) – Path to file on disk.\n\nparams (WriteSizeFieldParams) – Parameters to write size field file.\n\nReturns\n\nReturn the FileWriteResults.\n\nReturn type\n\nFileWriteResults\n\nNotes\n\nThis API does not support Unicode paths now.\n\nExamples\n\n>>> file_io = prime.FileIO(model = model)\n>>> params = prime.WriteSizeFieldParams(model = model)\n>>> results = file_io.write_size_field(\"/tmp/my_prime_sizefield.psf\", params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenParams.html#componentchildrenparams","title":"ComponentChildrenParams","text":"ComponentChildrenParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ComponentChildrenParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters associated with querying child components.\n\nParameters\n\nmodel (Model) – Model to create a ComponentChildrenParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ComponentChildrenParams object with provided parameters.\n\nExamples\n\n>>> component_children_params = prime.ComponentChildrenParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenParams.html#overview","title":"ComponentChildrenParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComponentChildrenParams object.\n\nset_default\n\nSet the default values of the ComponentChildrenParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenParams.html#import-detail","title":"ComponentChildrenParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComponentChildrenParams.html#method-detail","title":"ComponentChildrenParams > Method detail","text":"Method detail\n\n\n\nComponentChildrenParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComponentChildrenParams.__str__() -> str\n\n\n\n\n\nstatic ComponentChildrenParams.print_default()\n\nPrint the default values of ComponentChildrenParams object.\n\nExamples\n\n>>> ComponentChildrenParams.print_default()\n\n\n\nstatic ComponentChildrenParams.set_default()\n\nSet the default values of the ComponentChildrenParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripResults.html#searchbythinstripresults","title":"SearchByThinStripResults","text":"SearchByThinStripResults\n\n\n\nclass ansys.meshing.prime.SearchByThinStripResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with search by thin strip of face elements.\n\nParameters\n\nmodel (Model) – Model to create a SearchByThinStripResults object with default parameters.\n\nn_found (int, optional) – Number of face elements identified as thin strips.\n\nerror_code (ErrorCode, optional) – Error code associated with search thin strips operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByThinStripResults object with provided parameters.\n\nExamples\n\n>>> search_by_thin_strip_results = prime.SearchByThinStripResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripResults.html#overview","title":"SearchByThinStripResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search thin strips operation.\n\nn_found\n\nNumber of face elements identified as thin strips.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByThinStripResults object.\n\nset_default\n\nSet the default values of the SearchByThinStripResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripResults.html#import-detail","title":"SearchByThinStripResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripResults.html#property-detail","title":"SearchByThinStripResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByThinStripResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search thin strips operation.\n\n\n\nproperty SearchByThinStripResults.n_found: int\n\nNumber of face elements identified as thin strips."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByThinStripResults.html#method-detail","title":"SearchByThinStripResults > Method detail","text":"Method detail\n\n\n\nSearchByThinStripResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByThinStripResults.__str__() -> str\n\n\n\n\n\nstatic SearchByThinStripResults.print_default()\n\nPrint the default values of SearchByThinStripResults object.\n\nExamples\n\n>>> SearchByThinStripResults.print_default()\n\n\n\nstatic SearchByThinStripResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchByThinStripResults object.\n\nParameters\n\nn_found (int, optional) – Number of face elements identified as thin strips.\n\nerror_code (ErrorCode, optional) – Error code associated with search thin strips operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_f1_rw_end_plates_stl.html#ansysmeshingprimeexamplesexamplesdownload_f1_rw_end_plates_stl","title":"ansys.meshing.prime.examples.examples.download_f1_rw_end_plates_stl","text":"ansys.meshing.prime.examples.examples.download_f1_rw_end_plates_stl\n\n\n\nansys.meshing.prime.examples.examples.download_f1_rw_end_plates_stl(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_end_plates = prime_examples.download_f1_rw_end_plates_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_end_plates, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldType.html#sizefieldtype","title":"SizeFieldType","text":"SizeFieldType\n\n\n\nclass ansys.meshing.prime.SizeFieldType\n\nThe type of sizing field to be used to fetch element size at given location."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldType.html#overview","title":"SizeFieldType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCONSTANT\n\nUses constant size at all locations of sizing field.\n\nGEODESIC\n\nUses geodesic size field.\n\nGEOMETRIC\n\nGeometric size field.\n\nMESHEDGEODESIC\n\nThe type is applicable when remeshing already meshed surfaces.\n\nVOLUMETRIC\n\nUses precomputed variable size in volumetric space defined by size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldType.html#import-detail","title":"SizeFieldType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldType.html#attribute-detail","title":"SizeFieldType > Attribute detail","text":"Attribute detail\n\n\n\nSizeFieldType.CONSTANT = 3\n\nUses constant size at all locations of sizing field.\n\n\n\nSizeFieldType.GEODESIC = 2\n\nUses geodesic size field.\n\n\n\nSizeFieldType.GEOMETRIC = 0\n\nGeometric size field.\n\n\n\nSizeFieldType.MESHEDGEODESIC = 7\n\nThe type is applicable when remeshing already meshed surfaces.\n\nType\n\nComputes size field using existing surface mesh sizes and diffuses geodesically. Then uses the computed size field to remesh surfaces. Notes\n\n\n\nSizeFieldType.VOLUMETRIC = 1\n\nUses precomputed variable size in volumetric space defined by size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_elbow_pmdat.html#ansysmeshingprimeexamplesexamplesdownload_elbow_pmdat","title":"ansys.meshing.prime.examples.examples.download_elbow_pmdat","text":"ansys.meshing.prime.examples.examples.download_elbow_pmdat\n\n\n\nansys.meshing.prime.examples.examples.download_elbow_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the mixing elbow example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(elbow, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ZoneType.html#zonetype","title":"ZoneType","text":"ZoneType\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ZoneType\n\nZoneType decides the type of zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ZoneType.html#overview","title":"ZoneType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGE\n\nDenotes the zone is edge zone.\n\nFACE\n\nDenotes the zone is face zone.\n\nVOLUME\n\nDenotes the zone is volume zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ZoneType.html#import-detail","title":"ZoneType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ZoneType.html#attribute-detail","title":"ZoneType > Attribute detail","text":"Attribute detail\n\n\n\nZoneType.EDGE = 1\n\nDenotes the zone is edge zone.\n\n\n\nZoneType.FACE = 2\n\nDenotes the zone is face zone.\n\n\n\nZoneType.VOLUME = 3\n\nDenotes the zone is volume zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshParams.html#automeshparams","title":"AutoMeshParams","text":"AutoMeshParams\n\n\n\nclass ansys.meshing.prime.AutoMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, max_size: float = None, prism_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, thin_volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, multi_zone_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, volume_fill_type: VolumeFillType = None, prism: PrismParams = None, tet: TetParams = None, hexcore: HexCoreParams = None, volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, periodic_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nParameters for volume meshing.\n\nParameters\n\nmodel (Model) – Model to create a AutoMeshParams object with default parameters.\n\nsize_field_type (SizeFieldType, optional) – Type of sizing to be used to generate volume mesh.\n\nmax_size (float, optional) – Maximum cell size.\n\nprism_control_ids (Iterable[int], optional) – Set prism control ids.\n\nthin_volume_control_ids (Iterable[int], optional) – Set thin volume control ids.\n\nmulti_zone_control_ids (Iterable[int], optional) – Set MultiZone control ids.\n\nvolume_fill_type (VolumeFillType, optional) – Option to fill volume.\n\nprism (PrismParams, optional) – Prism control parameters.\n\ntet (TetParams, optional) – Parameters to control tetrahedral mesh generation.\n\nhexcore (HexCoreParams, optional) – Parameters to control hexahedral mesh generation.\n\nvolume_control_ids (Iterable[int], optional) – Ids of the volume controls.\n\nperiodic_control_ids (Iterable[int], optional) – Ids of the periodic controls.\n\njson_data (dict, optional) – JSON dictionary to create a AutoMeshParams object with provided parameters.\n\nExamples\n\n>>> auto_mesh_params = prime.AutoMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshParams.html#overview","title":"AutoMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nhexcore\n\nParameters to control hexahedral mesh generation.\n\nmax_size\n\nMaximum cell size.\n\nmulti_zone_control_ids\n\nSet MultiZone control ids.\n\nperiodic_control_ids\n\nIds of the periodic controls.\n\nprism\n\nPrism control parameters.\n\nprism_control_ids\n\nSet prism control ids.\n\nsize_field_type\n\nType of sizing to be used to generate volume mesh.\n\ntet\n\nParameters to control tetrahedral mesh generation.\n\nthin_volume_control_ids\n\nSet thin volume control ids.\n\nvolume_control_ids\n\nIds of the volume controls.\n\nvolume_fill_type\n\nOption to fill volume.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AutoMeshParams object.\n\nset_default\n\nSet the default values of the AutoMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshParams.html#import-detail","title":"AutoMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshParams.html#property-detail","title":"AutoMeshParams > Property detail","text":"Property detail\n\n\n\nproperty AutoMeshParams.hexcore: HexCoreParams\n\nParameters to control hexahedral mesh generation.\n\n\n\nproperty AutoMeshParams.max_size: float\n\nMaximum cell size.\n\n\n\nproperty AutoMeshParams.multi_zone_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nSet MultiZone control ids.\n\n\n\nproperty AutoMeshParams.periodic_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the periodic controls.\n\n\n\nproperty AutoMeshParams.prism: PrismParams\n\nPrism control parameters.\n\n\n\nproperty AutoMeshParams.prism_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nSet prism control ids.\n\n\n\nproperty AutoMeshParams.size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nType of sizing to be used to generate volume mesh.\n\n\n\nproperty AutoMeshParams.tet: TetParams\n\nParameters to control tetrahedral mesh generation.\n\n\n\nproperty AutoMeshParams.thin_volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nSet thin volume control ids.\n\n\n\nproperty AutoMeshParams.volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the volume controls.\n\n\n\nproperty AutoMeshParams.volume_fill_type: VolumeFillType\n\nOption to fill volume."},{"objectID":"Home","href":"api/ansys/meshing/prime/AutoMeshParams.html#method-detail","title":"AutoMeshParams > Method detail","text":"Method detail\n\n\n\nAutoMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoMeshParams.__str__() -> str\n\n\n\n\n\nstatic AutoMeshParams.print_default()\n\nPrint the default values of AutoMeshParams object.\n\nExamples\n\n>>> AutoMeshParams.print_default()\n\n\n\nstatic AutoMeshParams.set_default(size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, max_size: float = None, prism_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, thin_volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, multi_zone_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, volume_fill_type: VolumeFillType = None, prism: PrismParams = None, tet: TetParams = None, hexcore: HexCoreParams = None, volume_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, periodic_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the AutoMeshParams object.\n\nParameters\n\nsize_field_type (SizeFieldType, optional) – Type of sizing to be used to generate volume mesh.\n\nmax_size (float, optional) – Maximum cell size.\n\nprism_control_ids (Iterable[int], optional) – Set prism control ids.\n\nthin_volume_control_ids (Iterable[int], optional) – Set thin volume control ids.\n\nmulti_zone_control_ids (Iterable[int], optional) – Set MultiZone control ids.\n\nvolume_fill_type (VolumeFillType, optional) – Option to fill volume.\n\nprism (PrismParams, optional) – Prism control parameters.\n\ntet (TetParams, optional) – Parameters to control tetrahedral mesh generation.\n\nhexcore (HexCoreParams, optional) – Parameters to control hexahedral mesh generation.\n\nvolume_control_ids (Iterable[int], optional) – Ids of the volume controls.\n\nperiodic_control_ids (Iterable[int], optional) – Ids of the periodic controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/index.html#the-lucid-package","title":"The lucid package","text":"The lucid package\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/index.html#summary","title":"The lucid package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nmesh_util\n\nModule for meshing utility functions.\n\nscope\n\nModule for Lucid Scope for operation on surfaces functionality.\n\nutils\n\nUtil functions for lucid modules.\n\nClasses\n\n\n\n\n\nMesh\n\nProvides methods for users who are new to meshing.\n\nSurfaceScope\n\nSurfaceScope is one of the classes in Lucid API.\n\nVolumeScope\n\nVolumeScope is one of the classes in Lucid API.\n\nEnums\n\n\n\n\n\nLabelToZoneMethod\n\nProvides for creating zones from labels.\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/index.html#description","title":"The lucid package > Description","text":"Description\n\nHigh level helper functions for PyPrimeMesh"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/index.html#the-partpy-module","title":"The part.py module","text":"The part.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/index.html#summary","title":"The part.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPart\n\nPart contains zonelets and topoentities.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/part/index.html#description","title":"The part.py module > Description","text":"Description\n\nModule containing the Part class."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryParams.html#partsummaryparams","title":"PartSummaryParams","text":"PartSummaryParams\n\n\n\nclass ansys.meshing.prime.PartSummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, print_id: bool = None, print_mesh: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control part summary results.\n\nParameters\n\nmodel (Model) – Model to create a PartSummaryParams object with default parameters.\n\nprint_id (bool, optional) – Boolean to control print ids. The default is false.\n\nprint_mesh (bool, optional) – Boolean to control print mesh information. The default is true.\n\njson_data (dict, optional) – JSON dictionary to create a PartSummaryParams object with provided parameters.\n\nExamples\n\n>>> part_summary_params = prime.PartSummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryParams.html#overview","title":"PartSummaryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nprint_id\n\nBoolean to control print ids. The default is false.\n\nprint_mesh\n\nBoolean to control print mesh information. The default is true.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PartSummaryParams object.\n\nset_default\n\nSet the default values of the PartSummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryParams.html#import-detail","title":"PartSummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryParams.html#property-detail","title":"PartSummaryParams > Property detail","text":"Property detail\n\n\n\nproperty PartSummaryParams.print_id: bool\n\nBoolean to control print ids. The default is false.\n\n\n\nproperty PartSummaryParams.print_mesh: bool\n\nBoolean to control print mesh information. The default is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/PartSummaryParams.html#method-detail","title":"PartSummaryParams > Method detail","text":"Method detail\n\n\n\nPartSummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPartSummaryParams.__str__() -> str\n\n\n\n\n\nstatic PartSummaryParams.print_default()\n\nPrint the default values of PartSummaryParams object.\n\nExamples\n\n>>> PartSummaryParams.print_default()\n\n\n\nstatic PartSummaryParams.set_default(print_id: bool = None, print_mesh: bool = None)\n\nSet the default values of the PartSummaryParams object.\n\nParameters\n\nprint_id (bool, optional) – Boolean to control print ids. The default is false.\n\nprint_mesh (bool, optional) – Boolean to control print mesh information. The default is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineRefinementType.html#splinerefinementtype","title":"SplineRefinementType","text":"SplineRefinementType\n\n\n\nclass ansys.meshing.prime.SplineRefinementType\n\nType of spline refinement. Currently, supports h-refinement and p-refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineRefinementType.html#overview","title":"SplineRefinementType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nH\n\nH refinement of spline.\n\nP\n\nP refinement of spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineRefinementType.html#import-detail","title":"SplineRefinementType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineRefinementType.html#attribute-detail","title":"SplineRefinementType > Attribute detail","text":"Attribute detail\n\n\n\nSplineRefinementType.H = 0\n\nH refinement of spline.\n\n\n\nSplineRefinementType.P = 1\n\nP refinement of spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_turbine_blade_cdb.html#ansysmeshingprimeexamplesexamplesdownload_turbine_blade_cdb","title":"ansys.meshing.prime.examples.examples.download_turbine_blade_cdb","text":"ansys.meshing.prime.examples.examples.download_turbine_blade_cdb\n\n\n\nansys.meshing.prime.examples.examples.download_turbine_blade_cdb(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the CDB file for the turbine blade example.\n\ndestination\n\nstr, optional\n\nPath to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce\n\nbool, optional\n\nWhether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     turbine_blade_mesh = prime_examples.download_turbine_blade_cdb()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_mapdl_cdb(\n>>>             turbine_blade_mesh,\n>>>             params=prime.ImportMapdlCdbParams(model),\n>>>         )\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshResults.html#deletemeshresults","title":"DeleteMeshResults","text":"DeleteMeshResults\n\n\n\nclass ansys.meshing.prime.DeleteMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with delete mesh on topofaces.\n\nParameters\n\nmodel (Model) – Model to create a DeleteMeshResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteMeshResults object with provided parameters.\n\nExamples\n\n>>> delete_mesh_results = prime.DeleteMeshResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshResults.html#overview","title":"DeleteMeshResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteMeshResults object.\n\nset_default\n\nSet the default values of the DeleteMeshResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshResults.html#import-detail","title":"DeleteMeshResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshResults.html#property-detail","title":"DeleteMeshResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteMeshResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMeshResults.html#method-detail","title":"DeleteMeshResults > Method detail","text":"Method detail\n\n\n\nDeleteMeshResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteMeshResults.__str__() -> str\n\n\n\n\n\nstatic DeleteMeshResults.print_default()\n\nPrint the default values of DeleteMeshResults object.\n\nExamples\n\n>>> DeleteMeshResults.print_default()\n\n\n\nstatic DeleteMeshResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteMeshResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryParams.html#sizecontrolsummaryparams","title":"SizeControlSummaryParams","text":"SizeControlSummaryParams\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.SizeControlSummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to get size control summary.\n\nParameters\n\nmodel (Model) – Model to create a SizeControlSummaryParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a SizeControlSummaryParams object with provided parameters.\n\nExamples\n\n>>> size_control_summary_params = prime.SizeControlSummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryParams.html#overview","title":"SizeControlSummaryParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SizeControlSummaryParams object.\n\nset_default\n\nSet the default values of the SizeControlSummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryParams.html#import-detail","title":"SizeControlSummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryParams.html#method-detail","title":"SizeControlSummaryParams > Method detail","text":"Method detail\n\n\n\nSizeControlSummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeControlSummaryParams.__str__() -> str\n\n\n\n\n\nstatic SizeControlSummaryParams.print_default()\n\nPrint the default values of SizeControlSummaryParams object.\n\nExamples\n\n>>> SizeControlSummaryParams.print_default()\n\n\n\nstatic SizeControlSummaryParams.set_default()\n\nSet the default values of the SizeControlSummaryParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateParams.html#triangulateparams","title":"TriangulateParams","text":"TriangulateParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.TriangulateParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nProvides the parameters used for triangulation operation.\n\nParameters\n\nmodel (Model) – Model to create a TriangulateParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a TriangulateParams object with provided parameters.\n\nExamples\n\n>>> triangulate_params = prime.TriangulateParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateParams.html#overview","title":"TriangulateParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TriangulateParams object.\n\nset_default\n\nSet the default values of the TriangulateParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateParams.html#import-detail","title":"TriangulateParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/TriangulateParams.html#method-detail","title":"TriangulateParams > Method detail","text":"Method detail\n\n\n\nTriangulateParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTriangulateParams.__str__() -> str\n\n\n\n\n\nstatic TriangulateParams.print_default()\n\nPrint the default values of TriangulateParams object.\n\nExamples\n\n>>> TriangulateParams.print_default()\n\n\n\nstatic TriangulateParams.set_default()\n\nSet the default values of the TriangulateParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControl.html#sizecontrol","title":"SizeControl","text":"SizeControl\n\n\n\nclass ansys.meshing.prime.SizeControl(model, id, object_id, name, local=False)\n\nSize control is used to compute the size field.\n\nThe size field is computed based on the size control defined.\nDifferent type of size controls provide control over how the mesh size is distributed on a\nsurface or within the volume.\n\nParameters\n\nmodel (Model) – Server model to create SizeControl object.\n\nid (int) – Id of the SizeControl.\n\nobject_id (int) – Object id of the SizeControl.\n\nname (str) – Name of the SizeControl..\n\nlocal (bool, optional) – Unused. The default is False."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControl.html#overview","title":"SizeControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_boi_sizing_params\n\nGet the body of influence sizing parameters of size control.\n\nget_curvature_sizing_params\n\nGet the curvature sizing parameters of size control.\n\nget_hard_sizing_params\n\nGet the hard sizing parameters of size control.\n\nget_meshed_sizing_params\n\nGet the meshed sizing parameters of size control.\n\nget_proximity_sizing_params\n\nGet the proximity sizing parameters of size control.\n\nget_scope\n\nGet the scope used by size control to evaluate entities.\n\nget_sizing_type\n\nGets the sizing type for the size control.\n\nget_soft_sizing_params\n\nGet the soft sizing parameters of size control.\n\nget_soi_sizing_params\n\nGet the sphere of influence sizing parameters of size control.\n\nget_summary\n\nGet the size control summary along with the evaluated scope for the provided parameters..\n\nset_boi_sizing_params\n\nSet the body of influence sizing parameters to compute volumetric size field.\n\nset_curvature_sizing_params\n\nSet the curvature sizing parameters to compute volumetric size field.\n\nset_hard_sizing_params\n\nSet the hard sizing parameters to compute volumetric size field.\n\nset_meshed_sizing_params\n\nSet the meshed sizing parameters to compute volumetric size field.\n\nset_proximity_sizing_params\n\nSet the proximity sizing parameters to compute volumetric size field.\n\nset_scope\n\nSet the scope for size control to evaluate.\n\nset_soft_sizing_params\n\nSet the soft sizing parameters to compute volumetric size field.\n\nset_soi_sizing_params\n\nSet the sphere of influence sizing parameters to compute volumetric size field.\n\nset_suggested_name\n\nSet the unique name for the size control to a suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of SizeControl.\n\nname\n\nGet the name of size control.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nGet a representation of the class in string format."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControl.html#import-detail","title":"SizeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControl.html#property-detail","title":"SizeControl > Property detail","text":"Property detail\n\n\n\nproperty SizeControl.id\n\nGet the id of SizeControl.\n\n\n\nproperty SizeControl.name\n\nGet the name of size control.\n\nReturns\n\nName of the size control.\n\nReturn type\n\nstr\n\nExamples\n\n>>> print(size_control.name)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeControl.html#method-detail","title":"SizeControl > Method detail","text":"Method detail\n\n\n\nSizeControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeControl.__str__() -> str\n\nGet a representation of the class in string format.\n\nReturns\n\nClass data in string format.\n\nReturn type\n\nstr\n\n\n\nSizeControl.get_boi_sizing_params() -> ansys.meshing.prime.params.primestructs.BoiSizingParams\n\nGet the body of influence sizing parameters of size control.\n\nReturns\n\nReturn the BoiSizingParams.\n\nReturn type\n\nBoiSizingParams\n\nExamples\n\n>>> params = size_control.get_boi_sizing_params()\n\n\n\nSizeControl.get_curvature_sizing_params() -> ansys.meshing.prime.params.primestructs.CurvatureSizingParams\n\nGet the curvature sizing parameters of size control.\n\nReturns\n\nReturn the CurvatureSizingParams.\n\nReturn type\n\nCurvatureSizingParams\n\nExamples\n\n>>> params = size_control.get_curvature_sizing_params()\n\n\n\nSizeControl.get_hard_sizing_params() -> ansys.meshing.prime.params.primestructs.HardSizingParams\n\nGet the hard sizing parameters of size control.\n\nReturns\n\nReturn the HardSizingParams.\n\nReturn type\n\nHardSizingParams\n\nExamples\n\n>>> params = size_control.get_hard_sizing_params()\n\n\n\nSizeControl.get_meshed_sizing_params() -> ansys.meshing.prime.params.primestructs.MeshedSizingParams\n\nGet the meshed sizing parameters of size control.\n\nReturns\n\nReturn the MeshedSizingParams.\n\nReturn type\n\nMeshedSizingParams\n\nExamples\n\n>>> params = size_control.get_meshed_sizing_params()\n\n\n\nSizeControl.get_proximity_sizing_params() -> ansys.meshing.prime.params.primestructs.ProximitySizingParams\n\nGet the proximity sizing parameters of size control.\n\nReturns\n\nReturn the ProximitySizingParams.\n\nReturn type\n\nProximitySizingParams\n\nExamples\n\n>>> params = size_control.get_proximity_sizing_params()\n\n\n\nSizeControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGet the scope used by size control to evaluate entities.\n\nReturns\n\nReturn the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = size_control.get_scope()\n\n\n\nSizeControl.get_sizing_type() -> ansys.meshing.prime.params.primestructs.SizingType\n\nGets the sizing type for the size control.\n\nReturns\n\nReturns the sizing type of the control.\n\nReturn type\n\nSizingType\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> type = size_control.get_sizing_type()\n\n\n\nSizeControl.get_soft_sizing_params() -> ansys.meshing.prime.params.primestructs.SoftSizingParams\n\nGet the soft sizing parameters of size control.\n\nReturns\n\nReturn the SoftSizingParams.\n\nReturn type\n\nSoftSizingParams\n\nExamples\n\n>>> params = size_control.get_soft_sizing_params()\n\n\n\nSizeControl.get_soi_sizing_params() -> ansys.meshing.prime.params.primestructs.SoiSizingParams\n\nGet the sphere of influence sizing parameters of size control.\n\nReturns\n\nReturns the SoiSizingParams.\n\nReturn type\n\nSoiSizingParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = size_control.get_soi_sizing_params()\n\n\n\nSizeControl.get_summary(params: ansys.meshing.prime.params.primestructs.SizeControlSummaryParams) -> ansys.meshing.prime.params.primestructs.SizeControlSummaryResult\n\nGet the size control summary along with the evaluated scope for the provided parameters..\n\nParameters\n\nparams (SizeControlSummaryParams) – Size control summary parameters.\n\nReturns\n\nReturn the SizeControlSummaryResult.\n\nReturn type\n\nSizeControlSummaryResult\n\nExamples\n\n>>> results = size_control.get_summary(prime.SizeControlSummaryParams(model=model))\n\n\n\nSizeControl.set_boi_sizing_params(params: ansys.meshing.prime.params.primestructs.BoiSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the body of influence sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (BoiSizingParams) – Parameters that enables you to set sizing on the body of influence region.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_boi_sizing_params(\n>>>                  prime.BoiSizingParams(model=model,\n>>>                  max = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_curvature_sizing_params(params: ansys.meshing.prime.params.primestructs.CurvatureSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the curvature sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (CurvatureSizingParams) – Parameters that enables you to set the normal angle as the maximum allowable angle at which one element edge may span.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_curvature_sizing_params(\n>>>                  prime.CurvatureSizingParams(model=model,\n>>>                  min = 0.1, max = 1.0, growth_rate = 1.2,\n>>>                  normal_angle = 18))\n\n\n\nSizeControl.set_hard_sizing_params(params: ansys.meshing.prime.params.primestructs.HardSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the hard sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (HardSizingParams) – Parameters that enables you to set uniform size based on the specified size.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_hard_sizing_params(\n>>>                  prime.HardSizingParams(model=model,\n>>>                  min = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_meshed_sizing_params(params: ansys.meshing.prime.params.primestructs.MeshedSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the meshed sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (MeshedSizingParams) – Parameters that enables you to set the sizes based on existing sizes.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_meshed_sizing_params(\n>>>                  prime.MeshedSizingParams(model=model,\n>>>                  growth_rate = 1.2))\n\n\n\nSizeControl.set_proximity_sizing_params(params: ansys.meshing.prime.params.primestructs.ProximitySizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the proximity sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (ProximitySizingParams) – Parameters that enables you to specify number of elements in the gaps.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_proximity_sizing_params(\n>>>                  prime.ProximitySizingParams(model=model,\n>>>                  min = 0.1, max = 1.0, growth_rate = 1.2))\n\n\n\nSizeControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSet the scope for size control to evaluate.\n\nSize control uses scope to evaluate entities for which size field needs to be computed.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for size field computation.\n\nReturns\n\nReturn a SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> size_control.set_scope(prime.ScopeDefinition(model=model,\n>>>                        entity_type = ScopeEntity.FACEZONELETS,\n>>>                        evaluation_type = ScopeEvaluationType.LABELS,\n>>>                        label_expression = \"inlet\"))\n\n\n\nSizeControl.set_soft_sizing_params(params: ansys.meshing.prime.params.primestructs.SoftSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the soft sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (SoftSizingParams) – Parameters that enables you to set the maximum size on scoped face zonelets.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_soft_sizing_params(\n>>>                  prime.SoftSizingParams(model=model,\n>>>                  max = 1.0, growth_rate = 1.2))\n\n\n\nSizeControl.set_soi_sizing_params(params: ansys.meshing.prime.params.primestructs.SoiSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the sphere of influence sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (SoiSizingParams) – Parameters that enables you to set sizing on the spherical influence region.\n\nReturns\n\nReturns the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> size_control.set_soi_sizing_params(\n>>>                  prime.SoiSizingParams(model=model,\n>>>                  max = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the size control to a suggested name.\n\nParameters\n\nname (str) – Suggested name for the size control.\n\nReturns\n\nNewly suggested name for the size control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> size_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderResults.html#scaffolderresults","title":"ScaffolderResults","text":"ScaffolderResults\n\n\n\nclass ansys.meshing.prime.autogen.scaffolderstructs.ScaffolderResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_incomplete_topo_faces: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated to scaffold operation.\n\nParameters\n\nmodel (Model) – Model to create a ScaffolderResults object with default parameters.\n\nn_incomplete_topo_faces (int, optional) – Number of topofaces failed in scaffold operation.\n\nerror_code (ErrorCode, optional) – Error code associated with scaffold operation.\n\njson_data (dict, optional) – JSON dictionary to create a ScaffolderResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_results = prime.ScaffolderResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderResults.html#overview","title":"ScaffolderResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with scaffold operation.\n\nn_incomplete_topo_faces\n\nNumber of topofaces failed in scaffold operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScaffolderResults object.\n\nset_default\n\nSet the default values of the ScaffolderResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderResults.html#import-detail","title":"ScaffolderResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderResults.html#property-detail","title":"ScaffolderResults > Property detail","text":"Property detail\n\n\n\nproperty ScaffolderResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with scaffold operation.\n\n\n\nproperty ScaffolderResults.n_incomplete_topo_faces: int\n\nNumber of topofaces failed in scaffold operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/ScaffolderResults.html#method-detail","title":"ScaffolderResults > Method detail","text":"Method detail\n\n\n\nScaffolderResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolderResults.__str__() -> str\n\n\n\n\n\nstatic ScaffolderResults.print_default()\n\nPrint the default values of ScaffolderResults object.\n\nExamples\n\n>>> ScaffolderResults.print_default()\n\n\n\nstatic ScaffolderResults.set_default(n_incomplete_topo_faces: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ScaffolderResults object.\n\nParameters\n\nn_incomplete_topo_faces (int, optional) – Number of topofaces failed in scaffold operation.\n\nerror_code (ErrorCode, optional) – Error code associated with scaffold operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseResults.html#fuseresults","title":"FuseResults","text":"FuseResults\n\n\n\nclass ansys.meshing.prime.FuseResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, fused_pairs: int = None, fused_area: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, intersecting_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, intersecting_zonelet_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs] = None, json_data: dict = None, **kwargs)\n\nResults associated with the fuse operations.\n\nParameters\n\nmodel (Model) – Model to create a FuseResults object with default parameters.\n\nfused_pairs (int, optional) – Number of face region pairs that were fused.This is a beta parameter. The behavior and name may change in the future.\n\nfused_area (float, optional) – Total area of fused regions from both source and target faces.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of the fuse operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the fuse operation.This is a beta parameter. The behavior and name may change in the future.\n\nintersecting_locations (Iterable[float], optional) – Locations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.This is a beta parameter. The behavior and name may change in the future.\n\nintersecting_zonelet_pairs (List[OverlapPairs], optional) – Contains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a FuseResults object with provided parameters.\n\nExamples\n\n>>> fuse_results = prime.FuseResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseResults.html#overview","title":"FuseResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of the fuse operation.\n\nfused_area\n\nTotal area of fused regions from both source and target faces.\n\nfused_pairs\n\nNumber of face region pairs that were fused.\n\nintersecting_locations\n\nLocations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nintersecting_zonelet_pairs\n\nContains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input.\n\nwarning_codes\n\nWarning codes associated with the fuse operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FuseResults object.\n\nset_default\n\nSet the default values of the FuseResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseResults.html#import-detail","title":"FuseResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseResults.html#property-detail","title":"FuseResults > Property detail","text":"Property detail\n\n\n\nproperty FuseResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of the fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.fused_area: float\n\nTotal area of fused regions from both source and target faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.fused_pairs: int\n\nNumber of face region pairs that were fused.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.intersecting_locations: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nLocations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.intersecting_zonelet_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs]\n\nContains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseResults.html#method-detail","title":"FuseResults > Method detail","text":"Method detail\n\n\n\nFuseResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFuseResults.__str__() -> str\n\n\n\n\n\nstatic FuseResults.print_default()\n\nPrint the default values of FuseResults object.\n\nExamples\n\n>>> FuseResults.print_default()\n\n\n\nstatic FuseResults.set_default(fused_pairs: int = None, fused_area: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, intersecting_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, intersecting_zonelet_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs] = None)\n\nSet the default values of the FuseResults object.\n\nParameters\n\nfused_pairs (int, optional) – Number of face region pairs that were fused.\n\nfused_area (float, optional) – Total area of fused regions from both source and target faces.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of the fuse operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the fuse operation.\n\nintersecting_locations (Iterable[float], optional) – Locations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nintersecting_zonelet_pairs (List[OverlapPairs], optional) – Contains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input."},{"objectID":"Home","href":"api/ansys/meshing/prime/OptimizeQuadMeshParams.html#optimizequadmeshparams","title":"OptimizeQuadMeshParams","text":"OptimizeQuadMeshParams\n\n\n\nclass ansys.meshing.prime.OptimizeQuadMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, suppress_topo_edge_and_mesh_cleanup: bool = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, generate_quads: bool = None, project_on_geometry: bool = None, delete_interior_nodes_params: DeleteInteriorNodesParams = None, json_data: dict = None, **kwargs)\n\nParameters for optimize quad mesh operations.\n\nParameters\n\nmodel (Model) – Model to create a OptimizeQuadMeshParams object with default parameters.\n\nsuppress_topo_edge_and_mesh_cleanup (bool, optional) – Option to suppress topoedges and clean up mesh.This is a beta parameter. The behavior and name may change in the future.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.This is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\ngenerate_quads (bool, optional) – Option to generate quadrilateral surface mesh.This is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry (bool, optional) – Option to project on geometry when meshing.This is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes_params (DeleteInteriorNodesParams, optional) – Parameters to control delete interior nodes operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a OptimizeQuadMeshParams object with provided parameters.\n\nExamples\n\n>>> optimize_quad_mesh_params = prime.OptimizeQuadMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/OptimizeQuadMeshParams.html#overview","title":"OptimizeQuadMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_interior_nodes_params\n\nParameters to control delete interior nodes operation.\n\nedge_mesh_constant_size\n\nConstant size used for edge meshing.\n\ngenerate_quads\n\nOption to generate quadrilateral surface mesh.\n\nproject_on_geometry\n\nOption to project on geometry when meshing.\n\nsuppress_topo_edge_and_mesh_cleanup\n\nOption to suppress topoedges and clean up mesh.\n\nsurface_mesh_constant_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of OptimizeQuadMeshParams object.\n\nset_default\n\nSet the default values of the OptimizeQuadMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/OptimizeQuadMeshParams.html#import-detail","title":"OptimizeQuadMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/OptimizeQuadMeshParams.html#property-detail","title":"OptimizeQuadMeshParams > Property detail","text":"Property detail\n\n\n\nproperty OptimizeQuadMeshParams.delete_interior_nodes_params: DeleteInteriorNodesParams\n\nParameters to control delete interior nodes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.generate_quads: bool\n\nOption to generate quadrilateral surface mesh.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.project_on_geometry: bool\n\nOption to project on geometry when meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.suppress_topo_edge_and_mesh_cleanup: bool\n\nOption to suppress topoedges and clean up mesh.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty OptimizeQuadMeshParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/OptimizeQuadMeshParams.html#method-detail","title":"OptimizeQuadMeshParams > Method detail","text":"Method detail\n\n\n\nOptimizeQuadMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nOptimizeQuadMeshParams.__str__() -> str\n\n\n\n\n\nstatic OptimizeQuadMeshParams.print_default()\n\nPrint the default values of OptimizeQuadMeshParams object.\n\nExamples\n\n>>> OptimizeQuadMeshParams.print_default()\n\n\n\nstatic OptimizeQuadMeshParams.set_default(suppress_topo_edge_and_mesh_cleanup: bool = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, generate_quads: bool = None, project_on_geometry: bool = None, delete_interior_nodes_params: DeleteInteriorNodesParams = None)\n\nSet the default values of the OptimizeQuadMeshParams object.\n\nParameters\n\nsuppress_topo_edge_and_mesh_cleanup (bool, optional) – Option to suppress topoedges and clean up mesh.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.\n\ngenerate_quads (bool, optional) – Option to generate quadrilateral surface mesh.\n\nproject_on_geometry (bool, optional) – Option to project on geometry when meshing.\n\ndelete_interior_nodes_params (DeleteInteriorNodesParams, optional) – Parameters to control delete interior nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinSeparateMethod.html#joinseparatemethod","title":"JoinSeparateMethod","text":"JoinSeparateMethod\n\n\n\nclass ansys.meshing.prime.JoinSeparateMethod\n\nJoin separation method to handle separated overlapped zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinSeparateMethod.html#overview","title":"JoinSeparateMethod > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nKEEPBOTH\n\nKeep both overlapping zonelets after joining.\n\nKEEPNONE\n\nRemove both overlapping zonelets after joining.\n\nKEEPONE\n\nKeep one overlap zonelets after joining."},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinSeparateMethod.html#import-detail","title":"JoinSeparateMethod > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/JoinSeparateMethod.html#attribute-detail","title":"JoinSeparateMethod > Attribute detail","text":"Attribute detail\n\n\n\nJoinSeparateMethod.KEEPBOTH = 2\n\nKeep both overlapping zonelets after joining.\n\n\n\nJoinSeparateMethod.KEEPNONE = 0\n\nRemove both overlapping zonelets after joining.\n\n\n\nJoinSeparateMethod.KEEPONE = 1\n\nKeep one overlap zonelets after joining."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectNonCircularHolesParams.html#detectnoncircularholesparams","title":"DetectNonCircularHolesParams","text":"DetectNonCircularHolesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.DetectNonCircularHolesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, allow_curved_topo_faces: bool = None, max_hole_length: float = None, min_hole_length: float = None, merge_edge_allow_self_close: bool = None, json_data: dict = None, **kwargs)\n\nParameters for detect non circular holes operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectNonCircularHolesParams object with default parameters.\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.This is a beta parameter. The behavior and name may change in the future.\n\nmax_hole_length (float, optional) – Maximum length of holes.This is a beta parameter. The behavior and name may change in the future.\n\nmin_hole_length (float, optional) – Minimum length of holes.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectNonCircularHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_non_circular_holes_params = prime.DetectNonCircularHolesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectNonCircularHolesParams.html#overview","title":"DetectNonCircularHolesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nallow_curved_topo_faces\n\nOption to allow holes in curved topoface.\n\nmax_hole_length\n\nMaximum length of holes.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmin_hole_length\n\nMinimum length of holes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectNonCircularHolesParams object.\n\nset_default\n\nSet the default values of the DetectNonCircularHolesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectNonCircularHolesParams.html#import-detail","title":"DetectNonCircularHolesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectNonCircularHolesParams.html#property-detail","title":"DetectNonCircularHolesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectNonCircularHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectNonCircularHolesParams.max_hole_length: float\n\nMaximum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectNonCircularHolesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectNonCircularHolesParams.min_hole_length: float\n\nMinimum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectNonCircularHolesParams.html#method-detail","title":"DetectNonCircularHolesParams > Method detail","text":"Method detail\n\n\n\nDetectNonCircularHolesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectNonCircularHolesParams.__str__() -> str\n\n\n\n\n\nstatic DetectNonCircularHolesParams.print_default()\n\nPrint the default values of DetectNonCircularHolesParams object.\n\nExamples\n\n>>> DetectNonCircularHolesParams.print_default()\n\n\n\nstatic DetectNonCircularHolesParams.set_default(allow_curved_topo_faces: bool = None, max_hole_length: float = None, min_hole_length: float = None, merge_edge_allow_self_close: bool = None)\n\nSet the default values of the DetectNonCircularHolesParams object.\n\nParameters\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.\n\nmax_hole_length (float, optional) – Maximum length of holes.\n\nmin_hole_length (float, optional) – Minimum length of holes.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/PickedInfo.html#pickedinfo","title":"PickedInfo","text":"PickedInfo\n\n\n\nclass ansys.meshing.prime.graphics.widgets.picked_info.PickedInfo(prime_plotter: ansys.meshing.prime.graphics.plotter.PrimePlotter)\n\nInitializes the picked information button widget.\n\nThis widget lets you get information about the picked mesh objects.\n\nParameters\n\nprime_plotter (PrimePlotter) – Plotter to apply this widget to."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/PickedInfo.html#overview","title":"PickedInfo > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncallback\n\nDefine the callback function for the button widget.\n\ninfo_message\n\nGet the information message for the selected mesh object.\n\nupdate\n\nDefine the configuration and representation of the button widget button.\n\nProperties\n\n\n\n\n\nplotter\n\nPlotter object that the widget is assigned to.\n\nAttributes\n\n\n\n\n\n__slots__\n\n\n\nprime_plotter\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/PickedInfo.html#import-detail","title":"PickedInfo > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/PickedInfo.html#property-detail","title":"PickedInfo > Property detail","text":"Property detail\n\n\n\nproperty PickedInfo.plotter: pyvista.Plotter\n\nPlotter object that the widget is assigned to."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/PickedInfo.html#attribute-detail","title":"PickedInfo > Attribute detail","text":"Attribute detail\n\n\n\nPickedInfo.__slots__ = ()\n\n\n\n\n\nPickedInfo.prime_plotter\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/picked_info/PickedInfo.html#method-detail","title":"PickedInfo > Method detail","text":"Method detail\n\n\n\nPickedInfo.callback(state: bool) -> None\n\nDefine the callback function for the button widget.\n\nParameters\n\nstate (bool) – State of the button widget.\n\n\n\nPickedInfo.info_message(mesh_info: ansys.meshing.prime.core.mesh.DisplayMeshInfo) -> str\n\nGet the information message for the selected mesh object.\n\nParameters\n\nmesh_info (DisplayMeshInfo) – Mesh information object to print.\n\nReturns\n\nMessage with the information of the selected mesh object.\n\nReturn type\n\nstr\n\n\n\nPickedInfo.update() -> None\n\nDefine the configuration and representation of the button widget button."},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceConnectivityResults.html#faceconnectivityresults","title":"FaceConnectivityResults","text":"FaceConnectivityResults\n\n\n\nclass ansys.meshing.prime.FaceConnectivityResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, mesh_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_zone_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_zone_names: ansys.meshing.prime.params.primestructs.List[str] = None, num_nodes_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, node_coords: ansys.meshing.prime.params.primestructs.Iterable[float] = None, num_face_list_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_list: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult of the face connectivity information.\n\nParameters\n\nmodel (Model) – Model to create a FaceConnectivityResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the get face connectivity operation.\n\nface_zonelet_ids (Iterable[int], optional) – Face zonelet ids for which connectivity data is available.\n\ntopo_face_ids (Iterable[int], optional) – TopoFace ids corresponding to each face zonelet id for topology based mesh.\n\nmesh_face_ids (Iterable[int], optional) – Mesh face ids corresponding to each topoface.\n\nface_zone_ids (Iterable[int], optional) – Face zone id corresponding to each topoface or face zonelet.\n\nface_zone_names (List[str], optional) – Face zone name corresponding to each topoface or face zonelet.\n\nnum_nodes_per_face_zonelet (Iterable[int], optional) – Number of nodes per face zonelet.\n\nnode_coords (Iterable[float], optional) – Node coordinates describing faces of face zonelet.\n\nnum_face_list_per_face_zonelet (Iterable[int], optional) – Number of face list per face zonelet.\n\nface_list (Iterable[int], optional) – Face list describing connectivity of node coordinates.\n\njson_data (dict, optional) – JSON dictionary to create a FaceConnectivityResults object with provided parameters.\n\nExamples\n\n>>> face_connectivity_results = prime.FaceConnectivityResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceConnectivityResults.html#overview","title":"FaceConnectivityResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the get face connectivity operation.\n\nface_list\n\nFace list describing connectivity of node coordinates.\n\nface_zone_ids\n\nFace zone id corresponding to each topoface or face zonelet.\n\nface_zone_names\n\nFace zone name corresponding to each topoface or face zonelet.\n\nface_zonelet_ids\n\nFace zonelet ids for which connectivity data is available.\n\nmesh_face_ids\n\nMesh face ids corresponding to each topoface.\n\nnode_coords\n\nNode coordinates describing faces of face zonelet.\n\nnum_face_list_per_face_zonelet\n\nNumber of face list per face zonelet.\n\nnum_nodes_per_face_zonelet\n\nNumber of nodes per face zonelet.\n\ntopo_face_ids\n\nTopoFace ids corresponding to each face zonelet id for topology based mesh.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FaceConnectivityResults object.\n\nset_default\n\nSet the default values of the FaceConnectivityResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceConnectivityResults.html#import-detail","title":"FaceConnectivityResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceConnectivityResults.html#property-detail","title":"FaceConnectivityResults > Property detail","text":"Property detail\n\n\n\nproperty FaceConnectivityResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the get face connectivity operation.\n\n\n\nproperty FaceConnectivityResults.face_list: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace list describing connectivity of node coordinates.\n\n\n\nproperty FaceConnectivityResults.face_zone_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zone id corresponding to each topoface or face zonelet.\n\n\n\nproperty FaceConnectivityResults.face_zone_names: ansys.meshing.prime.params.primestructs.List[str]\n\nFace zone name corresponding to each topoface or face zonelet.\n\n\n\nproperty FaceConnectivityResults.face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zonelet ids for which connectivity data is available.\n\n\n\nproperty FaceConnectivityResults.mesh_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nMesh face ids corresponding to each topoface.\n\n\n\nproperty FaceConnectivityResults.node_coords: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nNode coordinates describing faces of face zonelet.\n\n\n\nproperty FaceConnectivityResults.num_face_list_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of face list per face zonelet.\n\n\n\nproperty FaceConnectivityResults.num_nodes_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of nodes per face zonelet.\n\n\n\nproperty FaceConnectivityResults.topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoFace ids corresponding to each face zonelet id for topology based mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceConnectivityResults.html#method-detail","title":"FaceConnectivityResults > Method detail","text":"Method detail\n\n\n\nFaceConnectivityResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFaceConnectivityResults.__str__() -> str\n\n\n\n\n\nstatic FaceConnectivityResults.print_default()\n\nPrint the default values of FaceConnectivityResults object.\n\nExamples\n\n>>> FaceConnectivityResults.print_default()\n\n\n\nstatic FaceConnectivityResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, mesh_face_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_zone_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_zone_names: ansys.meshing.prime.params.primestructs.List[str] = None, num_nodes_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, node_coords: ansys.meshing.prime.params.primestructs.Iterable[float] = None, num_face_list_per_face_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_list: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the FaceConnectivityResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the get face connectivity operation.\n\nface_zonelet_ids (Iterable[int], optional) – Face zonelet ids for which connectivity data is available.\n\ntopo_face_ids (Iterable[int], optional) – TopoFace ids corresponding to each face zonelet id for topology based mesh.\n\nmesh_face_ids (Iterable[int], optional) – Mesh face ids corresponding to each topoface.\n\nface_zone_ids (Iterable[int], optional) – Face zone id corresponding to each topoface or face zonelet.\n\nface_zone_names (List[str], optional) – Face zone name corresponding to each topoface or face zonelet.\n\nnum_nodes_per_face_zonelet (Iterable[int], optional) – Number of nodes per face zonelet.\n\nnode_coords (Iterable[float], optional) – Node coordinates describing faces of face zonelet.\n\nnum_face_list_per_face_zonelet (Iterable[int], optional) – Number of face list per face zonelet.\n\nface_list (Iterable[int], optional) – Face list describing connectivity of node coordinates."},{"objectID":"Home","href":"api/ansys/meshing/prime/LengthUnit.html#lengthunit","title":"LengthUnit","text":"LengthUnit\n\n\n\nclass ansys.meshing.prime.LengthUnit\n\nLength units"},{"objectID":"Home","href":"api/ansys/meshing/prime/LengthUnit.html#overview","title":"LengthUnit > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCM\n\nDenotes length unit is centimeters.\n\nFT\n\nDenotes length unit is feet.\n\nIN\n\nDenotes length unit is inches.\n\nM\n\nDenotes length unit is meters.\n\nMM\n\nDenotes length unit is milimeters.\n\nNM\n\nDenotes length unit is nanometers.\n\nUM\n\nDenotes length unit is micrometers."},{"objectID":"Home","href":"api/ansys/meshing/prime/LengthUnit.html#import-detail","title":"LengthUnit > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/LengthUnit.html#attribute-detail","title":"LengthUnit > Attribute detail","text":"Attribute detail\n\n\n\nLengthUnit.CM = 1\n\nDenotes length unit is centimeters.\n\n\n\nLengthUnit.FT = 6\n\nDenotes length unit is feet.\n\n\n\nLengthUnit.IN = 5\n\nDenotes length unit is inches.\n\n\n\nLengthUnit.M = 0\n\nDenotes length unit is meters.\n\n\n\nLengthUnit.MM = 2\n\nDenotes length unit is milimeters.\n\n\n\nLengthUnit.NM = 4\n\nDenotes length unit is nanometers.\n\n\n\nLengthUnit.UM = 3\n\nDenotes length unit is micrometers."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/sizecontrol/SizeControl.html#sizecontrol","title":"SizeControl","text":"SizeControl\n\n\n\nclass ansys.meshing.prime.core.sizecontrol.SizeControl(model, id, object_id, name, local=False)\n\nSize control is used to compute the size field.\n\nThe size field is computed based on the size control defined.\nDifferent type of size controls provide control over how the mesh size is distributed on a\nsurface or within the volume.\n\nParameters\n\nmodel (Model) – Server model to create SizeControl object.\n\nid (int) – Id of the SizeControl.\n\nobject_id (int) – Object id of the SizeControl.\n\nname (str) – Name of the SizeControl..\n\nlocal (bool, optional) – Unused. The default is False."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/sizecontrol/SizeControl.html#overview","title":"SizeControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_boi_sizing_params\n\nGet the body of influence sizing parameters of size control.\n\nget_curvature_sizing_params\n\nGet the curvature sizing parameters of size control.\n\nget_hard_sizing_params\n\nGet the hard sizing parameters of size control.\n\nget_meshed_sizing_params\n\nGet the meshed sizing parameters of size control.\n\nget_proximity_sizing_params\n\nGet the proximity sizing parameters of size control.\n\nget_scope\n\nGet the scope used by size control to evaluate entities.\n\nget_sizing_type\n\nGets the sizing type for the size control.\n\nget_soft_sizing_params\n\nGet the soft sizing parameters of size control.\n\nget_soi_sizing_params\n\nGet the sphere of influence sizing parameters of size control.\n\nget_summary\n\nGet the size control summary along with the evaluated scope for the provided parameters..\n\nset_boi_sizing_params\n\nSet the body of influence sizing parameters to compute volumetric size field.\n\nset_curvature_sizing_params\n\nSet the curvature sizing parameters to compute volumetric size field.\n\nset_hard_sizing_params\n\nSet the hard sizing parameters to compute volumetric size field.\n\nset_meshed_sizing_params\n\nSet the meshed sizing parameters to compute volumetric size field.\n\nset_proximity_sizing_params\n\nSet the proximity sizing parameters to compute volumetric size field.\n\nset_scope\n\nSet the scope for size control to evaluate.\n\nset_soft_sizing_params\n\nSet the soft sizing parameters to compute volumetric size field.\n\nset_soi_sizing_params\n\nSet the sphere of influence sizing parameters to compute volumetric size field.\n\nset_suggested_name\n\nSet the unique name for the size control to a suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of SizeControl.\n\nname\n\nGet the name of size control.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nGet a representation of the class in string format."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/sizecontrol/SizeControl.html#import-detail","title":"SizeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/sizecontrol/SizeControl.html#property-detail","title":"SizeControl > Property detail","text":"Property detail\n\n\n\nproperty SizeControl.id\n\nGet the id of SizeControl.\n\n\n\nproperty SizeControl.name\n\nGet the name of size control.\n\nReturns\n\nName of the size control.\n\nReturn type\n\nstr\n\nExamples\n\n>>> print(size_control.name)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/sizecontrol/SizeControl.html#method-detail","title":"SizeControl > Method detail","text":"Method detail\n\n\n\nSizeControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeControl.__str__() -> str\n\nGet a representation of the class in string format.\n\nReturns\n\nClass data in string format.\n\nReturn type\n\nstr\n\n\n\nSizeControl.get_boi_sizing_params() -> ansys.meshing.prime.params.primestructs.BoiSizingParams\n\nGet the body of influence sizing parameters of size control.\n\nReturns\n\nReturn the BoiSizingParams.\n\nReturn type\n\nBoiSizingParams\n\nExamples\n\n>>> params = size_control.get_boi_sizing_params()\n\n\n\nSizeControl.get_curvature_sizing_params() -> ansys.meshing.prime.params.primestructs.CurvatureSizingParams\n\nGet the curvature sizing parameters of size control.\n\nReturns\n\nReturn the CurvatureSizingParams.\n\nReturn type\n\nCurvatureSizingParams\n\nExamples\n\n>>> params = size_control.get_curvature_sizing_params()\n\n\n\nSizeControl.get_hard_sizing_params() -> ansys.meshing.prime.params.primestructs.HardSizingParams\n\nGet the hard sizing parameters of size control.\n\nReturns\n\nReturn the HardSizingParams.\n\nReturn type\n\nHardSizingParams\n\nExamples\n\n>>> params = size_control.get_hard_sizing_params()\n\n\n\nSizeControl.get_meshed_sizing_params() -> ansys.meshing.prime.params.primestructs.MeshedSizingParams\n\nGet the meshed sizing parameters of size control.\n\nReturns\n\nReturn the MeshedSizingParams.\n\nReturn type\n\nMeshedSizingParams\n\nExamples\n\n>>> params = size_control.get_meshed_sizing_params()\n\n\n\nSizeControl.get_proximity_sizing_params() -> ansys.meshing.prime.params.primestructs.ProximitySizingParams\n\nGet the proximity sizing parameters of size control.\n\nReturns\n\nReturn the ProximitySizingParams.\n\nReturn type\n\nProximitySizingParams\n\nExamples\n\n>>> params = size_control.get_proximity_sizing_params()\n\n\n\nSizeControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGet the scope used by size control to evaluate entities.\n\nReturns\n\nReturn the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = size_control.get_scope()\n\n\n\nSizeControl.get_sizing_type() -> ansys.meshing.prime.params.primestructs.SizingType\n\nGets the sizing type for the size control.\n\nReturns\n\nReturns the sizing type of the control.\n\nReturn type\n\nSizingType\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> type = size_control.get_sizing_type()\n\n\n\nSizeControl.get_soft_sizing_params() -> ansys.meshing.prime.params.primestructs.SoftSizingParams\n\nGet the soft sizing parameters of size control.\n\nReturns\n\nReturn the SoftSizingParams.\n\nReturn type\n\nSoftSizingParams\n\nExamples\n\n>>> params = size_control.get_soft_sizing_params()\n\n\n\nSizeControl.get_soi_sizing_params() -> ansys.meshing.prime.params.primestructs.SoiSizingParams\n\nGet the sphere of influence sizing parameters of size control.\n\nReturns\n\nReturns the SoiSizingParams.\n\nReturn type\n\nSoiSizingParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = size_control.get_soi_sizing_params()\n\n\n\nSizeControl.get_summary(params: ansys.meshing.prime.params.primestructs.SizeControlSummaryParams) -> ansys.meshing.prime.params.primestructs.SizeControlSummaryResult\n\nGet the size control summary along with the evaluated scope for the provided parameters..\n\nParameters\n\nparams (SizeControlSummaryParams) – Size control summary parameters.\n\nReturns\n\nReturn the SizeControlSummaryResult.\n\nReturn type\n\nSizeControlSummaryResult\n\nExamples\n\n>>> results = size_control.get_summary(prime.SizeControlSummaryParams(model=model))\n\n\n\nSizeControl.set_boi_sizing_params(params: ansys.meshing.prime.params.primestructs.BoiSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the body of influence sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (BoiSizingParams) – Parameters that enables you to set sizing on the body of influence region.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_boi_sizing_params(\n>>>                  prime.BoiSizingParams(model=model,\n>>>                  max = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_curvature_sizing_params(params: ansys.meshing.prime.params.primestructs.CurvatureSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the curvature sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (CurvatureSizingParams) – Parameters that enables you to set the normal angle as the maximum allowable angle at which one element edge may span.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_curvature_sizing_params(\n>>>                  prime.CurvatureSizingParams(model=model,\n>>>                  min = 0.1, max = 1.0, growth_rate = 1.2,\n>>>                  normal_angle = 18))\n\n\n\nSizeControl.set_hard_sizing_params(params: ansys.meshing.prime.params.primestructs.HardSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the hard sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (HardSizingParams) – Parameters that enables you to set uniform size based on the specified size.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_hard_sizing_params(\n>>>                  prime.HardSizingParams(model=model,\n>>>                  min = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_meshed_sizing_params(params: ansys.meshing.prime.params.primestructs.MeshedSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the meshed sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (MeshedSizingParams) – Parameters that enables you to set the sizes based on existing sizes.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_meshed_sizing_params(\n>>>                  prime.MeshedSizingParams(model=model,\n>>>                  growth_rate = 1.2))\n\n\n\nSizeControl.set_proximity_sizing_params(params: ansys.meshing.prime.params.primestructs.ProximitySizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the proximity sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (ProximitySizingParams) – Parameters that enables you to specify number of elements in the gaps.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_proximity_sizing_params(\n>>>                  prime.ProximitySizingParams(model=model,\n>>>                  min = 0.1, max = 1.0, growth_rate = 1.2))\n\n\n\nSizeControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSet the scope for size control to evaluate.\n\nSize control uses scope to evaluate entities for which size field needs to be computed.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for size field computation.\n\nReturns\n\nReturn a SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> size_control.set_scope(prime.ScopeDefinition(model=model,\n>>>                        entity_type = ScopeEntity.FACEZONELETS,\n>>>                        evaluation_type = ScopeEvaluationType.LABELS,\n>>>                        label_expression = \"inlet\"))\n\n\n\nSizeControl.set_soft_sizing_params(params: ansys.meshing.prime.params.primestructs.SoftSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the soft sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (SoftSizingParams) – Parameters that enables you to set the maximum size on scoped face zonelets.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_soft_sizing_params(\n>>>                  prime.SoftSizingParams(model=model,\n>>>                  max = 1.0, growth_rate = 1.2))\n\n\n\nSizeControl.set_soi_sizing_params(params: ansys.meshing.prime.params.primestructs.SoiSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the sphere of influence sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (SoiSizingParams) – Parameters that enables you to set sizing on the spherical influence region.\n\nReturns\n\nReturns the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> size_control.set_soi_sizing_params(\n>>>                  prime.SoiSizingParams(model=model,\n>>>                  max = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the size control to a suggested name.\n\nParameters\n\nname (str) – Suggested name for the size control.\n\nReturns\n\nNewly suggested name for the size control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> size_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlData.html#controldata","title":"ControlData","text":"ControlData\n\n\n\nclass ansys.meshing.prime.ControlData(model: ansys.meshing.prime.autogen.model.Model, id: int, object_id: int, name: str)\n\nContains all controls.\n\nThis class contains all controls, including size controls, prism controls, multizone controls\nand wrapper controls.\n\nParameters\n\nmodel (Model) – Server model to create ControlData object.\n\nid (int) – Id of the ControlData.\n\nobject_id (int) – Object id of the ControlData.\n\nname (str) – Name of the ControlData."},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlData.html#overview","title":"ControlData > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_multi_zone_control\n\nCreate multizone control with defaults.\n\ncreate_periodic_control\n\nCreate a periodic control.\n\ncreate_prism_control\n\nCreate a prism control.\n\ncreate_shell_bl_control\n\nCreate a ShellBL control.\n\ncreate_size_control\n\nCreate a size control for a sizing type.\n\ncreate_thin_volume_control\n\nCreate a thin volume control.\n\ncreate_volume_control\n\nCreate a volume control.\n\ncreate_wrapper_control\n\nCreate a wrapper control with default values.\n\ndelete_controls\n\nDelete the control for one or more IDs.\n\nget_multi_zone_control_by_name\n\nGet the multizone control by name.\n\nget_multi_zone_controls\n\nGet ids of all the MultiZone controls.\n\nget_part_zonelets\n\nCreates an array of part zonelet structure using the input ScopeDefinition.\n\nget_periodic_control_by_name\n\nGet a periodic control by name.\n\nget_prism_control_by_name\n\nGet a prism control by name.\n\nget_scope_face_zonelets\n\nGet the face zonelet ids for the given scope.\n\nget_scope_parts\n\nGet the part ids for the given scope.\n\nget_shell_bl_control_by_name\n\nGet a shell bl control by name.\n\nget_size_control_by_name\n\nGet a size control by name.\n\nget_thin_volume_control_by_name\n\nGet a thin volume control by name.\n\nget_volume_control_by_name\n\nGet a volume control by name.\n\nget_wrapper_control_by_name\n\nGet the wrapper control by name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of ControlData.\n\nmulti_zone_controls\n\nGet the multizone controls.\n\nname\n\nGet the name of ControlData.\n\nperiodic_controls\n\nGet the periodic controls.\n\nprism_controls\n\nGet the prism controls.\n\nshell_bl_controls\n\nGet the shell bl controls.\n\nsize_controls\n\nGet the size controls.\n\nthin_volume_controls\n\nGet the thin volume controls.\n\nvolume_controls\n\nGet the volume controls.\n\nwrapper_controls\n\nGet the wrapper controls.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlData.html#import-detail","title":"ControlData > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlData.html#property-detail","title":"ControlData > Property detail","text":"Property detail\n\n\n\nproperty ControlData.id\n\nGet the id of ControlData.\n\n\n\nproperty ControlData.multi_zone_controls: List[ansys.meshing.prime.autogen.multizonecontrol.MultiZoneControl]\n\nGet the multizone controls.\n\nReturns\n\nReturns the list of multizone controls.\n\nReturn type\n\nList[MultiZoneControl]\n\nExamples\n\n>>> multi_zone_control = model.control_data.multi_zone_controls\n\n\n\nproperty ControlData.name\n\nGet the name of ControlData.\n\n\n\nproperty ControlData.periodic_controls: List[ansys.meshing.prime.core.periodiccontrol.PeriodicControl]\n\nGet the periodic controls.\n\nReturns\n\nList of periodic controls.\n\nReturn type\n\nList[PeriodicControl]\n\nExamples\n\n>>> periodic_controls = model.control_data.periodic_controls\n\n\n\nproperty ControlData.prism_controls: List[ansys.meshing.prime.core.prismcontrol.PrismControl]\n\nGet the prism controls.\n\nReturns\n\nList of prism controls.\n\nReturn type\n\nList[PrismControl]\n\nExamples\n\n>>> prism_control = model.control_data.prism_controls\n\n\n\nproperty ControlData.shell_bl_controls: List[ansys.meshing.prime.autogen.shellblcontrol.ShellBLControl]\n\nGet the shell bl controls.\n\nReturns\n\nList of shell bl controls.\n\nReturn type\n\nList[ShellBLControl]\n\nExamples\n\n>>> shell_bl_control = model.control_data.shell_bl_controls\n\n\n\nproperty ControlData.size_controls: List[ansys.meshing.prime.core.sizecontrol.SizeControl]\n\nGet the size controls.\n\nReturns\n\nList of size controls.\n\nReturn type\n\nList[SizeControl]\n\nExamples\n\n>>> size_controls = model.control_data.size_controls\n\n\n\nproperty ControlData.thin_volume_controls: List[ansys.meshing.prime.autogen.thinvolumecontrol.ThinVolumeControl]\n\nGet the thin volume controls.\n\nReturns\n\nList of thin volume controls.\n\nReturn type\n\nList[ThinVolumeControl]\n\nExamples\n\n>>> thin_volume_control = model.control_data.thin_volume_controls\n\n\n\nproperty ControlData.volume_controls: List[ansys.meshing.prime.core.volumecontrol.VolumeControl]\n\nGet the volume controls.\n\nReturns\n\nList of volume controls.\n\nReturn type\n\nList[VolumeControl]\n\nExamples\n\n>>> volume_controls = model.control_data.volume_controls\n\n\n\nproperty ControlData.wrapper_controls: List[ansys.meshing.prime.core.wrappercontrol.WrapperControl]\n\nGet the wrapper controls.\n\nReturns\n\nList of wrapper controls.\n\nReturn type\n\nList[WrapperControl]\n\nExamples\n\n>>> wrapper_control = model.control_data.wrapper_controls"},{"objectID":"Home","href":"api/ansys/meshing/prime/ControlData.html#method-detail","title":"ControlData > Method detail","text":"Method detail\n\n\n\nControlData.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nControlData.create_multi_zone_control() -> ansys.meshing.prime.autogen.multizonecontrol.MultiZoneControl\n\nCreate multizone control with defaults.\n\nReturns\n\nReturns the multizone control.\n\nReturn type\n\nmultizone\n\nExamples\n\n>>> multizone = model.control_data.create_wrapper_control()\n\n\n\nControlData.create_periodic_control() -> ansys.meshing.prime.core.periodiccontrol.PeriodicControl\n\nCreate a periodic control.\n\nReturns\n\nPeriodic control.\n\nReturn type\n\nPeriodicControl\n\nExamples\n\n>>> periodic_control = model.control_data.create_periodic_control()\n\n\n\nControlData.create_prism_control() -> ansys.meshing.prime.core.prismcontrol.PrismControl\n\nCreate a prism control.\n\nReturns\n\nPrism control.\n\nReturn type\n\nPrismControl\n\nExamples\n\n>>> prism_control = model.control_data.create_prism_control()\n\n\n\nControlData.create_shell_bl_control() -> ansys.meshing.prime.autogen.shellblcontrol.ShellBLControl\n\nCreate a ShellBL control.\n\nReturns\n\nShellBL Control.\n\nReturn type\n\nShellBLControl\n\nExamples\n\n>>> shell_bl_control = model.control_data.create_shell_bl_control()\n\n\n\nControlData.create_size_control(sizing_type: ansys.meshing.prime.params.primestructs.SizingType) -> ansys.meshing.prime.core.sizecontrol.SizeControl\n\nCreate a size control for a sizing type.\n\nParameters\n\ntype (SizingType) – Sizing type for creating the size control.\n\nReturns\n\nSize control.\n\nReturn type\n\nSizeControl\n\nNotes\n\nAn empty size control is created on calling this method.\n\nExamples\n\n>>> size_control = model.control_data.create_size_control(SizingType.Curvature)\n\n\n\nControlData.create_thin_volume_control() -> ansys.meshing.prime.autogen.thinvolumecontrol.ThinVolumeControl\n\nCreate a thin volume control.\n\nReturns\n\nThin volume control.\n\nReturn type\n\nThinVolumeControl\n\nExamples\n\n>>> thin_volume_control = model.control_data.create_thin_volume_control()\n\n\n\nControlData.create_volume_control() -> ansys.meshing.prime.core.volumecontrol.VolumeControl\n\nCreate a volume control.\n\nReturns\n\nVolume control.\n\nReturn type\n\nVolumeControl\n\nExamples\n\n>>> volume_control = model.control_data.create_volume_control()\n\n\n\nControlData.create_wrapper_control() -> ansys.meshing.prime.core.wrappercontrol.WrapperControl\n\nCreate a wrapper control with default values.\n\nReturns\n\nWrapper control.\n\nReturn type\n\nWrapperControl\n\nNotes\n\nA wrapper control with default values is created on calling this method.\n\nExamples\n\n>>> wrapper_control = model.control_data.create_wrapper_control()\n\n\n\nControlData.delete_controls(control_ids: Iterable[int]) -> ansys.meshing.prime.autogen.commonstructs.DeleteResults\n\nDelete the control for one or more IDs.\n\nParameters\n\ncontrol_ids (Iterable[int]) – List of control IDs.\n\nReturns\n\nDelete results.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = model.control_data.delete_controls([size_control.id, volume_control.id])\n\n\n\nControlData.get_multi_zone_control_by_name(name) -> ansys.meshing.prime.autogen.multizonecontrol.MultiZoneControl\n\nGet the multizone control by name.\n\nParameters\n\nname (str) – Name of the multizone control.\n\nReturns\n\nReturns the multizone control.\n\nReturn type\n\nMultiZoneControl\n\nExamples\n\n>>> multi_zone_control = model.control_data.get_multi_zone_control_by_name(\"mzcontrol-1\")\n\n\n\nControlData.get_multi_zone_controls() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of all the MultiZone controls.\n\nReturns\n\nReturn all the MultiZone controls ids.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> MultiZoneControls = model.control_data.get_multi_zone_controls()\n\n\n\nControlData.get_part_zonelets(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> List[ansys.meshing.prime.params.primestructs.PartZonelets]\n\nCreates an array of part zonelet structure using the input ScopeDefinition.\n\nParameters\n\nscope (ScopeDefinition) – Input ScopeDefinition.\n\nReturns\n\nReturns a list of PartZonelets.\n\nReturn type\n\nList[PartZonelets]\n\nExamples\n\n>>> results = control_data.get_part_zonelets(scope)\n\n\n\nControlData.get_periodic_control_by_name(name: str) -> ansys.meshing.prime.core.periodiccontrol.PeriodicControl\n\nGet a periodic control by name.\n\nParameters\n\nname (str) – Name of the periodic control.\n\nReturns\n\nPeriodic control.\n\nReturn type\n\nPeriodicControl\n\nExamples\n\n>>> periodic_control = model.control_data.get_periodic_control_by_name(\"PeriodicControl-1\")\n\n\n\nControlData.get_prism_control_by_name(name: str) -> ansys.meshing.prime.core.prismcontrol.PrismControl\n\nGet a prism control by name.\n\nParameters\n\nname (str) – Name of the prism control.\n\nReturns\n\nPrism control.\n\nReturn type\n\nPrismControl\n\nExamples\n\n>>> prism_control = model.control_data.get_prism_control_by_name(\"PrismControl-1\")\n\n\n\nControlData.get_scope_face_zonelets(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition, params: ansys.meshing.prime.params.primestructs.ScopeZoneletParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelet ids for the given scope.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition to evaluate entities.\n\nparams (ScopeZoneletParams) – Parameters to scope zonelets.\n\nReturns\n\nReturn the ids of face zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = model.control_data.get_scope_face_zonelets(\n>>>                 prime.ScopeDefinition(model = model,\n>>>                 entity_type = prime.ScopeEntity.FACEZONELETS,\n>>>                 part_expression = \"*\"),\n>>>                 prime.ScopeZoneletParams(model =model))\n\n\n\nControlData.get_scope_parts(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the part ids for the given scope.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition to evaluate the part ids.\n\nReturns\n\nReturn the ids of parts.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> part_ids = model.control_data.get_scope_parts(\n>>>                 prime.ScopeDefinition(model = model,\n>>>                 part_expression = \"*\"),\n>>>                 prime.ScopeZoneletParams(model =model))\n\n\n\nControlData.get_shell_bl_control_by_name(name: str) -> ansys.meshing.prime.autogen.shellblcontrol.ShellBLControl\n\nGet a shell bl control by name.\n\nParameters\n\nname (str) – Name of the shell bl control.\n\nReturns\n\nShell BL control.\n\nReturn type\n\nShellBLControl\n\nExamples\n\n>>> shell_bl_control = model.control_data.get_shell_bl_control_by_name(\"ShellBLControl-1\")\n\n\n\nControlData.get_size_control_by_name(name: str) -> ansys.meshing.prime.core.sizecontrol.SizeControl\n\nGet a size control by name.\n\nParameters\n\nname (str) – Name of the size control.\n\nReturns\n\nSize control.\n\nReturn type\n\nSizeControl\n\nExamples\n\n>>> size_control = model.control_data.get_size_control_by_name(\"SizeControl-1\")\n\n\n\nControlData.get_thin_volume_control_by_name(name: str) -> ansys.meshing.prime.autogen.thinvolumecontrol.ThinVolumeControl\n\nGet a thin volume control by name.\n\nParameters\n\nname (str) – Name of the thin volume control.\n\nReturns\n\nThin volume control.\n\nReturn type\n\nThinVolumeControl\n\nExamples\n\n>>> contorl_data = model.control_data\n>>> thin_volume_control = control_data.get_thin_volume_control_by_name(\n                                             \"ThinVolumeControl-1\")\n\n\n\nControlData.get_volume_control_by_name(name: str) -> ansys.meshing.prime.core.volumecontrol.VolumeControl\n\nGet a volume control by name.\n\nParameters\n\nname (str) – Name of the volume control.\n\nReturns\n\nVolume control.\n\nReturn type\n\nVolumeControl\n\nExamples\n\n>>> volume_control = model.control_data.get_volume_control_by_name(\"VolumeControl-1\")\n\n\n\nControlData.get_wrapper_control_by_name(name) -> ansys.meshing.prime.core.wrappercontrol.WrapperControl\n\nGet the wrapper control by name.\n\nParameters\n\nname (str) – Name of the wrapper control.\n\nReturns\n\nWrapper control.\n\nReturn type\n\nWrapperControl\n\nExamples\n\n>>> wrapper_control = model.control_data.get_wrapper_control_by_name(\"wrappercontrol-1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenResults.html#componentchildrenresults","title":"ComponentChildrenResults","text":"ComponentChildrenResults\n\n\n\nclass ansys.meshing.prime.ComponentChildrenResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, component_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, component_names: ansys.meshing.prime.params.primestructs.List[str] = None, body_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, body_names: ansys.meshing.prime.params.primestructs.List[str] = None, json_data: dict = None, **kwargs)\n\nResults associated with querying child components.\n\nParameters\n\nmodel (Model) – Model to create a ComponentChildrenResults object with default parameters.\n\ncomponent_ids (Iterable[int], optional) – Ids of components that are queried.This is a beta parameter. The behavior and name may change in the future.\n\ncomponent_names (List[str], optional) – Names of components that are queried.This is a beta parameter. The behavior and name may change in the future.\n\nbody_ids (Iterable[int], optional) – Ids of bodies that are queried.This is a beta parameter. The behavior and name may change in the future.\n\nbody_names (List[str], optional) – Names of bodies that are queried.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ComponentChildrenResults object with provided parameters.\n\nExamples\n\n>>> component_children_results = prime.ComponentChildrenResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenResults.html#overview","title":"ComponentChildrenResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbody_ids\n\nIds of bodies that are queried.\n\nbody_names\n\nNames of bodies that are queried.\n\ncomponent_ids\n\nIds of components that are queried.\n\ncomponent_names\n\nNames of components that are queried.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComponentChildrenResults object.\n\nset_default\n\nSet the default values of the ComponentChildrenResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenResults.html#import-detail","title":"ComponentChildrenResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenResults.html#property-detail","title":"ComponentChildrenResults > Property detail","text":"Property detail\n\n\n\nproperty ComponentChildrenResults.body_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of bodies that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ComponentChildrenResults.body_names: ansys.meshing.prime.params.primestructs.List[str]\n\nNames of bodies that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ComponentChildrenResults.component_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of components that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ComponentChildrenResults.component_names: ansys.meshing.prime.params.primestructs.List[str]\n\nNames of components that are queried.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenResults.html#method-detail","title":"ComponentChildrenResults > Method detail","text":"Method detail\n\n\n\nComponentChildrenResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComponentChildrenResults.__str__() -> str\n\n\n\n\n\nstatic ComponentChildrenResults.print_default()\n\nPrint the default values of ComponentChildrenResults object.\n\nExamples\n\n>>> ComponentChildrenResults.print_default()\n\n\n\nstatic ComponentChildrenResults.set_default(component_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, component_names: ansys.meshing.prime.params.primestructs.List[str] = None, body_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, body_names: ansys.meshing.prime.params.primestructs.List[str] = None)\n\nSet the default values of the ComponentChildrenResults object.\n\nParameters\n\ncomponent_ids (Iterable[int], optional) – Ids of components that are queried.\n\ncomponent_names (List[str], optional) – Names of components that are queried.\n\nbody_ids (Iterable[int], optional) – Ids of bodies that are queried.\n\nbody_names (List[str], optional) – Names of bodies that are queried."},{"objectID":"Home","href":"api/ansys/meshing/prime/FileIO.html#fileio","title":"FileIO","text":"FileIO\n\n\n\nclass ansys.meshing.prime.FileIO(model: ansys.meshing.prime.core.model.Model)\n\nHandles reading or writing files from the disk.\n\nParameters\n\nmodel (Model) – Server model to create FileIO object."},{"objectID":"Home","href":"api/ansys/meshing/prime/FileIO.html#overview","title":"FileIO > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nexport_boundary_fitted_spline_kfile\n\nExport the IGA LS-DYNA keyword file for a boundary fitted spline.\n\nexport_fluent_case\n\nExport a Fluent case (CAS) file.\n\nexport_fluent_meshing_mesh\n\nExport a Fluent Meshing mesh (MSH) file.\n\nexport_lsdyna_iga_keyword_file\n\nExport IGA LS-DYNA Keyword file for solid, surface splines.\n\nexport_lsdyna_keyword_file\n\nExport FEA LS-DYNA Keyword file for solid, surface mesh, or both.\n\nexport_mapdl_cdb\n\nExport an MAPDL CDB file.\n\nexport_stl\n\nExport an STL file.\n\nget_abaqus_simulation_data\n\nGets simulation document generated by Abaqus import for a given part.\n\nimport_abaqus_inp\n\n(BETA FEATURE) Import a Abaqus file.\n\nimport_cad\n\nImport a CAD file from disk.\n\nimport_fluent_case\n\nImport a Fluent case (CAS) file from disk.\n\nimport_fluent_meshing_meshes\n\nImport Fluent Meshing’s mesh (MS and MSH.GZ) files from disk.\n\nimport_fluent_meshing_size_field\n\nImport a Fluent Meshing size field (SF and SF.GZ) file from disk.\n\nimport_mapdl_cdb\n\nImport an MAPDL CDB file.\n\ninitialize_cdb_export_params\n\nInitialize specific CDB export parameters based on the given version.\n\nread_pmdat\n\nRead a PyPrimeMesh data (PMDAT) file.\n\nread_size_field\n\nRead a PyPrimeMesh size field (PSF and PSF.GZ) file from disk.\n\nwrite_pmdat\n\nWrite a PyPrimeMesh data (PMDAT) file.\n\nwrite_size_field\n\nWrite a PyPrimeMesh size field (PSF) file to a file on disk.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for FileIO.\n\n__exit__\n\nExit context for FileIO.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileIO.html#import-detail","title":"FileIO > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileIO.html#attribute-detail","title":"FileIO > Attribute detail","text":"Attribute detail\n\n\n\nFileIO.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FileIO.html#method-detail","title":"FileIO > Method detail","text":"Method detail\n\n\n\nFileIO.__enter__()\n\nEnter context for FileIO.\n\n\n\nFileIO.__exit__(type, value, traceback)\n\nExit context for FileIO.\n\n\n\nFileIO.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFileIO.export_boundary_fitted_spline_kfile(file_name: str, export_params: ansys.meshing.prime.autogen.fileiostructs.ExportBoundaryFittedSplineParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nExport the IGA LS-DYNA keyword file for a boundary fitted spline.\n\nParameters\n\nfile_name (str) – Name of the keyword file.\n\nexport_params (ExportBoundaryFittedSplineParams) – Parameters for exporting the keyword file.\n\nReturns\n\nResults from exporting the keyword file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.export_boundary_fitted_spline_k_file(\n                file_name,\n                ExportBoundaryFittedSplineParams(model=model))\n\n\n\nFileIO.export_fluent_case(file_name: str, export_fluent_case_params: ansys.meshing.prime.autogen.fileiostructs.ExportFluentCaseParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nExport a Fluent case (CAS) file.\n\nParameters\n\nfile_name (str) – Path to the case file on disk.\n\nexport_fluent_case_params (ExportFluentCaseParams) – Parameters for exporting the case file.\n\nReturns\n\nResults from exporting the case file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> file_io = FileIO(model=model)\n>>> results = file_io.export_fluent_case(\n                \"/tmp/fluent.cas\",\n                prime.ExportFluentCaseParams(model=model))\n\n\n\nFileIO.export_fluent_meshing_mesh(file_name: str, export_fluent_mesh_params: ansys.meshing.prime.autogen.fileiostructs.ExportFluentMeshingMeshParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nExport a Fluent Meshing mesh (MSH) file.\n\nParameters\n\nfile_name (str) – Path to the mesh file on disk.\n\nexport_fluent_mesh_params (ExportFluentMeshingMeshParams) – Parameters for exporting the mesh file.\n\nReturns\n\nResults from exporting the mesh file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.export_fluent_meshing_mesh(\n                \"/tmp/fluent_meshing.msh\",\n                ExportFluentMeshingMeshParams(model=model))\n\n\n\nFileIO.export_lsdyna_iga_keyword_file(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaIgaKeywordFileParams) -> ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaIGAResults\n\nExport IGA LS-DYNA Keyword file for solid, surface splines.\n\nParameters\n\nfile_name (str) – Name of the file.\n\nparams (ExportLSDynaIgaKeywordFileParams) – Parameters for IGA LS-DYNA Keyword file export.\n\nReturns\n\nReturns ExportLSDynaIGAResults.\n\nReturn type\n\nExportLSDynaIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.export_lsdyna_iga_keyword_file(\n    file_name, ExportLSDynaIgaKeywordFileParams(model=model)\n)\n\n\n\nFileIO.export_lsdyna_keyword_file(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaKeywordFileParams) -> ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaResults\n\nExport FEA LS-DYNA Keyword file for solid, surface mesh, or both.\n\nParameters\n\nfile_name (str) – Name of the file.\n\nparams (ExportLSDynaKeywordFileParams) – Parameters for FEA LS-DYNA Keyword file export.\n\nReturns\n\nReturns ExportLSDynaResults.\n\nReturn type\n\nExportLSDynaResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = file_io.export_lsdyna_keyword_file(\n    file_name, ExportLSDynaKeywordFileParams(model=model)\n)\n\n\n\nFileIO.export_mapdl_cdb(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbParams) -> ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbResults\n\nExport an MAPDL CDB file.\n\nParameters\n\nfile_name (str) – Path to the CDB file on disk.\n\nparams (ExportMapdlCdbParams) – Parameters for exporting the CDB file.\n\nReturns\n\nResults from exporting the CDB file.\n\nReturn type\n\nExportMapdlCdbResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams(model=model)\n>>> results = file_io.export_mapdl_cdb(\"/tmp/file.cdb\", params)\n\n\n\nFileIO.export_stl(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ExportSTLParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nExport an STL file.\n\nParameters\n\nfile_name (str) – Path to the STL file on disk.\n\nparams (ExportSTLParams) – Parameters for exporting the STL file.\n\nReturns\n\nResults from exporting the STL file.\n\nReturn type\n\nFileWriteResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> model = prime.launch_prime().model\n>>> fileio = prime.FileIO(model=model)\n>>> out_file_path = r\"/tmp/output.stl\"\n>>> part_ids = [part.id for part in model.parts]\n>>> export_stl_params=prime.ExportSTLParams(model=model,part_ids=part_ids)\n>>> results = fileio.export_stl(out_file_path,export_stl_params)\n\n\n\nFileIO.get_abaqus_simulation_data(partId: int) -> str\n\nGets simulation document generated by Abaqus import for a given part.\n\nThis method will return the JSON Simulation Document for a part if the part exists. Otherwise,\nit returns an empty string.\n\nParameters\n\npartId (int) – Part Id.\n\nReturns\n\nReturns the string containing a JSON document for simulation data.\n\nReturn type\n\nstr\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> import json\n>>> simdata = json.loads(file_io.get_abaqus_simulation_data(2)\n\n\n\nFileIO.import_abaqus_inp(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ImportAbaqusParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportAbaqusResults\n\n(BETA FEATURE) Import a Abaqus file.\n\nThis is a beta feature to import abaqus files as dead mesh and also store\nsimulation-specific information into Prime in the form of JSON documents.\n\nParameters\n\nfile_name (str) – Name of file to import.\n\nparams (ImportAbaqusParams) – Parameters to specify options during import.\n\nReturns\n\nReturns the results of the abaqus database import.\n\nReturn type\n\nImportAbaqusResults\n\nExamples\n\n>>> results = file_io.import_abaqus(r\"/tmp/file.inp\")\n\n\n\nFileIO.import_cad(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ImportCadParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportCadResults\n\nImport a CAD file from disk.\n\nSupported CAD file formats on Windows are:\n\n*.scdoc *.scdocx *.dsco *.fmd *.agdb *.pmdb *.meshdat *.mechdat *.dsdb *.cmdb\n*.sat *.sab *.dwg *.dxf *.model *.exp *.CATPart *.CATProduct *.cgr *.3dxml\n*.prt* *.asm* *.iges *.igs *.ipt *.iam *.jt *.prt *.x_t *.x_b *.par *.psm\n*.asm *.sldprt *.sldasm *.step *.stp *.stl *.plmxml *.tgf\n\nSupported CAD file formats on Linux are:\n\n*.fmd *.agdb *.pmdb *.meshdat *.mechdat *.dsdb *.cmdb *.sat *.sab\n*.CATPart *.CATProduct *.iges *.igs *.jt *.x_t *.x_b *.step *.stp\n*.stl *.plmxml *.tgf\n\nRefer Reading and writing files section in User guide for a\ncomprehensive list of supported formats.\n\nParameters\n\nfile_name (str) – Path to the CAD file on disk.\n\nparams (ImportCadParams) – Parameters for importing the CAD file.\n\nReturns\n\nResults from importing the CAD file.\n\nReturn type\n\nImportCadResults\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> prime_client = prime.launch_prime()\n>>> model = prime_client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportCadParams(model=model)\n>>> results = file_io.import_cad(\"/tmp/my_cad.x_t\", params=params)\n\n\n\nFileIO.import_fluent_case(file_name: str, import_fluent_case_params: ansys.meshing.prime.autogen.fileiostructs.ImportFluentCaseParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportFluentCaseResults\n\nImport a Fluent case (CAS) file from disk.\n\nParameters\n\nfile_name (str) – Path to the case file on disk.\n\nimport_fluent_case_params (ImportFluentCaseParams) – Parameters for importing the case file.\n\nReturns\n\nResults from importing the case file.\n\nReturn type\n\nImportFluentCaseResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportFluentCaseParams(model=model)\n>>> results = file_io.import_fluent_case(\"/tmp/fluent.cas\", params)\n\n\n\nFileIO.import_fluent_meshing_meshes(file_names: List[str], import_fluent_meshing_mesh_params: ansys.meshing.prime.autogen.fileiostructs.ImportFluentMeshingMeshParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportFluentMeshingMeshResults\n\nImport Fluent Meshing’s mesh (MS and MSH.GZ) files from disk.\n\nParameters\n\nfile_names (List[str]) – List of full path for the mesh files to import.\n\nimport_fluent_meshing_mesh_params (ImportFluentMeshingMeshParams) – Parameters for importing the mesh files.\n\nReturns\n\nResults from importing the mesh files.\n\nReturn type\n\nImportFluentMeshingMeshResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportFluentMeshingMeshParams(model=model)\n>>> results = file_io.import_fluent_meshing_meshes(\n                [\"/tmp/mesh.msh\", \"/tmp/mesh1.msh\"],\n                params)\n\n\n\nFileIO.import_fluent_meshing_size_field(file_name: str) -> ansys.meshing.prime.autogen.fileiostructs.SizeFieldFileReadResults\n\nImport a Fluent Meshing size field (SF and SF.GZ) file from disk.\n\nParameters\n\nfile_name (str) – Path to the size field file on disk.\n\nReturns\n\nResults from reading the size field file.\n\nReturn type\n\nSizeFieldFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> results = file_io.import_fluent_meshing_size_field(\"/tmp/my_sizefield.sf\")\n\n\n\nFileIO.import_mapdl_cdb(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ImportMapdlCdbParams) -> ansys.meshing.prime.autogen.fileiostructs.ImportMapdlCdbResults\n\nImport an MAPDL CDB file.\n\nParameters\n\nfile_name (str) – Path to the CDB file on disk.\n\nparams (ImportMapdlCdbParams) – Parameters for importing the CDB file.\n\nReturns\n\nResults from importing the CDB file.\n\nReturn type\n\nImportMapdlCdbResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> # connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ImportMapdlCdbParams(model=model)\n>>> results = file_io.import_mapdl_cdb(\"/tmp/file.cdb\", params)\n\n\n\nFileIO.initialize_cdb_export_params(params: ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbParams, major_version: int, minor_version: int) -> ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbParams\n\nInitialize specific CDB export parameters based on the given version.\n\nThis function sets the separate_blocks_format_type, export_fasteners_as_swgen and\nexport_rigid_bodies_as_rbgen parameters of the provided ExportMapdlCdbParams\nobject based on the given major and minor version numbers.\nOther parameters remain unchanged.\n\nParameters\n\nparams (ExportMapdlCdbParams) – The CDB export parameters object to be modified.\n\nmajor_version (int) – The major version number.\n\nminor_version (int) – The minor version number.\n\nReturns\n\nThe modified CDB export parameters object.\n\nReturn type\n\nExportMapdlCdbParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nThe version is formed as “<major_version>r<minor_version>”, e.g., “24r1”, “25r2”.\nIf the version is greater than or equal to “25r1”, write_separate_blocks is set to True\nwith COMPACT format, and export_fasteners_as_swgen and export_rigid_bodies_as_rbgen\nparameters are set to True. Otherwise, they are set to False.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams()\n>>> params = file_io.initialize_cdb_export_params(params, 24, 1)\n>>> params.write_separate_blocks\nFalse\n>>> params.export_fasteners_as_swgen\nFalse\n>>> params.export_rigid_bodies_as_swgen\nFalse\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ExportMapdlCdbParams()\n>>> params = file_io.initialize_cdb_export_params(params, 25, 2)\n>>> params.write_separate_blocks\nTrue\n>>> params.separate_blocks_format_type\nSeparateBlocksFormatType.COMPACT\n>>> params.export_fasteners_as_swgen\nTrue\n>>> params.export_rigid_bodies_as_swgen\nTrue\n\n\n\nFileIO.read_pmdat(file_name: str, file_read_params: ansys.meshing.prime.autogen.fileiostructs.FileReadParams) -> ansys.meshing.prime.autogen.fileiostructs.FileReadResults\n\nRead a PyPrimeMesh data (PMDAT) file.\n\nParameters\n\nfile_name (str) – Path to the data file on disk.\n\nfile_read_params (FileReadParams) – Parameters for reading the data file.\n\nReturns\n\nResults from reading the data file.\n\nReturn type\n\nFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> #connect client to server and get model from it\n>>> client = prime.Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> file_io = prime.FileIO(model=model)\n>>> file_read_params = prime.FileReadParams(model=model)\n>>> results = file_io.read_pmdat(\"/tmp/file.pmdat\", file_read_params)\n\n\n\nFileIO.read_size_field(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.ReadSizeFieldParams) -> ansys.meshing.prime.autogen.fileiostructs.SizeFieldFileReadResults\n\nRead a PyPrimeMesh size field (PSF and PSF.GZ) file from disk.\n\nParameters\n\nfile_name (str) – Path to the size field file on disk.\n\nparams (ReadSizeFieldParams) – Parameters for reading size field file.\n\nReturns\n\nResults from reading the size field file.\n\nReturn type\n\nSizeFieldFileReadResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.ReadSizeFieldParams(model=model)\n>>> results = file_io.read_size_field(\"/tmp/my_prime_sizefield.psf\", params)\n\n\n\nFileIO.write_pmdat(file_name: str, file_write_params: ansys.meshing.prime.autogen.fileiostructs.FileWriteParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nWrite a PyPrimeMesh data (PMDAT) file.\n\nParameters\n\nfile_name (str) – Path for writing the data file on disk.\n\nfile_write_params (FileWriteParams) – Parameters for writing the data file.\n\nReturns\n\nResults from writing the data file.\n\nReturn type\n\nFileWriteResults\n\nExamples\n\n>>> results = file_io.write_pmdat(\"/tmp/prime_mesh_data.pmdat\",\n                                  prime.FileWriteParams(model=model))\n\n\n\nFileIO.write_size_field(file_name: str, params: ansys.meshing.prime.autogen.fileiostructs.WriteSizeFieldParams) -> ansys.meshing.prime.autogen.fileiostructs.FileWriteResults\n\nWrite a PyPrimeMesh size field (PSF) file to a file on disk.\n\nParameters\n\nfile_name (str) – Path to the size field file on disk.\n\nparams (WriteSizeFieldParams) – Parameters for writing the size field file.\n\nReturns\n\nResults from writing the size field file.\n\nReturn type\n\nFileWriteResults\n\nNotes\n\nThis method does not support Unicode paths.\n\nExamples\n\n>>> file_io = prime.FileIO(model=model)\n>>> params = prime.WriteSizeFieldParams(model=model)\n>>> results = file_io.write_size_field(\"/tmp/my_prime_sizefield.psf\", params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderRepairMode.html#scaffolderrepairmode","title":"ScaffolderRepairMode","text":"ScaffolderRepairMode\n\n\n\nclass ansys.meshing.prime.ScaffolderRepairMode\n\nMode of Scaffolder repair to be used."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderRepairMode.html#overview","title":"ScaffolderRepairMode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCONSERVATIVE\n\nRepairs edges without considering the distance tolerance parameter.\n\nDEFAULT\n\nRepairs edges using the distance tolerance parameter."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderRepairMode.html#import-detail","title":"ScaffolderRepairMode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderRepairMode.html#attribute-detail","title":"ScaffolderRepairMode > Attribute detail","text":"Attribute detail\n\n\n\nScaffolderRepairMode.CONSERVATIVE = 1\n\nRepairs edges without considering the distance tolerance parameter.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nScaffolderRepairMode.DEFAULT = 0\n\nRepairs edges using the distance tolerance parameter.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceMeshSizeScaling.html#surfacemeshsizescaling","title":"SurfaceMeshSizeScaling","text":"SurfaceMeshSizeScaling\n\n\n\nclass ansys.meshing.prime.SurfaceMeshSizeScaling(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, factor: float = None, size_range_min: float = None, size_range_max: float = None, json_data: dict = None, **kwargs)\n\nSettings related to scaling of surface mesh size for hexcore refinement.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceMeshSizeScaling object with default parameters.\n\nfactor (float, optional) – Value by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_min (float, optional) – Minimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_max (float, optional) – Maximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceMeshSizeScaling object with provided parameters.\n\nExamples\n\n>>> surface_mesh_size_scaling = prime.SurfaceMeshSizeScaling(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceMeshSizeScaling.html#overview","title":"SurfaceMeshSizeScaling > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nfactor\n\nValue by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_max\n\nMaximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_min\n\nMinimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceMeshSizeScaling object.\n\nset_default\n\nSet the default values of the SurfaceMeshSizeScaling object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceMeshSizeScaling.html#import-detail","title":"SurfaceMeshSizeScaling > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceMeshSizeScaling.html#property-detail","title":"SurfaceMeshSizeScaling > Property detail","text":"Property detail\n\n\n\nproperty SurfaceMeshSizeScaling.factor: float\n\nValue by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\n\n\nproperty SurfaceMeshSizeScaling.size_range_max: float\n\nMaximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\n\n\nproperty SurfaceMeshSizeScaling.size_range_min: float\n\nMinimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceMeshSizeScaling.html#method-detail","title":"SurfaceMeshSizeScaling > Method detail","text":"Method detail\n\n\n\nSurfaceMeshSizeScaling.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceMeshSizeScaling.__str__() -> str\n\n\n\n\n\nstatic SurfaceMeshSizeScaling.print_default()\n\nPrint the default values of SurfaceMeshSizeScaling object.\n\nExamples\n\n>>> SurfaceMeshSizeScaling.print_default()\n\n\n\nstatic SurfaceMeshSizeScaling.set_default(factor: float = None, size_range_min: float = None, size_range_max: float = None)\n\nSet the default values of the SurfaceMeshSizeScaling object.\n\nParameters\n\nfactor (float, optional) – Value by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_min (float, optional) – Minimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_max (float, optional) – Maximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure."},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsResults.html#cellstatisticsresults","title":"CellStatisticsResults","text":"CellStatisticsResults\n\n\n\nclass ansys.meshing.prime.CellStatisticsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, volume: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults of cell statistics information.\n\nParameters\n\nmodel (Model) – Model to create a CellStatisticsResults object with default parameters.\n\nvolume (float, optional) – Cumulative volume of all the cell elements of selected entities.\n\nerror_code (ErrorCode, optional) – Error code associated with the cell statistics function.\n\njson_data (dict, optional) – JSON dictionary to create a CellStatisticsResults object with provided parameters.\n\nExamples\n\n>>> cell_statistics_results = prime.CellStatisticsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsResults.html#overview","title":"CellStatisticsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the cell statistics function.\n\nvolume\n\nCumulative volume of all the cell elements of selected entities.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CellStatisticsResults object.\n\nset_default\n\nSet the default values of the CellStatisticsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsResults.html#import-detail","title":"CellStatisticsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsResults.html#property-detail","title":"CellStatisticsResults > Property detail","text":"Property detail\n\n\n\nproperty CellStatisticsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the cell statistics function.\n\n\n\nproperty CellStatisticsResults.volume: float\n\nCumulative volume of all the cell elements of selected entities."},{"objectID":"Home","href":"api/ansys/meshing/prime/CellStatisticsResults.html#method-detail","title":"CellStatisticsResults > Method detail","text":"Method detail\n\n\n\nCellStatisticsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCellStatisticsResults.__str__() -> str\n\n\n\n\n\nstatic CellStatisticsResults.print_default()\n\nPrint the default values of CellStatisticsResults object.\n\nExamples\n\n>>> CellStatisticsResults.print_default()\n\n\n\nstatic CellStatisticsResults.set_default(volume: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the CellStatisticsResults object.\n\nParameters\n\nvolume (float, optional) – Cumulative volume of all the cell elements of selected entities.\n\nerror_code (ErrorCode, optional) – Error code associated with the cell statistics function."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusResults.html#importabaqusresults","title":"ImportAbaqusResults","text":"ImportAbaqusResults\n\n\n\nclass ansys.meshing.prime.ImportAbaqusResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, summary_log: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults of Abaqus import operation.\n\nParameters\n\nmodel (Model) – Model to create a ImportAbaqusResults object with default parameters.\n\nsummary_log (str, optional) – Summary log for the import operation in json format.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with Abaqus import operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ImportAbaqusResults object with provided parameters.\n\nExamples\n\n>>> import_abaqus_results = prime.ImportAbaqusResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusResults.html#overview","title":"ImportAbaqusResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nsummary_log\n\nSummary log for the import operation in json format.\n\nwarning_codes\n\nWarning codes associated with Abaqus import operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportAbaqusResults object.\n\nset_default\n\nSet the default values of the ImportAbaqusResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusResults.html#import-detail","title":"ImportAbaqusResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusResults.html#property-detail","title":"ImportAbaqusResults > Property detail","text":"Property detail\n\n\n\nproperty ImportAbaqusResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty ImportAbaqusResults.summary_log: str\n\nSummary log for the import operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ImportAbaqusResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with Abaqus import operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportAbaqusResults.html#method-detail","title":"ImportAbaqusResults > Method detail","text":"Method detail\n\n\n\nImportAbaqusResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportAbaqusResults.__str__() -> str\n\n\n\n\n\nstatic ImportAbaqusResults.print_default()\n\nPrint the default values of ImportAbaqusResults object.\n\nExamples\n\n>>> ImportAbaqusResults.print_default()\n\n\n\nstatic ImportAbaqusResults.set_default(summary_log: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ImportAbaqusResults object.\n\nParameters\n\nsummary_log (str, optional) – Summary log for the import operation in json format.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with Abaqus import operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshParams.html#deletemeshparams","title":"DeleteMeshParams","text":"DeleteMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.topodatastructs.DeleteMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, delete_mesh_on_connected_topo_edges: bool = None, json_data: dict = None, **kwargs)\n\nParameters to delete mesh on topoentities.\n\nParameters\n\nmodel (Model) – Model to create a DeleteMeshParams object with default parameters.\n\ndelete_mesh_on_connected_topo_edges (bool, optional) – Option to delete mesh on topoedges connected only to provided topoentities.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteMeshParams object with provided parameters.\n\nExamples\n\n>>> delete_mesh_params = prime.DeleteMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshParams.html#overview","title":"DeleteMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_mesh_on_connected_topo_edges\n\nOption to delete mesh on topoedges connected only to provided topoentities.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteMeshParams object.\n\nset_default\n\nSet the default values of the DeleteMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshParams.html#import-detail","title":"DeleteMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshParams.html#property-detail","title":"DeleteMeshParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteMeshParams.delete_mesh_on_connected_topo_edges: bool\n\nOption to delete mesh on topoedges connected only to provided topoentities.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/DeleteMeshParams.html#method-detail","title":"DeleteMeshParams > Method detail","text":"Method detail\n\n\n\nDeleteMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteMeshParams.__str__() -> str\n\n\n\n\n\nstatic DeleteMeshParams.print_default()\n\nPrint the default values of DeleteMeshParams object.\n\nExamples\n\n>>> DeleteMeshParams.print_default()\n\n\n\nstatic DeleteMeshParams.set_default(delete_mesh_on_connected_topo_edges: bool = None)\n\nSet the default values of the DeleteMeshParams object.\n\nParameters\n\ndelete_mesh_on_connected_topo_edges (bool, optional) – Option to delete mesh on topoedges connected only to provided topoentities."},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationResults.html#checkfacedeviationresults","title":"CheckFaceDeviationResults","text":"CheckFaceDeviationResults\n\n\n\nclass ansys.meshing.prime.CheckFaceDeviationResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_deviated: int = None, maximum_deviation: float = None, json_data: dict = None, **kwargs)\n\nResult structure associated with the check face deviation operations.\n\nParameters\n\nmodel (Model) – Model to create a CheckFaceDeviationResults object with default parameters.\n\nn_deviated (int, optional) – Number of faces with deviation.\n\nmaximum_deviation (float, optional) – Maximum deviation found.\n\njson_data (dict, optional) – JSON dictionary to create a CheckFaceDeviationResults object with provided parameters.\n\nExamples\n\n>>> check_face_deviation_results = prime.CheckFaceDeviationResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationResults.html#overview","title":"CheckFaceDeviationResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmaximum_deviation\n\nMaximum deviation found.\n\nn_deviated\n\nNumber of faces with deviation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CheckFaceDeviationResults object.\n\nset_default\n\nSet the default values of the CheckFaceDeviationResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationResults.html#import-detail","title":"CheckFaceDeviationResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationResults.html#property-detail","title":"CheckFaceDeviationResults > Property detail","text":"Property detail\n\n\n\nproperty CheckFaceDeviationResults.maximum_deviation: float\n\nMaximum deviation found.\n\n\n\nproperty CheckFaceDeviationResults.n_deviated: int\n\nNumber of faces with deviation."},{"objectID":"Home","href":"api/ansys/meshing/prime/CheckFaceDeviationResults.html#method-detail","title":"CheckFaceDeviationResults > Method detail","text":"Method detail\n\n\n\nCheckFaceDeviationResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCheckFaceDeviationResults.__str__() -> str\n\n\n\n\n\nstatic CheckFaceDeviationResults.print_default()\n\nPrint the default values of CheckFaceDeviationResults object.\n\nExamples\n\n>>> CheckFaceDeviationResults.print_default()\n\n\n\nstatic CheckFaceDeviationResults.set_default(n_deviated: int = None, maximum_deviation: float = None)\n\nSet the default values of the CheckFaceDeviationResults object.\n\nParameters\n\nn_deviated (int, optional) – Number of faces with deviation.\n\nmaximum_deviation (float, optional) – Maximum deviation found."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrolstructs/index.html#the-volumecontrolstructspy-module","title":"The volumecontrolstructs.py module","text":"The volumecontrolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrolstructs/index.html#summary","title":"The volumecontrolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVolumeControlParams\n\nVolume control parameters are used to define the volume type in the volume control.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrolstructs/index.html#description","title":"The volumecontrolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfo/MeshInfo.html#meshinfo","title":"MeshInfo","text":"MeshInfo\n\n\n\nclass ansys.meshing.prime.autogen.meshinfo.MeshInfo(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nMeshInfo provides information about the mesh connectivity and more.\n\nMesh connectivity information is used in graphics rendering.\n\nParameters\n\nmodel (Model) – Server model to create MeshInfo object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfo/MeshInfo.html#overview","title":"MeshInfo > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_face_and_edge_connectivity\n\nGets the connectivity of face and edge zonelets of the given part ids.\n\nget_statistics_of_cell_zonelets\n\nGets cell statistics of given cell zonelets using provided cell statistics parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for MeshInfo.\n\n__exit__\n\nExit context for MeshInfo.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfo/MeshInfo.html#import-detail","title":"MeshInfo > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfo/MeshInfo.html#method-detail","title":"MeshInfo > Method detail","text":"Method detail\n\n\n\nMeshInfo.__enter__()\n\nEnter context for MeshInfo.\n\n\n\nMeshInfo.__exit__(type, value, traceback)\n\nExit context for MeshInfo.\n\n\n\nMeshInfo.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMeshInfo.get_face_and_edge_connectivity(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.FaceAndEdgeConnectivityParams) -> ansys.meshing.prime.params.primestructs.FaceAndEdgeConnectivityResults\n\nGets the connectivity of face and edge zonelets of the given part ids.\n\nConnectivity result is used in graphics rendering.\n\nParameters\n\npart_ids (Iterable[int]) – Ids of the part.\n\nparams (FaceAndEdgeConnectivityParams) – Parameters to get connectivity of face zonelets and edge zonelets.\n\nReturns\n\nReturns the FaceAndEdgeConnectivityResults.\n\nReturn type\n\nFaceAndEdgeConnectivityResults\n\nExamples\n\n>>> mesh_info = prime.MeshInfo(model)\n>>> part_ids = [part.id for part in model.parts]\n>>> result = mesh_info.get_face_and_edge_connectivity(part_ids,\n>>>                  prime.FaceAndEdgeConnectivityParams(model =model))\n\n\n\nMeshInfo.get_statistics_of_cell_zonelets(cell_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CellStatisticsParams) -> ansys.meshing.prime.params.primestructs.CellStatisticsResults\n\nGets cell statistics of given cell zonelets using provided cell statistics parameters.\n\nParameters\n\ncell_zonelets (Iterable[int]) – Ids of cell zonelets for which statistics are calculated.\n\nparams (CellStatisticsParams) – Parameters to get cells statistics.\n\nReturns\n\nReturns the CellStatisticsResults.\n\nReturn type\n\nCellStatisticsResults\n\nExamples\n\n>>> mesh_info = prime.MeshInfo(model)\n>>> part = model.get_part_by_name(\"part_name\")\n>>> result = mesh_info.get_statistics_of_cell_zonelets(part.get_cell_zonelets(),\n>>>                  prime.CellStatisticsParams(model=model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesParams.html#extractvolumesparams","title":"ExtractVolumesParams","text":"ExtractVolumesParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ExtractVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, create_zone: bool = None, suggested_zone_name: str = None, json_data: dict = None, **kwargs)\n\nParameters to extract flow volumes.\n\nParameters\n\nmodel (Model) – Model to create a ExtractVolumesParams object with default parameters.\n\ncreate_zone (bool, optional) – Option to create zone for flow volumes extracted.\n\nsuggested_zone_name (str, optional) – Name suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractVolumesParams object with provided parameters.\n\nExamples\n\n>>> extract_volumes_params = prime.ExtractVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesParams.html#overview","title":"ExtractVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreate_zone\n\nOption to create zone for flow volumes extracted.\n\nsuggested_zone_name\n\nName suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractVolumesParams object.\n\nset_default\n\nSet the default values of the ExtractVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesParams.html#import-detail","title":"ExtractVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesParams.html#property-detail","title":"ExtractVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty ExtractVolumesParams.create_zone: bool\n\nOption to create zone for flow volumes extracted.\n\n\n\nproperty ExtractVolumesParams.suggested_zone_name: str\n\nName suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractVolumesParams.html#method-detail","title":"ExtractVolumesParams > Method detail","text":"Method detail\n\n\n\nExtractVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractVolumesParams.__str__() -> str\n\n\n\n\n\nstatic ExtractVolumesParams.print_default()\n\nPrint the default values of ExtractVolumesParams object.\n\nExamples\n\n>>> ExtractVolumesParams.print_default()\n\n\n\nstatic ExtractVolumesParams.set_default(create_zone: bool = None, suggested_zone_name: str = None)\n\nSet the default values of the ExtractVolumesParams object.\n\nParameters\n\ncreate_zone (bool, optional) – Option to create zone for flow volumes extracted.\n\nsuggested_zone_name (str, optional) – Name suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingParams.html#cadrefacetingparams","title":"CadRefacetingParams","text":"CadRefacetingParams\n\n\n\nclass ansys.meshing.prime.CadRefacetingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cad_faceter: CadFaceter = None, faceting_resolution: CadRefacetingResolution = None, custom_surface_deviation_tolerance: float = None, custom_normal_angle_tolerance: float = None, max_edge_size_limit: CadRefacetingMaxEdgeSizeLimit = None, max_edge_size: float = None, json_data: dict = None, **kwargs)\n\nParameters to refacet CAD during import.\n\nParameters\n\nmodel (Model) – Model to create a CadRefacetingParams object with default parameters.\n\ncad_faceter (CadFaceter, optional) – Specify the available choices for faceter. The available option is Parasolid. (Note: ACIS faceter is being deprecated from 25R1).\n\nfaceting_resolution (CadRefacetingResolution, optional) – Set the faceting resolution.\n\ncustom_surface_deviation_tolerance (float, optional) – Set custom tolerance for surface deviation in specified length unit.\n\ncustom_normal_angle_tolerance (float, optional) – Set custom tolerance for normal angle in degree.\n\nmax_edge_size_limit (CadRefacetingMaxEdgeSizeLimit, optional) – Specify maximum edge size limit for faceting.\n\nmax_edge_size (float, optional) – Set maximum edge size of the facets.\n\njson_data (dict, optional) – JSON dictionary to create a CadRefacetingParams object with provided parameters.\n\nExamples\n\n>>> cad_refaceting_params = prime.CadRefacetingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingParams.html#overview","title":"CadRefacetingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncad_faceter\n\nACIS faceter is being deprecated from 25R1).\n\ncustom_normal_angle_tolerance\n\nSet custom tolerance for normal angle in degree.\n\ncustom_surface_deviation_tolerance\n\nSet custom tolerance for surface deviation in specified length unit.\n\nfaceting_resolution\n\nSet the faceting resolution.\n\nmax_edge_size\n\nSet maximum edge size of the facets.\n\nmax_edge_size_limit\n\nSpecify maximum edge size limit for faceting.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CadRefacetingParams object.\n\nset_default\n\nSet the default values of the CadRefacetingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingParams.html#import-detail","title":"CadRefacetingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingParams.html#property-detail","title":"CadRefacetingParams > Property detail","text":"Property detail\n\n\n\nproperty CadRefacetingParams.cad_faceter: CadFaceter\n\nACIS faceter is being deprecated from 25R1).\n\nType\n\nSpecify the available choices for faceter. The available option is Parasolid. (Note\n\n\n\nproperty CadRefacetingParams.custom_normal_angle_tolerance: float\n\nSet custom tolerance for normal angle in degree.\n\n\n\nproperty CadRefacetingParams.custom_surface_deviation_tolerance: float\n\nSet custom tolerance for surface deviation in specified length unit.\n\n\n\nproperty CadRefacetingParams.faceting_resolution: CadRefacetingResolution\n\nSet the faceting resolution.\n\n\n\nproperty CadRefacetingParams.max_edge_size: float\n\nSet maximum edge size of the facets.\n\n\n\nproperty CadRefacetingParams.max_edge_size_limit: CadRefacetingMaxEdgeSizeLimit\n\nSpecify maximum edge size limit for faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingParams.html#method-detail","title":"CadRefacetingParams > Method detail","text":"Method detail\n\n\n\nCadRefacetingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCadRefacetingParams.__str__() -> str\n\n\n\n\n\nstatic CadRefacetingParams.print_default()\n\nPrint the default values of CadRefacetingParams object.\n\nExamples\n\n>>> CadRefacetingParams.print_default()\n\n\n\nstatic CadRefacetingParams.set_default(cad_faceter: CadFaceter = None, faceting_resolution: CadRefacetingResolution = None, custom_surface_deviation_tolerance: float = None, custom_normal_angle_tolerance: float = None, max_edge_size_limit: CadRefacetingMaxEdgeSizeLimit = None, max_edge_size: float = None)\n\nSet the default values of the CadRefacetingParams object.\n\nParameters\n\ncad_faceter (CadFaceter, optional) – Specify the available choices for faceter. The available option is Parasolid. (Note: ACIS faceter is being deprecated from 25R1).\n\nfaceting_resolution (CadRefacetingResolution, optional) – Set the faceting resolution.\n\ncustom_surface_deviation_tolerance (float, optional) – Set custom tolerance for surface deviation in specified length unit.\n\ncustom_normal_angle_tolerance (float, optional) – Set custom tolerance for normal angle in degree.\n\nmax_edge_size_limit (CadRefacetingMaxEdgeSizeLimit, optional) – Specify maximum edge size limit for faceting.\n\nmax_edge_size (float, optional) – Set maximum edge size of the facets."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteResults.html#deleteresults","title":"DeleteResults","text":"DeleteResults\n\n\n\nclass ansys.meshing.prime.DeleteResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the deletion of items.\n\nParameters\n\nmodel (Model) – Model to create a DeleteResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteResults object with provided parameters.\n\nExamples\n\n>>> delete_results = prime.DeleteResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteResults.html#overview","title":"DeleteResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteResults object.\n\nset_default\n\nSet the default values of the DeleteResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteResults.html#import-detail","title":"DeleteResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteResults.html#property-detail","title":"DeleteResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteResults.html#method-detail","title":"DeleteResults > Method detail","text":"Method detail\n\n\n\nDeleteResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteResults.__str__() -> str\n\n\n\n\n\nstatic DeleteResults.print_default()\n\nPrint the default values of DeleteResults object.\n\nExamples\n\n>>> DeleteResults.print_default()\n\n\n\nstatic DeleteResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfaceutilities/SurfaceUtilities.html#surfaceutilities","title":"SurfaceUtilities","text":"SurfaceUtilities\n\n\n\nclass ansys.meshing.prime.core.surfaceutilities.SurfaceUtilities(model: ansys.meshing.prime.core.model.Model)\n\nPerforms various general surface utilities algorithms.\n\nFor example, copy zonelets, resolve surface intersections.\n\nParameters\n\nmodel (Model) – Server model to create SurfaceUtilities object."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfaceutilities/SurfaceUtilities.html#overview","title":"SurfaceUtilities > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_thickness\n\nAdd thicknesss to input face zonelets.\n\ncopy_face_zonelets\n\nCopy face zonelets.\n\ncreate_boi\n\nCreate BOI to input face zonelets.\n\ncreate_cap_on_face_zonelets\n\nCreate caps on the given face zonelets.\n\ncreate_contact_patch\n\nCreate a contact patch by offsetting the target zonelets.\n\ndelete_unwetted_surfaces\n\nDelete unwetted surfaces based on material point list.\n\nfill_holes_at_plane\n\nFill holes in given face zonelets at given plane.\n\nfix_invalid_normal_nodes_of_face_zonelets\n\nCreate nuggets to fix invalid normal at nodes of the given face zonelets.\n\nget_bounding_box_of_zonelets\n\nGet bounding box of given zonelets.\n\nproject_topo_faces_on_geometry\n\nProject nodes of given topofaces on geometry associated to those topofaces.\n\nrefine_at_contacts\n\nRefine face elements in contact with other parts.\n\nresolve_intersections\n\nResolve facezonelets intersections.\n\nsmooth_dihedral_face_nodes\n\nPerform a smoothing operation to eliminate sharp corners at locations where the input face zonelets intersect.\n\nstretch_free_boundaries\n\nStretch free boundaries of each zonelet.\n\ntriangulate_face_zonelets\n\nSplit faces in zonelets to get triangular faces.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for SurfaceUtilities.\n\n__exit__\n\nExit context for SurfaceUtilities.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfaceutilities/SurfaceUtilities.html#import-detail","title":"SurfaceUtilities > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/surfaceutilities/SurfaceUtilities.html#method-detail","title":"SurfaceUtilities > Method detail","text":"Method detail\n\n\n\nSurfaceUtilities.__enter__()\n\nEnter context for SurfaceUtilities.\n\n\n\nSurfaceUtilities.__exit__(type, value, traceback)\n\nExit context for SurfaceUtilities.\n\n\n\nSurfaceUtilities.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceUtilities.add_thickness(zonelets: Iterable[int], params: ansys.meshing.prime.autogen.surfaceutilitystructs.AddThicknessParams) -> ansys.meshing.prime.autogen.surfaceutilitystructs.AddThicknessResults\n\nAdd thicknesss to input face zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – List of input face zonelet IDs.\n\nparams (AddThicknessParams) – Parameters for controlling the addition of thickness.\n\nReturns\n\nResults for adding thickness.\n\nReturn type\n\nAddThicknessResults\n\nExamples\n\n>>> result = surf_utils.add_thickness(zonelets, params)\n\n\n\nSurfaceUtilities.copy_face_zonelets(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], target_part_id: int, params: ansys.meshing.prime.params.primestructs.CopyZoneletsParams) -> ansys.meshing.prime.params.primestructs.CopyZoneletsResults\n\nCopy face zonelets.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be copied.\n\ntarget_part_id (int) – Part id to be used to move the copied zonelets.\n\nparams (CopyZoneletsParams) – Parameters to copy face zonelets.\n\nReturns\n\nReturns the CopyZoneletsResults.\n\nReturn type\n\nCopyZoneletsResults\n\nExamples\n\n>>>> surfaceutil = SurfaceUtilities(model = model)\n>>>> surfaceutil = surfaceutil.copy_face_zonelets(face_zonelets, target_part_id = new_part.id, prime.CopyZoneletsParams(model = model))\n\n\n\nSurfaceUtilities.create_boi(face_zonelet_ids: Iterable[int], params: ansys.meshing.prime.autogen.surfaceutilitystructs.CreateBOIParams) -> ansys.meshing.prime.autogen.surfaceutilitystructs.CreateBOIResults\n\nCreate BOI to input face zonelets.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – List of input face zonelet IDs.\n\nparams (CreateBOIParams) – Parameters for controlling BOI creation.\n\nReturns\n\nResults from creating BOI.\n\nReturn type\n\nCreateBOIResults\n\nExamples\n\n>>> result = surf_utils.create_boi(zonelets, params)\n\n\n\nSurfaceUtilities.create_cap_on_face_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CreateCapParams) -> ansys.meshing.prime.params.primestructs.CreateCapResults\n\nCreate caps on the given face zonelets.\n\nParameters\n\npart_id (int) – Id of part to associate face zonelets created to cap.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be used to find caps.\n\nparams (CreateCapParams) – Parameters to create caps.\n\nReturns\n\nReturns the CreateCapResults.\n\nReturn type\n\nCreateCapResults\n\nExamples\n\n>>> params = prime.CreateCapParams(model = model)\n>>> results = surface_utils.cap_face_zonelets(part_id, face_zonelets, params)\n\n\n\nSurfaceUtilities.create_contact_patch(source_zonelets: Iterable[int], target_zonelets: Iterable[int], params: ansys.meshing.prime.autogen.surfaceutilitystructs.CreateContactPatchParams) -> ansys.meshing.prime.autogen.surfaceutilitystructs.CreateContactPatchResults\n\nCreate a contact patch by offsetting the target zonelets.\n\nParameters\n\nsource_zonelets (Iterable[int]) – IDS for the source face zonelets.\n\ntarget_zonelets (Iterable[int]) – IDs for the target face zonelets.\n\nparams (CreateContactPatchParams) – Parameters for controlling the contact patch creation.\n\nReturns\n\nResults from creating the contact patch.\n\nReturn type\n\nCreateContactPatchResults\n\nExamples\n\n>>> result = surf_utils.create_contact_patch(zonelets, params)\n\n\n\nSurfaceUtilities.delete_unwetted_surfaces(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], live_material_point_names: List[str], params: ansys.meshing.prime.params.primestructs.DeleteUnwettedParams) -> ansys.meshing.prime.params.primestructs.DeleteUnwettedResult\n\nDelete unwetted surfaces based on material point list.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nlive_material_point_names (List[str]) – Names of material points.\n\nparams (DeleteUnwettedParams) – DeleteUnwettedParams to define material points.\n\nReturns\n\nReturns a DeleteUnwettedResult.\n\nReturn type\n\nDeleteUnwettedResult\n\nExamples\n\n>>> result = surf_utils.delete_unwetted_surfaces(zonelets, live_mpt_names, prime.DeleteUnwettedParams(model))\n\n\n\nSurfaceUtilities.fill_holes_at_plane(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], plane_points: ansys.meshing.prime.params.primestructs.Iterable[float], params: ansys.meshing.prime.params.primestructs.FillHolesAtPlaneParams) -> ansys.meshing.prime.params.primestructs.FillHolesAtPlaneResults\n\nFill holes in given face zonelets at given plane.\n\nParameters\n\npart_id (int) – Id of part to associate face zonelets created to fill hole.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets to be used to find holes.\n\nplane_points (Iterable[float]) – Coordinates of three points to define plane.\n\nparams (FillHolesAtPlaneParams) – Parameters to fill holes.\n\nReturns\n\nReturns the FillHolesAtPlaneResults.\n\nReturn type\n\nFillHolesAtPlaneResults\n\nExamples\n\n>>> params = prime.FillHolesAtPlaneParams(model = model)\n>>> results = surface_utils.fill_holes_at_plane(part_id, face_zonelets, plane_points, params)\n\n\n\nSurfaceUtilities.fix_invalid_normal_nodes_of_face_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.FixInvalidNormalNodeParams) -> ansys.meshing.prime.params.primestructs.FixInvalidNormalNodeResults\n\nCreate nuggets to fix invalid normal at nodes of the given face zonelets.\n\nParameters\n\npart_id (int) – Part id of the given face zonelets. Nuggets created are associated to the given part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets used to find invalid normal nodes.\n\nparams (FixInvalidNormalNodeParams) – Parameters to find invalid normal nodes and fix them.\n\nReturns\n\nReturns the FixInvalidNormalNodeResults.\n\nReturn type\n\nFixInvalidNormalNodeResults\n\nExamples\n\n>>> params = prime.FixInvalidNormalNodeParams(model = model)\n>>> results = surface_utils.fix_invalid_normal_nodes_of_face_zonelets(part_id, face_zonelets, params)\n\n\n\nSurfaceUtilities.get_bounding_box_of_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.BoundingBox\n\nGet bounding box of given zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns bounding of box of given zonelets.\n\nReturn type\n\nBoundingBox\n\nExamples\n\n>>> zonelets = part.get_face_zonelets() + part.get_edge_zonelets()\n>>> bounding_box = surface_utilities.get_bounding_box_of_zonelets(zonelets)\n\n\n\nSurfaceUtilities.project_topo_faces_on_geometry(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ProjectOnGeometryParams) -> ansys.meshing.prime.params.primestructs.ProjectOnGeometryResults\n\nProject nodes of given topofaces on geometry associated to those topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces to be used to project nodes on the geometry.\n\nparams (ProjectOnGeometryParams) – Parameters used for projecting topoface nodes on geometry.\n\nReturns\n\nReturns the ProjectOnGeometryResults.\n\nReturn type\n\nProjectOnGeometryResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prime.ProjectOnGeometryParams(model = model)\n>>> results = surface_utils.project_topo_faces_on_geometry(topofaces, params)\n\n\n\nSurfaceUtilities.refine_at_contacts(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.RefineAtContactsParams) -> ansys.meshing.prime.params.primestructs.RefineAtContactsResults\n\nRefine face elements in contact with other parts.\n\nParameters\n\npart_ids (Iterable[int]) – Input part ids.\n\nparams (RefineAtContactsParams) – Parameters to refine at contacts.\n\nReturns\n\nReturns the RefineAtContactsResults.\n\nReturn type\n\nRefineAtContactsResults\n\nExamples\n\n>>> params = prime.RefineAtContactsParams(model = model)\n>>> result = surf_utils.refine_at_contacts(part_ids, params)\n\n\n\nSurfaceUtilities.resolve_intersections(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ResolveIntersectionsParams) -> ansys.meshing.prime.params.primestructs.ResolveIntersectionResult\n\nResolve facezonelets intersections.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (ResolveIntersectionsParams) – ResolveIntersectionsParams for resolve intersection.\n\nReturns\n\nReturns a ResolveIntersectionResult.\n\nReturn type\n\nResolveIntersectionResult\n\nExamples\n\n>>> result = surf_utils.resolve_intersections(zonelets, prime.ResolveIntersectionsParams(model))\n\n\n\nSurfaceUtilities.smooth_dihedral_face_nodes(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.SmoothDihedralFaceNodesParams) -> ansys.meshing.prime.params.primestructs.SmoothDihedralFaceNodesResults\n\nPerform a smoothing operation to eliminate sharp corners at locations where the input face zonelets intersect.\n\nParameters\n\nzonelets (Iterable[int]) – List of input face zonelet ids.\n\nparams (SmoothDihedralFaceNodesParams) – Parameters to control the smoothing operation.\n\nReturns\n\nReturns a SmoothDihedralFaceNodesResults.\n\nReturn type\n\nSmoothDihedralFaceNodesResults\n\nExamples\n\n>>> result = surf_utils.smooth_dihedral_face_nodes(zonelets, params)\n\n\n\nSurfaceUtilities.stretch_free_boundaries(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.StretchFreeBoundariesParams) -> ansys.meshing.prime.params.primestructs.StretchFreeBoundariesResults\n\nStretch free boundaries of each zonelet.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (StretchFreeBoundariesParams) – Parameters to control stretch free boundaries operation.\n\nReturns\n\nReturns the StretchFreeBoundariesResults.\n\nReturn type\n\nStretchFreeBoundariesResults\n\nExamples\n\n>>> result = surf_utils.stretch_free_boundaries(face_zonelet_ids, params)\n\n\n\nSurfaceUtilities.triangulate_face_zonelets(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.TriangulateParams) -> ansys.meshing.prime.params.primestructs.TriangulateResults\n\nSplit faces in zonelets to get triangular faces.\n\nParameters\n\nface_zonelet_ids (Iterable[int]) – Ids of face zonelets.\n\nparams (TriangulateParams) – Parameters to control the split operation.\n\nReturns\n\nReturns the TriangulateResults.\n\nReturn type\n\nTriangulateResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> result = surf_utils.triangulate_face_zonelets(face_zonelet_ids, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectivityResults.html#edgeconnectivityresults","title":"EdgeConnectivityResults","text":"EdgeConnectivityResults\n\n\n\nclass ansys.meshing.prime.EdgeConnectivityResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, edge_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, mesh_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_edge_types: ansys.meshing.prime.params.primestructs.Iterable[int] = None, num_nodes_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, node_coords: ansys.meshing.prime.params.primestructs.Iterable[float] = None, num_edge_list_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, edge_list: ansys.meshing.prime.params.primestructs.Iterable[int] = None, num_edges_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult of the edge connectivity information.\n\nParameters\n\nmodel (Model) – Model to create a EdgeConnectivityResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the get edge connectivity operation.\n\nedge_zonelet_ids (Iterable[int], optional) – Edge zonelet ids for which connectivity data is available.\n\ntopo_edge_ids (Iterable[int], optional) – TopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\nmesh_edge_ids (Iterable[int], optional) – Mesh edge ids corresponding to each topoedge.\n\ntopo_edge_types (Iterable[int], optional) – TopoEdge type corresponding to each topoedge.\n\nnum_nodes_per_edge_zonelet (Iterable[int], optional) – Number of nodes per edge zonelet.\n\nnode_coords (Iterable[float], optional) – Node coordinates describing edges of edge zonelet.\n\nnum_edge_list_per_edge_zonelet (Iterable[int], optional) – Number of edge list per edge zonelet.\n\nedge_list (Iterable[int], optional) – Edge list describing connectivity of node coordinates.\n\nnum_edges_per_edge_zonelet (Iterable[int], optional) – Number of edges per edge zonelet.\n\njson_data (dict, optional) – JSON dictionary to create a EdgeConnectivityResults object with provided parameters.\n\nExamples\n\n>>> edge_connectivity_results = prime.EdgeConnectivityResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectivityResults.html#overview","title":"EdgeConnectivityResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_list\n\nEdge list describing connectivity of node coordinates.\n\nedge_zonelet_ids\n\nEdge zonelet ids for which connectivity data is available.\n\nerror_code\n\nError code associated with the get edge connectivity operation.\n\nmesh_edge_ids\n\nMesh edge ids corresponding to each topoedge.\n\nnode_coords\n\nNode coordinates describing edges of edge zonelet.\n\nnum_edge_list_per_edge_zonelet\n\nNumber of edge list per edge zonelet.\n\nnum_edges_per_edge_zonelet\n\nNumber of edges per edge zonelet.\n\nnum_nodes_per_edge_zonelet\n\nNumber of nodes per edge zonelet.\n\ntopo_edge_ids\n\nTopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\ntopo_edge_types\n\nTopoEdge type corresponding to each topoedge.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of EdgeConnectivityResults object.\n\nset_default\n\nSet the default values of the EdgeConnectivityResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectivityResults.html#import-detail","title":"EdgeConnectivityResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectivityResults.html#property-detail","title":"EdgeConnectivityResults > Property detail","text":"Property detail\n\n\n\nproperty EdgeConnectivityResults.edge_list: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nEdge list describing connectivity of node coordinates.\n\n\n\nproperty EdgeConnectivityResults.edge_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nEdge zonelet ids for which connectivity data is available.\n\n\n\nproperty EdgeConnectivityResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the get edge connectivity operation.\n\n\n\nproperty EdgeConnectivityResults.mesh_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nMesh edge ids corresponding to each topoedge.\n\n\n\nproperty EdgeConnectivityResults.node_coords: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nNode coordinates describing edges of edge zonelet.\n\n\n\nproperty EdgeConnectivityResults.num_edge_list_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of edge list per edge zonelet.\n\n\n\nproperty EdgeConnectivityResults.num_edges_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of edges per edge zonelet.\n\n\n\nproperty EdgeConnectivityResults.num_nodes_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of nodes per edge zonelet.\n\n\n\nproperty EdgeConnectivityResults.topo_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\n\n\nproperty EdgeConnectivityResults.topo_edge_types: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoEdge type corresponding to each topoedge."},{"objectID":"Home","href":"api/ansys/meshing/prime/EdgeConnectivityResults.html#method-detail","title":"EdgeConnectivityResults > Method detail","text":"Method detail\n\n\n\nEdgeConnectivityResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nEdgeConnectivityResults.__str__() -> str\n\n\n\n\n\nstatic EdgeConnectivityResults.print_default()\n\nPrint the default values of EdgeConnectivityResults object.\n\nExamples\n\n>>> EdgeConnectivityResults.print_default()\n\n\n\nstatic EdgeConnectivityResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, edge_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, mesh_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_edge_types: ansys.meshing.prime.params.primestructs.Iterable[int] = None, num_nodes_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, node_coords: ansys.meshing.prime.params.primestructs.Iterable[float] = None, num_edge_list_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, edge_list: ansys.meshing.prime.params.primestructs.Iterable[int] = None, num_edges_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the EdgeConnectivityResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the get edge connectivity operation.\n\nedge_zonelet_ids (Iterable[int], optional) – Edge zonelet ids for which connectivity data is available.\n\ntopo_edge_ids (Iterable[int], optional) – TopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\nmesh_edge_ids (Iterable[int], optional) – Mesh edge ids corresponding to each topoedge.\n\ntopo_edge_types (Iterable[int], optional) – TopoEdge type corresponding to each topoedge.\n\nnum_nodes_per_edge_zonelet (Iterable[int], optional) – Number of nodes per edge zonelet.\n\nnode_coords (Iterable[float], optional) – Node coordinates describing edges of edge zonelet.\n\nnum_edge_list_per_edge_zonelet (Iterable[int], optional) – Number of edge list per edge zonelet.\n\nedge_list (Iterable[int], optional) – Edge list describing connectivity of node coordinates.\n\nnum_edges_per_edge_zonelet (Iterable[int], optional) – Number of edges per edge zonelet."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneMapMeshParams.html#multizonemapmeshparams","title":"MultiZoneMapMeshParams","text":"MultiZoneMapMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.MultiZoneMapMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, scope: ScopeDefinition = None, json_data: dict = None, **kwargs)\n\nDefine controlling parameters for the map mesh using MultiZone.\n\nParameters\n\nmodel (Model) – Model to create a MultiZoneMapMeshParams object with default parameters.\n\nscope (ScopeDefinition, optional) – Scope used for MultiZone map mesh control.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a MultiZoneMapMeshParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_map_mesh_params = prime.MultiZoneMapMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneMapMeshParams.html#overview","title":"MultiZoneMapMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nscope\n\nScope used for MultiZone map mesh control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MultiZoneMapMeshParams object.\n\nset_default\n\nSet the default values of the MultiZoneMapMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneMapMeshParams.html#import-detail","title":"MultiZoneMapMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneMapMeshParams.html#property-detail","title":"MultiZoneMapMeshParams > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneMapMeshParams.scope: ScopeDefinition\n\nScope used for MultiZone map mesh control.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneMapMeshParams.html#method-detail","title":"MultiZoneMapMeshParams > Method detail","text":"Method detail\n\n\n\nMultiZoneMapMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneMapMeshParams.__str__() -> str\n\n\n\n\n\nstatic MultiZoneMapMeshParams.print_default()\n\nPrint the default values of MultiZoneMapMeshParams object.\n\nExamples\n\n>>> MultiZoneMapMeshParams.print_default()\n\n\n\nstatic MultiZoneMapMeshParams.set_default(scope: ScopeDefinition = None)\n\nSet the default values of the MultiZoneMapMeshParams object.\n\nParameters\n\nscope (ScopeDefinition, optional) – Scope used for MultiZone map mesh control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneEdgeBiasingParams.html#multizoneedgebiasingparams","title":"MultiZoneEdgeBiasingParams","text":"MultiZoneEdgeBiasingParams\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.MultiZoneEdgeBiasingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, face_scope: ScopeDefinition = None, edge_scope: ScopeDefinition = None, bias_factor: float = None, n_divisions: int = None, json_data: dict = None, **kwargs)\n\nDefines MultiZone edge biasing control parameters.\n\nParameters\n\nmodel (Model) – Model to create a MultiZoneEdgeBiasingParams object with default parameters.\n\nface_scope (ScopeDefinition, optional) – Reference face zonelets to control mesh clustering orientation.This is a beta parameter. The behavior and name may change in the future.\n\nedge_scope (ScopeDefinition, optional) – Edge zonelets to control the expanse of edge biasing.This is a beta parameter. The behavior and name may change in the future.\n\nbias_factor (float, optional) – Bias factor used for MultiZone edge biasing control.This is a beta parameter. The behavior and name may change in the future.\n\nn_divisions (int, optional) – Number of divisions on the section where edge biasing is done.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a MultiZoneEdgeBiasingParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_edge_biasing_params = prime.MultiZoneEdgeBiasingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneEdgeBiasingParams.html#overview","title":"MultiZoneEdgeBiasingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbias_factor\n\nBias factor used for MultiZone edge biasing control.\n\nedge_scope\n\nEdge zonelets to control the expanse of edge biasing.\n\nface_scope\n\nReference face zonelets to control mesh clustering orientation.\n\nn_divisions\n\nNumber of divisions on the section where edge biasing is done.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MultiZoneEdgeBiasingParams object.\n\nset_default\n\nSet the default values of the MultiZoneEdgeBiasingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneEdgeBiasingParams.html#import-detail","title":"MultiZoneEdgeBiasingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneEdgeBiasingParams.html#property-detail","title":"MultiZoneEdgeBiasingParams > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneEdgeBiasingParams.bias_factor: float\n\nBias factor used for MultiZone edge biasing control.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneEdgeBiasingParams.edge_scope: ScopeDefinition\n\nEdge zonelets to control the expanse of edge biasing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneEdgeBiasingParams.face_scope: ScopeDefinition\n\nReference face zonelets to control mesh clustering orientation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneEdgeBiasingParams.n_divisions: int\n\nNumber of divisions on the section where edge biasing is done.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneEdgeBiasingParams.html#method-detail","title":"MultiZoneEdgeBiasingParams > Method detail","text":"Method detail\n\n\n\nMultiZoneEdgeBiasingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneEdgeBiasingParams.__str__() -> str\n\n\n\n\n\nstatic MultiZoneEdgeBiasingParams.print_default()\n\nPrint the default values of MultiZoneEdgeBiasingParams object.\n\nExamples\n\n>>> MultiZoneEdgeBiasingParams.print_default()\n\n\n\nstatic MultiZoneEdgeBiasingParams.set_default(face_scope: ScopeDefinition = None, edge_scope: ScopeDefinition = None, bias_factor: float = None, n_divisions: int = None)\n\nSet the default values of the MultiZoneEdgeBiasingParams object.\n\nParameters\n\nface_scope (ScopeDefinition, optional) – Reference face zonelets to control mesh clustering orientation.\n\nedge_scope (ScopeDefinition, optional) – Edge zonelets to control the expanse of edge biasing.\n\nbias_factor (float, optional) – Bias factor used for MultiZone edge biasing control.\n\nn_divisions (int, optional) – Number of divisions on the section where edge biasing is done."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIParams.html#createboiparams","title":"CreateBOIParams","text":"CreateBOIParams\n\n\n\nclass ansys.meshing.prime.CreateBOIParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, boi_type: BOIType = None, perform_initial_wrap: bool = None, wrap_size: float = None, flow_dir: FlowDirection = None, side_scale: float = None, wake_scale: float = None, wake_levels: int = None, suggested_part_name: str = None, suggested_label_prefix: str = None, number_of_threads: int = None, json_data: dict = None, **kwargs)\n\nParameters used for BOI surface creation in the given axis.\n\nParameters\n\nmodel (Model) – Model to create a CreateBOIParams object with default parameters.\n\nboi_type (BOIType, optional) – Type of BOI offsetting.\n\nperform_initial_wrap (bool, optional) – Perform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\nwrap_size (float, optional) – Set wrap size greater than the largest gap size in the input when performing_initial_wrap is true.\n\nflow_dir (FlowDirection, optional) – Assigns the offset direction of inflation.\n\nside_scale (float, optional) – BOI side scaling factor.\n\nwake_scale (float, optional) – BOI flow direction scaling factor.\n\nwake_levels (int, optional) – BOI levels.\n\nsuggested_part_name (str, optional) – Suggested part name for created BOI surfaces.\n\nsuggested_label_prefix (str, optional) – Suggested label name for created BOI surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\njson_data (dict, optional) – JSON dictionary to create a CreateBOIParams object with provided parameters.\n\nExamples\n\n>>> create_boiparams = prime.CreateBOIParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIParams.html#overview","title":"CreateBOIParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nboi_type\n\nType of BOI offsetting.\n\nflow_dir\n\nAssigns the offset direction of inflation.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\nperform_initial_wrap\n\nPerform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\nside_scale\n\nBOI side scaling factor.\n\nsuggested_label_prefix\n\nSuggested label name for created BOI surfaces.\n\nsuggested_part_name\n\nSuggested part name for created BOI surfaces.\n\nwake_levels\n\nBOI levels.\n\nwake_scale\n\nBOI flow direction scaling factor.\n\nwrap_size\n\nSet wrap size greater than the largest gap size in the input when performing_initial_wrap is true.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateBOIParams object.\n\nset_default\n\nSet the default values of the CreateBOIParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIParams.html#import-detail","title":"CreateBOIParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIParams.html#property-detail","title":"CreateBOIParams > Property detail","text":"Property detail\n\n\n\nproperty CreateBOIParams.boi_type: BOIType\n\nType of BOI offsetting.\n\n\n\nproperty CreateBOIParams.flow_dir: FlowDirection\n\nAssigns the offset direction of inflation.\n\n\n\nproperty CreateBOIParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\n\n\nproperty CreateBOIParams.perform_initial_wrap: bool\n\nPerform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\n\n\nproperty CreateBOIParams.side_scale: float\n\nBOI side scaling factor.\n\n\n\nproperty CreateBOIParams.suggested_label_prefix: str\n\nSuggested label name for created BOI surfaces.\n\n\n\nproperty CreateBOIParams.suggested_part_name: str\n\nSuggested part name for created BOI surfaces.\n\n\n\nproperty CreateBOIParams.wake_levels: int\n\nBOI levels.\n\n\n\nproperty CreateBOIParams.wake_scale: float\n\nBOI flow direction scaling factor.\n\n\n\nproperty CreateBOIParams.wrap_size: float\n\nSet wrap size greater than the largest gap size in the input when performing_initial_wrap is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateBOIParams.html#method-detail","title":"CreateBOIParams > Method detail","text":"Method detail\n\n\n\nCreateBOIParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateBOIParams.__str__() -> str\n\n\n\n\n\nstatic CreateBOIParams.print_default()\n\nPrint the default values of CreateBOIParams object.\n\nExamples\n\n>>> CreateBOIParams.print_default()\n\n\n\nstatic CreateBOIParams.set_default(boi_type: BOIType = None, perform_initial_wrap: bool = None, wrap_size: float = None, flow_dir: FlowDirection = None, side_scale: float = None, wake_scale: float = None, wake_levels: int = None, suggested_part_name: str = None, suggested_label_prefix: str = None, number_of_threads: int = None)\n\nSet the default values of the CreateBOIParams object.\n\nParameters\n\nboi_type (BOIType, optional) – Type of BOI offsetting.\n\nperform_initial_wrap (bool, optional) – Perform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\nwrap_size (float, optional) – Set wrap size greater than the largest gap size in the input when performing_initial_wrap is true.\n\nflow_dir (FlowDirection, optional) – Assigns the offset direction of inflation.\n\nside_scale (float, optional) – BOI side scaling factor.\n\nwake_scale (float, optional) – BOI flow direction scaling factor.\n\nwake_levels (int, optional) – BOI levels.\n\nsuggested_part_name (str, optional) – Suggested part name for created BOI surfaces.\n\nsuggested_label_prefix (str, optional) – Suggested label name for created BOI surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_multi_layer_quad_mesh_pcb_fmd.html#ansysmeshingprimeexamplesdownload_multi_layer_quad_mesh_pcb_fmd","title":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_fmd","text":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_fmd\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchResults.html#createcontactpatchresults","title":"CreateContactPatchResults","text":"CreateContactPatchResults\n\n\n\nclass ansys.meshing.prime.CreateContactPatchResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None, json_data: dict = None, **kwargs)\n\nResult structure associated with created contact patch zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateContactPatchResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the contact patch creation operation.\n\npart_id (int, optional) – Contact patch part id.\n\njson_data (dict, optional) – JSON dictionary to create a CreateContactPatchResults object with provided parameters.\n\nExamples\n\n>>> create_contact_patch_results = prime.CreateContactPatchResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchResults.html#overview","title":"CreateContactPatchResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the contact patch creation operation.\n\npart_id\n\nContact patch part id.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateContactPatchResults object.\n\nset_default\n\nSet the default values of the CreateContactPatchResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchResults.html#import-detail","title":"CreateContactPatchResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchResults.html#property-detail","title":"CreateContactPatchResults > Property detail","text":"Property detail\n\n\n\nproperty CreateContactPatchResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the contact patch creation operation.\n\n\n\nproperty CreateContactPatchResults.part_id: int\n\nContact patch part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchResults.html#method-detail","title":"CreateContactPatchResults > Method detail","text":"Method detail\n\n\n\nCreateContactPatchResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateContactPatchResults.__str__() -> str\n\n\n\n\n\nstatic CreateContactPatchResults.print_default()\n\nPrint the default values of CreateContactPatchResults object.\n\nExamples\n\n>>> CreateContactPatchResults.print_default()\n\n\n\nstatic CreateContactPatchResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None)\n\nSet the default values of the CreateContactPatchResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the contact patch creation operation.\n\npart_id (int, optional) – Contact patch part id."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_block_model_fmd.html#ansysmeshingprimeexamplesexamplesdownload_block_model_fmd","title":"ansys.meshing.prime.examples.examples.download_block_model_fmd","text":"ansys.meshing.prime.examples.examples.download_block_model_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_block_model_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload CAD file for the block model example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(block_model, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/index.html#the-automeshstructspy-module","title":"The automeshstructs.py module","text":"The automeshstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/index.html#summary","title":"The automeshstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAutoMeshParams\n\nParameters for volume meshing.\n\nAutoMeshResults\n\nResults of volume meshing.\n\nHexCoreCellElementType\n\nCell element type of hex-shaped cells.\n\nHexCoreParams\n\nParameters to control hexahedral mesh generation.\n\nHexCoreTransitionLayerType\n\nHandle size transition of hex cells.\n\nPrismParams\n\nParameters to control prism mesh generation.\n\nPrismStairStep\n\nParameters to control prism stairsteping.\n\nSurfaceMeshSizeScaling\n\nSettings related to scaling of surface mesh size for hexcore refinement.\n\nTetParams\n\nParameters to control tetrahedral mesh generation.\n\nVolumeFillType\n\nTypes of volume fill options.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/index.html#description","title":"The automeshstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferResults.html#surferresults","title":"SurferResults","text":"SurferResults\n\n\n\nclass ansys.meshing.prime.autogen.surferstructs.SurferResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, topofaces_not_projected_on_geometry: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with the surface mesh.\n\nParameters\n\nmodel (Model) – Model to create a SurferResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\ntopofaces_not_projected_on_geometry (Iterable[int], optional) – Ids of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled.\n\njson_data (dict, optional) – JSON dictionary to create a SurferResults object with provided parameters.\n\nExamples\n\n>>> surfer_results = prime.SurferResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferResults.html#overview","title":"SurferResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\ntopofaces_not_projected_on_geometry\n\nIds of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurferResults object.\n\nset_default\n\nSet the default values of the SurferResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferResults.html#import-detail","title":"SurferResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferResults.html#property-detail","title":"SurferResults > Property detail","text":"Property detail\n\n\n\nproperty SurferResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty SurferResults.topofaces_not_projected_on_geometry: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferResults.html#method-detail","title":"SurferResults > Method detail","text":"Method detail\n\n\n\nSurferResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurferResults.__str__() -> str\n\n\n\n\n\nstatic SurferResults.print_default()\n\nPrint the default values of SurferResults object.\n\nExamples\n\n>>> SurferResults.print_default()\n\n\n\nstatic SurferResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, topofaces_not_projected_on_geometry: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SurferResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\ntopofaces_not_projected_on_geometry (Iterable[int], optional) – Ids of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSplineParams.html#hextosplineparams","title":"HexToSplineParams","text":"HexToSplineParams\n\n\n\nclass ansys.meshing.prime.HexToSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, json_data: dict = None, **kwargs)\n\nParameters to control conversion of hex mesh to spline.\n\nParameters\n\nmodel (Model) – Model to create a HexToSplineParams object with default parameters.\n\nfeature_capture_type (SplineFeatureCaptureType, optional) – Feature capture options.This is a beta parameter. The behavior and name may change in the future.\n\nfeature_angle (float, optional) – Angle to capture the feature.This is a beta parameter. The behavior and name may change in the future.\n\ncorner_angle (float, optional) – Corner angle of the feature.This is a beta parameter. The behavior and name may change in the future.\n\ncontinuity (SplineContinuityType, optional) – Spline Continuity options.This is a beta parameter. The behavior and name may change in the future.\n\nproject_on_geometry (bool, optional) – Option to project on geometry.This is a beta parameter. The behavior and name may change in the future.\n\nuse_projection_scope (bool, optional) – Option to use projection scope.This is a beta parameter. The behavior and name may change in the future.\n\nprojection_scope (ScopeDefinition, optional) – Scope to evaluate entities for projection.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a HexToSplineParams object with provided parameters.\n\nExamples\n\n>>> hex_to_spline_params = prime.HexToSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSplineParams.html#overview","title":"HexToSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontinuity\n\nSpline Continuity options.\n\ncorner_angle\n\nCorner angle of the feature.\n\nfeature_angle\n\nAngle to capture the feature.\n\nfeature_capture_type\n\nFeature capture options.\n\nproject_on_geometry\n\nOption to project on geometry.\n\nprojection_scope\n\nScope to evaluate entities for projection.\n\nuse_projection_scope\n\nOption to use projection scope.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of HexToSplineParams object.\n\nset_default\n\nSet the default values of the HexToSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSplineParams.html#import-detail","title":"HexToSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSplineParams.html#property-detail","title":"HexToSplineParams > Property detail","text":"Property detail\n\n\n\nproperty HexToSplineParams.continuity: SplineContinuityType\n\nSpline Continuity options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.corner_angle: float\n\nCorner angle of the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.feature_angle: float\n\nAngle to capture the feature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.feature_capture_type: SplineFeatureCaptureType\n\nFeature capture options.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.project_on_geometry: bool\n\nOption to project on geometry.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope to evaluate entities for projection.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty HexToSplineParams.use_projection_scope: bool\n\nOption to use projection scope.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexToSplineParams.html#method-detail","title":"HexToSplineParams > Method detail","text":"Method detail\n\n\n\nHexToSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nHexToSplineParams.__str__() -> str\n\n\n\n\n\nstatic HexToSplineParams.print_default()\n\nPrint the default values of HexToSplineParams object.\n\nExamples\n\n>>> HexToSplineParams.print_default()\n\n\n\nstatic HexToSplineParams.set_default(feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None)\n\nSet the default values of the HexToSplineParams object.\n\nParameters\n\nfeature_capture_type (SplineFeatureCaptureType, optional) – Feature capture options.\n\nfeature_angle (float, optional) – Angle to capture the feature.\n\ncorner_angle (float, optional) – Corner angle of the feature.\n\ncontinuity (SplineContinuityType, optional) – Spline Continuity options.\n\nproject_on_geometry (bool, optional) – Option to project on geometry.\n\nuse_projection_scope (bool, optional) – Option to use projection scope.\n\nprojection_scope (ScopeDefinition, optional) – Scope to evaluate entities for projection."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderSplitResults.html#scaffoldersplitresults","title":"ScaffolderSplitResults","text":"ScaffolderSplitResults\n\n\n\nclass ansys.meshing.prime.ScaffolderSplitResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, new_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult structure associated to split topofaces operation.\n\nParameters\n\nmodel (Model) – Model to create a ScaffolderSplitResults object with default parameters.\n\nnew_faces (Iterable[int], optional) – Topofaces created after split operation.\n\nerror_code (ErrorCode, optional) – Error code associated with split topofaces operation.\n\njson_data (dict, optional) – JSON dictionary to create a ScaffolderSplitResults object with provided parameters.\n\nExamples\n\n>>> scaffolder_split_results = prime.ScaffolderSplitResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderSplitResults.html#overview","title":"ScaffolderSplitResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with split topofaces operation.\n\nnew_faces\n\nTopofaces created after split operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ScaffolderSplitResults object.\n\nset_default\n\nSet the default values of the ScaffolderSplitResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderSplitResults.html#import-detail","title":"ScaffolderSplitResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderSplitResults.html#property-detail","title":"ScaffolderSplitResults > Property detail","text":"Property detail\n\n\n\nproperty ScaffolderSplitResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with split topofaces operation.\n\n\n\nproperty ScaffolderSplitResults.new_faces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopofaces created after split operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ScaffolderSplitResults.html#method-detail","title":"ScaffolderSplitResults > Method detail","text":"Method detail\n\n\n\nScaffolderSplitResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nScaffolderSplitResults.__str__() -> str\n\n\n\n\n\nstatic ScaffolderSplitResults.print_default()\n\nPrint the default values of ScaffolderSplitResults object.\n\nExamples\n\n>>> ScaffolderSplitResults.print_default()\n\n\n\nstatic ScaffolderSplitResults.set_default(new_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ScaffolderSplitResults object.\n\nParameters\n\nnew_faces (Iterable[int], optional) – Topofaces created after split operation.\n\nerror_code (ErrorCode, optional) – Error code associated with split topofaces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineContinuityType.html#splinecontinuitytype","title":"SplineContinuityType","text":"SplineContinuityType\n\n\n\nclass ansys.meshing.prime.SplineContinuityType\n\nSpline Continuity types."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineContinuityType.html#overview","title":"SplineContinuityType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCUBICC0\n\nSpline use cubic C0 continuity.\n\nCUBICC1\n\nSpline use cubic C1 continuity.\n\nQUADRATICC0\n\nSpline use quadratic C0 continuity."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineContinuityType.html#import-detail","title":"SplineContinuityType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineContinuityType.html#attribute-detail","title":"SplineContinuityType > Attribute detail","text":"Attribute detail\n\n\n\nSplineContinuityType.CUBICC0 = 0\n\nSpline use cubic C0 continuity.\n\n\n\nSplineContinuityType.CUBICC1 = 1\n\nSpline use cubic C1 continuity.\n\n\n\nSplineContinuityType.QUADRATICC0 = 2\n\nSpline use quadratic C0 continuity."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SurfaceFeatureType.html#surfacefeaturetype","title":"SurfaceFeatureType","text":"SurfaceFeatureType\n\n\n\nclass ansys.meshing.prime.autogen.commontypes.SurfaceFeatureType\n\nType of face edges considered as features."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SurfaceFeatureType.html#overview","title":"SurfaceFeatureType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nFEATURE\n\nFace edges with normal angle more than threshold are considered as feature.\n\nFEATUREORZONEBOUNDARY\n\nFace edges at zone boundary or with normal angle more than threshold are considered as feature.\n\nFEATUREORZONELETBOUNDARY\n\nFace edges at zonelet boundary or with normal angle more than threshold are considered as feature.\n\nNONE\n\nNone of face edges are considered as feature.\n\nZONEBOUNDARY\n\nFace edges at zone boundary are considered as feature.\n\nZONELETBOUNDARY\n\nFace edges at zonelet boundary are considered as feature."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SurfaceFeatureType.html#import-detail","title":"SurfaceFeatureType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SurfaceFeatureType.html#attribute-detail","title":"SurfaceFeatureType > Attribute detail","text":"Attribute detail\n\n\n\nSurfaceFeatureType.FEATURE = 2\n\nFace edges with normal angle more than threshold are considered as feature.\n\n\n\nSurfaceFeatureType.FEATUREORZONEBOUNDARY = 3\n\nFace edges at zone boundary or with normal angle more than threshold are considered as feature.\n\n\n\nSurfaceFeatureType.FEATUREORZONELETBOUNDARY = 5\n\nFace edges at zonelet boundary or with normal angle more than threshold are considered as feature.\n\n\n\nSurfaceFeatureType.NONE = 0\n\nNone of face edges are considered as feature.\n\n\n\nSurfaceFeatureType.ZONEBOUNDARY = 1\n\nFace edges at zone boundary are considered as feature.\n\n\n\nSurfaceFeatureType.ZONELETBOUNDARY = 4\n\nFace edges at zonelet boundary are considered as feature."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/MeshedSizingParams.html#meshedsizingparams","title":"MeshedSizingParams","text":"MeshedSizingParams\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.MeshedSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nSize field computed using meshed size control enables you to set the size based on existing sizes.\n\nParameters\n\nmodel (Model) – Model to create a MeshedSizingParams object with default parameters.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\njson_data (dict, optional) – JSON dictionary to create a MeshedSizingParams object with provided parameters.\n\nExamples\n\n>>> meshed_sizing_params = prime.MeshedSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/MeshedSizingParams.html#overview","title":"MeshedSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MeshedSizingParams object.\n\nset_default\n\nSet the default values of the MeshedSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/MeshedSizingParams.html#import-detail","title":"MeshedSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/MeshedSizingParams.html#property-detail","title":"MeshedSizingParams > Property detail","text":"Property detail\n\n\n\nproperty MeshedSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/MeshedSizingParams.html#method-detail","title":"MeshedSizingParams > Method detail","text":"Method detail\n\n\n\nMeshedSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMeshedSizingParams.__str__() -> str\n\n\n\n\n\nstatic MeshedSizingParams.print_default()\n\nPrint the default values of MeshedSizingParams object.\n\nExamples\n\n>>> MeshedSizingParams.print_default()\n\n\n\nstatic MeshedSizingParams.set_default(growth_rate: float = None)\n\nSet the default values of the MeshedSizingParams object.\n\nParameters\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/index.html#the-topoutilitystructspy-module","title":"The topoutilitystructs.py module","text":"The topoutilitystructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/index.html#summary","title":"The topoutilitystructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTopoFillHoleParams\n\nParameters used to fill holes in topology.\n\nTopoFillHoleResult\n\nResults associated with fill holes in topology operations.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topoutilitystructs/index.html#description","title":"The topoutilitystructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphParams.html#matchmorphparams","title":"MatchMorphParams","text":"MatchMorphParams\n\n\n\nclass ansys.meshing.prime.MatchMorphParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nMatchMorphParams describes the parameters required for match morphing.\n\nParameters\n\nmodel (Model) – Model to create a MatchMorphParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a MatchMorphParams object with provided parameters.\n\nExamples\n\n>>> match_morph_params = prime.MatchMorphParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphParams.html#overview","title":"MatchMorphParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MatchMorphParams object.\n\nset_default\n\nSet the default values of the MatchMorphParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphParams.html#import-detail","title":"MatchMorphParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchMorphParams.html#method-detail","title":"MatchMorphParams > Method detail","text":"Method detail\n\n\n\nMatchMorphParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMatchMorphParams.__str__() -> str\n\n\n\n\n\nstatic MatchMorphParams.print_default()\n\nPrint the default values of MatchMorphParams object.\n\nExamples\n\n>>> MatchMorphParams.print_default()\n\n\n\nstatic MatchMorphParams.set_default()\n\nSet the default values of the MatchMorphParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryParams.html#periodiccontrolsummaryparams","title":"PeriodicControlSummaryParams","text":"PeriodicControlSummaryParams\n\n\n\nclass ansys.meshing.prime.autogen.periodiccontrolstructs.PeriodicControlSummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to get size control summary.\n\nParameters\n\nmodel (Model) – Model to create a PeriodicControlSummaryParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a PeriodicControlSummaryParams object with provided parameters.\n\nExamples\n\n>>> periodic_control_summary_params = prime.PeriodicControlSummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryParams.html#overview","title":"PeriodicControlSummaryParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PeriodicControlSummaryParams object.\n\nset_default\n\nSet the default values of the PeriodicControlSummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryParams.html#import-detail","title":"PeriodicControlSummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrolstructs/PeriodicControlSummaryParams.html#method-detail","title":"PeriodicControlSummaryParams > Method detail","text":"Method detail\n\n\n\nPeriodicControlSummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControlSummaryParams.__str__() -> str\n\n\n\n\n\nstatic PeriodicControlSummaryParams.print_default()\n\nPrint the default values of PeriodicControlSummaryParams object.\n\nExamples\n\n>>> PeriodicControlSummaryParams.print_default()\n\n\n\nstatic PeriodicControlSummaryParams.set_default()\n\nSet the default values of the PeriodicControlSummaryParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeadRegion.html#deadregion","title":"DeadRegion","text":"DeadRegion\n\n\n\nclass ansys.meshing.prime.DeadRegion(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, dead_material_points: ansys.meshing.prime.params.primestructs.List[str] = None, hole_size: float = None, json_data: dict = None, **kwargs)\n\nDeadRegion defines a dead region for patch flow regions operation.\n\nParameters\n\nmodel (Model) – Model to create a DeadRegion object with default parameters.\n\nface_zonelet_ids (Iterable[int], optional) – Face zonelets enclosing dead region.This is a beta parameter. The behavior and name may change in the future.\n\ndead_material_points (List[str], optional) – Material points to identify dead region.This is a beta parameter. The behavior and name may change in the future.\n\nhole_size (float, optional) – Maximum hole size used for patching.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DeadRegion object with provided parameters.\n\nExamples\n\n>>> dead_region = prime.DeadRegion(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeadRegion.html#overview","title":"DeadRegion > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndead_material_points\n\nMaterial points to identify dead region.\n\nface_zonelet_ids\n\nFace zonelets enclosing dead region.\n\nhole_size\n\nMaximum hole size used for patching.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeadRegion object.\n\nset_default\n\nSet the default values of the DeadRegion object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeadRegion.html#import-detail","title":"DeadRegion > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeadRegion.html#property-detail","title":"DeadRegion > Property detail","text":"Property detail\n\n\n\nproperty DeadRegion.dead_material_points: ansys.meshing.prime.params.primestructs.List[str]\n\nMaterial points to identify dead region.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DeadRegion.face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zonelets enclosing dead region.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DeadRegion.hole_size: float\n\nMaximum hole size used for patching.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeadRegion.html#method-detail","title":"DeadRegion > Method detail","text":"Method detail\n\n\n\nDeadRegion.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeadRegion.__str__() -> str\n\n\n\n\n\nstatic DeadRegion.print_default()\n\nPrint the default values of DeadRegion object.\n\nExamples\n\n>>> DeadRegion.print_default()\n\n\n\nstatic DeadRegion.set_default(face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, dead_material_points: ansys.meshing.prime.params.primestructs.List[str] = None, hole_size: float = None)\n\nSet the default values of the DeadRegion object.\n\nParameters\n\nface_zonelet_ids (Iterable[int], optional) – Face zonelets enclosing dead region.\n\ndead_material_points (List[str], optional) – Material points to identify dead region.\n\nhole_size (float, optional) – Maximum hole size used for patching."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPair.html#matchpair","title":"MatchPair","text":"MatchPair\n\n\n\nclass ansys.meshing.prime.autogen.morpherstructs.MatchPair(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, source_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, target_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, target_type: MatchPairTargetType = None, bc_pairs: ansys.meshing.prime.params.primestructs.List[BCPair] = None, json_data: dict = None, **kwargs)\n\nMatch pair to specify sources, targets for match morphing. Included boundary conditions specification.\n\nParameters\n\nmodel (Model) – Model to create a MatchPair object with default parameters.\n\nsource_surfaces (Iterable[int], optional) – Ids of source surfaces.\n\ntarget_surfaces (Iterable[int], optional) – Ids of target surfaces.\n\ntarget_type (MatchPairTargetType, optional) – Option to specify target surface type.\n\nbc_pairs (List[BCPair], optional) – Array of boundary condition pairs.\n\njson_data (dict, optional) – JSON dictionary to create a MatchPair object with provided parameters.\n\nExamples\n\n>>> match_pair = prime.MatchPair(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPair.html#overview","title":"MatchPair > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbc_pairs\n\nArray of boundary condition pairs.\n\nsource_surfaces\n\nIds of source surfaces.\n\ntarget_surfaces\n\nIds of target surfaces.\n\ntarget_type\n\nOption to specify target surface type.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MatchPair object.\n\nset_default\n\nSet the default values of the MatchPair object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPair.html#import-detail","title":"MatchPair > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPair.html#property-detail","title":"MatchPair > Property detail","text":"Property detail\n\n\n\nproperty MatchPair.bc_pairs: ansys.meshing.prime.params.primestructs.List[BCPair]\n\nArray of boundary condition pairs.\n\n\n\nproperty MatchPair.source_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of source surfaces.\n\n\n\nproperty MatchPair.target_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of target surfaces.\n\n\n\nproperty MatchPair.target_type: MatchPairTargetType\n\nOption to specify target surface type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPair.html#method-detail","title":"MatchPair > Method detail","text":"Method detail\n\n\n\nMatchPair.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMatchPair.__str__() -> str\n\n\n\n\n\nstatic MatchPair.print_default()\n\nPrint the default values of MatchPair object.\n\nExamples\n\n>>> MatchPair.print_default()\n\n\n\nstatic MatchPair.set_default(source_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, target_surfaces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, target_type: MatchPairTargetType = None, bc_pairs: ansys.meshing.prime.params.primestructs.List[BCPair] = None)\n\nSet the default values of the MatchPair object.\n\nParameters\n\nsource_surfaces (Iterable[int], optional) – Ids of source surfaces.\n\ntarget_surfaces (Iterable[int], optional) – Ids of target surfaces.\n\ntarget_type (MatchPairTargetType, optional) – Option to specify target surface type.\n\nbc_pairs (List[BCPair], optional) – Array of boundary condition pairs."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/DisplayMeshInfo.html#displaymeshinfo","title":"DisplayMeshInfo","text":"DisplayMeshInfo\n\n\n\nclass ansys.meshing.prime.core.mesh.DisplayMeshInfo(id=0, part_id=0, part_name=None, zone_id=0, zone_name=None, display_mesh_type=DisplayMeshType.FACEZONELET, has_mesh=False)\n\nContains the mesh information to display.\n\nParameters\n\nid (int, default: 0) – ID of the mesh.\n\npart_id (int, default: 0) – ID of the part.\n\npart_name (str, default: None) – Name of the part.\n\nzone_id (int, default: 0) – ID of the zone.\n\nzone_name (str, default: None) – Name of the zone.\n\ndisplay_mesh_type (DisplayMeshType, default: FACEZONELET) – Type of mesh to display."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/DisplayMeshInfo.html#overview","title":"DisplayMeshInfo > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\ndisplay_mesh_type\n\n\n\nhas_mesh\n\n\n\nid\n\n\n\npart_id\n\n\n\npart_name\n\n\n\nzone_id\n\n\n\nzone_name\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/DisplayMeshInfo.html#import-detail","title":"DisplayMeshInfo > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/mesh/DisplayMeshInfo.html#attribute-detail","title":"DisplayMeshInfo > Attribute detail","text":"Attribute detail\n\n\n\nDisplayMeshInfo.display_mesh_type\n\n\n\n\n\nDisplayMeshInfo.has_mesh = False\n\n\n\n\n\nDisplayMeshInfo.id = 0\n\n\n\n\n\nDisplayMeshInfo.part_id = 0\n\n\n\n\n\nDisplayMeshInfo.part_name = None\n\n\n\n\n\nDisplayMeshInfo.zone_id = 0\n\n\n\n\n\nDisplayMeshInfo.zone_name = None\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetContactPreventionsResults.html#setcontactpreventionsresults","title":"SetContactPreventionsResults","text":"SetContactPreventionsResults\n\n\n\nclass ansys.meshing.prime.SetContactPreventionsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with set contact preventions.\n\nParameters\n\nmodel (Model) – Model to create a SetContactPreventionsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set contact preventions.\n\nids (Iterable[int], optional) – Ids of added contact prevention controls.\n\njson_data (dict, optional) – JSON dictionary to create a SetContactPreventionsResults object with provided parameters.\n\nExamples\n\n>>> set_contact_preventions_results = prime.SetContactPreventionsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetContactPreventionsResults.html#overview","title":"SetContactPreventionsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set contact preventions.\n\nids\n\nIds of added contact prevention controls.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetContactPreventionsResults object.\n\nset_default\n\nSet the default values of the SetContactPreventionsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetContactPreventionsResults.html#import-detail","title":"SetContactPreventionsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetContactPreventionsResults.html#property-detail","title":"SetContactPreventionsResults > Property detail","text":"Property detail\n\n\n\nproperty SetContactPreventionsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set contact preventions.\n\n\n\nproperty SetContactPreventionsResults.ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of added contact prevention controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetContactPreventionsResults.html#method-detail","title":"SetContactPreventionsResults > Method detail","text":"Method detail\n\n\n\nSetContactPreventionsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetContactPreventionsResults.__str__() -> str\n\n\n\n\n\nstatic SetContactPreventionsResults.print_default()\n\nPrint the default values of SetContactPreventionsResults object.\n\nExamples\n\n>>> SetContactPreventionsResults.print_default()\n\n\n\nstatic SetContactPreventionsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SetContactPreventionsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the set contact preventions.\n\nids (Iterable[int], optional) – Ids of added contact prevention controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByIntersectionResults.html#searchbyintersectionresults","title":"SearchByIntersectionResults","text":"SearchByIntersectionResults\n\n\n\nclass ansys.meshing.prime.SearchByIntersectionResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with search by face element intersection (face elements interfering with each other).\n\nParameters\n\nmodel (Model) – Model to create a SearchByIntersectionResults object with default parameters.\n\nn_found (int, optional) – Number of face elements identified by intersection(face elements interfering with each other).\n\nerror_code (ErrorCode, optional) – Error code associated with search intersection operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByIntersectionResults object with provided parameters.\n\nExamples\n\n>>> search_by_intersection_results = prime.SearchByIntersectionResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByIntersectionResults.html#overview","title":"SearchByIntersectionResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search intersection operation.\n\nn_found\n\nNumber of face elements identified by intersection(face elements interfering with each other).\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByIntersectionResults object.\n\nset_default\n\nSet the default values of the SearchByIntersectionResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByIntersectionResults.html#import-detail","title":"SearchByIntersectionResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByIntersectionResults.html#property-detail","title":"SearchByIntersectionResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByIntersectionResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search intersection operation.\n\n\n\nproperty SearchByIntersectionResults.n_found: int\n\nNumber of face elements identified by intersection(face elements interfering with each other)."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByIntersectionResults.html#method-detail","title":"SearchByIntersectionResults > Method detail","text":"Method detail\n\n\n\nSearchByIntersectionResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByIntersectionResults.__str__() -> str\n\n\n\n\n\nstatic SearchByIntersectionResults.print_default()\n\nPrint the default values of SearchByIntersectionResults object.\n\nExamples\n\n>>> SearchByIntersectionResults.print_default()\n\n\n\nstatic SearchByIntersectionResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchByIntersectionResults object.\n\nParameters\n\nn_found (int, optional) – Number of face elements identified by intersection(face elements interfering with each other).\n\nerror_code (ErrorCode, optional) – Error code associated with search intersection operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_block_model_pmdat.html#ansysmeshingprimeexamplesexamplesdownload_block_model_pmdat","title":"ansys.meshing.prime.examples.examples.download_block_model_pmdat","text":"ansys.meshing.prime.examples.examples.download_block_model_pmdat\n\n\n\nansys.meshing.prime.examples.examples.download_block_model_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload PMDAT file for the block model example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(block_model, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityResults.html#faceandedgeconnectivityresults","title":"FaceAndEdgeConnectivityResults","text":"FaceAndEdgeConnectivityResults\n\n\n\nclass ansys.meshing.prime.FaceAndEdgeConnectivityResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[FaceConnectivityResults] = None, edge_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[EdgeConnectivityResults] = None, json_data: dict = None, **kwargs)\n\nResult of the face and edge connectivity information.\n\nParameters\n\nmodel (Model) – Model to create a FaceAndEdgeConnectivityResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the get face and edge connectivity operation.\n\npart_ids (Iterable[int], optional) – Part ids for which face and edge connectivity data is available.\n\nface_connectivity_result_per_part (List[FaceConnectivityResults], optional) – Face connectivity result per part.\n\nedge_connectivity_result_per_part (List[EdgeConnectivityResults], optional) – Edge connectivity result per part.\n\njson_data (dict, optional) – JSON dictionary to create a FaceAndEdgeConnectivityResults object with provided parameters.\n\nExamples\n\n>>> face_and_edge_connectivity_results = prime.FaceAndEdgeConnectivityResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityResults.html#overview","title":"FaceAndEdgeConnectivityResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_connectivity_result_per_part\n\nEdge connectivity result per part.\n\nerror_code\n\nError code associated with the get face and edge connectivity operation.\n\nface_connectivity_result_per_part\n\nFace connectivity result per part.\n\npart_ids\n\nPart ids for which face and edge connectivity data is available.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FaceAndEdgeConnectivityResults object.\n\nset_default\n\nSet the default values of the FaceAndEdgeConnectivityResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityResults.html#import-detail","title":"FaceAndEdgeConnectivityResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityResults.html#property-detail","title":"FaceAndEdgeConnectivityResults > Property detail","text":"Property detail\n\n\n\nproperty FaceAndEdgeConnectivityResults.edge_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[EdgeConnectivityResults]\n\nEdge connectivity result per part.\n\n\n\nproperty FaceAndEdgeConnectivityResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the get face and edge connectivity operation.\n\n\n\nproperty FaceAndEdgeConnectivityResults.face_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[FaceConnectivityResults]\n\nFace connectivity result per part.\n\n\n\nproperty FaceAndEdgeConnectivityResults.part_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nPart ids for which face and edge connectivity data is available."},{"objectID":"Home","href":"api/ansys/meshing/prime/FaceAndEdgeConnectivityResults.html#method-detail","title":"FaceAndEdgeConnectivityResults > Method detail","text":"Method detail\n\n\n\nFaceAndEdgeConnectivityResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFaceAndEdgeConnectivityResults.__str__() -> str\n\n\n\n\n\nstatic FaceAndEdgeConnectivityResults.print_default()\n\nPrint the default values of FaceAndEdgeConnectivityResults object.\n\nExamples\n\n>>> FaceAndEdgeConnectivityResults.print_default()\n\n\n\nstatic FaceAndEdgeConnectivityResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, face_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[FaceConnectivityResults] = None, edge_connectivity_result_per_part: ansys.meshing.prime.params.primestructs.List[EdgeConnectivityResults] = None)\n\nSet the default values of the FaceAndEdgeConnectivityResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the get face and edge connectivity operation.\n\npart_ids (Iterable[int], optional) – Part ids for which face and edge connectivity data is available.\n\nface_connectivity_result_per_part (List[FaceConnectivityResults], optional) – Face connectivity result per part.\n\nedge_connectivity_result_per_part (List[EdgeConnectivityResults], optional) – Edge connectivity result per part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPairTargetType.html#matchpairtargettype","title":"MatchPairTargetType","text":"MatchPairTargetType\n\n\n\nclass ansys.meshing.prime.autogen.morpherstructs.MatchPairTargetType\n\nMatch morph target type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPairTargetType.html#overview","title":"MatchPairTargetType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nFACEZONELET\n\nOption to specify face zonelet as target.\n\nTOPOFACE\n\nOption to specify topoface as target."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPairTargetType.html#import-detail","title":"MatchPairTargetType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchPairTargetType.html#attribute-detail","title":"MatchPairTargetType > Attribute detail","text":"Attribute detail\n\n\n\nMatchPairTargetType.FACEZONELET = 1\n\nOption to specify face zonelet as target.\n\n\n\nMatchPairTargetType.TOPOFACE = 2\n\nOption to specify topoface as target."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapParams.html#wrapparams","title":"WrapParams","text":"WrapParams\n\n\n\nclass ansys.meshing.prime.WrapParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType = None, base_size: float = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, wrap_region: WrapRegion = None, number_of_threads: int = None, imprint_relative_range: float = None, imprint_iterations: int = None, json_data: dict = None, **kwargs)\n\nWrapParams defines parameters for wrapping.\n\nParameters\n\nmodel (Model) – Model to create a WrapParams object with default parameters.\n\nsizing_method (SizeFieldType, optional) – Used to define sizing method for wrapping.\n\nbase_size (float, optional) – Base size to define octree.\n\nsize_control_ids (Iterable[int], optional) – Used to construct geodesic sizes for octree refinement.\n\nsize_field_ids (Iterable[int], optional) – Used to define size field based octree refinement.\n\nwrap_region (WrapRegion, optional) – Indicates source type to extract wrapper region.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\nimprint_relative_range (float, optional) – Used to define relative range in imprinting in wrapping.\n\nimprint_iterations (int, optional) – Used to define number of imprint iterations in wrapping.\n\njson_data (dict, optional) – JSON dictionary to create a WrapParams object with provided parameters.\n\nExamples\n\n>>> wrap_params = prime.WrapParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapParams.html#overview","title":"WrapParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbase_size\n\nBase size to define octree.\n\nimprint_iterations\n\nUsed to define number of imprint iterations in wrapping.\n\nimprint_relative_range\n\nUsed to define relative range in imprinting in wrapping.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\nsize_control_ids\n\nUsed to construct geodesic sizes for octree refinement.\n\nsize_field_ids\n\nUsed to define size field based octree refinement.\n\nsizing_method\n\nUsed to define sizing method for wrapping.\n\nwrap_region\n\nIndicates source type to extract wrapper region.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapParams object.\n\nset_default\n\nSet the default values of the WrapParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapParams.html#import-detail","title":"WrapParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapParams.html#property-detail","title":"WrapParams > Property detail","text":"Property detail\n\n\n\nproperty WrapParams.base_size: float\n\nBase size to define octree.\n\n\n\nproperty WrapParams.imprint_iterations: int\n\nUsed to define number of imprint iterations in wrapping.\n\n\n\nproperty WrapParams.imprint_relative_range: float\n\nUsed to define relative range in imprinting in wrapping.\n\n\n\nproperty WrapParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\n\n\nproperty WrapParams.size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUsed to construct geodesic sizes for octree refinement.\n\n\n\nproperty WrapParams.size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUsed to define size field based octree refinement.\n\n\n\nproperty WrapParams.sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nUsed to define sizing method for wrapping.\n\n\n\nproperty WrapParams.wrap_region: WrapRegion\n\nIndicates source type to extract wrapper region."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapParams.html#method-detail","title":"WrapParams > Method detail","text":"Method detail\n\n\n\nWrapParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapParams.__str__() -> str\n\n\n\n\n\nstatic WrapParams.print_default()\n\nPrint the default values of WrapParams object.\n\nExamples\n\n>>> WrapParams.print_default()\n\n\n\nstatic WrapParams.set_default(sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType = None, base_size: float = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, wrap_region: WrapRegion = None, number_of_threads: int = None, imprint_relative_range: float = None, imprint_iterations: int = None)\n\nSet the default values of the WrapParams object.\n\nParameters\n\nsizing_method (SizeFieldType, optional) – Used to define sizing method for wrapping.\n\nbase_size (float, optional) – Base size to define octree.\n\nsize_control_ids (Iterable[int], optional) – Used to construct geodesic sizes for octree refinement.\n\nsize_field_ids (Iterable[int], optional) – Used to define size field based octree refinement.\n\nwrap_region (WrapRegion, optional) – Indicates source type to extract wrapper region.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\nimprint_relative_range (float, optional) – Used to define relative range in imprinting in wrapping.\n\nimprint_iterations (int, optional) – Used to define number of imprint iterations in wrapping."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/index.html#the-collapsetoolstructspy-module","title":"The collapsetoolstructs.py module","text":"The collapsetoolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/index.html#summary","title":"The collapsetoolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCollapseParams\n\nParameters to collapse face elements.\n\nCollapseResults\n\nResults associated with collapse face elements.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/index.html#description","title":"The collapsetoolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/SweepType.html#sweeptype","title":"SweepType","text":"SweepType\n\n\n\nclass ansys.meshing.prime.SweepType\n\nProvides the Sweep Mesh Decomposition type."},{"objectID":"Home","href":"api/ansys/meshing/prime/SweepType.html#overview","title":"SweepType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nMEDIALAXIS\n\nCreates swept blocks on axisymmetric sweepable geometries.\n\nPROGRAMCONTROLLED\n\nMultizone chooses the best decomposition method based on geometry analysis and decomposition tries.\n\nSTANDARD\n\nMultizone create mapped and swept blocks if possible (should be default).\n\nTHINSWEEP\n\nCreates swept blocks on thin wall geometries."},{"objectID":"Home","href":"api/ansys/meshing/prime/SweepType.html#import-detail","title":"SweepType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SweepType.html#attribute-detail","title":"SweepType > Attribute detail","text":"Attribute detail\n\n\n\nSweepType.MEDIALAXIS = 3\n\nCreates swept blocks on axisymmetric sweepable geometries.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSweepType.PROGRAMCONTROLLED = 4\n\nMultizone chooses the best decomposition method based on geometry analysis and decomposition tries.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSweepType.STANDARD = 1\n\nMultizone create mapped and swept blocks if possible (should be default).\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSweepType.THINSWEEP = 2\n\nCreates swept blocks on thin wall geometries.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrol/index.html#the-volumecontrolpy-module","title":"The volumecontrol.py module","text":"The volumecontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrol/index.html#summary","title":"The volumecontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nVolumeControl\n\nVolume controls provide volume specific settings on volumes specified by scope and settings specified by parameters.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrol/index.html#description","title":"The volumecontrol.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_block_model_fmd.html#ansysmeshingprimeexamplesdownload_block_model_fmd","title":"ansys.meshing.prime.examples.download_block_model_fmd","text":"ansys.meshing.prime.examples.download_block_model_fmd\n\n\n\nansys.meshing.prime.examples.download_block_model_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload CAD file for the block model example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     block_model = prime_examples.download_block_model_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(block_model, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessParams.html#addthicknessparams","title":"AddThicknessParams","text":"AddThicknessParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.AddThicknessParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, thickness: float = None, reverse_face_normal: bool = None, suggested_part_name: str = None, fix_intersections: bool = None, json_data: dict = None, **kwargs)\n\nParameters to add thickness for a given plane.\n\nParameters\n\nmodel (Model) – Model to create a AddThicknessParams object with default parameters.\n\nthickness (float, optional) – To assign the offset distance of inflation.\n\nreverse_face_normal (bool, optional) – To assign the direction of inflation.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nfix_intersections (bool, optional) – Fix intersections in concave regions.\n\njson_data (dict, optional) – JSON dictionary to create a AddThicknessParams object with provided parameters.\n\nExamples\n\n>>> add_thickness_params = prime.AddThicknessParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessParams.html#overview","title":"AddThicknessParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nfix_intersections\n\nFix intersections in concave regions.\n\nreverse_face_normal\n\nTo assign the direction of inflation.\n\nsuggested_part_name\n\nSuggested part name for created patching surfaces.\n\nthickness\n\nTo assign the offset distance of inflation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AddThicknessParams object.\n\nset_default\n\nSet the default values of the AddThicknessParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessParams.html#import-detail","title":"AddThicknessParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessParams.html#property-detail","title":"AddThicknessParams > Property detail","text":"Property detail\n\n\n\nproperty AddThicknessParams.fix_intersections: bool\n\nFix intersections in concave regions.\n\n\n\nproperty AddThicknessParams.reverse_face_normal: bool\n\nTo assign the direction of inflation.\n\n\n\nproperty AddThicknessParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces.\n\n\n\nproperty AddThicknessParams.thickness: float\n\nTo assign the offset distance of inflation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/AddThicknessParams.html#method-detail","title":"AddThicknessParams > Method detail","text":"Method detail\n\n\n\nAddThicknessParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAddThicknessParams.__str__() -> str\n\n\n\n\n\nstatic AddThicknessParams.print_default()\n\nPrint the default values of AddThicknessParams object.\n\nExamples\n\n>>> AddThicknessParams.print_default()\n\n\n\nstatic AddThicknessParams.set_default(thickness: float = None, reverse_face_normal: bool = None, suggested_part_name: str = None, fix_intersections: bool = None)\n\nSet the default values of the AddThicknessParams object.\n\nParameters\n\nthickness (float, optional) – To assign the offset distance of inflation.\n\nreverse_face_normal (bool, optional) – To assign the direction of inflation.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nfix_intersections (bool, optional) – Fix intersections in concave regions."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/index.html#the-modelpy-module","title":"The model.py module","text":"The model.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/index.html#summary","title":"The model.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nModel\n\nContains all information about Ansys Prime Server.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/model/index.html#description","title":"The model.py module > Description","text":"Description\n\nModule containing the managing logic of the Prime model."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_pcb_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_pcb_scdoc","title":"ansys.meshing.prime.examples.examples.download_pcb_scdoc","text":"ansys.meshing.prime.examples.examples.download_pcb_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_pcb_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload SCDOC file for the pcb example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pcb = prime_examples.download_pcb_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pcb, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsResults.html#createintersectionedgeloopsresults","title":"CreateIntersectionEdgeLoopsResults","text":"CreateIntersectionEdgeLoopsResults\n\n\n\nclass ansys.meshing.prime.autogen.featureextractionstructs.CreateIntersectionEdgeLoopsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, extracted_ids: ansys.meshing.prime.params.primestructs.List[ExtractedFeatureIds] = None, json_data: dict = None, **kwargs)\n\nResults for the edge loops created by intersection of two groups of face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateIntersectionEdgeLoopsResults object with default parameters.\n\nprocessing_time (float, optional) – Time taken to extract edges formed by intersecting faces.\n\nerror_code (ErrorCode, optional) – Error code returned by edge extraction function.\n\nextracted_ids (List[ExtractedFeatureIds], optional) – List of ExtractedFeatureIds that contains ids of extracted edges.\n\njson_data (dict, optional) – JSON dictionary to create a CreateIntersectionEdgeLoopsResults object with provided parameters.\n\nExamples\n\n>>> create_intersection_edge_loops_results = prime.CreateIntersectionEdgeLoopsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsResults.html#overview","title":"CreateIntersectionEdgeLoopsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code returned by edge extraction function.\n\nextracted_ids\n\nList of ExtractedFeatureIds that contains ids of extracted edges.\n\nprocessing_time\n\nTime taken to extract edges formed by intersecting faces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateIntersectionEdgeLoopsResults object.\n\nset_default\n\nSet the default values of the CreateIntersectionEdgeLoopsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsResults.html#import-detail","title":"CreateIntersectionEdgeLoopsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsResults.html#property-detail","title":"CreateIntersectionEdgeLoopsResults > Property detail","text":"Property detail\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code returned by edge extraction function.\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.extracted_ids: ansys.meshing.prime.params.primestructs.List[ExtractedFeatureIds]\n\nList of ExtractedFeatureIds that contains ids of extracted edges.\n\n\n\nproperty CreateIntersectionEdgeLoopsResults.processing_time: float\n\nTime taken to extract edges formed by intersecting faces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/CreateIntersectionEdgeLoopsResults.html#method-detail","title":"CreateIntersectionEdgeLoopsResults > Method detail","text":"Method detail\n\n\n\nCreateIntersectionEdgeLoopsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateIntersectionEdgeLoopsResults.__str__() -> str\n\n\n\n\n\nstatic CreateIntersectionEdgeLoopsResults.print_default()\n\nPrint the default values of CreateIntersectionEdgeLoopsResults object.\n\nExamples\n\n>>> CreateIntersectionEdgeLoopsResults.print_default()\n\n\n\nstatic CreateIntersectionEdgeLoopsResults.set_default(processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, extracted_ids: ansys.meshing.prime.params.primestructs.List[ExtractedFeatureIds] = None)\n\nSet the default values of the CreateIntersectionEdgeLoopsResults object.\n\nParameters\n\nprocessing_time (float, optional) – Time taken to extract edges formed by intersecting faces.\n\nerror_code (ErrorCode, optional) – Error code returned by edge extraction function.\n\nextracted_ids (List[ExtractedFeatureIds], optional) – List of ExtractedFeatureIds that contains ids of extracted edges."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/index.html#the-volumemeshtoolstructspy-module","title":"The volumemeshtoolstructs.py module","text":"The volumemeshtoolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/index.html#summary","title":"The volumemeshtoolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAutoNodeMoveParams\n\nParameters used to improve volume mesh by auto node move.\n\nCheckMeshParams\n\nParameters used to check mesh.\n\nCheckMeshResults\n\nResult associated with the check mesh operation.\n\nVolumeMeshToolResults\n\nResult associated with the volume mesh tool operation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/index.html#description","title":"The volumemeshtoolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/index.html#the-examplespy-module","title":"The examples.py module","text":"The examples.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/index.html#summary","title":"The examples.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ndownload_block_model_fmd\n\nDownload CAD file for the block model example.\n\ndownload_block_model_pmdat\n\nDownload PMDAT file for the block model example.\n\ndownload_block_model_scdoc\n\nDownload CAD file for the block model example.\n\ndownload_bracket_dsco\n\nDownload the DSCO file for the bracket scaffold example.\n\ndownload_bracket_fmd\n\nDownload the FMD file for the bracket scaffold example.\n\ndownload_bracket_scdoc\n\nDownload the SCDOC file for the bracket scaffold example.\n\ndownload_deformed_blade_dsco\n\nDownload the DSCO file for the turbine blade example.\n\ndownload_deformed_blade_fmd\n\nDownload the FMD file for the turbine blade example.\n\ndownload_deformed_blade_scdoc\n\nDownload the SCDOC file for the turbine blade example.\n\ndownload_elbow_dsco\n\nDownload the DSCO file for the mixing elbow example.\n\ndownload_elbow_fmd\n\nDownload the FMD file for the mixing elbow example.\n\ndownload_elbow_pmdat\n\nDownload the PMDAT file for the mixing elbow example.\n\ndownload_elbow_scdoc\n\nDownload the SCDOC file for the mixing elbow example.\n\ndownload_f1_rw_drs_stl\n\nDownload STL file for the generic f1 rear wing example.\n\ndownload_f1_rw_enclosure_stl\n\nDownload STL file for the generic f1 rear wing example.\n\ndownload_f1_rw_end_plates_stl\n\nDownload STL file for the generic f1 rear wing example.\n\ndownload_f1_rw_main_plane_stl\n\nDownload STL file for the generic f1 rear wing example.\n\ndownload_multi_layer_quad_mesh_pcb_dsco\n\nDownload the DSCO file for the multi-layer PCB meshing example.\n\ndownload_multi_layer_quad_mesh_pcb_fmd\n\nDownload the FMD file for the multi-layer PCB meshing example.\n\ndownload_multi_layer_quad_mesh_pcb_pmdat\n\nDownload the PMDAT file for the multi-layer PCB meshing example.\n\ndownload_multi_layer_quad_mesh_pcb_pmdb\n\nDownload the PMDB file for the multi-layer PCB meshing example.\n\ndownload_multi_layer_quad_mesh_pcb_scdoc\n\nDownload the SCDOC file for the multi-layer PCB meshing example.\n\ndownload_pcb_pmdat\n\nDownload the PMDAT file for the PCB example.\n\ndownload_pcb_scdoc\n\nDownload SCDOC file for the pcb example.\n\ndownload_pipe_tee_dsco\n\nDownload the DSCO file for the pipe tee example.\n\ndownload_pipe_tee_fmd\n\nDownload the FMD file for the pipe tee example.\n\ndownload_pipe_tee_pmdat\n\nDownload the PMDAT file for the pipe tee example.\n\ndownload_pipe_tee_scdoc\n\nDownload the SCDOC file for the pipe tee example.\n\ndownload_saddle_bracket_dsco\n\nDownload DSCO file for the saddle bracket example.\n\ndownload_saddle_bracket_fmd\n\nDownload FMD file for the saddle bracket example\n\ndownload_saddle_bracket_scdoc\n\nDownload SCDOC file for the saddle bracket example.\n\ndownload_solder_ball_fmd\n\nDownload a FMD file for the solder ball example.\n\ndownload_solder_ball_target_fmd\n\nDownload a FMD file for the solder ball example.\n\ndownload_toy_car_dsco\n\nDownload the DSCO file for the toy car example.\n\ndownload_toy_car_fmd\n\nDownload the FMD file for the toy car example.\n\ndownload_toy_car_pmdat\n\nDownload the PMDAT file for the toy car example.\n\ndownload_toy_car_scdoc\n\nDownload the SCDOC file for the toy car example.\n\ndownload_turbine_blade_cdb\n\nDownload the CDB file for the turbine blade example.\n\ndownload_wheel_ground_dsco\n\nDownload the DSCO file for the wheel ground contact patch example.\n\ndownload_wheel_ground_fmd\n\nDownload the FMD file for the wheel ground contact patch example.\n\ndownload_wheel_ground_scdoc\n\nDownload the SCDOC file for the wheel ground contact patch example.\n\nget_file\n\nDownload a PyPrimeMesh example file from the GitHub repository.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/index.html#description","title":"The examples.py module > Description","text":"Description\n\nExamples module for PyPrimeMesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesParams.html#extracttopovolumesparams","title":"ExtractTopoVolumesParams","text":"ExtractTopoVolumesParams\n\n\n\nclass ansys.meshing.prime.ExtractTopoVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, zone_name: str = None, json_data: dict = None, **kwargs)\n\nParameters to extract flow topovolumes.\n\nParameters\n\nmodel (Model) – Model to create a ExtractTopoVolumesParams object with default parameters.\n\nzone_name (str, optional) – Specifies zone name to associate extracted flow topovolumes.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractTopoVolumesParams object with provided parameters.\n\nExamples\n\n>>> extract_topo_volumes_params = prime.ExtractTopoVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesParams.html#overview","title":"ExtractTopoVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nzone_name\n\nSpecifies zone name to associate extracted flow topovolumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractTopoVolumesParams object.\n\nset_default\n\nSet the default values of the ExtractTopoVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesParams.html#import-detail","title":"ExtractTopoVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesParams.html#property-detail","title":"ExtractTopoVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty ExtractTopoVolumesParams.zone_name: str\n\nSpecifies zone name to associate extracted flow topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesParams.html#method-detail","title":"ExtractTopoVolumesParams > Method detail","text":"Method detail\n\n\n\nExtractTopoVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractTopoVolumesParams.__str__() -> str\n\n\n\n\n\nstatic ExtractTopoVolumesParams.print_default()\n\nPrint the default values of ExtractTopoVolumesParams object.\n\nExamples\n\n>>> ExtractTopoVolumesParams.print_default()\n\n\n\nstatic ExtractTopoVolumesParams.set_default(zone_name: str = None)\n\nSet the default values of the ExtractTopoVolumesParams object.\n\nParameters\n\nzone_name (str, optional) – Specifies zone name to associate extracted flow topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetLeakPreventionsResults.html#setleakpreventionsresults","title":"SetLeakPreventionsResults","text":"SetLeakPreventionsResults\n\n\n\nclass ansys.meshing.prime.SetLeakPreventionsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with set leak preventions.\n\nParameters\n\nmodel (Model) – Model to create a SetLeakPreventionsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set leak preventions.\n\nids (Iterable[int], optional) – Ids of added leak prevention controls.\n\njson_data (dict, optional) – JSON dictionary to create a SetLeakPreventionsResults object with provided parameters.\n\nExamples\n\n>>> set_leak_preventions_results = prime.SetLeakPreventionsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetLeakPreventionsResults.html#overview","title":"SetLeakPreventionsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set leak preventions.\n\nids\n\nIds of added leak prevention controls.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetLeakPreventionsResults object.\n\nset_default\n\nSet the default values of the SetLeakPreventionsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetLeakPreventionsResults.html#import-detail","title":"SetLeakPreventionsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetLeakPreventionsResults.html#property-detail","title":"SetLeakPreventionsResults > Property detail","text":"Property detail\n\n\n\nproperty SetLeakPreventionsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set leak preventions.\n\n\n\nproperty SetLeakPreventionsResults.ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of added leak prevention controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetLeakPreventionsResults.html#method-detail","title":"SetLeakPreventionsResults > Method detail","text":"Method detail\n\n\n\nSetLeakPreventionsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetLeakPreventionsResults.__str__() -> str\n\n\n\n\n\nstatic SetLeakPreventionsResults.print_default()\n\nPrint the default values of SetLeakPreventionsResults object.\n\nExamples\n\n>>> SetLeakPreventionsResults.print_default()\n\n\n\nstatic SetLeakPreventionsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SetLeakPreventionsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the set leak preventions.\n\nids (Iterable[int], optional) – Ids of added leak prevention controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanager/MaterialPointManager.html#materialpointmanager","title":"MaterialPointManager","text":"MaterialPointManager\n\n\n\nclass ansys.meshing.prime.autogen.materialpointmanager.MaterialPointManager(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nProvide functions for material point creation, deletion and queries.\n\nParameters\n\nmodel (Model) – Server model to create MaterialPointManager object.\n\nid (int) – Id of the MaterialPointManager.\n\nobject_id (int) – Object id of the MaterialPointManager.\n\nname (str) – Name of the MaterialPointManager."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanager/MaterialPointManager.html#overview","title":"MaterialPointManager > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_material_point\n\nCreates a material point at the given coordinates.\n\ndelete_material_point\n\nDeletes material point identified with the given name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of MaterialPointManager.\n\nname\n\nGet the name of MaterialPointManager.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanager/MaterialPointManager.html#import-detail","title":"MaterialPointManager > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanager/MaterialPointManager.html#property-detail","title":"MaterialPointManager > Property detail","text":"Property detail\n\n\n\nproperty MaterialPointManager.id\n\nGet the id of MaterialPointManager.\n\n\n\nproperty MaterialPointManager.name\n\nGet the name of MaterialPointManager."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanager/MaterialPointManager.html#method-detail","title":"MaterialPointManager > Method detail","text":"Method detail\n\n\n\nMaterialPointManager.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMaterialPointManager.create_material_point(suggested_name: str, coords: ansys.meshing.prime.params.primestructs.Iterable[float], params: ansys.meshing.prime.params.primestructs.CreateMaterialPointParams) -> ansys.meshing.prime.params.primestructs.CreateMaterialPointResults\n\nCreates a material point at the given coordinates.\n\nParameters\n\nsuggested_name (str) – Name suggested for the material point.\n\ncoords (Iterable[float]) – Coordinates of material point.\n\nparams (CreateMaterialPointParams) – Parameters used to create material point.\n\nReturns\n\nReturns the result with material point name and id.\n\nReturn type\n\nCreateMaterialPointResults\n\nNotes\n\nA material point is created on calling this API.\n\nExamples\n\n>>> material_point_results = model.control_data.create_material_point(\"Fluid\", [1.0,2,0,3.0], params)\n\n\n\nMaterialPointManager.delete_material_point(name: str) -> ansys.meshing.prime.params.primestructs.DeleteMaterialPointResults\n\nDeletes material point identified with the given name.\n\nParameters\n\nname (str) – Name of the material point to be deleted.\n\nReturns\n\nReturns the DeleteMaterialPointResults.\n\nReturn type\n\nDeleteMaterialPointResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.material_point_data.delete_material_point(\"fluid\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanager/index.html#the-materialpointmanagerpy-module","title":"The materialpointmanager.py module","text":"The materialpointmanager.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanager/index.html#summary","title":"The materialpointmanager.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMaterialPointManager\n\nProvide functions for material point creation, deletion and queries.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanager/index.html#description","title":"The materialpointmanager.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrol/SizeControl.html#sizecontrol","title":"SizeControl","text":"SizeControl\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrol.SizeControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nSize control is used to compute the size field.\n\nThe size field is computed based on the size control defined.\nDifferent type of size controls provide control over how the mesh size is distributed on a surface or within the volume.\n\nParameters\n\nmodel (Model) – Server model to create SizeControl object.\n\nid (int) – Id of the SizeControl.\n\nobject_id (int) – Object id of the SizeControl.\n\nname (str) – Name of the SizeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrol/SizeControl.html#overview","title":"SizeControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_boi_sizing_params\n\nGet the body of influence sizing parameters of size control.\n\nget_curvature_sizing_params\n\nGet the curvature sizing parameters of size control.\n\nget_hard_sizing_params\n\nGet the hard sizing parameters of size control.\n\nget_meshed_sizing_params\n\nGet the meshed sizing parameters of size control.\n\nget_proximity_sizing_params\n\nGet the proximity sizing parameters of size control.\n\nget_scope\n\nGet the scope used by size control to evaluate entities.\n\nget_sizing_type\n\nGets the sizing type for the size control.\n\nget_soft_sizing_params\n\nGet the soft sizing parameters of size control.\n\nget_soi_sizing_params\n\nGet the sphere of influence sizing parameters of size control.\n\nget_summary\n\nGet the size control summary along with the evaluated scope for the provided parameters..\n\nset_boi_sizing_params\n\nSet the body of influence sizing parameters to compute volumetric size field.\n\nset_curvature_sizing_params\n\nSet the curvature sizing parameters to compute volumetric size field.\n\nset_hard_sizing_params\n\nSet the hard sizing parameters to compute volumetric size field.\n\nset_meshed_sizing_params\n\nSet the meshed sizing parameters to compute volumetric size field.\n\nset_proximity_sizing_params\n\nSet the proximity sizing parameters to compute volumetric size field.\n\nset_scope\n\nSet the scope for size control to evaluate.\n\nset_soft_sizing_params\n\nSet the soft sizing parameters to compute volumetric size field.\n\nset_soi_sizing_params\n\nSet the sphere of influence sizing parameters to compute volumetric size field.\n\nset_suggested_name\n\nSet the unique name for the size control based on the given suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of SizeControl.\n\nname\n\nGet the name of SizeControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrol/SizeControl.html#import-detail","title":"SizeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrol/SizeControl.html#property-detail","title":"SizeControl > Property detail","text":"Property detail\n\n\n\nproperty SizeControl.id\n\nGet the id of SizeControl.\n\n\n\nproperty SizeControl.name\n\nGet the name of SizeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrol/SizeControl.html#method-detail","title":"SizeControl > Method detail","text":"Method detail\n\n\n\nSizeControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeControl.get_boi_sizing_params() -> ansys.meshing.prime.params.primestructs.BoiSizingParams\n\nGet the body of influence sizing parameters of size control.\n\nReturns\n\nReturn the BoiSizingParams.\n\nReturn type\n\nBoiSizingParams\n\nExamples\n\n>>> params = size_control.get_boi_sizing_params()\n\n\n\nSizeControl.get_curvature_sizing_params() -> ansys.meshing.prime.params.primestructs.CurvatureSizingParams\n\nGet the curvature sizing parameters of size control.\n\nReturns\n\nReturn the CurvatureSizingParams.\n\nReturn type\n\nCurvatureSizingParams\n\nExamples\n\n>>> params = size_control.get_curvature_sizing_params()\n\n\n\nSizeControl.get_hard_sizing_params() -> ansys.meshing.prime.params.primestructs.HardSizingParams\n\nGet the hard sizing parameters of size control.\n\nReturns\n\nReturn the HardSizingParams.\n\nReturn type\n\nHardSizingParams\n\nExamples\n\n>>> params = size_control.get_hard_sizing_params()\n\n\n\nSizeControl.get_meshed_sizing_params() -> ansys.meshing.prime.params.primestructs.MeshedSizingParams\n\nGet the meshed sizing parameters of size control.\n\nReturns\n\nReturn the MeshedSizingParams.\n\nReturn type\n\nMeshedSizingParams\n\nExamples\n\n>>> params = size_control.get_meshed_sizing_params()\n\n\n\nSizeControl.get_proximity_sizing_params() -> ansys.meshing.prime.params.primestructs.ProximitySizingParams\n\nGet the proximity sizing parameters of size control.\n\nReturns\n\nReturn the ProximitySizingParams.\n\nReturn type\n\nProximitySizingParams\n\nExamples\n\n>>> params = size_control.get_proximity_sizing_params()\n\n\n\nSizeControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGet the scope used by size control to evaluate entities.\n\nReturns\n\nReturn the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = size_control.get_scope()\n\n\n\nSizeControl.get_sizing_type() -> ansys.meshing.prime.params.primestructs.SizingType\n\nGets the sizing type for the size control.\n\nReturns\n\nReturns the sizing type of the control.\n\nReturn type\n\nSizingType\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> type = size_control.get_sizing_type()\n\n\n\nSizeControl.get_soft_sizing_params() -> ansys.meshing.prime.params.primestructs.SoftSizingParams\n\nGet the soft sizing parameters of size control.\n\nReturns\n\nReturn the SoftSizingParams.\n\nReturn type\n\nSoftSizingParams\n\nExamples\n\n>>> params = size_control.get_soft_sizing_params()\n\n\n\nSizeControl.get_soi_sizing_params() -> ansys.meshing.prime.params.primestructs.SoiSizingParams\n\nGet the sphere of influence sizing parameters of size control.\n\nReturns\n\nReturns the SoiSizingParams.\n\nReturn type\n\nSoiSizingParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = size_control.get_soi_sizing_params()\n\n\n\nSizeControl.get_summary(params: ansys.meshing.prime.params.primestructs.SizeControlSummaryParams) -> ansys.meshing.prime.params.primestructs.SizeControlSummaryResult\n\nGet the size control summary along with the evaluated scope for the provided parameters..\n\nParameters\n\nparams (SizeControlSummaryParams) – Size control summary parameters.\n\nReturns\n\nReturn the SizeControlSummaryResult.\n\nReturn type\n\nSizeControlSummaryResult\n\nExamples\n\n>>> results = size_control.get_summary(prime.SizeControlSummaryParams(model=model))\n\n\n\nSizeControl.set_boi_sizing_params(params: ansys.meshing.prime.params.primestructs.BoiSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the body of influence sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (BoiSizingParams) – Parameters that enables you to set sizing on the body of influence region.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_boi_sizing_params(\n>>>                  prime.BoiSizingParams(model=model,\n>>>                  max = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_curvature_sizing_params(params: ansys.meshing.prime.params.primestructs.CurvatureSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the curvature sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (CurvatureSizingParams) – Parameters that enables you to set the normal angle as the maximum allowable angle at which one element edge may span.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_curvature_sizing_params(\n>>>                  prime.CurvatureSizingParams(model=model,\n>>>                  min = 0.1, max = 1.0, growth_rate = 1.2,\n>>>                  normal_angle = 18))\n\n\n\nSizeControl.set_hard_sizing_params(params: ansys.meshing.prime.params.primestructs.HardSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the hard sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (HardSizingParams) – Parameters that enables you to set uniform size based on the specified size.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_hard_sizing_params(\n>>>                  prime.HardSizingParams(model=model,\n>>>                  min = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_meshed_sizing_params(params: ansys.meshing.prime.params.primestructs.MeshedSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the meshed sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (MeshedSizingParams) – Parameters that enables you to set the sizes based on existing sizes.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_meshed_sizing_params(\n>>>                  prime.MeshedSizingParams(model=model,\n>>>                  growth_rate = 1.2))\n\n\n\nSizeControl.set_proximity_sizing_params(params: ansys.meshing.prime.params.primestructs.ProximitySizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the proximity sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (ProximitySizingParams) – Parameters that enables you to specify number of elements in the gaps.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_proximity_sizing_params(\n>>>                  prime.ProximitySizingParams(model=model,\n>>>                  min = 0.1, max = 1.0, growth_rate = 1.2))\n\n\n\nSizeControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSet the scope for size control to evaluate.\n\nSize control uses scope to evaluate entities for which size field needs to be computed.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for size field computation.\n\nReturns\n\nReturn a SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> size_control.set_scope(prime.ScopeDefinition(model=model,\n>>>                        entity_type = ScopeEntity.FACEZONELETS,\n>>>                        evaluation_type = ScopeEvaluationType.LABELS,\n>>>                        label_expression = \"inlet\"))\n\n\n\nSizeControl.set_soft_sizing_params(params: ansys.meshing.prime.params.primestructs.SoftSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the soft sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (SoftSizingParams) – Parameters that enables you to set the maximum size on scoped face zonelets.\n\nReturns\n\nReturn the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nExamples\n\n>>> size_control.set_soft_sizing_params(\n>>>                  prime.SoftSizingParams(model=model,\n>>>                  max = 1.0, growth_rate = 1.2))\n\n\n\nSizeControl.set_soi_sizing_params(params: ansys.meshing.prime.params.primestructs.SoiSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults\n\nSet the sphere of influence sizing parameters to compute volumetric size field.\n\nParameters\n\nparams (SoiSizingParams) – Parameters that enables you to set sizing on the spherical influence region.\n\nReturns\n\nReturns the SetSizingResults.\n\nReturn type\n\nSetSizingResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> size_control.set_soi_sizing_params(\n>>>                  prime.SoiSizingParams(model=model,\n>>>                  max = 0.1, growth_rate = 1.2))\n\n\n\nSizeControl.set_suggested_name(name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSet the unique name for the size control based on the given suggested name.\n\nParameters\n\nname (str) – Suggested name for the size control.\n\nReturns\n\nReturn a name of the size control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> size_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposer/VTComposer.html#vtcomposer","title":"VTComposer","text":"VTComposer\n\n\n\nclass ansys.meshing.prime.autogen.vtcomposer.VTComposer(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, part_id: int)\n\nVTComposer is used for fix topology corrections like separate, pinch.\n\nParameters\n\nmodel (Model) – Server model to create VTComposer object.\n\npart_id (int) – Id of the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposer/VTComposer.html#overview","title":"VTComposer > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nseparate_faces_with_interior_edges\n\nSeparates the given topofaces having interior edges using the given VT Composer parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VTComposer.\n\n__exit__\n\nExit context for VTComposer.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposer/VTComposer.html#import-detail","title":"VTComposer > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/vtcomposer/VTComposer.html#method-detail","title":"VTComposer > Method detail","text":"Method detail\n\n\n\nVTComposer.__enter__()\n\nEnter context for VTComposer.\n\n\n\nVTComposer.__exit__(type, value, traceback)\n\nExit context for VTComposer.\n\n\n\nVTComposer.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVTComposer.separate_faces_with_interior_edges(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.VTComposerParams) -> ansys.meshing.prime.params.primestructs.VTComposerResults\n\nSeparates the given topofaces having interior edges using the given VT Composer parameters.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of input topofaces.\n\nparams (VTComposerParams) – VT composer parameters.\n\nReturns\n\nReturn results in VTComposerResults.\n\nReturn type\n\nVTComposerResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = vtcomposer.separate_faces_with_interior_edges([1,2,3,4,5], params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsResult.html#wrapperclosegapsresult","title":"WrapperCloseGapsResult","text":"WrapperCloseGapsResult\n\n\n\nclass ansys.meshing.prime.autogen.wrapperstructs.WrapperCloseGapsResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None, json_data: dict = None, **kwargs)\n\nResult structure associated with close gaps operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapperCloseGapsResult object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with a close gaps operation.\n\npart_id (int, optional) – Id of part created with gap cover patches.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperCloseGapsResult object with provided parameters.\n\nExamples\n\n>>> wrapper_close_gaps_result = prime.WrapperCloseGapsResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsResult.html#overview","title":"WrapperCloseGapsResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a close gaps operation.\n\npart_id\n\nId of part created with gap cover patches.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperCloseGapsResult object.\n\nset_default\n\nSet the default values of the WrapperCloseGapsResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsResult.html#import-detail","title":"WrapperCloseGapsResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsResult.html#property-detail","title":"WrapperCloseGapsResult > Property detail","text":"Property detail\n\n\n\nproperty WrapperCloseGapsResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a close gaps operation.\n\n\n\nproperty WrapperCloseGapsResult.part_id: int\n\nId of part created with gap cover patches."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrapperstructs/WrapperCloseGapsResult.html#method-detail","title":"WrapperCloseGapsResult > Method detail","text":"Method detail\n\n\n\nWrapperCloseGapsResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperCloseGapsResult.__str__() -> str\n\n\n\n\n\nstatic WrapperCloseGapsResult.print_default()\n\nPrint the default values of WrapperCloseGapsResult object.\n\nExamples\n\n>>> WrapperCloseGapsResult.print_default()\n\n\n\nstatic WrapperCloseGapsResult.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, part_id: int = None)\n\nSet the default values of the WrapperCloseGapsResult object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with a close gaps operation.\n\npart_id (int, optional) – Id of part created with gap cover patches."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferResults.html#surferresults","title":"SurferResults","text":"SurferResults\n\n\n\nclass ansys.meshing.prime.SurferResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, topofaces_not_projected_on_geometry: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with the surface mesh.\n\nParameters\n\nmodel (Model) – Model to create a SurferResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\ntopofaces_not_projected_on_geometry (Iterable[int], optional) – Ids of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled.\n\njson_data (dict, optional) – JSON dictionary to create a SurferResults object with provided parameters.\n\nExamples\n\n>>> surfer_results = prime.SurferResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferResults.html#overview","title":"SurferResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\ntopofaces_not_projected_on_geometry\n\nIds of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurferResults object.\n\nset_default\n\nSet the default values of the SurferResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferResults.html#import-detail","title":"SurferResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferResults.html#property-detail","title":"SurferResults > Property detail","text":"Property detail\n\n\n\nproperty SurferResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty SurferResults.topofaces_not_projected_on_geometry: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferResults.html#method-detail","title":"SurferResults > Method detail","text":"Method detail\n\n\n\nSurferResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurferResults.__str__() -> str\n\n\n\n\n\nstatic SurferResults.print_default()\n\nPrint the default values of SurferResults object.\n\nExamples\n\n>>> SurferResults.print_default()\n\n\n\nstatic SurferResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, topofaces_not_projected_on_geometry: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SurferResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\ntopofaces_not_projected_on_geometry (Iterable[int], optional) – Ids of topofaces projected to facets instead of CAD geometry, when projectOnGeometry is enabled."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineFeatureCaptureType.html#splinefeaturecapturetype","title":"SplineFeatureCaptureType","text":"SplineFeatureCaptureType\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.SplineFeatureCaptureType\n\nOptions to capture features in spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineFeatureCaptureType.html#overview","title":"SplineFeatureCaptureType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBYANGLE\n\nUses angle for capturing features in spline.\n\nBYEDGES\n\nUse edges for capturing features in spline.\n\nIGNORE\n\nIgnores feature capture in spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineFeatureCaptureType.html#import-detail","title":"SplineFeatureCaptureType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineFeatureCaptureType.html#attribute-detail","title":"SplineFeatureCaptureType > Attribute detail","text":"Attribute detail\n\n\n\nSplineFeatureCaptureType.BYANGLE = 1\n\nUses angle for capturing features in spline.\n\n\n\nSplineFeatureCaptureType.BYEDGES = 2\n\nUse edges for capturing features in spline.\n\n\n\nSplineFeatureCaptureType.IGNORE = 0\n\nIgnores feature capture in spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreParams.html#hexcoreparams","title":"HexCoreParams","text":"HexCoreParams\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.HexCoreParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, transition_size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, buffer_layers: int = None, rel_peel_layer_offset: float = None, transition_layer_type: HexCoreTransitionLayerType = None, cell_element_type: HexCoreCellElementType = None, surface_mesh_size_scaling: SurfaceMeshSizeScaling = None, enable_region_based_hexcore: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control hexahedral mesh generation.\n\nParameters\n\nmodel (Model) – Model to create a HexCoreParams object with default parameters.\n\ntransition_size_field_type (SizeFieldType, optional) – Size field type to be used for transition volume (volume between hexcore and boundary).\n\nbuffer_layers (int, optional) – Minimum number of cell layers of the same size before the cell size halves or doubles.\n\nrel_peel_layer_offset (float, optional) – Gap between hexahedral core and geometry surface relative to the surface mesh size.\n\ntransition_layer_type (HexCoreTransitionLayerType, optional) – Handle size transition of hex cells.\n\ncell_element_type (HexCoreCellElementType, optional) – Cell element type of hex-shaped cells.\n\nsurface_mesh_size_scaling (SurfaceMeshSizeScaling, optional) – Setting for scaling surface mesh size for hexcore refinement.\n\nenable_region_based_hexcore (bool, optional) – Checks whether to enable region based hexcore or not.\n\njson_data (dict, optional) – JSON dictionary to create a HexCoreParams object with provided parameters.\n\nExamples\n\n>>> hex_core_params = prime.HexCoreParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreParams.html#overview","title":"HexCoreParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbuffer_layers\n\nMinimum number of cell layers of the same size before the cell size halves or doubles.\n\ncell_element_type\n\nCell element type of hex-shaped cells.\n\nenable_region_based_hexcore\n\nChecks whether to enable region based hexcore or not.\n\nrel_peel_layer_offset\n\nGap between hexahedral core and geometry surface relative to the surface mesh size.\n\nsurface_mesh_size_scaling\n\nSetting for scaling surface mesh size for hexcore refinement.\n\ntransition_layer_type\n\nHandle size transition of hex cells.\n\ntransition_size_field_type\n\nSize field type to be used for transition volume (volume between hexcore and boundary).\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of HexCoreParams object.\n\nset_default\n\nSet the default values of the HexCoreParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreParams.html#import-detail","title":"HexCoreParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreParams.html#property-detail","title":"HexCoreParams > Property detail","text":"Property detail\n\n\n\nproperty HexCoreParams.buffer_layers: int\n\nMinimum number of cell layers of the same size before the cell size halves or doubles.\n\n\n\nproperty HexCoreParams.cell_element_type: HexCoreCellElementType\n\nCell element type of hex-shaped cells.\n\n\n\nproperty HexCoreParams.enable_region_based_hexcore: bool\n\nChecks whether to enable region based hexcore or not.\n\n\n\nproperty HexCoreParams.rel_peel_layer_offset: float\n\nGap between hexahedral core and geometry surface relative to the surface mesh size.\n\n\n\nproperty HexCoreParams.surface_mesh_size_scaling: SurfaceMeshSizeScaling\n\nSetting for scaling surface mesh size for hexcore refinement.\n\n\n\nproperty HexCoreParams.transition_layer_type: HexCoreTransitionLayerType\n\nHandle size transition of hex cells.\n\n\n\nproperty HexCoreParams.transition_size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nSize field type to be used for transition volume (volume between hexcore and boundary)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreParams.html#method-detail","title":"HexCoreParams > Method detail","text":"Method detail\n\n\n\nHexCoreParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nHexCoreParams.__str__() -> str\n\n\n\n\n\nstatic HexCoreParams.print_default()\n\nPrint the default values of HexCoreParams object.\n\nExamples\n\n>>> HexCoreParams.print_default()\n\n\n\nstatic HexCoreParams.set_default(transition_size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, buffer_layers: int = None, rel_peel_layer_offset: float = None, transition_layer_type: HexCoreTransitionLayerType = None, cell_element_type: HexCoreCellElementType = None, surface_mesh_size_scaling: SurfaceMeshSizeScaling = None, enable_region_based_hexcore: bool = None)\n\nSet the default values of the HexCoreParams object.\n\nParameters\n\ntransition_size_field_type (SizeFieldType, optional) – Size field type to be used for transition volume (volume between hexcore and boundary).\n\nbuffer_layers (int, optional) – Minimum number of cell layers of the same size before the cell size halves or doubles.\n\nrel_peel_layer_offset (float, optional) – Gap between hexahedral core and geometry surface relative to the surface mesh size.\n\ntransition_layer_type (HexCoreTransitionLayerType, optional) – Handle size transition of hex cells.\n\ncell_element_type (HexCoreCellElementType, optional) – Cell element type of hex-shaped cells.\n\nsurface_mesh_size_scaling (SurfaceMeshSizeScaling, optional) – Setting for scaling surface mesh size for hexcore refinement.\n\nenable_region_based_hexcore (bool, optional) – Checks whether to enable region based hexcore or not."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpher/Morpher.html#morpher","title":"Morpher","text":"Morpher\n\n\n\nclass ansys.meshing.prime.autogen.morpher.Morpher(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nMorpher contain functionalities to change the geometry, adapting the mesh accordingly without a recomputation.\n\nParameters\n\nmodel (Model) – Server model to create Morpher object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpher/Morpher.html#overview","title":"Morpher > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nmatch_morph\n\nMatches source and target zonelets defined using match pairs with prescribed boundary conditions for each pair. Also, solves boundary condition parameters to define uniform surface and volume regions in source neighborhood.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Morpher.\n\n__exit__\n\nExit context for Morpher.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpher/Morpher.html#import-detail","title":"Morpher > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpher/Morpher.html#method-detail","title":"Morpher > Method detail","text":"Method detail\n\n\n\nMorpher.__enter__()\n\nEnter context for Morpher.\n\n\n\nMorpher.__exit__(type, value, traceback)\n\nExit context for Morpher.\n\n\n\nMorpher.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMorpher.match_morph(part_id: int, match_pairs: List[ansys.meshing.prime.params.primestructs.MatchPair], match_morph_params: ansys.meshing.prime.params.primestructs.MatchMorphParams, bc_params: ansys.meshing.prime.params.primestructs.MorphBCParams, solve_params: ansys.meshing.prime.params.primestructs.MorphSolveParams) -> ansys.meshing.prime.params.primestructs.MatchMorphResults\n\nMatches source and target zonelets defined using match pairs with prescribed boundary conditions for each pair. Also, solves boundary condition parameters to define uniform surface and volume regions in source neighborhood.\n\nParameters\n\npart_id (int) – Id of source part.\n\nmatch_pairs (MatchPairArray) – Array of  source and target match pairs.\n\nmatch_morph_params (MatchMorphParams) – Match morph parameters.\n\nbc_params (MorphBCParams) – Morph boundary condition parameters.\n\nsolve_params (MorphSolveParams) – Morpher solve parameters.\n\nReturns\n\nReturns the MatchMorphResults.\n\nReturn type\n\nMatchMorphResults\n\nExamples\n\n>>> result = morph.match_morph([match_pair1, match_pair2], match_morph_params, bc_params, solve_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/ControlPointSelection.html#controlpointselection","title":"ControlPointSelection","text":"ControlPointSelection\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.ControlPointSelection\n\nControl point selection type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/ControlPointSelection.html#overview","title":"ControlPointSelection > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nMANUAL\n\nManual Spline control point selection.\n\nPROGRAMCONTROLLED\n\nProgram controlled spline control point selection."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/ControlPointSelection.html#import-detail","title":"ControlPointSelection > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/ControlPointSelection.html#attribute-detail","title":"ControlPointSelection > Attribute detail","text":"Attribute detail\n\n\n\nControlPointSelection.MANUAL = 0\n\nManual Spline control point selection.\n\n\n\nControlPointSelection.PROGRAMCONTROLLED = 1\n\nProgram controlled spline control point selection."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeResults.html#volumetricsizefieldcomputeresults","title":"VolumetricSizeFieldComputeResults","text":"VolumetricSizeFieldComputeResults\n\n\n\nclass ansys.meshing.prime.VolumetricSizeFieldComputeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, size_field_id: int = None, json_data: dict = None, **kwargs)\n\nResults associated with the compute volumetric size field operation.\n\nParameters\n\nmodel (Model) – Model to create a VolumetricSizeFieldComputeResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the compute volumetric size field operation.\n\nsize_field_id (int, optional) – Id of the computed size field.\n\njson_data (dict, optional) – JSON dictionary to create a VolumetricSizeFieldComputeResults object with provided parameters.\n\nExamples\n\n>>> volumetric_size_field_compute_results = prime.VolumetricSizeFieldComputeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeResults.html#overview","title":"VolumetricSizeFieldComputeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the compute volumetric size field operation.\n\nsize_field_id\n\nId of the computed size field.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumetricSizeFieldComputeResults object.\n\nset_default\n\nSet the default values of the VolumetricSizeFieldComputeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeResults.html#import-detail","title":"VolumetricSizeFieldComputeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeResults.html#property-detail","title":"VolumetricSizeFieldComputeResults > Property detail","text":"Property detail\n\n\n\nproperty VolumetricSizeFieldComputeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the compute volumetric size field operation.\n\n\n\nproperty VolumetricSizeFieldComputeResults.size_field_id: int\n\nId of the computed size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeResults.html#method-detail","title":"VolumetricSizeFieldComputeResults > Method detail","text":"Method detail\n\n\n\nVolumetricSizeFieldComputeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumetricSizeFieldComputeResults.__str__() -> str\n\n\n\n\n\nstatic VolumetricSizeFieldComputeResults.print_default()\n\nPrint the default values of VolumetricSizeFieldComputeResults object.\n\nExamples\n\n>>> VolumetricSizeFieldComputeResults.print_default()\n\n\n\nstatic VolumetricSizeFieldComputeResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, size_field_id: int = None)\n\nSet the default values of the VolumetricSizeFieldComputeResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the compute volumetric size field operation.\n\nsize_field_id (int, optional) – Id of the computed size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeParams.html#volumetricsizefieldcomputeparams","title":"VolumetricSizeFieldComputeParams","text":"VolumetricSizeFieldComputeParams\n\n\n\nclass ansys.meshing.prime.VolumetricSizeFieldComputeParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, enable_multi_threading: bool = None, enable_periodicity: bool = None, periodic_params: SFPeriodicParams = None, growth_rate_lower_bound: float = None, json_data: dict = None, **kwargs)\n\nParameters associated with the compute volumetric size field operation.\n\nParameters\n\nmodel (Model) – Model to create a VolumetricSizeFieldComputeParams object with default parameters.\n\nenable_multi_threading (bool, optional) – Option to compute volumetric size field in parallel using multithreads.\n\nenable_periodicity (bool, optional) – Option to enable periodic size field computations.\n\nperiodic_params (SFPeriodicParams, optional) – Periodic parameters to compute the size field.\n\ngrowth_rate_lower_bound (float, optional) – Lower bound for growth rate.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a VolumetricSizeFieldComputeParams object with provided parameters.\n\nExamples\n\n>>> volumetric_size_field_compute_params = prime.VolumetricSizeFieldComputeParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeParams.html#overview","title":"VolumetricSizeFieldComputeParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nenable_multi_threading\n\nOption to compute volumetric size field in parallel using multithreads.\n\nenable_periodicity\n\nOption to enable periodic size field computations.\n\ngrowth_rate_lower_bound\n\nLower bound for growth rate.\n\nperiodic_params\n\nPeriodic parameters to compute the size field.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumetricSizeFieldComputeParams object.\n\nset_default\n\nSet the default values of the VolumetricSizeFieldComputeParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeParams.html#import-detail","title":"VolumetricSizeFieldComputeParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeParams.html#property-detail","title":"VolumetricSizeFieldComputeParams > Property detail","text":"Property detail\n\n\n\nproperty VolumetricSizeFieldComputeParams.enable_multi_threading: bool\n\nOption to compute volumetric size field in parallel using multithreads.\n\n\n\nproperty VolumetricSizeFieldComputeParams.enable_periodicity: bool\n\nOption to enable periodic size field computations.\n\n\n\nproperty VolumetricSizeFieldComputeParams.growth_rate_lower_bound: float\n\nLower bound for growth rate.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty VolumetricSizeFieldComputeParams.periodic_params: SFPeriodicParams\n\nPeriodic parameters to compute the size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumetricSizeFieldComputeParams.html#method-detail","title":"VolumetricSizeFieldComputeParams > Method detail","text":"Method detail\n\n\n\nVolumetricSizeFieldComputeParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumetricSizeFieldComputeParams.__str__() -> str\n\n\n\n\n\nstatic VolumetricSizeFieldComputeParams.print_default()\n\nPrint the default values of VolumetricSizeFieldComputeParams object.\n\nExamples\n\n>>> VolumetricSizeFieldComputeParams.print_default()\n\n\n\nstatic VolumetricSizeFieldComputeParams.set_default(enable_multi_threading: bool = None, enable_periodicity: bool = None, periodic_params: SFPeriodicParams = None, growth_rate_lower_bound: float = None)\n\nSet the default values of the VolumetricSizeFieldComputeParams object.\n\nParameters\n\nenable_multi_threading (bool, optional) – Option to compute volumetric size field in parallel using multithreads.\n\nenable_periodicity (bool, optional) – Option to enable periodic size field computations.\n\nperiodic_params (SFPeriodicParams, optional) – Periodic parameters to compute the size field.\n\ngrowth_rate_lower_bound (float, optional) – Lower bound for growth rate."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureResults.html#extractfeatureresults","title":"ExtractFeatureResults","text":"ExtractFeatureResults\n\n\n\nclass ansys.meshing.prime.autogen.featureextractionstructs.ExtractFeatureResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult of edge zonelet extraction by angle.\n\nParameters\n\nmodel (Model) – Model to create a ExtractFeatureResults object with default parameters.\n\nprocessing_time (float, optional) – Time taken for edge extraction.\n\nerror_code (ErrorCode, optional) – Error code returned by edge extraction function.\n\nnew_edge_zonelets (Iterable[int], optional) – Ids of new edge zonelets extracted.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractFeatureResults object with provided parameters.\n\nExamples\n\n>>> extract_feature_results = prime.ExtractFeatureResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureResults.html#overview","title":"ExtractFeatureResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code returned by edge extraction function.\n\nnew_edge_zonelets\n\nIds of new edge zonelets extracted.\n\nprocessing_time\n\nTime taken for edge extraction.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractFeatureResults object.\n\nset_default\n\nSet the default values of the ExtractFeatureResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureResults.html#import-detail","title":"ExtractFeatureResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureResults.html#property-detail","title":"ExtractFeatureResults > Property detail","text":"Property detail\n\n\n\nproperty ExtractFeatureResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code returned by edge extraction function.\n\n\n\nproperty ExtractFeatureResults.new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new edge zonelets extracted.\n\n\n\nproperty ExtractFeatureResults.processing_time: float\n\nTime taken for edge extraction."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureResults.html#method-detail","title":"ExtractFeatureResults > Method detail","text":"Method detail\n\n\n\nExtractFeatureResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractFeatureResults.__str__() -> str\n\n\n\n\n\nstatic ExtractFeatureResults.print_default()\n\nPrint the default values of ExtractFeatureResults object.\n\nExamples\n\n>>> ExtractFeatureResults.print_default()\n\n\n\nstatic ExtractFeatureResults.set_default(processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ExtractFeatureResults object.\n\nParameters\n\nprocessing_time (float, optional) – Time taken for edge extraction.\n\nerror_code (ErrorCode, optional) – Error code returned by edge extraction function.\n\nnew_edge_zonelets (Iterable[int], optional) – Ids of new edge zonelets extracted."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaResults.html#exportlsdynaresults","title":"ExportLSDynaResults","text":"ExportLSDynaResults\n\n\n\nclass ansys.meshing.prime.ExportLSDynaResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, summary_log: str = None, zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the LS-DYNA export.\n\nParameters\n\nmodel (Model) – Model to create a ExportLSDynaResults object with default parameters.\n\nsummary_log (str, optional) – Summary log for the import operation in json format.This is a beta parameter. The behavior and name may change in the future.\n\nzone_mesh_results (List[ZoneMeshResult], optional) – Zone-wise mesh information for elements in the exported model.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportLSDynaResults object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_results = prime.ExportLSDynaResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaResults.html#overview","title":"ExportLSDynaResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nsummary_log\n\nSummary log for the import operation in json format.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nzone_mesh_results\n\nZone-wise mesh information for elements in the exported model.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportLSDynaResults object.\n\nset_default\n\nSet the default values of the ExportLSDynaResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaResults.html#import-detail","title":"ExportLSDynaResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaResults.html#property-detail","title":"ExportLSDynaResults > Property detail","text":"Property detail\n\n\n\nproperty ExportLSDynaResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaResults.summary_log: str\n\nSummary log for the import operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaResults.zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult]\n\nZone-wise mesh information for elements in the exported model.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaResults.html#method-detail","title":"ExportLSDynaResults > Method detail","text":"Method detail\n\n\n\nExportLSDynaResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportLSDynaResults.__str__() -> str\n\n\n\n\n\nstatic ExportLSDynaResults.print_default()\n\nPrint the default values of ExportLSDynaResults object.\n\nExamples\n\n>>> ExportLSDynaResults.print_default()\n\n\n\nstatic ExportLSDynaResults.set_default(summary_log: str = None, zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ExportLSDynaResults object.\n\nParameters\n\nsummary_log (str, optional) – Summary log for the import operation in json format.\n\nzone_mesh_results (List[ZoneMeshResult], optional) – Zone-wise mesh information for elements in the exported model.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedspline/index.html#the-trimmedsplinepy-module","title":"The trimmedspline.py module","text":"The trimmedspline.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedspline/index.html#summary","title":"The trimmedspline.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTrimmedSpline\n\nHandles creation and meshing of trimmed spline.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedspline/index.html#description","title":"The trimmedspline.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileio/index.html#the-fileiopy-module","title":"The fileio.py module","text":"The fileio.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileio/index.html#summary","title":"The fileio.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nFileIO\n\nHandles reading or writing files from the disk.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileio/index.html#description","title":"The fileio.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshToolResults.html#volumemeshtoolresults","title":"VolumeMeshToolResults","text":"VolumeMeshToolResults\n\n\n\nclass ansys.meshing.prime.VolumeMeshToolResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResult associated with the volume mesh tool operation.\n\nParameters\n\nmodel (Model) – Model to create a VolumeMeshToolResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume mesh tool operation.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeMeshToolResults object with provided parameters.\n\nExamples\n\n>>> volume_mesh_tool_results = prime.VolumeMeshToolResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshToolResults.html#overview","title":"VolumeMeshToolResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the volume mesh tool operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeMeshToolResults object.\n\nset_default\n\nSet the default values of the VolumeMeshToolResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshToolResults.html#import-detail","title":"VolumeMeshToolResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshToolResults.html#property-detail","title":"VolumeMeshToolResults > Property detail","text":"Property detail\n\n\n\nproperty VolumeMeshToolResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume mesh tool operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeMeshToolResults.html#method-detail","title":"VolumeMeshToolResults > Method detail","text":"Method detail\n\n\n\nVolumeMeshToolResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeMeshToolResults.__str__() -> str\n\n\n\n\n\nstatic VolumeMeshToolResults.print_default()\n\nPrint the default values of VolumeMeshToolResults object.\n\nExamples\n\n>>> VolumeMeshToolResults.print_default()\n\n\n\nstatic VolumeMeshToolResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the VolumeMeshToolResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the volume mesh tool operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpher/index.html#the-morpherpy-module","title":"The morpher.py module","text":"The morpher.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpher/index.html#summary","title":"The morpher.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMorpher\n\nMorpher contain functionalities to change the geometry, adapting the mesh accordingly without a recomputation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpher/index.html#description","title":"The morpher.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"user_guide/fileio.html#reading-and-writing-files","title":"Reading and writing files","text":"Reading and writing files\n\nThe FileIO class is used for all file-based data exchanges."},{"objectID":"Home","href":"user_guide/fileio.html#native-pmdat-format","title":"Reading and writing files > Native PMDAT format","text":"Native PMDAT format\n\nPMDAT is the native file format for PyPrimeMesh. It contains all data associated with the active model.\n\nThis includes geometry, mesh, topology, controls, labels, and zones.\n\nThe model data can be read from and written to the PMDAT format using the\nFileIO.read_pmdat() and\nFileIO.write_pmdat() methods\nwith parameters defined in the FileReadParams\nand FileWriteParams classes respectively.\n\nFiles can be read or imported based on file extension using the Mesh.read()\nmethod in the Lucid API. The method supports PyPrimeMesh’s native format, various CAD formats, and solver mesh files."},{"objectID":"Home","href":"user_guide/fileio.html#import-cad-files","title":"Reading and writing files > Import CAD files","text":"Import CAD files\n\nThe FileIO.import_cad() method allows\nyou to import CAD files and set parameters for importing files using the\nImportCadParams class."},{"objectID":"Home","href":"user_guide/fileio.html#cad-reader-routes","title":"Reading and writing files > CAD reader routes","text":"CAD reader routes\n\nYou can specify the import route for CAD files using the CadReaderRoute class.\n\nAlternatively, you can use the Mesh class in the Lucid API:\n\nFive CAD import routes are available in PyPrimeMesh:\n\nProgram controlled: Chooses the CAD reader route based on the extension of the provided CAD file as follows:\n\nNative for FMD, X_T, X_B, JT, PLMXML, and STL\n\nDiscovery for DSCO, SCDOC and SCDOCX\n\nWorkbench for all other extensions\n\nNative: Natively supported file format extensions are FMD,\nParasolid (X_T and X_B), JTOpen (JT and PLMXML), and STL.\n\nSpaceClaim: Uses SpaceClaim to import supported CAD files from the SpaceClaim reader. Only the\nWindows platform supports importing files using the SpaceClaim reader. Ensure to install\nSpaceClaim for SpaceClaim reader.\n\nDiscovery: Uses Discovery to import supported CAD files from the Discovery reader. Only the\nWindows platform supports importing files using the Discovery reader.\nEnsure to install Discovery for Discovery reader.\n\nWorkbench: Uses Workbench to import supported CAD files from the Workbench reader.\nEnsure to install Workbench for Workbench reader.\n\nTo view the CAD files supported for the Workbench route on different platforms, see\nCAD Support on the Ansys website.\n\nProgram controlled supports faceted data. Workbench supports BRep geometry(non-faceted) data.\nDiscovery or SpaceClaim supports both BRep geometry and faceted data.\n\nWhen deploying scripts using the Workbench CAD reader route, ensure that the user options for the installed\napplication are consistent in the deployed environment.\n\nWhen deploying scripts using the CAD configuration, ensure that the configuration is consistent in the deployed\nenvironment.\n\nYou must install and configure Workbench CAD readers or plug-ins (Ansys Geometry Interfaces)\nwhile installing Ansys Workbench.\n\nTo preserve shared topology, the Workbench CAD reader route must be used.\n\nPatterned name selections are not supported for the SpaceClaim or Discovery CAD reader routes.\nTo import patterned named selections, the Workbench CAD reader route can be used."},{"objectID":"Home","href":"user_guide/fileio.html#append-cad-files","title":"Reading and writing files > Append CAD files","text":"Append CAD files\n\nThe ImportCadParams.append parameter allows\nyou to append a CAD file to the model:\n\nAlternatively, you can use the Mesh class in\nthe Lucid API:"},{"objectID":"Home","href":"user_guide/fileio.html#parametric-cad-update","title":"Reading and writing files > Parametric CAD update","text":"Parametric CAD update\n\nParametric CAD update can be used while importing CAD files that have parameters defined that\ncan be accessed by Workbench CAD readers.\n\nThis code gets existing CAD parameters while importing:\n\nThis code sets the parameters that are used for the import:"},{"objectID":"Home","href":"user_guide/fileio.html#part-management-and-creation","title":"Reading and writing files > Part management and creation","text":"Part management and creation\n\nPyPrimeMesh has options for part management within the product structure while importing a CAD (Computer Aided Design) model.\nThe CAD model is the top in product hierarchy. A CAD model can have one or more CAD assemblies. The CAD assembly or\nsubassembly has different CAD parts. The CAD part has bodies or other geometric entities. Here is a typical CAD product\nstructure from SpaceClaim:\n\nThe PartCreationType class decides whether to create a part per:\n\nModel\n\nAssembly\n\nPart\n\nBody"},{"objectID":"Home","href":"user_guide/fileio.html#model","title":"Reading and writing files > Model","text":"Model\n\nWhen you import a CAD model and specify the PartCreationType parameter\nas MODEL, a single part is created that inherits its name from\nthe CAD model name. The number of zones within the part is identical to the number of bodies within the CAD model."},{"objectID":"Home","href":"user_guide/fileio.html#assembly","title":"Reading and writing files > Assembly","text":"Assembly\n\nWhen you import a CAD model and specify the PartCreationType parameter\nas ASSEMBLY, a part per CAD assembly is created where the part\nname is inherited from the CAD assembly name. The number of zones within each part is identical to the number of bodies\nwithin the CAD assembly."},{"objectID":"Home","href":"user_guide/fileio.html#part","title":"Reading and writing files > Part","text":"Part\n\nWhen you import a CAD model and specify the PartCreationType parameter\nas PART, a part per CAD part is created that inherits the part\nname from the CAD part name. The number of zones within a part is identical to the number of bodies within the CAD\npart."},{"objectID":"Home","href":"user_guide/fileio.html#body","title":"Reading and writing files > Body","text":"Body\n\nWhen you import a CAD model and specify the PartCreationType parameter\nas BODY, a part per CAD body is created that inherits the part name\nfrom the CAD body name. The number of parts is identical to the number of bodies."},{"objectID":"Home","href":"user_guide/fileio.html#import-and-export-solver-mesh-files","title":"Reading and writing files > Import and export solver mesh files","text":"Import and export solver mesh files\n\nFile extensions such as CAS (*.cas), MSH (*.msh, *.msh.gz), and CDB (*.cdb) can be imported\nusing the Mesh.read() method and exported using the\nMesh.write() method in the Lucid API."},{"objectID":"Home","href":"user_guide/fileio.html#import-solver-mesh-files","title":"Reading and writing files > Import solver mesh files","text":"Import solver mesh files\n\nThe FileIO.import_fluent_case() method allows you\nto import Fluent case (*.cas, *.cas.gz, *.cas.h5) files and set parameters for importing files using the\nImportFluentCaseParams class.\n\nThe FileIO.import_fluent_meshing_meshes() method\nallows you to import Fluent Meshing’s mesh files (*.msh, *.msh.gz) and set parameters for importing files\nusing the ImportFluentMeshingMeshParams class.\nYou can import multiple files in parallel using multithreading with the optional\nenable_multi_threading\nparameter.\n\nThe FileIO.import_mapdl_cdb() method allows you to\nimport MAPDL (*.cdb) files and set parameters for importing files using the\nImportMapdlCdbParams class. You can import quadratic mesh\nelements as linear with the optional drop_mid_nodes\nparameter.\n\nAll import methods have the optional parameter to append imported files to an existing model."},{"objectID":"Home","href":"user_guide/fileio.html#export-solver-mesh-files","title":"Reading and writing files > Export solver mesh files","text":"Export solver mesh files\n\nThe FileIO.export_fluent_case() method allows you to\nexport Fluent case (*.cas, *.cas.gz, *.cas.h5) files and set parameters for exporting files using the\nExportFluentCaseParams class.\n\nThe FileIO.export_fluent_meshing_meshes() method\nallows you to export Fluent Meshing’s mesh (*.msh) files and set parameters for exporting files\nusing the ExportFluentMeshingMeshParams class.\n\nThe FileIO.export_mapdl_cdb() method allows you to export\nMAPDL (*.cdb) files and set parameters for exporting files using the\nExportMapdlCdbParams class.\n\nThe FileIO.export_boundary_fitted_spline_kfile()\nmethod allows you to export IGA LS-DYNA keyword (*.k) files and set parameters for exporting boundary-fitted\nsplines using the ExportBoundaryFittedSplineParams class.\n\nThe FileIO.export_lsdyna_keyword_file()\nfunction allows you to write out an LS-DYNA Keyword (*.k) file that contains the mesh definition and other\nnecessary information to carry out the analysis run by the LS-DYNA solver.\nThe ExportLSDynaKeywordFileParams class allows\nyou to specify the application type (SEATBELT, DOORSLAM), indicate whether to compute\nthe spot weld thickness, append the material cards in the K file, provide the database cards\nto append in the K file, and specify the LS-DYNA data field format. You should specify the material\nproperties card and the database keywords card in LS-DYNA format.\n\nThe FileIO.export_lsdyna_keyword_file() function\nis a beta API. The behavior and implementation might change in the future."},{"objectID":"Home","href":"user_guide/fileio.html#read-and-write-size-field-files","title":"Reading and writing files > Read and write size field files","text":"Read and write size field files"},{"objectID":"Home","href":"user_guide/fileio.html#native-psf-format","title":"Reading and writing files > Native PSF format","text":"Native PSF format\n\nThe FileIO.read_size_field() method allows you to\nread Ansys Prime Server’s size field (*.psf, *.psf.gz) file and set parameters for reading this file\nusing the ReadSizeFieldParams class.\n\nThe FileIO.write_size_field() method allows you to\nwrite Ansys Prime Server’s size field (*.psf) file and set parameters for writing this file using the\nWriteSizeFieldParams class. You can write only active\nsize fields into the file with the optional write_only_active_size_fields\nparameter."},{"objectID":"Home","href":"user_guide/fileio.html#fluent-meshing-format","title":"Reading and writing files > Fluent Meshing format","text":"Fluent Meshing format\n\nThe FileIO.import_fluent_meshing_size_field()\nmethod allows you to import Fluent Meshing’s size field (*.sf, *.sf.gz) file."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchParams.html#createcontactpatchparams","title":"CreateContactPatchParams","text":"CreateContactPatchParams\n\n\n\nclass ansys.meshing.prime.CreateContactPatchParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, contact_patch_axis: ContactPatchAxis = None, offset_distance: float = None, grouping_tolerance: float = None, suggested_part_name: str = None, suggested_label_prefix: str = None, json_data: dict = None, **kwargs)\n\nParameters used for contact patch creation in the given axis.\n\nParameters\n\nmodel (Model) – Model to create a CreateContactPatchParams object with default parameters.\n\ncontact_patch_axis (ContactPatchAxis, optional) – Assigns the contact patch direction.\n\noffset_distance (float, optional) – Source offset distance value.\n\ngrouping_tolerance (float, optional) – Tolerance distance value to group regions for contact patch creation.\n\nsuggested_part_name (str, optional) – Suggested part name for created contact patch surfaces.\n\nsuggested_label_prefix (str, optional) – Suggested label name for created contact patch surfaces.\n\njson_data (dict, optional) – JSON dictionary to create a CreateContactPatchParams object with provided parameters.\n\nExamples\n\n>>> create_contact_patch_params = prime.CreateContactPatchParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchParams.html#overview","title":"CreateContactPatchParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontact_patch_axis\n\nAssigns the contact patch direction.\n\ngrouping_tolerance\n\nTolerance distance value to group regions for contact patch creation.\n\noffset_distance\n\nSource offset distance value.\n\nsuggested_label_prefix\n\nSuggested label name for created contact patch surfaces.\n\nsuggested_part_name\n\nSuggested part name for created contact patch surfaces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateContactPatchParams object.\n\nset_default\n\nSet the default values of the CreateContactPatchParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchParams.html#import-detail","title":"CreateContactPatchParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchParams.html#property-detail","title":"CreateContactPatchParams > Property detail","text":"Property detail\n\n\n\nproperty CreateContactPatchParams.contact_patch_axis: ContactPatchAxis\n\nAssigns the contact patch direction.\n\n\n\nproperty CreateContactPatchParams.grouping_tolerance: float\n\nTolerance distance value to group regions for contact patch creation.\n\n\n\nproperty CreateContactPatchParams.offset_distance: float\n\nSource offset distance value.\n\n\n\nproperty CreateContactPatchParams.suggested_label_prefix: str\n\nSuggested label name for created contact patch surfaces.\n\n\n\nproperty CreateContactPatchParams.suggested_part_name: str\n\nSuggested part name for created contact patch surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateContactPatchParams.html#method-detail","title":"CreateContactPatchParams > Method detail","text":"Method detail\n\n\n\nCreateContactPatchParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateContactPatchParams.__str__() -> str\n\n\n\n\n\nstatic CreateContactPatchParams.print_default()\n\nPrint the default values of CreateContactPatchParams object.\n\nExamples\n\n>>> CreateContactPatchParams.print_default()\n\n\n\nstatic CreateContactPatchParams.set_default(contact_patch_axis: ContactPatchAxis = None, offset_distance: float = None, grouping_tolerance: float = None, suggested_part_name: str = None, suggested_label_prefix: str = None)\n\nSet the default values of the CreateContactPatchParams object.\n\nParameters\n\ncontact_patch_axis (ContactPatchAxis, optional) – Assigns the contact patch direction.\n\noffset_distance (float, optional) – Source offset distance value.\n\ngrouping_tolerance (float, optional) – Tolerance distance value to group regions for contact patch creation.\n\nsuggested_part_name (str, optional) – Suggested part name for created contact patch surfaces.\n\nsuggested_label_prefix (str, optional) – Suggested label name for created contact patch surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrol/ThinVolumeControl.html#thinvolumecontrol","title":"ThinVolumeControl","text":"ThinVolumeControl\n\n\n\nclass ansys.meshing.prime.autogen.thinvolumecontrol.ThinVolumeControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nThinVolumeControl allows you to generate prisms in the space between surfaces.\n\nThinVolumeControl allows you to control generation of prisms in the thin space between surfaces. Controls include setting the source face scope, target face scope and thin volume mesh parameters.\n\nParameters\n\nmodel (Model) – Server model to create ThinVolumeControl object.\n\nid (int) – Id of the ThinVolumeControl.\n\nobject_id (int) – Object id of the ThinVolumeControl.\n\nname (str) – Name of the ThinVolumeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrol/ThinVolumeControl.html#overview","title":"ThinVolumeControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_source_scope\n\nGets the source of thin volume control scope.\n\nget_target_scope\n\nGets the target of thin volume control scope.\n\nget_volume_scope\n\nGets the volume scope of thin volume control.\n\nset_source_scope\n\nSets the source surface scope of thin volume control.\n\nset_target_scope\n\nSets the target surface scope of thin volume control.\n\nset_thin_volume_mesh_params\n\nSets thin volume mesh parameters for thin volume control.\n\nset_volume_scope\n\nSets the volume scope of thin volume control.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of ThinVolumeControl.\n\nname\n\nGet the name of ThinVolumeControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrol/ThinVolumeControl.html#import-detail","title":"ThinVolumeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrol/ThinVolumeControl.html#property-detail","title":"ThinVolumeControl > Property detail","text":"Property detail\n\n\n\nproperty ThinVolumeControl.id\n\nGet the id of ThinVolumeControl.\n\n\n\nproperty ThinVolumeControl.name\n\nGet the name of ThinVolumeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrol/ThinVolumeControl.html#method-detail","title":"ThinVolumeControl > Method detail","text":"Method detail\n\n\n\nThinVolumeControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nThinVolumeControl.get_source_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the source of thin volume control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_source_scope()\n\n\n\nThinVolumeControl.get_target_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the target of thin volume control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_target_scope()\n\n\n\nThinVolumeControl.get_volume_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the volume scope of thin volume control.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_volume_scope()\n\n\n\nThinVolumeControl.set_source_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the source surface scope of thin volume control.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition source face entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = thin_vol_ctrl.set_source_scope(entities)\n\n\n\nThinVolumeControl.set_target_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the target surface scope of thin volume control.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition for target face entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = thin_vol_ctrl.set_target_scope(entities)\n\n\n\nThinVolumeControl.set_thin_volume_mesh_params(thin_volume_mesh_params: ansys.meshing.prime.params.primestructs.ThinVolumeMeshParams)\n\nSets thin volume mesh parameters for thin volume control.\n\nParameters\n\nthin_volume_mesh_params (ThinVolumeMeshParams) – Parameters to set thin volume control growth.\n\nExamples\n\n>>> results = thin_vol_ctrl.set_thin_volume_mesh_params(ThinVolumeMeshParams(model=model))\n\n\n\nThinVolumeControl.set_volume_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the volume scope of thin volume control.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition for volume entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = thin_vol_ctrl.set_volume_scope(entities)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/get_file.html#ansysmeshingprimeexamplesexamplesget_file","title":"ansys.meshing.prime.examples.examples.get_file","text":"ansys.meshing.prime.examples.examples.get_file\n\n\n\nansys.meshing.prime.examples.examples.get_file(example: Examples, destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload a PyPrimeMesh example file from the GitHub repository.\n\nParameters\n\nexample (Examples) – Name of the example file to be downloaded.\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nRaises\n\nValueError – When the provided destination path for the example file does not exist."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/index.html#the-plotterpy-module","title":"The plotter.py module","text":"The plotter.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/index.html#summary","title":"The plotter.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nGraphics\n\nManages graphics in PyPrime.\n\nPrimePlotter\n\nCreate a plotter for PyPrimeMesh models.\n\nEnums\n\n\n\n\n\nColorByType\n\nContains the zone types to display.\n\nAttributes\n\n\n\n\n\ncolor_matrix\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/index.html#description","title":"The plotter.py module > Description","text":"Description\n\nModule for the plotter."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/plotter/index.html#module-detail","title":"The plotter.py module > Module detail","text":"Module detail\n\n\n\nplotter.color_matrix\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsResults.html#deletefringesandoverlapsresults","title":"DeleteFringesAndOverlapsResults","text":"DeleteFringesAndOverlapsResults\n\n\n\nclass ansys.meshing.prime.autogen.deletetoolstructs.DeleteFringesAndOverlapsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_deleted: int = None, json_data: dict = None, **kwargs)\n\nResults associated with the delete fringes and overlapping faces operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteFringesAndOverlapsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nn_deleted (int, optional) – Number of face elements deleted.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteFringesAndOverlapsResults object with provided parameters.\n\nExamples\n\n>>> delete_fringes_and_overlaps_results = prime.DeleteFringesAndOverlapsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsResults.html#overview","title":"DeleteFringesAndOverlapsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nn_deleted\n\nNumber of face elements deleted.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteFringesAndOverlapsResults object.\n\nset_default\n\nSet the default values of the DeleteFringesAndOverlapsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsResults.html#import-detail","title":"DeleteFringesAndOverlapsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsResults.html#property-detail","title":"DeleteFringesAndOverlapsResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteFringesAndOverlapsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty DeleteFringesAndOverlapsResults.n_deleted: int\n\nNumber of face elements deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/DeleteFringesAndOverlapsResults.html#method-detail","title":"DeleteFringesAndOverlapsResults > Method detail","text":"Method detail\n\n\n\nDeleteFringesAndOverlapsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteFringesAndOverlapsResults.__str__() -> str\n\n\n\n\n\nstatic DeleteFringesAndOverlapsResults.print_default()\n\nPrint the default values of DeleteFringesAndOverlapsResults object.\n\nExamples\n\n>>> DeleteFringesAndOverlapsResults.print_default()\n\n\n\nstatic DeleteFringesAndOverlapsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_deleted: int = None)\n\nSet the default values of the DeleteFringesAndOverlapsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nn_deleted (int, optional) – Number of face elements deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundingBox.html#boundingbox","title":"BoundingBox","text":"BoundingBox\n\n\n\nclass ansys.meshing.prime.BoundingBox(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, xmin: float = None, ymin: float = None, zmin: float = None, xmax: float = None, ymax: float = None, zmax: float = None, json_data: dict = None, **kwargs)\n\nProvides information about the definition of a bounding box.\n\nParameters\n\nmodel (Model) – Model to create a BoundingBox object with default parameters.\n\nxmin (float, optional) – Minimal X coordinate of the bounding box.\n\nymin (float, optional) – Minimal Y coordinate of the bounding box.\n\nzmin (float, optional) – Minimal Z coordinate of the bounding box.\n\nxmax (float, optional) – Maximal X coordinate of the bounding box.\n\nymax (float, optional) – Maximal Y coordinate of the bounding box.\n\nzmax (float, optional) – Maximal Z coordinate of the bounding box.\n\njson_data (dict, optional) – JSON dictionary to create a BoundingBox object with provided parameters.\n\nExamples\n\n>>> bounding_box = prime.BoundingBox(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundingBox.html#overview","title":"BoundingBox > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nxmax\n\nMaximal X coordinate of the bounding box.\n\nxmin\n\nMinimal X coordinate of the bounding box.\n\nymax\n\nMaximal Y coordinate of the bounding box.\n\nymin\n\nMinimal Y coordinate of the bounding box.\n\nzmax\n\nMaximal Z coordinate of the bounding box.\n\nzmin\n\nMinimal Z coordinate of the bounding box.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of BoundingBox object.\n\nset_default\n\nSet the default values of the BoundingBox object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundingBox.html#import-detail","title":"BoundingBox > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundingBox.html#property-detail","title":"BoundingBox > Property detail","text":"Property detail\n\n\n\nproperty BoundingBox.xmax: float\n\nMaximal X coordinate of the bounding box.\n\n\n\nproperty BoundingBox.xmin: float\n\nMinimal X coordinate of the bounding box.\n\n\n\nproperty BoundingBox.ymax: float\n\nMaximal Y coordinate of the bounding box.\n\n\n\nproperty BoundingBox.ymin: float\n\nMinimal Y coordinate of the bounding box.\n\n\n\nproperty BoundingBox.zmax: float\n\nMaximal Z coordinate of the bounding box.\n\n\n\nproperty BoundingBox.zmin: float\n\nMinimal Z coordinate of the bounding box."},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundingBox.html#method-detail","title":"BoundingBox > Method detail","text":"Method detail\n\n\n\nBoundingBox.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBoundingBox.__str__() -> str\n\n\n\n\n\nstatic BoundingBox.print_default()\n\nPrint the default values of BoundingBox object.\n\nExamples\n\n>>> BoundingBox.print_default()\n\n\n\nstatic BoundingBox.set_default(xmin: float = None, ymin: float = None, zmin: float = None, xmax: float = None, ymax: float = None, zmax: float = None)\n\nSet the default values of the BoundingBox object.\n\nParameters\n\nxmin (float, optional) – Minimal X coordinate of the bounding box.\n\nymin (float, optional) – Minimal Y coordinate of the bounding box.\n\nzmin (float, optional) – Minimal Z coordinate of the bounding box.\n\nxmax (float, optional) – Maximal X coordinate of the bounding box.\n\nymax (float, optional) – Maximal Y coordinate of the bounding box.\n\nzmax (float, optional) – Maximal Z coordinate of the bounding box."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSizingParams.html#multizonesizingparams","title":"MultiZoneSizingParams","text":"MultiZoneSizingParams\n\n\n\nclass ansys.meshing.prime.MultiZoneSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max_size: float = None, min_size: float = None, growth_rate: float = None, use_volumetric_size_field: bool = None, json_data: dict = None, **kwargs)\n\nParameters for MultiZone meshing.\n\nParameters\n\nmodel (Model) – Model to create a MultiZoneSizingParams object with default parameters.\n\nmax_size (float, optional) – Defines global maximum mesh size.This is a beta parameter. The behavior and name may change in the future.\n\nmin_size (float, optional) – Defines global minimum mesh size.This is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate (float, optional) – Defines growth rate.This is a beta parameter. The behavior and name may change in the future.\n\nuse_volumetric_size_field (bool, optional) – Defines whether to use size field for MultiZone meshing.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a MultiZoneSizingParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_sizing_params = prime.MultiZoneSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSizingParams.html#overview","title":"MultiZoneSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nDefines growth rate.\n\nmax_size\n\nDefines global maximum mesh size.\n\nmin_size\n\nDefines global minimum mesh size.\n\nuse_volumetric_size_field\n\nDefines whether to use size field for MultiZone meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MultiZoneSizingParams object.\n\nset_default\n\nSet the default values of the MultiZoneSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSizingParams.html#import-detail","title":"MultiZoneSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSizingParams.html#property-detail","title":"MultiZoneSizingParams > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneSizingParams.growth_rate: float\n\nDefines growth rate.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSizingParams.max_size: float\n\nDefines global maximum mesh size.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSizingParams.min_size: float\n\nDefines global minimum mesh size.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSizingParams.use_volumetric_size_field: bool\n\nDefines whether to use size field for MultiZone meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/MultiZoneSizingParams.html#method-detail","title":"MultiZoneSizingParams > Method detail","text":"Method detail\n\n\n\nMultiZoneSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneSizingParams.__str__() -> str\n\n\n\n\n\nstatic MultiZoneSizingParams.print_default()\n\nPrint the default values of MultiZoneSizingParams object.\n\nExamples\n\n>>> MultiZoneSizingParams.print_default()\n\n\n\nstatic MultiZoneSizingParams.set_default(max_size: float = None, min_size: float = None, growth_rate: float = None, use_volumetric_size_field: bool = None)\n\nSet the default values of the MultiZoneSizingParams object.\n\nParameters\n\nmax_size (float, optional) – Defines global maximum mesh size.\n\nmin_size (float, optional) – Defines global minimum mesh size.\n\ngrowth_rate (float, optional) – Defines growth rate.\n\nuse_volumetric_size_field (bool, optional) – Defines whether to use size field for MultiZone meshing."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetParamsResults.html#setparamsresults","title":"SetParamsResults","text":"SetParamsResults\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.SetParamsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the set parameters operation.\n\nParameters\n\nmodel (Model) – Model to create a SetParamsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set parameters operation.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set parameters operation.\n\njson_data (dict, optional) – JSON dictionary to create a SetParamsResults object with provided parameters.\n\nExamples\n\n>>> set_params_results = prime.SetParamsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetParamsResults.html#overview","title":"SetParamsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set parameters operation.\n\nwarning_code\n\nWarning code associated with the set parameters operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetParamsResults object.\n\nset_default\n\nSet the default values of the SetParamsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetParamsResults.html#import-detail","title":"SetParamsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetParamsResults.html#property-detail","title":"SetParamsResults > Property detail","text":"Property detail\n\n\n\nproperty SetParamsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set parameters operation.\n\n\n\nproperty SetParamsResults.warning_code: ansys.meshing.prime.params.primestructs.WarningCode\n\nWarning code associated with the set parameters operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetParamsResults.html#method-detail","title":"SetParamsResults > Method detail","text":"Method detail\n\n\n\nSetParamsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetParamsResults.__str__() -> str\n\n\n\n\n\nstatic SetParamsResults.print_default()\n\nPrint the default values of SetParamsResults object.\n\nExamples\n\n>>> SetParamsResults.print_default()\n\n\n\nstatic SetParamsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None)\n\nSet the default values of the SetParamsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the set parameters operation.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set parameters operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/index.html#the-featureextractionstructspy-module","title":"The featureextractionstructs.py module","text":"The featureextractionstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/index.html#summary","title":"The featureextractionstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCreateIntersectionEdgeLoopsParams\n\nParameters used to calculate edge loops created by intersection of two groups of face zonelets.\n\nCreateIntersectionEdgeLoopsResults\n\nResults for the edge loops created by intersection of two groups of face zonelets.\n\nExtractFeatureParams\n\nParameter to control feature edge extraction.\n\nExtractFeatureResults\n\nResult of edge zonelet extraction by angle.\n\nExtractedFeatureIds\n\nContains ids of the features extracted.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/index.html#description","title":"The featureextractionstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfo/index.html#the-meshinfopy-module","title":"The meshinfo.py module","text":"The meshinfo.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfo/index.html#summary","title":"The meshinfo.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMeshInfo\n\nMeshInfo provides information about the mesh connectivity and more.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfo/index.html#description","title":"The meshinfo.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodata/TopoData.html#topodata","title":"TopoData","text":"TopoData\n\n\n\nclass ansys.meshing.prime.autogen.topodata.TopoData(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nTopodata has all information about connectivity of nodes, edges, elements and more.\n\nParameters\n\nmodel (Model) – Server model to create TopoData object.\n\nid (int) – Id of the TopoData.\n\nobject_id (int) – Object id of the TopoData.\n\nname (str) – Name of the TopoData."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodata/TopoData.html#overview","title":"TopoData > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndelete_mesh_on_topo_faces\n\nDelete mesh on the provided topofaces.\n\nget_adjacent_topo_edges_of_topo_edges\n\nGet the adjacent topoedges for the provided topoedge ids.\n\nget_adjacent_topo_faces_of_topo_faces\n\nGet the adjacent topofaces for the provided topoface ids.\n\nget_geom_zonelets_of_topo_edges\n\nGet the geometry edge zonelets for the provided topoedge ids.\n\nget_geom_zonelets_of_topo_faces\n\nGet the geometry face zonelets for the provided topoface ids.\n\nget_mesh_zonelets_of_topo_edges\n\nGet the mesh edge zonelets for the provided topoedge ids.\n\nget_mesh_zonelets_of_topo_faces\n\nGet the mesh face zonelets for the provided topoface ids.\n\nget_topo_edges_of_topo_faces\n\nGet the topoedges of the provided topoface ids.\n\nget_topo_volumes_of_topo_faces\n\nGets the topovolumes of the given topofaces.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of TopoData.\n\nname\n\nGet the name of TopoData.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodata/TopoData.html#import-detail","title":"TopoData > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodata/TopoData.html#property-detail","title":"TopoData > Property detail","text":"Property detail\n\n\n\nproperty TopoData.id\n\nGet the id of TopoData.\n\n\n\nproperty TopoData.name\n\nGet the name of TopoData."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodata/TopoData.html#method-detail","title":"TopoData > Method detail","text":"Method detail\n\n\n\nTopoData.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTopoData.delete_mesh_on_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DeleteMeshParams) -> ansys.meshing.prime.params.primestructs.DeleteMeshResults\n\nDelete mesh on the provided topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces.\n\nparams (DeleteMeshParams) – Parameters to delete mesh on topofaces.\n\nReturns\n\nReturns the DeleteMeshResults.\n\nReturn type\n\nDeleteMeshResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prime.DeleteMeshParams(model = model)\n>>> result = topo_data.delete_mesh_on_topo_faces(top_faces, params)\n\n\n\nTopoData.get_adjacent_topo_edges_of_topo_edges(topo_edges: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the adjacent topoedges for the provided topoedge ids.\n\nParameters\n\ntopo_edges (Iterable[int]) – Ids of the topoedge.\n\nReturns\n\nReturns the list of adjacent topoedge ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges_of_topo_edges = topo_data.get_adjacent_topo_edges_of_topo_edges(topo_edges)\n\n\n\nTopoData.get_adjacent_topo_faces_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the adjacent topofaces for the provided topoface ids.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topoface.\n\nReturns\n\nReturns the list of adjacent topoface ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_faces_of_topo_faces = topo_data.get_adjacent_topo_faces_of_topo_faces(topo_faces)\n\n\n\nTopoData.get_geom_zonelets_of_topo_edges(topo_edges: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the geometry edge zonelets for the provided topoedge ids.\n\nParameters\n\ntopo_edges (Iterable[int]) – Ids of the topoedges.\n\nReturns\n\nReturn the geometry edge zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> geom_edge_zonelets = topo_data.get_geom_zonelets_of_topo_edges(topo_edges)\n\n\n\nTopoData.get_geom_zonelets_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the geometry face zonelets for the provided topoface ids.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topofaces.\n\nReturns\n\nReturn the geometry face zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> geom_face_zonelets = topo_data.get_geom_zonelets_of_topo_faces(topo_faces)\n\n\n\nTopoData.get_mesh_zonelets_of_topo_edges(topo_edges: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the mesh edge zonelets for the provided topoedge ids.\n\nParameters\n\ntopo_edges (Iterable[int]) – Ids of the topoedges.\n\nReturns\n\nReturn the mesh edge zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> mesh_edge_zonelets = topo_data.get_mesh_zonelets_of_topo_edges(topo_edges)\n\n\n\nTopoData.get_mesh_zonelets_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the mesh face zonelets for the provided topoface ids.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topofaces.\n\nReturns\n\nReturn the mesh face zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> mesh_face_zonelets = topo_data.get_mesh_zonelets_of_topo_faces(topo_faces)\n\n\n\nTopoData.get_topo_edges_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the topoedges of the provided topoface ids.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topoface.\n\nReturns\n\nReturns the list of topoedge ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges_of_topo_faces = topo_data.get_topo_edges_of_topo_faces(topo_faces)\n\n\n\nTopoData.get_topo_volumes_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topovolumes of the given topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topofaces.\n\nReturns\n\nReturns the list of topovolume ids.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topovolumes = topo_data.get_topo_volumes_of_topo_faces(topo_faces)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferParams.html#surferparams","title":"SurferParams","text":"SurferParams\n\n\n\nclass ansys.meshing.prime.SurferParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max_angle: float = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, min_size: float = None, max_size: float = None, growth_rate: float = None, constant_size: float = None, generate_quads: bool = None, check_non_manifolds: bool = None, avoid_corner_triangles: bool = None, smooth_size_transition: bool = None, advanced_surfer_setup: AdvancedSurferSetup = None, project_on_geometry: bool = None, enable_multi_threading: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to generate surface mesh.\n\nParameters\n\nmodel (Model) – Model to create a SurferParams object with default parameters.\n\nmax_angle (float, optional) – Maximum feature angle limit to be used to identify and preserve features.\n\nsize_field_type (SizeFieldType, optional) – Size field type used to generate surface mesh.\n\nmin_size (float, optional) – Minimum size to be used in sizing for the surfer.\n\nmax_size (float, optional) – Maximum size to be used in sizing for the surfer.\n\ngrowth_rate (float, optional) – Growth rate to be used to propagate sizes.\n\nconstant_size (float, optional) – Size used in constant size surface meshing.\n\ngenerate_quads (bool, optional) – Option to generate quadrilateral surface mesh.\n\ncheck_non_manifolds (bool, optional) – Option to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\navoid_corner_triangles (bool, optional) – Option to avoid corner triangles(with all three boundary nodes) generated.\n\nsmooth_size_transition (bool, optional) – Option to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nadvanced_surfer_setup (AdvancedSurferSetup, optional) – Option to define advanced settings for remeshing operation.\n\nproject_on_geometry (bool, optional) – Option to project on CAD geometry when meshing.\n\nenable_multi_threading (bool, optional) – Option to perform surface meshing in parallel using multithreads.\n\njson_data (dict, optional) – JSON dictionary to create a SurferParams object with provided parameters.\n\nExamples\n\n>>> surfer_params = prime.SurferParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferParams.html#overview","title":"SurferParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nadvanced_surfer_setup\n\nOption to define advanced settings for remeshing operation.\n\navoid_corner_triangles\n\nOption to avoid corner triangles(with all three boundary nodes) generated.\n\ncheck_non_manifolds\n\nOption to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\nconstant_size\n\nSize used in constant size surface meshing.\n\nenable_multi_threading\n\nOption to perform surface meshing in parallel using multithreads.\n\ngenerate_quads\n\nOption to generate quadrilateral surface mesh.\n\ngrowth_rate\n\nGrowth rate to be used to propagate sizes.\n\nmax_angle\n\nMaximum feature angle limit to be used to identify and preserve features.\n\nmax_size\n\nMaximum size to be used in sizing for the surfer.\n\nmin_size\n\nMinimum size to be used in sizing for the surfer.\n\nproject_on_geometry\n\nOption to project on CAD geometry when meshing.\n\nsize_field_type\n\nSize field type used to generate surface mesh.\n\nsmooth_size_transition\n\nOption to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurferParams object.\n\nset_default\n\nSet the default values of the SurferParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferParams.html#import-detail","title":"SurferParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferParams.html#property-detail","title":"SurferParams > Property detail","text":"Property detail\n\n\n\nproperty SurferParams.advanced_surfer_setup: AdvancedSurferSetup\n\nOption to define advanced settings for remeshing operation.\n\n\n\nproperty SurferParams.avoid_corner_triangles: bool\n\nOption to avoid corner triangles(with all three boundary nodes) generated.\n\n\n\nproperty SurferParams.check_non_manifolds: bool\n\nOption to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\n\n\nproperty SurferParams.constant_size: float\n\nSize used in constant size surface meshing.\n\n\n\nproperty SurferParams.enable_multi_threading: bool\n\nOption to perform surface meshing in parallel using multithreads.\n\n\n\nproperty SurferParams.generate_quads: bool\n\nOption to generate quadrilateral surface mesh.\n\n\n\nproperty SurferParams.growth_rate: float\n\nGrowth rate to be used to propagate sizes.\n\n\n\nproperty SurferParams.max_angle: float\n\nMaximum feature angle limit to be used to identify and preserve features.\n\n\n\nproperty SurferParams.max_size: float\n\nMaximum size to be used in sizing for the surfer.\n\n\n\nproperty SurferParams.min_size: float\n\nMinimum size to be used in sizing for the surfer.\n\n\n\nproperty SurferParams.project_on_geometry: bool\n\nOption to project on CAD geometry when meshing.\n\n\n\nproperty SurferParams.size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nSize field type used to generate surface mesh.\n\n\n\nproperty SurferParams.smooth_size_transition: bool\n\nOption to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nNotes\n\nInput facets or mesh with finer sizes compared to neighboring face edge sizes are required for this option to work.\n\nValid min, max sizes and growth rate are required to include the neighboring face edges sizes in sizing."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurferParams.html#method-detail","title":"SurferParams > Method detail","text":"Method detail\n\n\n\nSurferParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurferParams.__str__() -> str\n\n\n\n\n\nstatic SurferParams.print_default()\n\nPrint the default values of SurferParams object.\n\nExamples\n\n>>> SurferParams.print_default()\n\n\n\nstatic SurferParams.set_default(max_angle: float = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, min_size: float = None, max_size: float = None, growth_rate: float = None, constant_size: float = None, generate_quads: bool = None, check_non_manifolds: bool = None, avoid_corner_triangles: bool = None, smooth_size_transition: bool = None, advanced_surfer_setup: AdvancedSurferSetup = None, project_on_geometry: bool = None, enable_multi_threading: bool = None)\n\nSet the default values of the SurferParams object.\n\nParameters\n\nmax_angle (float, optional) – Maximum feature angle limit to be used to identify and preserve features.\n\nsize_field_type (SizeFieldType, optional) – Size field type used to generate surface mesh.\n\nmin_size (float, optional) – Minimum size to be used in sizing for the surfer.\n\nmax_size (float, optional) – Maximum size to be used in sizing for the surfer.\n\ngrowth_rate (float, optional) – Growth rate to be used to propagate sizes.\n\nconstant_size (float, optional) – Size used in constant size surface meshing.\n\ngenerate_quads (bool, optional) – Option to generate quadrilateral surface mesh.\n\ncheck_non_manifolds (bool, optional) – Option to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\navoid_corner_triangles (bool, optional) – Option to avoid corner triangles(with all three boundary nodes) generated.\n\nsmooth_size_transition (bool, optional) – Option to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nadvanced_surfer_setup (AdvancedSurferSetup, optional) – Option to define advanced settings for remeshing operation.\n\nproject_on_geometry (bool, optional) – Option to project on CAD geometry when meshing.\n\nenable_multi_threading (bool, optional) – Option to perform surface meshing in parallel using multithreads."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_f1_rw_drs_stl.html#ansysmeshingprimeexamplesdownload_f1_rw_drs_stl","title":"ansys.meshing.prime.examples.download_f1_rw_drs_stl","text":"ansys.meshing.prime.examples.download_f1_rw_drs_stl\n\n\n\nansys.meshing.prime.examples.download_f1_rw_drs_stl(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_drs = prime_examples.download_f1_rw_drs_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_drs, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByType.html#colorbytype","title":"ColorByType","text":"ColorByType\n\n\n\nclass ansys.meshing.prime.graphics.widgets.color_by_type.ColorByType\n\nContains the zone types to display."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByType.html#overview","title":"ColorByType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nPART\n\n\n\nZONE\n\n\n\nZONELET\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByType.html#import-detail","title":"ColorByType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/color_by_type/ColorByType.html#attribute-detail","title":"ColorByType > Attribute detail","text":"Attribute detail\n\n\n\nColorByType.PART = 2\n\n\n\n\n\nColorByType.ZONE = 0\n\n\n\n\n\nColorByType.ZONELET = 1\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldFileReadResults.html#sizefieldfilereadresults","title":"SizeFieldFileReadResults","text":"SizeFieldFileReadResults\n\n\n\nclass ansys.meshing.prime.SizeFieldFileReadResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults of size field file read operation.\n\nParameters\n\nmodel (Model) – Model to create a SizeFieldFileReadResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if size field file read operation was unsuccessful.\n\nsize_field_ids (Iterable[int], optional) – Ids of size fields read by read size field operation.\n\njson_data (dict, optional) – JSON dictionary to create a SizeFieldFileReadResults object with provided parameters.\n\nExamples\n\n>>> size_field_file_read_results = prime.SizeFieldFileReadResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldFileReadResults.html#overview","title":"SizeFieldFileReadResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if size field file read operation was unsuccessful.\n\nsize_field_ids\n\nIds of size fields read by read size field operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SizeFieldFileReadResults object.\n\nset_default\n\nSet the default values of the SizeFieldFileReadResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldFileReadResults.html#import-detail","title":"SizeFieldFileReadResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldFileReadResults.html#property-detail","title":"SizeFieldFileReadResults > Property detail","text":"Property detail\n\n\n\nproperty SizeFieldFileReadResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if size field file read operation was unsuccessful.\n\n\n\nproperty SizeFieldFileReadResults.size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of size fields read by read size field operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SizeFieldFileReadResults.html#method-detail","title":"SizeFieldFileReadResults > Method detail","text":"Method detail\n\n\n\nSizeFieldFileReadResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeFieldFileReadResults.__str__() -> str\n\n\n\n\n\nstatic SizeFieldFileReadResults.print_default()\n\nPrint the default values of SizeFieldFileReadResults object.\n\nExamples\n\n>>> SizeFieldFileReadResults.print_default()\n\n\n\nstatic SizeFieldFileReadResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SizeFieldFileReadResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if size field file read operation was unsuccessful.\n\nsize_field_ids (Iterable[int], optional) – Ids of size fields read by read size field operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_utilities/index.html#the-download_utilitiespy-module","title":"The download_utilities.py module","text":"The download_utilities.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_utilities/index.html#summary","title":"The download_utilities.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDownloadManager\n\nManages downloads of example files.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshParams.html#importfluentmeshingmeshparams","title":"ImportFluentMeshingMeshParams","text":"ImportFluentMeshingMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportFluentMeshingMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, enable_multi_threading: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to import fluent meshing mesh.\n\nParameters\n\nmodel (Model) – Model to create a ImportFluentMeshingMeshParams object with default parameters.\n\nappend (bool, optional) – Option to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nenable_multi_threading (bool, optional) – Option to import multiple files in parallel using multithreading.\n\njson_data (dict, optional) – JSON dictionary to create a ImportFluentMeshingMeshParams object with provided parameters.\n\nExamples\n\n>>> import_fluent_meshing_mesh_params = prime.ImportFluentMeshingMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshParams.html#overview","title":"ImportFluentMeshingMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nenable_multi_threading\n\nOption to import multiple files in parallel using multithreading.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportFluentMeshingMeshParams object.\n\nset_default\n\nSet the default values of the ImportFluentMeshingMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshParams.html#import-detail","title":"ImportFluentMeshingMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshParams.html#property-detail","title":"ImportFluentMeshingMeshParams > Property detail","text":"Property detail\n\n\n\nproperty ImportFluentMeshingMeshParams.append: bool\n\nOption to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\n\n\nproperty ImportFluentMeshingMeshParams.enable_multi_threading: bool\n\nOption to import multiple files in parallel using multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportFluentMeshingMeshParams.html#method-detail","title":"ImportFluentMeshingMeshParams > Method detail","text":"Method detail\n\n\n\nImportFluentMeshingMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportFluentMeshingMeshParams.__str__() -> str\n\n\n\n\n\nstatic ImportFluentMeshingMeshParams.print_default()\n\nPrint the default values of ImportFluentMeshingMeshParams object.\n\nExamples\n\n>>> ImportFluentMeshingMeshParams.print_default()\n\n\n\nstatic ImportFluentMeshingMeshParams.set_default(append: bool = None, enable_multi_threading: bool = None)\n\nSet the default values of the ImportFluentMeshingMeshParams object.\n\nParameters\n\nappend (bool, optional) – Option to append imported mesh to existing mesh instead of resetting model to imported mesh.\n\nenable_multi_threading (bool, optional) – Option to import multiple files in parallel using multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/index.html#the-topodatastructspy-module","title":"The topodatastructs.py module","text":"The topodatastructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/index.html#summary","title":"The topodatastructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDeleteMeshParams\n\nParameters to delete mesh on topoentities.\n\nDeleteMeshResults\n\nResults structure associated with delete mesh on topofaces.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/topodatastructs/index.html#description","title":"The topodatastructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/ConnectFacesParams.html#connectfacesparams","title":"ConnectFacesParams","text":"ConnectFacesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.ConnectFacesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, constant_mesh_size: float = None, absolute_tolerance: float = None, json_data: dict = None, **kwargs)\n\nParameters for connect faces operation.\n\nParameters\n\nmodel (Model) – Model to create a ConnectFacesParams object with default parameters.\n\nconstant_mesh_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\nabsolute_tolerance (float, optional) – Absolute distance tolerance between edges or faces for connect faces operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ConnectFacesParams object with provided parameters.\n\nExamples\n\n>>> connect_faces_params = prime.ConnectFacesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/ConnectFacesParams.html#overview","title":"ConnectFacesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsolute_tolerance\n\nAbsolute distance tolerance between edges or faces for connect faces operation.\n\nconstant_mesh_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ConnectFacesParams object.\n\nset_default\n\nSet the default values of the ConnectFacesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/ConnectFacesParams.html#import-detail","title":"ConnectFacesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/ConnectFacesParams.html#property-detail","title":"ConnectFacesParams > Property detail","text":"Property detail\n\n\n\nproperty ConnectFacesParams.absolute_tolerance: float\n\nAbsolute distance tolerance between edges or faces for connect faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ConnectFacesParams.constant_mesh_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/ConnectFacesParams.html#method-detail","title":"ConnectFacesParams > Method detail","text":"Method detail\n\n\n\nConnectFacesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nConnectFacesParams.__str__() -> str\n\n\n\n\n\nstatic ConnectFacesParams.print_default()\n\nPrint the default values of ConnectFacesParams object.\n\nExamples\n\n>>> ConnectFacesParams.print_default()\n\n\n\nstatic ConnectFacesParams.set_default(constant_mesh_size: float = None, absolute_tolerance: float = None)\n\nSet the default values of the ConnectFacesParams object.\n\nParameters\n\nconstant_mesh_size (float, optional) – Constant size used for surface meshing.\n\nabsolute_tolerance (float, optional) – Absolute distance tolerance between edges or faces for connect faces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineFeatureCaptureType.html#splinefeaturecapturetype","title":"SplineFeatureCaptureType","text":"SplineFeatureCaptureType\n\n\n\nclass ansys.meshing.prime.SplineFeatureCaptureType\n\nOptions to capture features in spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineFeatureCaptureType.html#overview","title":"SplineFeatureCaptureType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nBYANGLE\n\nUses angle for capturing features in spline.\n\nBYEDGES\n\nUse edges for capturing features in spline.\n\nIGNORE\n\nIgnores feature capture in spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineFeatureCaptureType.html#import-detail","title":"SplineFeatureCaptureType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SplineFeatureCaptureType.html#attribute-detail","title":"SplineFeatureCaptureType > Attribute detail","text":"Attribute detail\n\n\n\nSplineFeatureCaptureType.BYANGLE = 1\n\nUses angle for capturing features in spline.\n\n\n\nSplineFeatureCaptureType.BYEDGES = 2\n\nUse edges for capturing features in spline.\n\n\n\nSplineFeatureCaptureType.IGNORE = 0\n\nIgnores feature capture in spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapResult.html#wrapresult","title":"WrapResult","text":"WrapResult\n\n\n\nclass ansys.meshing.prime.WrapResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, id: int = None, name: str = None, json_data: dict = None, **kwargs)\n\nResult structure associated to Wrap operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapResult object with default parameters.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the wrap operation.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrap operation.\n\nid (int, optional) – Id of the wrapper part created.\n\nname (str, optional) – Name of wrapper part created.\n\njson_data (dict, optional) – JSON dictionary to create a WrapResult object with provided parameters.\n\nExamples\n\n>>> wrap_result = prime.WrapResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapResult.html#overview","title":"WrapResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a wrap operation.\n\nid\n\nId of the wrapper part created.\n\nname\n\nName of wrapper part created.\n\nwarning_codes\n\nWarning codes associated with the wrap operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapResult object.\n\nset_default\n\nSet the default values of the WrapResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapResult.html#import-detail","title":"WrapResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapResult.html#property-detail","title":"WrapResult > Property detail","text":"Property detail\n\n\n\nproperty WrapResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a wrap operation.\n\n\n\nproperty WrapResult.id: int\n\nId of the wrapper part created.\n\n\n\nproperty WrapResult.name: str\n\nName of wrapper part created.\n\n\n\nproperty WrapResult.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the wrap operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapResult.html#method-detail","title":"WrapResult > Method detail","text":"Method detail\n\n\n\nWrapResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapResult.__str__() -> str\n\n\n\n\n\nstatic WrapResult.print_default()\n\nPrint the default values of WrapResult object.\n\nExamples\n\n>>> WrapResult.print_default()\n\n\n\nstatic WrapResult.set_default(warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, id: int = None, name: str = None)\n\nSet the default values of the WrapResult object.\n\nParameters\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the wrap operation.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrap operation.\n\nid (int, optional) – Id of the wrapper part created.\n\nname (str, optional) – Name of wrapper part created."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesParams.html#deletevolumesparams","title":"DeleteVolumesParams","text":"DeleteVolumesParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.DeleteVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, delete_small_volumes: bool = None, volume_limit: float = None, json_data: dict = None, **kwargs)\n\nParameters to delete volumes.\n\nParameters\n\nmodel (Model) – Model to create a DeleteVolumesParams object with default parameters.\n\ndelete_small_volumes (bool, optional) – Option to delete only volumes smaller than provided volume limit.\n\nvolume_limit (float, optional) – Maximum volume limit to identify smaller volumes to be deleted.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteVolumesParams object with provided parameters.\n\nExamples\n\n>>> delete_volumes_params = prime.DeleteVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesParams.html#overview","title":"DeleteVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_small_volumes\n\nOption to delete only volumes smaller than provided volume limit.\n\nvolume_limit\n\nMaximum volume limit to identify smaller volumes to be deleted.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteVolumesParams object.\n\nset_default\n\nSet the default values of the DeleteVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesParams.html#import-detail","title":"DeleteVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesParams.html#property-detail","title":"DeleteVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteVolumesParams.delete_small_volumes: bool\n\nOption to delete only volumes smaller than provided volume limit.\n\n\n\nproperty DeleteVolumesParams.volume_limit: float\n\nMaximum volume limit to identify smaller volumes to be deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/DeleteVolumesParams.html#method-detail","title":"DeleteVolumesParams > Method detail","text":"Method detail\n\n\n\nDeleteVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteVolumesParams.__str__() -> str\n\n\n\n\n\nstatic DeleteVolumesParams.print_default()\n\nPrint the default values of DeleteVolumesParams object.\n\nExamples\n\n>>> DeleteVolumesParams.print_default()\n\n\n\nstatic DeleteVolumesParams.set_default(delete_small_volumes: bool = None, volume_limit: float = None)\n\nSet the default values of the DeleteVolumesParams object.\n\nParameters\n\ndelete_small_volumes (bool, optional) – Option to delete only volumes smaller than provided volume limit.\n\nvolume_limit (float, optional) – Maximum volume limit to identify smaller volumes to be deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/HardSizingParams.html#hardsizingparams","title":"HardSizingParams","text":"HardSizingParams\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.HardSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nSize field computed using hard size control enables you to maintain a uniform size based on the size specified.\n\nThe hard sizing will override any other specified size.\n\nParameters\n\nmodel (Model) – Model to create a HardSizingParams object with default parameters.\n\nmin (float, optional) – Minimum size used for computing edge and face size using hard size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\njson_data (dict, optional) – JSON dictionary to create a HardSizingParams object with provided parameters.\n\nExamples\n\n>>> hard_sizing_params = prime.HardSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/HardSizingParams.html#overview","title":"HardSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nmin\n\nMinimum size used for computing edge and face size using hard size control.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of HardSizingParams object.\n\nset_default\n\nSet the default values of the HardSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/HardSizingParams.html#import-detail","title":"HardSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/HardSizingParams.html#property-detail","title":"HardSizingParams > Property detail","text":"Property detail\n\n\n\nproperty HardSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\n\n\nproperty HardSizingParams.min: float\n\nMinimum size used for computing edge and face size using hard size control."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/HardSizingParams.html#method-detail","title":"HardSizingParams > Method detail","text":"Method detail\n\n\n\nHardSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nHardSizingParams.__str__() -> str\n\n\n\n\n\nstatic HardSizingParams.print_default()\n\nPrint the default values of HardSizingParams object.\n\nExamples\n\n>>> HardSizingParams.print_default()\n\n\n\nstatic HardSizingParams.set_default(min: float = None, growth_rate: float = None)\n\nSet the default values of the HardSizingParams object.\n\nParameters\n\nmin (float, optional) – Minimum size used for computing edge and face size using hard size control.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesParams.html#subtractvolumesparams","title":"SubtractVolumesParams","text":"SubtractVolumesParams\n\n\n\nclass ansys.meshing.prime.SubtractVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, ignore_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, check_cutters: bool = None, keep_cutters: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control the volume subtract operation.\n\nParameters\n\nmodel (Model) – Model to create a SubtractVolumesParams object with default parameters.\n\nignore_face_zonelets (Iterable[int], optional) – Face zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\ncheck_cutters (bool, optional) – Option to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\nkeep_cutters (bool, optional) – Option to retain cutter volumes.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a SubtractVolumesParams object with provided parameters.\n\nExamples\n\n>>> subtract_volumes_params = prime.SubtractVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesParams.html#overview","title":"SubtractVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncheck_cutters\n\nOption to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\nignore_face_zonelets\n\nFace zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\nkeep_cutters\n\nOption to retain cutter volumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SubtractVolumesParams object.\n\nset_default\n\nSet the default values of the SubtractVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesParams.html#import-detail","title":"SubtractVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesParams.html#property-detail","title":"SubtractVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty SubtractVolumesParams.check_cutters: bool\n\nOption to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\n\n\nproperty SubtractVolumesParams.ignore_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\n\n\nproperty SubtractVolumesParams.keep_cutters: bool\n\nOption to retain cutter volumes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/SubtractVolumesParams.html#method-detail","title":"SubtractVolumesParams > Method detail","text":"Method detail\n\n\n\nSubtractVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSubtractVolumesParams.__str__() -> str\n\n\n\n\n\nstatic SubtractVolumesParams.print_default()\n\nPrint the default values of SubtractVolumesParams object.\n\nExamples\n\n>>> SubtractVolumesParams.print_default()\n\n\n\nstatic SubtractVolumesParams.set_default(ignore_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, check_cutters: bool = None, keep_cutters: bool = None)\n\nSet the default values of the SubtractVolumesParams object.\n\nParameters\n\nignore_face_zonelets (Iterable[int], optional) – Face zonelet ids that subtract volumes should not remove (for example, periodic or fluid cap zonelets). If ignore face zonelets are provided, then the target volumes after subtract operation need to be recomputed.\n\ncheck_cutters (bool, optional) – Option to manage intersecting cutter volumes. When check cutters is False an error message is provided if multiple cutters intersect. Overlapping cutter volumes are not supported.\n\nkeep_cutters (bool, optional) – Option to retain cutter volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseParams.html#collapseparams","title":"CollapseParams","text":"CollapseParams\n\n\n\nclass ansys.meshing.prime.autogen.collapsetoolstructs.CollapseParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType = None, collapse_ratio: float = None, preserve_quality: bool = None, target_skewness: float = None, keep_edge_connectivity: bool = None, json_data: dict = None, **kwargs)\n\nParameters to collapse face elements.\n\nParameters\n\nmodel (Model) – Model to create a CollapseParams object with default parameters.\n\nfeature_type (SurfaceFeatureType, optional) – Feature type to be preserved when performing collapse.\n\ncollapse_ratio (float, optional) – Maximum ratio of shortest face edge length to longest face edge length.\n\npreserve_quality (bool, optional) – Option to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\ntarget_skewness (float, optional) – Skewness limit used as target to preserve quality. Better quality elements are skipped for collapse.\n\nkeep_edge_connectivity (bool, optional) – Option to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a CollapseParams object with provided parameters.\n\nExamples\n\n>>> collapse_params = prime.CollapseParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseParams.html#overview","title":"CollapseParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncollapse_ratio\n\nMaximum ratio of shortest face edge length to longest face edge length.\n\nfeature_type\n\nFeature type to be preserved when performing collapse.\n\nkeep_edge_connectivity\n\nOption to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces.\n\npreserve_quality\n\nOption to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\ntarget_skewness\n\nSkewness limit used as target to preserve quality. Better quality elements are skipped for collapse.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CollapseParams object.\n\nset_default\n\nSet the default values of the CollapseParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseParams.html#import-detail","title":"CollapseParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseParams.html#property-detail","title":"CollapseParams > Property detail","text":"Property detail\n\n\n\nproperty CollapseParams.collapse_ratio: float\n\nMaximum ratio of shortest face edge length to longest face edge length.\n\n\n\nproperty CollapseParams.feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType\n\nFeature type to be preserved when performing collapse.\n\n\n\nproperty CollapseParams.keep_edge_connectivity: bool\n\nOption to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty CollapseParams.preserve_quality: bool\n\nOption to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\n\n\nproperty CollapseParams.target_skewness: float\n\nSkewness limit used as target to preserve quality. Better quality elements are skipped for collapse."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseParams.html#method-detail","title":"CollapseParams > Method detail","text":"Method detail\n\n\n\nCollapseParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCollapseParams.__str__() -> str\n\n\n\n\n\nstatic CollapseParams.print_default()\n\nPrint the default values of CollapseParams object.\n\nExamples\n\n>>> CollapseParams.print_default()\n\n\n\nstatic CollapseParams.set_default(feature_type: ansys.meshing.prime.params.primestructs.SurfaceFeatureType = None, collapse_ratio: float = None, preserve_quality: bool = None, target_skewness: float = None, keep_edge_connectivity: bool = None)\n\nSet the default values of the CollapseParams object.\n\nParameters\n\nfeature_type (SurfaceFeatureType, optional) – Feature type to be preserved when performing collapse.\n\ncollapse_ratio (float, optional) – Maximum ratio of shortest face edge length to longest face edge length.\n\npreserve_quality (bool, optional) – Option to preserve quality of neighboring triangles when performing collapse.Collapse may lead to quality deterioration beyond target skewness. Such collapse is prevented, when the option is enabled.\n\ntarget_skewness (float, optional) – Skewness limit used as target to preserve quality. Better quality elements are skipped for collapse.\n\nkeep_edge_connectivity (bool, optional) – Option to keep edge connectivity. The default value is false. When keep edge connectivity is true, edges that were connected to collapsed triangles will be connected to different triangles. Otherwise, edges will be disconnected from faces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrol/PrismControl.html#prismcontrol","title":"PrismControl","text":"PrismControl\n\n\n\nclass ansys.meshing.prime.autogen.prismcontrol.PrismControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nPrismControl allows you to generate prisms.\n\nPrismControl allows you to control generation of prisms. Controls include setting the face scope, volume scope and growth parameters.\n\nParameters\n\nmodel (Model) – Server model to create PrismControl object.\n\nid (int) – Id of the PrismControl.\n\nobject_id (int) – Object id of the PrismControl.\n\nname (str) – Name of the PrismControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrol/PrismControl.html#overview","title":"PrismControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_growth_params\n\nGets the prism parameters for prism control.\n\nget_surface_scope\n\nGets the surface control scope.\n\nget_volume_scope\n\nGets the volume control scope.\n\nset_growth_params\n\nSet growth parameters for prism control.\n\nset_suggested_name\n\nSets the unique name for the prism control based on the suggested name.\n\nset_surface_scope\n\nSets the surface control scope.\n\nset_volume_scope\n\nSets the volume control scope.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of PrismControl.\n\nname\n\nGet the name of PrismControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrol/PrismControl.html#import-detail","title":"PrismControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrol/PrismControl.html#property-detail","title":"PrismControl > Property detail","text":"Property detail\n\n\n\nproperty PrismControl.id\n\nGet the id of PrismControl.\n\n\n\nproperty PrismControl.name\n\nGet the name of PrismControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/prismcontrol/PrismControl.html#method-detail","title":"PrismControl > Method detail","text":"Method detail\n\n\n\nPrismControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismControl.get_growth_params() -> ansys.meshing.prime.params.primestructs.PrismControlGrowthParams\n\nGets the prism parameters for prism control.\n\nReturns\n\nReturns the PrismControlGrowthParams.\n\nReturn type\n\nPrismControlGrowthParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prism_ctrl.get_growth_params()\n\n\n\nPrismControl.get_surface_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the surface control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = prism_control.get_surface_scope()\n\n\n\nPrismControl.get_volume_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the volume control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = prism_control.get_volume_scope()\n\n\n\nPrismControl.set_growth_params(prism_control_growth_params: ansys.meshing.prime.params.primestructs.PrismControlGrowthParams)\n\nSet growth parameters for prism control.\n\nParameters\n\nprism_control_growth_params (PrismControlGrowthParams) – Parameters to set prism control growth.\n\nExamples\n\n>>> results = prism_control.set_growth_params(PrismControlGrowthParams(model=model))\n\n\n\nPrismControl.set_suggested_name(name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for the prism control based on the suggested name.\n\nParameters\n\nname (str) – Suggested name for the prism control.\n\nReturns\n\nReturns the SetNameResults.\n\nReturn type\n\nSetNameResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> prism_control.set_suggested_name(\"control1\")\n\n\n\nPrismControl.set_surface_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the surface control scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = prism_control.set_surface_scope(entities)\n\n\n\nPrismControl.set_volume_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the volume control scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = prism_control.set_volume_scope(entities)"},{"objectID":"Home","href":"api/ansys/meshing/prime/params/primestructs/index.html#the-primestructspy-module","title":"The primestructs.py module","text":"The primestructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/params/primestructs/index.html#summary","title":"The primestructs.py module > Summary","text":"Summary"},{"objectID":"Home","href":"api/ansys/meshing/prime/params/primestructs/index.html#description","title":"The primestructs.py module > Description","text":"Description\n\nModule for imports of autogen modules."},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSplineParams.html#boundaryfittedsplineparams","title":"BoundaryFittedSplineParams","text":"BoundaryFittedSplineParams\n\n\n\nclass ansys.meshing.prime.BoundaryFittedSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, degree_u: int = None, degree_v: int = None, degree_w: int = None, refinement_fraction_u: float = None, refinement_fraction_v: float = None, refinement_fraction_w: float = None, control_points_count_u: int = None, control_points_count_v: int = None, control_points_count_w: int = None, n_refine: int = None, control_point_selection_type: ControlPointSelection = None, json_data: dict = None, **kwargs)\n\nBoundary fitted spline fitting parameters.\n\nParameters\n\nmodel (Model) – Model to create a BoundaryFittedSplineParams object with default parameters.\n\ndegree_u (int, optional) – Degree of spline in u direction.\n\ndegree_v (int, optional) – Degree of spline in v direction.\n\ndegree_w (int, optional) – Degree of spline in w direction.\n\nrefinement_fraction_u (float, optional) – Fraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_v (float, optional) – Fraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_w (float, optional) – Fraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode.\n\ncontrol_points_count_u (int, optional) – Spline control points count in U direction. Used in manual control points selection mode.\n\ncontrol_points_count_v (int, optional) – Spline control points count in V direction. Used in manual control points selection mode.\n\ncontrol_points_count_w (int, optional) – Spline control points count in W direction. Used in manual control points selection mode.\n\nn_refine (int, optional) – Spline refinement level for rendering.\n\ncontrol_point_selection_type (ControlPointSelection, optional) – Spline control points selection type.\n\njson_data (dict, optional) – JSON dictionary to create a BoundaryFittedSplineParams object with provided parameters.\n\nExamples\n\n>>> boundary_fitted_spline_params = prime.BoundaryFittedSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSplineParams.html#overview","title":"BoundaryFittedSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontrol_point_selection_type\n\nSpline control points selection type.\n\ncontrol_points_count_u\n\nSpline control points count in U direction. Used in manual control points selection mode.\n\ncontrol_points_count_v\n\nSpline control points count in V direction. Used in manual control points selection mode.\n\ncontrol_points_count_w\n\nSpline control points count in W direction. Used in manual control points selection mode.\n\ndegree_u\n\nDegree of spline in u direction.\n\ndegree_v\n\nDegree of spline in v direction.\n\ndegree_w\n\nDegree of spline in w direction.\n\nn_refine\n\nSpline refinement level for rendering.\n\nrefinement_fraction_u\n\nFraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_v\n\nFraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_w\n\nFraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of BoundaryFittedSplineParams object.\n\nset_default\n\nSet the default values of the BoundaryFittedSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSplineParams.html#import-detail","title":"BoundaryFittedSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSplineParams.html#property-detail","title":"BoundaryFittedSplineParams > Property detail","text":"Property detail\n\n\n\nproperty BoundaryFittedSplineParams.control_point_selection_type: ControlPointSelection\n\nSpline control points selection type.\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_u: int\n\nSpline control points count in U direction. Used in manual control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_v: int\n\nSpline control points count in V direction. Used in manual control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_w: int\n\nSpline control points count in W direction. Used in manual control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.degree_u: int\n\nDegree of spline in u direction.\n\n\n\nproperty BoundaryFittedSplineParams.degree_v: int\n\nDegree of spline in v direction.\n\n\n\nproperty BoundaryFittedSplineParams.degree_w: int\n\nDegree of spline in w direction.\n\n\n\nproperty BoundaryFittedSplineParams.n_refine: int\n\nSpline refinement level for rendering.\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_u: float\n\nFraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_v: float\n\nFraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_w: float\n\nFraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode."},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSplineParams.html#method-detail","title":"BoundaryFittedSplineParams > Method detail","text":"Method detail\n\n\n\nBoundaryFittedSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBoundaryFittedSplineParams.__str__() -> str\n\n\n\n\n\nstatic BoundaryFittedSplineParams.print_default()\n\nPrint the default values of BoundaryFittedSplineParams object.\n\nExamples\n\n>>> BoundaryFittedSplineParams.print_default()\n\n\n\nstatic BoundaryFittedSplineParams.set_default(degree_u: int = None, degree_v: int = None, degree_w: int = None, refinement_fraction_u: float = None, refinement_fraction_v: float = None, refinement_fraction_w: float = None, control_points_count_u: int = None, control_points_count_v: int = None, control_points_count_w: int = None, n_refine: int = None, control_point_selection_type: ControlPointSelection = None)\n\nSet the default values of the BoundaryFittedSplineParams object.\n\nParameters\n\ndegree_u (int, optional) – Degree of spline in u direction.\n\ndegree_v (int, optional) – Degree of spline in v direction.\n\ndegree_w (int, optional) – Degree of spline in w direction.\n\nrefinement_fraction_u (float, optional) – Fraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_v (float, optional) – Fraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_w (float, optional) – Fraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode.\n\ncontrol_points_count_u (int, optional) – Spline control points count in U direction. Used in manual control points selection mode.\n\ncontrol_points_count_v (int, optional) – Spline control points count in V direction. Used in manual control points selection mode.\n\ncontrol_points_count_w (int, optional) – Spline control points count in W direction. Used in manual control points selection mode.\n\nn_refine (int, optional) – Spline refinement level for rendering.\n\ncontrol_point_selection_type (ControlPointSelection, optional) – Spline control points selection type."},{"objectID":"Computation times","href":"sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n17:32.855 total execution time for 13 files from all galleries:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nsphx_glr_examples_gallery_examples_gallery_04_lucid_toy_car.py (../../examples/gallery/04_lucid_toy_car.py)\n\n03:35.634\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_10_wheel_ground_contact_patch.py (../../examples/gallery/10_wheel_ground_contact_patch.py)\n\n02:36.853\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_11_solder_ball.py (../../examples/gallery/11_solder_ball.py)\n\n02:31.595\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_03_lucid_pipe_tee.py (../../examples/gallery/03_lucid_pipe_tee.py)\n\n02:29.724\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_08_lucid_generic_f1_rear_wing.py (../../examples/gallery/08_lucid_generic_f1_rear_wing.py)\n\n01:41.754\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_09_multi_layer_quad_mesh_pcb.py (../../examples/gallery/09_multi_layer_quad_mesh_pcb.py)\n\n01:09.460\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_06_blade_morph.py (../../examples/gallery/06_blade_morph.py)\n\n01:05.847\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_05_pcb_stacker.py (../../examples/gallery/05_pcb_stacker.py)\n\n00:31.156\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_07_saddle_bracket.py (../../examples/gallery/07_saddle_bracket.py)\n\n00:24.768\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_01_bracket_scaffold.py (../../examples/gallery/01_bracket_scaffold.py)\n\n00:23.215\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_00_lucid_file_IO.py (../../examples/gallery/00_lucid_file_IO.py)\n\n00:22.789\n\n0.0\n\nsphx_glr_examples_gallery_examples_gallery_02_lucid_mixing_elbow.py (../../examples/gallery/02_lucid_mixing_elbow.py)\n\n00:21.275\n\n0.0\n\nsphx_glr_examples_gallery_examples_misc_example_template.py (../../examples/misc/example_template.py)\n\n00:18.785\n\n0.0"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_wheel_ground_scdoc.html#ansysmeshingprimeexamplesexamplesdownload_wheel_ground_scdoc","title":"ansys.meshing.prime.examples.examples.download_wheel_ground_scdoc","text":"ansys.meshing.prime.examples.examples.download_wheel_ground_scdoc\n\n\n\nansys.meshing.prime.examples.examples.download_wheel_ground_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the wheel ground contact patch example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/coreobject/CoreObject.html#coreobject","title":"CoreObject","text":"CoreObject\n\n\n\nclass ansys.meshing.prime.autogen.coreobject.CoreObject\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/coreobject/CoreObject.html#overview","title":"CoreObject > Overview","text":"Overview\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/coreobject/CoreObject.html#import-detail","title":"CoreObject > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/coreobject/CoreObject.html#method-detail","title":"CoreObject > Method detail","text":"Method detail\n\n\n\nCoreObject.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesResults.html#stretchfreeboundariesresults","title":"StretchFreeBoundariesResults","text":"StretchFreeBoundariesResults\n\n\n\nclass ansys.meshing.prime.StretchFreeBoundariesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with stretch free boundaries operation.\n\nParameters\n\nmodel (Model) – Model to create a StretchFreeBoundariesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a StretchFreeBoundariesResults object with provided parameters.\n\nExamples\n\n>>> stretch_free_boundaries_results = prime.StretchFreeBoundariesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesResults.html#overview","title":"StretchFreeBoundariesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of StretchFreeBoundariesResults object.\n\nset_default\n\nSet the default values of the StretchFreeBoundariesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesResults.html#import-detail","title":"StretchFreeBoundariesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesResults.html#property-detail","title":"StretchFreeBoundariesResults > Property detail","text":"Property detail\n\n\n\nproperty StretchFreeBoundariesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/StretchFreeBoundariesResults.html#method-detail","title":"StretchFreeBoundariesResults > Method detail","text":"Method detail\n\n\n\nStretchFreeBoundariesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nStretchFreeBoundariesResults.__str__() -> str\n\n\n\n\n\nstatic StretchFreeBoundariesResults.print_default()\n\nPrint the default values of StretchFreeBoundariesResults object.\n\nExamples\n\n>>> StretchFreeBoundariesResults.print_default()\n\n\n\nstatic StretchFreeBoundariesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the StretchFreeBoundariesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/index.html#the-transformstructspy-module","title":"The transformstructs.py module","text":"The transformstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/index.html#summary","title":"The transformstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTransformParams\n\nParameters to transform given entities.\n\nTransformResults\n\nResults associated with the transformation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transformstructs/index.html#description","title":"The transformstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/MaterialProcessor.html#materialprocessor","title":"MaterialProcessor","text":"MaterialProcessor\n\n\n\nclass ansys.meshing.prime.core.dynaexportutils.MaterialProcessor(model: ansys.meshing.prime.Model, sim_data: dict, card_format: str = 'SHORT')\n\nProcesses the material information.\n\nProcesses simulation data to generate LS-DYNA commands.\n\nParameters\n\nmodel (prime.Model) – Model that the methods are to work on.\n\nsim_data (dict) – The simulation data in json dictionary format containing materials and zone information.\n\ncard_format (str, optional) – The LS-DYNA card format for writing. Defaults to “SHORT”.\n\nNotes\n\nThis is a beta class. The behavior and implementation may change in future."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/MaterialProcessor.html#overview","title":"MaterialProcessor > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_all_material_commands\n\nGenerate and return all the material commands to be added to the LS-DYNA export file.\n\nget_material_commands_by_material_id\n\nGenerate and return the material commands for a specific material given it’s id.\n\nget_material_commands_by_material_name\n\nGenerate and return the material commands for a specific material given it’s name.\n\nAttributes\n\n\n\n\n\n__slots__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/MaterialProcessor.html#import-detail","title":"MaterialProcessor > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/MaterialProcessor.html#attribute-detail","title":"MaterialProcessor > Attribute detail","text":"Attribute detail\n\n\n\nMaterialProcessor.__slots__ = ('_card_format', '_sim_data', '_raw_materials_data', '_zone_data', '_mat_id', '_wt_factor',...\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/MaterialProcessor.html#method-detail","title":"MaterialProcessor > Method detail","text":"Method detail\n\n\n\nMaterialProcessor.get_all_material_commands() -> str\n\nGenerate and return all the material commands to be added to the LS-DYNA export file.\n\nReturns\n\nstr:\n\nA string containing all the material commands.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\n\n\nMaterialProcessor.get_material_commands_by_material_id(id: int) -> str\n\nGenerate and return the material commands for a specific material given it’s id.\n\nThis is to be added to the LS-DYNA export file.\n\nParameters\n\nid (int) – Material id to generate material commands for.\n\nReturns\n\nstr\n\nA string containing the material commands for the given material.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\n\n\nMaterialProcessor.get_material_commands_by_material_name(mat_name: str) -> str\n\nGenerate and return the material commands for a specific material given it’s name.\n\nThis is to be added to the LS-DYNA export file.\n\nParameters\n\nmat_name (str) – The name of the material.\n\nReturns\n\nstr:\n\nA string containing the material commands for the given material.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future."},{"objectID":"Home","href":"user_guide/launch_prime.html#launching-pyprimemesh","title":"Launching PyPrimeMesh","text":"Launching PyPrimeMesh"},{"objectID":"Home","href":"user_guide/launch_prime.html#launch-server-from-a-python-script","title":"Launching PyPrimeMesh > Launch server from a Python script","text":"Launch server from a Python script\n\nThe launch_prime() method launches Ansys Prime Server.\n\nThis code returns an instance of the PyPrimeMesh Client class\nconnected to the launched server session:\n\nYou can send commands to Ansys Prime Server and receive responses from it.\n\nThe Client class gets the model\nparameter associated with the client instance:"},{"objectID":"Home","href":"user_guide/launch_prime.html#launch-server-from-a-windows-or-linux-console-and-connect-the-client","title":"Launching PyPrimeMesh > Launch server from a Windows or Linux console and connect the client","text":"Launch server from a Windows or Linux console and connect the client\n\nYou can launch Ansys Prime Server on Linux or Windows from a command prompt and then connect to the client as needed.\n\nThis example starts the server in parallel mode on four nodes and specifies the IP address and port on Windows:\n\nLaunch the server from a command line:\n\nConnect to the server in Python using the Client class:\n\nOnly a single client session can be connected to an active Ansys Prime Server instance at any time."},{"objectID":"Home","href":"user_guide/launch_prime.html#disconnect-from-the-server","title":"Launching PyPrimeMesh > Disconnect from the server","text":"Disconnect from the server\n\nThe Client.exit() method ends the connection with the server.\n\nIf the Client class launched the server, then this terminates the server process.\n\nIf you use Intel(R) MPI Library, Version 2021.8, you may encounter the following error while exiting the client:"},{"objectID":"Home","href":"user_guide/launch_prime.html#run-a-python-script-in-batch-on-the-server","title":"Launching PyPrimeMesh > Run a Python script in batch on the server","text":"Run a Python script in batch on the server\n\nYou can run a Python script directly on the server from a Linux or Windows console.\n\nHere is a Windows code example for running a Python script directly from the command line:"},{"objectID":"Home","href":"user_guide/launch_prime.html#recommendations-for-launching-the-server","title":"Launching PyPrimeMesh > Recommendations for launching the server","text":"Recommendations for launching the server\n\nWhen developing, you can use Python context to launch the server so that if an exception\noccurs during runtime the server closes cleanly. This prevents servers being spawned and\nleft open blocking ports.\n\nThis code example shows how to manage the server lifecycle using context to make development easier:\n\nUsing the Client.exit() method to close the server in this instance is not required."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneResults.html#fillholesatplaneresults","title":"FillHolesAtPlaneResults","text":"FillHolesAtPlaneResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.FillHolesAtPlaneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, assigned_zone_name: str = None, created_zone_id: int = None, json_data: dict = None, **kwargs)\n\nResults associated with fill holes at given plane.\n\nParameters\n\nmodel (Model) – Model to create a FillHolesAtPlaneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with operation.\n\ncreated_face_zonelets (Iterable[int], optional) – Ids of face zonelets created to fill the holes.\n\nassigned_zone_name (str, optional) – Name assigned to zone created. Suffix is added to suggested name if the name not available.\n\ncreated_zone_id (int, optional) – Id assigned to zone created.\n\njson_data (dict, optional) – JSON dictionary to create a FillHolesAtPlaneResults object with provided parameters.\n\nExamples\n\n>>> fill_holes_at_plane_results = prime.FillHolesAtPlaneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneResults.html#overview","title":"FillHolesAtPlaneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_zone_name\n\nName assigned to zone created. Suffix is added to suggested name if the name not available.\n\ncreated_face_zonelets\n\nIds of face zonelets created to fill the holes.\n\ncreated_zone_id\n\nId assigned to zone created.\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FillHolesAtPlaneResults object.\n\nset_default\n\nSet the default values of the FillHolesAtPlaneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneResults.html#import-detail","title":"FillHolesAtPlaneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneResults.html#property-detail","title":"FillHolesAtPlaneResults > Property detail","text":"Property detail\n\n\n\nproperty FillHolesAtPlaneResults.assigned_zone_name: str\n\nName assigned to zone created. Suffix is added to suggested name if the name not available.\n\n\n\nproperty FillHolesAtPlaneResults.created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of face zonelets created to fill the holes.\n\n\n\nproperty FillHolesAtPlaneResults.created_zone_id: int\n\nId assigned to zone created.\n\n\n\nproperty FillHolesAtPlaneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty FillHolesAtPlaneResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneResults.html#method-detail","title":"FillHolesAtPlaneResults > Method detail","text":"Method detail\n\n\n\nFillHolesAtPlaneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFillHolesAtPlaneResults.__str__() -> str\n\n\n\n\n\nstatic FillHolesAtPlaneResults.print_default()\n\nPrint the default values of FillHolesAtPlaneResults object.\n\nExamples\n\n>>> FillHolesAtPlaneResults.print_default()\n\n\n\nstatic FillHolesAtPlaneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, assigned_zone_name: str = None, created_zone_id: int = None)\n\nSet the default values of the FillHolesAtPlaneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with operation.\n\ncreated_face_zonelets (Iterable[int], optional) – Ids of face zonelets created to fill the holes.\n\nassigned_zone_name (str, optional) – Name assigned to zone created. Suffix is added to suggested name if the name not available.\n\ncreated_zone_id (int, optional) – Id assigned to zone created."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeEvaluationType.html#scopeevaluationtype","title":"ScopeEvaluationType","text":"ScopeEvaluationType\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.ScopeEvaluationType\n\nScopeDefinition uses evaluation type to evaluate the scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeEvaluationType.html#overview","title":"ScopeEvaluationType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nLABELS\n\nUse labels to evaluate the scope.\n\nZONES\n\nUse zones to evaluate the scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeEvaluationType.html#import-detail","title":"ScopeEvaluationType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeEvaluationType.html#attribute-detail","title":"ScopeEvaluationType > Attribute detail","text":"Attribute detail\n\n\n\nScopeEvaluationType.LABELS = 3\n\nUse labels to evaluate the scope.\n\n\n\nScopeEvaluationType.ZONES = 4\n\nUse zones to evaluate the scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesResults.html#subtractvolumesresults","title":"SubtractVolumesResults","text":"SubtractVolumesResults\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.SubtractVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults of the volume subtract operation.\n\nParameters\n\nmodel (Model) – Model to create a SubtractVolumesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume subtract operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the volume subtract operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a SubtractVolumesResults object with provided parameters.\n\nExamples\n\n>>> subtract_volumes_results = prime.SubtractVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesResults.html#overview","title":"SubtractVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the volume subtract operation.\n\nwarning_codes\n\nWarning codes associated with the volume subtract operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SubtractVolumesResults object.\n\nset_default\n\nSet the default values of the SubtractVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesResults.html#import-detail","title":"SubtractVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesResults.html#property-detail","title":"SubtractVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty SubtractVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume subtract operation.\n\n\n\nproperty SubtractVolumesResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the volume subtract operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/SubtractVolumesResults.html#method-detail","title":"SubtractVolumesResults > Method detail","text":"Method detail\n\n\n\nSubtractVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSubtractVolumesResults.__str__() -> str\n\n\n\n\n\nstatic SubtractVolumesResults.print_default()\n\nPrint the default values of SubtractVolumesResults object.\n\nExamples\n\n>>> SubtractVolumesResults.print_default()\n\n\n\nstatic SubtractVolumesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the SubtractVolumesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the volume subtract operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the volume subtract operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/EdgeConnectivityResults.html#edgeconnectivityresults","title":"EdgeConnectivityResults","text":"EdgeConnectivityResults\n\n\n\nclass ansys.meshing.prime.autogen.meshinfostructs.EdgeConnectivityResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, edge_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, mesh_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_edge_types: ansys.meshing.prime.params.primestructs.Iterable[int] = None, num_nodes_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, node_coords: ansys.meshing.prime.params.primestructs.Iterable[float] = None, num_edge_list_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, edge_list: ansys.meshing.prime.params.primestructs.Iterable[int] = None, num_edges_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult of the edge connectivity information.\n\nParameters\n\nmodel (Model) – Model to create a EdgeConnectivityResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the get edge connectivity operation.\n\nedge_zonelet_ids (Iterable[int], optional) – Edge zonelet ids for which connectivity data is available.\n\ntopo_edge_ids (Iterable[int], optional) – TopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\nmesh_edge_ids (Iterable[int], optional) – Mesh edge ids corresponding to each topoedge.\n\ntopo_edge_types (Iterable[int], optional) – TopoEdge type corresponding to each topoedge.\n\nnum_nodes_per_edge_zonelet (Iterable[int], optional) – Number of nodes per edge zonelet.\n\nnode_coords (Iterable[float], optional) – Node coordinates describing edges of edge zonelet.\n\nnum_edge_list_per_edge_zonelet (Iterable[int], optional) – Number of edge list per edge zonelet.\n\nedge_list (Iterable[int], optional) – Edge list describing connectivity of node coordinates.\n\nnum_edges_per_edge_zonelet (Iterable[int], optional) – Number of edges per edge zonelet.\n\njson_data (dict, optional) – JSON dictionary to create a EdgeConnectivityResults object with provided parameters.\n\nExamples\n\n>>> edge_connectivity_results = prime.EdgeConnectivityResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/EdgeConnectivityResults.html#overview","title":"EdgeConnectivityResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_list\n\nEdge list describing connectivity of node coordinates.\n\nedge_zonelet_ids\n\nEdge zonelet ids for which connectivity data is available.\n\nerror_code\n\nError code associated with the get edge connectivity operation.\n\nmesh_edge_ids\n\nMesh edge ids corresponding to each topoedge.\n\nnode_coords\n\nNode coordinates describing edges of edge zonelet.\n\nnum_edge_list_per_edge_zonelet\n\nNumber of edge list per edge zonelet.\n\nnum_edges_per_edge_zonelet\n\nNumber of edges per edge zonelet.\n\nnum_nodes_per_edge_zonelet\n\nNumber of nodes per edge zonelet.\n\ntopo_edge_ids\n\nTopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\ntopo_edge_types\n\nTopoEdge type corresponding to each topoedge.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of EdgeConnectivityResults object.\n\nset_default\n\nSet the default values of the EdgeConnectivityResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/EdgeConnectivityResults.html#import-detail","title":"EdgeConnectivityResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/EdgeConnectivityResults.html#property-detail","title":"EdgeConnectivityResults > Property detail","text":"Property detail\n\n\n\nproperty EdgeConnectivityResults.edge_list: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nEdge list describing connectivity of node coordinates.\n\n\n\nproperty EdgeConnectivityResults.edge_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nEdge zonelet ids for which connectivity data is available.\n\n\n\nproperty EdgeConnectivityResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the get edge connectivity operation.\n\n\n\nproperty EdgeConnectivityResults.mesh_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nMesh edge ids corresponding to each topoedge.\n\n\n\nproperty EdgeConnectivityResults.node_coords: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nNode coordinates describing edges of edge zonelet.\n\n\n\nproperty EdgeConnectivityResults.num_edge_list_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of edge list per edge zonelet.\n\n\n\nproperty EdgeConnectivityResults.num_edges_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of edges per edge zonelet.\n\n\n\nproperty EdgeConnectivityResults.num_nodes_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nNumber of nodes per edge zonelet.\n\n\n\nproperty EdgeConnectivityResults.topo_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\n\n\nproperty EdgeConnectivityResults.topo_edge_types: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoEdge type corresponding to each topoedge."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/EdgeConnectivityResults.html#method-detail","title":"EdgeConnectivityResults > Method detail","text":"Method detail\n\n\n\nEdgeConnectivityResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nEdgeConnectivityResults.__str__() -> str\n\n\n\n\n\nstatic EdgeConnectivityResults.print_default()\n\nPrint the default values of EdgeConnectivityResults object.\n\nExamples\n\n>>> EdgeConnectivityResults.print_default()\n\n\n\nstatic EdgeConnectivityResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, edge_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, mesh_edge_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, topo_edge_types: ansys.meshing.prime.params.primestructs.Iterable[int] = None, num_nodes_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, node_coords: ansys.meshing.prime.params.primestructs.Iterable[float] = None, num_edge_list_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None, edge_list: ansys.meshing.prime.params.primestructs.Iterable[int] = None, num_edges_per_edge_zonelet: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the EdgeConnectivityResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the get edge connectivity operation.\n\nedge_zonelet_ids (Iterable[int], optional) – Edge zonelet ids for which connectivity data is available.\n\ntopo_edge_ids (Iterable[int], optional) – TopoEdge ids corresponding to each edge zonelet id for topology based mesh.\n\nmesh_edge_ids (Iterable[int], optional) – Mesh edge ids corresponding to each topoedge.\n\ntopo_edge_types (Iterable[int], optional) – TopoEdge type corresponding to each topoedge.\n\nnum_nodes_per_edge_zonelet (Iterable[int], optional) – Number of nodes per edge zonelet.\n\nnode_coords (Iterable[float], optional) – Node coordinates describing edges of edge zonelet.\n\nnum_edge_list_per_edge_zonelet (Iterable[int], optional) – Number of edge list per edge zonelet.\n\nedge_list (Iterable[int], optional) – Edge list describing connectivity of node coordinates.\n\nnum_edges_per_edge_zonelet (Iterable[int], optional) – Number of edges per edge zonelet."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/index.html#the-toggle_edgespy-module","title":"The toggle_edges.py module","text":"The toggle_edges.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/index.html#summary","title":"The toggle_edges.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nToggleEdges\n\nToggles the edges of the mesh objects.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/index.html#description","title":"The toggle_edges.py module > Description","text":"Description\n\nModule for ToggleEdges widget."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/VolumetricScaffolderParams.html#volumetricscaffolderparams","title":"VolumetricScaffolderParams","text":"VolumetricScaffolderParams\n\n\n\nclass ansys.meshing.prime.autogen.scaffolderstructs.VolumetricScaffolderParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, absolute_dist_tol: float = None, only_check_exact_overlaps: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control delete shadowed topofaces operation.\n\nParameters\n\nmodel (Model) – Model to create a VolumetricScaffolderParams object with default parameters.\n\nabsolute_dist_tol (float, optional) – Specify distance tolerance between overlapping faces.\n\nonly_check_exact_overlaps (bool, optional) – Check only for fully overlapping topofaces when true.\n\njson_data (dict, optional) – JSON dictionary to create a VolumetricScaffolderParams object with provided parameters.\n\nExamples\n\n>>> volumetric_scaffolder_params = prime.VolumetricScaffolderParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/VolumetricScaffolderParams.html#overview","title":"VolumetricScaffolderParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nabsolute_dist_tol\n\nSpecify distance tolerance between overlapping faces.\n\nonly_check_exact_overlaps\n\nCheck only for fully overlapping topofaces when true.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumetricScaffolderParams object.\n\nset_default\n\nSet the default values of the VolumetricScaffolderParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/VolumetricScaffolderParams.html#import-detail","title":"VolumetricScaffolderParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/VolumetricScaffolderParams.html#property-detail","title":"VolumetricScaffolderParams > Property detail","text":"Property detail\n\n\n\nproperty VolumetricScaffolderParams.absolute_dist_tol: float\n\nSpecify distance tolerance between overlapping faces.\n\n\n\nproperty VolumetricScaffolderParams.only_check_exact_overlaps: bool\n\nCheck only for fully overlapping topofaces when true."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/scaffolderstructs/VolumetricScaffolderParams.html#method-detail","title":"VolumetricScaffolderParams > Method detail","text":"Method detail\n\n\n\nVolumetricScaffolderParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumetricScaffolderParams.__str__() -> str\n\n\n\n\n\nstatic VolumetricScaffolderParams.print_default()\n\nPrint the default values of VolumetricScaffolderParams object.\n\nExamples\n\n>>> VolumetricScaffolderParams.print_default()\n\n\n\nstatic VolumetricScaffolderParams.set_default(absolute_dist_tol: float = None, only_check_exact_overlaps: bool = None)\n\nSet the default values of the VolumetricScaffolderParams object.\n\nParameters\n\nabsolute_dist_tol (float, optional) – Specify distance tolerance between overlapping faces.\n\nonly_check_exact_overlaps (bool, optional) – Check only for fully overlapping topofaces when true."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FlowDirection.html#flowdirection","title":"FlowDirection","text":"FlowDirection\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.FlowDirection\n\nFlow or wake direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FlowDirection.html#overview","title":"FlowDirection > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nX\n\nFlow or wake inflation in the X direction for BOI creation.\n\nY\n\nFlow or wake inflation in the Y direction for BOI creation.\n\nZ\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FlowDirection.html#import-detail","title":"FlowDirection > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FlowDirection.html#attribute-detail","title":"FlowDirection > Attribute detail","text":"Attribute detail\n\n\n\nFlowDirection.X = 1\n\nFlow or wake inflation in the X direction for BOI creation.\n\n\n\nFlowDirection.Y = 2\n\nFlow or wake inflation in the Y direction for BOI creation.\n\n\n\nFlowDirection.Z = 3\n\nFlow or wake inflation in the Z direction for BOI creation."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointParams.html#creatematerialpointparams","title":"CreateMaterialPointParams","text":"CreateMaterialPointParams\n\n\n\nclass ansys.meshing.prime.CreateMaterialPointParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, type: MaterialPointType = None, json_data: dict = None, **kwargs)\n\nDefines parameters to create material point.\n\nParameters\n\nmodel (Model) – Model to create a CreateMaterialPointParams object with default parameters.\n\ntype (MaterialPointType, optional) – Defines the type of material point.\n\njson_data (dict, optional) – JSON dictionary to create a CreateMaterialPointParams object with provided parameters.\n\nExamples\n\n>>> create_material_point_params = prime.CreateMaterialPointParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointParams.html#overview","title":"CreateMaterialPointParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntype\n\nDefines the type of material point.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateMaterialPointParams object.\n\nset_default\n\nSet the default values of the CreateMaterialPointParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointParams.html#import-detail","title":"CreateMaterialPointParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointParams.html#property-detail","title":"CreateMaterialPointParams > Property detail","text":"Property detail\n\n\n\nproperty CreateMaterialPointParams.type: MaterialPointType\n\nDefines the type of material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateMaterialPointParams.html#method-detail","title":"CreateMaterialPointParams > Method detail","text":"Method detail\n\n\n\nCreateMaterialPointParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateMaterialPointParams.__str__() -> str\n\n\n\n\n\nstatic CreateMaterialPointParams.print_default()\n\nPrint the default values of CreateMaterialPointParams object.\n\nExamples\n\n>>> CreateMaterialPointParams.print_default()\n\n\n\nstatic CreateMaterialPointParams.set_default(type: MaterialPointType = None)\n\nSet the default values of the CreateMaterialPointParams object.\n\nParameters\n\ntype (MaterialPointType, optional) – Defines the type of material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapResults.html#createcapresults","title":"CreateCapResults","text":"CreateCapResults\n\n\n\nclass ansys.meshing.prime.CreateCapResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with create cap on face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateCapResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\ncreated_face_zonelets (Iterable[int], optional) – Ids of cap face zonelets created.\n\njson_data (dict, optional) – JSON dictionary to create a CreateCapResults object with provided parameters.\n\nExamples\n\n>>> create_cap_results = prime.CreateCapResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapResults.html#overview","title":"CreateCapResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreated_face_zonelets\n\nIds of cap face zonelets created.\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateCapResults object.\n\nset_default\n\nSet the default values of the CreateCapResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapResults.html#import-detail","title":"CreateCapResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapResults.html#property-detail","title":"CreateCapResults > Property detail","text":"Property detail\n\n\n\nproperty CreateCapResults.created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of cap face zonelets created.\n\n\n\nproperty CreateCapResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapResults.html#method-detail","title":"CreateCapResults > Method detail","text":"Method detail\n\n\n\nCreateCapResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateCapResults.__str__() -> str\n\n\n\n\n\nstatic CreateCapResults.print_default()\n\nPrint the default values of CreateCapResults object.\n\nExamples\n\n>>> CreateCapResults.print_default()\n\n\n\nstatic CreateCapResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the CreateCapResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\ncreated_face_zonelets (Iterable[int], optional) – Ids of cap face zonelets created."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferResults.html#localsurferresults","title":"LocalSurferResults","text":"LocalSurferResults\n\n\n\nclass ansys.meshing.prime.autogen.surferstructs.LocalSurferResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the local surface mesh.\n\nParameters\n\nmodel (Model) – Model to create a LocalSurferResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.\n\njson_data (dict, optional) – JSON dictionary to create a LocalSurferResults object with provided parameters.\n\nExamples\n\n>>> local_surfer_results = prime.LocalSurferResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferResults.html#overview","title":"LocalSurferResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of LocalSurferResults object.\n\nset_default\n\nSet the default values of the LocalSurferResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferResults.html#import-detail","title":"LocalSurferResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferResults.html#property-detail","title":"LocalSurferResults > Property detail","text":"Property detail\n\n\n\nproperty LocalSurferResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty LocalSurferResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/LocalSurferResults.html#method-detail","title":"LocalSurferResults > Method detail","text":"Method detail\n\n\n\nLocalSurferResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nLocalSurferResults.__str__() -> str\n\n\n\n\n\nstatic LocalSurferResults.print_default()\n\nPrint the default values of LocalSurferResults object.\n\nExamples\n\n>>> LocalSurferResults.print_default()\n\n\n\nstatic LocalSurferResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the LocalSurferResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeResults.html#searchbyspikeresults","title":"SearchBySpikeResults","text":"SearchBySpikeResults\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.SearchBySpikeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with search spikes operation.\n\nParameters\n\nmodel (Model) – Model to create a SearchBySpikeResults object with default parameters.\n\nn_found (int, optional) – Number of spikes detected.\n\nerror_code (ErrorCode, optional) – Error code associated with search spikes operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchBySpikeResults object with provided parameters.\n\nExamples\n\n>>> search_by_spike_results = prime.SearchBySpikeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeResults.html#overview","title":"SearchBySpikeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search spikes operation.\n\nn_found\n\nNumber of spikes detected.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchBySpikeResults object.\n\nset_default\n\nSet the default values of the SearchBySpikeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeResults.html#import-detail","title":"SearchBySpikeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeResults.html#property-detail","title":"SearchBySpikeResults > Property detail","text":"Property detail\n\n\n\nproperty SearchBySpikeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search spikes operation.\n\n\n\nproperty SearchBySpikeResults.n_found: int\n\nNumber of spikes detected."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/SearchBySpikeResults.html#method-detail","title":"SearchBySpikeResults > Method detail","text":"Method detail\n\n\n\nSearchBySpikeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchBySpikeResults.__str__() -> str\n\n\n\n\n\nstatic SearchBySpikeResults.print_default()\n\nPrint the default values of SearchBySpikeResults object.\n\nExamples\n\n>>> SearchBySpikeResults.print_default()\n\n\n\nstatic SearchBySpikeResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchBySpikeResults object.\n\nParameters\n\nn_found (int, optional) – Number of spikes detected.\n\nerror_code (ErrorCode, optional) – Error code associated with search spikes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceSearch.html#surfacesearch","title":"SurfaceSearch","text":"SurfaceSearch\n\n\n\nclass ansys.meshing.prime.SurfaceSearch(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nSurfaceSearch allows you to check surface mesh quality.\n\nSurfaceSearch performs surface mesh quality check based on different face quality measures.\n\nParameters\n\nmodel (Model) – Server model to create SurfaceSearch object."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceSearch.html#overview","title":"SurfaceSearch > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncheck_face_deviation\n\nGets information regarding the number of faces with a deviation higher than the tolerance.\n\nget_search_info_by_register_id\n\nGets search information regarding registered face elements of provided zonelets using a register id.\n\nget_surface_diagnostic_summary\n\nGets the surface diagnostic summary.\n\nget_surface_quality_summary\n\nGets the surface quality summary.\n\nsearch_zonelets_by_folds\n\nSearch face zonelets to identify folds.\n\nsearch_zonelets_by_invalid_normals\n\nSearch face zonelets to identify faces with invalid normals.\n\nsearch_zonelets_by_quality\n\nSearch face zonelets with the provided quality parameters and applies register id on face elements found.\n\nsearch_zonelets_by_self_intersections\n\nSearch face zonelets to identify face elements intersecting with each other.\n\nsearch_zonelets_by_spikes\n\nSearch face zonelets to identify spikes.\n\nsearch_zonelets_by_thin_strips\n\nSearch face zonelets to identify face element of thin strips(single layer of triangles between features).\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for SurfaceSearch.\n\n__exit__\n\nExit context for SurfaceSearch.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceSearch.html#import-detail","title":"SurfaceSearch > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceSearch.html#method-detail","title":"SurfaceSearch > Method detail","text":"Method detail\n\n\n\nSurfaceSearch.__enter__()\n\nEnter context for SurfaceSearch.\n\n\n\nSurfaceSearch.__exit__(type, value, traceback)\n\nExit context for SurfaceSearch.\n\n\n\nSurfaceSearch.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceSearch.check_face_deviation(source_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], target_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.CheckFaceDeviationParams) -> ansys.meshing.prime.params.primestructs.CheckFaceDeviationResults\n\nGets information regarding the number of faces with a deviation higher than the tolerance.\n\nParameters\n\nsource_face_zonelets (Iterable[int]) – Scope of reference zonelets from which the deviation is checked.\n\ntarget_face_zonelets (Iterable[int]) – Scope of target zonelets for which the deviation is checked.\n\nparams (CheckFaceDeviationParams) – Parameters for retrieving information while performing check face deviation operation.\n\nReturns\n\nReturns the CheckFaceDeviationResults.\n\nReturn type\n\nCheckFaceDeviationResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> params = prime.CheckFaceDeviationParams()\n>>> results = surf_search.check_face_deviation(source_scope, reference_scope, params)\n\n\n\nSurfaceSearch.get_search_info_by_register_id(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchInfoByRegisterIdParams) -> ansys.meshing.prime.params.primestructs.SearchInfoByRegisterIdResults\n\nGets search information regarding registered face elements of provided zonelets using a register id.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of the face zonelets to search in.\n\nregister_id (int) – An integer register id.\n\nparams (SearchInfoByRegisterIdParams) – Parameters for retrieveing information on registered faces.\n\nReturns\n\nReturns the SearchInfoByRegisterIdResults.\n\nReturn type\n\nSearchInfoByRegisterIdResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> params = prime.SearchInfoByRegisterIdParams(model=model)\n>>> results = surf_search.get_search_info_by_register_id(face_zonelets, register_id, params)\n\n\n\nSurfaceSearch.get_surface_diagnostic_summary(params: ansys.meshing.prime.params.primestructs.SurfaceDiagnosticSummaryParams) -> ansys.meshing.prime.params.primestructs.SurfaceDiagnosticSummaryResults\n\nGets the surface diagnostic summary.\n\nDiagnose surface connectivity for the given scope and controls provided by the surface diagnostic summary parameters.\n\nParameters\n\nparams (SurfaceDiagnosticSummaryParams) – Surface diagnostic summary parameters.\n\nReturns\n\nReturns the SurfaceDiagnosticSummaryResults.\n\nReturn type\n\nSurfaceDiagnosticSummaryResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.get_surface_diagnostics_summary(SurfaceDiagnosticSummaryParams(model=model))\n\n\n\nSurfaceSearch.get_surface_quality_summary(params: ansys.meshing.prime.params.primestructs.SurfaceQualitySummaryParams) -> ansys.meshing.prime.params.primestructs.SurfaceQualitySummaryResults\n\nGets the surface quality summary.\n\nDiagnose surface quality for the given scope and face quality measures provided by the surface quality summary parameters.\nUses default quality limit if not specified with params.\n\nParameters\n\nparams (SurfaceQualitySummaryParams) – Surface quality summary parameters.\n\nReturns\n\nReturns the SurfaceQualitySummaryResults.\n\nReturn type\n\nSurfaceQualitySummaryResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.get_surface_quality_summary(SurfaceQualitySummaryParams(model=model))\n\n\n\nSurfaceSearch.search_zonelets_by_folds(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchByFoldsParams) -> ansys.meshing.prime.params.primestructs.SearchByFoldsResults\n\nSearch face zonelets to identify folds.\n\nSearch face zonelets to identify folds with provided folds parameters.\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nparams (SearchByFoldsParams) – Parameters used to identify folds.\n\nReturns\n\nReturns the SearchByFoldsResults.\n\nReturn type\n\nSearchByFoldsResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_folds(part_id, face_zonelets, register_id, params)\n\n\n\nSurfaceSearch.search_zonelets_by_invalid_normals(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int) -> ansys.meshing.prime.params.primestructs.SearchByInvalidNormalsResults\n\nSearch face zonelets to identify faces with invalid normals.\n\nSearch face zonelets to identify faces with invalid normals.\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nReturns\n\nReturns the SearchByInvalidNormalsResults.\n\nReturn type\n\nSearchByInvalidNormalsResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_invalid_normals(part_id, face_zonelets, register_id)\n\n\n\nSurfaceSearch.search_zonelets_by_quality(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchByQualityParams) -> ansys.meshing.prime.params.primestructs.SearchByQualityResults\n\nSearch face zonelets with the provided quality parameters and applies register id on face elements found.\n\nParameters\n\npart_id (int) – Id of the part.\n\nface_zonelets (Iterable[int]) – Ids of the face zonelets whose element search is performed.\n\nregister_id (int) – Id used to register face elements found by the search.\n\nparams (SearchByQualityParams) – Quality parameters used to search face elements.\n\nReturns\n\nReturns the SearchByQualityResults.\n\nReturn type\n\nSearchByQualityResults\n\nExamples\n\n>>> surf_search = prime.SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_quality(part_id, face_zonelets, register_id, prime.SearchByQualityParams(model=model))\n\n\n\nSurfaceSearch.search_zonelets_by_self_intersections(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchBySelfIntersectionParams) -> ansys.meshing.prime.params.primestructs.SearchByIntersectionResults\n\nSearch face zonelets to identify face elements intersecting with each other.\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nparams (SearchBySelfIntersectionParams) – Parameters used to identify face elements by self intersection.\n\nReturns\n\nReturns the SearchByIntersectionResults.\n\nReturn type\n\nSearchByIntersectionResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_self_intersections(part_id, face_zonelets, register_id, params)\n\n\n\nSurfaceSearch.search_zonelets_by_spikes(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchBySpikeParams) -> ansys.meshing.prime.params.primestructs.SearchBySpikeResults\n\nSearch face zonelets to identify spikes.\n\nSearch face zonelets to identify spikes with provided spike parameters\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nparams (SearchBySpikeParams) – Parameters used to identify spikes.\n\nReturns\n\nReturns the SearchBySpikeResults.\n\nReturn type\n\nSearchBySpikeResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_spikes(part_id, face_zonelets, register_id, params)\n\n\n\nSurfaceSearch.search_zonelets_by_thin_strips(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], register_id: int, params: ansys.meshing.prime.params.primestructs.SearchByThinStripParams) -> ansys.meshing.prime.params.primestructs.SearchByThinStripResults\n\nSearch face zonelets to identify face element of thin strips(single layer of triangles between features).\n\nParameters\n\npart_id (int) – Id of part.\n\nface_zonelets (Iterable[int]) – Ids of face zonelets.\n\nregister_id (int) – Id of register.\n\nparams (SearchByThinStripParams) – Parameters used to identify face elements of thin strips.\n\nReturns\n\nReturns the SearchByThinStripResults.\n\nReturn type\n\nSearchByThinStripResults\n\nExamples\n\n>>> surf_search = SurfaceSearch(model=model)\n>>> results = surf_search.search_zonelets_by_thin_strips(part_id, face_zonelets, register_id, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/ShellBLParams.html#shellblparams","title":"ShellBLParams","text":"ShellBLParams\n\n\n\nclass ansys.meshing.prime.autogen.surferstructs.ShellBLParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to generate ShellBL.\n\nParameters\n\nmodel (Model) – Model to create a ShellBLParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ShellBLParams object with provided parameters.\n\nExamples\n\n>>> shell_blparams = prime.ShellBLParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/ShellBLParams.html#overview","title":"ShellBLParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ShellBLParams object.\n\nset_default\n\nSet the default values of the ShellBLParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/ShellBLParams.html#import-detail","title":"ShellBLParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/ShellBLParams.html#method-detail","title":"ShellBLParams > Method detail","text":"Method detail\n\n\n\nShellBLParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nShellBLParams.__str__() -> str\n\n\n\n\n\nstatic ShellBLParams.print_default()\n\nPrint the default values of ShellBLParams object.\n\nExamples\n\n>>> ShellBLParams.print_default()\n\n\n\nstatic ShellBLParams.set_default()\n\nSet the default values of the ShellBLParams object."},{"objectID":"Home","href":"contributing/index.html#contribute","title":"Contribute","text":"Contribute\n\nOverall guidance on contributing to a PyAnsys library appears in the\nContributing topic\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyPrimeMesh.\n\nThe following contribution information is specific to PyPrimeMesh."},{"objectID":"Home","href":"contributing/index.html#clone-the-repository","title":"Contribute > Clone the repository","text":"Clone the repository\n\nYou can clone the PyPrimeMesh repository from GitHub and install the latest version in\ndevelopment mode with this code:\n\n>>> git clone https://github.com/ansys/pyprimemesh\n>>> cd pyprimemesh\n>>> pip install -e .[graphics]"},{"objectID":"Home","href":"contributing/index.html#post-issues","title":"Contribute > Post issues","text":"Post issues\n\nUse the PyPrimeMesh Issues\npage to submit questions, report bugs, and request new features.\n\nTo reach the support team, email pyansys.core@ansys.com."},{"objectID":"Home","href":"contributing/index.html#view-pyprimemesh-documentation","title":"Contribute > View PyPrimeMesh documentation","text":"View PyPrimeMesh documentation\n\nDocumentation for the latest stable release of PyPrimeMesh is hosted at\nPyPrimeMesh Documentation.\n\nIn the upper right corner of the documentation’s title bar, there is an option\nfor switching from viewing the documentation for the latest stable release\nto viewing the documentation for the development version or previously\nreleased versions."},{"objectID":"Home","href":"contributing/index.html#code-structure-and-contributions","title":"Contribute > Code structure and contributions","text":"Code structure and contributions\n\nThe PyPrimeMesh code base is primarily auto-generated from Ansys Prime Server. For the auto-generated\ncode, contributions are limited to raising issues and enhancement requests.\n\nYou should not modify files marked as auto-generated.\n\nContributions from pull requests can be included in files in these directories of the\nPyPrimeMesh repository:\n\nexamples, which provides examples\nof how you use PyPrimeMesh.\n\ngraphics,\nwhich provides graphics capabilities and image files.\n\nlucid, which\nprovides high-level APIs.\n\nIf you have an idea on how to enhance PyPrimeMesh, consider first creating an issue as a feature request\nThe PyPrimeMesh team can then use the request as a discussion thread to work on implementing the contribution."},{"objectID":"Home","href":"contributing/index.html#code-style","title":"Contribute > Code style","text":"Code style\n\nPyPrimeMesh follows PEP8 standard as outlined in the PyAnsys Development Guide and implements style checking using\npre-commit.\n\nTo ensure your code meets minimum code styling standards, run these commands:\n\nYou can also install this as a pre-commit hook by running this command:\n\nThis way, it’s not possible for you to push code that fails the style checks. For example,\ncall code styling standards must pass:"},{"objectID":"Home","href":"contributing/index.html#licensing","title":"Contribute > Licensing","text":"Licensing\n\nAll contributed code is licensed under the MIT License found in the repository.\nIf you did not write the code yourself, it is your responsibility to ensure that the existing license is compatible\nand included in the contributed files or you obtain permission from the original author to relicense the code."},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothType.html#smoothtype","title":"SmoothType","text":"SmoothType\n\n\n\nclass ansys.meshing.prime.SmoothType\n\nIndicates the the type of operation to be performed during the smooth dihedral face nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothType.html#overview","title":"SmoothType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nAUTO\n\nPerforms smoothing using optimal node movements during the operation.\n\nINFLATE\n\nPerforms inflation during the operation.\n\nSMOOTH\n\nPerforms smoothing during the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothType.html#import-detail","title":"SmoothType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SmoothType.html#attribute-detail","title":"SmoothType > Attribute detail","text":"Attribute detail\n\n\n\nSmoothType.AUTO = 3\n\nPerforms smoothing using optimal node movements during the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSmoothType.INFLATE = 2\n\nPerforms inflation during the operation.\n\n\n\nSmoothType.SMOOTH = 1\n\nPerforms smoothing during the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetFeatureRecoveriesResults.html#setfeaturerecoveriesresults","title":"SetFeatureRecoveriesResults","text":"SetFeatureRecoveriesResults\n\n\n\nclass ansys.meshing.prime.SetFeatureRecoveriesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with set feature recoveries.\n\nParameters\n\nmodel (Model) – Model to create a SetFeatureRecoveriesResults object with default parameters.\n\nids (Iterable[int], optional) – Ids of added feature recovery controls.\n\nerror_code (ErrorCode, optional) – Error code associated with the set feature recoveries.\n\njson_data (dict, optional) – JSON dictionary to create a SetFeatureRecoveriesResults object with provided parameters.\n\nExamples\n\n>>> set_feature_recoveries_results = prime.SetFeatureRecoveriesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetFeatureRecoveriesResults.html#overview","title":"SetFeatureRecoveriesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set feature recoveries.\n\nids\n\nIds of added feature recovery controls.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetFeatureRecoveriesResults object.\n\nset_default\n\nSet the default values of the SetFeatureRecoveriesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetFeatureRecoveriesResults.html#import-detail","title":"SetFeatureRecoveriesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetFeatureRecoveriesResults.html#property-detail","title":"SetFeatureRecoveriesResults > Property detail","text":"Property detail\n\n\n\nproperty SetFeatureRecoveriesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set feature recoveries.\n\n\n\nproperty SetFeatureRecoveriesResults.ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of added feature recovery controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetFeatureRecoveriesResults.html#method-detail","title":"SetFeatureRecoveriesResults > Method detail","text":"Method detail\n\n\n\nSetFeatureRecoveriesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetFeatureRecoveriesResults.__str__() -> str\n\n\n\n\n\nstatic SetFeatureRecoveriesResults.print_default()\n\nPrint the default values of SetFeatureRecoveriesResults object.\n\nExamples\n\n>>> SetFeatureRecoveriesResults.print_default()\n\n\n\nstatic SetFeatureRecoveriesResults.set_default(ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SetFeatureRecoveriesResults object.\n\nParameters\n\nids (Iterable[int], optional) – Ids of added feature recovery controls.\n\nerror_code (ErrorCode, optional) – Error code associated with the set feature recoveries."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/BoundaryFittedSplineParams.html#boundaryfittedsplineparams","title":"BoundaryFittedSplineParams","text":"BoundaryFittedSplineParams\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.BoundaryFittedSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, degree_u: int = None, degree_v: int = None, degree_w: int = None, refinement_fraction_u: float = None, refinement_fraction_v: float = None, refinement_fraction_w: float = None, control_points_count_u: int = None, control_points_count_v: int = None, control_points_count_w: int = None, n_refine: int = None, control_point_selection_type: ControlPointSelection = None, json_data: dict = None, **kwargs)\n\nBoundary fitted spline fitting parameters.\n\nParameters\n\nmodel (Model) – Model to create a BoundaryFittedSplineParams object with default parameters.\n\ndegree_u (int, optional) – Degree of spline in u direction.\n\ndegree_v (int, optional) – Degree of spline in v direction.\n\ndegree_w (int, optional) – Degree of spline in w direction.\n\nrefinement_fraction_u (float, optional) – Fraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_v (float, optional) – Fraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_w (float, optional) – Fraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode.\n\ncontrol_points_count_u (int, optional) – Spline control points count in U direction. Used in manual control points selection mode.\n\ncontrol_points_count_v (int, optional) – Spline control points count in V direction. Used in manual control points selection mode.\n\ncontrol_points_count_w (int, optional) – Spline control points count in W direction. Used in manual control points selection mode.\n\nn_refine (int, optional) – Spline refinement level for rendering.\n\ncontrol_point_selection_type (ControlPointSelection, optional) – Spline control points selection type.\n\njson_data (dict, optional) – JSON dictionary to create a BoundaryFittedSplineParams object with provided parameters.\n\nExamples\n\n>>> boundary_fitted_spline_params = prime.BoundaryFittedSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/BoundaryFittedSplineParams.html#overview","title":"BoundaryFittedSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontrol_point_selection_type\n\nSpline control points selection type.\n\ncontrol_points_count_u\n\nSpline control points count in U direction. Used in manual control points selection mode.\n\ncontrol_points_count_v\n\nSpline control points count in V direction. Used in manual control points selection mode.\n\ncontrol_points_count_w\n\nSpline control points count in W direction. Used in manual control points selection mode.\n\ndegree_u\n\nDegree of spline in u direction.\n\ndegree_v\n\nDegree of spline in v direction.\n\ndegree_w\n\nDegree of spline in w direction.\n\nn_refine\n\nSpline refinement level for rendering.\n\nrefinement_fraction_u\n\nFraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_v\n\nFraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_w\n\nFraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of BoundaryFittedSplineParams object.\n\nset_default\n\nSet the default values of the BoundaryFittedSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/BoundaryFittedSplineParams.html#import-detail","title":"BoundaryFittedSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/BoundaryFittedSplineParams.html#property-detail","title":"BoundaryFittedSplineParams > Property detail","text":"Property detail\n\n\n\nproperty BoundaryFittedSplineParams.control_point_selection_type: ControlPointSelection\n\nSpline control points selection type.\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_u: int\n\nSpline control points count in U direction. Used in manual control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_v: int\n\nSpline control points count in V direction. Used in manual control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.control_points_count_w: int\n\nSpline control points count in W direction. Used in manual control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.degree_u: int\n\nDegree of spline in u direction.\n\n\n\nproperty BoundaryFittedSplineParams.degree_v: int\n\nDegree of spline in v direction.\n\n\n\nproperty BoundaryFittedSplineParams.degree_w: int\n\nDegree of spline in w direction.\n\n\n\nproperty BoundaryFittedSplineParams.n_refine: int\n\nSpline refinement level for rendering.\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_u: float\n\nFraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_v: float\n\nFraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\n\n\nproperty BoundaryFittedSplineParams.refinement_fraction_w: float\n\nFraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/BoundaryFittedSplineParams.html#method-detail","title":"BoundaryFittedSplineParams > Method detail","text":"Method detail\n\n\n\nBoundaryFittedSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBoundaryFittedSplineParams.__str__() -> str\n\n\n\n\n\nstatic BoundaryFittedSplineParams.print_default()\n\nPrint the default values of BoundaryFittedSplineParams object.\n\nExamples\n\n>>> BoundaryFittedSplineParams.print_default()\n\n\n\nstatic BoundaryFittedSplineParams.set_default(degree_u: int = None, degree_v: int = None, degree_w: int = None, refinement_fraction_u: float = None, refinement_fraction_v: float = None, refinement_fraction_w: float = None, control_points_count_u: int = None, control_points_count_v: int = None, control_points_count_w: int = None, n_refine: int = None, control_point_selection_type: ControlPointSelection = None)\n\nSet the default values of the BoundaryFittedSplineParams object.\n\nParameters\n\ndegree_u (int, optional) – Degree of spline in u direction.\n\ndegree_v (int, optional) – Degree of spline in v direction.\n\ndegree_w (int, optional) – Degree of spline in w direction.\n\nrefinement_fraction_u (float, optional) – Fraction of input mesh size that sets the control points size in u direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_v (float, optional) – Fraction of input mesh size that sets the control points size in v direction. This is used in program controlled control points selection mode.\n\nrefinement_fraction_w (float, optional) – Fraction of input mesh size that sets the control points size in w direction. This is used in program controlled control points selection mode.\n\ncontrol_points_count_u (int, optional) – Spline control points count in U direction. Used in manual control points selection mode.\n\ncontrol_points_count_v (int, optional) – Spline control points count in V direction. Used in manual control points selection mode.\n\ncontrol_points_count_w (int, optional) – Spline control points count in W direction. Used in manual control points selection mode.\n\nn_refine (int, optional) – Spline refinement level for rendering.\n\ncontrol_point_selection_type (ControlPointSelection, optional) – Spline control points selection type."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ZoneMeshResult.html#zonemeshresult","title":"ZoneMeshResult","text":"ZoneMeshResult\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ZoneMeshResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, zone_name: str = None, element_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, centroids: ansys.meshing.prime.params.primestructs.Iterable[float] = None, json_data: dict = None, **kwargs)\n\nResults containing zone-wise mesh information.\n\nContains zone name, element ids and their corresponding data (such as centroid coordinates)\nfor elements within a zone.\n\nParameters\n\nmodel (Model) – Model to create a ZoneMeshResult object with default parameters.\n\nzone_name (str, optional) – Name of the zone where the elements belong to.This is a beta parameter. The behavior and name may change in the future.\n\nelement_ids (Iterable[int], optional) – List of element ids in the zone.This is a beta parameter. The behavior and name may change in the future.\n\ncentroids (Iterable[float], optional) – Flattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…].This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ZoneMeshResult object with provided parameters.\n\nExamples\n\n>>> zone_mesh_result = prime.ZoneMeshResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ZoneMeshResult.html#overview","title":"ZoneMeshResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncentroids\n\nFlattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…].\n\nelement_ids\n\nList of element ids in the zone.\n\nzone_name\n\nName of the zone where the elements belong to.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ZoneMeshResult object.\n\nset_default\n\nSet the default values of the ZoneMeshResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ZoneMeshResult.html#import-detail","title":"ZoneMeshResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ZoneMeshResult.html#property-detail","title":"ZoneMeshResult > Property detail","text":"Property detail\n\n\n\nproperty ZoneMeshResult.centroids: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nFlattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…].\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ZoneMeshResult.element_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of element ids in the zone.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ZoneMeshResult.zone_name: str\n\nName of the zone where the elements belong to.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ZoneMeshResult.html#method-detail","title":"ZoneMeshResult > Method detail","text":"Method detail\n\n\n\nZoneMeshResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nZoneMeshResult.__str__() -> str\n\n\n\n\n\nstatic ZoneMeshResult.print_default()\n\nPrint the default values of ZoneMeshResult object.\n\nExamples\n\n>>> ZoneMeshResult.print_default()\n\n\n\nstatic ZoneMeshResult.set_default(zone_name: str = None, element_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, centroids: ansys.meshing.prime.params.primestructs.Iterable[float] = None)\n\nSet the default values of the ZoneMeshResult object.\n\nParameters\n\nzone_name (str, optional) – Name of the zone where the elements belong to.\n\nelement_ids (Iterable[int], optional) – List of element ids in the zone.\n\ncentroids (Iterable[float], optional) – Flattened array of centroid coordinates [x1,y1,z1,x2,y2,z2,…]."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#mesh-a-generic-pcb-geometry-with-multiple-hexa-layers","title":"Mesh a generic PCB geometry with multiple hexa layers","text":"Mesh a generic PCB geometry with multiple hexa layers\n\nSummary: This example demonstrates how to set the base mesh size and number of\nlayers for each solid in a generic PCB geometry and then generate a mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#objective","title":"Mesh a generic PCB geometry with multiple hexa layers > Objective","text":"Objective\n\nThe example uses PyPrimeMesh to discretize a PCB CAD geometry by means of the\nstacker technology. You can easily set up the mesh size of the base face (xy plane\nin this example) and the number of mesh layers along the sweep direction (z axis in this example).\nThe CAD edges along the z direction are assigned with a named selection at a CAD level in Ansys\nDiscovery/SpaceClaim.\n\nThe following image provides a snapshot of the Discovery tree to help you to understand the model’s\norganization. Share topology in Discovery/SpaceClaim guarantees the generation of a conformal mesh\nbetween the solids. Named selections of edges allow you to specify the number of mesh elements to\ngenerate along the sweep direction. To simplify the process and enhance convenience, this example\nuses multiple meshing utilities provided in the lucid class.\n\nThe resulting mesh with three layers per solid looks like this:"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#procedure","title":"Mesh a generic PCB geometry with multiple hexa layers > Procedure","text":"Procedure\n\nImport the fundamental libraries that are necessary to run the script.\n\nLaunch an Ansys Prime Server instance.\n\nInstantiate the meshing utilities from the lucid class.\n\nDefine the base mesh size and number of layers along the sweep direction.\n\nImport the CAD geometry.\n\nDefine the edge sizing along the sweep direction using existing edge named selections.\n\nDefine the parameters for the volume sweeper.\n\nSet up, generate, and mesh the base face.\n\nStack the base face along the sweep direction.\n\nSet up the zone naming before the mesh output.\n\nWrite a CAS file for use in the Fluent solver.\n\nExit the PyPrimeMesh session."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#import-all-necessary-modules","title":"Mesh a generic PCB geometry with multiple hexa layers > Import all necessary modules","text":"Import all necessary modules\n\nNotice that you must install the PyVista library to be able to run the visualization\ntools included in this script."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#launch-prime-server-and-instantiate-the-lucid-class","title":"Mesh a generic PCB geometry with multiple hexa layers > Launch Prime server and instantiate the lucid class","text":"Launch Prime server and instantiate the lucid class\n\nLaunch an instance of Ansys Prime Server.\nConnect the PyPrimeMesh client and get the model.\nInstantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#define-cad-file-and-mesh-settings","title":"Mesh a generic PCB geometry with multiple hexa layers > Define CAD file and mesh settings","text":"Define CAD file and mesh settings\n\nDefine the number of layers per solid.\nDefine the size in mm of the quad-dominant mesh on the base size.\nDefine the path to the CAD file to mesh.\nDownload the example CAD file using the prime.examples function. Otherwise,\nwrite the path to the desired CAD file on your machine. Supported file types\nare SCDOC, DSCO, and PMDB."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#import-geometry","title":"Mesh a generic PCB geometry with multiple hexa layers > Import geometry","text":"Import geometry\n\nImport the geometry into Prime server.\nUse the Workbench CadReaderRoute to ensure that the shared topology is kept."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#display-the-imported-cad-in-a-pyvista-window","title":"Mesh a generic PCB geometry with multiple hexa layers > Display the imported CAD in a PyVista window","text":"Display the imported CAD in a PyVista window\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#define-edge-sizing-constraints","title":"Mesh a generic PCB geometry with multiple hexa layers > Define edge sizing constraints","text":"Define edge sizing constraints\n\nSet generic global sizing from 0.002mm to 2mm.\nExtract the the edge’s length from the named selections, such as “edge_1_0.50_mm”\n(extract 0.5 mm length) or “edge_23_0.27_mm” (extract 0.27mm length).\nOn each edge, assign a size equal to the edge’s length divided by the\npredefined number of layers per solid."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#define-controls-for-volume-sweeper","title":"Mesh a generic PCB geometry with multiple hexa layers > Define controls for volume sweeper","text":"Define controls for volume sweeper\n\nSet the sweep direction vector.\nSet up the geometric tolerances for lateral and stacking defeature.\nSelect the sweep direction as the z axis (0,0,1).\nAppend the IDs of the soft local sizings that have been previously defined on\nthe edges."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#set-up-generate-and-mesh-the-base-face","title":"Mesh a generic PCB geometry with multiple hexa layers > Set up, generate, and mesh the base face","text":"Set up, generate, and mesh the base face\n\nCreate a soft sizing control.\nAssign the previously defined base_face_size function to the soft sizing.\nCreate the base face.\nMesh the base face.\nDisplay the base face."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#display-the-meshed-base-face-in-a-pyvista-window","title":"Mesh a generic PCB geometry with multiple hexa layers > Display the meshed base face in a PyVista window","text":"Display the meshed base face in a PyVista window\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#stack-the-base-face-using-the-volume-sweeper","title":"Mesh a generic PCB geometry with multiple hexa layers > Stack the base face using the volume sweeper","text":"Stack the base face using the volume sweeper\n\nUse the volume sweeper to stack the base face along the previously defined sweep\ndirection.\nInclude the previously defined stacker parameters.\nDisplay the final volume mesh."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#display-the-final-pcb-mesh-in-a-pyvista-window","title":"Mesh a generic PCB geometry with multiple hexa layers > Display the final PCB mesh in a PyVista window","text":"Display the final PCB mesh in a PyVista window\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#set-up-the-zone-naming-before-the-mesh-output","title":"Mesh a generic PCB geometry with multiple hexa layers > Set up the zone naming before the mesh output","text":"Set up the zone naming before the mesh output\n\nDelete the unnecessary topo entities.\nName the walls of solid as wall_solid. For example, if the solid’s name is A, then\nname the walls surrounding the solid wall_A).\nConvert the labels to mesh zones."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#mesh-output","title":"Mesh a generic PCB geometry with multiple hexa layers > Mesh output","text":"Mesh output\n\nCreate a temporary folder and use it to output the mesh to a CAS file."},{"objectID":"Home","href":"examples/gallery_examples/gallery/09_multi_layer_quad_mesh_pcb.html#exit-pyprimemesh","title":"Mesh a generic PCB geometry with multiple hexa layers > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (1 minutes 9.460 seconds)\n\n\n\nDownload Jupyter notebook: 09_multi_layer_quad_mesh_pcb.ipynb\n\nDownload Python source code: 09_multi_layer_quad_mesh_pcb.py\n\nDownload zipped: 09_multi_layer_quad_mesh_pcb.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsParams.html#copyzoneletsparams","title":"CopyZoneletsParams","text":"CopyZoneletsParams\n\n\n\nclass ansys.meshing.prime.CopyZoneletsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, copy_labels: bool = None, copy_zones: bool = None, json_data: dict = None, **kwargs)\n\nParameters to copy zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CopyZoneletsParams object with default parameters.\n\ncopy_labels (bool, optional) – Option to copy labels of input zonelets to the corresponding copied zonelets.This is a beta parameter. The behavior and name may change in the future.\n\ncopy_zones (bool, optional) – Option to copy zones of input zonelets to corresponding copied zonelets.\n\njson_data (dict, optional) – JSON dictionary to create a CopyZoneletsParams object with provided parameters.\n\nExamples\n\n>>> copy_zonelets_params = prime.CopyZoneletsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsParams.html#overview","title":"CopyZoneletsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncopy_labels\n\nOption to copy labels of input zonelets to the corresponding copied zonelets.\n\ncopy_zones\n\nOption to copy zones of input zonelets to corresponding copied zonelets.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CopyZoneletsParams object.\n\nset_default\n\nSet the default values of the CopyZoneletsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsParams.html#import-detail","title":"CopyZoneletsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsParams.html#property-detail","title":"CopyZoneletsParams > Property detail","text":"Property detail\n\n\n\nproperty CopyZoneletsParams.copy_labels: bool\n\nOption to copy labels of input zonelets to the corresponding copied zonelets.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty CopyZoneletsParams.copy_zones: bool\n\nOption to copy zones of input zonelets to corresponding copied zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/CopyZoneletsParams.html#method-detail","title":"CopyZoneletsParams > Method detail","text":"Method detail\n\n\n\nCopyZoneletsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCopyZoneletsParams.__str__() -> str\n\n\n\n\n\nstatic CopyZoneletsParams.print_default()\n\nPrint the default values of CopyZoneletsParams object.\n\nExamples\n\n>>> CopyZoneletsParams.print_default()\n\n\n\nstatic CopyZoneletsParams.set_default(copy_labels: bool = None, copy_zones: bool = None)\n\nSet the default values of the CopyZoneletsParams object.\n\nParameters\n\ncopy_labels (bool, optional) – Option to copy labels of input zonelets to the corresponding copied zonelets.\n\ncopy_zones (bool, optional) – Option to copy zones of input zonelets to corresponding copied zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesResults.html#mergeboundarynodesresults","title":"MergeBoundaryNodesResults","text":"MergeBoundaryNodesResults\n\n\n\nclass ansys.meshing.prime.MergeBoundaryNodesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the merge nodes operation.\n\nParameters\n\nmodel (Model) – Model to create a MergeBoundaryNodesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of merge nodes operation.\n\njson_data (dict, optional) – JSON dictionary to create a MergeBoundaryNodesResults object with provided parameters.\n\nExamples\n\n>>> merge_boundary_nodes_results = prime.MergeBoundaryNodesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesResults.html#overview","title":"MergeBoundaryNodesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with failure of merge nodes operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeBoundaryNodesResults object.\n\nset_default\n\nSet the default values of the MergeBoundaryNodesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesResults.html#import-detail","title":"MergeBoundaryNodesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesResults.html#property-detail","title":"MergeBoundaryNodesResults > Property detail","text":"Property detail\n\n\n\nproperty MergeBoundaryNodesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with failure of merge nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeBoundaryNodesResults.html#method-detail","title":"MergeBoundaryNodesResults > Method detail","text":"Method detail\n\n\n\nMergeBoundaryNodesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeBoundaryNodesResults.__str__() -> str\n\n\n\n\n\nstatic MergeBoundaryNodesResults.print_default()\n\nPrint the default values of MergeBoundaryNodesResults object.\n\nExamples\n\n>>> MergeBoundaryNodesResults.print_default()\n\n\n\nstatic MergeBoundaryNodesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the MergeBoundaryNodesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of merge nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/ToggleEdges.html#toggleedges","title":"ToggleEdges","text":"ToggleEdges\n\n\n\nclass ansys.meshing.prime.graphics.widgets.toggle_edges.ToggleEdges(prime_plotter: ansys.meshing.prime.graphics.plotter.PrimePlotter)\n\nToggles the edges of the mesh objects.\n\nParameters\n\nprime_plotter (PrimePlotter) – Plotter to apply this widget to."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/ToggleEdges.html#overview","title":"ToggleEdges > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncallback\n\nToggle the edges of the mesh objects.\n\nupdate\n\nDefine the configuration and representation of the button widget button.\n\nProperties\n\n\n\n\n\nplotter\n\nPlotter object that the widget is assigned to.\n\nAttributes\n\n\n\n\n\n__slots__\n\n\n\nprime_plotter\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/ToggleEdges.html#import-detail","title":"ToggleEdges > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/ToggleEdges.html#property-detail","title":"ToggleEdges > Property detail","text":"Property detail\n\n\n\nproperty ToggleEdges.plotter: pyvista.Plotter\n\nPlotter object that the widget is assigned to."},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/ToggleEdges.html#attribute-detail","title":"ToggleEdges > Attribute detail","text":"Attribute detail\n\n\n\nToggleEdges.__slots__ = ()\n\n\n\n\n\nToggleEdges.prime_plotter\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/graphics/widgets/toggle_edges/ToggleEdges.html#method-detail","title":"ToggleEdges > Method detail","text":"Method detail\n\n\n\nToggleEdges.callback(state: bool) -> None\n\nToggle the edges of the mesh objects.\n\nParameters\n\nstate (bool) – Whether the button widget is activated.\n\n\n\nToggleEdges.update() -> None\n\nDefine the configuration and representation of the button widget button."},{"objectID":"Home","href":"examples/gallery_examples/misc/index.html#miscellaneous-examples","title":"Miscellaneous examples","text":"Miscellaneous examples\n\nThese examples provide tips and tricks for using PyPrimeMesh.\n\nsphx_glr_examples_gallery_examples_misc_example_template.py\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryResult.html#sizecontrolsummaryresult","title":"SizeControlSummaryResult","text":"SizeControlSummaryResult\n\n\n\nclass ansys.meshing.prime.autogen.sizecontrolstructs.SizeControlSummaryResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, message: str = None, json_data: dict = None, **kwargs)\n\nResults of size control summary.\n\nParameters\n\nmodel (Model) – Model to create a SizeControlSummaryResult object with default parameters.\n\nmessage (str, optional) – Size control summary text.\n\njson_data (dict, optional) – JSON dictionary to create a SizeControlSummaryResult object with provided parameters.\n\nExamples\n\n>>> size_control_summary_result = prime.SizeControlSummaryResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryResult.html#overview","title":"SizeControlSummaryResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nmessage\n\nSize control summary text.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SizeControlSummaryResult object.\n\nset_default\n\nSet the default values of the SizeControlSummaryResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryResult.html#import-detail","title":"SizeControlSummaryResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryResult.html#property-detail","title":"SizeControlSummaryResult > Property detail","text":"Property detail\n\n\n\nproperty SizeControlSummaryResult.message: str\n\nSize control summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/SizeControlSummaryResult.html#method-detail","title":"SizeControlSummaryResult > Method detail","text":"Method detail\n\n\n\nSizeControlSummaryResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSizeControlSummaryResult.__str__() -> str\n\n\n\n\n\nstatic SizeControlSummaryResult.print_default()\n\nPrint the default values of SizeControlSummaryResult object.\n\nExamples\n\n>>> SizeControlSummaryResult.print_default()\n\n\n\nstatic SizeControlSummaryResult.set_default(message: str = None)\n\nSet the default values of the SizeControlSummaryResult object.\n\nParameters\n\nmessage (str, optional) – Size control summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapParams.html#createcapparams","title":"CreateCapParams","text":"CreateCapParams\n\n\n\nclass ansys.meshing.prime.CreateCapParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to create cap on face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateCapParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a CreateCapParams object with provided parameters.\n\nExamples\n\n>>> create_cap_params = prime.CreateCapParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapParams.html#overview","title":"CreateCapParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateCapParams object.\n\nset_default\n\nSet the default values of the CreateCapParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapParams.html#import-detail","title":"CreateCapParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateCapParams.html#method-detail","title":"CreateCapParams > Method detail","text":"Method detail\n\n\n\nCreateCapParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateCapParams.__str__() -> str\n\n\n\n\n\nstatic CreateCapParams.print_default()\n\nPrint the default values of CreateCapParams object.\n\nExamples\n\n>>> CreateCapParams.print_default()\n\n\n\nstatic CreateCapParams.set_default()\n\nSet the default values of the CreateCapParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsResults.html#cellstatisticsresults","title":"CellStatisticsResults","text":"CellStatisticsResults\n\n\n\nclass ansys.meshing.prime.autogen.meshinfostructs.CellStatisticsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, volume: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults of cell statistics information.\n\nParameters\n\nmodel (Model) – Model to create a CellStatisticsResults object with default parameters.\n\nvolume (float, optional) – Cumulative volume of all the cell elements of selected entities.\n\nerror_code (ErrorCode, optional) – Error code associated with the cell statistics function.\n\njson_data (dict, optional) – JSON dictionary to create a CellStatisticsResults object with provided parameters.\n\nExamples\n\n>>> cell_statistics_results = prime.CellStatisticsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsResults.html#overview","title":"CellStatisticsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the cell statistics function.\n\nvolume\n\nCumulative volume of all the cell elements of selected entities.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CellStatisticsResults object.\n\nset_default\n\nSet the default values of the CellStatisticsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsResults.html#import-detail","title":"CellStatisticsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsResults.html#property-detail","title":"CellStatisticsResults > Property detail","text":"Property detail\n\n\n\nproperty CellStatisticsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the cell statistics function.\n\n\n\nproperty CellStatisticsResults.volume: float\n\nCumulative volume of all the cell elements of selected entities."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/CellStatisticsResults.html#method-detail","title":"CellStatisticsResults > Method detail","text":"Method detail\n\n\n\nCellStatisticsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCellStatisticsResults.__str__() -> str\n\n\n\n\n\nstatic CellStatisticsResults.print_default()\n\nPrint the default values of CellStatisticsResults object.\n\nExamples\n\n>>> CellStatisticsResults.print_default()\n\n\n\nstatic CellStatisticsResults.set_default(volume: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the CellStatisticsResults object.\n\nParameters\n\nvolume (float, optional) – Cumulative volume of all the cell elements of selected entities.\n\nerror_code (ErrorCode, optional) – Error code associated with the cell statistics function."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controldata/ControlData.html#controldata","title":"ControlData","text":"ControlData\n\n\n\nclass ansys.meshing.prime.autogen.controldata.ControlData(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nControlData has all controls like size controls, prism controls, wrapper controls and more.\n\nParameters\n\nmodel (Model) – Server model to create ControlData object.\n\nid (int) – Id of the ControlData.\n\nobject_id (int) – Object id of the ControlData.\n\nname (str) – Name of the ControlData."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controldata/ControlData.html#overview","title":"ControlData > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_multi_zone_control\n\nCreates MultiZone control with defaults.\n\ncreate_periodic_control\n\nCreates the periodic control.\n\ncreate_prism_control\n\nCreates the PrismControl.\n\ncreate_shell_bl_control\n\nCreates the ShellBLControl.\n\ncreate_size_control\n\nCreates size control for the given sizing type.\n\ncreate_thin_volume_control\n\nCreates the ThinVolumeControl.\n\ncreate_volume_control\n\nCreates the volume control.\n\ncreate_wrapper_control\n\nCreates wrapper control with defaults.\n\ndelete_controls\n\nDelete the controls of the given ids.\n\nget_multi_zone_controls\n\nGet ids of all the MultiZone controls.\n\nget_part_zonelets\n\nCreates an array of part zonelet structure using the input ScopeDefinition.\n\nget_scope_face_zonelets\n\nGet the face zonelet ids for the given scope.\n\nget_scope_parts\n\nGet the part ids for the given scope.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of ControlData.\n\nname\n\nGet the name of ControlData.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controldata/ControlData.html#import-detail","title":"ControlData > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controldata/ControlData.html#property-detail","title":"ControlData > Property detail","text":"Property detail\n\n\n\nproperty ControlData.id\n\nGet the id of ControlData.\n\n\n\nproperty ControlData.name\n\nGet the name of ControlData."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controldata/ControlData.html#method-detail","title":"ControlData > Method detail","text":"Method detail\n\n\n\nControlData.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nControlData.create_multi_zone_control() -> List[Any]\n\nCreates MultiZone control with defaults.\n\nReturns\n\nReturns the MultiZone control.\n\nReturn type\n\nMultiZoneControl\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> multizone_control = model.control_data.create_multizone_control()\n\n\n\nControlData.create_periodic_control() -> List[Any]\n\nCreates the periodic control.\n\nReturns\n\nReturns the periodic control.\n\nReturn type\n\nPeriodicControl\n\nExamples\n\n>>> periodic_control = model.control_data.create_periodic_control()\n\n\n\nControlData.create_prism_control() -> List[Any]\n\nCreates the PrismControl.\n\nReturns\n\nReturns the PrismControl.\n\nReturn type\n\nPrismControl\n\nExamples\n\n>>> prism_control = model.control_data.create_prism_control()\n\n\n\nControlData.create_shell_bl_control() -> List[Any]\n\nCreates the ShellBLControl.\n\nReturns\n\nReturns the ShellBLControl.\n\nReturn type\n\nShellBLControl\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> shell_bl_control = model.control_data.create_shell_bl_control()\n\n\n\nControlData.create_size_control(type: ansys.meshing.prime.params.primestructs.SizingType) -> List[Any]\n\nCreates size control for the given sizing type.\n\nParameters\n\ntype (SizingType) – Sizing type used to create a size control.\n\nReturns\n\nReturns the size control.\n\nReturn type\n\nSizeControl\n\nNotes\n\nAn empty size control is created on calling this API.\n\nExamples\n\n>>> size_control = model.control_data.create_size_control(SizingType.CURVATURE)\n\n\n\nControlData.create_thin_volume_control() -> List[Any]\n\nCreates the ThinVolumeControl.\n\nReturns\n\nReturns the ThinVolumeControl.\n\nReturn type\n\nThinVolumeControl\n\nExamples\n\n>>> thin_volume_control = model.control_data.create_thin_volume_control()\n\n\n\nControlData.create_volume_control() -> List[Any]\n\nCreates the volume control.\n\nReturns\n\nReturns the volume control.\n\nReturn type\n\nVolumeControl\n\nExamples\n\n>>> volume_control = model.control_data.create_volume_control()\n\n\n\nControlData.create_wrapper_control() -> List[Any]\n\nCreates wrapper control with defaults.\n\nReturns\n\nReturns the wrapper control.\n\nReturn type\n\nWrapperControl\n\nNotes\n\nA wrapper control with defaults is created on calling this API.\n\nExamples\n\n>>> wrapper_control = model.control_data.create_wrapper_control()\n\n\n\nControlData.delete_controls(control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.DeleteResults\n\nDelete the controls of the given ids.\n\nParameters\n\ncontrol_ids (Iterable[int]) – Ids of controls to be deleted.\n\nReturns\n\nReturns the DeleteResults.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = model.control_data.delete_controls([size_control.id, volume_control.id])\n\n\n\nControlData.get_multi_zone_controls() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of all the MultiZone controls.\n\nReturns\n\nReturn all the MultiZone controls ids.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> MultiZoneControls = model.control_data.get_multi_zone_controls()\n\n\n\nControlData.get_part_zonelets(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> List[ansys.meshing.prime.params.primestructs.PartZonelets]\n\nCreates an array of part zonelet structure using the input ScopeDefinition.\n\nParameters\n\nscope (ScopeDefinition) – Input ScopeDefinition.\n\nReturns\n\nReturns a list of PartZonelets.\n\nReturn type\n\nList[PartZonelets]\n\nExamples\n\n>>> results = control_data.get_part_zonelets(scope)\n\n\n\nControlData.get_scope_face_zonelets(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition, params: ansys.meshing.prime.params.primestructs.ScopeZoneletParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelet ids for the given scope.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition to evaluate entities.\n\nparams (ScopeZoneletParams) – Parameters to scope zonelets.\n\nReturns\n\nReturn the ids of face zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = model.control_data.get_scope_face_zonelets(\n>>>                 prime.ScopeDefinition(model = model,\n>>>                 entity_type = prime.ScopeEntity.FACEZONELETS,\n>>>                 part_expression = \"*\"),\n>>>                 prime.ScopeZoneletParams(model =model))\n\n\n\nControlData.get_scope_parts(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the part ids for the given scope.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition to evaluate the part ids.\n\nReturns\n\nReturn the ids of parts.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> part_ids = model.control_data.get_scope_parts(\n>>>                 prime.ScopeDefinition(model = model,\n>>>                 part_expression = \"*\"),\n>>>                 prime.ScopeZoneletParams(model =model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryResults.html#surfacequalitysummaryresults","title":"SurfaceQualitySummaryResults","text":"SurfaceQualitySummaryResults\n\n\n\nclass ansys.meshing.prime.SurfaceQualitySummaryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, quality_results: ansys.meshing.prime.params.primestructs.List[SurfaceQualityResult] = None, summary: str = None, json_data: dict = None, **kwargs)\n\nResults of surface quality summary.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceQualitySummaryResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the surface quality summary.\n\nquality_results (List[SurfaceQualityResult], optional) – Contains surface quality result per face quality measure specified in parameters.\n\nsummary (str, optional) – Surface quality summary text.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceQualitySummaryResults object with provided parameters.\n\nExamples\n\n>>> surface_quality_summary_results = prime.SurfaceQualitySummaryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryResults.html#overview","title":"SurfaceQualitySummaryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the surface quality summary.\n\nquality_results\n\nContains surface quality result per face quality measure specified in parameters.\n\nsummary\n\nSurface quality summary text.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceQualitySummaryResults object.\n\nset_default\n\nSet the default values of the SurfaceQualitySummaryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryResults.html#import-detail","title":"SurfaceQualitySummaryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryResults.html#property-detail","title":"SurfaceQualitySummaryResults > Property detail","text":"Property detail\n\n\n\nproperty SurfaceQualitySummaryResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the surface quality summary.\n\n\n\nproperty SurfaceQualitySummaryResults.quality_results: ansys.meshing.prime.params.primestructs.List[SurfaceQualityResult]\n\nContains surface quality result per face quality measure specified in parameters.\n\n\n\nproperty SurfaceQualitySummaryResults.summary: str\n\nSurface quality summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualitySummaryResults.html#method-detail","title":"SurfaceQualitySummaryResults > Method detail","text":"Method detail\n\n\n\nSurfaceQualitySummaryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceQualitySummaryResults.__str__() -> str\n\n\n\n\n\nstatic SurfaceQualitySummaryResults.print_default()\n\nPrint the default values of SurfaceQualitySummaryResults object.\n\nExamples\n\n>>> SurfaceQualitySummaryResults.print_default()\n\n\n\nstatic SurfaceQualitySummaryResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, quality_results: ansys.meshing.prime.params.primestructs.List[SurfaceQualityResult] = None, summary: str = None)\n\nSet the default values of the SurfaceQualitySummaryResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the surface quality summary.\n\nquality_results (List[SurfaceQualityResult], optional) – Contains surface quality result per face quality measure specified in parameters.\n\nsummary (str, optional) – Surface quality summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenParams.html#componentchildrenparams","title":"ComponentChildrenParams","text":"ComponentChildrenParams\n\n\n\nclass ansys.meshing.prime.ComponentChildrenParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters associated with querying child components.\n\nParameters\n\nmodel (Model) – Model to create a ComponentChildrenParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ComponentChildrenParams object with provided parameters.\n\nExamples\n\n>>> component_children_params = prime.ComponentChildrenParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenParams.html#overview","title":"ComponentChildrenParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComponentChildrenParams object.\n\nset_default\n\nSet the default values of the ComponentChildrenParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenParams.html#import-detail","title":"ComponentChildrenParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ComponentChildrenParams.html#method-detail","title":"ComponentChildrenParams > Method detail","text":"Method detail\n\n\n\nComponentChildrenParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComponentChildrenParams.__str__() -> str\n\n\n\n\n\nstatic ComponentChildrenParams.print_default()\n\nPrint the default values of ComponentChildrenParams object.\n\nExamples\n\n>>> ComponentChildrenParams.print_default()\n\n\n\nstatic ComponentChildrenParams.set_default()\n\nSet the default values of the ComponentChildrenParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryResults.html#volumequalitysummaryresults","title":"VolumeQualitySummaryResults","text":"VolumeQualitySummaryResults\n\n\n\nclass ansys.meshing.prime.VolumeQualitySummaryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, quality_results_part: ansys.meshing.prime.params.primestructs.List[VolumeQualityResultsPart] = None, message: str = None, json_data: dict = None, **kwargs)\n\nResults of volume quality summary.\n\nParameters\n\nmodel (Model) – Model to create a VolumeQualitySummaryResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume quality summary.\n\nquality_results_part (List[VolumeQualityResultsPart], optional) – Contains volume quality result per cell quality measure by parts specified in parameters.\n\nmessage (str, optional) – Volume quality summary text.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeQualitySummaryResults object with provided parameters.\n\nExamples\n\n>>> volume_quality_summary_results = prime.VolumeQualitySummaryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryResults.html#overview","title":"VolumeQualitySummaryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the volume quality summary.\n\nmessage\n\nVolume quality summary text.\n\nquality_results_part\n\nContains volume quality result per cell quality measure by parts specified in parameters.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeQualitySummaryResults object.\n\nset_default\n\nSet the default values of the VolumeQualitySummaryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryResults.html#import-detail","title":"VolumeQualitySummaryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryResults.html#property-detail","title":"VolumeQualitySummaryResults > Property detail","text":"Property detail\n\n\n\nproperty VolumeQualitySummaryResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume quality summary.\n\n\n\nproperty VolumeQualitySummaryResults.message: str\n\nVolume quality summary text.\n\n\n\nproperty VolumeQualitySummaryResults.quality_results_part: ansys.meshing.prime.params.primestructs.List[VolumeQualityResultsPart]\n\nContains volume quality result per cell quality measure by parts specified in parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeQualitySummaryResults.html#method-detail","title":"VolumeQualitySummaryResults > Method detail","text":"Method detail\n\n\n\nVolumeQualitySummaryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeQualitySummaryResults.__str__() -> str\n\n\n\n\n\nstatic VolumeQualitySummaryResults.print_default()\n\nPrint the default values of VolumeQualitySummaryResults object.\n\nExamples\n\n>>> VolumeQualitySummaryResults.print_default()\n\n\n\nstatic VolumeQualitySummaryResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, quality_results_part: ansys.meshing.prime.params.primestructs.List[VolumeQualityResultsPart] = None, message: str = None)\n\nSet the default values of the VolumeQualitySummaryResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the volume quality summary.\n\nquality_results_part (List[VolumeQualityResultsPart], optional) – Contains volume quality result per cell quality measure by parts specified in parameters.\n\nmessage (str, optional) – Volume quality summary text."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingParams.html#cadrefacetingparams","title":"CadRefacetingParams","text":"CadRefacetingParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.CadRefacetingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cad_faceter: CadFaceter = None, faceting_resolution: CadRefacetingResolution = None, custom_surface_deviation_tolerance: float = None, custom_normal_angle_tolerance: float = None, max_edge_size_limit: CadRefacetingMaxEdgeSizeLimit = None, max_edge_size: float = None, json_data: dict = None, **kwargs)\n\nParameters to refacet CAD during import.\n\nParameters\n\nmodel (Model) – Model to create a CadRefacetingParams object with default parameters.\n\ncad_faceter (CadFaceter, optional) – Specify the available choices for faceter. The available option is Parasolid. (Note: ACIS faceter is being deprecated from 25R1).\n\nfaceting_resolution (CadRefacetingResolution, optional) – Set the faceting resolution.\n\ncustom_surface_deviation_tolerance (float, optional) – Set custom tolerance for surface deviation in specified length unit.\n\ncustom_normal_angle_tolerance (float, optional) – Set custom tolerance for normal angle in degree.\n\nmax_edge_size_limit (CadRefacetingMaxEdgeSizeLimit, optional) – Specify maximum edge size limit for faceting.\n\nmax_edge_size (float, optional) – Set maximum edge size of the facets.\n\njson_data (dict, optional) – JSON dictionary to create a CadRefacetingParams object with provided parameters.\n\nExamples\n\n>>> cad_refaceting_params = prime.CadRefacetingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingParams.html#overview","title":"CadRefacetingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncad_faceter\n\nACIS faceter is being deprecated from 25R1).\n\ncustom_normal_angle_tolerance\n\nSet custom tolerance for normal angle in degree.\n\ncustom_surface_deviation_tolerance\n\nSet custom tolerance for surface deviation in specified length unit.\n\nfaceting_resolution\n\nSet the faceting resolution.\n\nmax_edge_size\n\nSet maximum edge size of the facets.\n\nmax_edge_size_limit\n\nSpecify maximum edge size limit for faceting.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CadRefacetingParams object.\n\nset_default\n\nSet the default values of the CadRefacetingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingParams.html#import-detail","title":"CadRefacetingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingParams.html#property-detail","title":"CadRefacetingParams > Property detail","text":"Property detail\n\n\n\nproperty CadRefacetingParams.cad_faceter: CadFaceter\n\nACIS faceter is being deprecated from 25R1).\n\nType\n\nSpecify the available choices for faceter. The available option is Parasolid. (Note\n\n\n\nproperty CadRefacetingParams.custom_normal_angle_tolerance: float\n\nSet custom tolerance for normal angle in degree.\n\n\n\nproperty CadRefacetingParams.custom_surface_deviation_tolerance: float\n\nSet custom tolerance for surface deviation in specified length unit.\n\n\n\nproperty CadRefacetingParams.faceting_resolution: CadRefacetingResolution\n\nSet the faceting resolution.\n\n\n\nproperty CadRefacetingParams.max_edge_size: float\n\nSet maximum edge size of the facets.\n\n\n\nproperty CadRefacetingParams.max_edge_size_limit: CadRefacetingMaxEdgeSizeLimit\n\nSpecify maximum edge size limit for faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/CadRefacetingParams.html#method-detail","title":"CadRefacetingParams > Method detail","text":"Method detail\n\n\n\nCadRefacetingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCadRefacetingParams.__str__() -> str\n\n\n\n\n\nstatic CadRefacetingParams.print_default()\n\nPrint the default values of CadRefacetingParams object.\n\nExamples\n\n>>> CadRefacetingParams.print_default()\n\n\n\nstatic CadRefacetingParams.set_default(cad_faceter: CadFaceter = None, faceting_resolution: CadRefacetingResolution = None, custom_surface_deviation_tolerance: float = None, custom_normal_angle_tolerance: float = None, max_edge_size_limit: CadRefacetingMaxEdgeSizeLimit = None, max_edge_size: float = None)\n\nSet the default values of the CadRefacetingParams object.\n\nParameters\n\ncad_faceter (CadFaceter, optional) – Specify the available choices for faceter. The available option is Parasolid. (Note: ACIS faceter is being deprecated from 25R1).\n\nfaceting_resolution (CadRefacetingResolution, optional) – Set the faceting resolution.\n\ncustom_surface_deviation_tolerance (float, optional) – Set custom tolerance for surface deviation in specified length unit.\n\ncustom_normal_angle_tolerance (float, optional) – Set custom tolerance for normal angle in degree.\n\nmax_edge_size_limit (CadRefacetingMaxEdgeSizeLimit, optional) – Specify maximum edge size limit for faceting.\n\nmax_edge_size (float, optional) – Set maximum edge size of the facets."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_toy_car_dsco.html#ansysmeshingprimeexamplesexamplesdownload_toy_car_dsco","title":"ansys.meshing.prime.examples.examples.download_toy_car_dsco","text":"ansys.meshing.prime.examples.examples.download_toy_car_dsco\n\n\n\nansys.meshing.prime.examples.examples.download_toy_car_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the toy car example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsParams.html#refineatcontactsparams","title":"RefineAtContactsParams","text":"RefineAtContactsParams\n\n\n\nclass ansys.meshing.prime.RefineAtContactsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, contact_tolerance: float = None, relative_tolerance: bool = None, refine_max_size: float = None, project_on_geometry: bool = None, json_data: dict = None, **kwargs)\n\nParameters to refine face elements in contact.\n\nParameters\n\nmodel (Model) – Model to create a RefineAtContactsParams object with default parameters.\n\ncontact_tolerance (float, optional) – Maximum tolerance used to identify face elements as contacts.\n\nrelative_tolerance (bool, optional) – Option to specify the contact tolerance is relative or absolute.\n\nrefine_max_size (float, optional) – Maximum size used to refine contact face elements.\n\nproject_on_geometry (bool, optional) – Project on geometry on remesh.\n\njson_data (dict, optional) – JSON dictionary to create a RefineAtContactsParams object with provided parameters.\n\nExamples\n\n>>> refine_at_contacts_params = prime.RefineAtContactsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsParams.html#overview","title":"RefineAtContactsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontact_tolerance\n\nMaximum tolerance used to identify face elements as contacts.\n\nproject_on_geometry\n\nProject on geometry on remesh.\n\nrefine_max_size\n\nMaximum size used to refine contact face elements.\n\nrelative_tolerance\n\nOption to specify the contact tolerance is relative or absolute.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RefineAtContactsParams object.\n\nset_default\n\nSet the default values of the RefineAtContactsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsParams.html#import-detail","title":"RefineAtContactsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsParams.html#property-detail","title":"RefineAtContactsParams > Property detail","text":"Property detail\n\n\n\nproperty RefineAtContactsParams.contact_tolerance: float\n\nMaximum tolerance used to identify face elements as contacts.\n\n\n\nproperty RefineAtContactsParams.project_on_geometry: bool\n\nProject on geometry on remesh.\n\n\n\nproperty RefineAtContactsParams.refine_max_size: float\n\nMaximum size used to refine contact face elements.\n\n\n\nproperty RefineAtContactsParams.relative_tolerance: bool\n\nOption to specify the contact tolerance is relative or absolute."},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsParams.html#method-detail","title":"RefineAtContactsParams > Method detail","text":"Method detail\n\n\n\nRefineAtContactsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRefineAtContactsParams.__str__() -> str\n\n\n\n\n\nstatic RefineAtContactsParams.print_default()\n\nPrint the default values of RefineAtContactsParams object.\n\nExamples\n\n>>> RefineAtContactsParams.print_default()\n\n\n\nstatic RefineAtContactsParams.set_default(contact_tolerance: float = None, relative_tolerance: bool = None, refine_max_size: float = None, project_on_geometry: bool = None)\n\nSet the default values of the RefineAtContactsParams object.\n\nParameters\n\ncontact_tolerance (float, optional) – Maximum tolerance used to identify face elements as contacts.\n\nrelative_tolerance (bool, optional) – Option to specify the contact tolerance is relative or absolute.\n\nrefine_max_size (float, optional) – Maximum size used to refine contact face elements.\n\nproject_on_geometry (bool, optional) – Project on geometry on remesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/EdgeConnectType.html#edgeconnecttype","title":"EdgeConnectType","text":"EdgeConnectType\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.EdgeConnectType\n\nEdge connect type to define the type of connection between edges ."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/EdgeConnectType.html#overview","title":"EdgeConnectType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLTOALL\n\nPerform connections between any type of edges or faces.\n\nFREETOALL\n\nPerform connections between free edges and any type of edges or faces.\n\nFREETOFREE\n\nPerform connections between free edges.\n\nNONE\n\nPerform no connection."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/EdgeConnectType.html#import-detail","title":"EdgeConnectType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/EdgeConnectType.html#attribute-detail","title":"EdgeConnectType > Attribute detail","text":"Attribute detail\n\n\n\nEdgeConnectType.ALLTOALL = 1\n\nPerform connections between any type of edges or faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeConnectType.FREETOALL = 2\n\nPerform connections between free edges and any type of edges or faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeConnectType.FREETOFREE = 3\n\nPerform connections between free edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nEdgeConnectType.NONE = 0\n\nPerform no connection.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeResults.html#searchbyspikeresults","title":"SearchBySpikeResults","text":"SearchBySpikeResults\n\n\n\nclass ansys.meshing.prime.SearchBySpikeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with search spikes operation.\n\nParameters\n\nmodel (Model) – Model to create a SearchBySpikeResults object with default parameters.\n\nn_found (int, optional) – Number of spikes detected.\n\nerror_code (ErrorCode, optional) – Error code associated with search spikes operation.\n\njson_data (dict, optional) – JSON dictionary to create a SearchBySpikeResults object with provided parameters.\n\nExamples\n\n>>> search_by_spike_results = prime.SearchBySpikeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeResults.html#overview","title":"SearchBySpikeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with search spikes operation.\n\nn_found\n\nNumber of spikes detected.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchBySpikeResults object.\n\nset_default\n\nSet the default values of the SearchBySpikeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeResults.html#import-detail","title":"SearchBySpikeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeResults.html#property-detail","title":"SearchBySpikeResults > Property detail","text":"Property detail\n\n\n\nproperty SearchBySpikeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with search spikes operation.\n\n\n\nproperty SearchBySpikeResults.n_found: int\n\nNumber of spikes detected."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchBySpikeResults.html#method-detail","title":"SearchBySpikeResults > Method detail","text":"Method detail\n\n\n\nSearchBySpikeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchBySpikeResults.__str__() -> str\n\n\n\n\n\nstatic SearchBySpikeResults.print_default()\n\nPrint the default values of SearchBySpikeResults object.\n\nExamples\n\n>>> SearchBySpikeResults.print_default()\n\n\n\nstatic SearchBySpikeResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SearchBySpikeResults object.\n\nParameters\n\nn_found (int, optional) – Number of spikes detected.\n\nerror_code (ErrorCode, optional) – Error code associated with search spikes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_pipe_tee_dsco.html#ansysmeshingprimeexamplesexamplesdownload_pipe_tee_dsco","title":"ansys.meshing.prime.examples.examples.download_pipe_tee_dsco","text":"ansys.meshing.prime.examples.examples.download_pipe_tee_dsco\n\n\n\nansys.meshing.prime.examples.examples.download_pipe_tee_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the pipe tee example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeNodeType.html#mergenodetype","title":"MergeNodeType","text":"MergeNodeType\n\n\n\nclass ansys.meshing.prime.MergeNodeType\n\nType of nodes to be merged."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeNodeType.html#overview","title":"MergeNodeType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLALL\n\nMerge any type of nodes with any type of nodes.\n\nFREEFREE\n\nMerge only free nodes with free nodes."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeNodeType.html#import-detail","title":"MergeNodeType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeNodeType.html#attribute-detail","title":"MergeNodeType > Attribute detail","text":"Attribute detail\n\n\n\nMergeNodeType.ALLALL = 0\n\nMerge any type of nodes with any type of nodes.\n\n\n\nMergeNodeType.FREEFREE = 1\n\nMerge only free nodes with free nodes."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsParams.html#searchbyfoldsparams","title":"SearchByFoldsParams","text":"SearchByFoldsParams\n\n\n\nclass ansys.meshing.prime.SearchByFoldsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, critical_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters to control fold detection.\n\nParameters\n\nmodel (Model) – Model to create a SearchByFoldsParams object with default parameters.\n\ncritical_angle (float, optional) – Threshold angle for fold detection.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByFoldsParams object with provided parameters.\n\nExamples\n\n>>> search_by_folds_params = prime.SearchByFoldsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsParams.html#overview","title":"SearchByFoldsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncritical_angle\n\nThreshold angle for fold detection.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByFoldsParams object.\n\nset_default\n\nSet the default values of the SearchByFoldsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsParams.html#import-detail","title":"SearchByFoldsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsParams.html#property-detail","title":"SearchByFoldsParams > Property detail","text":"Property detail\n\n\n\nproperty SearchByFoldsParams.critical_angle: float\n\nThreshold angle for fold detection."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByFoldsParams.html#method-detail","title":"SearchByFoldsParams > Method detail","text":"Method detail\n\n\n\nSearchByFoldsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByFoldsParams.__str__() -> str\n\n\n\n\n\nstatic SearchByFoldsParams.print_default()\n\nPrint the default values of SearchByFoldsParams object.\n\nExamples\n\n>>> SearchByFoldsParams.print_default()\n\n\n\nstatic SearchByFoldsParams.set_default(critical_angle: float = None)\n\nSet the default values of the SearchByFoldsParams object.\n\nParameters\n\ncritical_angle (float, optional) – Threshold angle for fold detection."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/VolumeFillType.html#volumefilltype","title":"VolumeFillType","text":"VolumeFillType\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.VolumeFillType\n\nTypes of volume fill options."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/VolumeFillType.html#overview","title":"VolumeFillType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nHEXCOREPOLY\n\nVolume fill using hexahedral cells in the core and polyhedral cells near the boundary.\n\nHEXCORETET\n\nVolume fill using hexahedral cells in the core and tetrahedral cells near the boundary.\n\nPOLY\n\nVolume fill using polyhedral cells.\n\nTET\n\nVolume fill using tetrahedral cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/VolumeFillType.html#import-detail","title":"VolumeFillType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/VolumeFillType.html#attribute-detail","title":"VolumeFillType > Attribute detail","text":"Attribute detail\n\n\n\nVolumeFillType.HEXCOREPOLY = 3\n\nVolume fill using hexahedral cells in the core and polyhedral cells near the boundary.\n\n\n\nVolumeFillType.HEXCORETET = 2\n\nVolume fill using hexahedral cells in the core and tetrahedral cells near the boundary.\n\n\n\nVolumeFillType.POLY = 1\n\nVolume fill using polyhedral cells.\n\n\n\nVolumeFillType.TET = 0\n\nVolume fill using tetrahedral cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSweepMeshParams.html#multizonesweepmeshparams","title":"MultiZoneSweepMeshParams","text":"MultiZoneSweepMeshParams\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.MultiZoneSweepMeshParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, source_and_target_scope: ScopeDefinition = None, sweep_mesh_size: float = None, n_divisions: int = None, thin_sweep: bool = None, sweep_type: SweepType = None, json_data: dict = None, **kwargs)\n\nDefines MultiZone thin sweep mesh control parameters.\n\nParameters\n\nmodel (Model) – Model to create a MultiZoneSweepMeshParams object with default parameters.\n\nsource_and_target_scope (ScopeDefinition, optional) – Source and target faces used to determine the direction of sweep in MultiZone meshing.This is a beta parameter. The behavior and name may change in the future.\n\nsweep_mesh_size (float, optional) – Sweep mesh size used to determine the mesh size and number of divisions in the sweep direction.This is a beta parameter. The behavior and name may change in the future.\n\nn_divisions (int, optional) – Number of divisions in the sweep direction.This is a beta parameter. The behavior and name may change in the future.\n\nthin_sweep (bool, optional) – Thin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.This is a beta parameter. The behavior and name may change in the future.\n\nsweep_type (SweepType, optional) – Option to specify the sweep mesh decomposition type.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a MultiZoneSweepMeshParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_sweep_mesh_params = prime.MultiZoneSweepMeshParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSweepMeshParams.html#overview","title":"MultiZoneSweepMeshParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nn_divisions\n\nNumber of divisions in the sweep direction.\n\nsource_and_target_scope\n\nSource and target faces used to determine the direction of sweep in MultiZone meshing.\n\nsweep_mesh_size\n\nSweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nsweep_type\n\nOption to specify the sweep mesh decomposition type.\n\nthin_sweep\n\nThin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MultiZoneSweepMeshParams object.\n\nset_default\n\nSet the default values of the MultiZoneSweepMeshParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSweepMeshParams.html#import-detail","title":"MultiZoneSweepMeshParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSweepMeshParams.html#property-detail","title":"MultiZoneSweepMeshParams > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneSweepMeshParams.n_divisions: int\n\nNumber of divisions in the sweep direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSweepMeshParams.source_and_target_scope: ScopeDefinition\n\nSource and target faces used to determine the direction of sweep in MultiZone meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSweepMeshParams.sweep_mesh_size: float\n\nSweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSweepMeshParams.sweep_type: SweepType\n\nOption to specify the sweep mesh decomposition type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSweepMeshParams.thin_sweep: bool\n\nThin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSweepMeshParams.html#method-detail","title":"MultiZoneSweepMeshParams > Method detail","text":"Method detail\n\n\n\nMultiZoneSweepMeshParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneSweepMeshParams.__str__() -> str\n\n\n\n\n\nstatic MultiZoneSweepMeshParams.print_default()\n\nPrint the default values of MultiZoneSweepMeshParams object.\n\nExamples\n\n>>> MultiZoneSweepMeshParams.print_default()\n\n\n\nstatic MultiZoneSweepMeshParams.set_default(source_and_target_scope: ScopeDefinition = None, sweep_mesh_size: float = None, n_divisions: int = None, thin_sweep: bool = None, sweep_type: SweepType = None)\n\nSet the default values of the MultiZoneSweepMeshParams object.\n\nParameters\n\nsource_and_target_scope (ScopeDefinition, optional) – Source and target faces used to determine the direction of sweep in MultiZone meshing.\n\nsweep_mesh_size (float, optional) – Sweep mesh size used to determine the mesh size and number of divisions in the sweep direction.\n\nn_divisions (int, optional) – Number of divisions in the sweep direction.\n\nthin_sweep (bool, optional) – Thin sweep option set to True will generate sweep mesh in thin volumes by respecting nDivisions.   Thin sweep option set to False will generate sweep mesh whose number of divisions in the direction of sweep is determined by sweepMeshSize.\n\nsweep_type (SweepType, optional) – Option to specify the sweep mesh decomposition type."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismParams.html#prismparams","title":"PrismParams","text":"PrismParams\n\n\n\nclass ansys.meshing.prime.PrismParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, stair_step: PrismStairStep = None, no_imprint_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nParameters to control prism mesh generation.\n\nParameters\n\nmodel (Model) – Model to create a PrismParams object with default parameters.\n\nstair_step (PrismStairStep, optional) – Prism stairstep parameters.\n\nno_imprint_zonelets (Iterable[int], optional) – Option to specify zonelets to skip prism imprint.\n\njson_data (dict, optional) – JSON dictionary to create a PrismParams object with provided parameters.\n\nExamples\n\n>>> prism_params = prime.PrismParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismParams.html#overview","title":"PrismParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nno_imprint_zonelets\n\nOption to specify zonelets to skip prism imprint.\n\nstair_step\n\nPrism stairstep parameters.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PrismParams object.\n\nset_default\n\nSet the default values of the PrismParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismParams.html#import-detail","title":"PrismParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismParams.html#property-detail","title":"PrismParams > Property detail","text":"Property detail\n\n\n\nproperty PrismParams.no_imprint_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nOption to specify zonelets to skip prism imprint.\n\n\n\nproperty PrismParams.stair_step: PrismStairStep\n\nPrism stairstep parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismParams.html#method-detail","title":"PrismParams > Method detail","text":"Method detail\n\n\n\nPrismParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismParams.__str__() -> str\n\n\n\n\n\nstatic PrismParams.print_default()\n\nPrint the default values of PrismParams object.\n\nExamples\n\n>>> PrismParams.print_default()\n\n\n\nstatic PrismParams.set_default(stair_step: PrismStairStep = None, no_imprint_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the PrismParams object.\n\nParameters\n\nstair_step (PrismStairStep, optional) – Prism stairstep parameters.\n\nno_imprint_zonelets (Iterable[int], optional) – Option to specify zonelets to skip prism imprint."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_wheel_ground_fmd.html#ansysmeshingprimeexamplesdownload_wheel_ground_fmd","title":"ansys.meshing.prime.examples.download_wheel_ground_fmd","text":"ansys.meshing.prime.examples.download_wheel_ground_fmd\n\n\n\nansys.meshing.prime.examples.download_wheel_ground_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the wheel ground contact patch example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     wheel_ground = prime_examples.download_wheel_ground_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(wheel_ground, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapParams.html#createcapparams","title":"CreateCapParams","text":"CreateCapParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.CreateCapParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to create cap on face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateCapParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a CreateCapParams object with provided parameters.\n\nExamples\n\n>>> create_cap_params = prime.CreateCapParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapParams.html#overview","title":"CreateCapParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateCapParams object.\n\nset_default\n\nSet the default values of the CreateCapParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapParams.html#import-detail","title":"CreateCapParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapParams.html#method-detail","title":"CreateCapParams > Method detail","text":"Method detail\n\n\n\nCreateCapParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateCapParams.__str__() -> str\n\n\n\n\n\nstatic CreateCapParams.print_default()\n\nPrint the default values of CreateCapParams object.\n\nExamples\n\n>>> CreateCapParams.print_default()\n\n\n\nstatic CreateCapParams.set_default()\n\nSet the default values of the CreateCapParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleParams.html#topofillholeparams","title":"TopoFillHoleParams","text":"TopoFillHoleParams\n\n\n\nclass ansys.meshing.prime.TopoFillHoleParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, edges_to_exclude: ansys.meshing.prime.params.primestructs.Iterable[int] = None, suppress_boundary_after_hole_fill: bool = None, fill_annular_hole: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to fill holes in topology.\n\nParameters\n\nmodel (Model) – Model to create a TopoFillHoleParams object with default parameters.\n\nedges_to_exclude (Iterable[int], optional) – TopoEdges to be excluded for cap creation.\n\nsuppress_boundary_after_hole_fill (bool, optional) – Option to preserve or suppress hole-boundary after filling holes.\n\nfill_annular_hole (bool, optional) – Option for filling holes with annular bounding loops.\n\njson_data (dict, optional) – JSON dictionary to create a TopoFillHoleParams object with provided parameters.\n\nExamples\n\n>>> topo_fill_hole_params = prime.TopoFillHoleParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleParams.html#overview","title":"TopoFillHoleParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedges_to_exclude\n\nTopoEdges to be excluded for cap creation.\n\nfill_annular_hole\n\nOption for filling holes with annular bounding loops.\n\nsuppress_boundary_after_hole_fill\n\nOption to preserve or suppress hole-boundary after filling holes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TopoFillHoleParams object.\n\nset_default\n\nSet the default values of the TopoFillHoleParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleParams.html#import-detail","title":"TopoFillHoleParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleParams.html#property-detail","title":"TopoFillHoleParams > Property detail","text":"Property detail\n\n\n\nproperty TopoFillHoleParams.edges_to_exclude: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nTopoEdges to be excluded for cap creation.\n\n\n\nproperty TopoFillHoleParams.fill_annular_hole: bool\n\nOption for filling holes with annular bounding loops.\n\n\n\nproperty TopoFillHoleParams.suppress_boundary_after_hole_fill: bool\n\nOption to preserve or suppress hole-boundary after filling holes."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleParams.html#method-detail","title":"TopoFillHoleParams > Method detail","text":"Method detail\n\n\n\nTopoFillHoleParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTopoFillHoleParams.__str__() -> str\n\n\n\n\n\nstatic TopoFillHoleParams.print_default()\n\nPrint the default values of TopoFillHoleParams object.\n\nExamples\n\n>>> TopoFillHoleParams.print_default()\n\n\n\nstatic TopoFillHoleParams.set_default(edges_to_exclude: ansys.meshing.prime.params.primestructs.Iterable[int] = None, suppress_boundary_after_hole_fill: bool = None, fill_annular_hole: bool = None)\n\nSet the default values of the TopoFillHoleParams object.\n\nParameters\n\nedges_to_exclude (Iterable[int], optional) – TopoEdges to be excluded for cap creation.\n\nsuppress_boundary_after_hole_fill (bool, optional) – Option to preserve or suppress hole-boundary after filling holes.\n\nfill_annular_hole (bool, optional) – Option for filling holes with annular bounding loops."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchParams.html#stitchparams","title":"StitchParams","text":"StitchParams\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.StitchParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, enable_multi_threading: bool = None, type: StitchType = None, json_data: dict = None, **kwargs)\n\nParameters used for stitch operation.\n\nParameters\n\nmodel (Model) – Model to create a StitchParams object with default parameters.\n\ntolerance (float, optional) – Distance tolerance for stitching boundaries.\n\nuse_absolute_tolerance (bool, optional) – True if tolerance provided is absolute value.\n\nremesh (bool, optional) – Remesh at stitch connection.\n\nenable_multi_threading (bool, optional) – Option to run stitch in parallel using multithread.\n\ntype (StitchType, optional) – Stitch type depending on nature of surface boundary edges to be stitched.\n\njson_data (dict, optional) – JSON dictionary to create a StitchParams object with provided parameters.\n\nExamples\n\n>>> stitch_params = prime.StitchParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchParams.html#overview","title":"StitchParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nenable_multi_threading\n\nOption to run stitch in parallel using multithread.\n\nremesh\n\nRemesh at stitch connection.\n\ntolerance\n\nDistance tolerance for stitching boundaries.\n\ntype\n\nStitch type depending on nature of surface boundary edges to be stitched.\n\nuse_absolute_tolerance\n\nTrue if tolerance provided is absolute value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of StitchParams object.\n\nset_default\n\nSet the default values of the StitchParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchParams.html#import-detail","title":"StitchParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchParams.html#property-detail","title":"StitchParams > Property detail","text":"Property detail\n\n\n\nproperty StitchParams.enable_multi_threading: bool\n\nOption to run stitch in parallel using multithread.\n\n\n\nproperty StitchParams.remesh: bool\n\nRemesh at stitch connection.\n\n\n\nproperty StitchParams.tolerance: float\n\nDistance tolerance for stitching boundaries.\n\n\n\nproperty StitchParams.type: StitchType\n\nStitch type depending on nature of surface boundary edges to be stitched.\n\n\n\nproperty StitchParams.use_absolute_tolerance: bool\n\nTrue if tolerance provided is absolute value."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/StitchParams.html#method-detail","title":"StitchParams > Method detail","text":"Method detail\n\n\n\nStitchParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nStitchParams.__str__() -> str\n\n\n\n\n\nstatic StitchParams.print_default()\n\nPrint the default values of StitchParams object.\n\nExamples\n\n>>> StitchParams.print_default()\n\n\n\nstatic StitchParams.set_default(tolerance: float = None, use_absolute_tolerance: bool = None, remesh: bool = None, enable_multi_threading: bool = None, type: StitchType = None)\n\nSet the default values of the StitchParams object.\n\nParameters\n\ntolerance (float, optional) – Distance tolerance for stitching boundaries.\n\nuse_absolute_tolerance (bool, optional) – True if tolerance provided is absolute value.\n\nremesh (bool, optional) – Remesh at stitch connection.\n\nenable_multi_threading (bool, optional) – Option to run stitch in parallel using multithread.\n\ntype (StitchType, optional) – Stitch type depending on nature of surface boundary edges to be stitched."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/index.html#the-sizefieldstructspy-module","title":"The sizefieldstructs.py module","text":"The sizefieldstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/index.html#summary","title":"The sizefieldstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSFPeriodicParams\n\nParameters for setting periodic size fields.\n\nVolumetricSizeFieldComputeParams\n\nParameters associated with the compute volumetric size field operation.\n\nVolumetricSizeFieldComputeResults\n\nResults associated with the compute volumetric size field operation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizefieldstructs/index.html#description","title":"The sizefieldstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/splittoolstructs/SplitParams.html#splitparams","title":"SplitParams","text":"SplitParams\n\n\n\nclass ansys.meshing.prime.autogen.splittoolstructs.SplitParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, split_ratio: float = None, json_data: dict = None, **kwargs)\n\nParameters to split face elements at longest edge.\n\nParameters\n\nmodel (Model) – Model to create a SplitParams object with default parameters.\n\nsplit_ratio (float, optional) – Minimum ratio of split edge length to original edge length.\n\njson_data (dict, optional) – JSON dictionary to create a SplitParams object with provided parameters.\n\nExamples\n\n>>> split_params = prime.SplitParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/splittoolstructs/SplitParams.html#overview","title":"SplitParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nsplit_ratio\n\nMinimum ratio of split edge length to original edge length.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SplitParams object.\n\nset_default\n\nSet the default values of the SplitParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/splittoolstructs/SplitParams.html#import-detail","title":"SplitParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/splittoolstructs/SplitParams.html#property-detail","title":"SplitParams > Property detail","text":"Property detail\n\n\n\nproperty SplitParams.split_ratio: float\n\nMinimum ratio of split edge length to original edge length."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/splittoolstructs/SplitParams.html#method-detail","title":"SplitParams > Method detail","text":"Method detail\n\n\n\nSplitParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSplitParams.__str__() -> str\n\n\n\n\n\nstatic SplitParams.print_default()\n\nPrint the default values of SplitParams object.\n\nExamples\n\n>>> SplitParams.print_default()\n\n\n\nstatic SplitParams.set_default(split_ratio: float = None)\n\nSet the default values of the SplitParams object.\n\nParameters\n\nsplit_ratio (float, optional) – Minimum ratio of split edge length to original edge length."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/ThinStripType.html#thinstriptype","title":"ThinStripType","text":"ThinStripType\n\n\n\nclass ansys.meshing.prime.autogen.surfacesearchstructs.ThinStripType\n\nThe type to identify strip of face elements as thin strips using shape formed by features around the strip of face elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/ThinStripType.html#overview","title":"ThinStripType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALL\n\nThin strips of all shapes.\n\nEXCLUDEVSHAPE\n\nThin strips of all, but not v shape.\n\nVSHAPE\n\nThin strips of v shape only."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/ThinStripType.html#import-detail","title":"ThinStripType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfacesearchstructs/ThinStripType.html#attribute-detail","title":"ThinStripType > Attribute detail","text":"Attribute detail\n\n\n\nThinStripType.ALL = 0\n\nThin strips of all shapes.\n\n\n\nThinStripType.EXCLUDEVSHAPE = 1\n\nThin strips of all, but not v shape.\n\n\n\nThinStripType.VSHAPE = 2\n\nThin strips of v shape only."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleResult.html#topofillholeresult","title":"TopoFillHoleResult","text":"TopoFillHoleResult\n\n\n\nclass ansys.meshing.prime.TopoFillHoleResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, new_topo_faces_created: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with fill holes in topology operations.\n\nParameters\n\nmodel (Model) – Model to create a TopoFillHoleResult object with default parameters.\n\nnew_topo_faces_created (Iterable[int], optional) – Ids of new topofaces created.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrap operation.\n\njson_data (dict, optional) – JSON dictionary to create a TopoFillHoleResult object with provided parameters.\n\nExamples\n\n>>> topo_fill_hole_result = prime.TopoFillHoleResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleResult.html#overview","title":"TopoFillHoleResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with a wrap operation.\n\nnew_topo_faces_created\n\nIds of new topofaces created.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TopoFillHoleResult object.\n\nset_default\n\nSet the default values of the TopoFillHoleResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleResult.html#import-detail","title":"TopoFillHoleResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleResult.html#property-detail","title":"TopoFillHoleResult > Property detail","text":"Property detail\n\n\n\nproperty TopoFillHoleResult.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with a wrap operation.\n\n\n\nproperty TopoFillHoleResult.new_topo_faces_created: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new topofaces created."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoFillHoleResult.html#method-detail","title":"TopoFillHoleResult > Method detail","text":"Method detail\n\n\n\nTopoFillHoleResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTopoFillHoleResult.__str__() -> str\n\n\n\n\n\nstatic TopoFillHoleResult.print_default()\n\nPrint the default values of TopoFillHoleResult object.\n\nExamples\n\n>>> TopoFillHoleResult.print_default()\n\n\n\nstatic TopoFillHoleResult.set_default(new_topo_faces_created: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the TopoFillHoleResult object.\n\nParameters\n\nnew_topo_faces_created (Iterable[int], optional) – Ids of new topofaces created.\n\nerror_code (ErrorCode, optional) – Error code associated with a wrap operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbResults.html#importmapdlcdbresults","title":"ImportMapdlCdbResults","text":"ImportMapdlCdbResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ImportMapdlCdbResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the MAPDL CDB import.\n\nParameters\n\nmodel (Model) – Model to create a ImportMapdlCdbResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ImportMapdlCdbResults object with provided parameters.\n\nExamples\n\n>>> import_mapdl_cdb_results = prime.ImportMapdlCdbResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbResults.html#overview","title":"ImportMapdlCdbResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportMapdlCdbResults object.\n\nset_default\n\nSet the default values of the ImportMapdlCdbResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbResults.html#import-detail","title":"ImportMapdlCdbResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbResults.html#property-detail","title":"ImportMapdlCdbResults > Property detail","text":"Property detail\n\n\n\nproperty ImportMapdlCdbResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty ImportMapdlCdbResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ImportMapdlCdbResults.html#method-detail","title":"ImportMapdlCdbResults > Method detail","text":"Method detail\n\n\n\nImportMapdlCdbResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportMapdlCdbResults.__str__() -> str\n\n\n\n\n\nstatic ImportMapdlCdbResults.print_default()\n\nPrint the default values of ImportMapdlCdbResults object.\n\nExamples\n\n>>> ImportMapdlCdbResults.print_default()\n\n\n\nstatic ImportMapdlCdbResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ImportMapdlCdbResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetNameResults.html#setnameresults","title":"SetNameResults","text":"SetNameResults\n\n\n\nclass ansys.meshing.prime.SetNameResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, assigned_name: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the set name.\n\nParameters\n\nmodel (Model) – Model to create a SetNameResults object with default parameters.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set name of given entity.\n\nassigned_name (str, optional) – Assigned name of given entity.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a SetNameResults object with provided parameters.\n\nExamples\n\n>>> set_name_results = prime.SetNameResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetNameResults.html#overview","title":"SetNameResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_name\n\nAssigned name of given entity.\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_code\n\nWarning code associated with the set name of given entity.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetNameResults object.\n\nset_default\n\nSet the default values of the SetNameResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetNameResults.html#import-detail","title":"SetNameResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetNameResults.html#property-detail","title":"SetNameResults > Property detail","text":"Property detail\n\n\n\nproperty SetNameResults.assigned_name: str\n\nAssigned name of given entity.\n\n\n\nproperty SetNameResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty SetNameResults.warning_code: ansys.meshing.prime.params.primestructs.WarningCode\n\nWarning code associated with the set name of given entity."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetNameResults.html#method-detail","title":"SetNameResults > Method detail","text":"Method detail\n\n\n\nSetNameResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetNameResults.__str__() -> str\n\n\n\n\n\nstatic SetNameResults.print_default()\n\nPrint the default values of SetNameResults object.\n\nExamples\n\n>>> SetNameResults.print_default()\n\n\n\nstatic SetNameResults.set_default(warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, assigned_name: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SetNameResults object.\n\nParameters\n\nwarning_code (WarningCode, optional) – Warning code associated with the set name of given entity.\n\nassigned_name (str, optional) – Assigned name of given entity.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportSTLParams.html#exportstlparams","title":"ExportSTLParams","text":"ExportSTLParams\n\n\n\nclass ansys.meshing.prime.ExportSTLParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, part_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nParameters to export STL file.\n\nParameters\n\nmodel (Model) – Model to create a ExportSTLParams object with default parameters.\n\npart_ids (Iterable[int], optional) – Ids of parts to export.\n\njson_data (dict, optional) – JSON dictionary to create a ExportSTLParams object with provided parameters.\n\nExamples\n\n>>> export_stlparams = prime.ExportSTLParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportSTLParams.html#overview","title":"ExportSTLParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\npart_ids\n\nIds of parts to export.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportSTLParams object.\n\nset_default\n\nSet the default values of the ExportSTLParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportSTLParams.html#import-detail","title":"ExportSTLParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportSTLParams.html#property-detail","title":"ExportSTLParams > Property detail","text":"Property detail\n\n\n\nproperty ExportSTLParams.part_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of parts to export."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportSTLParams.html#method-detail","title":"ExportSTLParams > Method detail","text":"Method detail\n\n\n\nExportSTLParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportSTLParams.__str__() -> str\n\n\n\n\n\nstatic ExportSTLParams.print_default()\n\nPrint the default values of ExportSTLParams object.\n\nExamples\n\n>>> ExportSTLParams.print_default()\n\n\n\nstatic ExportSTLParams.set_default(part_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ExportSTLParams object.\n\nParameters\n\npart_ids (Iterable[int], optional) – Ids of parts to export."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatHolesParams.html#detectandtreatholesparams","title":"DetectAndTreatHolesParams","text":"DetectAndTreatHolesParams\n\n\n\nclass ansys.meshing.prime.DetectAndTreatHolesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, detect_and_defeature_edges_near_holes: bool = None, detect_circular_holes: bool = None, detect_non_circular_holes: bool = None, offset_holes: bool = None, mesh_offset_faces: bool = None, detect_holes_params: DetectHolesParams = None, detect_circular_holes_params: DetectCircularHolesParams = None, detect_non_circular_holes_params: DetectNonCircularHolesParams = None, hole_proximity_tolerance: float = None, merge_face_normals_angle: float = None, edge_sharp_corner_angle: float = None, fragmented_edge_tolerance: float = None, offset_distance: float = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, json_data: dict = None, **kwargs)\n\nParameters for detect and treat holes operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectAndTreatHolesParams object with default parameters.\n\ndetect_and_defeature_edges_near_holes (bool, optional) – Option to detect and defeature edges near all holes.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_circular_holes (bool, optional) – Option to detect circular holes.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_non_circular_holes (bool, optional) – Option to detect non-circular holes.This is a beta parameter. The behavior and name may change in the future.\n\noffset_holes (bool, optional) – Option to offset holes.This is a beta parameter. The behavior and name may change in the future.\n\nmesh_offset_faces (bool, optional) – Option to mesh the offset holes.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_holes_params (DetectHolesParams, optional) – Parameters for detect holes operation.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_circular_holes_params (DetectCircularHolesParams, optional) – Parameters for detect circular holes operation.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_non_circular_holes_params (DetectNonCircularHolesParams, optional) – Parameters for detect non circular holes operation.This is a beta parameter. The behavior and name may change in the future.\n\nhole_proximity_tolerance (float, optional) – Edge proximity tolerance for holes.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nfragmented_edge_tolerance (float, optional) – Fragmented edge length tolerance for merging edges.This is a beta parameter. The behavior and name may change in the future.\n\noffset_distance (float, optional) – Offset distance for creating offset edge.This is a beta parameter. The behavior and name may change in the future.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.This is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectAndTreatHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_holes_params = prime.DetectAndTreatHolesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatHolesParams.html#overview","title":"DetectAndTreatHolesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndetect_and_defeature_edges_near_holes\n\nOption to detect and defeature edges near all holes.\n\ndetect_circular_holes\n\nOption to detect circular holes.\n\ndetect_circular_holes_params\n\nParameters for detect circular holes operation.\n\ndetect_holes_params\n\nParameters for detect holes operation.\n\ndetect_non_circular_holes\n\nOption to detect non-circular holes.\n\ndetect_non_circular_holes_params\n\nParameters for detect non circular holes operation.\n\nedge_mesh_constant_size\n\nConstant size used for edge meshing.\n\nedge_sharp_corner_angle\n\nMerge edges when the angle between the edges are below the provided value.\n\nfragmented_edge_tolerance\n\nFragmented edge length tolerance for merging edges.\n\nhole_proximity_tolerance\n\nEdge proximity tolerance for holes.\n\nmerge_face_normals_angle\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nmesh_offset_faces\n\nOption to mesh the offset holes.\n\noffset_distance\n\nOffset distance for creating offset edge.\n\noffset_holes\n\nOption to offset holes.\n\nsurface_mesh_constant_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectAndTreatHolesParams object.\n\nset_default\n\nSet the default values of the DetectAndTreatHolesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatHolesParams.html#import-detail","title":"DetectAndTreatHolesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatHolesParams.html#property-detail","title":"DetectAndTreatHolesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectAndTreatHolesParams.detect_and_defeature_edges_near_holes: bool\n\nOption to detect and defeature edges near all holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_circular_holes: bool\n\nOption to detect circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_circular_holes_params: DetectCircularHolesParams\n\nParameters for detect circular holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_holes_params: DetectHolesParams\n\nParameters for detect holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_non_circular_holes: bool\n\nOption to detect non-circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_non_circular_holes_params: DetectNonCircularHolesParams\n\nParameters for detect non circular holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.fragmented_edge_tolerance: float\n\nFragmented edge length tolerance for merging edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.hole_proximity_tolerance: float\n\nEdge proximity tolerance for holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.mesh_offset_faces: bool\n\nOption to mesh the offset holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.offset_distance: float\n\nOffset distance for creating offset edge.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.offset_holes: bool\n\nOption to offset holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatHolesParams.html#method-detail","title":"DetectAndTreatHolesParams > Method detail","text":"Method detail\n\n\n\nDetectAndTreatHolesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectAndTreatHolesParams.__str__() -> str\n\n\n\n\n\nstatic DetectAndTreatHolesParams.print_default()\n\nPrint the default values of DetectAndTreatHolesParams object.\n\nExamples\n\n>>> DetectAndTreatHolesParams.print_default()\n\n\n\nstatic DetectAndTreatHolesParams.set_default(detect_and_defeature_edges_near_holes: bool = None, detect_circular_holes: bool = None, detect_non_circular_holes: bool = None, offset_holes: bool = None, mesh_offset_faces: bool = None, detect_holes_params: DetectHolesParams = None, detect_circular_holes_params: DetectCircularHolesParams = None, detect_non_circular_holes_params: DetectNonCircularHolesParams = None, hole_proximity_tolerance: float = None, merge_face_normals_angle: float = None, edge_sharp_corner_angle: float = None, fragmented_edge_tolerance: float = None, offset_distance: float = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None)\n\nSet the default values of the DetectAndTreatHolesParams object.\n\nParameters\n\ndetect_and_defeature_edges_near_holes (bool, optional) – Option to detect and defeature edges near all holes.\n\ndetect_circular_holes (bool, optional) – Option to detect circular holes.\n\ndetect_non_circular_holes (bool, optional) – Option to detect non-circular holes.\n\noffset_holes (bool, optional) – Option to offset holes.\n\nmesh_offset_faces (bool, optional) – Option to mesh the offset holes.\n\ndetect_holes_params (DetectHolesParams, optional) – Parameters for detect holes operation.\n\ndetect_circular_holes_params (DetectCircularHolesParams, optional) – Parameters for detect circular holes operation.\n\ndetect_non_circular_holes_params (DetectNonCircularHolesParams, optional) – Parameters for detect non circular holes operation.\n\nhole_proximity_tolerance (float, optional) – Edge proximity tolerance for holes.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.\n\nfragmented_edge_tolerance (float, optional) – Fragmented edge length tolerance for merging edges.\n\noffset_distance (float, optional) – Offset distance for creating offset edge.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchParams.html#createcontactpatchparams","title":"CreateContactPatchParams","text":"CreateContactPatchParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.CreateContactPatchParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, contact_patch_axis: ContactPatchAxis = None, offset_distance: float = None, grouping_tolerance: float = None, suggested_part_name: str = None, suggested_label_prefix: str = None, json_data: dict = None, **kwargs)\n\nParameters used for contact patch creation in the given axis.\n\nParameters\n\nmodel (Model) – Model to create a CreateContactPatchParams object with default parameters.\n\ncontact_patch_axis (ContactPatchAxis, optional) – Assigns the contact patch direction.\n\noffset_distance (float, optional) – Source offset distance value.\n\ngrouping_tolerance (float, optional) – Tolerance distance value to group regions for contact patch creation.\n\nsuggested_part_name (str, optional) – Suggested part name for created contact patch surfaces.\n\nsuggested_label_prefix (str, optional) – Suggested label name for created contact patch surfaces.\n\njson_data (dict, optional) – JSON dictionary to create a CreateContactPatchParams object with provided parameters.\n\nExamples\n\n>>> create_contact_patch_params = prime.CreateContactPatchParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchParams.html#overview","title":"CreateContactPatchParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncontact_patch_axis\n\nAssigns the contact patch direction.\n\ngrouping_tolerance\n\nTolerance distance value to group regions for contact patch creation.\n\noffset_distance\n\nSource offset distance value.\n\nsuggested_label_prefix\n\nSuggested label name for created contact patch surfaces.\n\nsuggested_part_name\n\nSuggested part name for created contact patch surfaces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateContactPatchParams object.\n\nset_default\n\nSet the default values of the CreateContactPatchParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchParams.html#import-detail","title":"CreateContactPatchParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchParams.html#property-detail","title":"CreateContactPatchParams > Property detail","text":"Property detail\n\n\n\nproperty CreateContactPatchParams.contact_patch_axis: ContactPatchAxis\n\nAssigns the contact patch direction.\n\n\n\nproperty CreateContactPatchParams.grouping_tolerance: float\n\nTolerance distance value to group regions for contact patch creation.\n\n\n\nproperty CreateContactPatchParams.offset_distance: float\n\nSource offset distance value.\n\n\n\nproperty CreateContactPatchParams.suggested_label_prefix: str\n\nSuggested label name for created contact patch surfaces.\n\n\n\nproperty CreateContactPatchParams.suggested_part_name: str\n\nSuggested part name for created contact patch surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateContactPatchParams.html#method-detail","title":"CreateContactPatchParams > Method detail","text":"Method detail\n\n\n\nCreateContactPatchParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateContactPatchParams.__str__() -> str\n\n\n\n\n\nstatic CreateContactPatchParams.print_default()\n\nPrint the default values of CreateContactPatchParams object.\n\nExamples\n\n>>> CreateContactPatchParams.print_default()\n\n\n\nstatic CreateContactPatchParams.set_default(contact_patch_axis: ContactPatchAxis = None, offset_distance: float = None, grouping_tolerance: float = None, suggested_part_name: str = None, suggested_label_prefix: str = None)\n\nSet the default values of the CreateContactPatchParams object.\n\nParameters\n\ncontact_patch_axis (ContactPatchAxis, optional) – Assigns the contact patch direction.\n\noffset_distance (float, optional) – Source offset distance value.\n\ngrouping_tolerance (float, optional) – Tolerance distance value to group regions for contact patch creation.\n\nsuggested_part_name (str, optional) – Suggested part name for created contact patch surfaces.\n\nsuggested_label_prefix (str, optional) – Suggested label name for created contact patch surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_f1_rw_drs_stl.html#ansysmeshingprimeexamplesexamplesdownload_f1_rw_drs_stl","title":"ansys.meshing.prime.examples.examples.download_f1_rw_drs_stl","text":"ansys.meshing.prime.examples.examples.download_f1_rw_drs_stl\n\n\n\nansys.meshing.prime.examples.examples.download_f1_rw_drs_stl(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload STL file for the generic f1 rear wing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     f1_rw_drs = prime_examples.download_f1_rw_drs_stl()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(f1_rw_drs, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryParams.html#partsummaryparams","title":"PartSummaryParams","text":"PartSummaryParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.PartSummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, print_id: bool = None, print_mesh: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control part summary results.\n\nParameters\n\nmodel (Model) – Model to create a PartSummaryParams object with default parameters.\n\nprint_id (bool, optional) – Boolean to control print ids. The default is false.\n\nprint_mesh (bool, optional) – Boolean to control print mesh information. The default is true.\n\njson_data (dict, optional) – JSON dictionary to create a PartSummaryParams object with provided parameters.\n\nExamples\n\n>>> part_summary_params = prime.PartSummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryParams.html#overview","title":"PartSummaryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nprint_id\n\nBoolean to control print ids. The default is false.\n\nprint_mesh\n\nBoolean to control print mesh information. The default is true.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PartSummaryParams object.\n\nset_default\n\nSet the default values of the PartSummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryParams.html#import-detail","title":"PartSummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryParams.html#property-detail","title":"PartSummaryParams > Property detail","text":"Property detail\n\n\n\nproperty PartSummaryParams.print_id: bool\n\nBoolean to control print ids. The default is false.\n\n\n\nproperty PartSummaryParams.print_mesh: bool\n\nBoolean to control print mesh information. The default is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/PartSummaryParams.html#method-detail","title":"PartSummaryParams > Method detail","text":"Method detail\n\n\n\nPartSummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPartSummaryParams.__str__() -> str\n\n\n\n\n\nstatic PartSummaryParams.print_default()\n\nPrint the default values of PartSummaryParams object.\n\nExamples\n\n>>> PartSummaryParams.print_default()\n\n\n\nstatic PartSummaryParams.set_default(print_id: bool = None, print_mesh: bool = None)\n\nSet the default values of the PartSummaryParams object.\n\nParameters\n\nprint_id (bool, optional) – Boolean to control print ids. The default is false.\n\nprint_mesh (bool, optional) – Boolean to control print mesh information. The default is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaKeywordFileParams.html#exportlsdynakeywordfileparams","title":"ExportLSDynaKeywordFileParams","text":"ExportLSDynaKeywordFileParams\n\n\n\nclass ansys.meshing.prime.ExportLSDynaKeywordFileParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, material_properties: str = None, database_keywords: str = None, output_format: LSDynaFileFormatType = None, analysis_type: LSDynaAnalysisType = None, compute_spotweld_thickness: bool = None, write_thickness_file: bool = None, output_controls_d3_part: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control LS-DYNA keyword file export settings.\n\nParameters\n\nmodel (Model) – Model to create a ExportLSDynaKeywordFileParams object with default parameters.\n\nmaterial_properties (str, optional) – Materials in LS-DYNA format to be added to the file.This is a beta parameter. The behavior and name may change in the future.\n\ndatabase_keywords (str, optional) – Database keywords in LS-DYNA format to be added to the file.This is a beta parameter. The behavior and name may change in the future.\n\noutput_format (LSDynaFileFormatType, optional) – Output file format used to write LS-DYNA file.This is a beta parameter. The behavior and name may change in the future.\n\nanalysis_type (LSDynaAnalysisType, optional) – Option to specify LS-DYNA analysis type.This is a beta parameter. The behavior and name may change in the future.\n\ncompute_spotweld_thickness (bool, optional) – Option to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_thickness_file (bool, optional) – Option to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.This is a beta parameter. The behavior and name may change in the future.\n\noutput_controls_d3_part (bool, optional) – Option to create D3Part card in output controls.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportLSDynaKeywordFileParams object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_keyword_file_params = prime.ExportLSDynaKeywordFileParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaKeywordFileParams.html#overview","title":"ExportLSDynaKeywordFileParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nanalysis_type\n\nOption to specify LS-DYNA analysis type.\n\ncompute_spotweld_thickness\n\nOption to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\ndatabase_keywords\n\nDatabase keywords in LS-DYNA format to be added to the file.\n\nmaterial_properties\n\nMaterials in LS-DYNA format to be added to the file.\n\noutput_controls_d3_part\n\nOption to create D3Part card in output controls.\n\noutput_format\n\nOutput file format used to write LS-DYNA file.\n\nwrite_thickness_file\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportLSDynaKeywordFileParams object.\n\nset_default\n\nSet the default values of the ExportLSDynaKeywordFileParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaKeywordFileParams.html#import-detail","title":"ExportLSDynaKeywordFileParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaKeywordFileParams.html#property-detail","title":"ExportLSDynaKeywordFileParams > Property detail","text":"Property detail\n\n\n\nproperty ExportLSDynaKeywordFileParams.analysis_type: LSDynaAnalysisType\n\nOption to specify LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.compute_spotweld_thickness: bool\n\nOption to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.database_keywords: str\n\nDatabase keywords in LS-DYNA format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.material_properties: str\n\nMaterials in LS-DYNA format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.output_controls_d3_part: bool\n\nOption to create D3Part card in output controls.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.output_format: LSDynaFileFormatType\n\nOutput file format used to write LS-DYNA file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.write_thickness_file: bool\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaKeywordFileParams.html#method-detail","title":"ExportLSDynaKeywordFileParams > Method detail","text":"Method detail\n\n\n\nExportLSDynaKeywordFileParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportLSDynaKeywordFileParams.__str__() -> str\n\n\n\n\n\nstatic ExportLSDynaKeywordFileParams.print_default()\n\nPrint the default values of ExportLSDynaKeywordFileParams object.\n\nExamples\n\n>>> ExportLSDynaKeywordFileParams.print_default()\n\n\n\nstatic ExportLSDynaKeywordFileParams.set_default(material_properties: str = None, database_keywords: str = None, output_format: LSDynaFileFormatType = None, analysis_type: LSDynaAnalysisType = None, compute_spotweld_thickness: bool = None, write_thickness_file: bool = None, output_controls_d3_part: bool = None)\n\nSet the default values of the ExportLSDynaKeywordFileParams object.\n\nParameters\n\nmaterial_properties (str, optional) – Materials in LS-DYNA format to be added to the file.\n\ndatabase_keywords (str, optional) – Database keywords in LS-DYNA format to be added to the file.\n\noutput_format (LSDynaFileFormatType, optional) – Output file format used to write LS-DYNA file.\n\nanalysis_type (LSDynaAnalysisType, optional) – Option to specify LS-DYNA analysis type.\n\ncompute_spotweld_thickness (bool, optional) – Option to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\nwrite_thickness_file (bool, optional) – Option to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\noutput_controls_d3_part (bool, optional) – Option to create D3Part card in output controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityParams.html#faceandedgeconnectivityparams","title":"FaceAndEdgeConnectivityParams","text":"FaceAndEdgeConnectivityParams\n\n\n\nclass ansys.meshing.prime.autogen.meshinfostructs.FaceAndEdgeConnectivityParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, reorder_face_zonelets_mid_nodes: bool = None, reorder_edge_zonelets_mid_nodes: bool = None, json_data: dict = None, **kwargs)\n\nParameters to get face and edge connectivity information.\n\nParameters\n\nmodel (Model) – Model to create a FaceAndEdgeConnectivityParams object with default parameters.\n\nreorder_face_zonelets_mid_nodes (bool, optional) – Option to reorder mid nodes for quadratic faces.\n\nreorder_edge_zonelets_mid_nodes (bool, optional) – Option to reorder mid nodes for quadratic edges.\n\njson_data (dict, optional) – JSON dictionary to create a FaceAndEdgeConnectivityParams object with provided parameters.\n\nExamples\n\n>>> face_and_edge_connectivity_params = prime.FaceAndEdgeConnectivityParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityParams.html#overview","title":"FaceAndEdgeConnectivityParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nreorder_edge_zonelets_mid_nodes\n\nOption to reorder mid nodes for quadratic edges.\n\nreorder_face_zonelets_mid_nodes\n\nOption to reorder mid nodes for quadratic faces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FaceAndEdgeConnectivityParams object.\n\nset_default\n\nSet the default values of the FaceAndEdgeConnectivityParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityParams.html#import-detail","title":"FaceAndEdgeConnectivityParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityParams.html#property-detail","title":"FaceAndEdgeConnectivityParams > Property detail","text":"Property detail\n\n\n\nproperty FaceAndEdgeConnectivityParams.reorder_edge_zonelets_mid_nodes: bool\n\nOption to reorder mid nodes for quadratic edges.\n\n\n\nproperty FaceAndEdgeConnectivityParams.reorder_face_zonelets_mid_nodes: bool\n\nOption to reorder mid nodes for quadratic faces."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/meshinfostructs/FaceAndEdgeConnectivityParams.html#method-detail","title":"FaceAndEdgeConnectivityParams > Method detail","text":"Method detail\n\n\n\nFaceAndEdgeConnectivityParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFaceAndEdgeConnectivityParams.__str__() -> str\n\n\n\n\n\nstatic FaceAndEdgeConnectivityParams.print_default()\n\nPrint the default values of FaceAndEdgeConnectivityParams object.\n\nExamples\n\n>>> FaceAndEdgeConnectivityParams.print_default()\n\n\n\nstatic FaceAndEdgeConnectivityParams.set_default(reorder_face_zonelets_mid_nodes: bool = None, reorder_edge_zonelets_mid_nodes: bool = None)\n\nSet the default values of the FaceAndEdgeConnectivityParams object.\n\nParameters\n\nreorder_face_zonelets_mid_nodes (bool, optional) – Option to reorder mid nodes for quadratic faces.\n\nreorder_edge_zonelets_mid_nodes (bool, optional) – Option to reorder mid nodes for quadratic edges."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextraction/index.html#the-featureextractionpy-module","title":"The featureextraction.py module","text":"The featureextraction.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextraction/index.html#summary","title":"The featureextraction.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nFeatureExtraction\n\nProvide functions for all feature extraction operations like extracting edges zonlelets, tracing node paths.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextraction/index.html#description","title":"The featureextraction.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferResults.html#localsurferresults","title":"LocalSurferResults","text":"LocalSurferResults\n\n\n\nclass ansys.meshing.prime.LocalSurferResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the local surface mesh.\n\nParameters\n\nmodel (Model) – Model to create a LocalSurferResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.\n\njson_data (dict, optional) – JSON dictionary to create a LocalSurferResults object with provided parameters.\n\nExamples\n\n>>> local_surfer_results = prime.LocalSurferResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferResults.html#overview","title":"LocalSurferResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of LocalSurferResults object.\n\nset_default\n\nSet the default values of the LocalSurferResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferResults.html#import-detail","title":"LocalSurferResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferResults.html#property-detail","title":"LocalSurferResults > Property detail","text":"Property detail\n\n\n\nproperty LocalSurferResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty LocalSurferResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/LocalSurferResults.html#method-detail","title":"LocalSurferResults > Method detail","text":"Method detail\n\n\n\nLocalSurferResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nLocalSurferResults.__str__() -> str\n\n\n\n\n\nstatic LocalSurferResults.print_default()\n\nPrint the default values of LocalSurferResults object.\n\nExamples\n\n>>> LocalSurferResults.print_default()\n\n\n\nstatic LocalSurferResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the LocalSurferResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControl.html#periodiccontrol","title":"PeriodicControl","text":"PeriodicControl\n\n\n\nclass ansys.meshing.prime.PeriodicControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nPeriodic controls provide settings for the recovery of periodic surfaces.\n\nA periodic control is specified by the scope (source surfaces) and the transformation parameters: the center, axis and angle.\n\nParameters\n\nmodel (Model) – Server model to create PeriodicControl object.\n\nid (int) – Id of the PeriodicControl.\n\nobject_id (int) – Object id of the PeriodicControl.\n\nname (str) – Name of the PeriodicControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControl.html#overview","title":"PeriodicControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_params\n\nGet the parameters of the periodic control.\n\nget_scope\n\nGets the scope for the periodic control.\n\nget_summary\n\nGet the periodic control summary along with the evaluated scope for the provided parameters.\n\nset_params\n\nSet the periodic control parameters.\n\nset_scope\n\nSets the scope for periodic control to evaluate.\n\nset_suggested_name\n\nSets the unique name for the periodic control based on the suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of PeriodicControl.\n\nname\n\nGet the name of PeriodicControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControl.html#import-detail","title":"PeriodicControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControl.html#property-detail","title":"PeriodicControl > Property detail","text":"Property detail\n\n\n\nproperty PeriodicControl.id\n\nGet the id of PeriodicControl.\n\n\n\nproperty PeriodicControl.name\n\nGet the name of PeriodicControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControl.html#method-detail","title":"PeriodicControl > Method detail","text":"Method detail\n\n\n\nPeriodicControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControl.get_params() -> ansys.meshing.prime.params.primestructs.PeriodicControlParams\n\nGet the parameters of the periodic control.\n\nReturns\n\nReturn parameters of the periodic control.\n\nReturn type\n\nPeriodicControlParams\n\nExamples\n\n>>> params = periodic_control.get_params()\n\n\n\nPeriodicControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the scope for the periodic control.\n\nReturns\n\nReturns the scope of the periodic control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope_definition = periodic_control.get_scope()\n\n\n\nPeriodicControl.get_summary(params: ansys.meshing.prime.params.primestructs.PeriodicControlSummaryParams) -> ansys.meshing.prime.params.primestructs.PeriodicControlSummaryResult\n\nGet the periodic control summary along with the evaluated scope for the provided parameters.\n\nParameters\n\nparams (PeriodicControlSummaryParams) – Periodic control summary parameters.\n\nReturns\n\nReturn the PeriodicControlSummaryResult.\n\nReturn type\n\nPeriodicControlSummaryResult\n\nExamples\n\n>>> results = periodic_control.get_summary(prime.PeriodicControlSummaryParams(model=model))\n\n\n\nPeriodicControl.set_params(periodic_control_params: ansys.meshing.prime.params.primestructs.PeriodicControlParams) -> ansys.meshing.prime.params.primestructs.SetParamsResults\n\nSet the periodic control parameters.\n\nParameters\n\nperiodic_control_params (PeriodicControlParams) – Parameters to control periodic surface recovery.\n\nExamples\n\n>>> periodic_control.set_params(\n>>>                  PeriodicControlParams(model=model,\n>>>                     center=[0,0,0], axis=[0,1,0], angle=180))\n\n\n\nPeriodicControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the scope for periodic control to evaluate.\n\nPeriodic Control uses scope to evaluate entities for which periodic surface recovery must be carried out.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for periodic surface recovery.\n\nReturns\n\nReturns the SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> surface_scope = prime.ScopeDefinition(model=model,\n>>>                     entity_type=prime.ScopeEntity.FACEZONELETS,\n>>>                     evaluation_type=prime.ScopeEvaluationType.LABELS,\n>>>                     label_expression=\"periodic-1\")\n>>> periodic_control.set_scope(surface_scope)\n\n\n\nPeriodicControl.set_suggested_name(name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for the periodic control based on the suggested name.\n\nParameters\n\nname (str) – Suggested name for the periodic control.\n\nReturns\n\nReturns the name of the periodic control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> periodic_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/SurfaceScope.html#surfacescope","title":"SurfaceScope","text":"SurfaceScope\n\n\n\nclass ansys.meshing.prime.lucid.SurfaceScope(part_expression: str = '*', entity_expression: str = '*', scope_evaluation_type: ansys.meshing.prime.autogen.controlstructs.ScopeEvaluationType = ScopeEvaluationType.LABELS)\n\nSurfaceScope is one of the classes in Lucid API.\n\nThis class is meant for beginners to meshing. This class is used to define\na scope for operation on surfaces."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/SurfaceScope.html#overview","title":"SurfaceScope > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_face_zonelets\n\nGet the list of face zonelets for the given part in the scope.\n\nget_parts\n\nGet the list of part ids in the scope.\n\nget_scope_definition\n\nGet the scope definition of the scope.\n\nget_topo_faces\n\nGet the list of topofaces for the given part in the scope.\n\nSpecial methods\n\n\n\n\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/SurfaceScope.html#import-detail","title":"SurfaceScope > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/SurfaceScope.html#method-detail","title":"SurfaceScope > Method detail","text":"Method detail\n\n\n\nSurfaceScope.__str__() -> str\n\n\n\n\n\nSurfaceScope.get_face_zonelets(model: ansys.meshing.prime.core.model.Model, part_id: int) -> Iterable[int]\n\nGet the list of face zonelets for the given part in the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\npart_id (int) – Id of the part.\n\nReturns\n\nReturns the list of zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> face_zonelets = su.get_face_zonelets(model, 2)\n\n\n\nSurfaceScope.get_parts(model: ansys.meshing.prime.core.model.Model) -> Iterable[int]\n\nGet the list of part ids in the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\nReturns\n\nReturns the list of part ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> part_ids = su.get_parts()\n\n\n\nSurfaceScope.get_scope_definition(model: ansys.meshing.prime.core.model.Model) -> ansys.meshing.prime.autogen.controlstructs.ScopeDefinition\n\nGet the scope definition of the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\nReturns\n\nReturns the scope definition.\n\nReturn type\n\nScopeDefinition\n\n\n\nSurfaceScope.get_topo_faces(model: ansys.meshing.prime.core.model.Model, part_id: int) -> Iterable[int]\n\nGet the list of topofaces for the given part in the scope.\n\nParameters\n\nmodel (Model) – PyPrimeMesh model.\n\npart_id (int) – Id of the part.\n\nReturns\n\nReturns the list of zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Model, SurfaceScope\n>>> model = client.model\n>>> su = SurfaceScope(\"*\", \"*\", prime.ScopeEvaluationType.LABELS)\n>>> topo_faces = su.get_topo_faces(model, 2)"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_elbow_dsco.html#ansysmeshingprimeexamplesdownload_elbow_dsco","title":"ansys.meshing.prime.examples.download_elbow_dsco","text":"ansys.meshing.prime.examples.download_elbow_dsco\n\n\n\nansys.meshing.prime.examples.download_elbow_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the mixing elbow example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointParams.html#creatematerialpointparams","title":"CreateMaterialPointParams","text":"CreateMaterialPointParams\n\n\n\nclass ansys.meshing.prime.autogen.materialpointmanagerstructs.CreateMaterialPointParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, type: MaterialPointType = None, json_data: dict = None, **kwargs)\n\nDefines parameters to create material point.\n\nParameters\n\nmodel (Model) – Model to create a CreateMaterialPointParams object with default parameters.\n\ntype (MaterialPointType, optional) – Defines the type of material point.\n\njson_data (dict, optional) – JSON dictionary to create a CreateMaterialPointParams object with provided parameters.\n\nExamples\n\n>>> create_material_point_params = prime.CreateMaterialPointParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointParams.html#overview","title":"CreateMaterialPointParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ntype\n\nDefines the type of material point.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateMaterialPointParams object.\n\nset_default\n\nSet the default values of the CreateMaterialPointParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointParams.html#import-detail","title":"CreateMaterialPointParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointParams.html#property-detail","title":"CreateMaterialPointParams > Property detail","text":"Property detail\n\n\n\nproperty CreateMaterialPointParams.type: MaterialPointType\n\nDefines the type of material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointParams.html#method-detail","title":"CreateMaterialPointParams > Method detail","text":"Method detail\n\n\n\nCreateMaterialPointParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateMaterialPointParams.__str__() -> str\n\n\n\n\n\nstatic CreateMaterialPointParams.print_default()\n\nPrint the default values of CreateMaterialPointParams object.\n\nExamples\n\n>>> CreateMaterialPointParams.print_default()\n\n\n\nstatic CreateMaterialPointParams.set_default(type: MaterialPointType = None)\n\nSet the default values of the CreateMaterialPointParams object.\n\nParameters\n\ntype (MaterialPointType, optional) – Defines the type of material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseResults.html#collapseresults","title":"CollapseResults","text":"CollapseResults\n\n\n\nclass ansys.meshing.prime.autogen.collapsetoolstructs.CollapseResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_collapsed: int = None, n_splits: int = None, json_data: dict = None, **kwargs)\n\nResults associated with collapse face elements.\n\nParameters\n\nmodel (Model) – Model to create a CollapseResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nn_collapsed (int, optional) – Number of face elements collapsed.\n\nn_splits (int, optional) – Number of face elements split.\n\njson_data (dict, optional) – JSON dictionary to create a CollapseResults object with provided parameters.\n\nExamples\n\n>>> collapse_results = prime.CollapseResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseResults.html#overview","title":"CollapseResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nn_collapsed\n\nNumber of face elements collapsed.\n\nn_splits\n\nNumber of face elements split.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CollapseResults object.\n\nset_default\n\nSet the default values of the CollapseResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseResults.html#import-detail","title":"CollapseResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseResults.html#property-detail","title":"CollapseResults > Property detail","text":"Property detail\n\n\n\nproperty CollapseResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty CollapseResults.n_collapsed: int\n\nNumber of face elements collapsed.\n\n\n\nproperty CollapseResults.n_splits: int\n\nNumber of face elements split."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetoolstructs/CollapseResults.html#method-detail","title":"CollapseResults > Method detail","text":"Method detail\n\n\n\nCollapseResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCollapseResults.__str__() -> str\n\n\n\n\n\nstatic CollapseResults.print_default()\n\nPrint the default values of CollapseResults object.\n\nExamples\n\n>>> CollapseResults.print_default()\n\n\n\nstatic CollapseResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_collapsed: int = None, n_splits: int = None)\n\nSet the default values of the CollapseResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nn_collapsed (int, optional) – Number of face elements collapsed.\n\nn_splits (int, optional) – Number of face elements split."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineContinuityType.html#splinecontinuitytype","title":"SplineContinuityType","text":"SplineContinuityType\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.SplineContinuityType\n\nSpline Continuity types."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineContinuityType.html#overview","title":"SplineContinuityType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCUBICC0\n\nSpline use cubic C0 continuity.\n\nCUBICC1\n\nSpline use cubic C1 continuity.\n\nQUADRATICC0\n\nSpline use quadratic C0 continuity."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineContinuityType.html#import-detail","title":"SplineContinuityType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/SplineContinuityType.html#attribute-detail","title":"SplineContinuityType > Attribute detail","text":"Attribute detail\n\n\n\nSplineContinuityType.CUBICC0 = 0\n\nSpline use cubic C0 continuity.\n\n\n\nSplineContinuityType.CUBICC1 = 1\n\nSpline use cubic C1 continuity.\n\n\n\nSplineContinuityType.QUADRATICC0 = 2\n\nSpline use quadratic C0 continuity."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIgaKeywordFileParams.html#exportlsdynaigakeywordfileparams","title":"ExportLSDynaIgaKeywordFileParams","text":"ExportLSDynaIgaKeywordFileParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaIgaKeywordFileParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters for exporting LS-DYNA IGA keyword file.\n\nParameters\n\nmodel (Model) – Model to create a ExportLSDynaIgaKeywordFileParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ExportLSDynaIgaKeywordFileParams object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_iga_keyword_file_params = prime.ExportLSDynaIgaKeywordFileParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIgaKeywordFileParams.html#overview","title":"ExportLSDynaIgaKeywordFileParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportLSDynaIgaKeywordFileParams object.\n\nset_default\n\nSet the default values of the ExportLSDynaIgaKeywordFileParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIgaKeywordFileParams.html#import-detail","title":"ExportLSDynaIgaKeywordFileParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaIgaKeywordFileParams.html#method-detail","title":"ExportLSDynaIgaKeywordFileParams > Method detail","text":"Method detail\n\n\n\nExportLSDynaIgaKeywordFileParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportLSDynaIgaKeywordFileParams.__str__() -> str\n\n\n\n\n\nstatic ExportLSDynaIgaKeywordFileParams.print_default()\n\nPrint the default values of ExportLSDynaIgaKeywordFileParams object.\n\nExamples\n\n>>> ExportLSDynaIgaKeywordFileParams.print_default()\n\n\n\nstatic ExportLSDynaIgaKeywordFileParams.set_default()\n\nSet the default values of the ExportLSDynaIgaKeywordFileParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/AutoNodeMoveParams.html#autonodemoveparams","title":"AutoNodeMoveParams","text":"AutoNodeMoveParams\n\n\n\nclass ansys.meshing.prime.autogen.volumemeshtoolstructs.AutoNodeMoveParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure = None, target_quality: float = None, dihedral_angle: float = None, n_iterations_per_node: int = None, restrict_boundary_nodes_along_surface: bool = None, n_attempts: int = None, json_data: dict = None, **kwargs)\n\nParameters used to improve volume mesh by auto node move.\n\nParameters\n\nmodel (Model) – Model to create a AutoNodeMoveParams object with default parameters.\n\nquality_measure (CellQualityMeasure, optional) – Specify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\ntarget_quality (float, optional) – Specify target quality used for the mesh improvement based on specified quality measure.\n\ndihedral_angle (float, optional) – Dihedral angle used to mantain features of boundary face zonelets.\n\nn_iterations_per_node (int, optional) – Number of iterations per node to be moved.\n\nrestrict_boundary_nodes_along_surface (bool, optional) – Option to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\nn_attempts (int, optional) – Number of attempts to improve specified quality measure by node movement.\n\njson_data (dict, optional) – JSON dictionary to create a AutoNodeMoveParams object with provided parameters.\n\nExamples\n\n>>> auto_node_move_params = prime.AutoNodeMoveParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/AutoNodeMoveParams.html#overview","title":"AutoNodeMoveParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndihedral_angle\n\nDihedral angle used to mantain features of boundary face zonelets.\n\nn_attempts\n\nNumber of attempts to improve specified quality measure by node movement.\n\nn_iterations_per_node\n\nNumber of iterations per node to be moved.\n\nquality_measure\n\nSpecify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\nrestrict_boundary_nodes_along_surface\n\nOption to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\ntarget_quality\n\nSpecify target quality used for the mesh improvement based on specified quality measure.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AutoNodeMoveParams object.\n\nset_default\n\nSet the default values of the AutoNodeMoveParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/AutoNodeMoveParams.html#import-detail","title":"AutoNodeMoveParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/AutoNodeMoveParams.html#property-detail","title":"AutoNodeMoveParams > Property detail","text":"Property detail\n\n\n\nproperty AutoNodeMoveParams.dihedral_angle: float\n\nDihedral angle used to mantain features of boundary face zonelets.\n\n\n\nproperty AutoNodeMoveParams.n_attempts: int\n\nNumber of attempts to improve specified quality measure by node movement.\n\n\n\nproperty AutoNodeMoveParams.n_iterations_per_node: int\n\nNumber of iterations per node to be moved.\n\n\n\nproperty AutoNodeMoveParams.quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure\n\nSpecify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\n\n\nproperty AutoNodeMoveParams.restrict_boundary_nodes_along_surface: bool\n\nOption to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\n\n\nproperty AutoNodeMoveParams.target_quality: float\n\nSpecify target quality used for the mesh improvement based on specified quality measure."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumemeshtoolstructs/AutoNodeMoveParams.html#method-detail","title":"AutoNodeMoveParams > Method detail","text":"Method detail\n\n\n\nAutoNodeMoveParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAutoNodeMoveParams.__str__() -> str\n\n\n\n\n\nstatic AutoNodeMoveParams.print_default()\n\nPrint the default values of AutoNodeMoveParams object.\n\nExamples\n\n>>> AutoNodeMoveParams.print_default()\n\n\n\nstatic AutoNodeMoveParams.set_default(quality_measure: ansys.meshing.prime.params.primestructs.CellQualityMeasure = None, target_quality: float = None, dihedral_angle: float = None, n_iterations_per_node: int = None, restrict_boundary_nodes_along_surface: bool = None, n_attempts: int = None)\n\nSet the default values of the AutoNodeMoveParams object.\n\nParameters\n\nquality_measure (CellQualityMeasure, optional) – Specify cell quality measure to be used for volume mesh improvement. The default value for cell quality measure is skewness.\n\ntarget_quality (float, optional) – Specify target quality used for the mesh improvement based on specified quality measure.\n\ndihedral_angle (float, optional) – Dihedral angle used to mantain features of boundary face zonelets.\n\nn_iterations_per_node (int, optional) – Number of iterations per node to be moved.\n\nrestrict_boundary_nodes_along_surface (bool, optional) – Option to restrict the movement of the boundary node to the plane containing the boundary faces sharing the boundary node.\n\nn_attempts (int, optional) – Number of attempts to improve specified quality measure by node movement."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualityResult.html#surfacequalityresult","title":"SurfaceQualityResult","text":"SurfaceQualityResult\n\n\n\nclass ansys.meshing.prime.SurfaceQualityResult(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, measure_name: str = None, quality_limit: float = None, n_found: int = None, max_quality: float = None, min_quality: float = None, json_data: dict = None, **kwargs)\n\nResult of surface quality.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceQualityResult object with default parameters.\n\nface_quality_measure (FaceQualityMeasure, optional) – Type of the face quality measure.\n\nmeasure_name (str, optional) – Name of the face quality measure.\n\nquality_limit (float, optional) – Target quality limit used to find failures.\n\nn_found (int, optional) – Number of failed faces.\n\nmax_quality (float, optional) – Maximum value of quality measure.\n\nmin_quality (float, optional) – Minimum value of quality measure.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceQualityResult object with provided parameters.\n\nExamples\n\n>>> surface_quality_result = prime.SurfaceQualityResult(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualityResult.html#overview","title":"SurfaceQualityResult > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_quality_measure\n\nType of the face quality measure.\n\nmax_quality\n\nMaximum value of quality measure.\n\nmeasure_name\n\nName of the face quality measure.\n\nmin_quality\n\nMinimum value of quality measure.\n\nn_found\n\nNumber of failed faces.\n\nquality_limit\n\nTarget quality limit used to find failures.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceQualityResult object.\n\nset_default\n\nSet the default values of the SurfaceQualityResult object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualityResult.html#import-detail","title":"SurfaceQualityResult > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualityResult.html#property-detail","title":"SurfaceQualityResult > Property detail","text":"Property detail\n\n\n\nproperty SurfaceQualityResult.face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure\n\nType of the face quality measure.\n\n\n\nproperty SurfaceQualityResult.max_quality: float\n\nMaximum value of quality measure.\n\n\n\nproperty SurfaceQualityResult.measure_name: str\n\nName of the face quality measure.\n\n\n\nproperty SurfaceQualityResult.min_quality: float\n\nMinimum value of quality measure.\n\n\n\nproperty SurfaceQualityResult.n_found: int\n\nNumber of failed faces.\n\n\n\nproperty SurfaceQualityResult.quality_limit: float\n\nTarget quality limit used to find failures."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceQualityResult.html#method-detail","title":"SurfaceQualityResult > Method detail","text":"Method detail\n\n\n\nSurfaceQualityResult.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceQualityResult.__str__() -> str\n\n\n\n\n\nstatic SurfaceQualityResult.print_default()\n\nPrint the default values of SurfaceQualityResult object.\n\nExamples\n\n>>> SurfaceQualityResult.print_default()\n\n\n\nstatic SurfaceQualityResult.set_default(face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, measure_name: str = None, quality_limit: float = None, n_found: int = None, max_quality: float = None, min_quality: float = None)\n\nSet the default values of the SurfaceQualityResult object.\n\nParameters\n\nface_quality_measure (FaceQualityMeasure, optional) – Type of the face quality measure.\n\nmeasure_name (str, optional) – Name of the face quality measure.\n\nquality_limit (float, optional) – Target quality limit used to find failures.\n\nn_found (int, optional) – Number of failed faces.\n\nmax_quality (float, optional) – Maximum value of quality measure.\n\nmin_quality (float, optional) – Minimum value of quality measure."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_test_examples.html#ansysmeshingprimeexamplesdownload_test_examples","title":"ansys.meshing.prime.examples.download_test_examples","text":"ansys.meshing.prime.examples.download_test_examples\n\n\n\nansys.meshing.prime.examples.download_test_examples(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the example files necessary for unit testing.\n\nParameters\n\ndestination (str, optional) – Path to download the test example files to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to always download the test example files. The default is\nFalse, in which case if the test example files are cached, they\nare reused.\n\nReturns\n\nLocal paths to the downloaded test example files.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     examples = prime_examples.unit_test_examples.download_test_examples()"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesParams.html#extractvolumesparams","title":"ExtractVolumesParams","text":"ExtractVolumesParams\n\n\n\nclass ansys.meshing.prime.ExtractVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, create_zone: bool = None, suggested_zone_name: str = None, json_data: dict = None, **kwargs)\n\nParameters to extract flow volumes.\n\nParameters\n\nmodel (Model) – Model to create a ExtractVolumesParams object with default parameters.\n\ncreate_zone (bool, optional) – Option to create zone for flow volumes extracted.\n\nsuggested_zone_name (str, optional) – Name suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractVolumesParams object with provided parameters.\n\nExamples\n\n>>> extract_volumes_params = prime.ExtractVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesParams.html#overview","title":"ExtractVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreate_zone\n\nOption to create zone for flow volumes extracted.\n\nsuggested_zone_name\n\nName suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractVolumesParams object.\n\nset_default\n\nSet the default values of the ExtractVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesParams.html#import-detail","title":"ExtractVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesParams.html#property-detail","title":"ExtractVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty ExtractVolumesParams.create_zone: bool\n\nOption to create zone for flow volumes extracted.\n\n\n\nproperty ExtractVolumesParams.suggested_zone_name: str\n\nName suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractVolumesParams.html#method-detail","title":"ExtractVolumesParams > Method detail","text":"Method detail\n\n\n\nExtractVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractVolumesParams.__str__() -> str\n\n\n\n\n\nstatic ExtractVolumesParams.print_default()\n\nPrint the default values of ExtractVolumesParams object.\n\nExamples\n\n>>> ExtractVolumesParams.print_default()\n\n\n\nstatic ExtractVolumesParams.set_default(create_zone: bool = None, suggested_zone_name: str = None)\n\nSet the default values of the ExtractVolumesParams object.\n\nParameters\n\ncreate_zone (bool, optional) – Option to create zone for flow volumes extracted.\n\nsuggested_zone_name (str, optional) – Name suggested for the created zone. If there is a volume zone existing with suggested name, then extracted flow volumes will be added to it."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSolidSplineCutMode.html#trimmedsolidsplinecutmode","title":"TrimmedSolidSplineCutMode","text":"TrimmedSolidSplineCutMode\n\n\n\nclass ansys.meshing.prime.autogen.trimmedsplinestructs.TrimmedSolidSplineCutMode\n\nTypes of Cut modes used to generate Cartesian grid representing subdomains of trimmed solid spline."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSolidSplineCutMode.html#overview","title":"TrimmedSolidSplineCutMode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEXACT\n\nThis mode guarantees to represent the exact input mesh for each subdomain without any defeaturing.\n\nHYBRID\n\nThis is faster mode and may defeature the input mesh to represent each subdomain."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSolidSplineCutMode.html#import-detail","title":"TrimmedSolidSplineCutMode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSolidSplineCutMode.html#attribute-detail","title":"TrimmedSolidSplineCutMode > Attribute detail","text":"Attribute detail\n\n\n\nTrimmedSolidSplineCutMode.EXACT = 1\n\nThis mode guarantees to represent the exact input mesh for each subdomain without any defeaturing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nTrimmedSolidSplineCutMode.HYBRID = 0\n\nThis is faster mode and may defeature the input mesh to represent each subdomain.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPairTargetType.html#matchpairtargettype","title":"MatchPairTargetType","text":"MatchPairTargetType\n\n\n\nclass ansys.meshing.prime.MatchPairTargetType\n\nMatch morph target type."},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPairTargetType.html#overview","title":"MatchPairTargetType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nFACEZONELET\n\nOption to specify face zonelet as target.\n\nTOPOFACE\n\nOption to specify topoface as target."},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPairTargetType.html#import-detail","title":"MatchPairTargetType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MatchPairTargetType.html#attribute-detail","title":"MatchPairTargetType > Attribute detail","text":"Attribute detail\n\n\n\nMatchPairTargetType.FACEZONELET = 1\n\nOption to specify face zonelet as target.\n\n\n\nMatchPairTargetType.TOPOFACE = 2\n\nOption to specify topoface as target."},{"objectID":"Home","href":"api/ansys/meshing/prime/Wrapper.html#wrapper","title":"Wrapper","text":"Wrapper\n\n\n\nclass ansys.meshing.prime.Wrapper(model: ansys.meshing.prime.core.model.Model)\n\nProvides operations for generating a surface mesh using wrapper technology.\n\nParameters\n\nmodel (Model) – Server model to create Wrapper object."},{"objectID":"Home","href":"api/ansys/meshing/prime/Wrapper.html#overview","title":"Wrapper > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nclose_gaps\n\nClose gaps.\n\nconnect\n\nPerform a label-controlled connection.\n\nimprove_quality\n\nImprove the surface quality and resolve connectivity issues like intersections, multi, free, spikes, point contacts and so on.\n\npatch_flow_regions\n\nPatch flow regions.\n\nwrap\n\nPerform wrapping with specified controls and given parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Wrapper.\n\n__exit__\n\nExit context for Wrapper.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/Wrapper.html#import-detail","title":"Wrapper > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/Wrapper.html#method-detail","title":"Wrapper > Method detail","text":"Method detail\n\n\n\nWrapper.__enter__()\n\nEnter context for Wrapper.\n\n\n\nWrapper.__exit__(type, value, traceback)\n\nExit context for Wrapper.\n\n\n\nWrapper.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapper.close_gaps(scope: ansys.meshing.prime.autogen.controlstructs.ScopeDefinition, params: ansys.meshing.prime.autogen.wrapperstructs.WrapperCloseGapsParams) -> ansys.meshing.prime.autogen.wrapperstructs.WrapperCloseGapsResult\n\nClose gaps.\n\nClosing gaps creates patching surfaces within the face zonelets specified\nby scope using gap size.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition of the face zonelets.\n\nparams (WrapperCloseGapsParams) – Wrapper providing close gap parameters.\n\nReturns\n\nResults from the wrapper for closing gaps.\n\nReturn type\n\nWrapperCloseGapsResult\n\nExamples\n\n>>> result = wrapper.close_gaps(scope, params)\n\n\n\nWrapper.connect(wrapper_part: ansys.meshing.prime.core.part.Part, target_labels: List[str], source_parts: List[ansys.meshing.prime.core.part.Part], source_labels: List[str])\n\nPerform a label-controlled connection.\n\nThis method performs a label-controlled connection of wrapper part face zonelets to\nface zonelets of source parts.\n\nParameters\n\nwrapper_part (Part) – Wrapper part.\n\ntarget_labels (List[str]) – List of target zonelet labels to connect.\n\nsource_parts (List[Part]) – List of source parts to connect with.\n\nsource_labels (List[Part]) – List of source zonelet labels to connect.\n\nExamples\n\n>>> wrapper.connect(wrapper_part, target_labels, source_parts, source_labels)\n\n\n\nWrapper.improve_quality(part_id: int, params: ansys.meshing.prime.params.primestructs.WrapperImproveQualityParams) -> ansys.meshing.prime.params.primestructs.WrapperImproveResult\n\nImprove the surface quality and resolve connectivity issues like intersections, multi, free, spikes, point contacts and so on.\n\nParameters\n\npart_id (int) – Id of the part.\n\nparams (WrapperImproveQualityParams) – Wrapper improve quality parameters.\n\nReturns\n\nReturn the Wrapper improve result.\n\nReturn type\n\nWrapperImproveResult\n\nExamples\n\n>>> result = wrapper.improve_quality(part_id, params)\n\n\n\nWrapper.patch_flow_regions(live_material_point: str, params: ansys.meshing.prime.autogen.wrapperstructs.WrapperPatchFlowRegionsParams) -> ansys.meshing.prime.autogen.wrapperstructs.WrapperPatchFlowRegionsResult\n\nPatch flow regions.\n\nPatch flow regions create patching surfaces for regions identified\nby dead regions from wrapper patch holes parameters.\n\nParameters\n\nlive_material_point (str) – Name of live material point.\n\nparams (WrapperPatchFlowRegionsParams) – Parameters to define patch flow regions operation.\n\nReturns\n\nReturns the WrapperPatchFlowRegionsResult.\n\nReturn type\n\nWrapperPatchFlowRegionsResult\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = wrapper.PatchFlowRegions(live_material_point, params)\n\n\n\nWrapper.wrap(wrapper_control_id: int, params: ansys.meshing.prime.autogen.wrapperstructs.WrapParams) -> ansys.meshing.prime.autogen.wrapperstructs.WrapResult\n\nPerform wrapping with specified controls and given parameters.\n\nThis method performs wrapping with specified controls in the wrapper control\nand with given parameters.\n\nParameters\n\nwrapper_control_id (int) – ID of the wrapper control.\n\nparams (WrapParams) – Wrap parameters.\n\nReturns\n\nWrap results.\n\nReturn type\n\nWrapResult\n\nExamples\n\n>>> results = wrapper.wrap(wrapper_control_id, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/hextospline/HexToSpline.html#hextospline","title":"HexToSpline","text":"HexToSpline\n\n\n\nclass ansys.meshing.prime.autogen.hextospline.HexToSpline(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nConverts all-hex mesh to spline.\n\nParameters\n\nmodel (Model) – Server model to create HexToSpline object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/hextospline/HexToSpline.html#overview","title":"HexToSpline > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nconvert_hex_to_spline\n\nConverts fully hex mesh with topology to spline.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for HexToSpline.\n\n__exit__\n\nExit context for HexToSpline.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/hextospline/HexToSpline.html#import-detail","title":"HexToSpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/hextospline/HexToSpline.html#method-detail","title":"HexToSpline > Method detail","text":"Method detail\n\n\n\nHexToSpline.__enter__()\n\nEnter context for HexToSpline.\n\n\n\nHexToSpline.__exit__(type, value, traceback)\n\nExit context for HexToSpline.\n\n\n\nHexToSpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nHexToSpline.convert_hex_to_spline(input_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition, hex_to_spline_params: ansys.meshing.prime.params.primestructs.HexToSplineParams) -> ansys.meshing.prime.params.primestructs.IGAResults\n\nConverts fully hex mesh with topology to spline.\n\nParameters\n\ninput_scope (ScopeDefinition) – Scope definition for input hex mesh.\n\nhex_to_spline_params (HexToSplineParams) – Parameters to convert hex to spline.\n\nReturns\n\nReturns the IGAResults structure.\n\nReturn type\n\nIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = hexToSpline.ConvertHexToSpline(input_scope, hex_to_spline_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/Surfer.html#surfer","title":"Surfer","text":"Surfer\n\n\n\nclass ansys.meshing.prime.Surfer(model: ansys.meshing.prime.core.model.Model)\n\nGenerates surface mesh.\n\nPerforms surface meshing using various surface meshing algorithms on topofaces or face zonelets.\nFor example, constant size or volumetric size surface meshing.\n\nParameters\n\nmodel (Model) – Server model to create Surfer object."},{"objectID":"Home","href":"api/ansys/meshing/prime/Surfer.html#overview","title":"Surfer > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_shell_bl_using_controls\n\nCreate ShellBL using data stored in controls.\n\ninitialize_surfer_params_for_wrapper\n\nInitialize surfer parameters to mesh surfaces generated by the wrapper.\n\nmesh_topo_faces\n\nPerform meshing on TopoFaces with given parameters.\n\nremesh_face_zonelets\n\nPerform meshing on face zonelets with given parameters.\n\nremesh_face_zonelets_locally\n\nRemesh face zonelets locally at the registered faces with given parameters.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nRun initializing context manager.\n\n__exit__\n\nRun when closing the context manager.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/Surfer.html#import-detail","title":"Surfer > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/Surfer.html#attribute-detail","title":"Surfer > Attribute detail","text":"Attribute detail\n\n\n\nSurfer.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/Surfer.html#method-detail","title":"Surfer > Method detail","text":"Method detail\n\n\n\nSurfer.__enter__()\n\nRun initializing context manager.\n\n\n\nSurfer.__exit__(type, value, traceback)\n\nRun when closing the context manager.\n\n\n\nSurfer.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfer.create_shell_bl_using_controls(part_id: int, shell_bl_control_ids: Iterable[int], shell_bl_params: ansys.meshing.prime.autogen.surferstructs.ShellBLParams) -> ansys.meshing.prime.autogen.surferstructs.CreateShellBLResults\n\nCreate ShellBL using data stored in controls.\n\nParameters\n\npart_id (int) – Id of the part.\n\nshell_bl_control_ids (Iterable[int]) – Ids of ShellBL control.\n\nshell_bl_params (ShellBLParams) – Parameters related to ShellBL.\n\nReturns\n\nReturns the CreateShellBLResults.\n\nReturn type\n\nCreateShellBLResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = surfer.create_shell_bl_using_controls(part_id,\n                                                    shell_bl_control_ids,\n                                                    shell_bl_params)\n\n\n\nSurfer.initialize_surfer_params_for_wrapper() -> ansys.meshing.prime.autogen.surferstructs.SurferParams\n\nInitialize surfer parameters to mesh surfaces generated by the wrapper.\n\nReturns\n\nSurfer parameters initialized for wrapper inputs.\n\nReturn type\n\nSurferParams\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = surfer.initialize_surfer_params_for_wrapper()\n\n\n\nSurfer.mesh_topo_faces(part_id: int, topo_faces: Iterable[int], params: ansys.meshing.prime.autogen.surferstructs.SurferParams) -> ansys.meshing.prime.autogen.surferstructs.SurferResults\n\nPerform meshing on TopoFaces with given parameters.\n\nParameters\n\npart_id (int) – ID of part.\n\ntopo_faces (Iterable[int]) – IDs of the TopoFaces.\n\nparams (SurferParams) – Surfer parameters.\n\nReturns\n\nResults from performing meshing on the TopoFaces.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = prime.SurferParams(model)\n>>> results = surfer.mesh_topo_faces(part_id, topo_faces, surfer_params)\n\n\n\nSurfer.remesh_face_zonelets(part_id: int, face_zonelets: Iterable[int], edge_zonelets: Iterable[int], params: ansys.meshing.prime.autogen.surferstructs.SurferParams) -> ansys.meshing.prime.autogen.surferstructs.SurferResults\n\nPerform meshing on face zonelets with given parameters.\n\nParameters\n\npart_id (int) – ID of part.\n\nface_zonelets (Iterable[int]) – IDs of the face zonelets.\n\nedge_zonelets (Iterable[int]) – IDs of the edge zonelets.\n\nparams (SurferParams) – Surfer parameters.\n\nReturns\n\nResults from meshing the face zonelets.\n\nReturn type\n\nSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> surfer_params = prime.SurferParams(model)\n>>> results = surfer.remesh_face_zonelets(part_id,\n                face_zonelets, edge_zonelets, surfer_params)\n\n\n\nSurfer.remesh_face_zonelets_locally(part_id: int, face_zonelets: Iterable[int], register_id: int, local_surfer_params: ansys.meshing.prime.autogen.surferstructs.LocalSurferParams) -> ansys.meshing.prime.autogen.surferstructs.LocalSurferResults\n\nRemesh face zonelets locally at the registered faces with given parameters.\n\nParameters\n\npart_id (int) – ID of part.\n\nface_zonelets (Iterable[int]) – IDs of the face zonelets.\n\nregister_id (int) – Register ID of the target faces.\n\nlocal_surfer_params (LocalSurferParams) – Local surfer parameters.\n\nReturns\n\nResults from remeshing the face zonelets.\n\nReturn type\n\nLocalSurferResults\n\nExamples\n\n>>> surfer = prime.Surfer(model)\n>>> local_surfer_params = prime.LocalSurferParams(model)\n>>> results = surfer.remesh_face_zonelets_locally(part_id,\n                face_zonelets, register_id, local_surfer_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSpline.html#quadtospline","title":"QuadToSpline","text":"QuadToSpline\n\n\n\nclass ansys.meshing.prime.QuadToSpline(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nConverts all-quad mesh to spline.\n\nParameters\n\nmodel (Model) – Server model to create QuadToSpline object."},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSpline.html#overview","title":"QuadToSpline > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nconvert_quad_to_spline\n\nConverts fully quad mesh with topology to spline with the given conversion parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for QuadToSpline.\n\n__exit__\n\nExit context for QuadToSpline.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSpline.html#import-detail","title":"QuadToSpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/QuadToSpline.html#method-detail","title":"QuadToSpline > Method detail","text":"Method detail\n\n\n\nQuadToSpline.__enter__()\n\nEnter context for QuadToSpline.\n\n\n\nQuadToSpline.__exit__(type, value, traceback)\n\nExit context for QuadToSpline.\n\n\n\nQuadToSpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nQuadToSpline.convert_quad_to_spline(input_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition, quad_to_spline_params: ansys.meshing.prime.params.primestructs.QuadToSplineParams) -> ansys.meshing.prime.params.primestructs.IGAResults\n\nConverts fully quad mesh with topology to spline with the given conversion parameters.\n\nParameters\n\ninput_scope (ScopeDefinition) – Scope definition for input quad mesh.\n\nquad_to_spline_params (QuadToSplineParams) – Parameters to convert quad to spline.\n\nReturns\n\nReturns the IGAResults structure.\n\nReturn type\n\nIGAResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = quadToSpline.convert_quad_to_spline(input_scope, quad_to_spline_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatCircularFacesParams.html#detectandtreatcircularfacesparams","title":"DetectAndTreatCircularFacesParams","text":"DetectAndTreatCircularFacesParams\n\n\n\nclass ansys.meshing.prime.DetectAndTreatCircularFacesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, merge_edge_allow_self_close: bool = None, merge_face_normals_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters for detect and treat circular faces operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectAndTreatCircularFacesParams object with default parameters.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.This is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectAndTreatCircularFacesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_circular_faces_params = prime.DetectAndTreatCircularFacesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatCircularFacesParams.html#overview","title":"DetectAndTreatCircularFacesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_mesh_constant_size\n\nConstant size used for edge meshing.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmerge_face_normals_angle\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nsurface_mesh_constant_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectAndTreatCircularFacesParams object.\n\nset_default\n\nSet the default values of the DetectAndTreatCircularFacesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatCircularFacesParams.html#import-detail","title":"DetectAndTreatCircularFacesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatCircularFacesParams.html#property-detail","title":"DetectAndTreatCircularFacesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectAndTreatCircularFacesParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatCircularFacesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatCircularFacesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatCircularFacesParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatCircularFacesParams.html#method-detail","title":"DetectAndTreatCircularFacesParams > Method detail","text":"Method detail\n\n\n\nDetectAndTreatCircularFacesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectAndTreatCircularFacesParams.__str__() -> str\n\n\n\n\n\nstatic DetectAndTreatCircularFacesParams.print_default()\n\nPrint the default values of DetectAndTreatCircularFacesParams object.\n\nExamples\n\n>>> DetectAndTreatCircularFacesParams.print_default()\n\n\n\nstatic DetectAndTreatCircularFacesParams.set_default(edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, merge_edge_allow_self_close: bool = None, merge_face_normals_angle: float = None)\n\nSet the default values of the DetectAndTreatCircularFacesParams object.\n\nParameters\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_toy_car_fmd.html#ansysmeshingprimeexamplesdownload_toy_car_fmd","title":"ansys.meshing.prime.examples.download_toy_car_fmd","text":"ansys.meshing.prime.examples.download_toy_car_fmd\n\n\n\nansys.meshing.prime.examples.download_toy_car_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the toy car example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddLabelResults.html#addlabelresults","title":"AddLabelResults","text":"AddLabelResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.AddLabelResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the add label operation.\n\nParameters\n\nmodel (Model) – Model to create a AddLabelResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the add label operation.\n\njson_data (dict, optional) – JSON dictionary to create a AddLabelResults object with provided parameters.\n\nExamples\n\n>>> add_label_results = prime.AddLabelResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddLabelResults.html#overview","title":"AddLabelResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the add label operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of AddLabelResults object.\n\nset_default\n\nSet the default values of the AddLabelResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddLabelResults.html#import-detail","title":"AddLabelResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddLabelResults.html#property-detail","title":"AddLabelResults > Property detail","text":"Property detail\n\n\n\nproperty AddLabelResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the add label operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/AddLabelResults.html#method-detail","title":"AddLabelResults > Method detail","text":"Method detail\n\n\n\nAddLabelResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nAddLabelResults.__str__() -> str\n\n\n\n\n\nstatic AddLabelResults.print_default()\n\nPrint the default values of AddLabelResults object.\n\nExamples\n\n>>> AddLabelResults.print_default()\n\n\n\nstatic AddLabelResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the AddLabelResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the add label operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaKeywordFileParams.html#exportlsdynakeywordfileparams","title":"ExportLSDynaKeywordFileParams","text":"ExportLSDynaKeywordFileParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportLSDynaKeywordFileParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, material_properties: str = None, database_keywords: str = None, output_format: LSDynaFileFormatType = None, analysis_type: LSDynaAnalysisType = None, compute_spotweld_thickness: bool = None, write_thickness_file: bool = None, output_controls_d3_part: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control LS-DYNA keyword file export settings.\n\nParameters\n\nmodel (Model) – Model to create a ExportLSDynaKeywordFileParams object with default parameters.\n\nmaterial_properties (str, optional) – Materials in LS-DYNA format to be added to the file.This is a beta parameter. The behavior and name may change in the future.\n\ndatabase_keywords (str, optional) – Database keywords in LS-DYNA format to be added to the file.This is a beta parameter. The behavior and name may change in the future.\n\noutput_format (LSDynaFileFormatType, optional) – Output file format used to write LS-DYNA file.This is a beta parameter. The behavior and name may change in the future.\n\nanalysis_type (LSDynaAnalysisType, optional) – Option to specify LS-DYNA analysis type.This is a beta parameter. The behavior and name may change in the future.\n\ncompute_spotweld_thickness (bool, optional) – Option to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_thickness_file (bool, optional) – Option to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.This is a beta parameter. The behavior and name may change in the future.\n\noutput_controls_d3_part (bool, optional) – Option to create D3Part card in output controls.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportLSDynaKeywordFileParams object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_keyword_file_params = prime.ExportLSDynaKeywordFileParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaKeywordFileParams.html#overview","title":"ExportLSDynaKeywordFileParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nanalysis_type\n\nOption to specify LS-DYNA analysis type.\n\ncompute_spotweld_thickness\n\nOption to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\ndatabase_keywords\n\nDatabase keywords in LS-DYNA format to be added to the file.\n\nmaterial_properties\n\nMaterials in LS-DYNA format to be added to the file.\n\noutput_controls_d3_part\n\nOption to create D3Part card in output controls.\n\noutput_format\n\nOutput file format used to write LS-DYNA file.\n\nwrite_thickness_file\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportLSDynaKeywordFileParams object.\n\nset_default\n\nSet the default values of the ExportLSDynaKeywordFileParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaKeywordFileParams.html#import-detail","title":"ExportLSDynaKeywordFileParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaKeywordFileParams.html#property-detail","title":"ExportLSDynaKeywordFileParams > Property detail","text":"Property detail\n\n\n\nproperty ExportLSDynaKeywordFileParams.analysis_type: LSDynaAnalysisType\n\nOption to specify LS-DYNA analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.compute_spotweld_thickness: bool\n\nOption to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.database_keywords: str\n\nDatabase keywords in LS-DYNA format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.material_properties: str\n\nMaterials in LS-DYNA format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.output_controls_d3_part: bool\n\nOption to create D3Part card in output controls.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.output_format: LSDynaFileFormatType\n\nOutput file format used to write LS-DYNA file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportLSDynaKeywordFileParams.write_thickness_file: bool\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportLSDynaKeywordFileParams.html#method-detail","title":"ExportLSDynaKeywordFileParams > Method detail","text":"Method detail\n\n\n\nExportLSDynaKeywordFileParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportLSDynaKeywordFileParams.__str__() -> str\n\n\n\n\n\nstatic ExportLSDynaKeywordFileParams.print_default()\n\nPrint the default values of ExportLSDynaKeywordFileParams object.\n\nExamples\n\n>>> ExportLSDynaKeywordFileParams.print_default()\n\n\n\nstatic ExportLSDynaKeywordFileParams.set_default(material_properties: str = None, database_keywords: str = None, output_format: LSDynaFileFormatType = None, analysis_type: LSDynaAnalysisType = None, compute_spotweld_thickness: bool = None, write_thickness_file: bool = None, output_controls_d3_part: bool = None)\n\nSet the default values of the ExportLSDynaKeywordFileParams object.\n\nParameters\n\nmaterial_properties (str, optional) – Materials in LS-DYNA format to be added to the file.\n\ndatabase_keywords (str, optional) – Database keywords in LS-DYNA format to be added to the file.\n\noutput_format (LSDynaFileFormatType, optional) – Output file format used to write LS-DYNA file.\n\nanalysis_type (LSDynaAnalysisType, optional) – Option to specify LS-DYNA analysis type.\n\ncompute_spotweld_thickness (bool, optional) – Option to compute spot weld thickness using shell thickness when set to true. Else, use search radius as thickness.\n\nwrite_thickness_file (bool, optional) – Option to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].k.thick.txt containing thickness information.\n\noutput_controls_d3_part (bool, optional) – Option to create D3Part card in output controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractedFeatureIds.html#extractedfeatureids","title":"ExtractedFeatureIds","text":"ExtractedFeatureIds\n\n\n\nclass ansys.meshing.prime.ExtractedFeatureIds(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, part_id: int = None, new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nContains ids of the features extracted.\n\nParameters\n\nmodel (Model) – Model to create a ExtractedFeatureIds object with default parameters.\n\npart_id (int, optional) – Id of the part from which edge zonelets are extracted.\n\nnew_edge_zonelets (Iterable[int], optional) – Ids of new edge zonelets extracted.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractedFeatureIds object with provided parameters.\n\nExamples\n\n>>> extracted_feature_ids = prime.ExtractedFeatureIds(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractedFeatureIds.html#overview","title":"ExtractedFeatureIds > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nnew_edge_zonelets\n\nIds of new edge zonelets extracted.\n\npart_id\n\nId of the part from which edge zonelets are extracted.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractedFeatureIds object.\n\nset_default\n\nSet the default values of the ExtractedFeatureIds object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractedFeatureIds.html#import-detail","title":"ExtractedFeatureIds > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractedFeatureIds.html#property-detail","title":"ExtractedFeatureIds > Property detail","text":"Property detail\n\n\n\nproperty ExtractedFeatureIds.new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new edge zonelets extracted.\n\n\n\nproperty ExtractedFeatureIds.part_id: int\n\nId of the part from which edge zonelets are extracted."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractedFeatureIds.html#method-detail","title":"ExtractedFeatureIds > Method detail","text":"Method detail\n\n\n\nExtractedFeatureIds.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractedFeatureIds.__str__() -> str\n\n\n\n\n\nstatic ExtractedFeatureIds.print_default()\n\nPrint the default values of ExtractedFeatureIds object.\n\nExamples\n\n>>> ExtractedFeatureIds.print_default()\n\n\n\nstatic ExtractedFeatureIds.set_default(part_id: int = None, new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ExtractedFeatureIds object.\n\nParameters\n\npart_id (int, optional) – Id of the part from which edge zonelets are extracted.\n\nnew_edge_zonelets (Iterable[int], optional) – Ids of new edge zonelets extracted."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/index.html#the-deletetoolstructspy-module","title":"The deletetoolstructs.py module","text":"The deletetoolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/index.html#summary","title":"The deletetoolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nDeleteFringesAndOverlapsParams\n\nParameters to delete fringes and overlapping faces.\n\nDeleteFringesAndOverlapsResults\n\nResults associated with the delete fringes and overlapping faces operation.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/deletetoolstructs/index.html#description","title":"The deletetoolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeExpressionType.html#scopeexpressiontype","title":"ScopeExpressionType","text":"ScopeExpressionType\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.ScopeExpressionType\n\nScopeExpressionType uses expression type to evaluate the scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeExpressionType.html#overview","title":"ScopeExpressionType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNAMEPATTERN\n\nUse name pattern expression to evaluate scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeExpressionType.html#import-detail","title":"ScopeExpressionType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/ScopeExpressionType.html#attribute-detail","title":"ScopeExpressionType > Attribute detail","text":"Attribute detail\n\n\n\nScopeExpressionType.NAMEPATTERN = 2\n\nUse name pattern expression to evaluate scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/GlobalSizingParams.html#globalsizingparams","title":"GlobalSizingParams","text":"GlobalSizingParams\n\n\n\nclass ansys.meshing.prime.autogen.modelstructs.GlobalSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, min: float = None, max: float = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nGlobal sizing parameters.\n\nParameters\n\nmodel (Model) – Model to create a GlobalSizingParams object with default parameters.\n\nmin (float, optional) – Minimum value of global sizing parameters.\n\nmax (float, optional) – Maximum value of global sizing parameters.\n\ngrowth_rate (float, optional) – Growth rate of global sizing parameters.\n\njson_data (dict, optional) – JSON dictionary to create a GlobalSizingParams object with provided parameters.\n\nExamples\n\n>>> global_sizing_params = prime.GlobalSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/GlobalSizingParams.html#overview","title":"GlobalSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate of global sizing parameters.\n\nmax\n\nMaximum value of global sizing parameters.\n\nmin\n\nMinimum value of global sizing parameters.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of GlobalSizingParams object.\n\nset_default\n\nSet the default values of the GlobalSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/GlobalSizingParams.html#import-detail","title":"GlobalSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/GlobalSizingParams.html#property-detail","title":"GlobalSizingParams > Property detail","text":"Property detail\n\n\n\nproperty GlobalSizingParams.growth_rate: float\n\nGrowth rate of global sizing parameters.\n\n\n\nproperty GlobalSizingParams.max: float\n\nMaximum value of global sizing parameters.\n\n\n\nproperty GlobalSizingParams.min: float\n\nMinimum value of global sizing parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/GlobalSizingParams.html#method-detail","title":"GlobalSizingParams > Method detail","text":"Method detail\n\n\n\nGlobalSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nGlobalSizingParams.__str__() -> str\n\n\n\n\n\nstatic GlobalSizingParams.print_default()\n\nPrint the default values of GlobalSizingParams object.\n\nExamples\n\n>>> GlobalSizingParams.print_default()\n\n\n\nstatic GlobalSizingParams.set_default(min: float = None, max: float = None, growth_rate: float = None)\n\nSet the default values of the GlobalSizingParams object.\n\nParameters\n\nmin (float, optional) – Minimum value of global sizing parameters.\n\nmax (float, optional) – Maximum value of global sizing parameters.\n\ngrowth_rate (float, optional) – Growth rate of global sizing parameters."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BoundingBox.html#boundingbox","title":"BoundingBox","text":"BoundingBox\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.BoundingBox(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, xmin: float = None, ymin: float = None, zmin: float = None, xmax: float = None, ymax: float = None, zmax: float = None, json_data: dict = None, **kwargs)\n\nProvides information about the definition of a bounding box.\n\nParameters\n\nmodel (Model) – Model to create a BoundingBox object with default parameters.\n\nxmin (float, optional) – Minimal X coordinate of the bounding box.\n\nymin (float, optional) – Minimal Y coordinate of the bounding box.\n\nzmin (float, optional) – Minimal Z coordinate of the bounding box.\n\nxmax (float, optional) – Maximal X coordinate of the bounding box.\n\nymax (float, optional) – Maximal Y coordinate of the bounding box.\n\nzmax (float, optional) – Maximal Z coordinate of the bounding box.\n\njson_data (dict, optional) – JSON dictionary to create a BoundingBox object with provided parameters.\n\nExamples\n\n>>> bounding_box = prime.BoundingBox(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BoundingBox.html#overview","title":"BoundingBox > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nxmax\n\nMaximal X coordinate of the bounding box.\n\nxmin\n\nMinimal X coordinate of the bounding box.\n\nymax\n\nMaximal Y coordinate of the bounding box.\n\nymin\n\nMinimal Y coordinate of the bounding box.\n\nzmax\n\nMaximal Z coordinate of the bounding box.\n\nzmin\n\nMinimal Z coordinate of the bounding box.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of BoundingBox object.\n\nset_default\n\nSet the default values of the BoundingBox object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BoundingBox.html#import-detail","title":"BoundingBox > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BoundingBox.html#property-detail","title":"BoundingBox > Property detail","text":"Property detail\n\n\n\nproperty BoundingBox.xmax: float\n\nMaximal X coordinate of the bounding box.\n\n\n\nproperty BoundingBox.xmin: float\n\nMinimal X coordinate of the bounding box.\n\n\n\nproperty BoundingBox.ymax: float\n\nMaximal Y coordinate of the bounding box.\n\n\n\nproperty BoundingBox.ymin: float\n\nMinimal Y coordinate of the bounding box.\n\n\n\nproperty BoundingBox.zmax: float\n\nMaximal Z coordinate of the bounding box.\n\n\n\nproperty BoundingBox.zmin: float\n\nMinimal Z coordinate of the bounding box."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/BoundingBox.html#method-detail","title":"BoundingBox > Method detail","text":"Method detail\n\n\n\nBoundingBox.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBoundingBox.__str__() -> str\n\n\n\n\n\nstatic BoundingBox.print_default()\n\nPrint the default values of BoundingBox object.\n\nExamples\n\n>>> BoundingBox.print_default()\n\n\n\nstatic BoundingBox.set_default(xmin: float = None, ymin: float = None, zmin: float = None, xmax: float = None, ymax: float = None, zmax: float = None)\n\nSet the default values of the BoundingBox object.\n\nParameters\n\nxmin (float, optional) – Minimal X coordinate of the bounding box.\n\nymin (float, optional) – Minimal Y coordinate of the bounding box.\n\nzmin (float, optional) – Minimal Z coordinate of the bounding box.\n\nxmax (float, optional) – Maximal X coordinate of the bounding box.\n\nymax (float, optional) – Maximal Y coordinate of the bounding box.\n\nzmax (float, optional) – Maximal Z coordinate of the bounding box."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_pipe_tee_fmd.html#ansysmeshingprimeexamplesexamplesdownload_pipe_tee_fmd","title":"ansys.meshing.prime.examples.examples.download_pipe_tee_fmd","text":"ansys.meshing.prime.examples.examples.download_pipe_tee_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_pipe_tee_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the pipe tee example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Option to  download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pipe_tee = prime_examples.download_pipe_tee_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(pipe_tee, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSpline.html#boundaryfittedspline","title":"BoundaryFittedSpline","text":"BoundaryFittedSpline\n\n\n\nclass ansys.meshing.prime.BoundaryFittedSpline(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nBoundaryFittedSpline helps you to create splines for structured hex-mesh model.\n\nBoundaryFittedSpline allows you to perform H and P refinement.\n\nParameters\n\nmodel (Model) – Server model to create BoundaryFittedSpline object."},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSpline.html#overview","title":"BoundaryFittedSpline > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_boundary_fitted_spline\n\nCreate boundary fitted spline for structured hex-mesh.\n\nrefine_spline\n\nRefine boundary fitted splines.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for BoundaryFittedSpline.\n\n__exit__\n\nExit context for BoundaryFittedSpline.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSpline.html#import-detail","title":"BoundaryFittedSpline > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BoundaryFittedSpline.html#method-detail","title":"BoundaryFittedSpline > Method detail","text":"Method detail\n\n\n\nBoundaryFittedSpline.__enter__()\n\nEnter context for BoundaryFittedSpline.\n\n\n\nBoundaryFittedSpline.__exit__(type, value, traceback)\n\nExit context for BoundaryFittedSpline.\n\n\n\nBoundaryFittedSpline.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nBoundaryFittedSpline.create_boundary_fitted_spline(part_id: int, cell_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], boundary_fitted_spline_params: ansys.meshing.prime.params.primestructs.BoundaryFittedSplineParams) -> ansys.meshing.prime.params.primestructs.IGAResults\n\nCreate boundary fitted spline for structured hex-mesh.\n\nThe hex-mesh can be structured in blocks but must be conformally connected.\nThat is, each block must have six sided volume and must be connected to other blocks through unique face.\nThe degree and number of control points of the spline can be set in the fitting parameter structure.\n\nParameters\n\npart_id (int) – Id of the part.\n\ncell_zonelet_ids (Iterable[int]) – Ids of the cell zonelets on which spline will be fit.\n\nboundary_fitted_spline_params (BoundaryFittedSplineParams) – Structure containing spline fitting parameters.\n\nReturns\n\nReturns the IGAResults.\n\nReturn type\n\nIGAResults\n\nExamples\n\n>>> from ansys.meshing.prime import BoundaryFittedSpline\n>>> #connect client to server and get model from it\n>>> client = Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> boundary_fitted_spline = BoundaryFittedSpline(model = model)\n>>> results = boundary_fitted_spline.create_boundary_fitted_spline(part_id, cell_zonelet_ids, boundary_fitted_spline_params)\n\n\n\nBoundaryFittedSpline.refine_spline(part_id: int, spline_ids: ansys.meshing.prime.params.primestructs.Iterable[int], refine_spline_params: ansys.meshing.prime.params.primestructs.RefineSplineParams) -> ansys.meshing.prime.params.primestructs.IGAResults\n\nRefine boundary fitted splines.\n\nNow H and P refinement are supported.\nRefinement along one or more dimension can be suppressed using refinement parameters in the input.\n\nParameters\n\npart_id (int) – Id of the part.\n\nspline_ids (Iterable[int]) – Ids of the splines on which refinement is performed.\n\nrefine_spline_params (RefineSplineParams) – Structure containing parameters for spline refinement.\n\nReturns\n\nReturns the IGAResults Structure.\n\nReturn type\n\nIGAResults\n\nExamples\n\n>>> from ansys.meshing.prime import BoundaryFittedSpline\n>>> #connect client to server and get model from it\n>>> client = Client(ip=\"localhost\", port=50060)\n>>> model = client.model\n>>> boundary_fitted_spline = BoundaryFittedSpline(model = model)\n>>> results = boundary_fitted_spline.refine_spline(part_id, spline_ids, refine_spline_params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneResults.html#fillholesatplaneresults","title":"FillHolesAtPlaneResults","text":"FillHolesAtPlaneResults\n\n\n\nclass ansys.meshing.prime.FillHolesAtPlaneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, assigned_zone_name: str = None, created_zone_id: int = None, json_data: dict = None, **kwargs)\n\nResults associated with fill holes at given plane.\n\nParameters\n\nmodel (Model) – Model to create a FillHolesAtPlaneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with operation.\n\ncreated_face_zonelets (Iterable[int], optional) – Ids of face zonelets created to fill the holes.\n\nassigned_zone_name (str, optional) – Name assigned to zone created. Suffix is added to suggested name if the name not available.\n\ncreated_zone_id (int, optional) – Id assigned to zone created.\n\njson_data (dict, optional) – JSON dictionary to create a FillHolesAtPlaneResults object with provided parameters.\n\nExamples\n\n>>> fill_holes_at_plane_results = prime.FillHolesAtPlaneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneResults.html#overview","title":"FillHolesAtPlaneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_zone_name\n\nName assigned to zone created. Suffix is added to suggested name if the name not available.\n\ncreated_face_zonelets\n\nIds of face zonelets created to fill the holes.\n\ncreated_zone_id\n\nId assigned to zone created.\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FillHolesAtPlaneResults object.\n\nset_default\n\nSet the default values of the FillHolesAtPlaneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneResults.html#import-detail","title":"FillHolesAtPlaneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneResults.html#property-detail","title":"FillHolesAtPlaneResults > Property detail","text":"Property detail\n\n\n\nproperty FillHolesAtPlaneResults.assigned_zone_name: str\n\nName assigned to zone created. Suffix is added to suggested name if the name not available.\n\n\n\nproperty FillHolesAtPlaneResults.created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of face zonelets created to fill the holes.\n\n\n\nproperty FillHolesAtPlaneResults.created_zone_id: int\n\nId assigned to zone created.\n\n\n\nproperty FillHolesAtPlaneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty FillHolesAtPlaneResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/FillHolesAtPlaneResults.html#method-detail","title":"FillHolesAtPlaneResults > Method detail","text":"Method detail\n\n\n\nFillHolesAtPlaneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFillHolesAtPlaneResults.__str__() -> str\n\n\n\n\n\nstatic FillHolesAtPlaneResults.print_default()\n\nPrint the default values of FillHolesAtPlaneResults object.\n\nExamples\n\n>>> FillHolesAtPlaneResults.print_default()\n\n\n\nstatic FillHolesAtPlaneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, assigned_zone_name: str = None, created_zone_id: int = None)\n\nSet the default values of the FillHolesAtPlaneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with operation.\n\ncreated_face_zonelets (Iterable[int], optional) – Ids of face zonelets created to fill the holes.\n\nassigned_zone_name (str, optional) – Name assigned to zone created. Suffix is added to suggested name if the name not available.\n\ncreated_zone_id (int, optional) – Id assigned to zone created."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsParams.html#mergezoneletsparams","title":"MergeZoneletsParams","text":"MergeZoneletsParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.MergeZoneletsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merge_small_zonelets_with_neighbors: bool = None, element_count_limit: int = None, json_data: dict = None, **kwargs)\n\nParameters to merge zonelets.\n\nParameters\n\nmodel (Model) – Model to create a MergeZoneletsParams object with default parameters.\n\nmerge_small_zonelets_with_neighbors (bool, optional) – Merge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes: Works better if zonelets are separated by region.\n\nelement_count_limit (int, optional) – Element count limit to identify small zonelets.\n\njson_data (dict, optional) – JSON dictionary to create a MergeZoneletsParams object with provided parameters.\n\nExamples\n\n>>> merge_zonelets_params = prime.MergeZoneletsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsParams.html#overview","title":"MergeZoneletsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nelement_count_limit\n\nElement count limit to identify small zonelets.\n\nmerge_small_zonelets_with_neighbors\n\nWorks better if zonelets are separated by region.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeZoneletsParams object.\n\nset_default\n\nSet the default values of the MergeZoneletsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsParams.html#import-detail","title":"MergeZoneletsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsParams.html#property-detail","title":"MergeZoneletsParams > Property detail","text":"Property detail\n\n\n\nproperty MergeZoneletsParams.element_count_limit: int\n\nElement count limit to identify small zonelets.\n\n\n\nproperty MergeZoneletsParams.merge_small_zonelets_with_neighbors: bool\n\nWorks better if zonelets are separated by region.\n\nType\n\nMerge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/MergeZoneletsParams.html#method-detail","title":"MergeZoneletsParams > Method detail","text":"Method detail\n\n\n\nMergeZoneletsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeZoneletsParams.__str__() -> str\n\n\n\n\n\nstatic MergeZoneletsParams.print_default()\n\nPrint the default values of MergeZoneletsParams object.\n\nExamples\n\n>>> MergeZoneletsParams.print_default()\n\n\n\nstatic MergeZoneletsParams.set_default(merge_small_zonelets_with_neighbors: bool = None, element_count_limit: int = None)\n\nSet the default values of the MergeZoneletsParams object.\n\nParameters\n\nmerge_small_zonelets_with_neighbors (bool, optional) – Merge zonelets with element count smaller than the given element count limit to neighboring zonelets sharing manifold face edges. Notes: Works better if zonelets are separated by region.\n\nelement_count_limit (int, optional) – Element count limit to identify small zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/BodyQueryType.html#bodyquerytype","title":"BodyQueryType","text":"BodyQueryType\n\n\n\nclass ansys.meshing.prime.BodyQueryType\n\nIndicates type of entity to query in part."},{"objectID":"Home","href":"api/ansys/meshing/prime/BodyQueryType.html#overview","title":"BodyQueryType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALL\n\nReturns all entities in part.\n\nFREE\n\nReturns only free entities in part.\n\nNONFREE\n\nReturns entities associated with non-free body in part."},{"objectID":"Home","href":"api/ansys/meshing/prime/BodyQueryType.html#import-detail","title":"BodyQueryType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BodyQueryType.html#attribute-detail","title":"BodyQueryType > Attribute detail","text":"Attribute detail\n\n\n\nBodyQueryType.ALL = 0\n\nReturns all entities in part.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nBodyQueryType.FREE = 1\n\nReturns only free entities in part.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nBodyQueryType.NONFREE = 2\n\nReturns entities associated with non-free body in part.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSweeper.html#volumesweeper","title":"VolumeSweeper","text":"VolumeSweeper\n\n\n\nclass ansys.meshing.prime.VolumeSweeper(model: ansys.meshing.prime.core.model.Model)\n\nProvides operations to generate volume meshes using stacker technology.\n\nTopoVolumes are volume meshed by sweeping or stacking a set of face\nand edge zonelets.\n\nParameters\n\nmodel (Model) – Server model to create VolumeSweeper object."},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSweeper.html#overview","title":"VolumeSweeper > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_base_face\n\nCreate a face at the specified origin.\n\nstack_base_face\n\nGenerate volume mesh by stacking a meshed face.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VolumeSweeper.\n\n__exit__\n\nExit context for VolumeSweeper.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSweeper.html#import-detail","title":"VolumeSweeper > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSweeper.html#attribute-detail","title":"VolumeSweeper > Attribute detail","text":"Attribute detail\n\n\n\nVolumeSweeper.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/VolumeSweeper.html#method-detail","title":"VolumeSweeper > Method detail","text":"Method detail\n\n\n\nVolumeSweeper.__enter__()\n\nEnter context for VolumeSweeper.\n\n\n\nVolumeSweeper.__exit__(type, value, traceback)\n\nExit context for VolumeSweeper.\n\n\n\nVolumeSweeper.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeSweeper.create_base_face(part_id: int, topo_volume_ids: Iterable[int], params: ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerParams) -> ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerResults\n\nCreate a face at the specified origin.\n\nThis method creates a face at the specified origin and perpendicular to the\nspecified direction. Also, it imprints model edges on the face, makes necessary\nedge repairs, and duplicates relevant size controls on the base face.\n\nParameters\n\npart_id (int) – ID of part.\n\ntopo_volume_ids (Iterable[int]) – IDs of the volumes to mesh.\n\nparams (MeshStackerParams) – Mesh stacker parameters.\n\nReturns\n\nResults from creating the face.\n\nReturn type\n\nMeshStackerResults\n\nExamples\n\n>>> results = volumesweeper.create_base_face(part_id, topo_volume_ids, params)\n\n\n\nVolumeSweeper.stack_base_face(part_id: int, base_face_ids: Iterable[int], topo_volume_ids: Iterable[int], params: ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerParams) -> ansys.meshing.prime.autogen.volumesweeperstructs.MeshStackerResults\n\nGenerate volume mesh by stacking a meshed face.\n\nThis method generates volume mesh by stacking a meshed face, layer by layer, along\nthe given direction. It calculates the stack layers using size controls and global\nsize parameters.\n\nParameters\n\npart_id (int) – ID of the part.\n\nbase_face_ids (Iterable[int]) – IDs of the base faces to stack.\n\ntopo_volume_ids (Iterable[int]) – IDs of the volumes to mesh.\n\nparams (MeshStackerParams) – Mesh stacker parameters.\n\nReturns\n\nResults from generating the volume mesh.\n\nReturn type\n\nMeshStackerResults\n\nExamples\n\n>>> results = volumesweeper.stack_base_face(part_id, base_face_ids, topo_volume_ids, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatHolesParams.html#detectandtreatholesparams","title":"DetectAndTreatHolesParams","text":"DetectAndTreatHolesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.DetectAndTreatHolesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, detect_and_defeature_edges_near_holes: bool = None, detect_circular_holes: bool = None, detect_non_circular_holes: bool = None, offset_holes: bool = None, mesh_offset_faces: bool = None, detect_holes_params: DetectHolesParams = None, detect_circular_holes_params: DetectCircularHolesParams = None, detect_non_circular_holes_params: DetectNonCircularHolesParams = None, hole_proximity_tolerance: float = None, merge_face_normals_angle: float = None, edge_sharp_corner_angle: float = None, fragmented_edge_tolerance: float = None, offset_distance: float = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None, json_data: dict = None, **kwargs)\n\nParameters for detect and treat holes operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectAndTreatHolesParams object with default parameters.\n\ndetect_and_defeature_edges_near_holes (bool, optional) – Option to detect and defeature edges near all holes.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_circular_holes (bool, optional) – Option to detect circular holes.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_non_circular_holes (bool, optional) – Option to detect non-circular holes.This is a beta parameter. The behavior and name may change in the future.\n\noffset_holes (bool, optional) – Option to offset holes.This is a beta parameter. The behavior and name may change in the future.\n\nmesh_offset_faces (bool, optional) – Option to mesh the offset holes.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_holes_params (DetectHolesParams, optional) – Parameters for detect holes operation.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_circular_holes_params (DetectCircularHolesParams, optional) – Parameters for detect circular holes operation.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_non_circular_holes_params (DetectNonCircularHolesParams, optional) – Parameters for detect non circular holes operation.This is a beta parameter. The behavior and name may change in the future.\n\nhole_proximity_tolerance (float, optional) – Edge proximity tolerance for holes.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nfragmented_edge_tolerance (float, optional) – Fragmented edge length tolerance for merging edges.This is a beta parameter. The behavior and name may change in the future.\n\noffset_distance (float, optional) – Offset distance for creating offset edge.This is a beta parameter. The behavior and name may change in the future.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.This is a beta parameter. The behavior and name may change in the future.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectAndTreatHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_holes_params = prime.DetectAndTreatHolesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatHolesParams.html#overview","title":"DetectAndTreatHolesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndetect_and_defeature_edges_near_holes\n\nOption to detect and defeature edges near all holes.\n\ndetect_circular_holes\n\nOption to detect circular holes.\n\ndetect_circular_holes_params\n\nParameters for detect circular holes operation.\n\ndetect_holes_params\n\nParameters for detect holes operation.\n\ndetect_non_circular_holes\n\nOption to detect non-circular holes.\n\ndetect_non_circular_holes_params\n\nParameters for detect non circular holes operation.\n\nedge_mesh_constant_size\n\nConstant size used for edge meshing.\n\nedge_sharp_corner_angle\n\nMerge edges when the angle between the edges are below the provided value.\n\nfragmented_edge_tolerance\n\nFragmented edge length tolerance for merging edges.\n\nhole_proximity_tolerance\n\nEdge proximity tolerance for holes.\n\nmerge_face_normals_angle\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nmesh_offset_faces\n\nOption to mesh the offset holes.\n\noffset_distance\n\nOffset distance for creating offset edge.\n\noffset_holes\n\nOption to offset holes.\n\nsurface_mesh_constant_size\n\nConstant size used for surface meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectAndTreatHolesParams object.\n\nset_default\n\nSet the default values of the DetectAndTreatHolesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatHolesParams.html#import-detail","title":"DetectAndTreatHolesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatHolesParams.html#property-detail","title":"DetectAndTreatHolesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectAndTreatHolesParams.detect_and_defeature_edges_near_holes: bool\n\nOption to detect and defeature edges near all holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_circular_holes: bool\n\nOption to detect circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_circular_holes_params: DetectCircularHolesParams\n\nParameters for detect circular holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_holes_params: DetectHolesParams\n\nParameters for detect holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_non_circular_holes: bool\n\nOption to detect non-circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.detect_non_circular_holes_params: DetectNonCircularHolesParams\n\nParameters for detect non circular holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.edge_mesh_constant_size: float\n\nConstant size used for edge meshing.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.fragmented_edge_tolerance: float\n\nFragmented edge length tolerance for merging edges.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.hole_proximity_tolerance: float\n\nEdge proximity tolerance for holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.mesh_offset_faces: bool\n\nOption to mesh the offset holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.offset_distance: float\n\nOffset distance for creating offset edge.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.offset_holes: bool\n\nOption to offset holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatHolesParams.surface_mesh_constant_size: float\n\nConstant size used for surface meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectAndTreatHolesParams.html#method-detail","title":"DetectAndTreatHolesParams > Method detail","text":"Method detail\n\n\n\nDetectAndTreatHolesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectAndTreatHolesParams.__str__() -> str\n\n\n\n\n\nstatic DetectAndTreatHolesParams.print_default()\n\nPrint the default values of DetectAndTreatHolesParams object.\n\nExamples\n\n>>> DetectAndTreatHolesParams.print_default()\n\n\n\nstatic DetectAndTreatHolesParams.set_default(detect_and_defeature_edges_near_holes: bool = None, detect_circular_holes: bool = None, detect_non_circular_holes: bool = None, offset_holes: bool = None, mesh_offset_faces: bool = None, detect_holes_params: DetectHolesParams = None, detect_circular_holes_params: DetectCircularHolesParams = None, detect_non_circular_holes_params: DetectNonCircularHolesParams = None, hole_proximity_tolerance: float = None, merge_face_normals_angle: float = None, edge_sharp_corner_angle: float = None, fragmented_edge_tolerance: float = None, offset_distance: float = None, edge_mesh_constant_size: float = None, surface_mesh_constant_size: float = None)\n\nSet the default values of the DetectAndTreatHolesParams object.\n\nParameters\n\ndetect_and_defeature_edges_near_holes (bool, optional) – Option to detect and defeature edges near all holes.\n\ndetect_circular_holes (bool, optional) – Option to detect circular holes.\n\ndetect_non_circular_holes (bool, optional) – Option to detect non-circular holes.\n\noffset_holes (bool, optional) – Option to offset holes.\n\nmesh_offset_faces (bool, optional) – Option to mesh the offset holes.\n\ndetect_holes_params (DetectHolesParams, optional) – Parameters for detect holes operation.\n\ndetect_circular_holes_params (DetectCircularHolesParams, optional) – Parameters for detect circular holes operation.\n\ndetect_non_circular_holes_params (DetectNonCircularHolesParams, optional) – Parameters for detect non circular holes operation.\n\nhole_proximity_tolerance (float, optional) – Edge proximity tolerance for holes.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.\n\nfragmented_edge_tolerance (float, optional) – Fragmented edge length tolerance for merging edges.\n\noffset_distance (float, optional) – Offset distance for creating offset edge.\n\nedge_mesh_constant_size (float, optional) – Constant size used for edge meshing.\n\nsurface_mesh_constant_size (float, optional) – Constant size used for surface meshing."},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryParams.html#periodiccontrolsummaryparams","title":"PeriodicControlSummaryParams","text":"PeriodicControlSummaryParams\n\n\n\nclass ansys.meshing.prime.PeriodicControlSummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters used to get size control summary.\n\nParameters\n\nmodel (Model) – Model to create a PeriodicControlSummaryParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a PeriodicControlSummaryParams object with provided parameters.\n\nExamples\n\n>>> periodic_control_summary_params = prime.PeriodicControlSummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryParams.html#overview","title":"PeriodicControlSummaryParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PeriodicControlSummaryParams object.\n\nset_default\n\nSet the default values of the PeriodicControlSummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryParams.html#import-detail","title":"PeriodicControlSummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlSummaryParams.html#method-detail","title":"PeriodicControlSummaryParams > Method detail","text":"Method detail\n\n\n\nPeriodicControlSummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControlSummaryParams.__str__() -> str\n\n\n\n\n\nstatic PeriodicControlSummaryParams.print_default()\n\nPrint the default values of PeriodicControlSummaryParams object.\n\nExamples\n\n>>> PeriodicControlSummaryParams.print_default()\n\n\n\nstatic PeriodicControlSummaryParams.set_default()\n\nSet the default values of the PeriodicControlSummaryParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneType.html#zonetype","title":"ZoneType","text":"ZoneType\n\n\n\nclass ansys.meshing.prime.ZoneType\n\nZoneType decides the type of zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneType.html#overview","title":"ZoneType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGE\n\nDenotes the zone is edge zone.\n\nFACE\n\nDenotes the zone is face zone.\n\nVOLUME\n\nDenotes the zone is volume zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneType.html#import-detail","title":"ZoneType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ZoneType.html#attribute-detail","title":"ZoneType > Attribute detail","text":"Attribute detail\n\n\n\nZoneType.EDGE = 1\n\nDenotes the zone is edge zone.\n\n\n\nZoneType.FACE = 2\n\nDenotes the zone is face zone.\n\n\n\nZoneType.VOLUME = 3\n\nDenotes the zone is volume zone."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transform/index.html#the-transformpy-module","title":"The transform.py module","text":"The transform.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transform/index.html#summary","title":"The transform.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTransform\n\nProvides functionalities to initialize and manage transformation using transformation matrix.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/transform/index.html#description","title":"The transform.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/SeparateBlocksFormatType.html#separateblocksformattype","title":"SeparateBlocksFormatType","text":"SeparateBlocksFormatType\n\n\n\nclass ansys.meshing.prime.SeparateBlocksFormatType\n\nFormat type for separate element blocks. Only applicable when write_separate_blocks is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/SeparateBlocksFormatType.html#overview","title":"SeparateBlocksFormatType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCOMPACT\n\nCompact format for element blocks with reduced columns.\n\nSTANDARD\n\nStandard format for element blocks."},{"objectID":"Home","href":"api/ansys/meshing/prime/SeparateBlocksFormatType.html#import-detail","title":"SeparateBlocksFormatType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SeparateBlocksFormatType.html#attribute-detail","title":"SeparateBlocksFormatType > Attribute detail","text":"Attribute detail\n\n\n\nSeparateBlocksFormatType.COMPACT = 1\n\nCompact format for element blocks with reduced columns.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nSeparateBlocksFormatType.STANDARD = 0\n\nStandard format for element blocks.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_elbow_scdoc.html#ansysmeshingprimeexamplesdownload_elbow_scdoc","title":"ansys.meshing.prime.examples.download_elbow_scdoc","text":"ansys.meshing.prime.examples.download_elbow_scdoc\n\n\n\nansys.meshing.prime.examples.download_elbow_scdoc(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the SCDOC file for the mixing elbow example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_scdoc()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/NamePatternParams.html#namepatternparams","title":"NamePatternParams","text":"NamePatternParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.NamePatternParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters to be used to match name pattern with names.\n\nParameters\n\nmodel (Model) – Model to create a NamePatternParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a NamePatternParams object with provided parameters.\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/NamePatternParams.html#overview","title":"NamePatternParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of NamePatternParams object.\n\nset_default\n\nSet the default values of the NamePatternParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/NamePatternParams.html#import-detail","title":"NamePatternParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/NamePatternParams.html#method-detail","title":"NamePatternParams > Method detail","text":"Method detail\n\n\n\nNamePatternParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nNamePatternParams.__str__() -> str\n\n\n\n\n\nstatic NamePatternParams.print_default()\n\nPrint the default values of NamePatternParams object.\n\nExamples\n\n>>> NamePatternParams.print_default()\n\n\n\nstatic NamePatternParams.set_default()\n\nSet the default values of the NamePatternParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SizeFieldType.html#sizefieldtype","title":"SizeFieldType","text":"SizeFieldType\n\n\n\nclass ansys.meshing.prime.autogen.commontypes.SizeFieldType\n\nThe type of sizing field to be used to fetch element size at given location."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SizeFieldType.html#overview","title":"SizeFieldType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCONSTANT\n\nUses constant size at all locations of sizing field.\n\nGEODESIC\n\nUses geodesic size field.\n\nGEOMETRIC\n\nGeometric size field.\n\nMESHEDGEODESIC\n\nThe type is applicable when remeshing already meshed surfaces.\n\nVOLUMETRIC\n\nUses precomputed variable size in volumetric space defined by size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SizeFieldType.html#import-detail","title":"SizeFieldType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/SizeFieldType.html#attribute-detail","title":"SizeFieldType > Attribute detail","text":"Attribute detail\n\n\n\nSizeFieldType.CONSTANT = 3\n\nUses constant size at all locations of sizing field.\n\n\n\nSizeFieldType.GEODESIC = 2\n\nUses geodesic size field.\n\n\n\nSizeFieldType.GEOMETRIC = 0\n\nGeometric size field.\n\n\n\nSizeFieldType.MESHEDGEODESIC = 7\n\nThe type is applicable when remeshing already meshed surfaces.\n\nType\n\nComputes size field using existing surface mesh sizes and diffuses geodesically. Then uses the computed size field to remesh surfaces. Notes\n\n\n\nSizeFieldType.VOLUMETRIC = 1\n\nUses precomputed variable size in volumetric space defined by size field."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreTransitionLayerType.html#hexcoretransitionlayertype","title":"HexCoreTransitionLayerType","text":"HexCoreTransitionLayerType\n\n\n\nclass ansys.meshing.prime.HexCoreTransitionLayerType\n\nHandle size transition of hex cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreTransitionLayerType.html#overview","title":"HexCoreTransitionLayerType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDELETEBOTH\n\nRemove neighboring hexes of different size by deleting both smaller and larger cell layers. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\nDELETELARGE\n\nRemove neighboring hexes of different size by deleting a layer of larger cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\nDELETESMALL\n\nRemove neighboring hexes of different size by deleting a layer of smaller cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\nHANGINGNODES\n\nAllow different size hexes to be neighbors."},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreTransitionLayerType.html#import-detail","title":"HexCoreTransitionLayerType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/HexCoreTransitionLayerType.html#attribute-detail","title":"HexCoreTransitionLayerType > Attribute detail","text":"Attribute detail\n\n\n\nHexCoreTransitionLayerType.DELETEBOTH = 3\n\nRemove neighboring hexes of different size by deleting both smaller and larger cell layers. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\n\n\nHexCoreTransitionLayerType.DELETELARGE = 2\n\nRemove neighboring hexes of different size by deleting a layer of larger cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\n\n\nHexCoreTransitionLayerType.DELETESMALL = 1\n\nRemove neighboring hexes of different size by deleting a layer of smaller cells. The voids are filled with tetrahedral or polyhedral cells depending on volumeFillType in AutoMeshParams structure.\n\n\n\nHexCoreTransitionLayerType.HANGINGNODES = 0\n\nAllow different size hexes to be neighbors."},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointType.html#materialpointtype","title":"MaterialPointType","text":"MaterialPointType\n\n\n\nclass ansys.meshing.prime.MaterialPointType\n\nDefines define type of material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointType.html#overview","title":"MaterialPointType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDEAD\n\nUsed to define dead material point.\n\nLIVE\n\nUsed to define live material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointType.html#import-detail","title":"MaterialPointType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MaterialPointType.html#attribute-detail","title":"MaterialPointType > Attribute detail","text":"Attribute detail\n\n\n\nMaterialPointType.DEAD = 0\n\nUsed to define dead material point.\n\n\n\nMaterialPointType.LIVE = 1\n\nUsed to define live material point."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIParams.html#createboiparams","title":"CreateBOIParams","text":"CreateBOIParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.CreateBOIParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, boi_type: BOIType = None, perform_initial_wrap: bool = None, wrap_size: float = None, flow_dir: FlowDirection = None, side_scale: float = None, wake_scale: float = None, wake_levels: int = None, suggested_part_name: str = None, suggested_label_prefix: str = None, number_of_threads: int = None, json_data: dict = None, **kwargs)\n\nParameters used for BOI surface creation in the given axis.\n\nParameters\n\nmodel (Model) – Model to create a CreateBOIParams object with default parameters.\n\nboi_type (BOIType, optional) – Type of BOI offsetting.\n\nperform_initial_wrap (bool, optional) – Perform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\nwrap_size (float, optional) – Set wrap size greater than the largest gap size in the input when performing_initial_wrap is true.\n\nflow_dir (FlowDirection, optional) – Assigns the offset direction of inflation.\n\nside_scale (float, optional) – BOI side scaling factor.\n\nwake_scale (float, optional) – BOI flow direction scaling factor.\n\nwake_levels (int, optional) – BOI levels.\n\nsuggested_part_name (str, optional) – Suggested part name for created BOI surfaces.\n\nsuggested_label_prefix (str, optional) – Suggested label name for created BOI surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\njson_data (dict, optional) – JSON dictionary to create a CreateBOIParams object with provided parameters.\n\nExamples\n\n>>> create_boiparams = prime.CreateBOIParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIParams.html#overview","title":"CreateBOIParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nboi_type\n\nType of BOI offsetting.\n\nflow_dir\n\nAssigns the offset direction of inflation.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\nperform_initial_wrap\n\nPerform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\nside_scale\n\nBOI side scaling factor.\n\nsuggested_label_prefix\n\nSuggested label name for created BOI surfaces.\n\nsuggested_part_name\n\nSuggested part name for created BOI surfaces.\n\nwake_levels\n\nBOI levels.\n\nwake_scale\n\nBOI flow direction scaling factor.\n\nwrap_size\n\nSet wrap size greater than the largest gap size in the input when performing_initial_wrap is true.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateBOIParams object.\n\nset_default\n\nSet the default values of the CreateBOIParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIParams.html#import-detail","title":"CreateBOIParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIParams.html#property-detail","title":"CreateBOIParams > Property detail","text":"Property detail\n\n\n\nproperty CreateBOIParams.boi_type: BOIType\n\nType of BOI offsetting.\n\n\n\nproperty CreateBOIParams.flow_dir: FlowDirection\n\nAssigns the offset direction of inflation.\n\n\n\nproperty CreateBOIParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\n\n\nproperty CreateBOIParams.perform_initial_wrap: bool\n\nPerform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\n\n\nproperty CreateBOIParams.side_scale: float\n\nBOI side scaling factor.\n\n\n\nproperty CreateBOIParams.suggested_label_prefix: str\n\nSuggested label name for created BOI surfaces.\n\n\n\nproperty CreateBOIParams.suggested_part_name: str\n\nSuggested part name for created BOI surfaces.\n\n\n\nproperty CreateBOIParams.wake_levels: int\n\nBOI levels.\n\n\n\nproperty CreateBOIParams.wake_scale: float\n\nBOI flow direction scaling factor.\n\n\n\nproperty CreateBOIParams.wrap_size: float\n\nSet wrap size greater than the largest gap size in the input when performing_initial_wrap is true."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateBOIParams.html#method-detail","title":"CreateBOIParams > Method detail","text":"Method detail\n\n\n\nCreateBOIParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateBOIParams.__str__() -> str\n\n\n\n\n\nstatic CreateBOIParams.print_default()\n\nPrint the default values of CreateBOIParams object.\n\nExamples\n\n>>> CreateBOIParams.print_default()\n\n\n\nstatic CreateBOIParams.set_default(boi_type: BOIType = None, perform_initial_wrap: bool = None, wrap_size: float = None, flow_dir: FlowDirection = None, side_scale: float = None, wake_scale: float = None, wake_levels: int = None, suggested_part_name: str = None, suggested_label_prefix: str = None, number_of_threads: int = None)\n\nSet the default values of the CreateBOIParams object.\n\nParameters\n\nboi_type (BOIType, optional) – Type of BOI offsetting.\n\nperform_initial_wrap (bool, optional) – Perform an initial wrap to create a BOI if BOI type is OFFSETSURFACE.\n\nwrap_size (float, optional) – Set wrap size greater than the largest gap size in the input when performing_initial_wrap is true.\n\nflow_dir (FlowDirection, optional) – Assigns the offset direction of inflation.\n\nside_scale (float, optional) – BOI side scaling factor.\n\nwake_scale (float, optional) – BOI flow direction scaling factor.\n\nwake_levels (int, optional) – BOI levels.\n\nsuggested_part_name (str, optional) – Suggested part name for created BOI surfaces.\n\nsuggested_label_prefix (str, optional) – Suggested label name for created BOI surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/TetParams.html#tetparams","title":"TetParams","text":"TetParams\n\n\n\nclass ansys.meshing.prime.TetParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, quadratic: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control tetrahedral mesh generation.\n\nParameters\n\nmodel (Model) – Model to create a TetParams object with default parameters.\n\nquadratic (bool, optional) – Option to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh.\n\njson_data (dict, optional) – JSON dictionary to create a TetParams object with provided parameters.\n\nExamples\n\n>>> tet_params = prime.TetParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TetParams.html#overview","title":"TetParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nquadratic\n\nOption to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TetParams object.\n\nset_default\n\nSet the default values of the TetParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/TetParams.html#import-detail","title":"TetParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TetParams.html#property-detail","title":"TetParams > Property detail","text":"Property detail\n\n\n\nproperty TetParams.quadratic: bool\n\nOption to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/TetParams.html#method-detail","title":"TetParams > Method detail","text":"Method detail\n\n\n\nTetParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTetParams.__str__() -> str\n\n\n\n\n\nstatic TetParams.print_default()\n\nPrint the default values of TetParams object.\n\nExamples\n\n>>> TetParams.print_default()\n\n\n\nstatic TetParams.set_default(quadratic: bool = None)\n\nSet the default values of the TetParams object.\n\nParameters\n\nquadratic (bool, optional) – Option to generate quadratic tetrahedral mesh. It is not supported with parallel meshing. It is only supported with pure tetrahedral mesh."},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionsParams.html#resolveintersectionsparams","title":"ResolveIntersectionsParams","text":"ResolveIntersectionsParams\n\n\n\nclass ansys.meshing.prime.ResolveIntersectionsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, number_of_threads: int = None, json_data: dict = None, **kwargs)\n\nResolveIntersectionsParams define parameters for resolve intersections.\n\nParameters\n\nmodel (Model) – Model to create a ResolveIntersectionsParams object with default parameters.\n\nnumber_of_threads (int, optional) – Number of threads for resolve intersections multithreaded operation.\n\njson_data (dict, optional) – JSON dictionary to create a ResolveIntersectionsParams object with provided parameters.\n\nExamples\n\n>>> resolve_intersections_params = prime.ResolveIntersectionsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionsParams.html#overview","title":"ResolveIntersectionsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nnumber_of_threads\n\nNumber of threads for resolve intersections multithreaded operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ResolveIntersectionsParams object.\n\nset_default\n\nSet the default values of the ResolveIntersectionsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionsParams.html#import-detail","title":"ResolveIntersectionsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionsParams.html#property-detail","title":"ResolveIntersectionsParams > Property detail","text":"Property detail\n\n\n\nproperty ResolveIntersectionsParams.number_of_threads: int\n\nNumber of threads for resolve intersections multithreaded operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ResolveIntersectionsParams.html#method-detail","title":"ResolveIntersectionsParams > Method detail","text":"Method detail\n\n\n\nResolveIntersectionsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nResolveIntersectionsParams.__str__() -> str\n\n\n\n\n\nstatic ResolveIntersectionsParams.print_default()\n\nPrint the default values of ResolveIntersectionsParams object.\n\nExamples\n\n>>> ResolveIntersectionsParams.print_default()\n\n\n\nstatic ResolveIntersectionsParams.set_default(number_of_threads: int = None)\n\nSet the default values of the ResolveIntersectionsParams object.\n\nParameters\n\nnumber_of_threads (int, optional) – Number of threads for resolve intersections multithreaded operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DeleteInteriorNodesParams.html#deleteinteriornodesparams","title":"DeleteInteriorNodesParams","text":"DeleteInteriorNodesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.DeleteInteriorNodesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merge_face_normals_angle: float = None, merge_edge_allow_self_close: bool = None, edge_sharp_corner_angle: float = None, json_data: dict = None, **kwargs)\n\nParameters for delete interior nodes operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteInteriorNodesParams object with default parameters.\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteInteriorNodesParams object with provided parameters.\n\nExamples\n\n>>> delete_interior_nodes_params = prime.DeleteInteriorNodesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DeleteInteriorNodesParams.html#overview","title":"DeleteInteriorNodesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nedge_sharp_corner_angle\n\nMerge edges when the angle between the edges are below the provided value.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmerge_face_normals_angle\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteInteriorNodesParams object.\n\nset_default\n\nSet the default values of the DeleteInteriorNodesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DeleteInteriorNodesParams.html#import-detail","title":"DeleteInteriorNodesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DeleteInteriorNodesParams.html#property-detail","title":"DeleteInteriorNodesParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteInteriorNodesParams.edge_sharp_corner_angle: float\n\nMerge edges when the angle between the edges are below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DeleteInteriorNodesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DeleteInteriorNodesParams.merge_face_normals_angle: float\n\nMerge faces when the normal angle between the faces is below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DeleteInteriorNodesParams.html#method-detail","title":"DeleteInteriorNodesParams > Method detail","text":"Method detail\n\n\n\nDeleteInteriorNodesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteInteriorNodesParams.__str__() -> str\n\n\n\n\n\nstatic DeleteInteriorNodesParams.print_default()\n\nPrint the default values of DeleteInteriorNodesParams object.\n\nExamples\n\n>>> DeleteInteriorNodesParams.print_default()\n\n\n\nstatic DeleteInteriorNodesParams.set_default(merge_face_normals_angle: float = None, merge_edge_allow_self_close: bool = None, edge_sharp_corner_angle: float = None)\n\nSet the default values of the DeleteInteriorNodesParams object.\n\nParameters\n\nmerge_face_normals_angle (float, optional) – Merge faces when the normal angle between the faces is below the provided value.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.\n\nedge_sharp_corner_angle (float, optional) – Merge edges when the angle between the edges are below the provided value."},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsResults.html#refineatcontactsresults","title":"RefineAtContactsResults","text":"RefineAtContactsResults\n\n\n\nclass ansys.meshing.prime.RefineAtContactsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_refined: int = None, size_field_id: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with refine face elements in contact.\n\nParameters\n\nmodel (Model) – Model to create a RefineAtContactsResults object with default parameters.\n\nn_refined (int, optional) – Number of face elements identified for refinement.\n\nsize_field_id (int, optional) – Id of size field created to refine at contacts.\n\nerror_code (ErrorCode, optional) – ErrorCode associated with the refine contacts operation.\n\njson_data (dict, optional) – JSON dictionary to create a RefineAtContactsResults object with provided parameters.\n\nExamples\n\n>>> refine_at_contacts_results = prime.RefineAtContactsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsResults.html#overview","title":"RefineAtContactsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nErrorCode associated with the refine contacts operation.\n\nn_refined\n\nNumber of face elements identified for refinement.\n\nsize_field_id\n\nId of size field created to refine at contacts.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RefineAtContactsResults object.\n\nset_default\n\nSet the default values of the RefineAtContactsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsResults.html#import-detail","title":"RefineAtContactsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsResults.html#property-detail","title":"RefineAtContactsResults > Property detail","text":"Property detail\n\n\n\nproperty RefineAtContactsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nErrorCode associated with the refine contacts operation.\n\n\n\nproperty RefineAtContactsResults.n_refined: int\n\nNumber of face elements identified for refinement.\n\n\n\nproperty RefineAtContactsResults.size_field_id: int\n\nId of size field created to refine at contacts."},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineAtContactsResults.html#method-detail","title":"RefineAtContactsResults > Method detail","text":"Method detail\n\n\n\nRefineAtContactsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRefineAtContactsResults.__str__() -> str\n\n\n\n\n\nstatic RefineAtContactsResults.print_default()\n\nPrint the default values of RefineAtContactsResults object.\n\nExamples\n\n>>> RefineAtContactsResults.print_default()\n\n\n\nstatic RefineAtContactsResults.set_default(n_refined: int = None, size_field_id: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the RefineAtContactsResults object.\n\nParameters\n\nn_refined (int, optional) – Number of face elements identified for refinement.\n\nsize_field_id (int, optional) – Id of size field created to refine at contacts.\n\nerror_code (ErrorCode, optional) – ErrorCode associated with the refine contacts operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/index.html#the-core-package","title":"The core package","text":"The core package\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/index.html#summary","title":"The core package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\ncontroldata\n\nModule for control data.\n\ndynaexportutils\n\nModule for LS-DYNA export utilities.\n\nfileio\n\nModule for mangaging file inputs and outputs.\n\nmapdlcdbexportutils\n\nModule for MAPDL cdb export utilities.\n\nmesh\n\nProcess the mesh for visualization in the GUI.\n\nmodel\n\nModule containing the managing logic of the Prime model.\n\npart\n\nModule containing the Part class.\n\nperiodiccontrol\n\nModule containing classes and methods related to periodic control.\n\nprismcontrol\n\nModule containing PrismControl related classes and methods.\n\nsizecontrol\n\nModule containing SizeControl related classes and methods.\n\nsurfaceutilities\n\nUtilities module for surface operations.\n\nsurfer\n\nModule for surfer data.\n\nvolumecontrol\n\nModule containing VolumeControl related classes and methods.\n\nvolumesweeper\n\nModule for volume sweeper operations.\n\nwrapper\n\nModule for the wrapper class.\n\nwrappercontrol\n\nModule containing WrapperControl related classes and methods.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/index.html#description","title":"The core package > Description","text":"Description\n\nCore module."},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseOption.html#fuseoption","title":"FuseOption","text":"FuseOption\n\n\n\nclass ansys.meshing.prime.FuseOption\n\nType to specify treatment of surfaces for fusing."},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseOption.html#overview","title":"FuseOption > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nNONE\n\nNo action to be taken for surfaces being fused.\n\nTRIMONESIDE\n\nDelete faces to be fused on one side and merge nodes to be fused at middle locations (works only within a single part).\n\nTRIMTWOSIDES\n\nDelete faces to be fused on both sides and merge nodes to be fused at middle locations (works only within a single part)."},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseOption.html#import-detail","title":"FuseOption > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FuseOption.html#attribute-detail","title":"FuseOption > Attribute detail","text":"Attribute detail\n\n\n\nFuseOption.NONE = 0\n\nNo action to be taken for surfaces being fused.\n\n\n\nFuseOption.TRIMONESIDE = 3\n\nDelete faces to be fused on one side and merge nodes to be fused at middle locations (works only within a single part).\n\n\n\nFuseOption.TRIMTWOSIDES = 4\n\nDelete faces to be fused on both sides and merge nodes to be fused at middle locations (works only within a single part)."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesResults.html#extracttopovolumesresults","title":"ExtractTopoVolumesResults","text":"ExtractTopoVolumesResults\n\n\n\nclass ansys.meshing.prime.ExtractTopoVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nParameters to extract flow topovolumes.\n\nParameters\n\nmodel (Model) – Model to create a ExtractTopoVolumesResults object with default parameters.\n\nvolumes (Iterable[int], optional) – Ids of extracted flow topovolumes.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractTopoVolumesResults object with provided parameters.\n\nExamples\n\n>>> extract_topo_volumes_results = prime.ExtractTopoVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesResults.html#overview","title":"ExtractTopoVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nvolumes\n\nIds of extracted flow topovolumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractTopoVolumesResults object.\n\nset_default\n\nSet the default values of the ExtractTopoVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesResults.html#import-detail","title":"ExtractTopoVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesResults.html#property-detail","title":"ExtractTopoVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty ExtractTopoVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ExtractTopoVolumesResults.volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of extracted flow topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExtractTopoVolumesResults.html#method-detail","title":"ExtractTopoVolumesResults > Method detail","text":"Method detail\n\n\n\nExtractTopoVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractTopoVolumesResults.__str__() -> str\n\n\n\n\n\nstatic ExtractTopoVolumesResults.print_default()\n\nPrint the default values of ExtractTopoVolumesResults object.\n\nExamples\n\n>>> ExtractTopoVolumesResults.print_default()\n\n\n\nstatic ExtractTopoVolumesResults.set_default(volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the ExtractTopoVolumesResults object.\n\nParameters\n\nvolumes (Iterable[int], optional) – Ids of extracted flow topovolumes.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_toy_car_pmdat.html#ansysmeshingprimeexamplesexamplesdownload_toy_car_pmdat","title":"ansys.meshing.prime.examples.examples.download_toy_car_pmdat","text":"ansys.meshing.prime.examples.examples.download_toy_car_pmdat\n\n\n\nansys.meshing.prime.examples.examples.download_toy_car_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the toy car example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(toy_car, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/Transform.html#transform","title":"Transform","text":"Transform\n\n\n\nclass ansys.meshing.prime.Transform(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nProvides functionalities to initialize and manage transformation using transformation matrix.\n\nParameters\n\nmodel (Model) – Server model to create Transform object."},{"objectID":"Home","href":"api/ansys/meshing/prime/Transform.html#overview","title":"Transform > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ntransform_zonelets\n\nTransforms given zonelets using provided transform parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Transform.\n\n__exit__\n\nExit context for Transform.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/Transform.html#import-detail","title":"Transform > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/Transform.html#method-detail","title":"Transform > Method detail","text":"Method detail\n\n\n\nTransform.__enter__()\n\nEnter context for Transform.\n\n\n\nTransform.__exit__(type, value, traceback)\n\nExit context for Transform.\n\n\n\nTransform.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTransform.transform_zonelets(part_id: int, zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.TransformParams) -> ansys.meshing.prime.params.primestructs.TransformResults\n\nTransforms given zonelets using provided transform parameters.\n\nParameters\n\npart_id (int) – Part id of zonelets to be transformed.\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nparams (TransformParams) – Transform parameters.\n\nReturns\n\nReturns the transform results.\n\nReturn type\n\nTransformResults\n\nExamples\n\n>>> params = prime.TransformParams(model=model)\n>>> # scale by a factor of 2 using a 4x4 transformation matrix\n>>> params.transformation_matrix = [\n>>>    2, 0, 0, 0,\n>>>    0, 2, 0, 0,\n>>>    0, 0, 2, 0,\n>>>    0, 0, 0, 1,\n>>> ]\n>>> part = model.get_part_by_name(\"part_name\")\n>>> zonelets = part.get_face_zonelets()\n>>> result = prime.SurfaceUtilities(model).transform_zonelets(part.id, zonelets, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/CellQualityMeasure.html#cellqualitymeasure","title":"CellQualityMeasure","text":"CellQualityMeasure\n\n\n\nclass ansys.meshing.prime.autogen.commontypes.CellQualityMeasure\n\nThe type of cell quality measures to check cell quality metrics."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/CellQualityMeasure.html#overview","title":"CellQualityMeasure > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nASPECTRATIO\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\nELEMENTQUALITY\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst).\n\nFLUENTASPECTRATIO\n\nThe Fluent aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\nINVERSEORTHOGONAL\n\nThe inverse orthogonal metric ranges between 0 (best) and 1 (worst).\n\nINVERSEORTHOGONAL_V2\n\nThe advanced inverse orthogonal metric ranges between 0 (best) and 1 (worst).\n\nSKEWNESS\n\nThe Skewness metric ranges between 0 (best) and 1 (worst). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst)."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/CellQualityMeasure.html#import-detail","title":"CellQualityMeasure > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commontypes/CellQualityMeasure.html#attribute-detail","title":"CellQualityMeasure > Attribute detail","text":"Attribute detail\n\n\n\nCellQualityMeasure.ASPECTRATIO = 5\n\nThe Aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\n\n\nCellQualityMeasure.ELEMENTQUALITY = 50\n\nThe Element Quality metric ranges between 0 (worst) and 1 (best). A value of 1 indicates a perfect cube or square (best) while a value of 0 indicates that the element has a zero or negative volume (worst).\n\n\n\nCellQualityMeasure.FLUENTASPECTRATIO = 13\n\nThe Fluent aspect Ratio metric is greater than 1. A value of 1 indicates an equilateral cell (best) and a value of 20(e.g) indicates a stretched cell (worst).\n\n\n\nCellQualityMeasure.INVERSEORTHOGONAL = 14\n\nThe inverse orthogonal metric ranges between 0 (best) and 1 (worst).\n\n\n\nCellQualityMeasure.INVERSEORTHOGONAL_V2 = 25\n\nThe advanced inverse orthogonal metric ranges between 0 (best) and 1 (worst).\n\n\n\nCellQualityMeasure.SKEWNESS = 0\n\nThe Skewness metric ranges between 0 (best) and 1 (worst). A value of 0 indicates an equilateral cell (best) and a value of 1 indicates a completely degenerate cell (worst)."},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposer.html#vtcomposer","title":"VTComposer","text":"VTComposer\n\n\n\nclass ansys.meshing.prime.VTComposer(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, part_id: int)\n\nVTComposer is used for fix topology corrections like separate, pinch.\n\nParameters\n\nmodel (Model) – Server model to create VTComposer object.\n\npart_id (int) – Id of the part."},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposer.html#overview","title":"VTComposer > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nseparate_faces_with_interior_edges\n\nSeparates the given topofaces having interior edges using the given VT Composer parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VTComposer.\n\n__exit__\n\nExit context for VTComposer.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposer.html#import-detail","title":"VTComposer > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/VTComposer.html#method-detail","title":"VTComposer > Method detail","text":"Method detail\n\n\n\nVTComposer.__enter__()\n\nEnter context for VTComposer.\n\n\n\nVTComposer.__exit__(type, value, traceback)\n\nExit context for VTComposer.\n\n\n\nVTComposer.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVTComposer.separate_faces_with_interior_edges(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.VTComposerParams) -> ansys.meshing.prime.params.primestructs.VTComposerResults\n\nSeparates the given topofaces having interior edges using the given VT Composer parameters.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of input topofaces.\n\nparams (VTComposerParams) – VT composer parameters.\n\nReturns\n\nReturn results in VTComposerResults.\n\nReturn type\n\nVTComposerResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = vtcomposer.separate_faces_with_interior_edges([1,2,3,4,5], params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismStairStep.html#prismstairstep","title":"PrismStairStep","text":"PrismStairStep\n\n\n\nclass ansys.meshing.prime.PrismStairStep(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, check_proximity: bool = None, gap_factor_scale: float = None, json_data: dict = None, **kwargs)\n\nParameters to control prism stairsteping.\n\nParameters\n\nmodel (Model) – Model to create a PrismStairStep object with default parameters.\n\ncheck_proximity (bool, optional) – Check whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\ngap_factor_scale (float, optional) – Scale factor for prism proximity detection gap factor.\n\njson_data (dict, optional) – JSON dictionary to create a PrismStairStep object with provided parameters.\n\nExamples\n\n>>> prism_stair_step = prime.PrismStairStep(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismStairStep.html#overview","title":"PrismStairStep > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncheck_proximity\n\nCheck whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\ngap_factor_scale\n\nScale factor for prism proximity detection gap factor.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PrismStairStep object.\n\nset_default\n\nSet the default values of the PrismStairStep object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismStairStep.html#import-detail","title":"PrismStairStep > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismStairStep.html#property-detail","title":"PrismStairStep > Property detail","text":"Property detail\n\n\n\nproperty PrismStairStep.check_proximity: bool\n\nCheck whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\n\n\nproperty PrismStairStep.gap_factor_scale: float\n\nScale factor for prism proximity detection gap factor."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismStairStep.html#method-detail","title":"PrismStairStep > Method detail","text":"Method detail\n\n\n\nPrismStairStep.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismStairStep.__str__() -> str\n\n\n\n\n\nstatic PrismStairStep.print_default()\n\nPrint the default values of PrismStairStep object.\n\nExamples\n\n>>> PrismStairStep.print_default()\n\n\n\nstatic PrismStairStep.set_default(check_proximity: bool = None, gap_factor_scale: float = None)\n\nSet the default values of the PrismStairStep object.\n\nParameters\n\ncheck_proximity (bool, optional) – Check whether to enable or disable stairstepping at prisms within proximity of boundary or prism cap.\n\ngap_factor_scale (float, optional) – Scale factor for prism proximity detection gap factor."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesResults.html#mergevolumesresults","title":"MergeVolumesResults","text":"MergeVolumesResults\n\n\n\nclass ansys.meshing.prime.MergeVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, merged_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with merge volumes operation.\n\nParameters\n\nmodel (Model) – Model to create a MergeVolumesResults object with default parameters.\n\nmerged_volumes (Iterable[int], optional) – Ids of volumes to which input volumes are merged.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume merge operation.\n\njson_data (dict, optional) – JSON dictionary to create a MergeVolumesResults object with provided parameters.\n\nExamples\n\n>>> merge_volumes_results = prime.MergeVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesResults.html#overview","title":"MergeVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the volume merge operation.\n\nmerged_volumes\n\nIds of volumes to which input volumes are merged.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergeVolumesResults object.\n\nset_default\n\nSet the default values of the MergeVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesResults.html#import-detail","title":"MergeVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesResults.html#property-detail","title":"MergeVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty MergeVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the volume merge operation.\n\n\n\nproperty MergeVolumesResults.merged_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of volumes to which input volumes are merged."},{"objectID":"Home","href":"api/ansys/meshing/prime/MergeVolumesResults.html#method-detail","title":"MergeVolumesResults > Method detail","text":"Method detail\n\n\n\nMergeVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergeVolumesResults.__str__() -> str\n\n\n\n\n\nstatic MergeVolumesResults.print_default()\n\nPrint the default values of MergeVolumesResults object.\n\nExamples\n\n>>> MergeVolumesResults.print_default()\n\n\n\nstatic MergeVolumesResults.set_default(merged_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the MergeVolumesResults object.\n\nParameters\n\nmerged_volumes (Iterable[int], optional) – Ids of volumes to which input volumes are merged.\n\nerror_code (ErrorCode, optional) – Error code associated with the volume merge operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsParams.html#wrapperclosegapsparams","title":"WrapperCloseGapsParams","text":"WrapperCloseGapsParams\n\n\n\nclass ansys.meshing.prime.WrapperCloseGapsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, target: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, gap_size: float = None, material_point_name: str = None, suggested_part_name: str = None, number_of_threads: int = None, create_new_part: bool = None, resolution_factor: float = None, json_data: dict = None, **kwargs)\n\nWrapperCloseGapsParams to define parameters for close gaps operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapperCloseGapsParams object with default parameters.\n\ntarget (ScopeDefinition, optional) – Scope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope.\n\ngap_size (float, optional) – Maximum gap size to be closed.\n\nmaterial_point_name (str, optional) – Material point name near the gaps to be closed.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\ncreate_new_part (bool, optional) – Creates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\nresolution_factor (float, optional) – Factor to resolve the smallest gap for the given gap size.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperCloseGapsParams object with provided parameters.\n\nExamples\n\n>>> wrapper_close_gaps_params = prime.WrapperCloseGapsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsParams.html#overview","title":"WrapperCloseGapsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreate_new_part\n\nCreates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\ngap_size\n\nMaximum gap size to be closed.\n\nmaterial_point_name\n\nMaterial point name near the gaps to be closed.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\nresolution_factor\n\nFactor to resolve the smallest gap for the given gap size.\n\nsuggested_part_name\n\nSuggested part name for created patching surfaces.\n\ntarget\n\nScope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperCloseGapsParams object.\n\nset_default\n\nSet the default values of the WrapperCloseGapsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsParams.html#import-detail","title":"WrapperCloseGapsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsParams.html#property-detail","title":"WrapperCloseGapsParams > Property detail","text":"Property detail\n\n\n\nproperty WrapperCloseGapsParams.create_new_part: bool\n\nCreates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\n\n\nproperty WrapperCloseGapsParams.gap_size: float\n\nMaximum gap size to be closed.\n\n\n\nproperty WrapperCloseGapsParams.material_point_name: str\n\nMaterial point name near the gaps to be closed.\n\n\n\nproperty WrapperCloseGapsParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\n\n\nproperty WrapperCloseGapsParams.resolution_factor: float\n\nFactor to resolve the smallest gap for the given gap size.\n\n\n\nproperty WrapperCloseGapsParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces.\n\n\n\nproperty WrapperCloseGapsParams.target: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperCloseGapsParams.html#method-detail","title":"WrapperCloseGapsParams > Method detail","text":"Method detail\n\n\n\nWrapperCloseGapsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperCloseGapsParams.__str__() -> str\n\n\n\n\n\nstatic WrapperCloseGapsParams.print_default()\n\nPrint the default values of WrapperCloseGapsParams object.\n\nExamples\n\n>>> WrapperCloseGapsParams.print_default()\n\n\n\nstatic WrapperCloseGapsParams.set_default(target: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, gap_size: float = None, material_point_name: str = None, suggested_part_name: str = None, number_of_threads: int = None, create_new_part: bool = None, resolution_factor: float = None)\n\nSet the default values of the WrapperCloseGapsParams object.\n\nParameters\n\ntarget (ScopeDefinition, optional) – Scope of target face zonelets to patch gaps between scope and target. If empty scope is provided, CloseGaps patch gaps within scope.\n\ngap_size (float, optional) – Maximum gap size to be closed.\n\nmaterial_point_name (str, optional) – Material point name near the gaps to be closed.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\ncreate_new_part (bool, optional) – Creates a new gap closure part. If set to false, merge the patches to the adjacent face zonelet with the highest face count in the input.\n\nresolution_factor (float, optional) – Factor to resolve the smallest gap for the given gap size."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsParams.html#copyzoneletsparams","title":"CopyZoneletsParams","text":"CopyZoneletsParams\n\n\n\nclass ansys.meshing.prime.autogen.commonstructs.CopyZoneletsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, copy_labels: bool = None, copy_zones: bool = None, json_data: dict = None, **kwargs)\n\nParameters to copy zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CopyZoneletsParams object with default parameters.\n\ncopy_labels (bool, optional) – Option to copy labels of input zonelets to the corresponding copied zonelets.This is a beta parameter. The behavior and name may change in the future.\n\ncopy_zones (bool, optional) – Option to copy zones of input zonelets to corresponding copied zonelets.\n\njson_data (dict, optional) – JSON dictionary to create a CopyZoneletsParams object with provided parameters.\n\nExamples\n\n>>> copy_zonelets_params = prime.CopyZoneletsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsParams.html#overview","title":"CopyZoneletsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncopy_labels\n\nOption to copy labels of input zonelets to the corresponding copied zonelets.\n\ncopy_zones\n\nOption to copy zones of input zonelets to corresponding copied zonelets.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CopyZoneletsParams object.\n\nset_default\n\nSet the default values of the CopyZoneletsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsParams.html#import-detail","title":"CopyZoneletsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsParams.html#property-detail","title":"CopyZoneletsParams > Property detail","text":"Property detail\n\n\n\nproperty CopyZoneletsParams.copy_labels: bool\n\nOption to copy labels of input zonelets to the corresponding copied zonelets.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty CopyZoneletsParams.copy_zones: bool\n\nOption to copy zones of input zonelets to corresponding copied zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsParams.html#method-detail","title":"CopyZoneletsParams > Method detail","text":"Method detail\n\n\n\nCopyZoneletsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCopyZoneletsParams.__str__() -> str\n\n\n\n\n\nstatic CopyZoneletsParams.print_default()\n\nPrint the default values of CopyZoneletsParams object.\n\nExamples\n\n>>> CopyZoneletsParams.print_default()\n\n\n\nstatic CopyZoneletsParams.set_default(copy_labels: bool = None, copy_zones: bool = None)\n\nSet the default values of the CopyZoneletsParams object.\n\nParameters\n\ncopy_labels (bool, optional) – Option to copy labels of input zonelets to the corresponding copied zonelets.\n\ncopy_zones (bool, optional) – Option to copy zones of input zonelets to corresponding copied zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseResults.html#fuseresults","title":"FuseResults","text":"FuseResults\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.FuseResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, fused_pairs: int = None, fused_area: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, intersecting_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, intersecting_zonelet_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs] = None, json_data: dict = None, **kwargs)\n\nResults associated with the fuse operations.\n\nParameters\n\nmodel (Model) – Model to create a FuseResults object with default parameters.\n\nfused_pairs (int, optional) – Number of face region pairs that were fused.This is a beta parameter. The behavior and name may change in the future.\n\nfused_area (float, optional) – Total area of fused regions from both source and target faces.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of the fuse operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the fuse operation.This is a beta parameter. The behavior and name may change in the future.\n\nintersecting_locations (Iterable[float], optional) – Locations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.This is a beta parameter. The behavior and name may change in the future.\n\nintersecting_zonelet_pairs (List[OverlapPairs], optional) – Contains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a FuseResults object with provided parameters.\n\nExamples\n\n>>> fuse_results = prime.FuseResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseResults.html#overview","title":"FuseResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of the fuse operation.\n\nfused_area\n\nTotal area of fused regions from both source and target faces.\n\nfused_pairs\n\nNumber of face region pairs that were fused.\n\nintersecting_locations\n\nLocations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nintersecting_zonelet_pairs\n\nContains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input.\n\nwarning_codes\n\nWarning codes associated with the fuse operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FuseResults object.\n\nset_default\n\nSet the default values of the FuseResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseResults.html#import-detail","title":"FuseResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseResults.html#property-detail","title":"FuseResults > Property detail","text":"Property detail\n\n\n\nproperty FuseResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of the fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.fused_area: float\n\nTotal area of fused regions from both source and target faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.fused_pairs: int\n\nNumber of face region pairs that were fused.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.intersecting_locations: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nLocations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.intersecting_zonelet_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs]\n\nContains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty FuseResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the fuse operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/FuseResults.html#method-detail","title":"FuseResults > Method detail","text":"Method detail\n\n\n\nFuseResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFuseResults.__str__() -> str\n\n\n\n\n\nstatic FuseResults.print_default()\n\nPrint the default values of FuseResults object.\n\nExamples\n\n>>> FuseResults.print_default()\n\n\n\nstatic FuseResults.set_default(fused_pairs: int = None, fused_area: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, intersecting_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, intersecting_zonelet_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs] = None)\n\nSet the default values of the FuseResults object.\n\nParameters\n\nfused_pairs (int, optional) – Number of face region pairs that were fused.\n\nfused_area (float, optional) – Total area of fused regions from both source and target faces.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of the fuse operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the fuse operation.\n\nintersecting_locations (Iterable[float], optional) – Locations where the fuse operation did not remove self-intersections in the input. Each location corresponds to a patch of faces where self-intersections exist. The number of elements in intersecting locations are in multiples of three. For example, zero, three, six, nine, and so on. Each triplet corresponds to coordinates in x, y, and z. For example, if the intersecting locations contain (a, b, c, d, e, f), then (a, b, c) represent the first location and (d, e, f) represent the second location.\n\nintersecting_zonelet_pairs (List[OverlapPairs], optional) – Contains pairs of face zonelet ids where the fuse operation failed to remove self-intersections in the input."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractedFeatureIds.html#extractedfeatureids","title":"ExtractedFeatureIds","text":"ExtractedFeatureIds\n\n\n\nclass ansys.meshing.prime.autogen.featureextractionstructs.ExtractedFeatureIds(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, part_id: int = None, new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nContains ids of the features extracted.\n\nParameters\n\nmodel (Model) – Model to create a ExtractedFeatureIds object with default parameters.\n\npart_id (int, optional) – Id of the part from which edge zonelets are extracted.\n\nnew_edge_zonelets (Iterable[int], optional) – Ids of new edge zonelets extracted.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractedFeatureIds object with provided parameters.\n\nExamples\n\n>>> extracted_feature_ids = prime.ExtractedFeatureIds(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractedFeatureIds.html#overview","title":"ExtractedFeatureIds > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nnew_edge_zonelets\n\nIds of new edge zonelets extracted.\n\npart_id\n\nId of the part from which edge zonelets are extracted.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractedFeatureIds object.\n\nset_default\n\nSet the default values of the ExtractedFeatureIds object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractedFeatureIds.html#import-detail","title":"ExtractedFeatureIds > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractedFeatureIds.html#property-detail","title":"ExtractedFeatureIds > Property detail","text":"Property detail\n\n\n\nproperty ExtractedFeatureIds.new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of new edge zonelets extracted.\n\n\n\nproperty ExtractedFeatureIds.part_id: int\n\nId of the part from which edge zonelets are extracted."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractedFeatureIds.html#method-detail","title":"ExtractedFeatureIds > Method detail","text":"Method detail\n\n\n\nExtractedFeatureIds.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractedFeatureIds.__str__() -> str\n\n\n\n\n\nstatic ExtractedFeatureIds.print_default()\n\nPrint the default values of ExtractedFeatureIds object.\n\nExamples\n\n>>> ExtractedFeatureIds.print_default()\n\n\n\nstatic ExtractedFeatureIds.set_default(part_id: int = None, new_edge_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the ExtractedFeatureIds object.\n\nParameters\n\npart_id (int, optional) – Id of the part from which edge zonelets are extracted.\n\nnew_edge_zonelets (Iterable[int], optional) – Ids of new edge zonelets extracted."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_multi_layer_quad_mesh_pcb_dsco.html#ansysmeshingprimeexamplesdownload_multi_layer_quad_mesh_pcb_dsco","title":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_dsco","text":"ansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_dsco\n\n\n\nansys.meshing.prime.examples.download_multi_layer_quad_mesh_pcb_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/sizecontrol/index.html#the-sizecontrolpy-module","title":"The sizecontrol.py module","text":"The sizecontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/sizecontrol/index.html#summary","title":"The sizecontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSizeControl\n\nSize control is used to compute the size field.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/sizecontrol/index.html#description","title":"The sizecontrol.py module > Description","text":"Description\n\nModule containing SizeControl related classes and methods."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesResults.html#computevolumesresults","title":"ComputeVolumesResults","text":"ComputeVolumesResults\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ComputeVolumesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, material_point_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, external_open_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with compute volumes.\n\nParameters\n\nmodel (Model) – Model to create a ComputeVolumesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nerror_locations (Iterable[float], optional) – Coordinates of problematic locations in the surface mesh.\n\nvolumes (Iterable[int], optional) – Ids of computed volumes.\n\nmaterial_point_volumes (Iterable[int], optional) – Ids of computed volumes enclosing material points.\n\nexternal_open_face_zonelets (Iterable[int], optional) – Face zonelet ids that are in external space and not part of any computed volumes.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute volumes.\n\njson_data (dict, optional) – JSON dictionary to create a ComputeVolumesResults object with provided parameters.\n\nExamples\n\n>>> compute_volumes_results = prime.ComputeVolumesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesResults.html#overview","title":"ComputeVolumesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nerror_locations\n\nCoordinates of problematic locations in the surface mesh.\n\nexternal_open_face_zonelets\n\nFace zonelet ids that are in external space and not part of any computed volumes.\n\nmaterial_point_volumes\n\nIds of computed volumes enclosing material points.\n\nvolumes\n\nIds of computed volumes.\n\nwarning_codes\n\nWarning codes associated with the compute volumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ComputeVolumesResults object.\n\nset_default\n\nSet the default values of the ComputeVolumesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesResults.html#import-detail","title":"ComputeVolumesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesResults.html#property-detail","title":"ComputeVolumesResults > Property detail","text":"Property detail\n\n\n\nproperty ComputeVolumesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty ComputeVolumesResults.error_locations: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCoordinates of problematic locations in the surface mesh.\n\n\n\nproperty ComputeVolumesResults.external_open_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nFace zonelet ids that are in external space and not part of any computed volumes.\n\n\n\nproperty ComputeVolumesResults.material_point_volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of computed volumes enclosing material points.\n\n\n\nproperty ComputeVolumesResults.volumes: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of computed volumes.\n\n\n\nproperty ComputeVolumesResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the compute volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ComputeVolumesResults.html#method-detail","title":"ComputeVolumesResults > Method detail","text":"Method detail\n\n\n\nComputeVolumesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nComputeVolumesResults.__str__() -> str\n\n\n\n\n\nstatic ComputeVolumesResults.print_default()\n\nPrint the default values of ComputeVolumesResults object.\n\nExamples\n\n>>> ComputeVolumesResults.print_default()\n\n\n\nstatic ComputeVolumesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, error_locations: ansys.meshing.prime.params.primestructs.Iterable[float] = None, volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, material_point_volumes: ansys.meshing.prime.params.primestructs.Iterable[int] = None, external_open_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ComputeVolumesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nerror_locations (Iterable[float], optional) – Coordinates of problematic locations in the surface mesh.\n\nvolumes (Iterable[int], optional) – Ids of computed volumes.\n\nmaterial_point_volumes (Iterable[int], optional) – Ids of computed volumes enclosing material points.\n\nexternal_open_face_zonelets (Iterable[int], optional) – Face zonelet ids that are in external space and not part of any computed volumes.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the compute volumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_bracket_fmd.html#ansysmeshingprimeexamplesexamplesdownload_bracket_fmd","title":"ansys.meshing.prime.examples.examples.download_bracket_fmd","text":"ansys.meshing.prime.examples.examples.download_bracket_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_bracket_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the bracket scaffold example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     bracket = prime_examples.download_bracket_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbParams.html#exportmapdlcdbparams","title":"ExportMapdlCdbParams","text":"ExportMapdlCdbParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, config_settings: str = None, pre_solution_settings: str = None, material_properties: str = None, boundary_conditions: str = None, analysis_settings: str = None, write_cells: bool = None, enable_face_based_labels: bool = None, label_export_params: LabelExportParams = None, write_by_zones: bool = None, consider_general_connectors_as_spot_weld: bool = None, analysis_type: CdbAnalysisType = None, simulation_type: CdbSimulationType = None, analysis_settings_file_name: str = None, write_separate_blocks: bool = None, write_components_with_element_blocks: bool = None, separate_blocks_format_type: SeparateBlocksFormatType = None, export_fasteners_as_swgen: bool = None, export_rigid_bodies_as_rbgen: bool = None, write_component_based_ties: bool = None, mortar_contact_for_ties: bool = None, write_thickness_file: bool = None, contact_element_types: ContactElementTypeParams = None, json_data: dict = None, **kwargs)\n\nParameters to control MAPDL CDB export settings.\n\nParameters\n\nmodel (Model) – Model to create a ExportMapdlCdbParams object with default parameters.\n\nconfig_settings (str, optional) – MAPDL configuration settings in CDB format to be added at the beginning of the file.This is a beta parameter. The behavior and name may change in the future.\n\npre_solution_settings (str, optional) – MAPDL Settings in CDB format to be added before the solution block in the file.This is a beta parameter. The behavior and name may change in the future.\n\nmaterial_properties (str, optional) – Materials in CDB format to be added to the file.This is a beta parameter. The behavior and name may change in the future.\n\nboundary_conditions (str, optional) – Boundary conditions in CDB format to be added to the file.This is a beta parameter. The behavior and name may change in the future.\n\nanalysis_settings (str, optional) – MAPDL analysis settings in CDB format to be added after the solution block in the file. Note: Boundary conditions can be included into analysis settings.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_cells (bool, optional) – Option to write out cells as part of the file.This is a beta parameter. The behavior and name may change in the future.\n\nenable_face_based_labels (bool, optional) – Use LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.This is a beta parameter. The behavior and name may change in the future.\n\nlabel_export_params (LabelExportParams, optional) – Parameters to control the export of labels as Nodal or Element Components in CDB.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_by_zones (bool, optional) – Option to write zones in the file.This is a beta parameter. The behavior and name may change in the future.\n\nconsider_general_connectors_as_spot_weld (bool, optional) – Option to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.This is a beta parameter. The behavior and name may change in the future.\n\nanalysis_type (CdbAnalysisType, optional) – Option to specify CDB analysis type.This is a beta parameter. The behavior and name may change in the future.\n\nsimulation_type (CdbSimulationType, optional) – Simulation type for the file.This is a beta parameter. The behavior and name may change in the future.\n\nanalysis_settings_file_name (str, optional) – File path to export mapdl analysis settings.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_separate_blocks (bool, optional) – Controls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_components_with_element_blocks (bool, optional) – Controls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.This is a beta parameter. The behavior and name may change in the future.\n\nseparate_blocks_format_type (SeparateBlocksFormatType, optional) – Controls the format type when writing separate element blocks. Only used when write_separate_blocks is true.This is a beta parameter. The behavior and name may change in the future.\n\nexport_fasteners_as_swgen (bool, optional) – Option to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.This is a beta parameter. The behavior and name may change in the future.\n\nexport_rigid_bodies_as_rbgen (bool, optional) – Option to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_component_based_ties (bool, optional) – Option to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.This is a beta parameter. The behavior and name may change in the future.\n\nmortar_contact_for_ties (bool, optional) – Option to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.This is a beta parameter. The behavior and name may change in the future.\n\nwrite_thickness_file (bool, optional) – Option to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.This is a beta parameter. The behavior and name may change in the future.\n\ncontact_element_types (ContactElementTypeParams, optional) – Parameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportMapdlCdbParams object with provided parameters.\n\nExamples\n\n>>> export_mapdl_cdb_params = prime.ExportMapdlCdbParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbParams.html#overview","title":"ExportMapdlCdbParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nanalysis_settings\n\nBoundary conditions can be included into analysis settings.\n\nanalysis_settings_file_name\n\nFile path to export mapdl analysis settings.\n\nanalysis_type\n\nOption to specify CDB analysis type.\n\nboundary_conditions\n\nBoundary conditions in CDB format to be added to the file.\n\nconfig_settings\n\nMAPDL configuration settings in CDB format to be added at the beginning of the file.\n\nconsider_general_connectors_as_spot_weld\n\nOption to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\ncontact_element_types\n\nParameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs.\n\nenable_face_based_labels\n\nUse LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nexport_fasteners_as_swgen\n\nOption to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nexport_rigid_bodies_as_rbgen\n\nOption to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nlabel_export_params\n\nParameters to control the export of labels as Nodal or Element Components in CDB.\n\nmaterial_properties\n\nMaterials in CDB format to be added to the file.\n\nmortar_contact_for_ties\n\nOption to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\npre_solution_settings\n\nMAPDL Settings in CDB format to be added before the solution block in the file.\n\nseparate_blocks_format_type\n\nControls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nsimulation_type\n\nSimulation type for the file.\n\nwrite_by_zones\n\nOption to write zones in the file.\n\nwrite_cells\n\nOption to write out cells as part of the file.\n\nwrite_component_based_ties\n\nOption to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nwrite_components_with_element_blocks\n\nControls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nwrite_separate_blocks\n\nControls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nwrite_thickness_file\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportMapdlCdbParams object.\n\nset_default\n\nSet the default values of the ExportMapdlCdbParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbParams.html#import-detail","title":"ExportMapdlCdbParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbParams.html#property-detail","title":"ExportMapdlCdbParams > Property detail","text":"Property detail\n\n\n\nproperty ExportMapdlCdbParams.analysis_settings: str\n\nBoundary conditions can be included into analysis settings.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\nType\n\nMAPDL analysis settings in CDB format to be added after the solution block in the file. Note\n\n\n\nproperty ExportMapdlCdbParams.analysis_settings_file_name: str\n\nFile path to export mapdl analysis settings.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.analysis_type: CdbAnalysisType\n\nOption to specify CDB analysis type.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.boundary_conditions: str\n\nBoundary conditions in CDB format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.config_settings: str\n\nMAPDL configuration settings in CDB format to be added at the beginning of the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.consider_general_connectors_as_spot_weld: bool\n\nOption to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.contact_element_types: ContactElementTypeParams\n\nParameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.enable_face_based_labels: bool\n\nUse LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.export_fasteners_as_swgen: bool\n\nOption to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.export_rigid_bodies_as_rbgen: bool\n\nOption to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.label_export_params: LabelExportParams\n\nParameters to control the export of labels as Nodal or Element Components in CDB.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.material_properties: str\n\nMaterials in CDB format to be added to the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.mortar_contact_for_ties: bool\n\nOption to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.pre_solution_settings: str\n\nMAPDL Settings in CDB format to be added before the solution block in the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.separate_blocks_format_type: SeparateBlocksFormatType\n\nControls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.simulation_type: CdbSimulationType\n\nSimulation type for the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_by_zones: bool\n\nOption to write zones in the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_cells: bool\n\nOption to write out cells as part of the file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_component_based_ties: bool\n\nOption to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_components_with_element_blocks: bool\n\nControls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_separate_blocks: bool\n\nControls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbParams.write_thickness_file: bool\n\nOption to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbParams.html#method-detail","title":"ExportMapdlCdbParams > Method detail","text":"Method detail\n\n\n\nExportMapdlCdbParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportMapdlCdbParams.__str__() -> str\n\n\n\n\n\nstatic ExportMapdlCdbParams.print_default()\n\nPrint the default values of ExportMapdlCdbParams object.\n\nExamples\n\n>>> ExportMapdlCdbParams.print_default()\n\n\n\nstatic ExportMapdlCdbParams.set_default(config_settings: str = None, pre_solution_settings: str = None, material_properties: str = None, boundary_conditions: str = None, analysis_settings: str = None, write_cells: bool = None, enable_face_based_labels: bool = None, label_export_params: LabelExportParams = None, write_by_zones: bool = None, consider_general_connectors_as_spot_weld: bool = None, analysis_type: CdbAnalysisType = None, simulation_type: CdbSimulationType = None, analysis_settings_file_name: str = None, write_separate_blocks: bool = None, write_components_with_element_blocks: bool = None, separate_blocks_format_type: SeparateBlocksFormatType = None, export_fasteners_as_swgen: bool = None, export_rigid_bodies_as_rbgen: bool = None, write_component_based_ties: bool = None, mortar_contact_for_ties: bool = None, write_thickness_file: bool = None, contact_element_types: ContactElementTypeParams = None)\n\nSet the default values of the ExportMapdlCdbParams object.\n\nParameters\n\nconfig_settings (str, optional) – MAPDL configuration settings in CDB format to be added at the beginning of the file.\n\npre_solution_settings (str, optional) – MAPDL Settings in CDB format to be added before the solution block in the file.\n\nmaterial_properties (str, optional) – Materials in CDB format to be added to the file.\n\nboundary_conditions (str, optional) – Boundary conditions in CDB format to be added to the file.\n\nanalysis_settings (str, optional) – MAPDL analysis settings in CDB format to be added after the solution block in the file. Note: Boundary conditions can be included into analysis settings.\n\nwrite_cells (bool, optional) – Option to write out cells as part of the file.\n\nenable_face_based_labels (bool, optional) – Use LabelExportParams instead. Parameter enableFaceBasedLabels will be removed in 2025R2.\n\nlabel_export_params (LabelExportParams, optional) – Parameters to control the export of labels as Nodal or Element Components in CDB.\n\nwrite_by_zones (bool, optional) – Option to write zones in the file.\n\nconsider_general_connectors_as_spot_weld (bool, optional) – Option to translate all general connector joints (other than axial) to spot weld type. This is important when nodes are non coincident.\n\nanalysis_type (CdbAnalysisType, optional) – Option to specify CDB analysis type.\n\nsimulation_type (CdbSimulationType, optional) – Simulation type for the file.\n\nanalysis_settings_file_name (str, optional) – File path to export mapdl analysis settings.\n\nwrite_separate_blocks (bool, optional) – Controls whether element blocks should be written separately. When true, writes elements in separate blocks based on the format specified in separate_blocks_format_type. When false, writes all elements into a single block.\n\nwrite_components_with_element_blocks (bool, optional) – Controls whether component definitions should be written within individual element blocks. write_components_with_element_blocks only has effect when write_separate_blocks is true. When write_components_with_element_blocks is true, writes component commands for each element block. When write_components_with_element_blocks is false, writes components separately.\n\nseparate_blocks_format_type (SeparateBlocksFormatType, optional) – Controls the format type when writing separate element blocks. Only used when write_separate_blocks is true.\n\nexport_fasteners_as_swgen (bool, optional) – Option to export fasteners as swgen. When true, translates fasteners into compact swgen blocks in the exported file. The default value is false.\n\nexport_rigid_bodies_as_rbgen (bool, optional) – Option to export rigid bodies as rbgen. When true, translates rigid bodies into compact rbgen blocks in the exported file. The default value is false.\n\nwrite_component_based_ties (bool, optional) – Option to write ties using component-based format. When true, writes ties using component selection and surface generation commands instead of explicit element definitions. The default value is false.\n\nmortar_contact_for_ties (bool, optional) – Option to enable mortar contact for ties. When true, changes the key options for tie surfaces. The default value is false.\n\nwrite_thickness_file (bool, optional) – Option to write a thickness file for spotweld fatigue analysis. If true, writes a file named [exportedFilename].cdb.thick.txt containing thickness information.\n\ncontact_element_types (ContactElementTypeParams, optional) – Parameters for choosing element types for contact surfaces in TIEs and CONTACT PAIRs."},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveLabelResults.html#removelabelresults","title":"RemoveLabelResults","text":"RemoveLabelResults\n\n\n\nclass ansys.meshing.prime.RemoveLabelResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the remove label operation.\n\nParameters\n\nmodel (Model) – Model to create a RemoveLabelResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the remove label operation.\n\njson_data (dict, optional) – JSON dictionary to create a RemoveLabelResults object with provided parameters.\n\nExamples\n\n>>> remove_label_results = prime.RemoveLabelResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveLabelResults.html#overview","title":"RemoveLabelResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the remove label operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RemoveLabelResults object.\n\nset_default\n\nSet the default values of the RemoveLabelResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveLabelResults.html#import-detail","title":"RemoveLabelResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveLabelResults.html#property-detail","title":"RemoveLabelResults > Property detail","text":"Property detail\n\n\n\nproperty RemoveLabelResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the remove label operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/RemoveLabelResults.html#method-detail","title":"RemoveLabelResults > Method detail","text":"Method detail\n\n\n\nRemoveLabelResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRemoveLabelResults.__str__() -> str\n\n\n\n\n\nstatic RemoveLabelResults.print_default()\n\nPrint the default values of RemoveLabelResults object.\n\nExamples\n\n>>> RemoveLabelResults.print_default()\n\n\n\nstatic RemoveLabelResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the RemoveLabelResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the remove label operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAResults.html#igaresults","title":"IGAResults","text":"IGAResults\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.IGAResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, spline_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults of IGA operations.\n\nParameters\n\nmodel (Model) – Model to create a IGAResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if IGA operation is unsuccessful.\n\nwarning_code (WarningCode, optional) – Warning code if IGA operation is partially successful.\n\nspline_ids (Iterable[int], optional) – Ids of the created spline.\n\njson_data (dict, optional) – JSON dictionary to create a IGAResults object with provided parameters.\n\nExamples\n\n>>> iga_results = prime.IGAResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAResults.html#overview","title":"IGAResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if IGA operation is unsuccessful.\n\nspline_ids\n\nIds of the created spline.\n\nwarning_code\n\nWarning code if IGA operation is partially successful.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IGAResults object.\n\nset_default\n\nSet the default values of the IGAResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAResults.html#import-detail","title":"IGAResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAResults.html#property-detail","title":"IGAResults > Property detail","text":"Property detail\n\n\n\nproperty IGAResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if IGA operation is unsuccessful.\n\n\n\nproperty IGAResults.spline_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the created spline.\n\n\n\nproperty IGAResults.warning_code: ansys.meshing.prime.params.primestructs.WarningCode\n\nWarning code if IGA operation is partially successful."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAResults.html#method-detail","title":"IGAResults > Method detail","text":"Method detail\n\n\n\nIGAResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIGAResults.__str__() -> str\n\n\n\n\n\nstatic IGAResults.print_default()\n\nPrint the default values of IGAResults object.\n\nExamples\n\n>>> IGAResults.print_default()\n\n\n\nstatic IGAResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, spline_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the IGAResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if IGA operation is unsuccessful.\n\nwarning_code (WarningCode, optional) – Warning code if IGA operation is partially successful.\n\nspline_ids (Iterable[int], optional) – Ids of the created spline."},{"objectID":"Home","href":"examples/gallery_examples/sg_execution_times.html#computation-times","title":"Computation times","text":"Computation times\n\n00:00.000 total execution time for 0 files from examples/gallery_examples:\n\n\n\n\n\n\n\nExample\n\nTime\n\nMem (MB)\n\nN/A\n\nN/A\n\nN/A"},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureExtraction.html#featureextraction","title":"FeatureExtraction","text":"FeatureExtraction\n\n\n\nclass ansys.meshing.prime.FeatureExtraction(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nProvide functions for all feature extraction operations like extracting edges zonlelets, tracing node paths.\n\nParameters\n\nmodel (Model) – Server model to create FeatureExtraction object."},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureExtraction.html#overview","title":"FeatureExtraction > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_intersection_edge_loops\n\nFinds the edge zonelets formed by intersection of two face zonelets. Performs n to n intersection of face zonelets present in part face zonelets with those in intersecting part face zonelets depending on the input parameters. Order of input does not matter.\n\nextract_features_on_face_zonelets\n\nExtract edges by angle and face zonelet boundary using given extract feature parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for FeatureExtraction.\n\n__exit__\n\nExit context for FeatureExtraction.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureExtraction.html#import-detail","title":"FeatureExtraction > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/FeatureExtraction.html#method-detail","title":"FeatureExtraction > Method detail","text":"Method detail\n\n\n\nFeatureExtraction.__enter__()\n\nEnter context for FeatureExtraction.\n\n\n\nFeatureExtraction.__exit__(type, value, traceback)\n\nExit context for FeatureExtraction.\n\n\n\nFeatureExtraction.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFeatureExtraction.create_intersection_edge_loops(part_face_zonelets: List[ansys.meshing.prime.params.primestructs.PartZonelets], intersecting_part_face_zonelets: List[ansys.meshing.prime.params.primestructs.PartZonelets], params: ansys.meshing.prime.params.primestructs.CreateIntersectionEdgeLoopsParams) -> ansys.meshing.prime.params.primestructs.CreateIntersectionEdgeLoopsResults\n\nFinds the edge zonelets formed by intersection of two face zonelets. Performs n to n intersection of face zonelets present in part face zonelets with those in intersecting part face zonelets depending on the input parameters. Order of input does not matter.\n\nParameters\n\npart_face_zonelets (PartZoneletsArray) – List of part zonelets to be intersected.\n\nintersecting_part_face_zonelets (PartZoneletsArray) – List of part zonelets to intersect with.\n\nparams (CreateIntersectionEdgeLoopsParams) – Parameter to control edge extraction.\n\nReturns\n\nReturns the CreateIntersectionEdgeLoopsResults.\n\nReturn type\n\nCreateIntersectionEdgeLoopsResults\n\nExamples\n\n>>> results = feature_extraction.create_intersection_edge_loops(part_face_zonelets, intersecting_part_face_zonelets, params)\n\n\n\nFeatureExtraction.extract_features_on_face_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ExtractFeatureParams) -> ansys.meshing.prime.params.primestructs.ExtractFeatureResults\n\nExtract edges by angle and face zonelet boundary using given extract feature parameters.\n\nParameters\n\npart_id (int) – Id of input part.\n\nface_zonelets (Iterable[int]) – Ids of input face zonelets.\n\nparams (ExtractFeatureParams) – Parameters used to extract edges.\n\nReturns\n\nReturns a ExtractFeatureResults.\n\nReturn type\n\nExtractFeatureResults\n\nExamples\n\n>>> results = feature_extraction.extract_features_on_face_zonelets(part_id, face_zonelets, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetool/index.html#the-collapsetoolpy-module","title":"The collapsetool.py module","text":"The collapsetool.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetool/index.html#summary","title":"The collapsetool.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCollapseTool\n\nPerforms various collapse operations. For example, split and collapse on face zonelets.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/collapsetool/index.html#description","title":"The collapsetool.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/index.html#the-modelstructspy-module","title":"The modelstructs.py module","text":"The modelstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/index.html#summary","title":"The modelstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nCreateZoneResults\n\nResults associated with the create zone.\n\nDeleteZoneResults\n\nResults associated with the delete zone.\n\nGlobalSizingParams\n\nGlobal sizing parameters.\n\nMergePartsParams\n\nParameters to merge parts.\n\nMergePartsResults\n\nParameters to merge parts.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/index.html#description","title":"The modelstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextraction/FeatureExtraction.html#featureextraction","title":"FeatureExtraction","text":"FeatureExtraction\n\n\n\nclass ansys.meshing.prime.autogen.featureextraction.FeatureExtraction(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nProvide functions for all feature extraction operations like extracting edges zonlelets, tracing node paths.\n\nParameters\n\nmodel (Model) – Server model to create FeatureExtraction object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextraction/FeatureExtraction.html#overview","title":"FeatureExtraction > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_intersection_edge_loops\n\nFinds the edge zonelets formed by intersection of two face zonelets. Performs n to n intersection of face zonelets present in part face zonelets with those in intersecting part face zonelets depending on the input parameters. Order of input does not matter.\n\nextract_features_on_face_zonelets\n\nExtract edges by angle and face zonelet boundary using given extract feature parameters.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for FeatureExtraction.\n\n__exit__\n\nExit context for FeatureExtraction.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextraction/FeatureExtraction.html#import-detail","title":"FeatureExtraction > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextraction/FeatureExtraction.html#method-detail","title":"FeatureExtraction > Method detail","text":"Method detail\n\n\n\nFeatureExtraction.__enter__()\n\nEnter context for FeatureExtraction.\n\n\n\nFeatureExtraction.__exit__(type, value, traceback)\n\nExit context for FeatureExtraction.\n\n\n\nFeatureExtraction.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFeatureExtraction.create_intersection_edge_loops(part_face_zonelets: List[ansys.meshing.prime.params.primestructs.PartZonelets], intersecting_part_face_zonelets: List[ansys.meshing.prime.params.primestructs.PartZonelets], params: ansys.meshing.prime.params.primestructs.CreateIntersectionEdgeLoopsParams) -> ansys.meshing.prime.params.primestructs.CreateIntersectionEdgeLoopsResults\n\nFinds the edge zonelets formed by intersection of two face zonelets. Performs n to n intersection of face zonelets present in part face zonelets with those in intersecting part face zonelets depending on the input parameters. Order of input does not matter.\n\nParameters\n\npart_face_zonelets (PartZoneletsArray) – List of part zonelets to be intersected.\n\nintersecting_part_face_zonelets (PartZoneletsArray) – List of part zonelets to intersect with.\n\nparams (CreateIntersectionEdgeLoopsParams) – Parameter to control edge extraction.\n\nReturns\n\nReturns the CreateIntersectionEdgeLoopsResults.\n\nReturn type\n\nCreateIntersectionEdgeLoopsResults\n\nExamples\n\n>>> results = feature_extraction.create_intersection_edge_loops(part_face_zonelets, intersecting_part_face_zonelets, params)\n\n\n\nFeatureExtraction.extract_features_on_face_zonelets(part_id: int, face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ExtractFeatureParams) -> ansys.meshing.prime.params.primestructs.ExtractFeatureResults\n\nExtract edges by angle and face zonelet boundary using given extract feature parameters.\n\nParameters\n\npart_id (int) – Id of input part.\n\nface_zonelets (Iterable[int]) – Ids of input face zonelets.\n\nparams (ExtractFeatureParams) – Parameters used to extract edges.\n\nReturns\n\nReturns a ExtractFeatureResults.\n\nReturn type\n\nExtractFeatureResults\n\nExamples\n\n>>> results = feature_extraction.extract_features_on_face_zonelets(part_id, face_zonelets, params)"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#mesh-a-pipe-t-section-for-structural-thermal-and-fluid-flow-analysis","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis","text":"Mesh a pipe T-section for structural thermal and fluid flow analysis\n\nSummary: This example demonstrates how to mesh a pipe T-section for both\nstructural thermal and fluid flow simulation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#objective","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Objective","text":"Objective\n\nThis example meshes the solids of a pipe T-section for a\nstructural thermal analysis using tetrahedral elements and uses the\nwrapper to extract the fluid domain and mesh using polyhedral cells with\nprismatic boundary layers."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#procedure","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance and connect the PyPrimeMesh client.\n\nRead the CAD geometry.\n\nMesh for the structural thermal analysis.\n\nWrite the mesh for the structural thermal analysis.\n\nExtract the fluid by wrapping.\n\nMesh with polyhedral and prisms.\n\nWrite the mesh for the fluid simulation."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#launch-ansys-prime-server","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch the Ansys Prime Server instance and connect the client.\nGet the client model and instantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#read-cad-geometry","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Read CAD geometry","text":"Read CAD geometry\n\nDownload the example FMD geometry file.\nThe FMD  file format is exported from SpaceClaim and is compatible with Linux.\nRead and display the geometry file.\nThe file contains several unmeshed parts, which is what you would get after you\nimport from a CAD file.\nFor Windows OS users, the SCDOC format is also available:\npipe_tee = prime.examples.download_pipe_tee_scdoc()\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#mesh-for-structural","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Mesh for structural","text":"Mesh for structural\n\nSurface mesh using curvature sizing.\nVolume mesh with tetrahedral elements.\nDelete unwanted capping surface geometries by deleting\nparts that do not have any volume zones.\nDisplay structural thermal mesh ready for export.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#write-structural-mesh","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Write structural mesh","text":"Write structural mesh\n\nLabels are exported to the CDB file as components for\napplying load boundary conditions in the solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#extract-fluid-by-wrapping","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Extract fluid by wrapping","text":"Extract fluid by wrapping\n\nYou can deal with the small internal diameter change between flanges in several ways:\n\nConnect the geometry to extract a volume and refine the\nmesh around this detail to capture.\n\nModify the geometry to remove the feature.\n\nWrap to extract the internal flow volume and walk over the feature.\n\nThis example wraps and walks over these features.\n\nRead in the geometry again.\n\nUse a constant size wrap to walk over the diameter change\nfeature and extract the largest internal volume as the fluid.\n\nBy default, the wrap uses all parts as input and deletes the input\ngeometry after wrapping unless keep_input is set as True.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#volume-mesh-fluid","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Volume mesh fluid","text":"Volume mesh fluid\n\nCreate zones for each label to use for boundary condition definitions.\nVolume mesh with prism polyhedral, not growing prisms from inlets and outlets.\nVisualize the generated volume mesh.\nWhen displaying, you can avoid displaying unnecessary edge zones.\nYou can clearly see the prism layers that were specified by the Prism control.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#write-fluid-mesh","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Write fluid mesh","text":"Write fluid mesh\n\nWrite a MSH file for the Fluent solver."},{"objectID":"Home","href":"examples/gallery_examples/gallery/03_lucid_pipe_tee.html#exit-pyprimemesh","title":"Mesh a pipe T-section for structural thermal and fluid flow analysis > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (2 minutes 29.724 seconds)\n\n\n\nDownload Jupyter notebook: 03_lucid_pipe_tee.ipynb\n\nDownload Python source code: 03_lucid_pipe_tee.py\n\nDownload zipped: 03_lucid_pipe_tee.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"api/ansys/meshing/prime/ErrorCode.html#errorcode","title":"ErrorCode","text":"ErrorCode\n\n\n\nclass ansys.meshing.prime.ErrorCode\n\nError codes associated with the failure of PyPrimeMesh operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ErrorCode.html#overview","title":"ErrorCode > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nADDINGPROVIDEDENTITIESNOTSUPPORTEDFORTOPOLOGYPART\n\nAdding provided entities is not supported for part with topology data.\n\nADDTHICKNESSRESULTSFAILED\n\nAdding thickness failed.\n\nAITOVERLAPALONGMULTIFOUND\n\nTopology identification failed because of overlapping faces.\n\nALIGNMENTFAILED\n\nAlignment failed.\n\nALREADYVOLUMEMESHED\n\nVolume is already meshed.\n\nAUTOMESHFAILED\n\nAuto meshing failed.\n\nAUTOMESHHEXCOREFAILED\n\nHex generation part of volume meshing failed.\n\nAUTOMESHINITFAILED\n\nAuto mesh initialization failed.\n\nAUTOMESHINVALIDMAXSIZE\n\nInvalid max size for auto volume meshing.\n\nAUTONODEMOVEFAILED\n\nAuto node move failed.\n\nAUTOQUADMESHER_INVALIDMINMAXSIZES\n\nDifference in maximum value and minimum value is negative.\n\nAUTOQUADMESHER_NEGATIVEINPUTPARAMETER\n\nAutoquadmesher error codes.\n\nBOIRESULTSFAILED\n\nBOI creation failed.\n\nCADGEOMETRYNOTFOUND\n\nNo CAD Geometry found for projections.\n\nCADIMPORTFAILED\n\nCAD import failed.\n\nCELLSEPARATIONFAILED\n\nCell separation failed.\n\nCHECKPERIODICPAIRSFAILED\n\nCould not find a matching periodic face pair.\n\nCOLOCATEFUSEDNODESFAILED\n\nColocation of fused nodes failed.\n\nCOMPUTEVOLUMESFAILED\n\nCompute volumes failed.\n\nCONTACTPATCHRESULTSFAILED\n\nContact patch creation process failed. Check the inputs.\n\nCONTROLNOTFOUND\n\nControl not found.\n\nCREATEBOI_INVALIDFLOWDIRECTION\n\nBOI creation failed. Invalid flow or wake direction.\n\nCREATEBOI_INVALIDSCALE\n\nBOI creation failed. Scale factors should not be less than one.\n\nCREATEBOI_INVALIDSCOPE\n\nBOI creation failed. Invalid face zonelets as input.\n\nCREATEBOI_INVALIDTYPEFORWRAP\n\nBOI creation failed. Wrapping is invalid for this BOI type.\n\nCREATEBOI_INVALIDWAKELEVELS\n\nBOI creation failed. Invalid wake levels input.\n\nCREATEBOI_IVALIDWRAPMESHSIZE\n\nBOI creation failed. Wrap cannot be performed with invalid mesh size.\n\nCREATECAPONFACEZONELETSFAILED\n\nFailed to create cap on face zonelets.\n\nCREATECONTACTPATCH_INVALIDCONTACTPATCHAXIS\n\nContact patch creation process failed. Invalid contact patch creation axis.\n\nCREATECONTACTPATCH_INVALIDOFFSETDISTANCE\n\nContact patch creation process failed. Scale factors should not be less than zero.\n\nCREATECONTACTPATCH_INVALIDTOLERANCEVALUE\n\nContact patch creation process failed. Tolerance value should not be less than zero.\n\nCREATEEDGEZONELETFAILED\n\nCreating edge zonelet failed.\n\nDELETECONTROLSFAILED\n\nDelete controls failed.\n\nDELETEFRINGESANDOVERLAPSFAILED\n\nDeleting fringes and overlaps failed.\n\nDELETEMESHFACESFAILED\n\nDelete Mesh faces failed\n\nDELETEMESHFACES_CELLFOUND\n\nDeleting faces failed as they have cell neighbors.\n\nDELETEMESHFACES_TOPOLOGYNOTSUPPORTED\n\nTopoentities do not support deleting faces.\n\nDELETEMESHFAILED\n\nDeleting mesh failed.\n\nDELETEPARTSFAILED\n\nDelete parts failed.\n\nDELETEVOLUMESFAILED\n\nDelete volumes failed.\n\nDELETEZONELETSCONNECTEDTOCELLS\n\nCannot delete zonelets connected to volume mesh.\n\nDELETEZONELETSFAILED\n\nDelete zonelets failed.\n\nDUPLICATEFACESFOUND\n\nDuplicate faces found.\n\nDUPLICATENODESFOUND\n\nDuplicate nodes found.\n\nEDGEINTERSECTINGFACEFOUND\n\nEdge intersecting face found.\n\nENTITIESSHOULDBEADDEDTOZONEUSINGPARTITBELONGS\n\nEntities should be added to zone using part it belongs.\n\nEXPORTFLUENTCASEFAILED\n\nExport fluent case failed.\n\nEXPORTFLUENTMESHINGMSHFAILED\n\nExport fluent meshing mesh failed.\n\nEXPORTSTLFAILED\n\nExport STL failed.\n\nEXPORTSTLFAILEDWITHEMPTYPARTIDLIST\n\nExport STL failed. List of part ids is empty.\n\nEXPORTSTLFAILEDWITHHIGHERORDERMESH\n\nExport STL not supported for higher order mesh.\n\nEXPORTSTLFAILEDWITHINCORRECTPARTID\n\nExport STL failed. Part id is incorrect.\n\nEXPORTSTLFAILEDWITHPOLYFACES\n\nExport STL not supported for mesh with poly faces.\n\nEXPORTSTLFAILEDWITHQUADFACES\n\nExport STL not supported for mesh with quad faces.\n\nEXPORTSTLFAILEDWITHTOPOLOGY\n\nExport STL not supported for part with topology data.\n\nEXTRACTFEATURESBYANGLEFAILED\n\nFeature extraction by angle failed.\n\nEXTRACTFEATURESBYEDGESFAILED\n\nExtracting features by angle failed.\n\nEXTRACTFEATURESBYINTERSECTIONFAILED\n\nFeature extraction by intersection failed.\n\nEXTRACTVOLUMESFAILED\n\nExtract volumes failed.\n\nFACEZONELETSFEATURESNOTUPTODATE\n\nFace zonelets features are not up to date.\n\nFACEZONELETSHAVECELLSCONNECTED\n\nFace zonelets have cells connected.\n\nFILENOTFOUND\n\nFile path or name not found.\n\nFILLHOLEFAILED\n\nUnable to create capping surface.\n\nFREEZEMESHERROR\n\nCannot remesh freezed mesh.\n\nFUSEINTERIORFAILED\n\nFusing interior region of overlap failed.\n\nFUSEOPTIONINVALID\n\nInvalid option chosen to connect two different parts.\n\nGETELEMENTCOUNTFAILED\n\nFailed to get element count.\n\nGETSTATISTICSFAILED\n\nFailed to get mesh statistics.\n\nIGA_EDGEPATHCOMPUTATIONFAILED\n\nEdge path computation failed.\n\nIGA_HREFINEMENTFAILED\n\nH-refinement of spline failed.\n\nIGA_INCORRECTCONTROLPOINTSIZEWRTDEGREE\n\nIncorrect control point size with respect to degree.\n\nIGA_INCORRECTCONTROLPOINTSIZEWRTINPUT\n\nIncorrect control point size with respect to mesh size.\n\nIGA_INCORRECTDEGREE\n\nIncorrect degree.\n\nIGA_INVALIDINPUTFILEFORGENUSZEROFITTING\n\nInvalid model for genus-zero spline fitting.\n\nIGA_INVALIDINPUTFILEFORSTRUCTUREDHEXMESHFITTING\n\nInvalid model for structured hex-mesh spline fitting.\n\nIGA_NEGATIVEJACOBIAN\n\nSpline has negative jacobian.\n\nIGA_NOCELLZONELETS\n\nNo cell zonelets found.\n\nIGA_NODEINDEXINGFAILED\n\nHex mesh is unstructured.\n\nIGA_NOFACEZONELETS\n\nNo face zonelets found.\n\nIGA_NURBSFITTINGFAILED\n\nSpline fitting failed.\n\nIGA_NURBSOPFAILED\n\nSpline operation failed.\n\nIGA_NURBSSMOOTHFAILED\n\nSmoothing of spline failed.\n\nIGA_PERIODICKNOTVECTORCONVERSIONFAILED\n\nPeriodic knot conversion of spline failed.\n\nIGA_PREFINEMENTFAILED\n\nP-refinement of spline failed.\n\nIGA_QUADRATICMESHINPUT\n\nQuadratic mesh is not supported for solid spline creation.\n\nIGA_QUADTOSPLINEBASISFAILED\n\nQuad to spline operation failed.\n\nIGA_UNIFORMTRIMMEDNURBSFAILED\n\nUniform trimmed spline creation failed.\n\nIMPORTABAQUSFAILEDDURINGMESHCREATION\n\nImport Abaqus failed. Failed to create mesh entities.\n\nIMPORTABAQUSFAILEDWITHPARSINGFAILURE\n\nImport Abaqus failed. Failed to parse file.\n\nIMPORTABAQUSFAILEDWITHUNKNOWNERROR\n\nImport Abaqus failed. Failed with unknown error.\n\nIMPORTFLUENTCASEFAILED\n\nFailed to import fluent case file.\n\nIMPORTFLUENTMESHINGMSHFAILED\n\nFailed to import fluent meshing mesh file.\n\nIMPRINTBOUNDARYEDGESFAILED\n\nImprint of boundary edges failed.\n\nIMPRINTBOUNDARYNODESFAILED\n\nImprint of boundary nodes failed.\n\nIMPROVESURFACEMESHQUALITYFAILED\n\nImprove surface mesh quality failed.\n\nINCLUDEKFILENOTFOUND\n\nInclude keyword file not found.\n\nINCREMENTALVOLUMEMESHINGNOTSUPPORTED\n\nIncremental volume meshing is not supported.\n\nINPUTNOTCOMPLETE\n\nInput provided is incomplete.\n\nINTERRUPTED\n\nMethod call interrupted.\n\nINTERSECTIONINCUTTERVOLUMES\n\nFound overlapping or intersecting cutter volumes.\n\nINTERSECTIONINTARGETVOLUMES\n\nFound overlapping or intersecting target volumes.\n\nINVALIDCELLQUALITYLIMIT\n\nInvalid cell quality limit.\n\nINVALIDCMBLOCKFORMAT\n\nCMBLOCK command format error in CDB file.\n\nINVALIDCONTROLPARAMS\n\nInvalid control parameters.\n\nINVALIDCURVATURESIZINGINPUT\n\nInvalid curvature sizing input.\n\nINVALIDFILEEXTENSIONFORFLUENTCASEEXPORT\n\nProvided file extension is invalid. If cff_format is set to False, then supported extensions are .cas and .cas.gz. If cff_format is set to True, then supported extension is .cas.h5 .\n\nINVALIDFIRSTASPECTRATIO\n\nInvalid first aspect ratio.\n\nINVALIDFIRSTHEIGHT\n\nInvalid first height.\n\nINVALIDGLOBALMINMAX\n\nInvalid global min and max value.\n\nINVALIDGROWTHRATE\n\nInvalid growth rate.\n\nINVALIDINPUTPART\n\nInvalid input part.\n\nINVALIDINPUTPOINT\n\nInvalid input point.\n\nINVALIDINPUTVOLUMES\n\nList of volume ids provided is empty or incorrect.\n\nINVALIDINPUTZONELETS\n\nInvalid input zonelets.\n\nINVALIDLASTASPECTRATIO\n\nInvalid last aspect ratio.\n\nINVALIDLAYERS\n\nInvalid number of layers.\n\nINVALIDNEIGHBORVOLUMES\n\nInvalid neighbor volumes selected to merge volumes.\n\nINVALIDPLANEPOINTS\n\nInvalid plane points, cannot define a plane.\n\nINVALIDPRISMCONTROLS\n\nInvalid prism controls.\n\nINVALIDPRISMCONTROLS_INCORRECTSCOPEENTITY\n\nInvalid scope entity.\n\nINVALIDPROXIMITYSIZINGINPUT\n\nInvalid proximity sizing input.\n\nINVALIDREGISTERID\n\nInvalid register id provided. Register ids between 1 to 28 are valid.\n\nINVALIDSCOPEENTITYTYPEINPUT\n\nInvalid input scope entity type.\n\nINVALIDSHELLBLCONTROLS\n\nInvalid ShellBL controls.\n\nINVALIDSHELLBLCONTROLS_INCORRECTSCOPEENTITY\n\nInvalid scope entity.\n\nINVALIDSIZECONTROLINPUTS\n\nInvalid size control input.\n\nINVALIDSIZECONTROLS\n\nInvalid size controls.\n\nINVALIDSIZECONTROLSCOPE\n\nInvalid size control scope.\n\nINVALIDTHINVOLUMECONTROLS\n\nInvalid input provided for thin volume control.\n\nINVALIDTRANSFORMATIONMATRIX\n\nInvalid transformation matrix.\n\nINVALIDVOLUMECONTROLS\n\nInvalid volume controls specified for volume meshing.\n\nINVALIDWRAPPERCONTROL\n\nInvalid wrapper control.\n\nLOCALSURFERINVALIDNUMRINGS\n\nInvalid number of rings input for the local surface mesh operation.\n\nMATCHMORPH_BCPAIRINPUTTYPEMISMATCH\n\nEntity type does not match with input for defined boundary condition pair.\n\nMATCHMORPH_INVALIDSOURCEINPUT\n\nInvalid source input for match morphing.\n\nMATERIALPOINTWITHGIVENIDDOESNTEXIST\n\nMaterial point with the given ID already exists.\n\nMATERIALPOINTWITHGIVENNAMEDOESNTEXIST\n\nMaterial point with the given name does not exist.\n\nMATERIALPOINTWITHSAMENAMEEXISTS\n\nMaterial point with the same name already exists.\n\nMERGEPARTSFAILED\n\nMerge parts failed.\n\nMERGEPARTSWANDWOTOPO\n\nMerge parts with topology and parts without topology are not supported.\n\nMERGESMALLZONELETSSUPPORTEDFORFACEZONELETS\n\nMerge small zonelets option is supported for only face zonelets.\n\nMERGEVOLUMESFAILED\n\nMerge volumes failed.\n\nMERGEVOLUMESNOTSUPPORTEDFORTOPOLOGYPART\n\nMerge volumes is not supported for part with topology data.\n\nMERGEZONELETSFAILED\n\nMerge zonelets failed.\n\nMERGEZONELETSNOTSUPPORTEDFORTOPOLOGYPART\n\nMerge zonelets is not supported for part with topology data.\n\nMESHDECOUPLEDFAILED\n\nInvalid load balancing or failed in volume meshing for one or more parts.\n\nMESHNOTFOUNDTOEXPORTFLUENTMESHINGMESH\n\nMesh not found to export fluent meshing mesh.\n\nMICROSTRUCTUREBADSHAPEPROPERTIES\n\nBad shape properties.\n\nMICROSTRUCTUREINVALIDELEMENTTYPE\n\nInvalid input provided. Invalid Element Type.\n\nMICROSTRUCTUREINVALIDSHAPETYPE\n\nInvalid input provided. Invalid Shape.\n\nMICROSTRUCTUREQUADRATICHEXREQUIREDQUADRATICVOXELGRID\n\nVolume mesh generation for hexahedra requires generation of a quadratic voxel grid.\n\nMICROSTRUCTUREREMESHNOTSUPPORTED\n\nSurface remesh operation is not supported.\n\nMICROSTRUCTURESMOOTHNOTSUPPORTED\n\nSmoothing operation is not supported.\n\nMICROSTRUCTUREWRONGAPICALLSEQUENCE\n\nWrong API call sequence.\n\nMORPHER_COMPUTEBCS\n\nFailed to compute boundary conditions.\n\nMULTIZONEMESHER_BLOCKINGFAILED\n\nCreating MultiZone blocking failed.\n\nMULTIZONEMESHER_MESHINGFAILED\n\nGenerating MultiZone mesh failed.\n\nMULTIZONEMESHER_MESHTRANSFERFAILED\n\nMultiZone mesh transfer failed.\n\nMULTIZONEMESHER_MULTIPLECONTROLSNOTSUPPORTED\n\nMultiZone mesh does not support multiple controls.\n\nMULTIZONEMESHER_NOVOLUMESFORGEOMETRYTRANSFER\n\nNo volumes for geometry import.\n\nMULTIZONEMESHER_NOVOLUMESSCOPEDINCURRENTPART\n\nNo volumes for geometry import in the current part.\n\nMULTIZONEMESHER_USERINPUTTOPOLOGYMISSING\n\nInput does not have topology for MultiZone mesh.\n\nNOACTIVESFFOUND\n\nNo active size fields found.\n\nNOCELLSSEPARATED\n\nNo cells separated based on given input.\n\nNOERROR\n\nNo error.\n\nNOINPUT\n\nNo input provided.\n\nNOTSUPPORTEDFORDISTRIBUTEMESHING\n\nMethod not supported for distributed meshing.\n\nNOTSUPPORTEDFORHIGHERORDERMESHPART\n\nOperation does not support higher order elements.\n\nNOTSUPPORTEDFORNONQUADFACEZONE\n\nOperation supports only quads.\n\nNOTSUPPORTEDFORNONTRIFACEZONE\n\nOnly triangular face zone is supported.\n\nNOTSUPPORTEDFORPOLYMESHPART\n\nOperation does not support poly elements.\n\nNOTSUPPORTEDFORTOPOLOGYPART\n\nNot supported for part with topology data.\n\nNUMENMETHODNOTFOUND\n\nCould not find numen method.\n\nOCTREELIMITREACHED\n\nLimit reached for the number of octants supported.\n\nOGRIDREFINEFAILED\n\nPost refinement of ShellBl quads failed.\n\nOUTOFMEMORY\n\nOut of memory.\n\nPARTDOESNOTHAVETOPOLOGY\n\nPart does not have topology.\n\nPARTHASTOPOLOGY\n\nPart has a topology.\n\nPARTNOTFOUND\n\nGiven part not found.\n\nPARTNOTMESHED\n\nPart is not meshed.\n\nPATHNOTFOUND\n\nInvalid path.\n\nPERIODICEDGESNOTSUPPORTEDFORSHELLBL\n\nPeriodic surfaces selected for ShellBL generation are not supported.\n\nPERIODICRECOVERYFORALREADYVOLUMEMESHEDPART\n\nPeriodic recovery unsupported for already volume meshed part.\n\nPERIODICSURFACESEDGESMISMATCH\n\nEdge entities do not match on periodic source and target surfaces.\n\nPERIODICSURFACESNOTSUPPORTEDFORPRISMS\n\nPeriodic surfaces selected for prism generation are not supported.\n\nPLANECOLLINEARPOINTS\n\nCollinear or duplicate points given to define plane.\n\nPLUGINLOADFAILURE\n\nFailed to load Surface Editor plugin.\n\nPOLYMESHFAILED\n\nPoly meshing failed.\n\nPREPAREFORVOLUMEMESHINGFAILED\n\nPrepare for volume meshing failed.\n\nPRISMMESHFAILED\n\nPrism meshing failed.\n\nPROJECTONCADGEOMETRYFAILED\n\nProjection on CAD Geometry failed.\n\nPYRAMIDMESHFAILED\n\nPyramid meshing failed.\n\nQUADRATICMESHSUPPORTEDONLYFORTETS\n\nQuadratic elements can only be generated for tetrahedral elements.\n\nQUADRATICMESH_WRITEMESHFAILED\n\nWriting failed with quadratic mesh.\n\nQUADRATICTETNOTSUPPORTEDINPARALLEL\n\nQuadratic tetrahedal meshing is not supported in parallel mode.\n\nQUADRATICTETNOTSUPPORTEDWITHPRISMS\n\nQuadratic tetrahedral meshing is not supported with prism.\n\nREADCDBFAILED\n\nReading CDB file failed.\n\nREADKEYWORDFILEFAILED\n\nReading LS-Dyna Keyword file failed.\n\nREADMESHFAILED\n\nReading mesh file failed.\n\nREADPMDATFAILED\n\nPMDAT file read failed.\n\nREADSHELLBLCONTROLFAILED\n\nRead thin ShellBL control failed.\n\nREADSIZECONTROLFAILED\n\nReading size control file failed.\n\nREADSIZEFIELDFAILED\n\nReading size field file failed.\n\nRECOVERPERIODICSURFACESFAILED\n\nUnable to recover periodic surfaces.\n\nRECOVERPERIODICSURFACESINVALIDSCOPE\n\nInvalid scope input for periodic surface recovery.\n\nREFINEATCONTACTSFAILED\n\nFailed to refine at contacts.\n\nREFRESHSIZEFIELDSFAILED\n\nRefreshing size field failed.\n\nREMESHFACEZONELETSLOCALLYNOTSUPPORTEDFORTOPOLOGYPART\n\nRemesh face zonelets locally is not supported for topology part.\n\nREMESHFACEZONELETSNOTSUPPORTEDFORTOPOLOGYPART\n\nRemesh face zonelets is not supported for topology part.\n\nSCAFFOLDERBADINPUTEMPTYTOPO\n\nIncorrect input. No topo faces or edges in input.\n\nSCAFFOLDERBADINPUTNOFREEFACES\n\nIncorrect input. No free faces in input.\n\nSCAFFOLDERBADINPUTPARAMS\n\nIncorrect input parameters.\n\nSCAFFOLDERINVALIDABSOLUTEDISTOL\n\nInvalid absolute distance tolerance for scaffold operation.\n\nSCAFFOLDERINVALIDCONSTANTMESHSIZE\n\nInvalid constant mesh size input for scaffold operation.\n\nSCALINGFAILED\n\nScaling failed.\n\nSEPARATIONRESULTSFAILED\n\nSeparation failed.\n\nSETNAMEFAILED\n\nSet name failed.\n\nSHELLBLCONTROLFAILED\n\nWrite ShellBL control failed.\n\nSHELLBLFAILED\n\nShellBL creation failed.\n\nSHELLBLFEWLAYERS\n\nOnly few ShellBL layers are created.\n\nSHELLBLNOMESH\n\nShellBL is not supported for unmeshed topofaces.\n\nSHELLBLQUADS\n\nShellBL quads.\n\nSHELLBLWRONGTOPO\n\nFound topofaces with invalid topology.\n\nSIDEZONELETSNOTFIT\n\nSide face zonelets are not sweepable for thin volume mesh.\n\nSIGSEGV\n\nSegmentation violation.\n\nSIZEFIELDCOMPUTATIONFAILED\n\nSize field computation failed.\n\nSIZEFIELDNOTFOUND\n\nSize field not found.\n\nSIZEFIELDTYPENOTSUPPORTED\n\nProvided Size Field Type is not supported by this operation.\n\nSMOOTHSIZETRANSITIONNOTSUPPORTEDFORTOPO\n\nSmooth size transition option is not supported for topology surface meshing yet.\n\nSOURCEFACINGCELLZONELETS\n\nSource face zonelets facing existing volume mesh.\n\nSOURCEORTARGETNOTSPECIFIED\n\nNo target or source faces specified.\n\nSOURCETARGETZONELETSNOTFIT\n\nSource and target zonelets do not fit to thin volume mesh.\n\nSPHEREATINVALIDNORMALNODESFAILED\n\nSphere creation at invalid normals failed.\n\nSPLITANDCOLLAPSEFACEELEMENTSFAILED\n\nFailed to split and collapse face element(s).\n\nSPLITINTERSECTINGBOUNDARYEDGESFAILED\n\nSplitting of intersecting boundary edges failed.\n\nSPLITTOTRIFAILED\n\nShellBL quads split to triangles failed.\n\nSTACKER_BASEFACEUNMESHED\n\nBase face list input has unmeshed topofaces.\n\nSTACKER_FACESEPARATIONFAILED\n\nStacker failed to separate base face.\n\nSTACKER_FAILED\n\nStacker failed to mesh the model.\n\nSTACKER_INCORRECTBODYDEFINITION\n\nSome bodies are intersecting or incorrectly defined.\n\nSTACKER_INVALIDBASEFACEINPUT\n\nBase face list input is invalid.\n\nSTACKER_INVALIDINPUTVOLUMES\n\nInvalid input volumes provided to stacker.\n\nSTACKER_INVALIDPARAMS\n\nInvalid parameters provided to stacker.\n\nSTACKER_MESHEDFACESFOUND\n\nSome faces in the input model have existing mesh.\n\nSTACKER_NOFACEFOUNDINVOLUMES\n\nNo faces are found in the specified volumes.\n\nSTACKER_NONSTACKABLEVOLUMESFOUND\n\nSome volumes are not aligned in the stacking direction.\n\nSTITCHENTITIESFAILED\n\nStitch entities failed.\n\nSTITCHWITHPRESERVEDENTITIESFAILED\n\nStitch with preserved entities failed.\n\nSUBTRACTVOLUMEFAILED\n\nFailed to subtract volumes.\n\nSUBTRACTZONELETSFAILED\n\nUnable to subtract cutters from input zonelets.\n\nSURFACEFEATURETYPENOTSUPPORTED\n\nSurface search for provided feature type is not supported.\n\nSURFACESEARCHFAILED\n\nSurface search failed.\n\nSURFACESEARCHPARTWITHMESHNOTFOUND\n\nPart with mesh not found for surface quality check.\n\nSURFERAUTOSIZEMUSTBEVOLUMETRIC\n\nAuto sizing must be of volumetric type.\n\nSURFERAUTOSIZEQUADUNSUPPORTED\n\nAuto sizing for quad meshing is not supported.\n\nSURFERCANNOTREMESHPERIODICZONELETS\n\nCannot remesh periodic face zonelets.\n\nSURFERFAILED\n\nSurface meshing failed.\n\nSURFERINVALIDANGLES\n\nInvalid Corner angle or min angle more than max angle specified for surface meshing.\n\nSURFERINVALIDCONSTANTSIZE\n\nInvalid size for constant size surface meshing.\n\nSURFERINVALIDINPUT\n\nInvalid input for surface meshing.\n\nSURFERINVALIDMINORMAXSIZES\n\nInvalid min or max size for surface meshing.\n\nSURFERLAYEREDQUADFAILED\n\nFailed to layer quad meshing.\n\nSURFERNONMANIFOLDEDGE\n\nNon manifold edge for meshing.\n\nSURFEROPENINITIALFRONTLOOP\n\nOpen initial front loop for meshing.\n\nSURFERQUADFAILED\n\nQuad surface meshing failed.\n\nTARGETWITHCELLZONELETS\n\nTarget face zonelets with volume mesh on both side.\n\nTARGETZONELETS_NOTWATERTIGHT\n\nTarget zonelets do not form a watertight volume.\n\nTARGETZONELETS_SELFINTERSECTING\n\nTarget zonelets form a self intersecting volume.\n\nTETIMPROVEFAILED\n\nTet improve failed.\n\nTHINVOLUMECONTROLINVALIDCONTROL\n\nSame face scope is set as target for multiple thin volume controls.\n\nTHINVOLUMECONTROLINVALIDNUMBEROFLAYER\n\nInvalid number of layers provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDSCOPE\n\nSame source and target scope provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDSOURCESCOPE\n\nInvalid source scope provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDSOURCESCOPEENTITY\n\nInvalid source scope entity provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDTARGETSCOPE\n\nInvalid target scope provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDTARGETSCOPEENTITY\n\nInvalid target scope entity provided for thin volume control.\n\nTHINVOLUMECONTROLINVALIDVOLUMESCOPE\n\nInvalid volume scope provided for thin volume control.\n\nTHINVOLUMECONTROLSAMESOURCEFORMORETHANTWOCONTROL\n\nSame face scope is set as source for more than two thin volume controls.\n\nTHINVOLUMECONTROLTOPOLOGYNOTSUPPORTED\n\nThin volume mesh controls not supported for part with topology data.\n\nTHINVOLUMEMESHFAILED\n\nThin volume meshing failed.\n\nTHINVOLUMEMESHNOTSUPPORTEDWITHFACEBASEDDATABASE\n\nThin volume mesh is not supported with face based database.\n\nTOLERANCEVALUEINVALID\n\nInvalid tolerance value specified.\n\nTOOLZONELETS_NOTWATERTIGHT\n\nTool zonelets do not form a watertight volume.\n\nTOOLZONELETS_SELFINTERSECTING\n\nTool zonelets form a self intersecting volume.\n\nTOPODATANOTFOUND\n\nTopoData not found.\n\nTOPOEDGESREMESHFAILED\n\nFailed to remesh topoedges.\n\nTOPOFACESREMESHFAILED\n\nFailed to remesh topofaces.\n\nTRANSFORMATIONFAILED\n\nTransformation failed.\n\nTRIANGULATIONFAILED\n\nTriangulation failed.\n\nUNITEZONELETSFAILED\n\nFailed to unite input zonelets.\n\nUNKNOWN\n\nUnknown error.\n\nUNSUPPORTEDFILEEXTENSIONFORFLUENTCASE\n\nProvided file extension is not supported. Supported extensions are .cas, .cas.gz and .cas.h5.\n\nUNSUPPORTEDFILEEXTENSIONFORFLUENTMESHINGMESH\n\nProvided file extension is not supported. Supported extensions are .msh and .msh.gz.\n\nUNSUPPORTEDFILEEXTENSIONFORFLUENTSIZEFIELD\n\nProvided file extension is not supported. Supported extensions are .sf and .sf.gz.\n\nUNSUPPORTEDFILEEXTENSIONFORKEYWORDFILE\n\nProvided file extension is not supported. Supported extensions are .k and .key.\n\nUNSUPPORTEDFILEEXTENSIONFORMAPDLCDB\n\nProvided file extension is not supported. Supported extension is .cdb.\n\nUNSUPPORTEDFILEEXTENSIONFORPMDAT\n\nProvided file extension is not supported. Supported extensions are .pmdat and .pmdat.gz.\n\nUNSUPPORTEDFILEEXTENSIONFORSIZEFIELD\n\nProvided file extension is not supported. Supported extensions are .psf and .psf.gz.\n\nVOLUMEMESHNOTFOUND\n\nVolume mesh not found.\n\nVOLUMEMESH_MIDNODESNOTSUPPORTED\n\nMid side nodes are not supported.\n\nVOLUMENOTFOUND\n\nVolumes not found.\n\nVOLUMESEARCHFAILED\n\nVolume search failed.\n\nVOLUMESEARCHPARTWITHMESHNOTFOUND\n\nPart with mesh not found for volume quality check.\n\nVOLUMESNOTUPTODATE\n\nVolumes are not updated.\n\nVOLUMEZONESNOTFOUNDTOEXPORTFLUENTCASE\n\nVolume zones are not found to export fluent case.\n\nVT_COLLAPSESHORTEDGESFAILED\n\nCollapse short edges operation failed.\n\nVT_CREATELEADINGEDGEFAILED\n\nCreate leading edge operation failed.\n\nVT_CREATEMIDEDGEFAILED\n\nCreate mid edge operation failed.\n\nVT_FILLANNULARHOLEFAILED\n\nFill annular hole operation failed.\n\nVT_FILLHOLEFAILED\n\nFill hole operation failed.\n\nVT_INVALIDINPUT\n\nInvalid input provided for VT operation.\n\nVT_MERGEFACESFAILED\n\nMerge faces operation failed.\n\nVT_MERGETHINEXTFAILED\n\nMerge thin extensions operation failed.\n\nVT_MERGETHINSTRIPESFAILED\n\nMerge thin stripes operation failed.\n\nVT_OPERATIONFAILED\n\nVT operation failed.\n\nVT_PINCHFACESFAILED\n\nPinch faces operation failed.\n\nVT_REPAIRSHARPCORNERANGLESFAILED\n\nRepair sharp corner angles operation failed.\n\nVT_SEPARATEFACESFAILED\n\nSeparate faces operation failed.\n\nWRAPPERCLOSEGAPSFAILED\n\nWrapper gap closing failed.\n\nWRAPPERCLOSEGAPS_INVALIDGAPSIZE\n\nGap size specified for patching should be positive double.\n\nWRAPPERCLOSEGAPS_INVALIDRESOLUTIONFACTOR\n\nResolution Factor should be greater than 0 but less than or equal to 1.\n\nWRAPPERCLOSEGAPS_INVALIDSCOPE\n\nScope specified for close gaps is invalid.\n\nWRAPPERCONNECTFAILED\n\nWrapper connect failed.\n\nWRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLID\n\nContact prevention specified under wrapper control doesn’t exist.\n\nWRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLINPUTS\n\nContact prevention control specified under wrapper is invalid.\n\nWRAPPERCONTROL_INVALIDFEATURERECOVERYCONTROLID\n\nFeature recovery control specified under wrapper control doesn’t exist.\n\nWRAPPERCONTROL_INVALIDGEOMETRYSCOPE\n\nGeometry scope specified under wrapper control is invalid.\n\nWRAPPERCONTROL_INVALIDLEAKPREVENTIONCONTROLINPUTS\n\nLeak prevention control specified under wrapper is invalid.\n\nWRAPPERCONTROL_INVALIDLEAKPREVENTIONID\n\nLeak prevention specified under wrapper control doesn’t exist.\n\nWRAPPERCONTROL_LEAKPREVENTIONMPTCANNOTBELIVE\n\nDead material point cannot be same as live.\n\nWRAPPERCONTROL_LIVEMATERIALPOINTDOESNTEXIST\n\nLive material point does not exist for wrapper.\n\nWRAPPERCONTROL_MATERIALPOINTWITHGIVENNAMEDOESNTEXIST\n\nLive material point added to wrapper control doesn’t exist.\n\nWRAPPERCONTROL_NOLIVEMATERIALPOINTSPROVIDED\n\nLive material points list provided for wrapper control is empty.\n\nWRAPPERCOULDNOTEXTRACTINTERFACE\n\nFailed to extract wrapper interface.\n\nWRAPPERGLOBALSETTINGSNOTSET\n\nGlobal settings for wrapper not set.\n\nWRAPPERIMPROVEFAILED\n\nWrapper improve quality failed.\n\nWRAPPERLEAKINGFLUIDREGIONS\n\nTwo or more fluid regions leaking into each other.\n\nWRAPPERLEAKPREVENTIONFAILED\n\nWrapper leak prevention failed.\n\nWRAPPEROCTREEREGIONINGFAILED\n\nOctree regioning failed.\n\nWRAPPERPATCHFLOWREGIONS_EMPTYORINVALIDINPUT\n\nEmpty or invalid input face zonelet ids.\n\nWRAPPERPATCHFLOWREGIONS_FAILED\n\nUnable to create patch surfaces.\n\nWRAPPERPATCHFLOWREGIONS_INVALIDBASESIZE\n\nBase size specified for patching should be positive double.\n\nWRAPPERPATCHFLOWREGIONS_INVALIDHOLESIZE\n\nHole size specified for dead region should be positive double.\n\nWRAPPERPATCHFLOWREGIONS_TOOSMALLHOLESIZE\n\nToo small hole size provided for dead region.\n\nWRAPPERPROJECTIONFAILED\n\nProjection failed for wrapper.\n\nWRAPPERRESOLVEINTERSECTIONFAILED\n\nResolving intersections failed for wrapper.\n\nWRAPPERSIZEFIELDSNOTDEFINED\n\nNo size field ids provided for wrapping.\n\nWRAPPERSIZINGMETHODNOTSUPPORTED\n\nSizing method is not supported for wrapper.\n\nWRAPPERSURFACEHASHOLES\n\nWrapper surface has holes.\n\nWRAPPERUNSUPPORTEDWRAPREGION\n\nWrap region option provided does not support wrap operation.\n\nWRITECDBFAILED\n\nWriting CDB file failed.\n\nWRITEKEYWORDFILEFAILED\n\nWriting LS-Dyna Keyword file failed.\n\nWRITEMESHFAILED\n\nWriting mesh file failed.\n\nWRITEPMDATFAILED\n\nFailed to write PMDAT file.\n\nWRITESIZECONTROLFAILED\n\nWriting size control file failed.\n\nWRITESIZEFIELDFAILED\n\nWriting size field failed.\n\nZEROELEMENTSFORCDBEXPORT\n\nNo elements found for cdb export.\n\nZEROELEMENTSREADFROMCDBFILE\n\nNo elements read from CDB file.\n\nZERONODESREADFROMCDBFILE\n\nNo nodes read from CDB file.\n\nZONELETSARENOTOFSAMEDIMENSION\n\nZonelets are not of same dimension.\n\nZONENOTFOUND\n\nGiven zone not found.\n\nZONESARENOTOFSAMETYPE\n\nZones are not of same type.\n\nZONESARENOTSUPPORTEDFORCELLZONELETS\n\nZones are not supported for cell zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/ErrorCode.html#import-detail","title":"ErrorCode > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ErrorCode.html#attribute-detail","title":"ErrorCode > Attribute detail","text":"Attribute detail\n\n\n\nErrorCode.ADDINGPROVIDEDENTITIESNOTSUPPORTEDFORTOPOLOGYPART = 1205\n\nAdding provided entities is not supported for part with topology data.\n\n\n\nErrorCode.ADDTHICKNESSRESULTSFAILED = 380\n\nAdding thickness failed.\n\n\n\nErrorCode.AITOVERLAPALONGMULTIFOUND = 101\n\nTopology identification failed because of overlapping faces.\n\n\n\nErrorCode.ALIGNMENTFAILED = 3002\n\nAlignment failed.\n\n\n\nErrorCode.ALREADYVOLUMEMESHED = 110\n\nVolume is already meshed.\n\n\n\nErrorCode.AUTOMESHFAILED = 100\n\nAuto meshing failed.\n\n\n\nErrorCode.AUTOMESHHEXCOREFAILED = 117\n\nHex generation part of volume meshing failed.\n\n\n\nErrorCode.AUTOMESHINITFAILED = 139\n\nAuto mesh initialization failed.\n\n\n\nErrorCode.AUTOMESHINVALIDMAXSIZE = 116\n\nInvalid max size for auto volume meshing.\n\n\n\nErrorCode.AUTONODEMOVEFAILED = 107\n\nAuto node move failed.\n\n\n\nErrorCode.AUTOQUADMESHER_INVALIDMINMAXSIZES = 15001\n\nDifference in maximum value and minimum value is negative.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.AUTOQUADMESHER_NEGATIVEINPUTPARAMETER = 15000\n\nAutoquadmesher error codes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.BOIRESULTSFAILED = 381\n\nBOI creation failed.\n\n\n\nErrorCode.CADGEOMETRYNOTFOUND = 306\n\nNo CAD Geometry found for projections.\n\n\n\nErrorCode.CADIMPORTFAILED = 502\n\nCAD import failed.\n\n\n\nErrorCode.CELLSEPARATIONFAILED = 6000\n\nCell separation failed.\n\n\n\nErrorCode.CHECKPERIODICPAIRSFAILED = 2911\n\nCould not find a matching periodic face pair.\n\n\n\nErrorCode.COLOCATEFUSEDNODESFAILED = 851\n\nColocation of fused nodes failed.\n\n\n\nErrorCode.COMPUTEVOLUMESFAILED = 129\n\nCompute volumes failed.\n\n\n\nErrorCode.CONTACTPATCHRESULTSFAILED = 391\n\nContact patch creation process failed. Check the inputs.\n\n\n\nErrorCode.CONTROLNOTFOUND = 1304\n\nControl not found.\n\n\n\nErrorCode.CREATEBOI_INVALIDFLOWDIRECTION = 383\n\nBOI creation failed. Invalid flow or wake direction.\n\n\n\nErrorCode.CREATEBOI_INVALIDSCALE = 382\n\nBOI creation failed. Scale factors should not be less than one.\n\n\n\nErrorCode.CREATEBOI_INVALIDSCOPE = 387\n\nBOI creation failed. Invalid face zonelets as input.\n\n\n\nErrorCode.CREATEBOI_INVALIDTYPEFORWRAP = 386\n\nBOI creation failed. Wrapping is invalid for this BOI type.\n\n\n\nErrorCode.CREATEBOI_INVALIDWAKELEVELS = 385\n\nBOI creation failed. Invalid wake levels input.\n\n\n\nErrorCode.CREATEBOI_IVALIDWRAPMESHSIZE = 384\n\nBOI creation failed. Wrap cannot be performed with invalid mesh size.\n\n\n\nErrorCode.CREATECAPONFACEZONELETSFAILED = 2906\n\nFailed to create cap on face zonelets.\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDCONTACTPATCHAXIS = 390\n\nContact patch creation process failed. Invalid contact patch creation axis.\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDOFFSETDISTANCE = 388\n\nContact patch creation process failed. Scale factors should not be less than zero.\n\n\n\nErrorCode.CREATECONTACTPATCH_INVALIDTOLERANCEVALUE = 389\n\nContact patch creation process failed. Tolerance value should not be less than zero.\n\n\n\nErrorCode.CREATEEDGEZONELETFAILED = 1602\n\nCreating edge zonelet failed.\n\n\n\nErrorCode.DELETECONTROLSFAILED = 1307\n\nDelete controls failed.\n\n\n\nErrorCode.DELETEFRINGESANDOVERLAPSFAILED = 3203\n\nDeleting fringes and overlaps failed.\n\n\n\nErrorCode.DELETEMESHFACESFAILED = 3200\n\nDelete Mesh faces failed\n\n\n\nErrorCode.DELETEMESHFACES_CELLFOUND = 3202\n\nDeleting faces failed as they have cell neighbors.\n\n\n\nErrorCode.DELETEMESHFACES_TOPOLOGYNOTSUPPORTED = 3201\n\nTopoentities do not support deleting faces.\n\n\n\nErrorCode.DELETEMESHFAILED = 142\n\nDeleting mesh failed.\n\n\n\nErrorCode.DELETEPARTSFAILED = 1306\n\nDelete parts failed.\n\n\n\nErrorCode.DELETEVOLUMESFAILED = 134\n\nDelete volumes failed.\n\n\n\nErrorCode.DELETEZONELETSCONNECTEDTOCELLS = 3204\n\nCannot delete zonelets connected to volume mesh.\n\n\n\nErrorCode.DELETEZONELETSFAILED = 3205\n\nDelete zonelets failed.\n\n\n\nErrorCode.DUPLICATEFACESFOUND = 105\n\nDuplicate faces found.\n\n\n\nErrorCode.DUPLICATENODESFOUND = 103\n\nDuplicate nodes found.\n\n\n\nErrorCode.EDGEINTERSECTINGFACEFOUND = 104\n\nEdge intersecting face found.\n\n\n\nErrorCode.ENTITIESSHOULDBEADDEDTOZONEUSINGPARTITBELONGS = 309\n\nEntities should be added to zone using part it belongs.\n\n\n\nErrorCode.EXPORTFLUENTCASEFAILED = 526\n\nExport fluent case failed.\n\n\n\nErrorCode.EXPORTFLUENTMESHINGMSHFAILED = 531\n\nExport fluent meshing mesh failed.\n\n\n\nErrorCode.EXPORTSTLFAILED = 549\n\nExport STL failed.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHEMPTYPARTIDLIST = 557\n\nExport STL failed. List of part ids is empty.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHHIGHERORDERMESH = 556\n\nExport STL not supported for higher order mesh.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHINCORRECTPARTID = 558\n\nExport STL failed. Part id is incorrect.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHPOLYFACES = 555\n\nExport STL not supported for mesh with poly faces.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHQUADFACES = 554\n\nExport STL not supported for mesh with quad faces.\n\n\n\nErrorCode.EXPORTSTLFAILEDWITHTOPOLOGY = 553\n\nExport STL not supported for part with topology data.\n\n\n\nErrorCode.EXTRACTFEATURESBYANGLEFAILED = 1600\n\nFeature extraction by angle failed.\n\n\n\nErrorCode.EXTRACTFEATURESBYEDGESFAILED = 1601\n\nExtracting features by angle failed.\n\n\n\nErrorCode.EXTRACTFEATURESBYINTERSECTIONFAILED = 1603\n\nFeature extraction by intersection failed.\n\n\n\nErrorCode.EXTRACTVOLUMESFAILED = 132\n\nExtract volumes failed.\n\n\n\nErrorCode.FACEZONELETSFEATURESNOTUPTODATE = 10\n\nFace zonelets features are not up to date.\n\n\n\nErrorCode.FACEZONELETSHAVECELLSCONNECTED = 10205\n\nFace zonelets have cells connected.\n\n\n\nErrorCode.FILENOTFOUND = 524\n\nFile path or name not found.\n\n\n\nErrorCode.FILLHOLEFAILED = 2901\n\nUnable to create capping surface.\n\n\n\nErrorCode.FREEZEMESHERROR = 30\n\nCannot remesh freezed mesh.\n\n\n\nErrorCode.FUSEINTERIORFAILED = 855\n\nFusing interior region of overlap failed.\n\n\n\nErrorCode.FUSEOPTIONINVALID = 850\n\nInvalid option chosen to connect two different parts.\n\n\n\nErrorCode.GETELEMENTCOUNTFAILED = 251\n\nFailed to get element count.\n\n\n\nErrorCode.GETSTATISTICSFAILED = 250\n\nFailed to get mesh statistics.\n\n\n\nErrorCode.IGA_EDGEPATHCOMPUTATIONFAILED = 2414\n\nEdge path computation failed.\n\n\n\nErrorCode.IGA_HREFINEMENTFAILED = 2406\n\nH-refinement of spline failed.\n\n\n\nErrorCode.IGA_INCORRECTCONTROLPOINTSIZEWRTDEGREE = 2401\n\nIncorrect control point size with respect to degree.\n\n\n\nErrorCode.IGA_INCORRECTCONTROLPOINTSIZEWRTINPUT = 2402\n\nIncorrect control point size with respect to mesh size.\n\n\n\nErrorCode.IGA_INCORRECTDEGREE = 2415\n\nIncorrect degree.\n\n\n\nErrorCode.IGA_INVALIDINPUTFILEFORGENUSZEROFITTING = 2412\n\nInvalid model for genus-zero spline fitting.\n\n\n\nErrorCode.IGA_INVALIDINPUTFILEFORSTRUCTUREDHEXMESHFITTING = 2411\n\nInvalid model for structured hex-mesh spline fitting.\n\n\n\nErrorCode.IGA_NEGATIVEJACOBIAN = 2404\n\nSpline has negative jacobian.\n\n\n\nErrorCode.IGA_NOCELLZONELETS = 2410\n\nNo cell zonelets found.\n\n\n\nErrorCode.IGA_NODEINDEXINGFAILED = 2409\n\nHex mesh is unstructured.\n\n\n\nErrorCode.IGA_NOFACEZONELETS = 2413\n\nNo face zonelets found.\n\n\n\nErrorCode.IGA_NURBSFITTINGFAILED = 2403\n\nSpline fitting failed.\n\n\n\nErrorCode.IGA_NURBSOPFAILED = 2400\n\nSpline operation failed.\n\n\n\nErrorCode.IGA_NURBSSMOOTHFAILED = 2408\n\nSmoothing of spline failed.\n\n\n\nErrorCode.IGA_PERIODICKNOTVECTORCONVERSIONFAILED = 2405\n\nPeriodic knot conversion of spline failed.\n\n\n\nErrorCode.IGA_PREFINEMENTFAILED = 2407\n\nP-refinement of spline failed.\n\n\n\nErrorCode.IGA_QUADRATICMESHINPUT = 2416\n\nQuadratic mesh is not supported for solid spline creation.\n\n\n\nErrorCode.IGA_QUADTOSPLINEBASISFAILED = 2421\n\nQuad to spline operation failed.\n\n\n\nErrorCode.IGA_UNIFORMTRIMMEDNURBSFAILED = 2417\n\nUniform trimmed spline creation failed.\n\n\n\nErrorCode.IMPORTABAQUSFAILEDDURINGMESHCREATION = 16202\n\nImport Abaqus failed. Failed to create mesh entities.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.IMPORTABAQUSFAILEDWITHPARSINGFAILURE = 16201\n\nImport Abaqus failed. Failed to parse file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.IMPORTABAQUSFAILEDWITHUNKNOWNERROR = 16200\n\nImport Abaqus failed. Failed with unknown error.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.IMPORTFLUENTCASEFAILED = 529\n\nFailed to import fluent case file.\n\n\n\nErrorCode.IMPORTFLUENTMESHINGMSHFAILED = 528\n\nFailed to import fluent meshing mesh file.\n\n\n\nErrorCode.IMPRINTBOUNDARYEDGESFAILED = 853\n\nImprint of boundary edges failed.\n\n\n\nErrorCode.IMPRINTBOUNDARYNODESFAILED = 852\n\nImprint of boundary nodes failed.\n\n\n\nErrorCode.IMPROVESURFACEMESHQUALITYFAILED = 2102\n\nImprove surface mesh quality failed.\n\n\n\nErrorCode.INCLUDEKFILENOTFOUND = 520\n\nInclude keyword file not found.\n\n\n\nErrorCode.INCREMENTALVOLUMEMESHINGNOTSUPPORTED = 143\n\nIncremental volume meshing is not supported.\n\n\n\nErrorCode.INPUTNOTCOMPLETE = 1308\n\nInput provided is incomplete.\n\n\n\nErrorCode.INTERRUPTED = 201\n\nMethod call interrupted.\n\n\n\nErrorCode.INTERSECTIONINCUTTERVOLUMES = 49\n\nFound overlapping or intersecting cutter volumes.\n\n\n\nErrorCode.INTERSECTIONINTARGETVOLUMES = 48\n\nFound overlapping or intersecting target volumes.\n\n\n\nErrorCode.INVALIDCELLQUALITYLIMIT = 2852\n\nInvalid cell quality limit.\n\n\n\nErrorCode.INVALIDCMBLOCKFORMAT = 16502\n\nCMBLOCK command format error in CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.INVALIDCONTROLPARAMS = 12201\n\nInvalid control parameters.\n\n\n\nErrorCode.INVALIDCURVATURESIZINGINPUT = 1503\n\nInvalid curvature sizing input.\n\n\n\nErrorCode.INVALIDFILEEXTENSIONFORFLUENTCASEEXPORT = 9009\n\nProvided file extension is invalid. If cff_format is set to False, then supported extensions are .cas and .cas.gz. If cff_format is set to True, then supported extension is .cas.h5 .\n\n\n\nErrorCode.INVALIDFIRSTASPECTRATIO = 124\n\nInvalid first aspect ratio.\n\n\n\nErrorCode.INVALIDFIRSTHEIGHT = 126\n\nInvalid first height.\n\n\n\nErrorCode.INVALIDGLOBALMINMAX = 1500\n\nInvalid global min and max value.\n\n\n\nErrorCode.INVALIDGROWTHRATE = 128\n\nInvalid growth rate.\n\n\n\nErrorCode.INVALIDINPUTPART = 305\n\nInvalid input part.\n\n\n\nErrorCode.INVALIDINPUTPOINT = 16000\n\nInvalid input point.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.INVALIDINPUTVOLUMES = 1312\n\nList of volume ids provided is empty or incorrect.\n\n\n\nErrorCode.INVALIDINPUTZONELETS = 1309\n\nInvalid input zonelets.\n\n\n\nErrorCode.INVALIDLASTASPECTRATIO = 125\n\nInvalid last aspect ratio.\n\n\n\nErrorCode.INVALIDLAYERS = 127\n\nInvalid number of layers.\n\n\n\nErrorCode.INVALIDNEIGHBORVOLUMES = 136\n\nInvalid neighbor volumes selected to merge volumes.\n\n\n\nErrorCode.INVALIDPLANEPOINTS = 2804\n\nInvalid plane points, cannot define a plane.\n\n\n\nErrorCode.INVALIDPRISMCONTROLS = 111\n\nInvalid prism controls.\n\n\n\nErrorCode.INVALIDPRISMCONTROLS_INCORRECTSCOPEENTITY = 123\n\nInvalid scope entity.\n\n\n\nErrorCode.INVALIDPROXIMITYSIZINGINPUT = 1504\n\nInvalid proximity sizing input.\n\n\n\nErrorCode.INVALIDREGISTERID = 2806\n\nInvalid register id provided. Register ids between 1 to 28 are valid.\n\n\n\nErrorCode.INVALIDSCOPEENTITYTYPEINPUT = 1505\n\nInvalid input scope entity type.\n\n\n\nErrorCode.INVALIDSHELLBLCONTROLS = 67\n\nInvalid ShellBL controls.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.INVALIDSHELLBLCONTROLS_INCORRECTSCOPEENTITY = 68\n\nInvalid scope entity.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.INVALIDSIZECONTROLINPUTS = 1501\n\nInvalid size control input.\n\n\n\nErrorCode.INVALIDSIZECONTROLS = 401\n\nInvalid size controls.\n\n\n\nErrorCode.INVALIDSIZECONTROLSCOPE = 1502\n\nInvalid size control scope.\n\n\n\nErrorCode.INVALIDTHINVOLUMECONTROLS = 12101\n\nInvalid input provided for thin volume control.\n\n\n\nErrorCode.INVALIDTRANSFORMATIONMATRIX = 3003\n\nInvalid transformation matrix.\n\n\n\nErrorCode.INVALIDVOLUMECONTROLS = 118\n\nInvalid volume controls specified for volume meshing.\n\n\n\nErrorCode.INVALIDWRAPPERCONTROL = 3427\n\nInvalid wrapper control.\n\n\n\nErrorCode.LOCALSURFERINVALIDNUMRINGS = 44\n\nInvalid number of rings input for the local surface mesh operation.\n\n\n\nErrorCode.MATCHMORPH_BCPAIRINPUTTYPEMISMATCH = 1451\n\nEntity type does not match with input for defined boundary condition pair.\n\n\n\nErrorCode.MATCHMORPH_INVALIDSOURCEINPUT = 1450\n\nInvalid source input for match morphing.\n\n\n\nErrorCode.MATERIALPOINTWITHGIVENIDDOESNTEXIST = 3302\n\nMaterial point with the given ID already exists.\n\n\n\nErrorCode.MATERIALPOINTWITHGIVENNAMEDOESNTEXIST = 3301\n\nMaterial point with the given name does not exist.\n\n\n\nErrorCode.MATERIALPOINTWITHSAMENAMEEXISTS = 3300\n\nMaterial point with the same name already exists.\n\n\n\nErrorCode.MERGEPARTSFAILED = 1301\n\nMerge parts failed.\n\n\n\nErrorCode.MERGEPARTSWANDWOTOPO = 1302\n\nMerge parts with topology and parts without topology are not supported.\n\n\n\nErrorCode.MERGESMALLZONELETSSUPPORTEDFORFACEZONELETS = 1311\n\nMerge small zonelets option is supported for only face zonelets.\n\n\n\nErrorCode.MERGEVOLUMESFAILED = 133\n\nMerge volumes failed.\n\n\n\nErrorCode.MERGEVOLUMESNOTSUPPORTEDFORTOPOLOGYPART = 1207\n\nMerge volumes is not supported for part with topology data.\n\n\n\nErrorCode.MERGEZONELETSFAILED = 1310\n\nMerge zonelets failed.\n\n\n\nErrorCode.MERGEZONELETSNOTSUPPORTEDFORTOPOLOGYPART = 1206\n\nMerge zonelets is not supported for part with topology data.\n\n\n\nErrorCode.MESHDECOUPLEDFAILED = 16900\n\nInvalid load balancing or failed in volume meshing for one or more parts.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.MESHNOTFOUNDTOEXPORTFLUENTMESHINGMESH = 533\n\nMesh not found to export fluent meshing mesh.\n\n\n\nErrorCode.MICROSTRUCTUREBADSHAPEPROPERTIES = 13003\n\nBad shape properties.\n\n\n\nErrorCode.MICROSTRUCTUREINVALIDELEMENTTYPE = 13000\n\nInvalid input provided. Invalid Element Type.\n\n\n\nErrorCode.MICROSTRUCTUREINVALIDSHAPETYPE = 13001\n\nInvalid input provided. Invalid Shape.\n\n\n\nErrorCode.MICROSTRUCTUREQUADRATICHEXREQUIREDQUADRATICVOXELGRID = 13006\n\nVolume mesh generation for hexahedra requires generation of a quadratic voxel grid.\n\n\n\nErrorCode.MICROSTRUCTUREREMESHNOTSUPPORTED = 13005\n\nSurface remesh operation is not supported.\n\n\n\nErrorCode.MICROSTRUCTURESMOOTHNOTSUPPORTED = 13004\n\nSmoothing operation is not supported.\n\n\n\nErrorCode.MICROSTRUCTUREWRONGAPICALLSEQUENCE = 13002\n\nWrong API call sequence.\n\n\n\nErrorCode.MORPHER_COMPUTEBCS = 1410\n\nFailed to compute boundary conditions.\n\n\n\nErrorCode.MULTIZONEMESHER_BLOCKINGFAILED = 2601\n\nCreating MultiZone blocking failed.\n\n\n\nErrorCode.MULTIZONEMESHER_MESHINGFAILED = 2603\n\nGenerating MultiZone mesh failed.\n\n\n\nErrorCode.MULTIZONEMESHER_MESHTRANSFERFAILED = 2604\n\nMultiZone mesh transfer failed.\n\n\n\nErrorCode.MULTIZONEMESHER_MULTIPLECONTROLSNOTSUPPORTED = 2611\n\nMultiZone mesh does not support multiple controls.\n\n\n\nErrorCode.MULTIZONEMESHER_NOVOLUMESFORGEOMETRYTRANSFER = 2612\n\nNo volumes for geometry import.\n\n\n\nErrorCode.MULTIZONEMESHER_NOVOLUMESSCOPEDINCURRENTPART = 2613\n\nNo volumes for geometry import in the current part.\n\n\n\nErrorCode.MULTIZONEMESHER_USERINPUTTOPOLOGYMISSING = 2610\n\nInput does not have topology for MultiZone mesh.\n\n\n\nErrorCode.NOACTIVESFFOUND = 114\n\nNo active size fields found.\n\n\n\nErrorCode.NOCELLSSEPARATED = 6001\n\nNo cells separated based on given input.\n\n\n\nErrorCode.NOERROR = 0\n\nNo error.\n\n\n\nErrorCode.NOINPUT = 1305\n\nNo input provided.\n\n\n\nErrorCode.NOTSUPPORTEDFORDISTRIBUTEMESHING = 2001\n\nMethod not supported for distributed meshing.\n\n\n\nErrorCode.NOTSUPPORTEDFORHIGHERORDERMESHPART = 1201\n\nOperation does not support higher order elements.\n\n\n\nErrorCode.NOTSUPPORTEDFORNONQUADFACEZONE = 1203\n\nOperation supports only quads.\n\n\n\nErrorCode.NOTSUPPORTEDFORNONTRIFACEZONE = 1202\n\nOnly triangular face zone is supported.\n\n\n\nErrorCode.NOTSUPPORTEDFORPOLYMESHPART = 1208\n\nOperation does not support poly elements.\n\n\n\nErrorCode.NOTSUPPORTEDFORTOPOLOGYPART = 1200\n\nNot supported for part with topology data.\n\n\n\nErrorCode.NUMENMETHODNOTFOUND = 3801\n\nCould not find numen method.\n\n\n\nErrorCode.OCTREELIMITREACHED = 3350\n\nLimit reached for the number of octants supported.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.OGRIDREFINEFAILED = 65\n\nPost refinement of ShellBl quads failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.OUTOFMEMORY = 200\n\nOut of memory.\n\n\n\nErrorCode.PARTDOESNOTHAVETOPOLOGY = 310\n\nPart does not have topology.\n\n\n\nErrorCode.PARTHASTOPOLOGY = 2800\n\nPart has a topology.\n\n\n\nErrorCode.PARTNOTFOUND = 300\n\nGiven part not found.\n\n\n\nErrorCode.PARTNOTMESHED = 304\n\nPart is not meshed.\n\n\n\nErrorCode.PATHNOTFOUND = 511\n\nInvalid path.\n\n\n\nErrorCode.PERIODICEDGESNOTSUPPORTEDFORSHELLBL = 69\n\nPeriodic surfaces selected for ShellBL generation are not supported.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.PERIODICRECOVERYFORALREADYVOLUMEMESHEDPART = 2913\n\nPeriodic recovery unsupported for already volume meshed part.\n\n\n\nErrorCode.PERIODICSURFACESEDGESMISMATCH = 2912\n\nEdge entities do not match on periodic source and target surfaces.\n\n\n\nErrorCode.PERIODICSURFACESNOTSUPPORTEDFORPRISMS = 135\n\nPeriodic surfaces selected for prism generation are not supported.\n\n\n\nErrorCode.PLANECOLLINEARPOINTS = 2805\n\nCollinear or duplicate points given to define plane.\n\n\n\nErrorCode.PLUGINLOADFAILURE = 10001\n\nFailed to load Surface Editor plugin.\n\n\n\nErrorCode.POLYMESHFAILED = 140\n\nPoly meshing failed.\n\n\n\nErrorCode.PREPAREFORVOLUMEMESHINGFAILED = 2000\n\nPrepare for volume meshing failed.\n\n\n\nErrorCode.PRISMMESHFAILED = 138\n\nPrism meshing failed.\n\n\n\nErrorCode.PROJECTONCADGEOMETRYFAILED = 351\n\nProjection on CAD Geometry failed.\n\n\n\nErrorCode.PYRAMIDMESHFAILED = 141\n\nPyramid meshing failed.\n\n\n\nErrorCode.QUADRATICMESHSUPPORTEDONLYFORTETS = 113\n\nQuadratic elements can only be generated for tetrahedral elements.\n\n\n\nErrorCode.QUADRATICMESH_WRITEMESHFAILED = 519\n\nWriting failed with quadratic mesh.\n\n\n\nErrorCode.QUADRATICTETNOTSUPPORTEDINPARALLEL = 130\n\nQuadratic tetrahedal meshing is not supported in parallel mode.\n\n\n\nErrorCode.QUADRATICTETNOTSUPPORTEDWITHPRISMS = 131\n\nQuadratic tetrahedral meshing is not supported with prism.\n\n\n\nErrorCode.READCDBFAILED = 505\n\nReading CDB file failed.\n\n\n\nErrorCode.READKEYWORDFILEFAILED = 517\n\nReading LS-Dyna Keyword file failed.\n\n\n\nErrorCode.READMESHFAILED = 500\n\nReading mesh file failed.\n\n\n\nErrorCode.READPMDATFAILED = 525\n\nPMDAT file read failed.\n\n\n\nErrorCode.READSHELLBLCONTROLFAILED = 567\n\nRead thin ShellBL control failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.READSIZECONTROLFAILED = 522\n\nReading size control file failed.\n\n\n\nErrorCode.READSIZEFIELDFAILED = 503\n\nReading size field file failed.\n\n\n\nErrorCode.RECOVERPERIODICSURFACESFAILED = 2909\n\nUnable to recover periodic surfaces.\n\n\n\nErrorCode.RECOVERPERIODICSURFACESINVALIDSCOPE = 2910\n\nInvalid scope input for periodic surface recovery.\n\n\n\nErrorCode.REFINEATCONTACTSFAILED = 2908\n\nFailed to refine at contacts.\n\n\n\nErrorCode.REFRESHSIZEFIELDSFAILED = 402\n\nRefreshing size field failed.\n\n\n\nErrorCode.REMESHFACEZONELETSLOCALLYNOTSUPPORTEDFORTOPOLOGYPART = 32\n\nRemesh face zonelets locally is not supported for topology part.\n\n\n\nErrorCode.REMESHFACEZONELETSNOTSUPPORTEDFORTOPOLOGYPART = 31\n\nRemesh face zonelets is not supported for topology part.\n\n\n\nErrorCode.SCAFFOLDERBADINPUTEMPTYTOPO = 50\n\nIncorrect input. No topo faces or edges in input.\n\n\n\nErrorCode.SCAFFOLDERBADINPUTNOFREEFACES = 51\n\nIncorrect input. No free faces in input.\n\n\n\nErrorCode.SCAFFOLDERBADINPUTPARAMS = 52\n\nIncorrect input parameters.\n\n\n\nErrorCode.SCAFFOLDERINVALIDABSOLUTEDISTOL = 53\n\nInvalid absolute distance tolerance for scaffold operation.\n\n\n\nErrorCode.SCAFFOLDERINVALIDCONSTANTMESHSIZE = 54\n\nInvalid constant mesh size input for scaffold operation.\n\n\n\nErrorCode.SCALINGFAILED = 3001\n\nScaling failed.\n\n\n\nErrorCode.SEPARATIONRESULTSFAILED = 360\n\nSeparation failed.\n\n\n\nErrorCode.SETNAMEFAILED = 1303\n\nSet name failed.\n\n\n\nErrorCode.SHELLBLCONTROLFAILED = 566\n\nWrite ShellBL control failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLFAILED = 60\n\nShellBL creation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLFEWLAYERS = 63\n\nOnly few ShellBL layers are created.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLNOMESH = 62\n\nShellBL is not supported for unmeshed topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLQUADS = 61\n\nShellBL quads.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SHELLBLWRONGTOPO = 64\n\nFound topofaces with invalid topology.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.SIDEZONELETSNOTFIT = 121\n\nSide face zonelets are not sweepable for thin volume mesh.\n\n\n\nErrorCode.SIGSEGV = 2\n\nSegmentation violation.\n\n\n\nErrorCode.SIZEFIELDCOMPUTATIONFAILED = 400\n\nSize field computation failed.\n\n\n\nErrorCode.SIZEFIELDNOTFOUND = 302\n\nSize field not found.\n\n\n\nErrorCode.SIZEFIELDTYPENOTSUPPORTED = 8001\n\nProvided Size Field Type is not supported by this operation.\n\n\n\nErrorCode.SMOOTHSIZETRANSITIONNOTSUPPORTEDFORTOPO = 43\n\nSmooth size transition option is not supported for topology surface meshing yet.\n\n\n\nErrorCode.SOURCEFACINGCELLZONELETS = 119\n\nSource face zonelets facing existing volume mesh.\n\n\n\nErrorCode.SOURCEORTARGETNOTSPECIFIED = 857\n\nNo target or source faces specified.\n\n\n\nErrorCode.SOURCETARGETZONELETSNOTFIT = 122\n\nSource and target zonelets do not fit to thin volume mesh.\n\n\n\nErrorCode.SPHEREATINVALIDNORMALNODESFAILED = 350\n\nSphere creation at invalid normals failed.\n\n\n\nErrorCode.SPLITANDCOLLAPSEFACEELEMENTSFAILED = 2101\n\nFailed to split and collapse face element(s).\n\n\n\nErrorCode.SPLITINTERSECTINGBOUNDARYEDGESFAILED = 854\n\nSplitting of intersecting boundary edges failed.\n\n\n\nErrorCode.SPLITTOTRIFAILED = 66\n\nShellBL quads split to triangles failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.STACKER_BASEFACEUNMESHED = 10111\n\nBase face list input has unmeshed topofaces.\n\n\n\nErrorCode.STACKER_FACESEPARATIONFAILED = 10103\n\nStacker failed to separate base face.\n\n\n\nErrorCode.STACKER_FAILED = 10104\n\nStacker failed to mesh the model.\n\n\n\nErrorCode.STACKER_INCORRECTBODYDEFINITION = 10110\n\nSome bodies are intersecting or incorrectly defined.\n\n\n\nErrorCode.STACKER_INVALIDBASEFACEINPUT = 10107\n\nBase face list input is invalid.\n\n\n\nErrorCode.STACKER_INVALIDINPUTVOLUMES = 10101\n\nInvalid input volumes provided to stacker.\n\n\n\nErrorCode.STACKER_INVALIDPARAMS = 10102\n\nInvalid parameters provided to stacker.\n\n\n\nErrorCode.STACKER_MESHEDFACESFOUND = 10106\n\nSome faces in the input model have existing mesh.\n\n\n\nErrorCode.STACKER_NOFACEFOUNDINVOLUMES = 10105\n\nNo faces are found in the specified volumes.\n\n\n\nErrorCode.STACKER_NONSTACKABLEVOLUMESFOUND = 10109\n\nSome volumes are not aligned in the stacking direction.\n\n\n\nErrorCode.STITCHENTITIESFAILED = 859\n\nStitch entities failed.\n\n\n\nErrorCode.STITCHWITHPRESERVEDENTITIESFAILED = 858\n\nStitch with preserved entities failed.\n\n\n\nErrorCode.SUBTRACTVOLUMEFAILED = 47\n\nFailed to subtract volumes.\n\n\n\nErrorCode.SUBTRACTZONELETSFAILED = 2903\n\nUnable to subtract cutters from input zonelets.\n\n\n\nErrorCode.SURFACEFEATURETYPENOTSUPPORTED = 2807\n\nSurface search for provided feature type is not supported.\n\n\n\nErrorCode.SURFACESEARCHFAILED = 2802\n\nSurface search failed.\n\n\n\nErrorCode.SURFACESEARCHPARTWITHMESHNOTFOUND = 2803\n\nPart with mesh not found for surface quality check.\n\n\n\nErrorCode.SURFERAUTOSIZEMUSTBEVOLUMETRIC = 12\n\nAuto sizing must be of volumetric type.\n\n\n\nErrorCode.SURFERAUTOSIZEQUADUNSUPPORTED = 11\n\nAuto sizing for quad meshing is not supported.\n\n\n\nErrorCode.SURFERCANNOTREMESHPERIODICZONELETS = 45\n\nCannot remesh periodic face zonelets.\n\n\n\nErrorCode.SURFERFAILED = 3\n\nSurface meshing failed.\n\n\n\nErrorCode.SURFERINVALIDANGLES = 42\n\nInvalid Corner angle or min angle more than max angle specified for surface meshing.\n\n\n\nErrorCode.SURFERINVALIDCONSTANTSIZE = 40\n\nInvalid size for constant size surface meshing.\n\n\n\nErrorCode.SURFERINVALIDINPUT = 7\n\nInvalid input for surface meshing.\n\n\n\nErrorCode.SURFERINVALIDMINORMAXSIZES = 41\n\nInvalid min or max size for surface meshing.\n\n\n\nErrorCode.SURFERLAYEREDQUADFAILED = 6\n\nFailed to layer quad meshing.\n\n\n\nErrorCode.SURFERNONMANIFOLDEDGE = 14\n\nNon manifold edge for meshing.\n\n\n\nErrorCode.SURFEROPENINITIALFRONTLOOP = 16\n\nOpen initial front loop for meshing.\n\n\n\nErrorCode.SURFERQUADFAILED = 8\n\nQuad surface meshing failed.\n\n\n\nErrorCode.TARGETWITHCELLZONELETS = 120\n\nTarget face zonelets with volume mesh on both side.\n\n\n\nErrorCode.TARGETZONELETS_NOTWATERTIGHT = 10003\n\nTarget zonelets do not form a watertight volume.\n\n\n\nErrorCode.TARGETZONELETS_SELFINTERSECTING = 10002\n\nTarget zonelets form a self intersecting volume.\n\n\n\nErrorCode.TETIMPROVEFAILED = 106\n\nTet improve failed.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDCONTROL = 12110\n\nSame face scope is set as target for multiple thin volume controls.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDNUMBEROFLAYER = 12107\n\nInvalid number of layers provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSCOPE = 12104\n\nSame source and target scope provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSOURCESCOPE = 12102\n\nInvalid source scope provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDSOURCESCOPEENTITY = 12105\n\nInvalid source scope entity provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDTARGETSCOPE = 12103\n\nInvalid target scope provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDTARGETSCOPEENTITY = 12106\n\nInvalid target scope entity provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLINVALIDVOLUMESCOPE = 12109\n\nInvalid volume scope provided for thin volume control.\n\n\n\nErrorCode.THINVOLUMECONTROLSAMESOURCEFORMORETHANTWOCONTROL = 12111\n\nSame face scope is set as source for more than two thin volume controls.\n\n\n\nErrorCode.THINVOLUMECONTROLTOPOLOGYNOTSUPPORTED = 12108\n\nThin volume mesh controls not supported for part with topology data.\n\n\n\nErrorCode.THINVOLUMEMESHFAILED = 137\n\nThin volume meshing failed.\n\n\n\nErrorCode.THINVOLUMEMESHNOTSUPPORTEDWITHFACEBASEDDATABASE = 12112\n\nThin volume mesh is not supported with face based database.\n\n\n\nErrorCode.TOLERANCEVALUEINVALID = 856\n\nInvalid tolerance value specified.\n\n\n\nErrorCode.TOOLZONELETS_NOTWATERTIGHT = 10005\n\nTool zonelets do not form a watertight volume.\n\n\n\nErrorCode.TOOLZONELETS_SELFINTERSECTING = 10004\n\nTool zonelets form a self intersecting volume.\n\n\n\nErrorCode.TOPODATANOTFOUND = 301\n\nTopoData not found.\n\n\n\nErrorCode.TOPOEDGESREMESHFAILED = 5\n\nFailed to remesh topoedges.\n\n\n\nErrorCode.TOPOFACESREMESHFAILED = 4\n\nFailed to remesh topofaces.\n\n\n\nErrorCode.TRANSFORMATIONFAILED = 3000\n\nTransformation failed.\n\n\n\nErrorCode.TRIANGULATIONFAILED = 102\n\nTriangulation failed.\n\n\n\nErrorCode.UNITEZONELETSFAILED = 2907\n\nFailed to unite input zonelets.\n\n\n\nErrorCode.UNKNOWN = 1\n\nUnknown error.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTCASE = 9003\n\nProvided file extension is not supported. Supported extensions are .cas, .cas.gz and .cas.h5.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTMESHINGMESH = 9002\n\nProvided file extension is not supported. Supported extensions are .msh and .msh.gz.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORFLUENTSIZEFIELD = 9005\n\nProvided file extension is not supported. Supported extensions are .sf and .sf.gz.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORKEYWORDFILE = 9004\n\nProvided file extension is not supported. Supported extensions are .k and .key.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORMAPDLCDB = 9007\n\nProvided file extension is not supported. Supported extension is .cdb.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORPMDAT = 9001\n\nProvided file extension is not supported. Supported extensions are .pmdat and .pmdat.gz.\n\n\n\nErrorCode.UNSUPPORTEDFILEEXTENSIONFORSIZEFIELD = 9006\n\nProvided file extension is not supported. Supported extensions are .psf and .psf.gz.\n\n\n\nErrorCode.VOLUMEMESHNOTFOUND = 1801\n\nVolume mesh not found.\n\n\n\nErrorCode.VOLUMEMESH_MIDNODESNOTSUPPORTED = 1800\n\nMid side nodes are not supported.\n\n\n\nErrorCode.VOLUMENOTFOUND = 307\n\nVolumes not found.\n\n\n\nErrorCode.VOLUMESEARCHFAILED = 2851\n\nVolume search failed.\n\n\n\nErrorCode.VOLUMESEARCHPARTWITHMESHNOTFOUND = 2850\n\nPart with mesh not found for volume quality check.\n\n\n\nErrorCode.VOLUMESNOTUPTODATE = 112\n\nVolumes are not updated.\n\n\n\nErrorCode.VOLUMEZONESNOTFOUNDTOEXPORTFLUENTCASE = 527\n\nVolume zones are not found to export fluent case.\n\n\n\nErrorCode.VT_COLLAPSESHORTEDGESFAILED = 3608\n\nCollapse short edges operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_CREATELEADINGEDGEFAILED = 3610\n\nCreate leading edge operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_CREATEMIDEDGEFAILED = 3611\n\nCreate mid edge operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_FILLANNULARHOLEFAILED = 3607\n\nFill annular hole operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_FILLHOLEFAILED = 3606\n\nFill hole operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_INVALIDINPUT = 3600\n\nInvalid input provided for VT operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_MERGEFACESFAILED = 3601\n\nMerge faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_MERGETHINEXTFAILED = 3603\n\nMerge thin extensions operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_MERGETHINSTRIPESFAILED = 3602\n\nMerge thin stripes operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_OPERATIONFAILED = 3612\n\nVT operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_PINCHFACESFAILED = 3605\n\nPinch faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_REPAIRSHARPCORNERANGLESFAILED = 3604\n\nRepair sharp corner angles operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.VT_SEPARATEFACESFAILED = 3609\n\nSeparate faces operation failed.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERCLOSEGAPSFAILED = 3442\n\nWrapper gap closing failed.\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDGAPSIZE = 3440\n\nGap size specified for patching should be positive double.\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDRESOLUTIONFACTOR = 3443\n\nResolution Factor should be greater than 0 but less than or equal to 1.\n\n\n\nErrorCode.WRAPPERCLOSEGAPS_INVALIDSCOPE = 3441\n\nScope specified for close gaps is invalid.\n\n\n\nErrorCode.WRAPPERCONNECTFAILED = 3402\n\nWrapper connect failed.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLID = 3421\n\nContact prevention specified under wrapper control doesn’t exist.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDCONTACTPREVENTIONCONTROLINPUTS = 3422\n\nContact prevention control specified under wrapper is invalid.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDFEATURERECOVERYCONTROLID = 3425\n\nFeature recovery control specified under wrapper control doesn’t exist.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDGEOMETRYSCOPE = 3420\n\nGeometry scope specified under wrapper control is invalid.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDLEAKPREVENTIONCONTROLINPUTS = 3424\n\nLeak prevention control specified under wrapper is invalid.\n\n\n\nErrorCode.WRAPPERCONTROL_INVALIDLEAKPREVENTIONID = 3423\n\nLeak prevention specified under wrapper control doesn’t exist.\n\n\n\nErrorCode.WRAPPERCONTROL_LEAKPREVENTIONMPTCANNOTBELIVE = 3426\n\nDead material point cannot be same as live.\n\n\n\nErrorCode.WRAPPERCONTROL_LIVEMATERIALPOINTDOESNTEXIST = 3414\n\nLive material point does not exist for wrapper.\n\n\n\nErrorCode.WRAPPERCONTROL_MATERIALPOINTWITHGIVENNAMEDOESNTEXIST = 3413\n\nLive material point added to wrapper control doesn’t exist.\n\n\n\nErrorCode.WRAPPERCONTROL_NOLIVEMATERIALPOINTSPROVIDED = 3408\n\nLive material points list provided for wrapper control is empty.\n\n\n\nErrorCode.WRAPPERCOULDNOTEXTRACTINTERFACE = 3405\n\nFailed to extract wrapper interface.\n\n\n\nErrorCode.WRAPPERGLOBALSETTINGSNOTSET = 3400\n\nGlobal settings for wrapper not set.\n\n\n\nErrorCode.WRAPPERIMPROVEFAILED = 3416\n\nWrapper improve quality failed.\n\n\n\nErrorCode.WRAPPERLEAKINGFLUIDREGIONS = 3444\n\nTwo or more fluid regions leaking into each other.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERLEAKPREVENTIONFAILED = 3406\n\nWrapper leak prevention failed.\n\n\n\nErrorCode.WRAPPEROCTREEREGIONINGFAILED = 3411\n\nOctree regioning failed.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_EMPTYORINVALIDINPUT = 3449\n\nEmpty or invalid input face zonelet ids.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_FAILED = 3446\n\nUnable to create patch surfaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_INVALIDBASESIZE = 3448\n\nBase size specified for patching should be positive double.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_INVALIDHOLESIZE = 3445\n\nHole size specified for dead region should be positive double.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPATCHFLOWREGIONS_TOOSMALLHOLESIZE = 3447\n\nToo small hole size provided for dead region.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.WRAPPERPROJECTIONFAILED = 3412\n\nProjection failed for wrapper.\n\n\n\nErrorCode.WRAPPERRESOLVEINTERSECTIONFAILED = 3401\n\nResolving intersections failed for wrapper.\n\n\n\nErrorCode.WRAPPERSIZEFIELDSNOTDEFINED = 3419\n\nNo size field ids provided for wrapping.\n\n\n\nErrorCode.WRAPPERSIZINGMETHODNOTSUPPORTED = 3415\n\nSizing method is not supported for wrapper.\n\n\n\nErrorCode.WRAPPERSURFACEHASHOLES = 3410\n\nWrapper surface has holes.\n\n\n\nErrorCode.WRAPPERUNSUPPORTEDWRAPREGION = 3407\n\nWrap region option provided does not support wrap operation.\n\n\n\nErrorCode.WRITECDBFAILED = 506\n\nWriting CDB file failed.\n\n\n\nErrorCode.WRITEKEYWORDFILEFAILED = 518\n\nWriting LS-Dyna Keyword file failed.\n\n\n\nErrorCode.WRITEMESHFAILED = 501\n\nWriting mesh file failed.\n\n\n\nErrorCode.WRITEPMDATFAILED = 530\n\nFailed to write PMDAT file.\n\n\n\nErrorCode.WRITESIZECONTROLFAILED = 523\n\nWriting size control file failed.\n\n\n\nErrorCode.WRITESIZEFIELDFAILED = 532\n\nWriting size field failed.\n\n\n\nErrorCode.ZEROELEMENTSFORCDBEXPORT = 16600\n\nNo elements found for cdb export.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.ZEROELEMENTSREADFROMCDBFILE = 16500\n\nNo elements read from CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.ZERONODESREADFROMCDBFILE = 16501\n\nNo nodes read from CDB file.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nErrorCode.ZONELETSARENOTOFSAMEDIMENSION = 374\n\nZonelets are not of same dimension.\n\n\n\nErrorCode.ZONENOTFOUND = 308\n\nGiven zone not found.\n\n\n\nErrorCode.ZONESARENOTOFSAMETYPE = 303\n\nZones are not of same type.\n\n\n\nErrorCode.ZONESARENOTSUPPORTEDFORCELLZONELETS = 311\n\nZones are not supported for cell zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/unit_test_examples/index.html#the-unit_test_examplespy-module","title":"The unit_test_examples.py module","text":"The unit_test_examples.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/unit_test_examples/index.html#summary","title":"The unit_test_examples.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\ndownload_test_examples\n\nDownload the example files necessary for unit testing.\n\nConstants\n\n\n\n\n\nFILE_NAMES\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/unit_test_examples/index.html#module-detail","title":"The unit_test_examples.py module > Module detail","text":"Module detail\n\n\n\nunit_test_examples.FILE_NAMES = ['box.psf', 'box.sf', 'file.cas', 'file.pdmat', 'file.pmdat', 'hex.cas', 'hex.cdb', 'hex.fmd', 'hex.msh']\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/DeleteZoneResults.html#deletezoneresults","title":"DeleteZoneResults","text":"DeleteZoneResults\n\n\n\nclass ansys.meshing.prime.autogen.modelstructs.DeleteZoneResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the delete zone.\n\nParameters\n\nmodel (Model) – Model to create a DeleteZoneResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the delete zone operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteZoneResults object with provided parameters.\n\nExamples\n\n>>> delete_zone_results = prime.DeleteZoneResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/DeleteZoneResults.html#overview","title":"DeleteZoneResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the delete zone operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteZoneResults object.\n\nset_default\n\nSet the default values of the DeleteZoneResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/DeleteZoneResults.html#import-detail","title":"DeleteZoneResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/DeleteZoneResults.html#property-detail","title":"DeleteZoneResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteZoneResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the delete zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/DeleteZoneResults.html#method-detail","title":"DeleteZoneResults > Method detail","text":"Method detail\n\n\n\nDeleteZoneResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteZoneResults.__str__() -> str\n\n\n\n\n\nstatic DeleteZoneResults.print_default()\n\nPrint the default values of DeleteZoneResults object.\n\nExamples\n\n>>> DeleteZoneResults.print_default()\n\n\n\nstatic DeleteZoneResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteZoneResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the delete zone operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneParams.html#fillholesatplaneparams","title":"FillHolesAtPlaneParams","text":"FillHolesAtPlaneParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.FillHolesAtPlaneParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, create_zone: bool = None, suggested_zone_name: str = None, json_data: dict = None, **kwargs)\n\nParameters to fill holes at given plane.\n\nParameters\n\nmodel (Model) – Model to create a FillHolesAtPlaneParams object with default parameters.\n\ncreate_zone (bool, optional) – Option to create a face zone for the zonelets created to fill holes.\n\nsuggested_zone_name (str, optional) – Suggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name.\n\njson_data (dict, optional) – JSON dictionary to create a FillHolesAtPlaneParams object with provided parameters.\n\nExamples\n\n>>> fill_holes_at_plane_params = prime.FillHolesAtPlaneParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneParams.html#overview","title":"FillHolesAtPlaneParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreate_zone\n\nOption to create a face zone for the zonelets created to fill holes.\n\nsuggested_zone_name\n\nSuggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of FillHolesAtPlaneParams object.\n\nset_default\n\nSet the default values of the FillHolesAtPlaneParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneParams.html#import-detail","title":"FillHolesAtPlaneParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneParams.html#property-detail","title":"FillHolesAtPlaneParams > Property detail","text":"Property detail\n\n\n\nproperty FillHolesAtPlaneParams.create_zone: bool\n\nOption to create a face zone for the zonelets created to fill holes.\n\n\n\nproperty FillHolesAtPlaneParams.suggested_zone_name: str\n\nSuggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/FillHolesAtPlaneParams.html#method-detail","title":"FillHolesAtPlaneParams > Method detail","text":"Method detail\n\n\n\nFillHolesAtPlaneParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nFillHolesAtPlaneParams.__str__() -> str\n\n\n\n\n\nstatic FillHolesAtPlaneParams.print_default()\n\nPrint the default values of FillHolesAtPlaneParams object.\n\nExamples\n\n>>> FillHolesAtPlaneParams.print_default()\n\n\n\nstatic FillHolesAtPlaneParams.set_default(create_zone: bool = None, suggested_zone_name: str = None)\n\nSet the default values of the FillHolesAtPlaneParams object.\n\nParameters\n\ncreate_zone (bool, optional) – Option to create a face zone for the zonelets created to fill holes.\n\nsuggested_zone_name (str, optional) – Suggested name to be set on merged part. If the suggested name is empty, the parameter uses the default name."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrol/index.html#the-thinvolumecontrolpy-module","title":"The thinvolumecontrol.py module","text":"The thinvolumecontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrol/index.html#summary","title":"The thinvolumecontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nThinVolumeControl\n\nThinVolumeControl allows you to generate prisms in the space between surfaces.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrol/index.html#description","title":"The thinvolumecontrol.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseParams.html#importfluentcaseparams","title":"ImportFluentCaseParams","text":"ImportFluentCaseParams\n\n\n\nclass ansys.meshing.prime.ImportFluentCaseParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, json_data: dict = None, **kwargs)\n\nParameters to import fluent case file.\n\nParameters\n\nmodel (Model) – Model to create a ImportFluentCaseParams object with default parameters.\n\nappend (bool, optional) – Option to append imported case instead of resetting model to imported case.\n\njson_data (dict, optional) – JSON dictionary to create a ImportFluentCaseParams object with provided parameters.\n\nExamples\n\n>>> import_fluent_case_params = prime.ImportFluentCaseParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseParams.html#overview","title":"ImportFluentCaseParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append imported case instead of resetting model to imported case.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ImportFluentCaseParams object.\n\nset_default\n\nSet the default values of the ImportFluentCaseParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseParams.html#import-detail","title":"ImportFluentCaseParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseParams.html#property-detail","title":"ImportFluentCaseParams > Property detail","text":"Property detail\n\n\n\nproperty ImportFluentCaseParams.append: bool\n\nOption to append imported case instead of resetting model to imported case."},{"objectID":"Home","href":"api/ansys/meshing/prime/ImportFluentCaseParams.html#method-detail","title":"ImportFluentCaseParams > Method detail","text":"Method detail\n\n\n\nImportFluentCaseParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nImportFluentCaseParams.__str__() -> str\n\n\n\n\n\nstatic ImportFluentCaseParams.print_default()\n\nPrint the default values of ImportFluentCaseParams object.\n\nExamples\n\n>>> ImportFluentCaseParams.print_default()\n\n\n\nstatic ImportFluentCaseParams.set_default(append: bool = None)\n\nSet the default values of the ImportFluentCaseParams object.\n\nParameters\n\nappend (bool, optional) – Option to append imported case instead of resetting model to imported case."},{"objectID":"Home","href":"user_guide/connections.html#connections","title":"Connections","text":"Connections"},{"objectID":"Home","href":"user_guide/connections.html#zonelet-connection","title":"Connections > Zonelet connection","text":"Zonelet connection\n\nConnect operations help you to create a watertight, fully connected surface mesh for successful volume mesh generation.\nConnect operations conformally connect multiple watertight volumes providing shared zonelets (and therefore connected\nvolume mesh) between them. The Connect class allows you to connect the face zonelets\nin a part, volume, or model using various connect algorithms.\n\nThere are three major operations for zonelet connections:\n\nThe Connect.intersect_face_zonelets() function allows you\nto intersect the face zonelets of the part along the intersecting faces.\n\nThe Connect.stitch_face_zonelets() function allows you to\nstitch a set of face zonelets to another set of face zonelets along the boundary of zonelets.\n\nThe Connect.join_face_zonelets() function allows you to join\na set of face zonelets to another set of face zonelets along the overlapping faces.\n\nThe Connect.fuse_face_zonelets() function allows you to\nperform fuse operation between overlapping face zonelets within a single part.\n\nThe Connect.merge_boundary_nodes() function allows you\nto merge boundary nodes of source face zonelets with boundary nodes of target face zonelets with the given parameters.\n\nConnect operations support only computational mesh, which is mesh with reasonable size changes and quality.\nFaceted geometry, which is STL-like mesh that can have extreme size changes and many sliver elements, is not supported.\n\nThe following example shows how to accomplish these tasks:\n\nImport the model and delete geometry topology from each part.\n\nMerge the parts and verify the surface mesh connectivity.\n\nPerform the join or intersect operation on face zonelets.\n\nImport the model and delete topo-geometric entities from each part:\n\nMerge the parts.\n\nCheck the surface before performing the connect operation.\n\nFor more information on checking the surface mesh connectivity, see ref_index_mesh_diagnostics.\n\nPrint the results of the surface mesh connectivity before performing the connect operation:\n\nConnect face zonelets in the model:\n\nOnly triangular faces are supported.\n\nCheck the surface after performing the connect operation:\n\nPrint the results of the surface mesh connectivity after performing the connect operation:\n\nTo perform Fuse operation,\n\nConnect face zonelets in the model using fuse operation. You can apply Fuse operation on overlapping faces\nwithin a single part. You can co-locate, merge, or remove fused surfaces as per your requirement.\n\nEnable the fuse parameters as per your requirement. When use_absolute_tolerance is True,\nprovides the gap tolerance or side tolerance value as absolute value.\n\nThe fuse_option parameter specifies how to treat the surface when performing fuse operation.\nHere, TRIMONESIDE option deletes the faces to be fused on one side and merges the nodes in the middle location.\nWhen local_remesh parameter is True, the fused region is meshed after performing fuse operation.\nn_layers parameter specifies the number of layers around the region to be fused.\nWhen separate is True, the fused region is separated.\n\nFuse the face zonelets using the given parameters.\n\n"},{"objectID":"Home","href":"user_guide/connections.html#topology-based-connection","title":"Connections > Topology-based connection","text":"Topology-based connection\n\nThe Scaffolder class allows you to provide connection\nusing faceted geometry and topology. This class also handles the gaps and mismatches in the geometry.\n\nTopology-based connection creates shared topoedges between neighboring topofaces. Hence, you can\ncreate connected mesh between topofaces.\n\nConnectivity cannot be shared across multiple parts.\n\nHere, the yellow edges denote multiple connections between the four topofaces.\nThe model has a single topoface containing an interior edge loop and an overlapping topoface on the central portion.\nYou may separate the large topoface by the interior edge loop and delete the shadow or merge the topoface to\nachieve the desired state.\n\nThis code merges parts and scaffold topofaces:\n\nThis code prints the results so that you can verify the number of topofaces that failed\nin the scaffold operation:"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsResults.html#copyzoneletsresults","title":"CopyZoneletsResults","text":"CopyZoneletsResults\n\n\n\nclass ansys.meshing.prime.autogen.commonstructs.CopyZoneletsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, copied_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, copied_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResult structure associated with copying zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CopyZoneletsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\ncopied_zonelets (Iterable[int], optional) – Ids of the copied zonelets.\n\ncopied_face_zonelets (Iterable[int], optional) – Ids of the copied bounding faces of cell zonelets.\n\njson_data (dict, optional) – JSON dictionary to create a CopyZoneletsResults object with provided parameters.\n\nExamples\n\n>>> copy_zonelets_results = prime.CopyZoneletsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsResults.html#overview","title":"CopyZoneletsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncopied_face_zonelets\n\nIds of the copied bounding faces of cell zonelets.\n\ncopied_zonelets\n\nIds of the copied zonelets.\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CopyZoneletsResults object.\n\nset_default\n\nSet the default values of the CopyZoneletsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsResults.html#import-detail","title":"CopyZoneletsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsResults.html#property-detail","title":"CopyZoneletsResults > Property detail","text":"Property detail\n\n\n\nproperty CopyZoneletsResults.copied_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the copied bounding faces of cell zonelets.\n\n\n\nproperty CopyZoneletsResults.copied_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of the copied zonelets.\n\n\n\nproperty CopyZoneletsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/commonstructs/CopyZoneletsResults.html#method-detail","title":"CopyZoneletsResults > Method detail","text":"Method detail\n\n\n\nCopyZoneletsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCopyZoneletsResults.__str__() -> str\n\n\n\n\n\nstatic CopyZoneletsResults.print_default()\n\nPrint the default values of CopyZoneletsResults object.\n\nExamples\n\n>>> CopyZoneletsResults.print_default()\n\n\n\nstatic CopyZoneletsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, copied_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, copied_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the CopyZoneletsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\ncopied_zonelets (Iterable[int], optional) – Ids of the copied zonelets.\n\ncopied_face_zonelets (Iterable[int], optional) – Ids of the copied bounding faces of cell zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/index.html#the-morpherstructspy-module","title":"The morpherstructs.py module","text":"The morpherstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/index.html#summary","title":"The morpherstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBCPair\n\nUsed to define boundary conditions for match morphing.\n\nBCPairType\n\nOption to specify boundary condition pair type.\n\nMatchMorphParams\n\nMatchMorphParams describes the parameters required for match morphing.\n\nMatchMorphResults\n\nResults associated with match morph operation.\n\nMatchPair\n\nMatch pair to specify sources, targets for match morphing. Included boundary conditions specification.\n\nMatchPairTargetType\n\nMatch morph target type.\n\nMorphSolveParams\n\nMorpher solve parameters.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/index.html#description","title":"The morpherstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControl.html#prismcontrol","title":"PrismControl","text":"PrismControl\n\n\n\nclass ansys.meshing.prime.PrismControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nPrismControl allows you to generate prisms.\n\nPrismControl allows you to control generation of prisms. Controls include setting the face scope, volume scope and growth parameters.\n\nParameters\n\nmodel (Model) – Server model to create PrismControl object.\n\nid (int) – Id of the PrismControl.\n\nobject_id (int) – Object id of the PrismControl.\n\nname (str) – Name of the PrismControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControl.html#overview","title":"PrismControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_growth_params\n\nGets the prism parameters for prism control.\n\nget_surface_scope\n\nGets the surface control scope.\n\nget_volume_scope\n\nGets the volume control scope.\n\nset_growth_params\n\nSet growth parameters for prism control.\n\nset_suggested_name\n\nSets the unique name for the prism control based on the suggested name.\n\nset_surface_scope\n\nSets the surface control scope.\n\nset_volume_scope\n\nSets the volume control scope.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of PrismControl.\n\nname\n\nGet the name of PrismControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControl.html#import-detail","title":"PrismControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControl.html#property-detail","title":"PrismControl > Property detail","text":"Property detail\n\n\n\nproperty PrismControl.id\n\nGet the id of PrismControl.\n\n\n\nproperty PrismControl.name\n\nGet the name of PrismControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/PrismControl.html#method-detail","title":"PrismControl > Method detail","text":"Method detail\n\n\n\nPrismControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPrismControl.get_growth_params() -> ansys.meshing.prime.params.primestructs.PrismControlGrowthParams\n\nGets the prism parameters for prism control.\n\nReturns\n\nReturns the PrismControlGrowthParams.\n\nReturn type\n\nPrismControlGrowthParams\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prism_ctrl.get_growth_params()\n\n\n\nPrismControl.get_surface_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the surface control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = prism_control.get_surface_scope()\n\n\n\nPrismControl.get_volume_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the volume control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope = prism_control.get_volume_scope()\n\n\n\nPrismControl.set_growth_params(prism_control_growth_params: ansys.meshing.prime.params.primestructs.PrismControlGrowthParams)\n\nSet growth parameters for prism control.\n\nParameters\n\nprism_control_growth_params (PrismControlGrowthParams) – Parameters to set prism control growth.\n\nExamples\n\n>>> results = prism_control.set_growth_params(PrismControlGrowthParams(model=model))\n\n\n\nPrismControl.set_suggested_name(name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for the prism control based on the suggested name.\n\nParameters\n\nname (str) – Suggested name for the prism control.\n\nReturns\n\nReturns the SetNameResults.\n\nReturn type\n\nSetNameResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> prism_control.set_suggested_name(\"control1\")\n\n\n\nPrismControl.set_surface_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the surface control scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = prism_control.set_surface_scope(entities)\n\n\n\nPrismControl.set_volume_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the volume control scope.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = prism_control.set_volume_scope(entities)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferParams.html#surferparams","title":"SurferParams","text":"SurferParams\n\n\n\nclass ansys.meshing.prime.autogen.surferstructs.SurferParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max_angle: float = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, min_size: float = None, max_size: float = None, growth_rate: float = None, constant_size: float = None, generate_quads: bool = None, check_non_manifolds: bool = None, avoid_corner_triangles: bool = None, smooth_size_transition: bool = None, advanced_surfer_setup: AdvancedSurferSetup = None, project_on_geometry: bool = None, enable_multi_threading: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to generate surface mesh.\n\nParameters\n\nmodel (Model) – Model to create a SurferParams object with default parameters.\n\nmax_angle (float, optional) – Maximum feature angle limit to be used to identify and preserve features.\n\nsize_field_type (SizeFieldType, optional) – Size field type used to generate surface mesh.\n\nmin_size (float, optional) – Minimum size to be used in sizing for the surfer.\n\nmax_size (float, optional) – Maximum size to be used in sizing for the surfer.\n\ngrowth_rate (float, optional) – Growth rate to be used to propagate sizes.\n\nconstant_size (float, optional) – Size used in constant size surface meshing.\n\ngenerate_quads (bool, optional) – Option to generate quadrilateral surface mesh.\n\ncheck_non_manifolds (bool, optional) – Option to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\navoid_corner_triangles (bool, optional) – Option to avoid corner triangles(with all three boundary nodes) generated.\n\nsmooth_size_transition (bool, optional) – Option to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nadvanced_surfer_setup (AdvancedSurferSetup, optional) – Option to define advanced settings for remeshing operation.\n\nproject_on_geometry (bool, optional) – Option to project on CAD geometry when meshing.\n\nenable_multi_threading (bool, optional) – Option to perform surface meshing in parallel using multithreads.\n\njson_data (dict, optional) – JSON dictionary to create a SurferParams object with provided parameters.\n\nExamples\n\n>>> surfer_params = prime.SurferParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferParams.html#overview","title":"SurferParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nadvanced_surfer_setup\n\nOption to define advanced settings for remeshing operation.\n\navoid_corner_triangles\n\nOption to avoid corner triangles(with all three boundary nodes) generated.\n\ncheck_non_manifolds\n\nOption to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\nconstant_size\n\nSize used in constant size surface meshing.\n\nenable_multi_threading\n\nOption to perform surface meshing in parallel using multithreads.\n\ngenerate_quads\n\nOption to generate quadrilateral surface mesh.\n\ngrowth_rate\n\nGrowth rate to be used to propagate sizes.\n\nmax_angle\n\nMaximum feature angle limit to be used to identify and preserve features.\n\nmax_size\n\nMaximum size to be used in sizing for the surfer.\n\nmin_size\n\nMinimum size to be used in sizing for the surfer.\n\nproject_on_geometry\n\nOption to project on CAD geometry when meshing.\n\nsize_field_type\n\nSize field type used to generate surface mesh.\n\nsmooth_size_transition\n\nOption to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurferParams object.\n\nset_default\n\nSet the default values of the SurferParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferParams.html#import-detail","title":"SurferParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferParams.html#property-detail","title":"SurferParams > Property detail","text":"Property detail\n\n\n\nproperty SurferParams.advanced_surfer_setup: AdvancedSurferSetup\n\nOption to define advanced settings for remeshing operation.\n\n\n\nproperty SurferParams.avoid_corner_triangles: bool\n\nOption to avoid corner triangles(with all three boundary nodes) generated.\n\n\n\nproperty SurferParams.check_non_manifolds: bool\n\nOption to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\n\n\nproperty SurferParams.constant_size: float\n\nSize used in constant size surface meshing.\n\n\n\nproperty SurferParams.enable_multi_threading: bool\n\nOption to perform surface meshing in parallel using multithreads.\n\n\n\nproperty SurferParams.generate_quads: bool\n\nOption to generate quadrilateral surface mesh.\n\n\n\nproperty SurferParams.growth_rate: float\n\nGrowth rate to be used to propagate sizes.\n\n\n\nproperty SurferParams.max_angle: float\n\nMaximum feature angle limit to be used to identify and preserve features.\n\n\n\nproperty SurferParams.max_size: float\n\nMaximum size to be used in sizing for the surfer.\n\n\n\nproperty SurferParams.min_size: float\n\nMinimum size to be used in sizing for the surfer.\n\n\n\nproperty SurferParams.project_on_geometry: bool\n\nOption to project on CAD geometry when meshing.\n\n\n\nproperty SurferParams.size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nSize field type used to generate surface mesh.\n\n\n\nproperty SurferParams.smooth_size_transition: bool\n\nOption to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nNotes\n\nInput facets or mesh with finer sizes compared to neighboring face edge sizes are required for this option to work.\n\nValid min, max sizes and growth rate are required to include the neighboring face edges sizes in sizing."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surferstructs/SurferParams.html#method-detail","title":"SurferParams > Method detail","text":"Method detail\n\n\n\nSurferParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurferParams.__str__() -> str\n\n\n\n\n\nstatic SurferParams.print_default()\n\nPrint the default values of SurferParams object.\n\nExamples\n\n>>> SurferParams.print_default()\n\n\n\nstatic SurferParams.set_default(max_angle: float = None, size_field_type: ansys.meshing.prime.params.primestructs.SizeFieldType = None, min_size: float = None, max_size: float = None, growth_rate: float = None, constant_size: float = None, generate_quads: bool = None, check_non_manifolds: bool = None, avoid_corner_triangles: bool = None, smooth_size_transition: bool = None, advanced_surfer_setup: AdvancedSurferSetup = None, project_on_geometry: bool = None, enable_multi_threading: bool = None)\n\nSet the default values of the SurferParams object.\n\nParameters\n\nmax_angle (float, optional) – Maximum feature angle limit to be used to identify and preserve features.\n\nsize_field_type (SizeFieldType, optional) – Size field type used to generate surface mesh.\n\nmin_size (float, optional) – Minimum size to be used in sizing for the surfer.\n\nmax_size (float, optional) – Maximum size to be used in sizing for the surfer.\n\ngrowth_rate (float, optional) – Growth rate to be used to propagate sizes.\n\nconstant_size (float, optional) – Size used in constant size surface meshing.\n\ngenerate_quads (bool, optional) – Option to generate quadrilateral surface mesh.\n\ncheck_non_manifolds (bool, optional) – Option to avoid new non-manifolds(multi-connection) if generated in surface mesh.\n\navoid_corner_triangles (bool, optional) – Option to avoid corner triangles(with all three boundary nodes) generated.\n\nsmooth_size_transition (bool, optional) – Option to generate mesh with smooth size transition from neighbors of selected surfaces. This includes neighboring face edge sizes in sizing provided for surface meshing to achieve smooth size transition.\n\nadvanced_surfer_setup (AdvancedSurferSetup, optional) – Option to define advanced settings for remeshing operation.\n\nproject_on_geometry (bool, optional) – Option to project on CAD geometry when meshing.\n\nenable_multi_threading (bool, optional) – Option to perform surface meshing in parallel using multithreads."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrolstructs/VolumeControlParams.html#volumecontrolparams","title":"VolumeControlParams","text":"VolumeControlParams\n\n\n\nclass ansys.meshing.prime.autogen.volumecontrolstructs.VolumeControlParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, cell_zonelet_type: ansys.meshing.prime.params.primestructs.CellZoneletType = None, skip_hexcore: bool = None, json_data: dict = None, **kwargs)\n\nVolume control parameters are used to define the volume type in the volume control.\n\nParameters\n\nmodel (Model) – Model to create a VolumeControlParams object with default parameters.\n\ncell_zonelet_type (CellZoneletType, optional) – Cell zonelet type is used to define the type of the associated volume.\n\nskip_hexcore (bool, optional) – Check whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure.\n\njson_data (dict, optional) – JSON dictionary to create a VolumeControlParams object with provided parameters.\n\nExamples\n\n>>> volume_control_params = prime.VolumeControlParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrolstructs/VolumeControlParams.html#overview","title":"VolumeControlParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncell_zonelet_type\n\nCell zonelet type is used to define the type of the associated volume.\n\nskip_hexcore\n\nCheck whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of VolumeControlParams object.\n\nset_default\n\nSet the default values of the VolumeControlParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrolstructs/VolumeControlParams.html#import-detail","title":"VolumeControlParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrolstructs/VolumeControlParams.html#property-detail","title":"VolumeControlParams > Property detail","text":"Property detail\n\n\n\nproperty VolumeControlParams.cell_zonelet_type: ansys.meshing.prime.params.primestructs.CellZoneletType\n\nCell zonelet type is used to define the type of the associated volume.\n\n\n\nproperty VolumeControlParams.skip_hexcore: bool\n\nCheck whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumecontrolstructs/VolumeControlParams.html#method-detail","title":"VolumeControlParams > Method detail","text":"Method detail\n\n\n\nVolumeControlParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeControlParams.__str__() -> str\n\n\n\n\n\nstatic VolumeControlParams.print_default()\n\nPrint the default values of VolumeControlParams object.\n\nExamples\n\n>>> VolumeControlParams.print_default()\n\n\n\nstatic VolumeControlParams.set_default(cell_zonelet_type: ansys.meshing.prime.params.primestructs.CellZoneletType = None, skip_hexcore: bool = None)\n\nSet the default values of the VolumeControlParams object.\n\nParameters\n\ncell_zonelet_type (CellZoneletType, optional) – Cell zonelet type is used to define the type of the associated volume.\n\nskip_hexcore (bool, optional) – Check whether to skip hexahedral cells generation in the core for this volume or not. Applicable only for volumeFillType set to HexcoreTet or HexcorePoly in the AutoMeshParams structure."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/download_toy_car_dsco.html#ansysmeshingprimeexamplesdownload_toy_car_dsco","title":"ansys.meshing.prime.examples.download_toy_car_dsco","text":"ansys.meshing.prime.examples.download_toy_car_dsco\n\n\n\nansys.meshing.prime.examples.download_toy_car_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the DSCO file for the toy car example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     toy_car = prime_examples.download_toy_car_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(toy_car, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreCellElementType.html#hexcorecellelementtype","title":"HexCoreCellElementType","text":"HexCoreCellElementType\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.HexCoreCellElementType\n\nCell element type of hex-shaped cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreCellElementType.html#overview","title":"HexCoreCellElementType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLHEX\n\nGenerates hex type cells.\n\nALLPOLY\n\nGenerates poly type cells.\n\nHEXANDPOLY\n\nGenerates a mix of poly type and hex type cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreCellElementType.html#import-detail","title":"HexCoreCellElementType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/HexCoreCellElementType.html#attribute-detail","title":"HexCoreCellElementType > Attribute detail","text":"Attribute detail\n\n\n\nHexCoreCellElementType.ALLHEX = 1\n\nGenerates hex type cells.\n\n\n\nHexCoreCellElementType.ALLPOLY = 0\n\nGenerates poly type cells.\n\n\n\nHexCoreCellElementType.HEXANDPOLY = 2\n\nGenerates a mix of poly type and hex type cells."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrolstructs/index.html#the-thinvolumecontrolstructspy-module","title":"The thinvolumecontrolstructs.py module","text":"The thinvolumecontrolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrolstructs/index.html#summary","title":"The thinvolumecontrolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nThinVolumeMeshParams\n\nParameters to generate thin volume mesh. This is for internal use only.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/thinvolumecontrolstructs/index.html#description","title":"The thinvolumecontrolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectCircularHolesParams.html#detectcircularholesparams","title":"DetectCircularHolesParams","text":"DetectCircularHolesParams\n\n\n\nclass ansys.meshing.prime.autogen.autoquadmesherstructs.DetectCircularHolesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, allow_curved_topo_faces: bool = None, max_radius_circular_holes: float = None, min_radius_circular_holes: float = None, merge_edge_allow_self_close: bool = None, json_data: dict = None, **kwargs)\n\nParameters for detect circular holes operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectCircularHolesParams object with default parameters.\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.This is a beta parameter. The behavior and name may change in the future.\n\nmax_radius_circular_holes (float, optional) – Maximum radius of circular holes.This is a beta parameter. The behavior and name may change in the future.\n\nmin_radius_circular_holes (float, optional) – Minimum radius of circular holes.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectCircularHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_circular_holes_params = prime.DetectCircularHolesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectCircularHolesParams.html#overview","title":"DetectCircularHolesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nallow_curved_topo_faces\n\nOption to allow holes in curved topoface.\n\nmax_radius_circular_holes\n\nMaximum radius of circular holes.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmin_radius_circular_holes\n\nMinimum radius of circular holes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectCircularHolesParams object.\n\nset_default\n\nSet the default values of the DetectCircularHolesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectCircularHolesParams.html#import-detail","title":"DetectCircularHolesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectCircularHolesParams.html#property-detail","title":"DetectCircularHolesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectCircularHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectCircularHolesParams.max_radius_circular_holes: float\n\nMaximum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectCircularHolesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectCircularHolesParams.min_radius_circular_holes: float\n\nMinimum radius of circular holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/DetectCircularHolesParams.html#method-detail","title":"DetectCircularHolesParams > Method detail","text":"Method detail\n\n\n\nDetectCircularHolesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectCircularHolesParams.__str__() -> str\n\n\n\n\n\nstatic DetectCircularHolesParams.print_default()\n\nPrint the default values of DetectCircularHolesParams object.\n\nExamples\n\n>>> DetectCircularHolesParams.print_default()\n\n\n\nstatic DetectCircularHolesParams.set_default(allow_curved_topo_faces: bool = None, max_radius_circular_holes: float = None, min_radius_circular_holes: float = None, merge_edge_allow_self_close: bool = None)\n\nSet the default values of the DetectCircularHolesParams object.\n\nParameters\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.\n\nmax_radius_circular_holes (float, optional) – Maximum radius of circular holes.\n\nmin_radius_circular_holes (float, optional) – Minimum radius of circular holes.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetContactPreventionsResults.html#setcontactpreventionsresults","title":"SetContactPreventionsResults","text":"SetContactPreventionsResults\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.SetContactPreventionsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with set contact preventions.\n\nParameters\n\nmodel (Model) – Model to create a SetContactPreventionsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set contact preventions.\n\nids (Iterable[int], optional) – Ids of added contact prevention controls.\n\njson_data (dict, optional) – JSON dictionary to create a SetContactPreventionsResults object with provided parameters.\n\nExamples\n\n>>> set_contact_preventions_results = prime.SetContactPreventionsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetContactPreventionsResults.html#overview","title":"SetContactPreventionsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set contact preventions.\n\nids\n\nIds of added contact prevention controls.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetContactPreventionsResults object.\n\nset_default\n\nSet the default values of the SetContactPreventionsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetContactPreventionsResults.html#import-detail","title":"SetContactPreventionsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetContactPreventionsResults.html#property-detail","title":"SetContactPreventionsResults > Property detail","text":"Property detail\n\n\n\nproperty SetContactPreventionsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set contact preventions.\n\n\n\nproperty SetContactPreventionsResults.ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of added contact prevention controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetContactPreventionsResults.html#method-detail","title":"SetContactPreventionsResults > Method detail","text":"Method detail\n\n\n\nSetContactPreventionsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetContactPreventionsResults.__str__() -> str\n\n\n\n\n\nstatic SetContactPreventionsResults.print_default()\n\nPrint the default values of SetContactPreventionsResults object.\n\nExamples\n\n>>> SetContactPreventionsResults.print_default()\n\n\n\nstatic SetContactPreventionsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SetContactPreventionsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the set contact preventions.\n\nids (Iterable[int], optional) – Ids of added contact prevention controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineSplineParams.html#refinesplineparams","title":"RefineSplineParams","text":"RefineSplineParams\n\n\n\nclass ansys.meshing.prime.RefineSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, refine_flag_u: bool = None, refine_flag_v: bool = None, refine_flag_w: bool = None, spline_refinement_type: SplineRefinementType = None, json_data: dict = None, **kwargs)\n\nSpline refinement parameters.\n\nParameters\n\nmodel (Model) – Model to create a RefineSplineParams object with default parameters.\n\nrefine_flag_u (bool, optional) – Indicates whether refinement is applied in u direction.\n\nrefine_flag_v (bool, optional) – Indicates whether refinement is applied in v direction.\n\nrefine_flag_w (bool, optional) – Indicates whether refinement is applied in w direction.\n\nspline_refinement_type (SplineRefinementType, optional) – Type of spline refinement. Currently, supports h-refinement and p-refinement.\n\njson_data (dict, optional) – JSON dictionary to create a RefineSplineParams object with provided parameters.\n\nExamples\n\n>>> refine_spline_params = prime.RefineSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineSplineParams.html#overview","title":"RefineSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nrefine_flag_u\n\nIndicates whether refinement is applied in u direction.\n\nrefine_flag_v\n\nIndicates whether refinement is applied in v direction.\n\nrefine_flag_w\n\nIndicates whether refinement is applied in w direction.\n\nspline_refinement_type\n\nType of spline refinement. Currently, supports h-refinement and p-refinement.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of RefineSplineParams object.\n\nset_default\n\nSet the default values of the RefineSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineSplineParams.html#import-detail","title":"RefineSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineSplineParams.html#property-detail","title":"RefineSplineParams > Property detail","text":"Property detail\n\n\n\nproperty RefineSplineParams.refine_flag_u: bool\n\nIndicates whether refinement is applied in u direction.\n\n\n\nproperty RefineSplineParams.refine_flag_v: bool\n\nIndicates whether refinement is applied in v direction.\n\n\n\nproperty RefineSplineParams.refine_flag_w: bool\n\nIndicates whether refinement is applied in w direction.\n\n\n\nproperty RefineSplineParams.spline_refinement_type: SplineRefinementType\n\nType of spline refinement. Currently, supports h-refinement and p-refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/RefineSplineParams.html#method-detail","title":"RefineSplineParams > Method detail","text":"Method detail\n\n\n\nRefineSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nRefineSplineParams.__str__() -> str\n\n\n\n\n\nstatic RefineSplineParams.print_default()\n\nPrint the default values of RefineSplineParams object.\n\nExamples\n\n>>> RefineSplineParams.print_default()\n\n\n\nstatic RefineSplineParams.set_default(refine_flag_u: bool = None, refine_flag_v: bool = None, refine_flag_w: bool = None, spline_refinement_type: SplineRefinementType = None)\n\nSet the default values of the RefineSplineParams object.\n\nParameters\n\nrefine_flag_u (bool, optional) – Indicates whether refinement is applied in u direction.\n\nrefine_flag_v (bool, optional) – Indicates whether refinement is applied in v direction.\n\nrefine_flag_w (bool, optional) – Indicates whether refinement is applied in w direction.\n\nspline_refinement_type (SplineRefinementType, optional) – Type of spline refinement. Currently, supports h-refinement and p-refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbResults.html#exportmapdlcdbresults","title":"ExportMapdlCdbResults","text":"ExportMapdlCdbResults\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportMapdlCdbResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, summary_log: str = None, zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the MAPDL CDB export.\n\nParameters\n\nmodel (Model) – Model to create a ExportMapdlCdbResults object with default parameters.\n\nsummary_log (str, optional) – Summary log for the export operation in json format.This is a beta parameter. The behavior and name may change in the future.\n\nzone_mesh_results (List[ZoneMeshResult], optional) – Zone-wise mesh information for elements in the exported model.This is a beta parameter. The behavior and name may change in the future.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a ExportMapdlCdbResults object with provided parameters.\n\nExamples\n\n>>> export_mapdl_cdb_results = prime.ExportMapdlCdbResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbResults.html#overview","title":"ExportMapdlCdbResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nsummary_log\n\nSummary log for the export operation in json format.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nzone_mesh_results\n\nZone-wise mesh information for elements in the exported model.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportMapdlCdbResults object.\n\nset_default\n\nSet the default values of the ExportMapdlCdbResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbResults.html#import-detail","title":"ExportMapdlCdbResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbResults.html#property-detail","title":"ExportMapdlCdbResults > Property detail","text":"Property detail\n\n\n\nproperty ExportMapdlCdbResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty ExportMapdlCdbResults.summary_log: str\n\nSummary log for the export operation in json format.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty ExportMapdlCdbResults.zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult]\n\nZone-wise mesh information for elements in the exported model.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportMapdlCdbResults.html#method-detail","title":"ExportMapdlCdbResults > Method detail","text":"Method detail\n\n\n\nExportMapdlCdbResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportMapdlCdbResults.__str__() -> str\n\n\n\n\n\nstatic ExportMapdlCdbResults.print_default()\n\nPrint the default values of ExportMapdlCdbResults object.\n\nExamples\n\n>>> ExportMapdlCdbResults.print_default()\n\n\n\nstatic ExportMapdlCdbResults.set_default(summary_log: str = None, zone_mesh_results: ansys.meshing.prime.params.primestructs.List[ZoneMeshResult] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the ExportMapdlCdbResults object.\n\nParameters\n\nsummary_log (str, optional) – Summary log for the export operation in json format.\n\nzone_mesh_results (List[ZoneMeshResult], optional) – Zone-wise mesh information for elements in the exported model.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/SurfaceMeshSizeScaling.html#surfacemeshsizescaling","title":"SurfaceMeshSizeScaling","text":"SurfaceMeshSizeScaling\n\n\n\nclass ansys.meshing.prime.autogen.automeshstructs.SurfaceMeshSizeScaling(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, factor: float = None, size_range_min: float = None, size_range_max: float = None, json_data: dict = None, **kwargs)\n\nSettings related to scaling of surface mesh size for hexcore refinement.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceMeshSizeScaling object with default parameters.\n\nfactor (float, optional) – Value by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_min (float, optional) – Minimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_max (float, optional) – Maximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceMeshSizeScaling object with provided parameters.\n\nExamples\n\n>>> surface_mesh_size_scaling = prime.SurfaceMeshSizeScaling(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/SurfaceMeshSizeScaling.html#overview","title":"SurfaceMeshSizeScaling > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nfactor\n\nValue by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_max\n\nMaximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_min\n\nMinimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceMeshSizeScaling object.\n\nset_default\n\nSet the default values of the SurfaceMeshSizeScaling object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/SurfaceMeshSizeScaling.html#import-detail","title":"SurfaceMeshSizeScaling > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/SurfaceMeshSizeScaling.html#property-detail","title":"SurfaceMeshSizeScaling > Property detail","text":"Property detail\n\n\n\nproperty SurfaceMeshSizeScaling.factor: float\n\nValue by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\n\n\nproperty SurfaceMeshSizeScaling.size_range_max: float\n\nMaximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\n\n\nproperty SurfaceMeshSizeScaling.size_range_min: float\n\nMinimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automeshstructs/SurfaceMeshSizeScaling.html#method-detail","title":"SurfaceMeshSizeScaling > Method detail","text":"Method detail\n\n\n\nSurfaceMeshSizeScaling.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceMeshSizeScaling.__str__() -> str\n\n\n\n\n\nstatic SurfaceMeshSizeScaling.print_default()\n\nPrint the default values of SurfaceMeshSizeScaling object.\n\nExamples\n\n>>> SurfaceMeshSizeScaling.print_default()\n\n\n\nstatic SurfaceMeshSizeScaling.set_default(factor: float = None, size_range_min: float = None, size_range_max: float = None)\n\nSet the default values of the SurfaceMeshSizeScaling object.\n\nParameters\n\nfactor (float, optional) – Value by which size should be multiplied when the size falls within a certain range. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_min (float, optional) – Minimum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure.\n\nsize_range_max (float, optional) – Maximum size required to apply scaling. Applicable only when size field type is set to Geometric in AutoMeshParams structure."},{"objectID":"Home","href":"api/ansys/meshing/prime/SolverType.html#solvertype","title":"SolverType","text":"SolverType\n\n\n\nclass ansys.meshing.prime.SolverType\n\nType of solver."},{"objectID":"Home","href":"api/ansys/meshing/prime/SolverType.html#overview","title":"SolverType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nFLUENT\n\nSolver type is Fluent. Creates a group of face quality measures mostly used in Fluent.\n\nMAPDL\n\nSolver type is MAPDL. Creates a group of face quality measures mostly used in MAPDL."},{"objectID":"Home","href":"api/ansys/meshing/prime/SolverType.html#import-detail","title":"SolverType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SolverType.html#attribute-detail","title":"SolverType > Attribute detail","text":"Attribute detail\n\n\n\nSolverType.FLUENT = 1\n\nSolver type is Fluent. Creates a group of face quality measures mostly used in Fluent.\n\n\n\nSolverType.MAPDL = 2\n\nSolver type is MAPDL. Creates a group of face quality measures mostly used in MAPDL."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsResults.html#subtractzoneletsresults","title":"SubtractZoneletsResults","text":"SubtractZoneletsResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.SubtractZoneletsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults structure associated with subtracting zonelets.\n\nParameters\n\nmodel (Model) – Model to create a SubtractZoneletsResults object with default parameters.\n\nprocessing_time (float, optional) – Processing time for subtract operation.\n\nerror_code (ErrorCode, optional) – Error Code associated with subtract operation.\n\njson_data (dict, optional) – JSON dictionary to create a SubtractZoneletsResults object with provided parameters.\n\nExamples\n\n>>> subtract_zonelets_results = prime.SubtractZoneletsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsResults.html#overview","title":"SubtractZoneletsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with subtract operation.\n\nprocessing_time\n\nProcessing time for subtract operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SubtractZoneletsResults object.\n\nset_default\n\nSet the default values of the SubtractZoneletsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsResults.html#import-detail","title":"SubtractZoneletsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsResults.html#property-detail","title":"SubtractZoneletsResults > Property detail","text":"Property detail\n\n\n\nproperty SubtractZoneletsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with subtract operation.\n\n\n\nproperty SubtractZoneletsResults.processing_time: float\n\nProcessing time for subtract operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/SubtractZoneletsResults.html#method-detail","title":"SubtractZoneletsResults > Method detail","text":"Method detail\n\n\n\nSubtractZoneletsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSubtractZoneletsResults.__str__() -> str\n\n\n\n\n\nstatic SubtractZoneletsResults.print_default()\n\nPrint the default values of SubtractZoneletsResults object.\n\nExamples\n\n>>> SubtractZoneletsResults.print_default()\n\n\n\nstatic SubtractZoneletsResults.set_default(processing_time: float = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the SubtractZoneletsResults object.\n\nParameters\n\nprocessing_time (float, optional) – Processing time for subtract operation.\n\nerror_code (ErrorCode, optional) – Error Code associated with subtract operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityResults.html#searchbyqualityresults","title":"SearchByQualityResults","text":"SearchByQualityResults\n\n\n\nclass ansys.meshing.prime.SearchByQualityResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, max_quality: float = None, min_quality: float = None, json_data: dict = None, **kwargs)\n\nResults of search by quality.\n\nParameters\n\nmodel (Model) – Model to create a SearchByQualityResults object with default parameters.\n\nn_found (int, optional) – Number of face elements found by search for given quality limit.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nmax_quality (float, optional) – Maximum quality found by search.\n\nmin_quality (float, optional) – Minimum quality found by search.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByQualityResults object with provided parameters.\n\nExamples\n\n>>> search_by_quality_results = prime.SearchByQualityResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityResults.html#overview","title":"SearchByQualityResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nmax_quality\n\nMaximum quality found by search.\n\nmin_quality\n\nMinimum quality found by search.\n\nn_found\n\nNumber of face elements found by search for given quality limit.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByQualityResults object.\n\nset_default\n\nSet the default values of the SearchByQualityResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityResults.html#import-detail","title":"SearchByQualityResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityResults.html#property-detail","title":"SearchByQualityResults > Property detail","text":"Property detail\n\n\n\nproperty SearchByQualityResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation.\n\n\n\nproperty SearchByQualityResults.max_quality: float\n\nMaximum quality found by search.\n\n\n\nproperty SearchByQualityResults.min_quality: float\n\nMinimum quality found by search.\n\n\n\nproperty SearchByQualityResults.n_found: int\n\nNumber of face elements found by search for given quality limit."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityResults.html#method-detail","title":"SearchByQualityResults > Method detail","text":"Method detail\n\n\n\nSearchByQualityResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByQualityResults.__str__() -> str\n\n\n\n\n\nstatic SearchByQualityResults.print_default()\n\nPrint the default values of SearchByQualityResults object.\n\nExamples\n\n>>> SearchByQualityResults.print_default()\n\n\n\nstatic SearchByQualityResults.set_default(n_found: int = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, max_quality: float = None, min_quality: float = None)\n\nSet the default values of the SearchByQualityResults object.\n\nParameters\n\nn_found (int, optional) – Number of face elements found by search for given quality limit.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\nmax_quality (float, optional) – Maximum quality found by search.\n\nmin_quality (float, optional) – Minimum quality found by search."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSolid.html#igaunstructuredsplinesolid","title":"IGAUnstructuredSplineSolid","text":"IGAUnstructuredSplineSolid\n\n\n\nclass ansys.meshing.prime.autogen.igastructs.IGAUnstructuredSplineSolid(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id: int = None, degree: int = None, invalid_jacobian_elements_count: int = None, json_data: dict = None, **kwargs)\n\nInformation of unstructured spline solid.\n\nParameters\n\nmodel (Model) – Model to create a IGAUnstructuredSplineSolid object with default parameters.\n\nid (int, optional) – Id of the unstructured spline solid.This is a beta parameter. The behavior and name may change in the future.\n\ndegree (int, optional) – Degree of the spline solid.This is a beta parameter. The behavior and name may change in the future.\n\ninvalid_jacobian_elements_count (int, optional) – Count of elements with negative jacobian.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a IGAUnstructuredSplineSolid object with provided parameters.\n\nExamples\n\n>>> iga_unstructured_spline_solid = prime.IGAUnstructuredSplineSolid(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSolid.html#overview","title":"IGAUnstructuredSplineSolid > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndegree\n\nDegree of the spline solid.\n\nid\n\nId of the unstructured spline solid.\n\ninvalid_jacobian_elements_count\n\nCount of elements with negative jacobian.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of IGAUnstructuredSplineSolid object.\n\nset_default\n\nSet the default values of the IGAUnstructuredSplineSolid object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSolid.html#import-detail","title":"IGAUnstructuredSplineSolid > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSolid.html#property-detail","title":"IGAUnstructuredSplineSolid > Property detail","text":"Property detail\n\n\n\nproperty IGAUnstructuredSplineSolid.degree: int\n\nDegree of the spline solid.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty IGAUnstructuredSplineSolid.id: int\n\nId of the unstructured spline solid.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty IGAUnstructuredSplineSolid.invalid_jacobian_elements_count: int\n\nCount of elements with negative jacobian.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/IGAUnstructuredSplineSolid.html#method-detail","title":"IGAUnstructuredSplineSolid > Method detail","text":"Method detail\n\n\n\nIGAUnstructuredSplineSolid.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nIGAUnstructuredSplineSolid.__str__() -> str\n\n\n\n\n\nstatic IGAUnstructuredSplineSolid.print_default()\n\nPrint the default values of IGAUnstructuredSplineSolid object.\n\nExamples\n\n>>> IGAUnstructuredSplineSolid.print_default()\n\n\n\nstatic IGAUnstructuredSplineSolid.set_default(id: int = None, degree: int = None, invalid_jacobian_elements_count: int = None)\n\nSet the default values of the IGAUnstructuredSplineSolid object.\n\nParameters\n\nid (int, optional) – Id of the unstructured spline solid.\n\ndegree (int, optional) – Degree of the spline solid.\n\ninvalid_jacobian_elements_count (int, optional) – Count of elements with negative jacobian."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/periodiccontrol/PeriodicControl.html#periodiccontrol","title":"PeriodicControl","text":"PeriodicControl\n\n\n\nclass ansys.meshing.prime.core.periodiccontrol.PeriodicControl(model, id, object_id, name, local=False)\n\nPeriodic controls provide settings for the recovery of periodic surfaces.\n\nA periodic control is specified by the scope (source surfaces) and\nthe transformation parameters: the center, axis and angle.\n\nParameters\n\nmodel (Model) – Server model to create PeriodicControl object.\n\nid (int) – Id of the PeriodicControl.\n\nobject_id (int) – Object id of the PeriodicControl.\n\nname (str) – Name of the PeriodicControl.\n\nlocal (bool, optional) – Unused. The default is False."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/periodiccontrol/PeriodicControl.html#overview","title":"PeriodicControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_params\n\nGet the parameters of the periodic control.\n\nget_scope\n\nGets the scope for the periodic control.\n\nget_summary\n\nGet the periodic control summary along with the evaluated scope for the provided parameters.\n\nset_params\n\nSet the periodic control parameters.\n\nset_scope\n\nSets the scope for periodic control to evaluate.\n\nset_suggested_name\n\nSet the unique name for the periodic control to a suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of PeriodicControl.\n\nname\n\nGet the name of the periodic control.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nGet a representation of the class in string format."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/periodiccontrol/PeriodicControl.html#import-detail","title":"PeriodicControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/periodiccontrol/PeriodicControl.html#property-detail","title":"PeriodicControl > Property detail","text":"Property detail\n\n\n\nproperty PeriodicControl.id\n\nGet the id of PeriodicControl.\n\n\n\nproperty PeriodicControl.name\n\nGet the name of the periodic control.\n\nReturns\n\nName of the periodic control.\n\nReturn type\n\nstr\n\nExamples\n\n>>> print(periodic_control.name)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/periodiccontrol/PeriodicControl.html#method-detail","title":"PeriodicControl > Method detail","text":"Method detail\n\n\n\nPeriodicControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControl.__str__() -> str\n\nGet a representation of the class in string format.\n\nReturns\n\nClass data in string format.\n\nReturn type\n\nstr\n\n\n\nPeriodicControl.get_params() -> ansys.meshing.prime.params.primestructs.PeriodicControlParams\n\nGet the parameters of the periodic control.\n\nReturns\n\nReturn parameters of the periodic control.\n\nReturn type\n\nPeriodicControlParams\n\nExamples\n\n>>> params = periodic_control.get_params()\n\n\n\nPeriodicControl.get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the scope for the periodic control.\n\nReturns\n\nReturns the scope of the periodic control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> scope_definition = periodic_control.get_scope()\n\n\n\nPeriodicControl.get_summary(params: ansys.meshing.prime.params.primestructs.PeriodicControlSummaryParams) -> ansys.meshing.prime.params.primestructs.PeriodicControlSummaryResult\n\nGet the periodic control summary along with the evaluated scope for the provided parameters.\n\nParameters\n\nparams (PeriodicControlSummaryParams) – Periodic control summary parameters.\n\nReturns\n\nReturn the PeriodicControlSummaryResult.\n\nReturn type\n\nPeriodicControlSummaryResult\n\nExamples\n\n>>> results = periodic_control.get_summary(prime.PeriodicControlSummaryParams(model=model))\n\n\n\nPeriodicControl.set_params(periodic_control_params: ansys.meshing.prime.params.primestructs.PeriodicControlParams) -> ansys.meshing.prime.params.primestructs.SetParamsResults\n\nSet the periodic control parameters.\n\nParameters\n\nperiodic_control_params (PeriodicControlParams) – Parameters to control periodic surface recovery.\n\nExamples\n\n>>> periodic_control.set_params(\n>>>                  PeriodicControlParams(model=model,\n>>>                     center=[0,0,0], axis=[0,1,0], angle=180))\n\n\n\nPeriodicControl.set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the scope for periodic control to evaluate.\n\nPeriodic Control uses scope to evaluate entities for which periodic surface recovery must be carried out.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for periodic surface recovery.\n\nReturns\n\nReturns the SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> surface_scope = prime.ScopeDefinition(model=model,\n>>>                     entity_type=prime.ScopeEntity.FACEZONELETS,\n>>>                     evaluation_type=prime.ScopeEvaluationType.LABELS,\n>>>                     label_expression=\"periodic-1\")\n>>> periodic_control.set_scope(surface_scope)\n\n\n\nPeriodicControl.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the periodic control to a suggested name.\n\nParameters\n\nname (str) – Suggested name for the periodic control.\n\nReturns\n\nNewly suggested name of the periodic control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> periodic_control.set_suggested_name(\"control1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetParamsResults.html#setparamsresults","title":"SetParamsResults","text":"SetParamsResults\n\n\n\nclass ansys.meshing.prime.SetParamsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the set parameters operation.\n\nParameters\n\nmodel (Model) – Model to create a SetParamsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set parameters operation.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set parameters operation.\n\njson_data (dict, optional) – JSON dictionary to create a SetParamsResults object with provided parameters.\n\nExamples\n\n>>> set_params_results = prime.SetParamsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetParamsResults.html#overview","title":"SetParamsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set parameters operation.\n\nwarning_code\n\nWarning code associated with the set parameters operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetParamsResults object.\n\nset_default\n\nSet the default values of the SetParamsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetParamsResults.html#import-detail","title":"SetParamsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SetParamsResults.html#property-detail","title":"SetParamsResults > Property detail","text":"Property detail\n\n\n\nproperty SetParamsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set parameters operation.\n\n\n\nproperty SetParamsResults.warning_code: ansys.meshing.prime.params.primestructs.WarningCode\n\nWarning code associated with the set parameters operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SetParamsResults.html#method-detail","title":"SetParamsResults > Method detail","text":"Method detail\n\n\n\nSetParamsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetParamsResults.__str__() -> str\n\n\n\n\n\nstatic SetParamsResults.print_default()\n\nPrint the default values of SetParamsResults object.\n\nExamples\n\n>>> SetParamsResults.print_default()\n\n\n\nstatic SetParamsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None)\n\nSet the default values of the SetParamsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the set parameters operation.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set parameters operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/index.html#the-mesh_utilpy-module","title":"The mesh_util.py module","text":"The mesh_util.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/index.html#summary","title":"The mesh_util.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMesh\n\nProvides methods for users who are new to meshing.\n\nEnums\n\n\n\n\n\nLabelToZoneMethod\n\nProvides for creating zones from labels.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/mesh_util/index.html#description","title":"The mesh_util.py module > Description","text":"Description\n\nModule for meshing utility functions."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateShellBLResults.html#createshellblresults","title":"CreateShellBLResults","text":"CreateShellBLResults\n\n\n\nclass ansys.meshing.prime.CreateShellBLResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults associated with the ShellBL mesh.\n\nParameters\n\nmodel (Model) – Model to create a CreateShellBLResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.This is a beta parameter. The behavior and name may change in the future.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a CreateShellBLResults object with provided parameters.\n\nExamples\n\n>>> create_shell_blresults = prime.CreateShellBLResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateShellBLResults.html#overview","title":"CreateShellBLResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nwarning_codes\n\nWarning codes associated with the operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateShellBLResults object.\n\nset_default\n\nSet the default values of the CreateShellBLResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateShellBLResults.html#import-detail","title":"CreateShellBLResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateShellBLResults.html#property-detail","title":"CreateShellBLResults > Property detail","text":"Property detail\n\n\n\nproperty CreateShellBLResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty CreateShellBLResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with the operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/CreateShellBLResults.html#method-detail","title":"CreateShellBLResults > Method detail","text":"Method detail\n\n\n\nCreateShellBLResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateShellBLResults.__str__() -> str\n\n\n\n\n\nstatic CreateShellBLResults.print_default()\n\nPrint the default values of CreateShellBLResults object.\n\nExamples\n\n>>> CreateShellBLResults.print_default()\n\n\n\nstatic CreateShellBLResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the CreateShellBLResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with the operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryResults.html#surfacediagnosticsummaryresults","title":"SurfaceDiagnosticSummaryResults","text":"SurfaceDiagnosticSummaryResults\n\n\n\nclass ansys.meshing.prime.SurfaceDiagnosticSummaryResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_self_intersections: int = None, n_free_edges: int = None, n_multi_edges: int = None, n_duplicate_faces: int = None, json_data: dict = None, **kwargs)\n\nResults of surface diagnostic summary.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceDiagnosticSummaryResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the surface diagnostic summary.\n\nn_self_intersections (int, optional) – Number of self intersecting faces identified.\n\nn_free_edges (int, optional) – Number of free face edges identified.\n\nn_multi_edges (int, optional) – Number of multi face edges identified.\n\nn_duplicate_faces (int, optional) – Number of duplicate faces identified.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceDiagnosticSummaryResults object with provided parameters.\n\nExamples\n\n>>> surface_diagnostic_summary_results = prime.SurfaceDiagnosticSummaryResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryResults.html#overview","title":"SurfaceDiagnosticSummaryResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the surface diagnostic summary.\n\nn_duplicate_faces\n\nNumber of duplicate faces identified.\n\nn_free_edges\n\nNumber of free face edges identified.\n\nn_multi_edges\n\nNumber of multi face edges identified.\n\nn_self_intersections\n\nNumber of self intersecting faces identified.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceDiagnosticSummaryResults object.\n\nset_default\n\nSet the default values of the SurfaceDiagnosticSummaryResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryResults.html#import-detail","title":"SurfaceDiagnosticSummaryResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryResults.html#property-detail","title":"SurfaceDiagnosticSummaryResults > Property detail","text":"Property detail\n\n\n\nproperty SurfaceDiagnosticSummaryResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the surface diagnostic summary.\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_duplicate_faces: int\n\nNumber of duplicate faces identified.\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_free_edges: int\n\nNumber of free face edges identified.\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_multi_edges: int\n\nNumber of multi face edges identified.\n\n\n\nproperty SurfaceDiagnosticSummaryResults.n_self_intersections: int\n\nNumber of self intersecting faces identified."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryResults.html#method-detail","title":"SurfaceDiagnosticSummaryResults > Method detail","text":"Method detail\n\n\n\nSurfaceDiagnosticSummaryResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceDiagnosticSummaryResults.__str__() -> str\n\n\n\n\n\nstatic SurfaceDiagnosticSummaryResults.print_default()\n\nPrint the default values of SurfaceDiagnosticSummaryResults object.\n\nExamples\n\n>>> SurfaceDiagnosticSummaryResults.print_default()\n\n\n\nstatic SurfaceDiagnosticSummaryResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_self_intersections: int = None, n_free_edges: int = None, n_multi_edges: int = None, n_duplicate_faces: int = None)\n\nSet the default values of the SurfaceDiagnosticSummaryResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the surface diagnostic summary.\n\nn_self_intersections (int, optional) – Number of self intersecting faces identified.\n\nn_free_edges (int, optional) – Number of free face edges identified.\n\nn_multi_edges (int, optional) – Number of multi face edges identified.\n\nn_duplicate_faces (int, optional) – Number of duplicate faces identified."},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshedSizingParams.html#meshedsizingparams","title":"MeshedSizingParams","text":"MeshedSizingParams\n\n\n\nclass ansys.meshing.prime.MeshedSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, growth_rate: float = None, json_data: dict = None, **kwargs)\n\nSize field computed using meshed size control enables you to set the size based on existing sizes.\n\nParameters\n\nmodel (Model) – Model to create a MeshedSizingParams object with default parameters.\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size.\n\njson_data (dict, optional) – JSON dictionary to create a MeshedSizingParams object with provided parameters.\n\nExamples\n\n>>> meshed_sizing_params = prime.MeshedSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshedSizingParams.html#overview","title":"MeshedSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nGrowth rate used for transitioning from one element size to neighbor element size.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MeshedSizingParams object.\n\nset_default\n\nSet the default values of the MeshedSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshedSizingParams.html#import-detail","title":"MeshedSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshedSizingParams.html#property-detail","title":"MeshedSizingParams > Property detail","text":"Property detail\n\n\n\nproperty MeshedSizingParams.growth_rate: float\n\nGrowth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshedSizingParams.html#method-detail","title":"MeshedSizingParams > Method detail","text":"Method detail\n\n\n\nMeshedSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMeshedSizingParams.__str__() -> str\n\n\n\n\n\nstatic MeshedSizingParams.print_default()\n\nPrint the default values of MeshedSizingParams object.\n\nExamples\n\n>>> MeshedSizingParams.print_default()\n\n\n\nstatic MeshedSizingParams.set_default(growth_rate: float = None)\n\nSet the default values of the MeshedSizingParams object.\n\nParameters\n\ngrowth_rate (float, optional) – Growth rate used for transitioning from one element size to neighbor element size."},{"objectID":"Home","href":"api/ansys/meshing/prime/Connect.html#connect","title":"Connect","text":"Connect\n\n\n\nclass ansys.meshing.prime.Connect(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nConnect face zonelets.\n\nPerform surface connection using various connect algorithms on face zonelets.\n\nParameters\n\nmodel (Model) – Server model to create Connect object.\n\nNotes\n\nConnect operations support only computational mesh, which is mesh with reasonable size changes and quality. Faceted geometry, which is STL-like mesh that can have extreme size changes and many sliver elements, not supported."},{"objectID":"Home","href":"api/ansys/meshing/prime/Connect.html#overview","title":"Connect > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nfuse_face_zonelets\n\nPerform fuse between overlapping face zonelets within a single part. Surfaces that are fused can then be colocated, merged or removed as directed.\n\nintersect_face_zonelets\n\nPerform intersection between specified face zonelets of the part with the given intersect parameters.\n\njoin_face_zonelets\n\nJoins a set of face zones with another set of face zones.\n\nmerge_boundary_nodes\n\nMerges boundary nodes of source face zonelets with boundary nodes of target face zonelets according to the provided parameters.\n\nstitch_face_zonelets\n\nStitches a set of face zonelets with another set of face zonelets.\n\nsubtract_volumes\n\nSubtract cutter volumes from target volumes. Volumes should be computed prior to calling this function. If multiple parts are being merged to form a single part, then volumes should be computed for each part prior to merging. Use compute_closed_volumes to do so. Volumes involved in this operation should not have self intersections. You can use SearchZoneletsBySelfIntersections to check self intersections in the volume.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for Connect.\n\n__exit__\n\nExit context for Connect.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/Connect.html#import-detail","title":"Connect > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/Connect.html#method-detail","title":"Connect > Method detail","text":"Method detail\n\n\n\nConnect.__enter__()\n\nEnter context for Connect.\n\n\n\nConnect.__exit__(type, value, traceback)\n\nExit context for Connect.\n\n\n\nConnect.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nConnect.fuse_face_zonelets(part_id: int, source_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], target_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.FuseParams) -> ansys.meshing.prime.params.primestructs.FuseResults\n\nPerform fuse between overlapping face zonelets within a single part. Surfaces that are fused can then be colocated, merged or removed as directed.\n\nParameters\n\npart_id (int) – Id of the part.\n\nsource_face_zonelet_ids (Iterable[int]) – Ids of source face zonelets to be fused.\n\ntarget_face_zonelet_ids (Iterable[int]) – Ids of target face zonelets to be fused.\n\nparams (FuseParams) – Parameters for fuse operation.\n\nReturns\n\nReturns the FuseResults.\n\nReturn type\n\nFuseResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\nconnect = Connect(model = model)\nconnect.fuse_face_zonelets(part.id, source_face_zonelet_ids, target_face_zonelet_ids, fuse_params)\n\n\n\nConnect.intersect_face_zonelets(part_id: int, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], with_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.IntersectParams) -> ansys.meshing.prime.params.primestructs.ConnectResults\n\nPerform intersection between specified face zonelets of the part with the given intersect parameters.\n\nParameters\n\npart_id (int) – Id of the part.\n\nface_zonelet_ids (Iterable[int]) – Face zonelets to be intersected.\n\nwith_face_zonelet_ids (Iterable[int]) – Face zonelets to be intersected with.\n\nparams (IntersectParams) – Parameters for intersection.\n\nReturns\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.intersect_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, params)\n\n\n\nConnect.join_face_zonelets(part_id: int, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], with_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.JoinParams) -> ansys.meshing.prime.params.primestructs.ConnectResults\n\nJoins a set of face zones with another set of face zones.\n\nParameters\n\npart_id (int) – Id of the part.\n\nface_zonelet_ids (Iterable[int]) – Face zonelets to be joined.\n\nwith_face_zonelet_ids (Iterable[int]) – Face zonelets to be joined with.\n\nparams (JoinParams) – Parameters for join.\n\nReturns\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.join_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, params)\n\n\n\nConnect.merge_boundary_nodes(part_id: int, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], with_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergeBoundaryNodesParams) -> ansys.meshing.prime.params.primestructs.MergeBoundaryNodesResults\n\nMerges boundary nodes of source face zonelets with boundary nodes of target face zonelets according to the provided parameters.\n\nParameters\n\npart_id (int) – Id of the part where merging has to take place.\n\nface_zonelet_ids (Iterable[int]) – Ids of the source face zonelets.\n\nwith_face_zonelet_ids (Iterable[int]) – Ids of the target face zonelets.\n\nparams (MergeBoundaryNodesParams) – Parameters for merging boundary nodes.\n\nReturns\n\nReturns the MergeBoundaryNodesResults.\n\nReturn type\n\nMergeBoundaryNodesResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.MergeBoundaryNodes(2, [2,3], [4,5], params)\n\n\n\nConnect.stitch_face_zonelets(part_id: int, face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], with_face_zonelet_ids: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.StitchParams) -> ansys.meshing.prime.params.primestructs.ConnectResults\n\nStitches a set of face zonelets with another set of face zonelets.\n\nParameters\n\npart_id (int) – Id of the part.\n\nface_zonelet_ids (Iterable[int]) – Face zonelets to be stitched.\n\nwith_face_zonelet_ids (Iterable[int]) – Face zonelets to be stitched with.\n\nparams (StitchParams) – Parameters for stitch.\n\nReturns\n\nReturns the ConnectResults.\n\nReturn type\n\nConnectResults\n\nExamples\n\n>>> connect = Connect(model = model)\n>>> results = connect.stitch_face_zonelets (part_id, face_zonelet_ids, with_face_zonelet_ids, stitch_params)\n\n\n\nConnect.subtract_volumes(part_id: int, target_volumes: ansys.meshing.prime.params.primestructs.Iterable[int], cutter_volumes: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.SubtractVolumesParams) -> ansys.meshing.prime.params.primestructs.SubtractVolumesResults\n\nSubtract cutter volumes from target volumes. Volumes should be computed prior to calling this function. If multiple parts are being merged to form a single part, then volumes should be computed for each part prior to merging. Use compute_closed_volumes to do so. Volumes involved in this operation should not have self intersections. You can use SearchZoneletsBySelfIntersections to check self intersections in the volume.\n\nParameters\n\npart_id (int) – Id of part containing target and cutter volumes for subtract operation.\n\ntarget_volumes (Iterable[int]) – Ids of target volumes.\n\ncutter_volumes (Iterable[int]) – Ids of cutter volumes.\n\nparams (SubtractVolumesParams) – Parameters to control subtraction of volumes.\n\nReturns\n\nReturns the SubtractVolumesResults.\n\nReturn type\n\nSubtractVolumesResults\n\nExamples\n\n>>> results = connect.subtract_volumes(part_id, target_volumes, cutter_volumes, params)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointResults.html#creatematerialpointresults","title":"CreateMaterialPointResults","text":"CreateMaterialPointResults\n\n\n\nclass ansys.meshing.prime.autogen.materialpointmanagerstructs.CreateMaterialPointResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id: int = None, assigned_name: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)\n\nResults structure associated with create material point operation.\n\nParameters\n\nmodel (Model) – Model to create a CreateMaterialPointResults object with default parameters.\n\nid (int, optional) – Id of the material point created.\n\nassigned_name (str, optional) – Assigned name of the material point created.\n\nerror_code (ErrorCode, optional) – Error code associated with create material point operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with create material point operation.\n\njson_data (dict, optional) – JSON dictionary to create a CreateMaterialPointResults object with provided parameters.\n\nExamples\n\n>>> create_material_point_results = prime.CreateMaterialPointResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointResults.html#overview","title":"CreateMaterialPointResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nassigned_name\n\nAssigned name of the material point created.\n\nerror_code\n\nError code associated with create material point operation.\n\nid\n\nId of the material point created.\n\nwarning_codes\n\nWarning codes associated with create material point operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateMaterialPointResults object.\n\nset_default\n\nSet the default values of the CreateMaterialPointResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointResults.html#import-detail","title":"CreateMaterialPointResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointResults.html#property-detail","title":"CreateMaterialPointResults > Property detail","text":"Property detail\n\n\n\nproperty CreateMaterialPointResults.assigned_name: str\n\nAssigned name of the material point created.\n\n\n\nproperty CreateMaterialPointResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with create material point operation.\n\n\n\nproperty CreateMaterialPointResults.id: int\n\nId of the material point created.\n\n\n\nproperty CreateMaterialPointResults.warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]\n\nWarning codes associated with create material point operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/materialpointmanagerstructs/CreateMaterialPointResults.html#method-detail","title":"CreateMaterialPointResults > Method detail","text":"Method detail\n\n\n\nCreateMaterialPointResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateMaterialPointResults.__str__() -> str\n\n\n\n\n\nstatic CreateMaterialPointResults.print_default()\n\nPrint the default values of CreateMaterialPointResults object.\n\nExamples\n\n>>> CreateMaterialPointResults.print_default()\n\n\n\nstatic CreateMaterialPointResults.set_default(id: int = None, assigned_name: str = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)\n\nSet the default values of the CreateMaterialPointResults object.\n\nParameters\n\nid (int, optional) – Id of the material point created.\n\nassigned_name (str, optional) – Assigned name of the material point created.\n\nerror_code (ErrorCode, optional) – Error code associated with create material point operation.\n\nwarning_codes (List[WarningCode], optional) – Warning codes associated with create material point operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryParams.html#surfacediagnosticsummaryparams","title":"SurfaceDiagnosticSummaryParams","text":"SurfaceDiagnosticSummaryParams\n\n\n\nclass ansys.meshing.prime.SurfaceDiagnosticSummaryParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, compute_self_intersections: bool = None, compute_free_edges: bool = None, compute_multi_edges: bool = None, compute_duplicate_faces: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control surface diagnostics summary results.\n\nParameters\n\nmodel (Model) – Model to create a SurfaceDiagnosticSummaryParams object with default parameters.\n\nscope (ScopeDefinition, optional) – Scope the face zonelets for surface diagnostics.\n\ncompute_self_intersections (bool, optional) – Control to identify face intersections are present or not.\n\ncompute_free_edges (bool, optional) – Control to identify free face edges are present or not.\n\ncompute_multi_edges (bool, optional) – Control to identify multi face edges are present or not.\n\ncompute_duplicate_faces (bool, optional) – Control to identify duplicate faces are present or not.\n\njson_data (dict, optional) – JSON dictionary to create a SurfaceDiagnosticSummaryParams object with provided parameters.\n\nExamples\n\n>>> surface_diagnostic_summary_params = prime.SurfaceDiagnosticSummaryParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryParams.html#overview","title":"SurfaceDiagnosticSummaryParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncompute_duplicate_faces\n\nControl to identify duplicate faces are present or not.\n\ncompute_free_edges\n\nControl to identify free face edges are present or not.\n\ncompute_multi_edges\n\nControl to identify multi face edges are present or not.\n\ncompute_self_intersections\n\nControl to identify face intersections are present or not.\n\nscope\n\nScope the face zonelets for surface diagnostics.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SurfaceDiagnosticSummaryParams object.\n\nset_default\n\nSet the default values of the SurfaceDiagnosticSummaryParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryParams.html#import-detail","title":"SurfaceDiagnosticSummaryParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryParams.html#property-detail","title":"SurfaceDiagnosticSummaryParams > Property detail","text":"Property detail\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_duplicate_faces: bool\n\nControl to identify duplicate faces are present or not.\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_free_edges: bool\n\nControl to identify free face edges are present or not.\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_multi_edges: bool\n\nControl to identify multi face edges are present or not.\n\n\n\nproperty SurfaceDiagnosticSummaryParams.compute_self_intersections: bool\n\nControl to identify face intersections are present or not.\n\n\n\nproperty SurfaceDiagnosticSummaryParams.scope: ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nScope the face zonelets for surface diagnostics."},{"objectID":"Home","href":"api/ansys/meshing/prime/SurfaceDiagnosticSummaryParams.html#method-detail","title":"SurfaceDiagnosticSummaryParams > Method detail","text":"Method detail\n\n\n\nSurfaceDiagnosticSummaryParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSurfaceDiagnosticSummaryParams.__str__() -> str\n\n\n\n\n\nstatic SurfaceDiagnosticSummaryParams.print_default()\n\nPrint the default values of SurfaceDiagnosticSummaryParams object.\n\nExamples\n\n>>> SurfaceDiagnosticSummaryParams.print_default()\n\n\n\nstatic SurfaceDiagnosticSummaryParams.set_default(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, compute_self_intersections: bool = None, compute_free_edges: bool = None, compute_multi_edges: bool = None, compute_duplicate_faces: bool = None)\n\nSet the default values of the SurfaceDiagnosticSummaryParams object.\n\nParameters\n\nscope (ScopeDefinition, optional) – Scope the face zonelets for surface diagnostics.\n\ncompute_self_intersections (bool, optional) – Control to identify face intersections are present or not.\n\ncompute_free_edges (bool, optional) – Control to identify free face edges are present or not.\n\ncompute_multi_edges (bool, optional) – Control to identify multi face edges are present or not.\n\ncompute_duplicate_faces (bool, optional) – Control to identify duplicate faces are present or not."},{"objectID":"Home","href":"index.html#pyprimemesh-documentation-090dev3","title":"PyPrimeMesh documentation 0.9.0.dev3","text":"PyPrimeMesh documentation 0.9.0.dev3\n\n"},{"objectID":"Home","href":"index.html#introduction","title":"PyPrimeMesh documentation 0.9.0.dev3 > Introduction","text":"Introduction\n\nPyPrimeMesh is part of the PyAnsys effort to facilitate the use of Ansys technologies directly\nfrom Python. PyPrimeMesh consists of various Python modules that help you to acquire geometry and\nprepare surface and volume meshes for multiple solvers. Its primary package is ansys-meshing-prime.\n\nPyPrimeMesh enables you to perform these tasks:\n\nGenerate quad dominant and triangular surface meshes.\n\nGenerate surface meshes with various sizing options like volumetric and constant.\n\nGenerate volume meshes with linear and quadratic elements of various shapes like tetrahedra, polyhedra,\nhexcore, pyramids, and prisms.\n\nGenerate volume meshes with a single process or distributed process.\n\nCheck mesh quality to provide the best solution for the problem and improve predictive\ncapabilities.\n\nPerform mesh diagnostics for free, multi-connected edges, self-intersection, and overlapping faces\nin the model.\n\nModularize meshing algorithms, components, and services for easier reuse in other applications.\n\nExpose microservices and APIs for meshing operations to promote meshing workflow prototyping.\n\nPyPrimeMesh integrates the meshing capabilities of Ansys Prime Server directly into client apps.\nPyPrimeMesh provides a Python-friendly interface to drive the software that manages the\nsubmission of low-level Prime commands, while exchanging data through high-performance gRPC\ninterfaces.\n\nPyPrimeMesh enables you to serve the meshing needs of the industry, providing solutions to complex\nissues. PyPrimeMesh, along with the general-purpose Python code, effortlessly manages your meshing needs.\nPyPrimeMesh is open source. Contributions are welcome."},{"objectID":"Home","href":"index.html#pyprimemesh-features","title":"PyPrimeMesh documentation 0.9.0.dev3 > PyPrimeMesh features","text":"PyPrimeMesh features\n\nPyPrimeMesh consists of many robust APIs. Some APIs do many jobs when called once. Some APIs\ndo only one job when called. These APIs also enable you to query the model and allow you to\nbuild complex models based on the underlying queries. PyPrimeMesh, which is easy to set up\nand execute, has some distinct features:\n\nSupports simple and complex models\n\nSupports CAD import\n\nExports meshes in solver format\n\nSupports parallel processing, like distributed parallel and threaded parallel, and multiple servers\ndriven from Python"},{"objectID":"Home","href":"index.html#quick-code","title":"PyPrimeMesh documentation 0.9.0.dev3 > Quick code","text":"Quick code\n\nHere is a brief example of how you use PyPrimeMesh:\n\nTo launch PyPrimeMesh, you use this code:\n\nTo read a mesh file, you use this code:"},{"objectID":"Home","href":"index.html#documentation-and-issues","title":"PyPrimeMesh documentation 0.9.0.dev3 > Documentation and issues","text":"Documentation and issues\n\nDocumentation for the latest stable release of PyPrimeMesh is hosted at PyPrimeMesh documentation.\n\nIn the upper right corner of the documentation’s title bar, there is an option for switching from\nviewing the documentation for the latest stable release to viewing the documentation for the\ndevelopment version or previously released versions.\n\nYou can also view or\ndownload the\nPyPrimeMesh cheat sheet. This one-page reference provides syntax rules and commands\nfor using PyPrimeMesh.\n\nOn the PyPrimeMesh Issues page,\nyou can create issues to report bugs and request new features. On the PyPrimeMesh Discussions page or the Discussions\npage on the Ansys Developer portal, you can post questions, share ideas, and get community feedback.\n\nTo reach the project support team, email pyansys.core@ansys.com."},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPairType.html#bcpairtype","title":"BCPairType","text":"BCPairType\n\n\n\nclass ansys.meshing.prime.BCPairType\n\nOption to specify boundary condition pair type."},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPairType.html#overview","title":"BCPairType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nEDGE\n\nOption to specify edge zonelet as boundary condition pair.\n\nFACE\n\nOption to specify face zonelet as boundary condition pair."},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPairType.html#import-detail","title":"BCPairType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/BCPairType.html#attribute-detail","title":"BCPairType > Attribute detail","text":"Attribute detail\n\n\n\nBCPairType.EDGE = 2\n\nOption to specify edge zonelet as boundary condition pair.\n\n\n\nBCPairType.FACE = 1\n\nOption to specify face zonelet as boundary condition pair."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetLeakPreventionsResults.html#setleakpreventionsresults","title":"SetLeakPreventionsResults","text":"SetLeakPreventionsResults\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.SetLeakPreventionsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with set leak preventions.\n\nParameters\n\nmodel (Model) – Model to create a SetLeakPreventionsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set leak preventions.\n\nids (Iterable[int], optional) – Ids of added leak prevention controls.\n\njson_data (dict, optional) – JSON dictionary to create a SetLeakPreventionsResults object with provided parameters.\n\nExamples\n\n>>> set_leak_preventions_results = prime.SetLeakPreventionsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetLeakPreventionsResults.html#overview","title":"SetLeakPreventionsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set leak preventions.\n\nids\n\nIds of added leak prevention controls.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetLeakPreventionsResults object.\n\nset_default\n\nSet the default values of the SetLeakPreventionsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetLeakPreventionsResults.html#import-detail","title":"SetLeakPreventionsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetLeakPreventionsResults.html#property-detail","title":"SetLeakPreventionsResults > Property detail","text":"Property detail\n\n\n\nproperty SetLeakPreventionsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set leak preventions.\n\n\n\nproperty SetLeakPreventionsResults.ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of added leak prevention controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetLeakPreventionsResults.html#method-detail","title":"SetLeakPreventionsResults > Method detail","text":"Method detail\n\n\n\nSetLeakPreventionsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetLeakPreventionsResults.__str__() -> str\n\n\n\n\n\nstatic SetLeakPreventionsResults.print_default()\n\nPrint the default values of SetLeakPreventionsResults object.\n\nExamples\n\n>>> SetLeakPreventionsResults.print_default()\n\n\n\nstatic SetLeakPreventionsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the SetLeakPreventionsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the set leak preventions.\n\nids (Iterable[int], optional) – Ids of added leak prevention controls."},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeControl.html#thinvolumecontrol","title":"ThinVolumeControl","text":"ThinVolumeControl\n\n\n\nclass ansys.meshing.prime.ThinVolumeControl(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nThinVolumeControl allows you to generate prisms in the space between surfaces.\n\nThinVolumeControl allows you to control generation of prisms in the thin space between surfaces. Controls include setting the source face scope, target face scope and thin volume mesh parameters.\n\nParameters\n\nmodel (Model) – Server model to create ThinVolumeControl object.\n\nid (int) – Id of the ThinVolumeControl.\n\nobject_id (int) – Object id of the ThinVolumeControl.\n\nname (str) – Name of the ThinVolumeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeControl.html#overview","title":"ThinVolumeControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_source_scope\n\nGets the source of thin volume control scope.\n\nget_target_scope\n\nGets the target of thin volume control scope.\n\nget_volume_scope\n\nGets the volume scope of thin volume control.\n\nset_source_scope\n\nSets the source surface scope of thin volume control.\n\nset_target_scope\n\nSets the target surface scope of thin volume control.\n\nset_thin_volume_mesh_params\n\nSets thin volume mesh parameters for thin volume control.\n\nset_volume_scope\n\nSets the volume scope of thin volume control.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of ThinVolumeControl.\n\nname\n\nGet the name of ThinVolumeControl.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeControl.html#import-detail","title":"ThinVolumeControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeControl.html#property-detail","title":"ThinVolumeControl > Property detail","text":"Property detail\n\n\n\nproperty ThinVolumeControl.id\n\nGet the id of ThinVolumeControl.\n\n\n\nproperty ThinVolumeControl.name\n\nGet the name of ThinVolumeControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/ThinVolumeControl.html#method-detail","title":"ThinVolumeControl > Method detail","text":"Method detail\n\n\n\nThinVolumeControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nThinVolumeControl.get_source_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the source of thin volume control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_source_scope()\n\n\n\nThinVolumeControl.get_target_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the target of thin volume control scope.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_target_scope()\n\n\n\nThinVolumeControl.get_volume_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets the volume scope of thin volume control.\n\nReturns\n\nReturns the ScopeDefinition.\n\nReturn type\n\nScopeDefinition\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> scope = thin_vol_ctrl.get_volume_scope()\n\n\n\nThinVolumeControl.set_source_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the source surface scope of thin volume control.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition source face entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = thin_vol_ctrl.set_source_scope(entities)\n\n\n\nThinVolumeControl.set_target_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the target surface scope of thin volume control.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition for target face entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nExamples\n\n>>> results = thin_vol_ctrl.set_target_scope(entities)\n\n\n\nThinVolumeControl.set_thin_volume_mesh_params(thin_volume_mesh_params: ansys.meshing.prime.params.primestructs.ThinVolumeMeshParams)\n\nSets thin volume mesh parameters for thin volume control.\n\nParameters\n\nthin_volume_mesh_params (ThinVolumeMeshParams) – Parameters to set thin volume control growth.\n\nExamples\n\n>>> results = thin_vol_ctrl.set_thin_volume_mesh_params(ThinVolumeMeshParams(model=model))\n\n\n\nThinVolumeControl.set_volume_scope(entities: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults\n\nSets the volume scope of thin volume control.\n\nParameters\n\nentities (ScopeDefinition) – Scope definition for volume entities.\n\nReturns\n\nReturns SetScopeResults.\n\nReturn type\n\nSetScopeResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = thin_vol_ctrl.set_volume_scope(entities)"},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapSearchResults.html#overlapsearchresults","title":"OverlapSearchResults","text":"OverlapSearchResults\n\n\n\nclass ansys.meshing.prime.OverlapSearchResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_pairs: int = None, overlap_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nProvides ids of a pair of overlapping face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a OverlapSearchResults object with default parameters.\n\nn_pairs (int, optional) – Number of pairs.\n\noverlap_pairs (List[OverlapPairs], optional) – Ids corresponding to pairs of overlapping face zonelets.\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a OverlapSearchResults object with provided parameters.\n\nExamples\n\n>>> overlap_search_results = prime.OverlapSearchResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapSearchResults.html#overview","title":"OverlapSearchResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with failure of operation.\n\nn_pairs\n\nNumber of pairs.\n\noverlap_pairs\n\nIds corresponding to pairs of overlapping face zonelets.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of OverlapSearchResults object.\n\nset_default\n\nSet the default values of the OverlapSearchResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapSearchResults.html#import-detail","title":"OverlapSearchResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapSearchResults.html#property-detail","title":"OverlapSearchResults > Property detail","text":"Property detail\n\n\n\nproperty OverlapSearchResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with failure of operation.\n\n\n\nproperty OverlapSearchResults.n_pairs: int\n\nNumber of pairs.\n\n\n\nproperty OverlapSearchResults.overlap_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs]\n\nIds corresponding to pairs of overlapping face zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/OverlapSearchResults.html#method-detail","title":"OverlapSearchResults > Method detail","text":"Method detail\n\n\n\nOverlapSearchResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nOverlapSearchResults.__str__() -> str\n\n\n\n\n\nstatic OverlapSearchResults.print_default()\n\nPrint the default values of OverlapSearchResults object.\n\nExamples\n\n>>> OverlapSearchResults.print_default()\n\n\n\nstatic OverlapSearchResults.set_default(n_pairs: int = None, overlap_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the OverlapSearchResults object.\n\nParameters\n\nn_pairs (int, optional) – Number of pairs.\n\noverlap_pairs (List[OverlapPairs], optional) – Ids corresponding to pairs of overlapping face zonelets.\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/Model.html#model","title":"Model","text":"Model\n\n\n\nclass ansys.meshing.prime.Model(comm: ansys.meshing.prime.internals.communicator.Communicator, id: int, object_id: int, name: str)\n\nContains all information about Ansys Prime Server.\n\nThis class provides the nucleus of Ansys meshing technology. You can access\nany information in Ansys Prime Server only through the Model class.\nUsing this class, you can query topo data, control data, parts, size fields,\nand more.\n\nParameters\n\ncomm (Communicator) – Communicator to connect with the Ansys Prime server.\n\nid (int) – ID of the model.\n\nobject_id (int) – Object ID of the model.\n\nname (str) – Name of the model."},{"objectID":"Home","href":"api/ansys/meshing/prime/Model.html#overview","title":"Model > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nactivate_volumetric_size_fields\n\nActivate the sizefields identified by the given sizefield ids.\n\nas_polydata\n\nGet the model as a polydata.\n\ncreate_zone\n\nCreates zone for the given zone type.\n\ndeactivate_volumetric_size_fields\n\nDeactivate the size fields with the given size field ids.\n\ndelete_parts\n\nDelete parts and their contents.\n\ndelete_volumetric_size_fields\n\nDelete the sizefields identified by the given sizefield ids.\n\ndelete_zone\n\nDeletes zone with the given id.\n\nget_active_volumetric_size_fields\n\nGet the active sizefield ids.\n\nget_global_sizing_params\n\nGet global sizing parameters.\n\nget_num_compute_nodes\n\nGet the number of compute nodes.\n\nget_num_threads\n\nGet the number of threads enabled for multithreaded operation.\n\nget_part\n\nGet the part by ID.\n\nget_part_by_name\n\nGet the part by name.\n\nget_scoped_polydata\n\nGet the scoped polydata of the model.\n\nget_size_field_name\n\nGets the name of size field with the given id.\n\nget_volumetric_size_fields\n\nGet the sizefield ids.\n\nget_zone_by_name\n\nGets the zone with the provided name.\n\nget_zone_name\n\nGet the name of given zone.\n\nmerge_parts\n\nMerge multiple parts into a single part.\n\nset_global_sizing_params\n\nSet global sizing parameters.\n\nset_num_threads\n\nSets the number of threads for multithreaded operation.\n\nset_suggested_size_field_name\n\nSets the suggested name of size field with the given id.\n\nset_suggested_zone_name\n\nSets the unique name for zone with given id based on the suggested name.\n\nset_working_directory\n\nSet working directory.\n\nstart_distributed_meshing\n\nEnables distributed meshing mode.\n\nProperties\n\n\n\n\n\ncontrol_data\n\nGet the control data for the model.\n\nid\n\nGet the id of Model.\n\nlogger\n\nGet PyPrimeMesh’s logger instance.\n\nmaterial_point_data\n\nGet material point data for the model.\n\nname\n\nGet the name of Model.\n\nparts\n\nGet the list of parts for the model.\n\npython_logger\n\nGet python standard logger from PyPrimeMesh’s logger instance.\n\ntopo_data\n\nGet the TopoData for the model.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nPrint the summary of the model."},{"objectID":"Home","href":"api/ansys/meshing/prime/Model.html#import-detail","title":"Model > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/Model.html#property-detail","title":"Model > Property detail","text":"Property detail\n\n\n\nproperty Model.control_data: ansys.meshing.prime.core.controldata.ControlData\n\nGet the control data for the model.\n\nReturns\n\nControl data for the model.\n\nReturn type\n\nControlData\n\nExamples\n\n>>> control_data = model.control_data\n\n\n\nproperty Model.id\n\nGet the id of Model.\n\n\n\nproperty Model.logger: ansys.meshing.prime.internals.logger.PrimeLogger\n\nGet PyPrimeMesh’s logger instance.\n\nPyPrimeMesh’s logger instance can be used to save the logs to a file,\nredirect the logs to the given stream, control the verbosity\nof messages printed by PyPrimeMesh and more.\n\nReturns\n\nPyPrimeMesh’s logger instance.\n\nReturn type\n\nPrimeLogger\n\nExamples\n\nSave logs to a file.\n\n>>> model.logger.add_file_handler(logs_dir=r\"./tmp\")\n\n\n\nproperty Model.material_point_data: ansys.meshing.prime.autogen.materialpointmanager.MaterialPointManager\n\nGet material point data for the model.\n\nThe Material Point Manager is used to create, delete, and manage material points.\n\nReturns\n\nMaterial Point Manager.\n\nReturn type\n\nMaterialPointManager\n\nExamples\n\n>>> mpt_data = model.material_point_data\n\n\n\nproperty Model.name\n\nGet the name of Model.\n\n\n\nproperty Model.parts: List[ansys.meshing.prime.core.part.Part]\n\nGet the list of parts for the model.\n\nReturns\n\nList of parts for the model.\n\nReturn type\n\nList[Part]\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> parts = model.parts\n\n\n\nproperty Model.python_logger\n\nGet python standard logger from PyPrimeMesh’s logger instance.\n\nPyPrimeMesh’s python standard logger instance can be used to control\nthe verbosity of messages printed by PyPrimeMesh and more.\n\nReturns\n\nPyPrimeMesh’s python standard logger instance.\n\nReturn type\n\nlogging.Logger\n\nExamples\n\nSet log level to debug.\n\n>>> model.python_logger.setLevel(logging.DEBUG)\n\n\n\nproperty Model.topo_data: ansys.meshing.prime.autogen.topodata.TopoData\n\nGet the TopoData for the model.\n\nReturns\n\nTopoData for the model.\n\nReturn type\n\nTopoData\n\nExamples\n\n>>> topo_data=model.topo_data"},{"objectID":"Home","href":"api/ansys/meshing/prime/Model.html#attribute-detail","title":"Model > Attribute detail","text":"Attribute detail\n\n\n\nModel.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/Model.html#method-detail","title":"Model > Method detail","text":"Method detail\n\n\n\nModel.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nModel.__str__()\n\nPrint the summary of the model.\n\nReturns\n\nSummary of the model.\n\nReturn type\n\nstr\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> print(model)\n\n\n\nModel.activate_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nActivate the sizefields identified by the given sizefield ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.activate_volumetric_size_fields(size_field_ids)\n\n\n\nModel.as_polydata(update: bool = False)\n\nGet the model as a polydata.\n\nParameters\n\nupdate (bool, optional) – Update the polydata if it is already present, by default False.\n\nReturns\n\nPolydata of the model.\n\nReturn type\n\nvtk.vtkPolyData\n\nExamples\n\n>>> polydata = model.as_polydata()\n\n\n\nModel.create_zone(suggested_name: str, type: ansys.meshing.prime.params.primestructs.ZoneType) -> ansys.meshing.prime.params.primestructs.CreateZoneResults\n\nCreates zone for the given zone type.\n\nParameters\n\nsuggested_name (str) – Suggested name for the zone to be created.\n\ntype (ZoneType) – Type of the zone to be created.\n\nReturns\n\nReturns the CreateZoneResults.\n\nReturn type\n\nCreateZoneResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.create_zone(\"wall\", prime.ZoneType.FACE)\n\n\n\nModel.deactivate_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nDeactivate the size fields with the given size field ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.deactivate_volumetric_size_fields(size_field_ids)\n\n\n\nModel.delete_parts(part_ids: Iterable[int]) -> ansys.meshing.prime.autogen.commonstructs.DeleteResults\n\nDelete parts and their contents.\n\nParameters\n\npart_ids (Iterable[int]) – IDs of parts to delete.\n\nReturns\n\nResults from deleting parts and their contents.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = model.delete_parts(part_ids)\n\n\n\nModel.delete_volumetric_size_fields(size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int])\n\nDelete the sizefields identified by the given sizefield ids.\n\nParameters\n\nsize_field_ids (Iterable[int]) – List of sizefield ids.\n\nExamples\n\n>>> model = client.model\n>>> model.delete_volumetric_size_fields(size_field_ids)\n\n\n\nModel.delete_zone(zone_id: int) -> ansys.meshing.prime.params.primestructs.DeleteZoneResults\n\nDeletes zone with the given id.\n\nParameters\n\nzone_id (int) – Id of the zone to be deleted.\n\nReturns\n\nReturns the DeleteZoneResults.\n\nReturn type\n\nDeleteZoneResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.delete_zone(1)\n\n\n\nModel.get_active_volumetric_size_fields() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the active sizefield ids.\n\nReturns\n\nReturn the list of active sizefield ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> model = client.model\n>>> active_size_field_ids = model.get_active_volumetric_size_fields()\n\n\n\nModel.get_global_sizing_params() -> ansys.meshing.prime.autogen.modelstructs.GlobalSizingParams\n\nGet global sizing parameters.\n\nReturns\n\nGlobal sizing parameters.\n\nReturn type\n\nGlobalSizingParams\n\nExamples\n\n>>> model = client.model\n>>> sf_params = model.get_global_sizing_params()\n\n\n\nModel.get_num_compute_nodes() -> int\n\nGet the number of compute nodes.\n\nReturns\n\nReturns the number of compute nodes.\n\nReturn type\n\nint\n\nExamples\n\n>>> model = client.model\n>>> num_compute_nodes = model.get_num_compute_nodes()\n\n\n\nModel.get_num_threads() -> int\n\nGet the number of threads enabled for multithreaded operation.\n\nReturns\n\nReturns the number of threads.\n\nReturn type\n\nint\n\nExamples\n\n>>> model = client.model\n>>> num_threads = model.get_num_threads()\n\n\n\nModel.get_part(id: int) -> ansys.meshing.prime.core.part.Part\n\nGet the part by ID.\n\nParameters\n\nid (int) – ID of the part.\n\nReturns\n\nPart or None if the given part ID doesn’t exist.\n\nReturn type\n\nPart\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part(2)\n\n\n\nModel.get_part_by_name(name: str) -> ansys.meshing.prime.core.part.Part\n\nGet the part by name.\n\nParameters\n\nname (str) – Name of the part.\n\nReturns\n\nPart or None if the given part name doesn’t exist.\n\nReturn type\n\nPart\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part_by_name(\"part.1\")\n\n\n\nModel.get_scoped_polydata(scope, update: bool = False)\n\nGet the scoped polydata of the model.\n\nParameters\n\nscope (Scope) – Scope of the model.\n\nReturns\n\nScoped polydata of the model.\n\nReturn type\n\nvtk.vtkPolyData\n\nExamples\n\n>>> scoped_polydata = model.get_scoped_polydata(scope)\n\n\n\nModel.get_size_field_name(size_field_id: int) -> str\n\nGets the name of size field with the given id.\n\nParameters\n\nsize_field_id (int) – Size field id.\n\nReturns\n\nReturns the name of the size field.\n\nReturn type\n\nstr\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> model = client.model\n>>> model.get_size_field_name(size_field_id)\n\n\n\nModel.get_volumetric_size_fields() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the sizefield ids.\n\nReturns\n\nReturn the list of sizefield ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> model = client.model\n>>> size_field_ids = model.get_volumetric_size_fields()\n\n\n\nModel.get_zone_by_name(zone_name: str) -> int\n\nGets the zone with the provided name.\n\nParameters\n\nzone_name (str) – Name of the zone.\n\nReturns\n\nReturns id of the zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> zone_id = model.get_zone_by_name(\"inlet\")\n\n\n\nModel.get_zone_name(id: int) -> str\n\nGet the name of given zone.\n\nParameters\n\nid (int) – Id of zone.\n\nReturns\n\nReturn the zone name. Return empty name if the id is invalid.\n\nReturn type\n\nstr\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> name = model.get_zone_name(id)\n\n\n\nModel.merge_parts(part_ids: Iterable[int], params: ansys.meshing.prime.autogen.modelstructs.MergePartsParams) -> ansys.meshing.prime.autogen.modelstructs.MergePartsResults\n\nMerge multiple parts into a single part.\n\nParameters\n\npart_ids (Iterable[int]) – IDs of the parts to merge.\n\nparams (MergePartsParams) – Parameters for merging parts.\n\nReturns\n\nResults for merging the parts into a single part.\n\nReturn type\n\nMergePartsResults\n\nExamples\n\n>>> params = prime.MergePartsParams(model = model)\n>>> results = model.merge_parts(part_ids, params)\n\n\n\nModel.set_global_sizing_params(params: ansys.meshing.prime.autogen.modelstructs.GlobalSizingParams)\n\nSet global sizing parameters.\n\nParameters\n\nparams (GlobalSizingParams) – Global sizing parameters for initializing surfer parameters and\nvarious size control parameters.\n\nExamples\n\n>>> model = client.model\n>>> model.set_global_sizing_params(GlobalSizingParams(model=model,\n...                                          min=0.1,\n...                                          max=1.0,\n...                                          growth_rate=1.2))\n\n\n\nModel.set_num_threads(num: int)\n\nSets the number of threads for multithreaded operation.\n\nParameters\n\nnum (int) – Number of threads.\n\nExamples\n\n>>> model = client.model\n>>> model.set_num_threads(4)\n\n\n\nModel.set_suggested_size_field_name(size_field_id: int, name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the suggested name of size field with the given id.\n\nParameters\n\nsize_field_id (int) – Size field id.\n\nname (str) – Name of the size field.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> model = client.model\n>>> model.set_suggested_size_field_name(size_field_id, name)\n\n\n\nModel.set_suggested_zone_name(id: int, name: str) -> ansys.meshing.prime.params.primestructs.SetNameResults\n\nSets the unique name for zone with given id based on the suggested name.\n\nParameters\n\nid (int) – Id of the zone to set suggested name.\n\nname (str) – Suggested name for the zone.\n\nReturns\n\nReturns the SetNameResults. results.assignedName indicates the assigned name to the zone.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> results = model.set_suggested_zone_name(id = 5, name = \"zone1\")\n\n\n\nModel.set_working_directory(path: str)\n\nSet working directory.\n\nSet the working directory to be considered for file i/o when the file paths are relative.\n\nParameters\n\npath (str) – Path to the directory.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> zones = model.set_working_directory(\"C:/input_files\")\n\n\n\nModel.start_distributed_meshing()\n\nEnables distributed meshing mode.\n\nExamples\n\n>>> client = prime.launch_prime()\n>>> model = client.model\n>>> model.start_distributed_meshing()"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsResults.html#mergepartsresults","title":"MergePartsResults","text":"MergePartsResults\n\n\n\nclass ansys.meshing.prime.autogen.modelstructs.MergePartsResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, merged_part_assigned_name: str = None, merged_part_id: int = None, json_data: dict = None, **kwargs)\n\nParameters to merge parts.\n\nParameters\n\nmodel (Model) – Model to create a MergePartsResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nmerged_part_assigned_name (str, optional) – Name assigned to merged part. Suffix is added to suggested name if the name not available.\n\nmerged_part_id (int, optional) – Id assigned to merged part.\n\njson_data (dict, optional) – JSON dictionary to create a MergePartsResults object with provided parameters.\n\nExamples\n\n>>> merge_parts_results = prime.MergePartsResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsResults.html#overview","title":"MergePartsResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nmerged_part_assigned_name\n\nName assigned to merged part. Suffix is added to suggested name if the name not available.\n\nmerged_part_id\n\nId assigned to merged part.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MergePartsResults object.\n\nset_default\n\nSet the default values of the MergePartsResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsResults.html#import-detail","title":"MergePartsResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsResults.html#property-detail","title":"MergePartsResults > Property detail","text":"Property detail\n\n\n\nproperty MergePartsResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty MergePartsResults.merged_part_assigned_name: str\n\nName assigned to merged part. Suffix is added to suggested name if the name not available.\n\n\n\nproperty MergePartsResults.merged_part_id: int\n\nId assigned to merged part."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/modelstructs/MergePartsResults.html#method-detail","title":"MergePartsResults > Method detail","text":"Method detail\n\n\n\nMergePartsResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMergePartsResults.__str__() -> str\n\n\n\n\n\nstatic MergePartsResults.print_default()\n\nPrint the default values of MergePartsResults object.\n\nExamples\n\n>>> MergePartsResults.print_default()\n\n\n\nstatic MergePartsResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, merged_part_assigned_name: str = None, merged_part_id: int = None)\n\nSet the default values of the MergePartsResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nmerged_part_assigned_name (str, optional) – Name assigned to merged part. Suffix is added to suggested name if the name not available.\n\nmerged_part_id (int, optional) – Id assigned to merged part."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesParams.html#deletetopoentitiesparams","title":"DeleteTopoEntitiesParams","text":"DeleteTopoEntitiesParams\n\n\n\nclass ansys.meshing.prime.DeleteTopoEntitiesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, delete_geom_zonelets: bool = None, delete_mesh_zonelets: bool = None, json_data: dict = None, **kwargs)\n\nParameters to control delete topoentities.\n\nParameters\n\nmodel (Model) – Model to create a DeleteTopoEntitiesParams object with default parameters.\n\ndelete_geom_zonelets (bool, optional) – Option to delete geometry zonelets of topology.\n\ndelete_mesh_zonelets (bool, optional) – Option to delete mesh zonelets of topology.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteTopoEntitiesParams object with provided parameters.\n\nExamples\n\n>>> delete_topo_entities_params = prime.DeleteTopoEntitiesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesParams.html#overview","title":"DeleteTopoEntitiesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_geom_zonelets\n\nOption to delete geometry zonelets of topology.\n\ndelete_mesh_zonelets\n\nOption to delete mesh zonelets of topology.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteTopoEntitiesParams object.\n\nset_default\n\nSet the default values of the DeleteTopoEntitiesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesParams.html#import-detail","title":"DeleteTopoEntitiesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesParams.html#property-detail","title":"DeleteTopoEntitiesParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteTopoEntitiesParams.delete_geom_zonelets: bool\n\nOption to delete geometry zonelets of topology.\n\n\n\nproperty DeleteTopoEntitiesParams.delete_mesh_zonelets: bool\n\nOption to delete mesh zonelets of topology."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteTopoEntitiesParams.html#method-detail","title":"DeleteTopoEntitiesParams > Method detail","text":"Method detail\n\n\n\nDeleteTopoEntitiesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteTopoEntitiesParams.__str__() -> str\n\n\n\n\n\nstatic DeleteTopoEntitiesParams.print_default()\n\nPrint the default values of DeleteTopoEntitiesParams object.\n\nExamples\n\n>>> DeleteTopoEntitiesParams.print_default()\n\n\n\nstatic DeleteTopoEntitiesParams.set_default(delete_geom_zonelets: bool = None, delete_mesh_zonelets: bool = None)\n\nSet the default values of the DeleteTopoEntitiesParams object.\n\nParameters\n\ndelete_geom_zonelets (bool, optional) – Option to delete geometry zonelets of topology.\n\ndelete_mesh_zonelets (bool, optional) – Option to delete mesh zonelets of topology."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/DatabaseProcessor.html#databaseprocessor","title":"DatabaseProcessor","text":"DatabaseProcessor\n\n\n\nclass ansys.meshing.prime.core.dynaexportutils.DatabaseProcessor(model: ansys.meshing.prime.Model, steps_data: dict, card_format: str = 'SHORT')\n\nProcesses the part’s simulation data and generates LS-DYNA cards for database keywords.\n\nParameters\n\nmodel (prime.Model) – Model that the methods are to work on.\n\nsteps_data (dict) – The steps data extracted from the part’s simulation data.\n\ncard_format (str, optional) – The LS-DYNA card format for writing. Defaults to “SHORT”.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/DatabaseProcessor.html#overview","title":"DatabaseProcessor > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_output_database_keywords\n\nGenerate and return the LS-DYNA database keyword cards.\n\nAttributes\n\n\n\n\n\n__slots__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/DatabaseProcessor.html#import-detail","title":"DatabaseProcessor > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/DatabaseProcessor.html#attribute-detail","title":"DatabaseProcessor > Attribute detail","text":"Attribute detail\n\n\n\nDatabaseProcessor.__slots__ = ('_steps_data', '_time', '_card_format', '_formatter', '_format_map', '_header_title',...\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/dynaexportutils/DatabaseProcessor.html#method-detail","title":"DatabaseProcessor > Method detail","text":"Method detail\n\n\n\nDatabaseProcessor.get_output_database_keywords() -> str\n\nGenerate and return the LS-DYNA database keyword cards.\n\nReturns\n\nstr\n\nA string containing the LS-DYNA database keyword cards for writing.\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_pcb_pmdat.html#ansysmeshingprimeexamplesexamplesdownload_pcb_pmdat","title":"ansys.meshing.prime.examples.examples.download_pcb_pmdat","text":"ansys.meshing.prime.examples.examples.download_pcb_pmdat\n\n\n\nansys.meshing.prime.examples.examples.download_pcb_pmdat(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the PMDAT file for the PCB example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     pcb = prime_examples.download_pcb_pmdat()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.read_pmdat(pcb, params=prime.FileReadParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingResolution.html#cadrefacetingresolution","title":"CadRefacetingResolution","text":"CadRefacetingResolution\n\n\n\nclass ansys.meshing.prime.CadRefacetingResolution\n\nLevels of CAD faceting refinement."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingResolution.html#overview","title":"CadRefacetingResolution > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nCOARSE\n\nDenotes coarse resolution of CAD faceting.\n\nCUSTOM\n\nDenotes custom resolution of CAD faceting.\n\nFINE\n\nDenotes fine resolution of CAD faceting.\n\nMEDIUM\n\nDenotes medium resolution of CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingResolution.html#import-detail","title":"CadRefacetingResolution > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadRefacetingResolution.html#attribute-detail","title":"CadRefacetingResolution > Attribute detail","text":"Attribute detail\n\n\n\nCadRefacetingResolution.COARSE = 0\n\nDenotes coarse resolution of CAD faceting.\n\n\n\nCadRefacetingResolution.CUSTOM = 3\n\nDenotes custom resolution of CAD faceting.\n\n\n\nCadRefacetingResolution.FINE = 2\n\nDenotes fine resolution of CAD faceting.\n\n\n\nCadRefacetingResolution.MEDIUM = 1\n\nDenotes medium resolution of CAD faceting."},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseResults.html#collapseresults","title":"CollapseResults","text":"CollapseResults\n\n\n\nclass ansys.meshing.prime.CollapseResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_collapsed: int = None, n_splits: int = None, json_data: dict = None, **kwargs)\n\nResults associated with collapse face elements.\n\nParameters\n\nmodel (Model) – Model to create a CollapseResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nn_collapsed (int, optional) – Number of face elements collapsed.\n\nn_splits (int, optional) – Number of face elements split.\n\njson_data (dict, optional) – JSON dictionary to create a CollapseResults object with provided parameters.\n\nExamples\n\n>>> collapse_results = prime.CollapseResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseResults.html#overview","title":"CollapseResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nn_collapsed\n\nNumber of face elements collapsed.\n\nn_splits\n\nNumber of face elements split.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CollapseResults object.\n\nset_default\n\nSet the default values of the CollapseResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseResults.html#import-detail","title":"CollapseResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseResults.html#property-detail","title":"CollapseResults > Property detail","text":"Property detail\n\n\n\nproperty CollapseResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation.\n\n\n\nproperty CollapseResults.n_collapsed: int\n\nNumber of face elements collapsed.\n\n\n\nproperty CollapseResults.n_splits: int\n\nNumber of face elements split."},{"objectID":"Home","href":"api/ansys/meshing/prime/CollapseResults.html#method-detail","title":"CollapseResults > Method detail","text":"Method detail\n\n\n\nCollapseResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCollapseResults.__str__() -> str\n\n\n\n\n\nstatic CollapseResults.print_default()\n\nPrint the default values of CollapseResults object.\n\nExamples\n\n>>> CollapseResults.print_default()\n\n\n\nstatic CollapseResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, n_collapsed: int = None, n_splits: int = None)\n\nSet the default values of the CollapseResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\nn_collapsed (int, optional) – Number of face elements collapsed.\n\nn_splits (int, optional) – Number of face elements split."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureParams.html#extractfeatureparams","title":"ExtractFeatureParams","text":"ExtractFeatureParams\n\n\n\nclass ansys.meshing.prime.autogen.featureextractionstructs.ExtractFeatureParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, replace: bool = None, feature_angle: float = None, separate_features: bool = None, separation_angle: float = None, disconnect_with_faces: bool = None, label_name: str = None, number_of_threads: int = None, json_data: dict = None, **kwargs)\n\nParameter to control feature edge extraction.\n\nParameters\n\nmodel (Model) – Model to create a ExtractFeatureParams object with default parameters.\n\nreplace (bool, optional) – Option to replace existing edge zonelets with new extracted edge zonelets.\n\nfeature_angle (float, optional) – Angle used to capture face features to be  extracted as edges.\n\nseparate_features (bool, optional) – Option to separate extracted features.\n\nseparation_angle (float, optional) – Angle used to separate extracted features.\n\ndisconnect_with_faces (bool, optional) – Option to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\nlabel_name (str, optional) – Label name to be assigned to extracted features.\n\nnumber_of_threads (int, optional) – Number of threads used for multithreading.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractFeatureParams object with provided parameters.\n\nExamples\n\n>>> extract_feature_params = prime.ExtractFeatureParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureParams.html#overview","title":"ExtractFeatureParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndisconnect_with_faces\n\nOption to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\nfeature_angle\n\nAngle used to capture face features to be  extracted as edges.\n\nlabel_name\n\nLabel name to be assigned to extracted features.\n\nnumber_of_threads\n\nNumber of threads used for multithreading.\n\nreplace\n\nOption to replace existing edge zonelets with new extracted edge zonelets.\n\nseparate_features\n\nOption to separate extracted features.\n\nseparation_angle\n\nAngle used to separate extracted features.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractFeatureParams object.\n\nset_default\n\nSet the default values of the ExtractFeatureParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureParams.html#import-detail","title":"ExtractFeatureParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureParams.html#property-detail","title":"ExtractFeatureParams > Property detail","text":"Property detail\n\n\n\nproperty ExtractFeatureParams.disconnect_with_faces: bool\n\nOption to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\n\n\nproperty ExtractFeatureParams.feature_angle: float\n\nAngle used to capture face features to be  extracted as edges.\n\n\n\nproperty ExtractFeatureParams.label_name: str\n\nLabel name to be assigned to extracted features.\n\n\n\nproperty ExtractFeatureParams.number_of_threads: int\n\nNumber of threads used for multithreading.\n\n\n\nproperty ExtractFeatureParams.replace: bool\n\nOption to replace existing edge zonelets with new extracted edge zonelets.\n\n\n\nproperty ExtractFeatureParams.separate_features: bool\n\nOption to separate extracted features.\n\n\n\nproperty ExtractFeatureParams.separation_angle: float\n\nAngle used to separate extracted features."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/featureextractionstructs/ExtractFeatureParams.html#method-detail","title":"ExtractFeatureParams > Method detail","text":"Method detail\n\n\n\nExtractFeatureParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractFeatureParams.__str__() -> str\n\n\n\n\n\nstatic ExtractFeatureParams.print_default()\n\nPrint the default values of ExtractFeatureParams object.\n\nExamples\n\n>>> ExtractFeatureParams.print_default()\n\n\n\nstatic ExtractFeatureParams.set_default(replace: bool = None, feature_angle: float = None, separate_features: bool = None, separation_angle: float = None, disconnect_with_faces: bool = None, label_name: str = None, number_of_threads: int = None)\n\nSet the default values of the ExtractFeatureParams object.\n\nParameters\n\nreplace (bool, optional) – Option to replace existing edge zonelets with new extracted edge zonelets.\n\nfeature_angle (float, optional) – Angle used to capture face features to be  extracted as edges.\n\nseparate_features (bool, optional) – Option to separate extracted features.\n\nseparation_angle (float, optional) – Angle used to separate extracted features.\n\ndisconnect_with_faces (bool, optional) – Option to disconnect edges from faces. If false, edges remain connected to faces by sharing nodes.\n\nlabel_name (str, optional) – Label name to be assigned to extracted features.\n\nnumber_of_threads (int, optional) – Number of threads used for multithreading."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsParams.html#wrapperpatchflowregionsparams","title":"WrapperPatchFlowRegionsParams","text":"WrapperPatchFlowRegionsParams\n\n\n\nclass ansys.meshing.prime.WrapperPatchFlowRegionsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, base_size: float = None, suggested_part_name: str = None, number_of_threads: int = None, dead_regions: ansys.meshing.prime.params.primestructs.List[DeadRegion] = None, sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, patch_at_live: bool = None, json_data: dict = None, **kwargs)\n\nWrapperPatchFlowRegionsParams to define parameters for patch flow regions operation.\n\nParameters\n\nmodel (Model) – Model to create a WrapperPatchFlowRegionsParams object with default parameters.\n\nbase_size (float, optional) – Base size to define octree.This is a beta parameter. The behavior and name may change in the future.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.This is a beta parameter. The behavior and name may change in the future.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.This is a beta parameter. The behavior and name may change in the future.\n\ndead_regions (List[DeadRegion], optional) – List of dead regions.This is a beta parameter. The behavior and name may change in the future.\n\nsizing_method (SizeFieldType, optional) – Method used to define sizing method for patching.This is a beta parameter. The behavior and name may change in the future.\n\nsize_field_ids (Iterable[int], optional) – Ids used to define size field based octree refinement.This is a beta parameter. The behavior and name may change in the future.\n\npatch_at_live (bool, optional) – Creates patches closer to live instead of dead.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a WrapperPatchFlowRegionsParams object with provided parameters.\n\nExamples\n\n>>> wrapper_patch_flow_regions_params = prime.WrapperPatchFlowRegionsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsParams.html#overview","title":"WrapperPatchFlowRegionsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nbase_size\n\nBase size to define octree.\n\ndead_regions\n\nList of dead regions.\n\nnumber_of_threads\n\nNumber of threads for multithreading.\n\npatch_at_live\n\nCreates patches closer to live instead of dead.\n\nsize_field_ids\n\nUsed to define size field based octree refinement.\n\nsizing_method\n\nUsed to define sizing method for patching.\n\nsuggested_part_name\n\nSuggested part name for created patching surfaces.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of WrapperPatchFlowRegionsParams object.\n\nset_default\n\nSet the default values of the WrapperPatchFlowRegionsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsParams.html#import-detail","title":"WrapperPatchFlowRegionsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsParams.html#property-detail","title":"WrapperPatchFlowRegionsParams > Property detail","text":"Property detail\n\n\n\nproperty WrapperPatchFlowRegionsParams.base_size: float\n\nBase size to define octree.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.dead_regions: ansys.meshing.prime.params.primestructs.List[DeadRegion]\n\nList of dead regions.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.number_of_threads: int\n\nNumber of threads for multithreading.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.patch_at_live: bool\n\nCreates patches closer to live instead of dead.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nUsed to define size field based octree refinement.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType\n\nUsed to define sizing method for patching.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty WrapperPatchFlowRegionsParams.suggested_part_name: str\n\nSuggested part name for created patching surfaces.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/WrapperPatchFlowRegionsParams.html#method-detail","title":"WrapperPatchFlowRegionsParams > Method detail","text":"Method detail\n\n\n\nWrapperPatchFlowRegionsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperPatchFlowRegionsParams.__str__() -> str\n\n\n\n\n\nstatic WrapperPatchFlowRegionsParams.print_default()\n\nPrint the default values of WrapperPatchFlowRegionsParams object.\n\nExamples\n\n>>> WrapperPatchFlowRegionsParams.print_default()\n\n\n\nstatic WrapperPatchFlowRegionsParams.set_default(base_size: float = None, suggested_part_name: str = None, number_of_threads: int = None, dead_regions: ansys.meshing.prime.params.primestructs.List[DeadRegion] = None, sizing_method: ansys.meshing.prime.params.primestructs.SizeFieldType = None, size_field_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, patch_at_live: bool = None)\n\nSet the default values of the WrapperPatchFlowRegionsParams object.\n\nParameters\n\nbase_size (float, optional) – Base size to define octree.\n\nsuggested_part_name (str, optional) – Suggested part name for created patching surfaces.\n\nnumber_of_threads (int, optional) – Number of threads for multithreading.\n\ndead_regions (List[DeadRegion], optional) – List of dead regions.\n\nsizing_method (SizeFieldType, optional) – Used to define sizing method for patching.\n\nsize_field_ids (Iterable[int], optional) – Used to define size field based octree refinement.\n\npatch_at_live (bool, optional) – Creates patches closer to live instead of dead."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSplineResults.html#trimmedsplineresults","title":"TrimmedSplineResults","text":"TrimmedSplineResults\n\n\n\nclass ansys.meshing.prime.autogen.trimmedsplinestructs.TrimmedSplineResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults of IGA operations.\n\nParameters\n\nmodel (Model) – Model to create a TrimmedSplineResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code if IGA operation is unsuccessful.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a TrimmedSplineResults object with provided parameters.\n\nExamples\n\n>>> trimmed_spline_results = prime.TrimmedSplineResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSplineResults.html#overview","title":"TrimmedSplineResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code if IGA operation is unsuccessful.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of TrimmedSplineResults object.\n\nset_default\n\nSet the default values of the TrimmedSplineResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSplineResults.html#import-detail","title":"TrimmedSplineResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSplineResults.html#property-detail","title":"TrimmedSplineResults > Property detail","text":"Property detail\n\n\n\nproperty TrimmedSplineResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code if IGA operation is unsuccessful.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/trimmedsplinestructs/TrimmedSplineResults.html#method-detail","title":"TrimmedSplineResults > Method detail","text":"Method detail\n\n\n\nTrimmedSplineResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTrimmedSplineResults.__str__() -> str\n\n\n\n\n\nstatic TrimmedSplineResults.print_default()\n\nPrint the default values of TrimmedSplineResults object.\n\nExamples\n\n>>> TrimmedSplineResults.print_default()\n\n\n\nstatic TrimmedSplineResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the TrimmedSplineResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code if IGA operation is unsuccessful."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_saddle_bracket_dsco.html#ansysmeshingprimeexamplesexamplesdownload_saddle_bracket_dsco","title":"ansys.meshing.prime.examples.examples.download_saddle_bracket_dsco","text":"ansys.meshing.prime.examples.examples.download_saddle_bracket_dsco\n\n\n\nansys.meshing.prime.examples.examples.download_saddle_bracket_dsco(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload DSCO file for the saddle bracket example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     saddle_bracket = prime_examples.download_saddle_bracket_dsco()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(saddle_bracket, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrappercontrol/index.html#the-wrappercontrolpy-module","title":"The wrappercontrol.py module","text":"The wrappercontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrappercontrol/index.html#summary","title":"The wrappercontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nWrapperControl\n\nWrapper Control to describe all parameters and controls used for wrapping.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/wrappercontrol/index.html#description","title":"The wrappercontrol.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/index.html#the-scopepy-module","title":"The scope.py module","text":"The scope.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/index.html#summary","title":"The scope.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSurfaceScope\n\nSurfaceScope is one of the classes in Lucid API.\n\nVolumeScope\n\nVolumeScope is one of the classes in Lucid API.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/lucid/scope/index.html#description","title":"The scope.py module > Description","text":"Description\n\nModule for Lucid Scope for operation on surfaces functionality."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSizingParams.html#multizonesizingparams","title":"MultiZoneSizingParams","text":"MultiZoneSizingParams\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.MultiZoneSizingParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, max_size: float = None, min_size: float = None, growth_rate: float = None, use_volumetric_size_field: bool = None, json_data: dict = None, **kwargs)\n\nParameters for MultiZone meshing.\n\nParameters\n\nmodel (Model) – Model to create a MultiZoneSizingParams object with default parameters.\n\nmax_size (float, optional) – Defines global maximum mesh size.This is a beta parameter. The behavior and name may change in the future.\n\nmin_size (float, optional) – Defines global minimum mesh size.This is a beta parameter. The behavior and name may change in the future.\n\ngrowth_rate (float, optional) – Defines growth rate.This is a beta parameter. The behavior and name may change in the future.\n\nuse_volumetric_size_field (bool, optional) – Defines whether to use size field for MultiZone meshing.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a MultiZoneSizingParams object with provided parameters.\n\nExamples\n\n>>> multi_zone_sizing_params = prime.MultiZoneSizingParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSizingParams.html#overview","title":"MultiZoneSizingParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ngrowth_rate\n\nDefines growth rate.\n\nmax_size\n\nDefines global maximum mesh size.\n\nmin_size\n\nDefines global minimum mesh size.\n\nuse_volumetric_size_field\n\nDefines whether to use size field for MultiZone meshing.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MultiZoneSizingParams object.\n\nset_default\n\nSet the default values of the MultiZoneSizingParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSizingParams.html#import-detail","title":"MultiZoneSizingParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSizingParams.html#property-detail","title":"MultiZoneSizingParams > Property detail","text":"Property detail\n\n\n\nproperty MultiZoneSizingParams.growth_rate: float\n\nDefines growth rate.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSizingParams.max_size: float\n\nDefines global maximum mesh size.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSizingParams.min_size: float\n\nDefines global minimum mesh size.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MultiZoneSizingParams.use_volumetric_size_field: bool\n\nDefines whether to use size field for MultiZone meshing.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/MultiZoneSizingParams.html#method-detail","title":"MultiZoneSizingParams > Method detail","text":"Method detail\n\n\n\nMultiZoneSizingParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMultiZoneSizingParams.__str__() -> str\n\n\n\n\n\nstatic MultiZoneSizingParams.print_default()\n\nPrint the default values of MultiZoneSizingParams object.\n\nExamples\n\n>>> MultiZoneSizingParams.print_default()\n\n\n\nstatic MultiZoneSizingParams.set_default(max_size: float = None, min_size: float = None, growth_rate: float = None, use_volumetric_size_field: bool = None)\n\nSet the default values of the MultiZoneSizingParams object.\n\nParameters\n\nmax_size (float, optional) – Defines global maximum mesh size.\n\nmin_size (float, optional) – Defines global minimum mesh size.\n\ngrowth_rate (float, optional) – Defines growth rate.\n\nuse_volumetric_size_field (bool, optional) – Defines whether to use size field for MultiZone meshing."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ReadSizeFieldParams.html#readsizefieldparams","title":"ReadSizeFieldParams","text":"ReadSizeFieldParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ReadSizeFieldParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, append: bool = None, json_data: dict = None, **kwargs)\n\nParameters used to read size field file.\n\nParameters\n\nmodel (Model) – Model to create a ReadSizeFieldParams object with default parameters.\n\nappend (bool, optional) – Option to append the size fields from file.\n\njson_data (dict, optional) – JSON dictionary to create a ReadSizeFieldParams object with provided parameters.\n\nExamples\n\n>>> read_size_field_params = prime.ReadSizeFieldParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ReadSizeFieldParams.html#overview","title":"ReadSizeFieldParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nappend\n\nOption to append the size fields from file.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ReadSizeFieldParams object.\n\nset_default\n\nSet the default values of the ReadSizeFieldParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ReadSizeFieldParams.html#import-detail","title":"ReadSizeFieldParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ReadSizeFieldParams.html#property-detail","title":"ReadSizeFieldParams > Property detail","text":"Property detail\n\n\n\nproperty ReadSizeFieldParams.append: bool\n\nOption to append the size fields from file."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ReadSizeFieldParams.html#method-detail","title":"ReadSizeFieldParams > Method detail","text":"Method detail\n\n\n\nReadSizeFieldParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nReadSizeFieldParams.__str__() -> str\n\n\n\n\n\nstatic ReadSizeFieldParams.print_default()\n\nPrint the default values of ReadSizeFieldParams object.\n\nExamples\n\n>>> ReadSizeFieldParams.print_default()\n\n\n\nstatic ReadSizeFieldParams.set_default(append: bool = None)\n\nSet the default values of the ReadSizeFieldParams object.\n\nParameters\n\nappend (bool, optional) – Option to append the size fields from file."},{"objectID":"Home","href":"api/ansys/meshing/prime/local_model.html#ansysmeshingprimelocal_model","title":"ansys.meshing.prime.local_model","text":"ansys.meshing.prime.local_model\n\n\n\nansys.meshing.prime.local_model() -> core.model.Model\n\nGet local model\n\nUSE IN DEVELOPMENT ONLY\n\nThis imports the Ansys Prime Server environment into the Python process. It will\nerror unless proper environment is set up to support Ansys Prime Server.\n\nReturns\n\nThe local model\n\nReturn type\n\nModel"},{"objectID":"Home","href":"api/ansys/meshing/prime/DefeatureTopologyParams.html#defeaturetopologyparams","title":"DefeatureTopologyParams","text":"DefeatureTopologyParams\n\n\n\nclass ansys.meshing.prime.DefeatureTopologyParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, partial_defeature: bool = None, delete_interior_nodes: bool = None, allow_curved_topo_faces: bool = None, fillet_spanning_angle: float = None, aggressive_edge_merge: bool = None, thin_stripes_tolerance: float = None, partial_defeature_params: PartialDefeatureParams = None, delete_interior_nodes_params: DeleteInteriorNodesParams = None, json_data: dict = None, **kwargs)\n\nParameters for defeature topology operations.\n\nParameters\n\nmodel (Model) – Model to create a DefeatureTopologyParams object with default parameters.\n\npartial_defeature (bool, optional) – Option to partial defeature.This is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes (bool, optional) – Option to delete interior nodes.This is a beta parameter. The behavior and name may change in the future.\n\nallow_curved_topo_faces (bool, optional) – Option to allow curved topofaces.This is a beta parameter. The behavior and name may change in the future.\n\nfillet_spanning_angle (float, optional) – Angular threshold for detecting fillets with spanning angles below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\naggressive_edge_merge (bool, optional) – Indicate whether to allow aggressive edge merge while performing partial defeature.This is a beta parameter. The behavior and name may change in the future.\n\nthin_stripes_tolerance (float, optional) – Topoface width tolerance to detect thin faces below the provided value.This is a beta parameter. The behavior and name may change in the future.\n\npartial_defeature_params (PartialDefeatureParams, optional) – Parameters for partial defeature operation.This is a beta parameter. The behavior and name may change in the future.\n\ndelete_interior_nodes_params (DeleteInteriorNodesParams, optional) – Parameters for delete interior nodes operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DefeatureTopologyParams object with provided parameters.\n\nExamples\n\n>>> defeature_topology_params = prime.DefeatureTopologyParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DefeatureTopologyParams.html#overview","title":"DefeatureTopologyParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\naggressive_edge_merge\n\nIndicate whether to allow aggressive edge merge while performing partial defeature.\n\nallow_curved_topo_faces\n\nOption to allow curved topofaces.\n\ndelete_interior_nodes\n\nOption to delete interior nodes.\n\ndelete_interior_nodes_params\n\nParameters for delete interior nodes operation.\n\nfillet_spanning_angle\n\nAngular threshold for detecting fillets with spanning angles below the provided value.\n\npartial_defeature\n\nOption to partial defeature.\n\npartial_defeature_params\n\nParameters for partial defeature operation.\n\nthin_stripes_tolerance\n\nTopoface width tolerance to detect thin faces below the provided value.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DefeatureTopologyParams object.\n\nset_default\n\nSet the default values of the DefeatureTopologyParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DefeatureTopologyParams.html#import-detail","title":"DefeatureTopologyParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DefeatureTopologyParams.html#property-detail","title":"DefeatureTopologyParams > Property detail","text":"Property detail\n\n\n\nproperty DefeatureTopologyParams.aggressive_edge_merge: bool\n\nIndicate whether to allow aggressive edge merge while performing partial defeature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.allow_curved_topo_faces: bool\n\nOption to allow curved topofaces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.delete_interior_nodes: bool\n\nOption to delete interior nodes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.delete_interior_nodes_params: DeleteInteriorNodesParams\n\nParameters for delete interior nodes operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.fillet_spanning_angle: float\n\nAngular threshold for detecting fillets with spanning angles below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.partial_defeature: bool\n\nOption to partial defeature.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.partial_defeature_params: PartialDefeatureParams\n\nParameters for partial defeature operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DefeatureTopologyParams.thin_stripes_tolerance: float\n\nTopoface width tolerance to detect thin faces below the provided value.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DefeatureTopologyParams.html#method-detail","title":"DefeatureTopologyParams > Method detail","text":"Method detail\n\n\n\nDefeatureTopologyParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDefeatureTopologyParams.__str__() -> str\n\n\n\n\n\nstatic DefeatureTopologyParams.print_default()\n\nPrint the default values of DefeatureTopologyParams object.\n\nExamples\n\n>>> DefeatureTopologyParams.print_default()\n\n\n\nstatic DefeatureTopologyParams.set_default(partial_defeature: bool = None, delete_interior_nodes: bool = None, allow_curved_topo_faces: bool = None, fillet_spanning_angle: float = None, aggressive_edge_merge: bool = None, thin_stripes_tolerance: float = None, partial_defeature_params: PartialDefeatureParams = None, delete_interior_nodes_params: DeleteInteriorNodesParams = None)\n\nSet the default values of the DefeatureTopologyParams object.\n\nParameters\n\npartial_defeature (bool, optional) – Option to partial defeature.\n\ndelete_interior_nodes (bool, optional) – Option to delete interior nodes.\n\nallow_curved_topo_faces (bool, optional) – Option to allow curved topofaces.\n\nfillet_spanning_angle (float, optional) – Angular threshold for detecting fillets with spanning angles below the provided value.\n\naggressive_edge_merge (bool, optional) – Indicate whether to allow aggressive edge merge while performing partial defeature.\n\nthin_stripes_tolerance (float, optional) – Topoface width tolerance to detect thin faces below the provided value.\n\npartial_defeature_params (PartialDefeatureParams, optional) – Parameters for partial defeature operation.\n\ndelete_interior_nodes_params (DeleteInteriorNodesParams, optional) – Parameters for delete interior nodes operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/index.html#the-autoquadmesherstructspy-module","title":"The autoquadmesherstructs.py module","text":"The autoquadmesherstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/index.html#summary","title":"The autoquadmesherstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAutoQuadMesherResults\n\nResults of auto quad mesher.\n\nCheckTopologyParams\n\nParameters for check topology operations.\n\nConnectFacesParams\n\nParameters for connect faces operation.\n\nDefeatureTopologyParams\n\nParameters for defeature topology operations.\n\nDeleteInteriorNodesParams\n\nParameters for delete interior nodes operation.\n\nDetectAndTreatCircularFacesParams\n\nParameters for detect and treat circular faces operation.\n\nDetectAndTreatFeaturesParams\n\nParameters for detect and treat features operations.\n\nDetectAndTreatHolesParams\n\nParameters for detect and treat holes operation.\n\nDetectCircularHolesParams\n\nParameters for detect circular holes operation.\n\nDetectHolesParams\n\nParameters for detect holes operation.\n\nDetectNonCircularHolesParams\n\nParameters for detect non circular holes operation.\n\nEdgeConnectType\n\nEdge connect type to define the type of connection between edges .\n\nOptimizeQuadMeshParams\n\nParameters for optimize quad mesh operations.\n\nPartialDefeatureParams\n\nParameters for partial defeature operation.\n\nRepairEdgesParams\n\nParameters for repair edges operation.\n\nRepairTopologyParams\n\nParameters for repair topology operations.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/autoquadmesherstructs/index.html#description","title":"The autoquadmesherstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesResults.html#stretchfreeboundariesresults","title":"StretchFreeBoundariesResults","text":"StretchFreeBoundariesResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.StretchFreeBoundariesResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with stretch free boundaries operation.\n\nParameters\n\nmodel (Model) – Model to create a StretchFreeBoundariesResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a StretchFreeBoundariesResults object with provided parameters.\n\nExamples\n\n>>> stretch_free_boundaries_results = prime.StretchFreeBoundariesResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesResults.html#overview","title":"StretchFreeBoundariesResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of StretchFreeBoundariesResults object.\n\nset_default\n\nSet the default values of the StretchFreeBoundariesResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesResults.html#import-detail","title":"StretchFreeBoundariesResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesResults.html#property-detail","title":"StretchFreeBoundariesResults > Property detail","text":"Property detail\n\n\n\nproperty StretchFreeBoundariesResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/StretchFreeBoundariesResults.html#method-detail","title":"StretchFreeBoundariesResults > Method detail","text":"Method detail\n\n\n\nStretchFreeBoundariesResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nStretchFreeBoundariesResults.__str__() -> str\n\n\n\n\n\nstatic StretchFreeBoundariesResults.print_default()\n\nPrint the default values of StretchFreeBoundariesResults object.\n\nExamples\n\n>>> StretchFreeBoundariesResults.print_default()\n\n\n\nstatic StretchFreeBoundariesResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the StretchFreeBoundariesResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with failure of operation."},{"objectID":"Home","href":"user_guide/multizone.html#multizone-controls","title":"MultiZone controls","text":"MultiZone controls\n\nThis is a beta feature. API behavior and implementation may change in future.\n\nThe MultiZoneControl class provides automatic geometry decomposition into mapped (sweepable) regions and free regions.\nMapped (sweepable) regions are filled with hexahedral elements and free regions are filled with non-hexahedral elements.\nWhen you perform MultiZone Method meshing, all regions are meshed with a pure hexahedral mesh if possible.\n\nThe AutoMesh class lets you to automatically create the hex mesh on the scoped bodies using MultiZone meshing algorithms.\nAutoMesh.mesh() function lets you  perform MultiZone meshing with the given MultiZone control.\n\nThe following example shows to apply a MultiZone control on a body:\n\nStart the PyPrimeMesh client and read the model. The model is made up of two topo volumes that share a connected topo face between them. The two topo volumes have volume zones defined. The left volume zone is solid1 and right is solid.\n\nOutput:\n\nInitialize the MultiZone control. MultiZone control sets the parameters and controls used for MultiZone meshing.\n\n\n\nDefine the volume scope and surface scope within the model and apply the volume scope and surface scope to the Multizone Control. In this example, volume scope is scoped specifically to “solid1” to show the difference between the MultiZone mesh and automesh\n\nUsing the string “*” as the expression for parts, labels, and zones for the surface scope includes all the available entities in the Multizone control.\n\nSets the MultiZone sizing parameters to initialize MultiZone sizing control parameters.\n\nWhen you provide the sizefield, MultiZone method uses the provided sizefield and impacts the MultiZone mesh.\n\nOutput:\n\nSome points to remember while performing MultiZone Meshing:\n\nMultiZone Meshing supports only topology.\n\nIf the MultiZone meshing scopes only a few bodies of a multibody part, the remaining bodies of the part are auto meshed conformally.\n\nAfter creating the MultiZone control, you should specify its id in the automesh params for it to be considered for MultiZone meshing.\n\nWhen you use the MultiZone mesh method in combination with other mesh methods in a multibody part, the bodies are meshed with conformally.\nFor example, in the model below, the multibody part meshes with the MultiZone Method and AutoMesh.\n\nSometimes MultiZone is not automatically able to decompose a geometry into sweepable regions, though such decomposition may be possible.\nFor example, in the model below the MultiZone mesh produces free mesh.\n\nWhen you scope the source and target faces to MultiZone, MultiZone automates the geometry decomposition and generates the pure hex mesh\ninto sweepable regions to produce a purely hex mesh. In the below images, if the faces highlighted in green\ncolor are scoped as source and target faces, MultiZone produces a purely hex mesh on the source and target faces."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrappercontrol/WrapperControl.html#wrappercontrol","title":"WrapperControl","text":"WrapperControl\n\n\n\nclass ansys.meshing.prime.core.wrappercontrol.WrapperControl(model: ansys.meshing.prime.internals.comm_manager.CommunicationManager, id: int, object_id: int, name: str)\n\nWrapper Control to describe all parameters and controls used for wrapping..\n\nParameters\n\nmodel (Model) – Server model to create WrapperControl object.\n\nid (int) – Id of the WrapperControl.\n\nobject_id (int) – Object id of the WrapperControl.\n\nname (str) – Name of the WrapperControl."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrappercontrol/WrapperControl.html#overview","title":"WrapperControl > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_geometry_scope\n\nGets geometry scope of wrapper control.\n\nget_live_material_points\n\nGets list of material point names.\n\nset_contact_preventions\n\nSet contact preventions to the wrapper control.\n\nset_feature_recoveries\n\nSet feature recoveries to the wrapper control.\n\nset_geometry_scope\n\nSets geometry scope to given scope.\n\nset_leak_preventions\n\nSet leak preventions to the wrapper control.\n\nset_live_material_points\n\nSet live material points to the wrapper control.\n\nset_shadow_geometry_scope\n\nSets shadow geometry scope to given scope.\n\nset_suggested_name\n\nSet the unique name for the wrapper control based on a suggested name.\n\nset_suggested_wrapper_part_name\n\nSets the given name for the created wrapper part  after wrapping with the wrapper control.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of WrapperControl.\n\nname\n\nGet the name of the wrapper control.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nGet a representation of the class in string format."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrappercontrol/WrapperControl.html#import-detail","title":"WrapperControl > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrappercontrol/WrapperControl.html#property-detail","title":"WrapperControl > Property detail","text":"Property detail\n\n\n\nproperty WrapperControl.id\n\nGet the id of WrapperControl.\n\n\n\nproperty WrapperControl.name\n\nGet the name of the wrapper control.\n\nReturns\n\nName of the wrapper control.\n\nReturn type\n\nstr\n\nExamples\n\n>>> print(wrapper_control.name)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/wrappercontrol/WrapperControl.html#method-detail","title":"WrapperControl > Method detail","text":"Method detail\n\n\n\nWrapperControl.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nWrapperControl.__str__() -> str\n\nGet a representation of the class in string format.\n\nReturns\n\nClass data in string format.\n\nReturn type\n\nstr\n\n\n\nWrapperControl.get_geometry_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition\n\nGets geometry scope of wrapper control.\n\nReturns\n\nReturns ScopeDefinition to scope entities from wrapper control.\n\nReturn type\n\nScopeDefinition\n\nExamples\n\n>>> geom_scope = wrapper_control.get_geometry_scope()\n\n\n\nWrapperControl.get_live_material_points() -> List[str]\n\nGets list of material point names.\n\nReturns\n\nReturns the list of material point names.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> live_material_point_names = wrapper_control.get_live_material_points()\n\n\n\nWrapperControl.set_contact_preventions(params: List[ansys.meshing.prime.params.primestructs.ContactPreventionParams]) -> ansys.meshing.prime.params.primestructs.SetContactPreventionsResults\n\nSet contact preventions to the wrapper control.\n\nParameters\n\nparams (ContactPreventionParamsArray) – List of contact prevention parameters.\n\nReturns\n\nReturn the set contact prevention results.\n\nReturn type\n\nSetContactPreventionsResults\n\nExamples\n\n>>> set_cont_prev_results = wrapper_control.set_contact_preventions([params])\n\n\n\nWrapperControl.set_feature_recoveries(params: List[ansys.meshing.prime.params.primestructs.FeatureRecoveryParams]) -> ansys.meshing.prime.params.primestructs.SetFeatureRecoveriesResults\n\nSet feature recoveries to the wrapper control.\n\nParameters\n\nparams (FeatureRecoveryParamsArray) – List of feature recovery parameters.\n\nReturns\n\nReturn the set feature recoveries results.\n\nReturn type\n\nSetFeatureRecoveriesResults\n\nExamples\n\n>>> set_feat_rec_results = wrapper_control.set_feature_recoveries([params])\n\n\n\nWrapperControl.set_geometry_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets geometry scope to given scope.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope entities for wrapping.\n\nExamples\n\n>>> wrapper_control.set_geometry_scope(scope)\n\n\n\nWrapperControl.set_leak_preventions(params: List[ansys.meshing.prime.params.primestructs.LeakPreventionParams]) -> ansys.meshing.prime.params.primestructs.SetLeakPreventionsResults\n\nSet leak preventions to the wrapper control.\n\nParameters\n\nparams (LeakPreventionParamsArray) – List of leak prevention parameters.\n\nReturns\n\nReturn the set leak prevention results.\n\nReturn type\n\nSetLeakPreventionsResults\n\nExamples\n\n>>> set_leak_prev_results = wrapper_control.set_leak_preventions([params])\n\n\n\nWrapperControl.set_live_material_points(material_point_names: List[str])\n\nSet live material points to the wrapper control.\n\nParameters\n\nmaterial_point_names (List[str]) – List of live material points.\n\nExamples\n\n>>> wrapper_control.set_live_material_points([\"Fluid1\"])\n\n\n\nWrapperControl.set_shadow_geometry_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition)\n\nSets shadow geometry scope to given scope.\n\nParameters\n\nscope (ScopeDefinition) – ScopeDefinition to scope shadow entities for wrapping.\n\nExamples\n\n>>> wrapper_control.set_shadow_geometry_scope(scope)\n\n\n\nWrapperControl.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the wrapper control based on a suggested name.\n\nParameters\n\nname (str) – Suggested name for the wrapper control.\n\nReturns\n\nNewly assigned name of the wrapper control.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> wrapper_control.set_suggested_name(\"wrapper_control1\")\n\n\n\nWrapperControl.set_suggested_wrapper_part_name(name: str)\n\nSets the given name for the created wrapper part  after wrapping with the wrapper control.\n\nParameters\n\nname (str) – Suggested name of the wrapper part to be created.\n\nExamples\n\n>>> wrapper_control.set_suggested_wrapper_part_name(\"wrap\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatFeaturesParams.html#detectandtreatfeaturesparams","title":"DetectAndTreatFeaturesParams","text":"DetectAndTreatFeaturesParams\n\n\n\nclass ansys.meshing.prime.DetectAndTreatFeaturesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, detect_and_treat_holes: bool = None, detect_and_treat_circular_faces: bool = None, treat_holes_params: DetectAndTreatHolesParams = None, treat_circular_faces_params: DetectAndTreatCircularFacesParams = None, json_data: dict = None, **kwargs)\n\nParameters for detect and treat features operations.\n\nParameters\n\nmodel (Model) – Model to create a DetectAndTreatFeaturesParams object with default parameters.\n\ndetect_and_treat_holes (bool, optional) – Option to detect and treat holes.This is a beta parameter. The behavior and name may change in the future.\n\ndetect_and_treat_circular_faces (bool, optional) – Option to detect and treat circular faces.This is a beta parameter. The behavior and name may change in the future.\n\ntreat_holes_params (DetectAndTreatHolesParams, optional) – Parameters for detect and treat holes operation.This is a beta parameter. The behavior and name may change in the future.\n\ntreat_circular_faces_params (DetectAndTreatCircularFacesParams, optional) – Parameters for detect and treat circular faces operation.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectAndTreatFeaturesParams object with provided parameters.\n\nExamples\n\n>>> detect_and_treat_features_params = prime.DetectAndTreatFeaturesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatFeaturesParams.html#overview","title":"DetectAndTreatFeaturesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndetect_and_treat_circular_faces\n\nOption to detect and treat circular faces.\n\ndetect_and_treat_holes\n\nOption to detect and treat holes.\n\ntreat_circular_faces_params\n\nParameters for detect and treat circular faces operation.\n\ntreat_holes_params\n\nParameters for detect and treat holes operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectAndTreatFeaturesParams object.\n\nset_default\n\nSet the default values of the DetectAndTreatFeaturesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatFeaturesParams.html#import-detail","title":"DetectAndTreatFeaturesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatFeaturesParams.html#property-detail","title":"DetectAndTreatFeaturesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectAndTreatFeaturesParams.detect_and_treat_circular_faces: bool\n\nOption to detect and treat circular faces.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatFeaturesParams.detect_and_treat_holes: bool\n\nOption to detect and treat holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatFeaturesParams.treat_circular_faces_params: DetectAndTreatCircularFacesParams\n\nParameters for detect and treat circular faces operation.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectAndTreatFeaturesParams.treat_holes_params: DetectAndTreatHolesParams\n\nParameters for detect and treat holes operation.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectAndTreatFeaturesParams.html#method-detail","title":"DetectAndTreatFeaturesParams > Method detail","text":"Method detail\n\n\n\nDetectAndTreatFeaturesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectAndTreatFeaturesParams.__str__() -> str\n\n\n\n\n\nstatic DetectAndTreatFeaturesParams.print_default()\n\nPrint the default values of DetectAndTreatFeaturesParams object.\n\nExamples\n\n>>> DetectAndTreatFeaturesParams.print_default()\n\n\n\nstatic DetectAndTreatFeaturesParams.set_default(detect_and_treat_holes: bool = None, detect_and_treat_circular_faces: bool = None, treat_holes_params: DetectAndTreatHolesParams = None, treat_circular_faces_params: DetectAndTreatCircularFacesParams = None)\n\nSet the default values of the DetectAndTreatFeaturesParams object.\n\nParameters\n\ndetect_and_treat_holes (bool, optional) – Option to detect and treat holes.\n\ndetect_and_treat_circular_faces (bool, optional) – Option to detect and treat circular faces.\n\ntreat_holes_params (DetectAndTreatHolesParams, optional) – Parameters for detect and treat holes operation.\n\ntreat_circular_faces_params (DetectAndTreatCircularFacesParams, optional) – Parameters for detect and treat circular faces operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesParams.html#extracttopovolumesparams","title":"ExtractTopoVolumesParams","text":"ExtractTopoVolumesParams\n\n\n\nclass ansys.meshing.prime.autogen.partstructs.ExtractTopoVolumesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, zone_name: str = None, json_data: dict = None, **kwargs)\n\nParameters to extract flow topovolumes.\n\nParameters\n\nmodel (Model) – Model to create a ExtractTopoVolumesParams object with default parameters.\n\nzone_name (str, optional) – Specifies zone name to associate extracted flow topovolumes.\n\njson_data (dict, optional) – JSON dictionary to create a ExtractTopoVolumesParams object with provided parameters.\n\nExamples\n\n>>> extract_topo_volumes_params = prime.ExtractTopoVolumesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesParams.html#overview","title":"ExtractTopoVolumesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nzone_name\n\nSpecifies zone name to associate extracted flow topovolumes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExtractTopoVolumesParams object.\n\nset_default\n\nSet the default values of the ExtractTopoVolumesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesParams.html#import-detail","title":"ExtractTopoVolumesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesParams.html#property-detail","title":"ExtractTopoVolumesParams > Property detail","text":"Property detail\n\n\n\nproperty ExtractTopoVolumesParams.zone_name: str\n\nSpecifies zone name to associate extracted flow topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/partstructs/ExtractTopoVolumesParams.html#method-detail","title":"ExtractTopoVolumesParams > Method detail","text":"Method detail\n\n\n\nExtractTopoVolumesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExtractTopoVolumesParams.__str__() -> str\n\n\n\n\n\nstatic ExtractTopoVolumesParams.print_default()\n\nPrint the default values of ExtractTopoVolumesParams object.\n\nExamples\n\n>>> ExtractTopoVolumesParams.print_default()\n\n\n\nstatic ExtractTopoVolumesParams.set_default(zone_name: str = None)\n\nSet the default values of the ExtractTopoVolumesParams object.\n\nParameters\n\nzone_name (str, optional) – Specifies zone name to associate extracted flow topovolumes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetScopeResults.html#setscoperesults","title":"SetScopeResults","text":"SetScopeResults\n\n\n\nclass ansys.meshing.prime.autogen.controlstructs.SetScopeResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None, json_data: dict = None, **kwargs)\n\nResults associated with the set scope operation.\n\nParameters\n\nmodel (Model) – Model to create a SetScopeResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the set scope.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set scope.\n\njson_data (dict, optional) – JSON dictionary to create a SetScopeResults object with provided parameters.\n\nExamples\n\n>>> set_scope_results = prime.SetScopeResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetScopeResults.html#overview","title":"SetScopeResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the set scope.\n\nwarning_code\n\nWarning code associated with the set scope.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SetScopeResults object.\n\nset_default\n\nSet the default values of the SetScopeResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetScopeResults.html#import-detail","title":"SetScopeResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetScopeResults.html#property-detail","title":"SetScopeResults > Property detail","text":"Property detail\n\n\n\nproperty SetScopeResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the set scope.\n\n\n\nproperty SetScopeResults.warning_code: ansys.meshing.prime.params.primestructs.WarningCode\n\nWarning code associated with the set scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/SetScopeResults.html#method-detail","title":"SetScopeResults > Method detail","text":"Method detail\n\n\n\nSetScopeResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSetScopeResults.__str__() -> str\n\n\n\n\n\nstatic SetScopeResults.print_default()\n\nPrint the default values of SetScopeResults object.\n\nExamples\n\n>>> SetScopeResults.print_default()\n\n\n\nstatic SetScopeResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_code: ansys.meshing.prime.params.primestructs.WarningCode = None)\n\nSet the default values of the SetScopeResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the set scope.\n\nwarning_code (WarningCode, optional) – Warning code associated with the set scope."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportBoundaryFittedSplineParams.html#exportboundaryfittedsplineparams","title":"ExportBoundaryFittedSplineParams","text":"ExportBoundaryFittedSplineParams\n\n\n\nclass ansys.meshing.prime.autogen.fileiostructs.ExportBoundaryFittedSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, id_offset: int = None, id_start: int = None, json_data: dict = None, **kwargs)\n\nParameters for exporting boundary fitted splines.\n\nParameters\n\nmodel (Model) – Model to create a ExportBoundaryFittedSplineParams object with default parameters.\n\nid_offset (int, optional) – Offset value for IGA entity ids between parts.\n\nid_start (int, optional) – Start ids for IGA entities.\n\njson_data (dict, optional) – JSON dictionary to create a ExportBoundaryFittedSplineParams object with provided parameters.\n\nExamples\n\n>>> export_boundary_fitted_spline_params = prime.ExportBoundaryFittedSplineParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportBoundaryFittedSplineParams.html#overview","title":"ExportBoundaryFittedSplineParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nid_offset\n\nOffset value for IGA entity ids between parts.\n\nid_start\n\nStart ids for IGA entities.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportBoundaryFittedSplineParams object.\n\nset_default\n\nSet the default values of the ExportBoundaryFittedSplineParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportBoundaryFittedSplineParams.html#import-detail","title":"ExportBoundaryFittedSplineParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportBoundaryFittedSplineParams.html#property-detail","title":"ExportBoundaryFittedSplineParams > Property detail","text":"Property detail\n\n\n\nproperty ExportBoundaryFittedSplineParams.id_offset: int\n\nOffset value for IGA entity ids between parts.\n\n\n\nproperty ExportBoundaryFittedSplineParams.id_start: int\n\nStart ids for IGA entities."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/fileiostructs/ExportBoundaryFittedSplineParams.html#method-detail","title":"ExportBoundaryFittedSplineParams > Method detail","text":"Method detail\n\n\n\nExportBoundaryFittedSplineParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportBoundaryFittedSplineParams.__str__() -> str\n\n\n\n\n\nstatic ExportBoundaryFittedSplineParams.print_default()\n\nPrint the default values of ExportBoundaryFittedSplineParams object.\n\nExamples\n\n>>> ExportBoundaryFittedSplineParams.print_default()\n\n\n\nstatic ExportBoundaryFittedSplineParams.set_default(id_offset: int = None, id_start: int = None)\n\nSet the default values of the ExportBoundaryFittedSplineParams object.\n\nParameters\n\nid_offset (int, optional) – Offset value for IGA entity ids between parts.\n\nid_start (int, optional) – Start ids for IGA entities."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/index.html#the-sizecontrolstructspy-module","title":"The sizecontrolstructs.py module","text":"The sizecontrolstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/index.html#summary","title":"The sizecontrolstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBoiSizingParams\n\nSize field computed using body of influence size control enables you to specify a body of influence(that is, a region for sizing control).\n\nCurvatureSizingParams\n\nSize field using curvature size control computes edge and face sizes using their size and normal angle parameters.\n\nHardSizingParams\n\nSize field computed using hard size control enables you to maintain a uniform size based on the size specified.\n\nMeshedSizingParams\n\nSize field computed using meshed size control enables you to set the size based on existing sizes.\n\nProximitySizingParams\n\nSize field using proximity size control computes edge and face sizes in gaps using the specified minimum number of element layers.\n\nSetSizingResults\n\nResult associated with the different set sizing parameters.\n\nSizeControlSummaryParams\n\nParameters used to get size control summary.\n\nSizeControlSummaryResult\n\nResults of size control summary.\n\nSizingType\n\nSizing type decides the type of size control.\n\nSoftSizingParams\n\nSize field computed using soft size control enables you to set the maximum size on the scoped zonelets .\n\nSoiSizingParams\n\nParameters for sphere of influence size control.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrolstructs/index.html#description","title":"The sizecontrolstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeNodeType.html#mergenodetype","title":"MergeNodeType","text":"MergeNodeType\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.MergeNodeType\n\nType of nodes to be merged."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeNodeType.html#overview","title":"MergeNodeType > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nALLALL\n\nMerge any type of nodes with any type of nodes.\n\nFREEFREE\n\nMerge only free nodes with free nodes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeNodeType.html#import-detail","title":"MergeNodeType > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/MergeNodeType.html#attribute-detail","title":"MergeNodeType > Attribute detail","text":"Attribute detail\n\n\n\nMergeNodeType.ALLALL = 0\n\nMerge any type of nodes with any type of nodes.\n\n\n\nMergeNodeType.FREEFREE = 1\n\nMerge only free nodes with free nodes."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/model/index.html#the-modelpy-module","title":"The model.py module","text":"The model.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/model/index.html#summary","title":"The model.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nModel\n\nModel is the nucleus of Prime. Model forms the base and contains all the information about Prime.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/model/index.html#description","title":"The model.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/toposearchstructs/index.html#the-toposearchstructspy-module","title":"The toposearchstructs.py module","text":"The toposearchstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/toposearchstructs/index.html#summary","title":"The toposearchstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nTopoSearchField\n\nToposearch diagnostic field.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/toposearchstructs/index.html#description","title":"The toposearchstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/UniformSolidSplineCreationParams.html#uniformsolidsplinecreationparams","title":"UniformSolidSplineCreationParams","text":"UniformSolidSplineCreationParams\n\n\n\nclass ansys.meshing.prime.UniformSolidSplineCreationParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_control_points_u: int = None, n_control_points_v: int = None, n_control_points_w: int = None, degree_u: int = None, degree_v: int = None, degree_w: int = None, json_data: dict = None, **kwargs)\n\nParameters to define the uniform solid spline.\n\nParameters\n\nmodel (Model) – Model to create a UniformSolidSplineCreationParams object with default parameters.\n\nn_control_points_u (int, optional) – Number of control points in u direction.This is a beta parameter. The behavior and name may change in the future.\n\nn_control_points_v (int, optional) – Number of control points in v direction.This is a beta parameter. The behavior and name may change in the future.\n\nn_control_points_w (int, optional) – Number of control points in w direction.This is a beta parameter. The behavior and name may change in the future.\n\ndegree_u (int, optional) – Degree in u direction.This is a beta parameter. The behavior and name may change in the future.\n\ndegree_v (int, optional) – Degree in v direction.This is a beta parameter. The behavior and name may change in the future.\n\ndegree_w (int, optional) – Degree in w direction.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a UniformSolidSplineCreationParams object with provided parameters.\n\nExamples\n\n>>> uniform_solid_spline_creation_params = prime.UniformSolidSplineCreationParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/UniformSolidSplineCreationParams.html#overview","title":"UniformSolidSplineCreationParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndegree_u\n\nDegree in u direction.\n\ndegree_v\n\nDegree in v direction.\n\ndegree_w\n\nDegree in w direction.\n\nn_control_points_u\n\nNumber of control points in u direction.\n\nn_control_points_v\n\nNumber of control points in v direction.\n\nn_control_points_w\n\nNumber of control points in w direction.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of UniformSolidSplineCreationParams object.\n\nset_default\n\nSet the default values of the UniformSolidSplineCreationParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/UniformSolidSplineCreationParams.html#import-detail","title":"UniformSolidSplineCreationParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/UniformSolidSplineCreationParams.html#property-detail","title":"UniformSolidSplineCreationParams > Property detail","text":"Property detail\n\n\n\nproperty UniformSolidSplineCreationParams.degree_u: int\n\nDegree in u direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.degree_v: int\n\nDegree in v direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.degree_w: int\n\nDegree in w direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_u: int\n\nNumber of control points in u direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_v: int\n\nNumber of control points in v direction.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty UniformSolidSplineCreationParams.n_control_points_w: int\n\nNumber of control points in w direction.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/UniformSolidSplineCreationParams.html#method-detail","title":"UniformSolidSplineCreationParams > Method detail","text":"Method detail\n\n\n\nUniformSolidSplineCreationParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nUniformSolidSplineCreationParams.__str__() -> str\n\n\n\n\n\nstatic UniformSolidSplineCreationParams.print_default()\n\nPrint the default values of UniformSolidSplineCreationParams object.\n\nExamples\n\n>>> UniformSolidSplineCreationParams.print_default()\n\n\n\nstatic UniformSolidSplineCreationParams.set_default(n_control_points_u: int = None, n_control_points_v: int = None, n_control_points_w: int = None, degree_u: int = None, degree_v: int = None, degree_w: int = None)\n\nSet the default values of the UniformSolidSplineCreationParams object.\n\nParameters\n\nn_control_points_u (int, optional) – Number of control points in u direction.\n\nn_control_points_v (int, optional) – Number of control points in v direction.\n\nn_control_points_w (int, optional) – Number of control points in w direction.\n\ndegree_u (int, optional) – Degree in u direction.\n\ndegree_v (int, optional) – Degree in v direction.\n\ndegree_w (int, optional) – Degree in w direction."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/controldata/ControlData.html#controldata","title":"ControlData","text":"ControlData\n\n\n\nclass ansys.meshing.prime.core.controldata.ControlData(model: ansys.meshing.prime.autogen.model.Model, id: int, object_id: int, name: str)\n\nContains all controls.\n\nThis class contains all controls, including size controls, prism controls, multizone controls\nand wrapper controls.\n\nParameters\n\nmodel (Model) – Server model to create ControlData object.\n\nid (int) – Id of the ControlData.\n\nobject_id (int) – Object id of the ControlData.\n\nname (str) – Name of the ControlData."},{"objectID":"Home","href":"api/ansys/meshing/prime/core/controldata/ControlData.html#overview","title":"ControlData > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ncreate_multi_zone_control\n\nCreate multizone control with defaults.\n\ncreate_periodic_control\n\nCreate a periodic control.\n\ncreate_prism_control\n\nCreate a prism control.\n\ncreate_shell_bl_control\n\nCreate a ShellBL control.\n\ncreate_size_control\n\nCreate a size control for a sizing type.\n\ncreate_thin_volume_control\n\nCreate a thin volume control.\n\ncreate_volume_control\n\nCreate a volume control.\n\ncreate_wrapper_control\n\nCreate a wrapper control with default values.\n\ndelete_controls\n\nDelete the control for one or more IDs.\n\nget_multi_zone_control_by_name\n\nGet the multizone control by name.\n\nget_multi_zone_controls\n\nGet ids of all the MultiZone controls.\n\nget_part_zonelets\n\nCreates an array of part zonelet structure using the input ScopeDefinition.\n\nget_periodic_control_by_name\n\nGet a periodic control by name.\n\nget_prism_control_by_name\n\nGet a prism control by name.\n\nget_scope_face_zonelets\n\nGet the face zonelet ids for the given scope.\n\nget_scope_parts\n\nGet the part ids for the given scope.\n\nget_shell_bl_control_by_name\n\nGet a shell bl control by name.\n\nget_size_control_by_name\n\nGet a size control by name.\n\nget_thin_volume_control_by_name\n\nGet a thin volume control by name.\n\nget_volume_control_by_name\n\nGet a volume control by name.\n\nget_wrapper_control_by_name\n\nGet the wrapper control by name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of ControlData.\n\nmulti_zone_controls\n\nGet the multizone controls.\n\nname\n\nGet the name of ControlData.\n\nperiodic_controls\n\nGet the periodic controls.\n\nprism_controls\n\nGet the prism controls.\n\nshell_bl_controls\n\nGet the shell bl controls.\n\nsize_controls\n\nGet the size controls.\n\nthin_volume_controls\n\nGet the thin volume controls.\n\nvolume_controls\n\nGet the volume controls.\n\nwrapper_controls\n\nGet the wrapper controls.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/controldata/ControlData.html#import-detail","title":"ControlData > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/controldata/ControlData.html#property-detail","title":"ControlData > Property detail","text":"Property detail\n\n\n\nproperty ControlData.id\n\nGet the id of ControlData.\n\n\n\nproperty ControlData.multi_zone_controls: List[ansys.meshing.prime.autogen.multizonecontrol.MultiZoneControl]\n\nGet the multizone controls.\n\nReturns\n\nReturns the list of multizone controls.\n\nReturn type\n\nList[MultiZoneControl]\n\nExamples\n\n>>> multi_zone_control = model.control_data.multi_zone_controls\n\n\n\nproperty ControlData.name\n\nGet the name of ControlData.\n\n\n\nproperty ControlData.periodic_controls: List[ansys.meshing.prime.core.periodiccontrol.PeriodicControl]\n\nGet the periodic controls.\n\nReturns\n\nList of periodic controls.\n\nReturn type\n\nList[PeriodicControl]\n\nExamples\n\n>>> periodic_controls = model.control_data.periodic_controls\n\n\n\nproperty ControlData.prism_controls: List[ansys.meshing.prime.core.prismcontrol.PrismControl]\n\nGet the prism controls.\n\nReturns\n\nList of prism controls.\n\nReturn type\n\nList[PrismControl]\n\nExamples\n\n>>> prism_control = model.control_data.prism_controls\n\n\n\nproperty ControlData.shell_bl_controls: List[ansys.meshing.prime.autogen.shellblcontrol.ShellBLControl]\n\nGet the shell bl controls.\n\nReturns\n\nList of shell bl controls.\n\nReturn type\n\nList[ShellBLControl]\n\nExamples\n\n>>> shell_bl_control = model.control_data.shell_bl_controls\n\n\n\nproperty ControlData.size_controls: List[ansys.meshing.prime.core.sizecontrol.SizeControl]\n\nGet the size controls.\n\nReturns\n\nList of size controls.\n\nReturn type\n\nList[SizeControl]\n\nExamples\n\n>>> size_controls = model.control_data.size_controls\n\n\n\nproperty ControlData.thin_volume_controls: List[ansys.meshing.prime.autogen.thinvolumecontrol.ThinVolumeControl]\n\nGet the thin volume controls.\n\nReturns\n\nList of thin volume controls.\n\nReturn type\n\nList[ThinVolumeControl]\n\nExamples\n\n>>> thin_volume_control = model.control_data.thin_volume_controls\n\n\n\nproperty ControlData.volume_controls: List[ansys.meshing.prime.core.volumecontrol.VolumeControl]\n\nGet the volume controls.\n\nReturns\n\nList of volume controls.\n\nReturn type\n\nList[VolumeControl]\n\nExamples\n\n>>> volume_controls = model.control_data.volume_controls\n\n\n\nproperty ControlData.wrapper_controls: List[ansys.meshing.prime.core.wrappercontrol.WrapperControl]\n\nGet the wrapper controls.\n\nReturns\n\nList of wrapper controls.\n\nReturn type\n\nList[WrapperControl]\n\nExamples\n\n>>> wrapper_control = model.control_data.wrapper_controls"},{"objectID":"Home","href":"api/ansys/meshing/prime/core/controldata/ControlData.html#method-detail","title":"ControlData > Method detail","text":"Method detail\n\n\n\nControlData.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nControlData.create_multi_zone_control() -> ansys.meshing.prime.autogen.multizonecontrol.MultiZoneControl\n\nCreate multizone control with defaults.\n\nReturns\n\nReturns the multizone control.\n\nReturn type\n\nmultizone\n\nExamples\n\n>>> multizone = model.control_data.create_wrapper_control()\n\n\n\nControlData.create_periodic_control() -> ansys.meshing.prime.core.periodiccontrol.PeriodicControl\n\nCreate a periodic control.\n\nReturns\n\nPeriodic control.\n\nReturn type\n\nPeriodicControl\n\nExamples\n\n>>> periodic_control = model.control_data.create_periodic_control()\n\n\n\nControlData.create_prism_control() -> ansys.meshing.prime.core.prismcontrol.PrismControl\n\nCreate a prism control.\n\nReturns\n\nPrism control.\n\nReturn type\n\nPrismControl\n\nExamples\n\n>>> prism_control = model.control_data.create_prism_control()\n\n\n\nControlData.create_shell_bl_control() -> ansys.meshing.prime.autogen.shellblcontrol.ShellBLControl\n\nCreate a ShellBL control.\n\nReturns\n\nShellBL Control.\n\nReturn type\n\nShellBLControl\n\nExamples\n\n>>> shell_bl_control = model.control_data.create_shell_bl_control()\n\n\n\nControlData.create_size_control(sizing_type: ansys.meshing.prime.params.primestructs.SizingType) -> ansys.meshing.prime.core.sizecontrol.SizeControl\n\nCreate a size control for a sizing type.\n\nParameters\n\ntype (SizingType) – Sizing type for creating the size control.\n\nReturns\n\nSize control.\n\nReturn type\n\nSizeControl\n\nNotes\n\nAn empty size control is created on calling this method.\n\nExamples\n\n>>> size_control = model.control_data.create_size_control(SizingType.Curvature)\n\n\n\nControlData.create_thin_volume_control() -> ansys.meshing.prime.autogen.thinvolumecontrol.ThinVolumeControl\n\nCreate a thin volume control.\n\nReturns\n\nThin volume control.\n\nReturn type\n\nThinVolumeControl\n\nExamples\n\n>>> thin_volume_control = model.control_data.create_thin_volume_control()\n\n\n\nControlData.create_volume_control() -> ansys.meshing.prime.core.volumecontrol.VolumeControl\n\nCreate a volume control.\n\nReturns\n\nVolume control.\n\nReturn type\n\nVolumeControl\n\nExamples\n\n>>> volume_control = model.control_data.create_volume_control()\n\n\n\nControlData.create_wrapper_control() -> ansys.meshing.prime.core.wrappercontrol.WrapperControl\n\nCreate a wrapper control with default values.\n\nReturns\n\nWrapper control.\n\nReturn type\n\nWrapperControl\n\nNotes\n\nA wrapper control with default values is created on calling this method.\n\nExamples\n\n>>> wrapper_control = model.control_data.create_wrapper_control()\n\n\n\nControlData.delete_controls(control_ids: Iterable[int]) -> ansys.meshing.prime.autogen.commonstructs.DeleteResults\n\nDelete the control for one or more IDs.\n\nParameters\n\ncontrol_ids (Iterable[int]) – List of control IDs.\n\nReturns\n\nDelete results.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = model.control_data.delete_controls([size_control.id, volume_control.id])\n\n\n\nControlData.get_multi_zone_control_by_name(name) -> ansys.meshing.prime.autogen.multizonecontrol.MultiZoneControl\n\nGet the multizone control by name.\n\nParameters\n\nname (str) – Name of the multizone control.\n\nReturns\n\nReturns the multizone control.\n\nReturn type\n\nMultiZoneControl\n\nExamples\n\n>>> multi_zone_control = model.control_data.get_multi_zone_control_by_name(\"mzcontrol-1\")\n\n\n\nControlData.get_multi_zone_controls() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of all the MultiZone controls.\n\nReturns\n\nReturn all the MultiZone controls ids.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> MultiZoneControls = model.control_data.get_multi_zone_controls()\n\n\n\nControlData.get_part_zonelets(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> List[ansys.meshing.prime.params.primestructs.PartZonelets]\n\nCreates an array of part zonelet structure using the input ScopeDefinition.\n\nParameters\n\nscope (ScopeDefinition) – Input ScopeDefinition.\n\nReturns\n\nReturns a list of PartZonelets.\n\nReturn type\n\nList[PartZonelets]\n\nExamples\n\n>>> results = control_data.get_part_zonelets(scope)\n\n\n\nControlData.get_periodic_control_by_name(name: str) -> ansys.meshing.prime.core.periodiccontrol.PeriodicControl\n\nGet a periodic control by name.\n\nParameters\n\nname (str) – Name of the periodic control.\n\nReturns\n\nPeriodic control.\n\nReturn type\n\nPeriodicControl\n\nExamples\n\n>>> periodic_control = model.control_data.get_periodic_control_by_name(\"PeriodicControl-1\")\n\n\n\nControlData.get_prism_control_by_name(name: str) -> ansys.meshing.prime.core.prismcontrol.PrismControl\n\nGet a prism control by name.\n\nParameters\n\nname (str) – Name of the prism control.\n\nReturns\n\nPrism control.\n\nReturn type\n\nPrismControl\n\nExamples\n\n>>> prism_control = model.control_data.get_prism_control_by_name(\"PrismControl-1\")\n\n\n\nControlData.get_scope_face_zonelets(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition, params: ansys.meshing.prime.params.primestructs.ScopeZoneletParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelet ids for the given scope.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition to evaluate entities.\n\nparams (ScopeZoneletParams) – Parameters to scope zonelets.\n\nReturns\n\nReturn the ids of face zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = model.control_data.get_scope_face_zonelets(\n>>>                 prime.ScopeDefinition(model = model,\n>>>                 entity_type = prime.ScopeEntity.FACEZONELETS,\n>>>                 part_expression = \"*\"),\n>>>                 prime.ScopeZoneletParams(model =model))\n\n\n\nControlData.get_scope_parts(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the part ids for the given scope.\n\nParameters\n\nscope (ScopeDefinition) – Scope definition to evaluate the part ids.\n\nReturns\n\nReturn the ids of parts.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> part_ids = model.control_data.get_scope_parts(\n>>>                 prime.ScopeDefinition(model = model,\n>>>                 part_expression = \"*\"),\n>>>                 prime.ScopeZoneletParams(model =model))\n\n\n\nControlData.get_shell_bl_control_by_name(name: str) -> ansys.meshing.prime.autogen.shellblcontrol.ShellBLControl\n\nGet a shell bl control by name.\n\nParameters\n\nname (str) – Name of the shell bl control.\n\nReturns\n\nShell BL control.\n\nReturn type\n\nShellBLControl\n\nExamples\n\n>>> shell_bl_control = model.control_data.get_shell_bl_control_by_name(\"ShellBLControl-1\")\n\n\n\nControlData.get_size_control_by_name(name: str) -> ansys.meshing.prime.core.sizecontrol.SizeControl\n\nGet a size control by name.\n\nParameters\n\nname (str) – Name of the size control.\n\nReturns\n\nSize control.\n\nReturn type\n\nSizeControl\n\nExamples\n\n>>> size_control = model.control_data.get_size_control_by_name(\"SizeControl-1\")\n\n\n\nControlData.get_thin_volume_control_by_name(name: str) -> ansys.meshing.prime.autogen.thinvolumecontrol.ThinVolumeControl\n\nGet a thin volume control by name.\n\nParameters\n\nname (str) – Name of the thin volume control.\n\nReturns\n\nThin volume control.\n\nReturn type\n\nThinVolumeControl\n\nExamples\n\n>>> contorl_data = model.control_data\n>>> thin_volume_control = control_data.get_thin_volume_control_by_name(\n                                             \"ThinVolumeControl-1\")\n\n\n\nControlData.get_volume_control_by_name(name: str) -> ansys.meshing.prime.core.volumecontrol.VolumeControl\n\nGet a volume control by name.\n\nParameters\n\nname (str) – Name of the volume control.\n\nReturns\n\nVolume control.\n\nReturn type\n\nVolumeControl\n\nExamples\n\n>>> volume_control = model.control_data.get_volume_control_by_name(\"VolumeControl-1\")\n\n\n\nControlData.get_wrapper_control_by_name(name) -> ansys.meshing.prime.core.wrappercontrol.WrapperControl\n\nGet the wrapper control by name.\n\nParameters\n\nname (str) – Name of the wrapper control.\n\nReturns\n\nWrapper control.\n\nReturn type\n\nWrapperControl\n\nExamples\n\n>>> wrapper_control = model.control_data.get_wrapper_control_by_name(\"wrappercontrol-1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsParams.html#deletefringesandoverlapsparams","title":"DeleteFringesAndOverlapsParams","text":"DeleteFringesAndOverlapsParams\n\n\n\nclass ansys.meshing.prime.DeleteFringesAndOverlapsParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, fringe_element_count: int = None, overlap_element_count: int = None, delete_fringes: bool = None, delete_overlaps: bool = None, json_data: dict = None, **kwargs)\n\nParameters to delete fringes and overlapping faces.\n\nParameters\n\nmodel (Model) – Model to create a DeleteFringesAndOverlapsParams object with default parameters.\n\nfringe_element_count (int, optional) – Maximum count of free face elements identified as fringe to be deleted.\n\noverlap_element_count (int, optional) – Maximum count of overlapping face elements identified as overlap to be deleted.\n\ndelete_fringes (bool, optional) – Option to delete fringes. The default is true.\n\ndelete_overlaps (bool, optional) – Option to delete overlaps. The default is false.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteFringesAndOverlapsParams object with provided parameters.\n\nExamples\n\n>>> delete_fringes_and_overlaps_params = prime.DeleteFringesAndOverlapsParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsParams.html#overview","title":"DeleteFringesAndOverlapsParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_fringes\n\nOption to delete fringes. The default is true.\n\ndelete_overlaps\n\nOption to delete overlaps. The default is false.\n\nfringe_element_count\n\nMaximum count of free face elements identified as fringe to be deleted.\n\noverlap_element_count\n\nMaximum count of overlapping face elements identified as overlap to be deleted.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteFringesAndOverlapsParams object.\n\nset_default\n\nSet the default values of the DeleteFringesAndOverlapsParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsParams.html#import-detail","title":"DeleteFringesAndOverlapsParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsParams.html#property-detail","title":"DeleteFringesAndOverlapsParams > Property detail","text":"Property detail\n\n\n\nproperty DeleteFringesAndOverlapsParams.delete_fringes: bool\n\nOption to delete fringes. The default is true.\n\n\n\nproperty DeleteFringesAndOverlapsParams.delete_overlaps: bool\n\nOption to delete overlaps. The default is false.\n\n\n\nproperty DeleteFringesAndOverlapsParams.fringe_element_count: int\n\nMaximum count of free face elements identified as fringe to be deleted.\n\n\n\nproperty DeleteFringesAndOverlapsParams.overlap_element_count: int\n\nMaximum count of overlapping face elements identified as overlap to be deleted."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteFringesAndOverlapsParams.html#method-detail","title":"DeleteFringesAndOverlapsParams > Method detail","text":"Method detail\n\n\n\nDeleteFringesAndOverlapsParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteFringesAndOverlapsParams.__str__() -> str\n\n\n\n\n\nstatic DeleteFringesAndOverlapsParams.print_default()\n\nPrint the default values of DeleteFringesAndOverlapsParams object.\n\nExamples\n\n>>> DeleteFringesAndOverlapsParams.print_default()\n\n\n\nstatic DeleteFringesAndOverlapsParams.set_default(fringe_element_count: int = None, overlap_element_count: int = None, delete_fringes: bool = None, delete_overlaps: bool = None)\n\nSet the default values of the DeleteFringesAndOverlapsParams object.\n\nParameters\n\nfringe_element_count (int, optional) – Maximum count of free face elements identified as fringe to be deleted.\n\noverlap_element_count (int, optional) – Maximum count of overlapping face elements identified as overlap to be deleted.\n\ndelete_fringes (bool, optional) – Option to delete fringes. The default is true.\n\ndelete_overlaps (bool, optional) – Option to delete overlaps. The default is false."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automesh/index.html#the-automeshpy-module","title":"The automesh.py module","text":"The automesh.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automesh/index.html#summary","title":"The automesh.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nAutoMesh\n\nGenerates volume mesh.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/automesh/index.html#description","title":"The automesh.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectNonCircularHolesParams.html#detectnoncircularholesparams","title":"DetectNonCircularHolesParams","text":"DetectNonCircularHolesParams\n\n\n\nclass ansys.meshing.prime.DetectNonCircularHolesParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, allow_curved_topo_faces: bool = None, max_hole_length: float = None, min_hole_length: float = None, merge_edge_allow_self_close: bool = None, json_data: dict = None, **kwargs)\n\nParameters for detect non circular holes operation.\n\nParameters\n\nmodel (Model) – Model to create a DetectNonCircularHolesParams object with default parameters.\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.This is a beta parameter. The behavior and name may change in the future.\n\nmax_hole_length (float, optional) – Maximum length of holes.This is a beta parameter. The behavior and name may change in the future.\n\nmin_hole_length (float, optional) – Minimum length of holes.This is a beta parameter. The behavior and name may change in the future.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops.This is a beta parameter. The behavior and name may change in the future.\n\njson_data (dict, optional) – JSON dictionary to create a DetectNonCircularHolesParams object with provided parameters.\n\nExamples\n\n>>> detect_non_circular_holes_params = prime.DetectNonCircularHolesParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectNonCircularHolesParams.html#overview","title":"DetectNonCircularHolesParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nallow_curved_topo_faces\n\nOption to allow holes in curved topoface.\n\nmax_hole_length\n\nMaximum length of holes.\n\nmerge_edge_allow_self_close\n\nOption for merging self-closing edge loops.\n\nmin_hole_length\n\nMinimum length of holes.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DetectNonCircularHolesParams object.\n\nset_default\n\nSet the default values of the DetectNonCircularHolesParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectNonCircularHolesParams.html#import-detail","title":"DetectNonCircularHolesParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectNonCircularHolesParams.html#property-detail","title":"DetectNonCircularHolesParams > Property detail","text":"Property detail\n\n\n\nproperty DetectNonCircularHolesParams.allow_curved_topo_faces: bool\n\nOption to allow holes in curved topoface.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectNonCircularHolesParams.max_hole_length: float\n\nMaximum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectNonCircularHolesParams.merge_edge_allow_self_close: bool\n\nOption for merging self-closing edge loops.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty DetectNonCircularHolesParams.min_hole_length: float\n\nMinimum length of holes.\n\nThis is a beta parameter. The behavior and name may change in the future."},{"objectID":"Home","href":"api/ansys/meshing/prime/DetectNonCircularHolesParams.html#method-detail","title":"DetectNonCircularHolesParams > Method detail","text":"Method detail\n\n\n\nDetectNonCircularHolesParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDetectNonCircularHolesParams.__str__() -> str\n\n\n\n\n\nstatic DetectNonCircularHolesParams.print_default()\n\nPrint the default values of DetectNonCircularHolesParams object.\n\nExamples\n\n>>> DetectNonCircularHolesParams.print_default()\n\n\n\nstatic DetectNonCircularHolesParams.set_default(allow_curved_topo_faces: bool = None, max_hole_length: float = None, min_hole_length: float = None, merge_edge_allow_self_close: bool = None)\n\nSet the default values of the DetectNonCircularHolesParams object.\n\nParameters\n\nallow_curved_topo_faces (bool, optional) – Option to allow holes in curved topoface.\n\nmax_hole_length (float, optional) – Maximum length of holes.\n\nmin_hole_length (float, optional) – Minimum length of holes.\n\nmerge_edge_allow_self_close (bool, optional) – Option for merging self-closing edge loops."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/index.html#the-controlstructspy-module","title":"The controlstructs.py module","text":"The controlstructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/index.html#summary","title":"The controlstructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nContactPreventionParams\n\nContactPreventionParams defines contact prevention control parameters for wrapper.\n\nFeatureRecoveryParams\n\nFeatureRecoveryParams defines feature recovery control parameters for wrapper.\n\nLeakPreventionParams\n\nLeakPreventionParams defines leakage prevention control parameters for wrapper.\n\nMultiZoneEdgeBiasingParams\n\nDefines MultiZone edge biasing control parameters.\n\nMultiZoneMapMeshParams\n\nDefine controlling parameters for the map mesh using MultiZone.\n\nMultiZoneSizingParams\n\nParameters for MultiZone meshing.\n\nMultiZoneSweepMeshParams\n\nDefines MultiZone thin sweep mesh control parameters.\n\nScopeDefinition\n\nScopeDefinition to scope entities based on entity and evaluation type.\n\nScopeEntity\n\nScopeDefinition uses entity type to scope entities.\n\nScopeEvaluationType\n\nScopeDefinition uses evaluation type to evaluate the scope.\n\nScopeExpressionType\n\nScopeExpressionType uses expression type to evaluate the scope.\n\nScopeZoneletParams\n\nParameters used to get the scoped face or edge zonelets.\n\nSetContactPreventionsResults\n\nResults associated with set contact preventions.\n\nSetFeatureRecoveriesResults\n\nResults associated with set feature recoveries.\n\nSetLeakPreventionsResults\n\nResults associated with set leak preventions.\n\nSetParamsResults\n\nResults associated with the set parameters operation.\n\nSetScopeResults\n\nResults associated with the set scope operation.\n\nSweepType\n\nProvides the Sweep Mesh Decomposition type.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/controlstructs/index.html#description","title":"The controlstructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrol/index.html#the-periodiccontrolpy-module","title":"The periodiccontrol.py module","text":"The periodiccontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrol/index.html#summary","title":"The periodiccontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nPeriodicControl\n\nPeriodic controls provide settings for the recovery of periodic surfaces.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/periodiccontrol/index.html#description","title":"The periodiccontrol.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#morph-a-hexahedral-mesh-of-a-turbine-blade-to-a-new-shape","title":"Morph a hexahedral mesh of a turbine blade to a new shape","text":"Morph a hexahedral mesh of a turbine blade to a new shape\n\nSummary: This example demonstrates how to morph a structural\nhexahedral mesh of a turbine blade to a new deformed shape\ndefined by a target geometry file."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#objective","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Objective","text":"Objective\n\nThis example appends a CDB mesh with a CAD geometry\nand match morphs the mesh to the geometry."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#procedure","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Procedure","text":"Procedure\n\nLaunch an Ansys Prime Server instance and connect the PyPrimeMesh client.\n\nRead the mesh and append the new CAD geometry shape.\n\nDefine the mesh source faces and the target geometry faces to match morph.\n\nMatch morph the turbine blade mesh to the new CAD geometry shape.\n\nWrite the mesh for structural analysis."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#launch-ansys-prime-server","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Launch Ansys Prime Server","text":"Launch Ansys Prime Server\n\nImport all necessary modules.\nLaunch the Ansys Prime Server instance and connect the client.\nGet the client model and instantiate meshing utilities from the lucid class."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#read-files","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Read files","text":"Read files\n\nDownload the turbine blade mesh file and CAD geometry.\nRead the mesh and append the geometry.\nDisplay the source and the target.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#define-source-and-target-faces","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Define source and target faces","text":"Define source and target faces"},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#match-morph-mesh","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Match morph mesh","text":"Match morph mesh\n\nSet the target type to be for topoface because the target is geometry.\nMorph the source face zonelets of source_part to the\ntarget topofaces of the geometry.\n\nStatic Scene\n\n\n\nInteractive Scene\n\n"},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#write-mesh","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Write mesh","text":"Write mesh\n\nWrite the morphed CDB file. The geometry is ignored when exporting to a CDB\nfile."},{"objectID":"Home","href":"examples/gallery_examples/gallery/06_blade_morph.html#exit-pyprimemesh","title":"Morph a hexahedral mesh of a turbine blade to a new shape > Exit PyPrimeMesh","text":"Exit PyPrimeMesh\n\nTotal running time of the script: (1 minutes 5.847 seconds)\n\n\n\nDownload Jupyter notebook: 06_blade_morph.ipynb\n\nDownload Python source code: 06_blade_morph.py\n\nDownload zipped: 06_blade_morph.zip\n\nGallery generated by Sphinx-Gallery"},{"objectID":"Home","href":"user_guide/index.html#user-guide","title":"User guide","text":"User guide\n\nThis section provides an overview of how you use PyPrimeMesh for mesh preparation.\n\n"},{"objectID":"Home","href":"user_guide/index.html#overview","title":"User guide > Overview","text":"Overview\n\nThe launch_prime() method in PyPrimeMesh launches\nAnsys Prime Server and returns an instance of the Client\nclass. You can then send gRPC commands to Ansys Prime Server and receive responses\nfrom it."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedParams.html#deleteunwettedparams","title":"DeleteUnwettedParams","text":"DeleteUnwettedParams\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.DeleteUnwettedParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nDeleteUnwettedParams defines parameters for delete unwetted surfaces operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteUnwettedParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteUnwettedParams object with provided parameters.\n\nExamples\n\n>>> delete_unwetted_params = prime.DeleteUnwettedParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedParams.html#overview","title":"DeleteUnwettedParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteUnwettedParams object.\n\nset_default\n\nSet the default values of the DeleteUnwettedParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedParams.html#import-detail","title":"DeleteUnwettedParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/DeleteUnwettedParams.html#method-detail","title":"DeleteUnwettedParams > Method detail","text":"Method detail\n\n\n\nDeleteUnwettedParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteUnwettedParams.__str__() -> str\n\n\n\n\n\nstatic DeleteUnwettedParams.print_default()\n\nPrint the default values of DeleteUnwettedParams object.\n\nExamples\n\n>>> DeleteUnwettedParams.print_default()\n\n\n\nstatic DeleteUnwettedParams.set_default()\n\nSet the default values of the DeleteUnwettedParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearch/VolumeSearch.html#volumesearch","title":"VolumeSearch","text":"VolumeSearch\n\n\n\nclass ansys.meshing.prime.autogen.volumesearch.VolumeSearch(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager)\n\nVolumeSearch allows you to check volume mesh quality.\n\nVolumeSearch performs volume mesh quality check based on different cell quality measures.\n\nParameters\n\nmodel (Model) – Server model to create VolumeSearch object."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearch/VolumeSearch.html#overview","title":"VolumeSearch > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nget_volume_quality_summary\n\nGets the volume quality summary.\n\nSpecial methods\n\n\n\n\n\n__enter__\n\nEnter context for VolumeSearch.\n\n__exit__\n\nExit context for VolumeSearch.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearch/VolumeSearch.html#import-detail","title":"VolumeSearch > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/volumesearch/VolumeSearch.html#method-detail","title":"VolumeSearch > Method detail","text":"Method detail\n\n\n\nVolumeSearch.__enter__()\n\nEnter context for VolumeSearch.\n\n\n\nVolumeSearch.__exit__(type, value, traceback)\n\nExit context for VolumeSearch.\n\n\n\nVolumeSearch.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nVolumeSearch.get_volume_quality_summary(params: ansys.meshing.prime.params.primestructs.VolumeQualitySummaryParams) -> ansys.meshing.prime.params.primestructs.VolumeQualitySummaryResults\n\nGets the volume quality summary.\n\nDiagnose volume quality for the given scope and cell quality measures provided in the VolumeQualitySummaryParams structure.\nUse default quality limit if the parameters are not specified.\n\nParameters\n\nparams (VolumeQualitySummaryParams) – Volume quality summary parameters.\n\nReturns\n\nReturns the VolumeQualitySummaryResults.\n\nReturn type\n\nVolumeQualitySummaryResults\n\nExamples\n\n>>> vol_search = VolumeSearch(model=model)\n>>> results = vol_search.get_volume_quality_summary(VolumeQualitySummaryParams(model=model))"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/index.html#the-igastructspy-module","title":"The igastructs.py module","text":"The igastructs.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/index.html#summary","title":"The igastructs.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nBoundaryFittedSplineParams\n\nBoundary fitted spline fitting parameters.\n\nControlPointSelection\n\nControl point selection type.\n\nHexToSplineParams\n\nParameters to control conversion of hex mesh to spline.\n\nIGAResults\n\nResults of IGA operations.\n\nIGASpline\n\nInformation of the spline.\n\nIGAUnstructuredSplineSolid\n\nInformation of unstructured spline solid.\n\nIGAUnstructuredSplineSurf\n\nInformation of unstructured spline surface.\n\nQuadToSplineParams\n\nParameters to control conversion of quadrilateral mesh to spline.\n\nRefineSplineParams\n\nSpline refinement parameters.\n\nSplineContinuityType\n\nSpline Continuity types.\n\nSplineFeatureCaptureType\n\nOptions to capture features in spline.\n\nSplineRefinementType\n\nType of spline refinement. Currently, supports h-refinement and p-refinement.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/igastructs/index.html#description","title":"The igastructs.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphResults.html#matchmorphresults","title":"MatchMorphResults","text":"MatchMorphResults\n\n\n\nclass ansys.meshing.prime.autogen.morpherstructs.MatchMorphResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with match morph operation.\n\nParameters\n\nmodel (Model) – Model to create a MatchMorphResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Errorcode associated with match morph operation.\n\njson_data (dict, optional) – JSON dictionary to create a MatchMorphResults object with provided parameters.\n\nExamples\n\n>>> match_morph_results = prime.MatchMorphResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphResults.html#overview","title":"MatchMorphResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nErrorcode associated with match morph operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MatchMorphResults object.\n\nset_default\n\nSet the default values of the MatchMorphResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphResults.html#import-detail","title":"MatchMorphResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphResults.html#property-detail","title":"MatchMorphResults > Property detail","text":"Property detail\n\n\n\nproperty MatchMorphResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nErrorcode associated with match morph operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/morpherstructs/MatchMorphResults.html#method-detail","title":"MatchMorphResults > Method detail","text":"Method detail\n\n\n\nMatchMorphResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMatchMorphResults.__str__() -> str\n\n\n\n\n\nstatic MatchMorphResults.print_default()\n\nPrint the default values of MatchMorphResults object.\n\nExamples\n\n>>> MatchMorphResults.print_default()\n\n\n\nstatic MatchMorphResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the MatchMorphResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Errorcode associated with match morph operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlParams.html#periodiccontrolparams","title":"PeriodicControlParams","text":"PeriodicControlParams\n\n\n\nclass ansys.meshing.prime.PeriodicControlParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, center: ansys.meshing.prime.params.primestructs.Iterable[float] = None, axis: ansys.meshing.prime.params.primestructs.Iterable[float] = None, angle: float = None, json_data: dict = None, **kwargs)\n\nPeriodicControlParams contains the parameters for periodic surface recovery.  Parameters like center, axis and angle determine the transformation from  one surface to its matching periodic surface.\n\nParameters\n\nmodel (Model) – Model to create a PeriodicControlParams object with default parameters.\n\ncenter (Iterable[float], optional) – Center coordinates.\n\naxis (Iterable[float], optional) – Axis vector coordinates.\n\nangle (float, optional) – Angle in degrees.\n\njson_data (dict, optional) – JSON dictionary to create a PeriodicControlParams object with provided parameters.\n\nExamples\n\n>>> periodic_control_params = prime.PeriodicControlParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlParams.html#overview","title":"PeriodicControlParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nangle\n\nAngle in degrees.\n\naxis\n\nAxis vector coordinates.\n\ncenter\n\nCenter coordinates.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of PeriodicControlParams object.\n\nset_default\n\nSet the default values of the PeriodicControlParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlParams.html#import-detail","title":"PeriodicControlParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlParams.html#property-detail","title":"PeriodicControlParams > Property detail","text":"Property detail\n\n\n\nproperty PeriodicControlParams.angle: float\n\nAngle in degrees.\n\n\n\nproperty PeriodicControlParams.axis: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nAxis vector coordinates.\n\n\n\nproperty PeriodicControlParams.center: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nCenter coordinates."},{"objectID":"Home","href":"api/ansys/meshing/prime/PeriodicControlParams.html#method-detail","title":"PeriodicControlParams > Method detail","text":"Method detail\n\n\n\nPeriodicControlParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPeriodicControlParams.__str__() -> str\n\n\n\n\n\nstatic PeriodicControlParams.print_default()\n\nPrint the default values of PeriodicControlParams object.\n\nExamples\n\n>>> PeriodicControlParams.print_default()\n\n\n\nstatic PeriodicControlParams.set_default(center: ansys.meshing.prime.params.primestructs.Iterable[float] = None, axis: ansys.meshing.prime.params.primestructs.Iterable[float] = None, angle: float = None)\n\nSet the default values of the PeriodicControlParams object.\n\nParameters\n\ncenter (Iterable[float], optional) – Center coordinates.\n\naxis (Iterable[float], optional) – Axis vector coordinates.\n\nangle (float, optional) – Angle in degrees."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoData.html#topodata","title":"TopoData","text":"TopoData\n\n\n\nclass ansys.meshing.prime.TopoData(model: ansys.meshing.prime.autogen.coreobject.CommunicationManager, id: int, object_id: int, name: str)\n\nTopodata has all information about connectivity of nodes, edges, elements and more.\n\nParameters\n\nmodel (Model) – Server model to create TopoData object.\n\nid (int) – Id of the TopoData.\n\nobject_id (int) – Object id of the TopoData.\n\nname (str) – Name of the TopoData."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoData.html#overview","title":"TopoData > Overview","text":"Overview\n\nMethods\n\n\n\n\n\ndelete_mesh_on_topo_faces\n\nDelete mesh on the provided topofaces.\n\nget_adjacent_topo_edges_of_topo_edges\n\nGet the adjacent topoedges for the provided topoedge ids.\n\nget_adjacent_topo_faces_of_topo_faces\n\nGet the adjacent topofaces for the provided topoface ids.\n\nget_geom_zonelets_of_topo_edges\n\nGet the geometry edge zonelets for the provided topoedge ids.\n\nget_geom_zonelets_of_topo_faces\n\nGet the geometry face zonelets for the provided topoface ids.\n\nget_mesh_zonelets_of_topo_edges\n\nGet the mesh edge zonelets for the provided topoedge ids.\n\nget_mesh_zonelets_of_topo_faces\n\nGet the mesh face zonelets for the provided topoface ids.\n\nget_topo_edges_of_topo_faces\n\nGet the topoedges of the provided topoface ids.\n\nget_topo_volumes_of_topo_faces\n\nGets the topovolumes of the given topofaces.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of TopoData.\n\nname\n\nGet the name of TopoData.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoData.html#import-detail","title":"TopoData > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoData.html#property-detail","title":"TopoData > Property detail","text":"Property detail\n\n\n\nproperty TopoData.id\n\nGet the id of TopoData.\n\n\n\nproperty TopoData.name\n\nGet the name of TopoData."},{"objectID":"Home","href":"api/ansys/meshing/prime/TopoData.html#method-detail","title":"TopoData > Method detail","text":"Method detail\n\n\n\nTopoData.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nTopoData.delete_mesh_on_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DeleteMeshParams) -> ansys.meshing.prime.params.primestructs.DeleteMeshResults\n\nDelete mesh on the provided topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces.\n\nparams (DeleteMeshParams) – Parameters to delete mesh on topofaces.\n\nReturns\n\nReturns the DeleteMeshResults.\n\nReturn type\n\nDeleteMeshResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> params = prime.DeleteMeshParams(model = model)\n>>> result = topo_data.delete_mesh_on_topo_faces(top_faces, params)\n\n\n\nTopoData.get_adjacent_topo_edges_of_topo_edges(topo_edges: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the adjacent topoedges for the provided topoedge ids.\n\nParameters\n\ntopo_edges (Iterable[int]) – Ids of the topoedge.\n\nReturns\n\nReturns the list of adjacent topoedge ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges_of_topo_edges = topo_data.get_adjacent_topo_edges_of_topo_edges(topo_edges)\n\n\n\nTopoData.get_adjacent_topo_faces_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the adjacent topofaces for the provided topoface ids.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topoface.\n\nReturns\n\nReturns the list of adjacent topoface ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_faces_of_topo_faces = topo_data.get_adjacent_topo_faces_of_topo_faces(topo_faces)\n\n\n\nTopoData.get_geom_zonelets_of_topo_edges(topo_edges: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the geometry edge zonelets for the provided topoedge ids.\n\nParameters\n\ntopo_edges (Iterable[int]) – Ids of the topoedges.\n\nReturns\n\nReturn the geometry edge zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> geom_edge_zonelets = topo_data.get_geom_zonelets_of_topo_edges(topo_edges)\n\n\n\nTopoData.get_geom_zonelets_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the geometry face zonelets for the provided topoface ids.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topofaces.\n\nReturns\n\nReturn the geometry face zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> geom_face_zonelets = topo_data.get_geom_zonelets_of_topo_faces(topo_faces)\n\n\n\nTopoData.get_mesh_zonelets_of_topo_edges(topo_edges: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the mesh edge zonelets for the provided topoedge ids.\n\nParameters\n\ntopo_edges (Iterable[int]) – Ids of the topoedges.\n\nReturns\n\nReturn the mesh edge zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> mesh_edge_zonelets = topo_data.get_mesh_zonelets_of_topo_edges(topo_edges)\n\n\n\nTopoData.get_mesh_zonelets_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the mesh face zonelets for the provided topoface ids.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topofaces.\n\nReturns\n\nReturn the mesh face zonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> mesh_face_zonelets = topo_data.get_mesh_zonelets_of_topo_faces(topo_faces)\n\n\n\nTopoData.get_topo_edges_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the topoedges of the provided topoface ids.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topoface.\n\nReturns\n\nReturns the list of topoedge ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges_of_topo_faces = topo_data.get_topo_edges_of_topo_faces(topo_faces)\n\n\n\nTopoData.get_topo_volumes_of_topo_faces(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topovolumes of the given topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of the topofaces.\n\nReturns\n\nReturns the list of topovolume ids.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topovolumes = topo_data.get_topo_volumes_of_topo_faces(topo_faces)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityParams.html#searchbyqualityparams","title":"SearchByQualityParams","text":"SearchByQualityParams\n\n\n\nclass ansys.meshing.prime.SearchByQualityParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, quality_limit: float = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None, json_data: dict = None, **kwargs)\n\nParameters to control search by quality results.\n\nParameters\n\nmodel (Model) – Model to create a SearchByQualityParams object with default parameters.\n\nquality_limit (float, optional) – Quality limit used for search face elements.\n\nface_quality_measure (FaceQualityMeasure, optional) – Quality measure used for search face elements.\n\njson_data (dict, optional) – JSON dictionary to create a SearchByQualityParams object with provided parameters.\n\nExamples\n\n>>> search_by_quality_params = prime.SearchByQualityParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityParams.html#overview","title":"SearchByQualityParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nface_quality_measure\n\nQuality measure used for search face elements.\n\nquality_limit\n\nQuality limit used for search face elements.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of SearchByQualityParams object.\n\nset_default\n\nSet the default values of the SearchByQualityParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityParams.html#import-detail","title":"SearchByQualityParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityParams.html#property-detail","title":"SearchByQualityParams > Property detail","text":"Property detail\n\n\n\nproperty SearchByQualityParams.face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure\n\nQuality measure used for search face elements.\n\n\n\nproperty SearchByQualityParams.quality_limit: float\n\nQuality limit used for search face elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/SearchByQualityParams.html#method-detail","title":"SearchByQualityParams > Method detail","text":"Method detail\n\n\n\nSearchByQualityParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nSearchByQualityParams.__str__() -> str\n\n\n\n\n\nstatic SearchByQualityParams.print_default()\n\nPrint the default values of SearchByQualityParams object.\n\nExamples\n\n>>> SearchByQualityParams.print_default()\n\n\n\nstatic SearchByQualityParams.set_default(quality_limit: float = None, face_quality_measure: ansys.meshing.prime.params.primestructs.FaceQualityMeasure = None)\n\nSet the default values of the SearchByQualityParams object.\n\nParameters\n\nquality_limit (float, optional) – Quality limit used for search face elements.\n\nface_quality_measure (FaceQualityMeasure, optional) – Quality measure used for search face elements."},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerParams.html#meshstackerparams","title":"MeshStackerParams","text":"MeshStackerParams\n\n\n\nclass ansys.meshing.prime.MeshStackerParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, origin: ansys.meshing.prime.params.primestructs.Iterable[float] = None, direction: ansys.meshing.prime.params.primestructs.Iterable[float] = None, lateral_defeature_tolerance: float = None, stacking_defeature_tolerance: float = None, max_offset_size: float = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, seed_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, delete_base: bool = None, json_data: dict = None, **kwargs)\n\nInput parameters associated with the mesh stacker operations.\n\nParameters\n\nmodel (Model) – Model to create a MeshStackerParams object with default parameters.\n\norigin (Iterable[float], optional) – Origin coordinate list of stacker.\n\ndirection (Iterable[float], optional) – Direction vector of stacker.\n\nlateral_defeature_tolerance (float, optional) – Absolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nstacking_defeature_tolerance (float, optional) – Absolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nmax_offset_size (float, optional) – Maximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\nsize_control_ids (Iterable[int], optional) – List of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\nseed_faces (Iterable[int], optional) – List of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.This is a beta parameter. The behavior and name may change in the future.\n\ndelete_base (bool, optional) – Option to delete base face at the end of stacking. The default is false.\n\njson_data (dict, optional) – JSON dictionary to create a MeshStackerParams object with provided parameters.\n\nExamples\n\n>>> mesh_stacker_params = prime.MeshStackerParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerParams.html#overview","title":"MeshStackerParams > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ndelete_base\n\nOption to delete base face at the end of stacking. The default is false.\n\ndirection\n\nDirection vector of stacker.\n\nlateral_defeature_tolerance\n\nAbsolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nmax_offset_size\n\nMaximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\norigin\n\nOrigin coordinate list of stacker.\n\nseed_faces\n\nList of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\nsize_control_ids\n\nList of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\nstacking_defeature_tolerance\n\nAbsolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of MeshStackerParams object.\n\nset_default\n\nSet the default values of the MeshStackerParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerParams.html#import-detail","title":"MeshStackerParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerParams.html#property-detail","title":"MeshStackerParams > Property detail","text":"Property detail\n\n\n\nproperty MeshStackerParams.delete_base: bool\n\nOption to delete base face at the end of stacking. The default is false.\n\n\n\nproperty MeshStackerParams.direction: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nDirection vector of stacker.\n\n\n\nproperty MeshStackerParams.lateral_defeature_tolerance: float\n\nAbsolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\n\n\nproperty MeshStackerParams.max_offset_size: float\n\nMaximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\n\n\nproperty MeshStackerParams.origin: ansys.meshing.prime.params.primestructs.Iterable[float]\n\nOrigin coordinate list of stacker.\n\n\n\nproperty MeshStackerParams.seed_faces: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\nThis is a beta parameter. The behavior and name may change in the future.\n\n\n\nproperty MeshStackerParams.size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nList of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\n\n\nproperty MeshStackerParams.stacking_defeature_tolerance: float\n\nAbsolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker."},{"objectID":"Home","href":"api/ansys/meshing/prime/MeshStackerParams.html#method-detail","title":"MeshStackerParams > Method detail","text":"Method detail\n\n\n\nMeshStackerParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nMeshStackerParams.__str__() -> str\n\n\n\n\n\nstatic MeshStackerParams.print_default()\n\nPrint the default values of MeshStackerParams object.\n\nExamples\n\n>>> MeshStackerParams.print_default()\n\n\n\nstatic MeshStackerParams.set_default(origin: ansys.meshing.prime.params.primestructs.Iterable[float] = None, direction: ansys.meshing.prime.params.primestructs.Iterable[float] = None, lateral_defeature_tolerance: float = None, stacking_defeature_tolerance: float = None, max_offset_size: float = None, size_control_ids: ansys.meshing.prime.params.primestructs.Iterable[int] = None, seed_faces: ansys.meshing.prime.params.primestructs.Iterable[int] = None, delete_base: bool = None)\n\nSet the default values of the MeshStackerParams object.\n\nParameters\n\norigin (Iterable[float], optional) – Origin coordinate list of stacker.\n\ndirection (Iterable[float], optional) – Direction vector of stacker.\n\nlateral_defeature_tolerance (float, optional) – Absolute lateral distance tolerance for stacker. If the lateral distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nstacking_defeature_tolerance (float, optional) – Absolute stacking distance tolerance for stacker. If the stacking distance tolerance is not specified, a default tolerance value is calculated by stacker.\n\nmax_offset_size (float, optional) – Maximum stack size allowed during stacking. If the maximum stack size is not specified, it is set to global max size.\n\nsize_control_ids (Iterable[int], optional) – List of size control ids to be respected by stacker. Stacker respects all supported controls by default.\n\nseed_faces (Iterable[int], optional) – List of faces whose edges need to be imprinted on the base face. If the faces are meshed, the mesh will be transferred to the base face.\n\ndelete_base (bool, optional) – Option to delete base face at the end of stacking. The default is false."},{"objectID":"Home","href":"api/ansys/meshing/prime/Part.html#part","title":"Part","text":"Part\n\n\n\nclass ansys.meshing.prime.Part(model, id: int, object_id: int, name: str)\n\nPart contains zonelets and topoentities.\n\nTopoentities and zonelets are characterized by dimension of entities.\nZonelets are a group of interconnected elements in a mesh. There are three types of zonelets.\nThey are:\n\nFaceZonelet: A group of interconnected face elements.\n\nEdgeZonelet: A group of interconnected edge elements.\n\nCellZonelet: A group of interconnected cell elements.\n\nTopoentities represent connectivity information.\nTopoentities can be queried from higher order to lower order topoentities and vice versa.\nTopoentities have geometric representation which may be defined by splines or facets.\nThe mesh generated on topoentities will be projected on geometry representation.\n\nTopoFace: Topoentity representing surfaces.\n\nTopoEdge: Topoentity representing curves.\n\nTopoVolume: Topoentity representing volumes.\n\nParameters\n\nmodel (Model) – Server model to create Part object.\n\nid (int) – Id of the Part.\n\nobject_id (int) – Object id of the Part.\n\nname (str) – Name of the Part."},{"objectID":"Home","href":"api/ansys/meshing/prime/Part.html#overview","title":"Part > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_labels_on_topo_entities\n\nAdd the given labels on the provided topoentities.\n\nadd_labels_on_zonelets\n\nAdd the given labels on the provided zonelets.\n\nadd_topo_entities_to_zone\n\nAdd topoentities to zone.\n\nadd_volumes_to_zone\n\nAdd volumes to zone.\n\nadd_zonelets_to_zone\n\nAdd zonelets to zone.\n\ncompute_closed_volumes\n\nComputes volume by identifying closed volumes defined by face zonelets of the part.\n\ncompute_topo_volumes\n\nCompute topovolumes by identifying closed volumes defined by topofaces of the part.\n\ndelete_topo_entities\n\nDelete topoentities of part controled by parameters.\n\ndelete_volumes\n\nDelete volumes by deleting its face zonelets.\n\ndelete_zonelets\n\nDelete given face zonelets.\n\nextract_topo_volumes\n\nExtract topovolumes connected to given cap topofaces.\n\nextract_volumes\n\nExtract volumes connected to given face zonelets.\n\nget_adjacent_face_zonelets_of_face_zonelets\n\nGets the adjacent facezonelets for the provided facezonelet ids.\n\nget_adjacent_volumes_of_volumes\n\nGet the adjacent volumes for the provided volume ids.\n\nget_cell_zonelets\n\nGet the cell zonelet ids in the part.\n\nget_component_children_by_path\n\nGets the child components for a component using the given parameters.\n\nget_components_by_path_expression\n\nGets component names with the provided path expression.\n\nget_edge_zonelets\n\nGet the edge zonelets of a part.\n\nget_edge_zonelets_of_label_name_pattern\n\nGet edge zonelet ids of labels with name matching the given name pattern.\n\nget_edge_zones\n\nGet all the edge zones of the part.\n\nget_face_zone_of_zonelet\n\nGets the face zone of given zonelet.\n\nget_face_zonelets\n\nGet the face zonelets of a part.\n\nget_face_zonelets_of_component_body_name_pattern\n\nGets face zonelet ids belonging to components or bodies with name matching the given name pattern.\n\nget_face_zonelets_of_label_name_pattern\n\nGet face zonelet ids of labels with name matching the given name pattern.\n\nget_face_zonelets_of_volumes\n\nGet the face zonelets of given volumes.\n\nget_face_zonelets_of_zone_name_pattern\n\nGet ids of face zonelets of zones with name matching the given name pattern.\n\nget_face_zones\n\nGet all the face zones of the part.\n\nget_face_zones_of_name_pattern\n\nGet ids of face zones with name matching the given name pattern.\n\nget_labels\n\nGet all labels on entities of part.\n\nget_labels_on_zonelet\n\nGets labels associated with zonelet.\n\nget_name\n\nGets the name of the Part.\n\nget_splines\n\nGets the list of spline ids.\n\nget_summary\n\nGet the part summary.\n\nget_topo_edges\n\nGet the topoedges of a part.\n\nget_topo_edges_of_label_name_pattern\n\nGet topoedge ids of labels with name matching the given name pattern.\n\nget_topo_faces\n\nGet the topofaces of a part.\n\nget_topo_faces_of_component_body_name_pattern\n\nGets topoface ids of component or bodies with name matching the given name pattern.\n\nget_topo_faces_of_label_name_pattern\n\nGet topoface ids of labels with name matching the given name pattern.\n\nget_topo_faces_of_topo_volumes\n\nGets the topofaces of given topovolumes.\n\nget_topo_faces_of_zone_name_pattern\n\nGet topoface ids of zones with name matching the given name pattern.\n\nget_topo_volumes\n\nGet topovolumes of part.\n\nget_topo_volumes_of_label_name_pattern\n\nGets the topovolumes of labels of the given label name expression.\n\nget_topo_volumes_of_zone_name_pattern\n\nGets the topovolume ids of zones with name matching the given name pattern.\n\nget_unstructured_spline_solid\n\nGets the unstructured solid spline for the part.\n\nget_unstructured_spline_surface\n\nGets the unstructured surface spline for the part.\n\nget_volume_zone_of_volume\n\nGets the volume zone of given volume.\n\nget_volume_zones\n\nGet all the volume zones of the part.\n\nget_volume_zones_of_name_pattern\n\nGet ids of volume zones with name matching the given name pattern.\n\nget_volumes\n\nGet all the volumes of the part.\n\nget_volumes_of_face_zonelet\n\nGet volume ids of given face zonelet.\n\nget_volumes_of_zone_name_pattern\n\nGet volume ids of zones with name matching the given name pattern.\n\nmerge_volumes\n\nMerge volumes by removing shared face zonelets.\n\nmerge_zonelets\n\nMerge zonelets.\n\nremove_labels_from_topo_entities\n\nRemove the given labels from the provided topoentities.\n\nremove_labels_from_zonelets\n\nRemove the given labels from the provided zonelets.\n\nremove_zone_on_topo_entities\n\nRemoves zone on the given topoentities.\n\nremove_zone_on_volumes\n\nRemoves zone on the given volumes.\n\nremove_zone_on_zonelets\n\nRemoves zone on the given zonelets.\n\nset_suggested_name\n\nSet the unique name for the part to a suggested name.\n\nProperties\n\n\n\n\n\nid\n\nGet the id of Part.\n\nname\n\nGet the name of Part.\n\nprint_id\n\nWhether IDs of TopoEntities or zonelets are set to print along with the part summary.\n\nprint_mesh\n\nWhether the mesh summary is set to print along with the part summary.\n\nAttributes\n\n\n\n\n\n__doc__\n\n\n\nSpecial methods\n\n\n\n\n\n__call__\n\nGet a summary of the part.\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\nPrint the summary of a part."},{"objectID":"Home","href":"api/ansys/meshing/prime/Part.html#import-detail","title":"Part > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/Part.html#property-detail","title":"Part > Property detail","text":"Property detail\n\n\n\nproperty Part.id\n\nGet the id of Part.\n\n\n\nproperty Part.name\n\nGet the name of Part.\n\n\n\nproperty Part.print_id: bool\n\nWhether IDs of TopoEntities or zonelets are set to print along with the part summary.\n\n\n\nproperty Part.print_mesh: bool\n\nWhether the mesh summary is set to print along with the part summary."},{"objectID":"Home","href":"api/ansys/meshing/prime/Part.html#attribute-detail","title":"Part > Attribute detail","text":"Attribute detail\n\n\n\nPart.__doc__ = Multiline-String\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/Part.html#method-detail","title":"Part > Method detail","text":"Method detail\n\n\n\nPart.__call__(*args: Any, **kwds: Any) -> str\n\nGet a summary of the part.\n\nThis method provides a callable interface of the part for getting a part summary\nusing supported keyword arguments.\n\nParameters\n\nprint_mesh (bool, optional) – Whether to get the mesh summary along with the part summary. The default is\nFalse.\n\nprint_id (bool, optional) – Whether to get IDs of TopEntities or zonelets along with the part summary.\nThe default is False.\n\nReturns\n\nSummary of the part.\n\nReturn type\n\nstr\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part_by_name(\"Part.1\")\n>>> print(part(print_mesh=True, print_id=True))\n\n\n\nPart.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nPart.__str__() -> str\n\nPrint the summary of a part.\n\nThis method uses the print_mesh and print_id properties\nto control the summary of a part.\n\nReturns\n\nSummary of the part.\n\nReturn type\n\nstr\n\nExamples\n\n>>> from ansys.meshing.prime import Model\n>>> model = client.model\n>>> part = model.get_part_by_name(\"Part.1\")\n>>> print(part)\n\n\n\nPart.add_labels_on_topo_entities(labels: List[str], topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddLabelResults\n\nAdd the given labels on the provided topoentities.\n\nParameters\n\nlabels (List[str]) – Labels to be added on topoentities.\n\ntopo_entities (Iterable[int]) – Ids of topoentities.\n\nReturns\n\nReturns the AddLabelResults.\n\nReturn type\n\nAddLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.add_labels_on_topo_entities(labels, topo_entities)\n\n\n\nPart.add_labels_on_zonelets(labels: List[str], zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddLabelResults\n\nAdd the given labels on the provided zonelets.\n\nParameters\n\nlabels (List[str]) – Labels to be added on zonelets.\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns the AddLabelResults.\n\nReturn type\n\nAddLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.add_labels_on_zonelets(labels, zonelets)\n\n\n\nPart.add_topo_entities_to_zone(zone_id: int, topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd topoentities to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\ntopo_entities (Iterable[int]) – Ids of topoentities to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_topo_entities_to_zone(zone_id, topo_entities)\n\n\n\nPart.add_volumes_to_zone(zone_id: int, volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd volumes to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\nvolumes (Iterable[int]) – Ids of volumes to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_volumes_to_zone(zone_id, volumes)\n\n\n\nPart.add_zonelets_to_zone(zone_id: int, zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.AddToZoneResults\n\nAdd zonelets to zone.\n\nParameters\n\nzone_id (int) – Id of a zone .\n\nzonelets (Iterable[int]) – Ids of zonelets to be added.\n\nReturns\n\nReturns the AddToZoneResults.\n\nReturn type\n\nAddToZoneResults\n\nExamples\n\n>>> results = part.add_zonelets_to_zone(zone_id, zonelets)\n\n\n\nPart.compute_closed_volumes(params: ansys.meshing.prime.params.primestructs.ComputeVolumesParams) -> ansys.meshing.prime.params.primestructs.ComputeVolumesResults\n\nComputes volume by identifying closed volumes defined by face zonelets of the part.\n\nParameters\n\nparams (ComputeVolumesParams) – Parameters to compute volumes.\n\nReturns\n\nReturns the ComputeVolumesResults.\n\nReturn type\n\nComputeVolumesResults\n\nExamples\n\n>>> params = prime.ComputeVolumesParams(model = model, create_zones_type = prime.CreateVolumeZonesType.PERVOLUME)\n>>> results = part.compute_closed_volumes(params)\n\n\n\nPart.compute_topo_volumes(params: ansys.meshing.prime.params.primestructs.ComputeVolumesParams) -> ansys.meshing.prime.params.primestructs.ComputeTopoVolumesResults\n\nCompute topovolumes by identifying closed volumes defined by topofaces of the part.\n\nParameters\n\nparams (ComputeVolumesParams) – Parameters to compute topovolumes.\n\nReturns\n\nReturn the ComputeTopoVolumesResults.\n\nReturn type\n\nComputeTopoVolumesResults\n\nExamples\n\n>>> params = prime.ComputeVolumesParams(model = model, create_zones_type = prime.CreateVolumeZonesType.PERVOLUME)\n>>> results = part.compute_topo_volumes(params)\n\n\n\nPart.delete_topo_entities(params: ansys.meshing.prime.params.primestructs.DeleteTopoEntitiesParams) -> ansys.meshing.prime.params.primestructs.DeleteTopoEntitiesResults\n\nDelete topoentities of part controled by parameters.\n\nParameters\n\nparams (DeleteTopoEntitiesParams) – Parameters for control delete topoentities operation.\n\nReturns\n\nReturn results of delete topoentities.\n\nReturn type\n\nDeleteTopoEntitiesResults\n\nExamples\n\n>>> results = part.delete_topo_entities(params)\n\n\n\nPart.delete_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.DeleteVolumesParams) -> ansys.meshing.prime.params.primestructs.DeleteVolumesResults\n\nDelete volumes by deleting its face zonelets.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes to be deleted.\n\nparams (DeleteVolumesParams) – Parameters to delete volumes.\n\nReturns\n\nReturns the DeleteVolumesResults.\n\nReturn type\n\nDeleteVolumesResults\n\nExamples\n\nparams = prime.DeleteVolumesParams(model = model)\nresults = part.delete_volumes(volumes, params)\n\n\n\nPart.delete_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.DeleteResults\n\nDelete given face zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets to be deleted.\n\nReturns\n\nReturn DeleteResults.\n\nReturn type\n\nDeleteResults\n\nExamples\n\n>>> results = part.delete_zonelets(zonelets)\n\n\n\nPart.extract_topo_volumes(topo_faces: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ExtractTopoVolumesParams) -> ansys.meshing.prime.params.primestructs.ExtractTopoVolumesResults\n\nExtract topovolumes connected to given cap topofaces.\n\nParameters\n\ntopo_faces (Iterable[int]) – Ids of topofaces connected to topovolumes.\n\nparams (ExtractTopoVolumesParams) – Parameters to compute topovolumes.\n\nReturns\n\nReturn the ExtractTopoVolumesResults.\n\nReturn type\n\nExtractTopoVolumesResults\n\nExamples\n\n>>> results = part.extract_flow_topo_volumes(topo_faces, params)\n\n\n\nPart.extract_volumes(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.ExtractVolumesParams) -> ansys.meshing.prime.params.primestructs.ExtractVolumesResults\n\nExtract volumes connected to given face zonelets.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of face zonelets connected to volumes.\n\nparams (ExtractVolumesParams) – Parameters to compute volumes.\n\nReturns\n\nReturn the ExtractVolumesResults.\n\nReturn type\n\nExtractVolumesResults\n\nExamples\n\n>>> results = part.extract_volumes(face_zonelets, params)\n\n\n\nPart.get_adjacent_face_zonelets_of_face_zonelets(face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the adjacent facezonelets for the provided facezonelet ids.\n\nParameters\n\nface_zonelets (Iterable[int]) – Ids of facezonelets.\n\nReturns\n\nReturns the list of adjacent facezonelet ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets_of_face_zonelet = part.get_adjacent_face_zonelets_of_face_zonelets(face_zonelets)\n\n\n\nPart.get_adjacent_volumes_of_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the adjacent volumes for the provided volume ids.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of the volume.\n\nReturns\n\nReturns the list of adjacent volume ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> adjacent_volumes_of_volumes = part.get_adjacent_volumes_of_volumes(volumes)\n\n\n\nPart.get_cell_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the cell zonelet ids in the part.\n\nReturns\n\nReturn the ids of cell zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> cell_zonelet_ids = part.get_cell_zonelets()\n\n\n\nPart.get_component_children_by_path(path: str, params: ansys.meshing.prime.params.primestructs.ComponentChildrenParams) -> ansys.meshing.prime.params.primestructs.ComponentChildrenResults\n\nGets the child components for a component using the given parameters.\n\nParameters\n\npath (str) – Path to component for which child components are queried.\n\nparams (ComponentChildrenParams) – Parameters to get child component.\n\nReturns\n\nReturns the ComponentChildrenResults structure.\n\nReturn type\n\nComponentChildrenResults\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = part.get_component_children_by_path(path, params)\n\n\n\nPart.get_components_by_path_expression(path_expression: str) -> List[str]\n\nGets component names with the provided path expression.\n\nParameters\n\npath_expression (str) – Path expression to determine component names that should be returned.\n\nReturns\n\nReturns a list of component names.\n\nReturn type\n\nList[str]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> results = part.get_components_by_path_expression(path_expression)\n\n\n\nPart.get_edge_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the edge zonelets of a part.\n\nReturns\n\nReturn the ids of edge zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> edge_zonelets = part.get_edge_zonelets()\n\n\n\nPart.get_edge_zonelets_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet edge zonelet ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn edge zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> edge_zonelets = part.get_edge_zonelets_of_label_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_edge_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the edge zones of the part.\n\nReturns\n\nReturn ids of edge zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> edge_zones = part.get_edge_zones()\n\n\n\nPart.get_face_zone_of_zonelet(zonelet: int) -> int\n\nGets the face zone of given zonelet.\n\nParameters\n\nzonelet (int) – Id of zonelet.\n\nReturns\n\nReturns the id of face zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> face_zone = part.get_face_zone_of_zonelet(zonelet)\n\n\n\nPart.get_face_zonelets() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelets of a part.\n\nReturns\n\nReturn the ids of face zonelets. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = part.get_face_zonelets()\n\n\n\nPart.get_face_zonelets_of_component_body_name_pattern(component_body_name_pattern: str, type: ansys.meshing.prime.params.primestructs.BodyQueryType, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets face zonelet ids belonging to components or bodies with name matching the given name pattern.\n\nParameters\n\ncomponent_body_name_pattern (str) – Name pattern to be matched with component or body names.\n\ntype (BodyQueryType) – Type of query used to match component or body name pattern.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match component or body name pattern.\n\nReturns\n\nReturns face zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_component_body_pattern(\"/body*\", type, name_pattern_params)\n\n\n\nPart.get_face_zonelets_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet face zonelet ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn face zonelet ids of labels with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_label_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_face_zonelets_of_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the face zonelets of given volumes.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes.\n\nReturns\n\nReturn the ids of face zonelets.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zonelets = part.get_face_zonelets_of_volumes(volumes)\n\n\n\nPart.get_face_zonelets_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of face zonelets of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn face zonelet ids of zones with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> face_zonelets = part.get_face_zonelets_of_zone_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_face_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the face zones of the part.\n\nReturns\n\nReturn ids of face zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> face_zones = part.get_face_zones()\n\n\n\nPart.get_face_zones_of_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of face zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn list of face zone ids matching the zone name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> zones = part.get_face_zones_of_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_labels() -> List[str]\n\nGet all labels on entities of part.\n\nReturns\n\nReturn labels on entities of part.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> part.get_labels()\n\n\n\nPart.get_labels_on_zonelet(zonelet_id: int) -> List[str]\n\nGets labels associated with zonelet.\n\nParameters\n\nzonelet_id (int) – Id of zonelet for which label is queried.\n\nReturns\n\nReturns labels associated with zonelet.\n\nReturn type\n\nList[str]\n\nExamples\n\n>>> results = part.get_labels_on_zonelet(zonelet_id)\n\n\n\nPart.get_name() -> str\n\nGets the name of the Part.\n\nReturns\n\nReturns part name.\n\nReturn type\n\nstr\n\nExamples\n\n>>> part_name = part.get_name()\n\n\n\nPart.get_splines() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the list of spline ids.\n\nReturns\n\nReturns the list of spline ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> results = part.get_splines()\n\n\n\nPart.get_summary(params: ansys.meshing.prime.params.primestructs.PartSummaryParams) -> ansys.meshing.prime.params.primestructs.PartSummaryResults\n\nGet the part summary.\n\nProvides the part summary for the given parameters.\n\nParameters\n\nparams (PartSummaryParams) – Part summary parameters.\n\nReturns\n\nReturn the PartSummaryResults.\n\nReturn type\n\nPartSummaryResults\n\nExamples\n\n>>> results = part.get_summary(PartSummaryParams(model=model))\n\n\n\nPart.get_topo_edges() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the topoedges of a part.\n\nReturns\n\nReturn the ids of topoedges.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n\n\nPart.get_topo_edges_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoedge ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn the ids of topoedges.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_edges = part.get_topo_edges_of_label_name_pattern(\n>>>                   label_name_pattern = \"edge_label\",\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet the topofaces of a part.\n\nIterable[int]\n\nReturn the ids of topofaces.\n\nReturn the ids of topofaces.\n\n>>> topo_faces = part.get_topo_faces()\n\n\n\nPart.get_topo_faces_of_component_body_name_pattern(component_body_name_pattern: str, type: ansys.meshing.prime.params.primestructs.BodyQueryType, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets topoface ids of component or bodies with name matching the given name pattern.\n\nParameters\n\ncomponent_body_name_pattern (str) – Name pattern to be matched with component or body name.\n\ntype (BodyQueryType) – Type of query used to match component or body name pattern.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match component or body name pattern.\n\nReturns\n\nReturns the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_component_body_name_pattern(\n>>>                   component_body_name_pattern = \"body*\",\n>>>                   type = BodyQueryType_All,\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoface ids of labels with name matching the given name pattern.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with label name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match label name pattern.\n\nReturns\n\nReturn the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_label_name_pattern(\n>>>                   label_name_pattern = \"face_label\",\n>>>                   params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_faces_of_topo_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topofaces of given topovolumes.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of topovolumes.\n\nReturns\n\nReturns the ids of topofaces.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_faces = part.get_topo_faces_of_topo_volumes(volumes)\n\n\n\nPart.get_topo_faces_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topoface ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn topoface ids of zones with name matching the name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> topo_faces = part.get_topo_faces_of_zone_name_pattern(\"wall*\", name_pattern_params)\n\n\n\nPart.get_topo_volumes() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet topovolumes of part.\n\nReturns\n\nReturns the list of topovolume ids.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> results = part.get_topo_volumes()\n\n\n\nPart.get_topo_volumes_of_label_name_pattern(label_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topovolumes of labels of the given label name expression.\n\nParameters\n\nlabel_name_pattern (str) – Name pattern to be matched with topovolume name\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match topovolume name pattern.\n\nReturns\n\nReturns the ids of the topovolumes.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_volumes = prime.get_topo_volumes_of_label_name_pattern(\n>>>                      label_name_pattern = \"solid*\",\n>>>                      params = prime.NamePatternParams(model=model))\n\n\n\nPart.get_topo_volumes_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGets the topovolume ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturns topovolume ids of zones with name matching the name pattern.\n\nReturn type\n\nIterable[int]\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> topo_volumes = part.get_topo_volumes_of_zone_name_pattern(zone_name_pattern = \"solid*\",\nname_pattern_params = prime.NamePatternParams(model = model))\n\n\n\nPart.get_unstructured_spline_solid() -> ansys.meshing.prime.params.primestructs.IGAUnstructuredSplineSolid\n\nGets the unstructured solid spline for the part.\n\nReturns\n\nReturns the solid spline structure.\n\nReturn type\n\nIGAUnstructuredSplineSolid\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> spline = part.GetUnstructuredSplineSolid()\n\n\n\nPart.get_unstructured_spline_surface() -> ansys.meshing.prime.params.primestructs.IGAUnstructuredSplineSurf\n\nGets the unstructured surface spline for the part.\n\nReturns\n\nReturns the surface spline structure.\n\nReturn type\n\nIGAUnstructuredSplineSurf\n\nNotes\n\nThis is a beta API. The behavior and implementation may change in future.\n\nExamples\n\n>>> from ansys.meshing.prime import Part\n>>> spline = part.GetUnstructuredSplineSurface()\n\n\n\nPart.get_volume_zone_of_volume(volume: int) -> int\n\nGets the volume zone of given volume.\n\nParameters\n\nvolume (int) – Id of volume.\n\nReturns\n\nReturns the id of volume zone.\n\nReturn type\n\nint\n\nExamples\n\n>>> volume_zone = part.get_volume_zone_of_volume(volume)\n\n\n\nPart.get_volume_zones() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the volume zones of the part.\n\nReturns\n\nReturn ids of volume zones.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volume_zones = part.get_volume_zones()\n\n\n\nPart.get_volume_zones_of_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet ids of volume zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturns a list of volume zone ids matching the zone name pattern.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> zones = part.get_volume_zones_of_name_pattern(\"solid*\", name_pattern_params)\n\n\n\nPart.get_volumes() -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet all the volumes of the part.\n\nReturns\n\nReturn ids of volumes.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volumes = part.get_volumes()\n\n\n\nPart.get_volumes_of_face_zonelet(face_zonelet: int) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet volume ids of given face zonelet.\n\nParameters\n\nface_zonelet (int) – Id of face zonelet.\n\nReturns\n\nReturn volume ids of given face zonelet.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> volumes = part.get_volumes_of_face_zonelet(face_zonelet)\n\n\n\nPart.get_volumes_of_zone_name_pattern(zone_name_pattern: str, name_pattern_params: ansys.meshing.prime.params.primestructs.NamePatternParams) -> ansys.meshing.prime.params.primestructs.Iterable[int]\n\nGet volume ids of zones with name matching the given name pattern.\n\nParameters\n\nzone_name_pattern (str) – Name pattern to be matched with zone name.\n\nname_pattern_params (NamePatternParams) – Name pattern parameters used to match zone name pattern.\n\nReturns\n\nReturn volume ids of zones with name matching the name pattern. Returns an empty list for a topology part.\n\nReturn type\n\nIterable[int]\n\nExamples\n\n>>> name_pattern_params = prime.NamePatternParams(model = model)\n>>> volumes = part.get_volumes_of_zone_name_pattern(\"body*\", name_pattern_params)\n\n\n\nPart.merge_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergeVolumesParams) -> ansys.meshing.prime.params.primestructs.MergeVolumesResults\n\nMerge volumes by removing shared face zonelets.\n\nParameters\n\nvolumes (Iterable[int]) – Ids of volumes to be merged.\n\nparams (MergeVolumesParams) – Parameters to merge volumes.\n\nReturns\n\nReturns the MergeVolumesResults.\n\nReturn type\n\nMergeVolumesResults\n\nExamples\n\nparams = prime.MergeVolumesParams(model = model)\nresults = part.merge_volumes(volumes, params)\n\n\n\nPart.merge_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int], params: ansys.meshing.prime.params.primestructs.MergeZoneletsParams) -> ansys.meshing.prime.params.primestructs.MergeZoneletsResults\n\nMerge zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Ids of zonelets to be merged.\n\nparams (MergeZoneletsParams) – Parameters to merge zonelets.\n\nReturns\n\nReturns the MergeZoneletsResults.\n\nReturn type\n\nMergeZoneletsResults\n\nExamples\n\nparams = prime.MergeZoneletsParams(model = model)\nresults = part.merge_zonelets(zonelets, params)\n\n\n\nPart.remove_labels_from_topo_entities(labels: List[str], topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveLabelResults\n\nRemove the given labels from the provided topoentities.\n\nParameters\n\nlabels (List[str]) – Labels to be removed from topoentities.\n\ntopo_entities (Iterable[int]) – Ids of topoentities.\n\nReturns\n\nReturns the RemoveLabelResults.\n\nReturn type\n\nRemoveLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.remove_labels_from_topo_entities(labels, topo_entities)\n\n\n\nPart.remove_labels_from_zonelets(labels: List[str], zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveLabelResults\n\nRemove the given labels from the provided zonelets.\n\nParameters\n\nlabels (List[str]) – Labels to be removed from zonelets.\n\nzonelets (Iterable[int]) – Ids of zonelets.\n\nReturns\n\nReturns the RemoveLabelResults.\n\nReturn type\n\nRemoveLabelResults\n\nExamples\n\n>>> labels = [\"wall\", \"outer\"]\n>>> part.remove_labels_from_zonelets(labels, zonelets)\n\n\n\nPart.remove_zone_on_topo_entities(topo_entities: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given topoentities.\n\nParameters\n\ntopo_entities (Iterable[int]) – Topoentity ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_topo_entities(topo_entities)\n\n\n\nPart.remove_zone_on_volumes(volumes: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given volumes.\n\nParameters\n\nvolumes (Iterable[int]) – Volume ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_volumes(volumes)\n\n\n\nPart.remove_zone_on_zonelets(zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]) -> ansys.meshing.prime.params.primestructs.RemoveZoneResults\n\nRemoves zone on the given zonelets.\n\nParameters\n\nzonelets (Iterable[int]) – Zonelet ids whose zone is to be removed.\n\nReturns\n\nReturns the RemoveZoneResults.\n\nReturn type\n\nRemoveZoneResults\n\nExamples\n\n>>> part.remove_zone_on_zonelets(zonelets)\n\n\n\nPart.set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults\n\nSet the unique name for the part to a suggested name.\n\nParameters\n\nname (str) – Suggested name for the part.\n\nReturns\n\nNewly suggested name for the part.\n\nReturn type\n\nSetNameResults\n\nExamples\n\n>>> part.set_suggested_name(\"part1\")"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMaterialPointResults.html#deletematerialpointresults","title":"DeleteMaterialPointResults","text":"DeleteMaterialPointResults\n\n\n\nclass ansys.meshing.prime.DeleteMaterialPointResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nResults associated with delete material point operation.\n\nParameters\n\nmodel (Model) – Model to create a DeleteMaterialPointResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a DeleteMaterialPointResults object with provided parameters.\n\nExamples\n\n>>> delete_material_point_results = prime.DeleteMaterialPointResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMaterialPointResults.html#overview","title":"DeleteMaterialPointResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of DeleteMaterialPointResults object.\n\nset_default\n\nSet the default values of the DeleteMaterialPointResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMaterialPointResults.html#import-detail","title":"DeleteMaterialPointResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMaterialPointResults.html#property-detail","title":"DeleteMaterialPointResults > Property detail","text":"Property detail\n\n\n\nproperty DeleteMaterialPointResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/DeleteMaterialPointResults.html#method-detail","title":"DeleteMaterialPointResults > Method detail","text":"Method detail\n\n\n\nDeleteMaterialPointResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nDeleteMaterialPointResults.__str__() -> str\n\n\n\n\n\nstatic DeleteMaterialPointResults.print_default()\n\nPrint the default values of DeleteMaterialPointResults object.\n\nExamples\n\n>>> DeleteMaterialPointResults.print_default()\n\n\n\nstatic DeleteMaterialPointResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the DeleteMaterialPointResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIgaKeywordFileParams.html#exportlsdynaigakeywordfileparams","title":"ExportLSDynaIgaKeywordFileParams","text":"ExportLSDynaIgaKeywordFileParams\n\n\n\nclass ansys.meshing.prime.ExportLSDynaIgaKeywordFileParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, json_data: dict = None, **kwargs)\n\nParameters for exporting LS-DYNA IGA keyword file.\n\nParameters\n\nmodel (Model) – Model to create a ExportLSDynaIgaKeywordFileParams object with default parameters.\n\njson_data (dict, optional) – JSON dictionary to create a ExportLSDynaIgaKeywordFileParams object with provided parameters.\n\nExamples\n\n>>> export_lsdyna_iga_keyword_file_params = prime.ExportLSDynaIgaKeywordFileParams(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIgaKeywordFileParams.html#overview","title":"ExportLSDynaIgaKeywordFileParams > Overview","text":"Overview\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of ExportLSDynaIgaKeywordFileParams object.\n\nset_default\n\nSet the default values of the ExportLSDynaIgaKeywordFileParams object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIgaKeywordFileParams.html#import-detail","title":"ExportLSDynaIgaKeywordFileParams > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/ExportLSDynaIgaKeywordFileParams.html#method-detail","title":"ExportLSDynaIgaKeywordFileParams > Method detail","text":"Method detail\n\n\n\nExportLSDynaIgaKeywordFileParams.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nExportLSDynaIgaKeywordFileParams.__str__() -> str\n\n\n\n\n\nstatic ExportLSDynaIgaKeywordFileParams.print_default()\n\nPrint the default values of ExportLSDynaIgaKeywordFileParams object.\n\nExamples\n\n>>> ExportLSDynaIgaKeywordFileParams.print_default()\n\n\n\nstatic ExportLSDynaIgaKeywordFileParams.set_default()\n\nSet the default values of the ExportLSDynaIgaKeywordFileParams object."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_multi_layer_quad_mesh_pcb_fmd.html#ansysmeshingprimeexamplesexamplesdownload_multi_layer_quad_mesh_pcb_fmd","title":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_fmd","text":"ansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_multi_layer_quad_mesh_pcb_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the multi-layer PCB meshing example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     cad_file = prime_examples.download_multi_layer_quad_mesh_pcb_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(cad_file, params=prime.ImportCADParams(model))\n>>>     print(model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadReaderRoute.html#cadreaderroute","title":"CadReaderRoute","text":"CadReaderRoute\n\n\n\nclass ansys.meshing.prime.CadReaderRoute\n\nCAD Reader routes."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadReaderRoute.html#overview","title":"CadReaderRoute > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nDISCOVERY\n\nDenotes Discovery as CAD reader route.\n\nNATIVE\n\nDenotes native CAD reader route.\n\nPROGRAMCONTROLLED\n\nDenotes program controlled CAD reader route.\n\nSPACECLAIM\n\nDenotes SpaceClaim as CAD reader route.\n\nWORKBENCH\n\nDenotes WorkBench as CAD reader route."},{"objectID":"Home","href":"api/ansys/meshing/prime/CadReaderRoute.html#import-detail","title":"CadReaderRoute > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/CadReaderRoute.html#attribute-detail","title":"CadReaderRoute > Attribute detail","text":"Attribute detail\n\n\n\nCadReaderRoute.DISCOVERY = 4\n\nDenotes Discovery as CAD reader route.\n\n\n\nCadReaderRoute.NATIVE = 1\n\nDenotes native CAD reader route.\n\n\n\nCadReaderRoute.PROGRAMCONTROLLED = 0\n\nDenotes program controlled CAD reader route.\n\n\n\nCadReaderRoute.SPACECLAIM = 3\n\nDenotes SpaceClaim as CAD reader route.\n\n\n\nCadReaderRoute.WORKBENCH = 2\n\nDenotes WorkBench as CAD reader route."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrol/index.html#the-sizecontrolpy-module","title":"The sizecontrol.py module","text":"The sizecontrol.py module\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrol/index.html#summary","title":"The sizecontrol.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nSizeControl\n\nSize control is used to compute the size field.\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/sizecontrol/index.html#description","title":"The sizecontrol.py module > Description","text":"Description\n\nAuto-generated file. DO NOT MODIFY"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapResults.html#createcapresults","title":"CreateCapResults","text":"CreateCapResults\n\n\n\nclass ansys.meshing.prime.autogen.surfaceutilitystructs.CreateCapResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None, json_data: dict = None, **kwargs)\n\nResults associated with create cap on face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a CreateCapResults object with default parameters.\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\ncreated_face_zonelets (Iterable[int], optional) – Ids of cap face zonelets created.\n\njson_data (dict, optional) – JSON dictionary to create a CreateCapResults object with provided parameters.\n\nExamples\n\n>>> create_cap_results = prime.CreateCapResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapResults.html#overview","title":"CreateCapResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\ncreated_face_zonelets\n\nIds of cap face zonelets created.\n\nerror_code\n\nError code associated with the failure of operation.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of CreateCapResults object.\n\nset_default\n\nSet the default values of the CreateCapResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapResults.html#import-detail","title":"CreateCapResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapResults.html#property-detail","title":"CreateCapResults > Property detail","text":"Property detail\n\n\n\nproperty CreateCapResults.created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int]\n\nIds of cap face zonelets created.\n\n\n\nproperty CreateCapResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError code associated with the failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/surfaceutilitystructs/CreateCapResults.html#method-detail","title":"CreateCapResults > Method detail","text":"Method detail\n\n\n\nCreateCapResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nCreateCapResults.__str__() -> str\n\n\n\n\n\nstatic CreateCapResults.print_default()\n\nPrint the default values of CreateCapResults object.\n\nExamples\n\n>>> CreateCapResults.print_default()\n\n\n\nstatic CreateCapResults.set_default(error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, created_face_zonelets: ansys.meshing.prime.params.primestructs.Iterable[int] = None)\n\nSet the default values of the CreateCapResults object.\n\nParameters\n\nerror_code (ErrorCode, optional) – Error code associated with the failure of operation.\n\ncreated_face_zonelets (Iterable[int], optional) – Ids of cap face zonelets created."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapSearchResults.html#overlapsearchresults","title":"OverlapSearchResults","text":"OverlapSearchResults\n\n\n\nclass ansys.meshing.prime.autogen.connectstructs.OverlapSearchResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, n_pairs: int = None, overlap_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, json_data: dict = None, **kwargs)\n\nProvides ids of a pair of overlapping face zonelets.\n\nParameters\n\nmodel (Model) – Model to create a OverlapSearchResults object with default parameters.\n\nn_pairs (int, optional) – Number of pairs.\n\noverlap_pairs (List[OverlapPairs], optional) – Ids corresponding to pairs of overlapping face zonelets.\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of operation.\n\njson_data (dict, optional) – JSON dictionary to create a OverlapSearchResults object with provided parameters.\n\nExamples\n\n>>> overlap_search_results = prime.OverlapSearchResults(model = model)"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapSearchResults.html#overview","title":"OverlapSearchResults > Overview","text":"Overview\n\nProperties\n\n\n\n\n\nerror_code\n\nError Code associated with failure of operation.\n\nn_pairs\n\nNumber of pairs.\n\noverlap_pairs\n\nIds corresponding to pairs of overlapping face zonelets.\n\nStatic methods\n\n\n\n\n\nprint_default\n\nPrint the default values of OverlapSearchResults object.\n\nset_default\n\nSet the default values of the OverlapSearchResults object.\n\nSpecial methods\n\n\n\n\n\n__setattr__\n\n__setattr__(CoreObject self, key, value)\n\n__str__\n\n"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapSearchResults.html#import-detail","title":"OverlapSearchResults > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapSearchResults.html#property-detail","title":"OverlapSearchResults > Property detail","text":"Property detail\n\n\n\nproperty OverlapSearchResults.error_code: ansys.meshing.prime.params.primestructs.ErrorCode\n\nError Code associated with failure of operation.\n\n\n\nproperty OverlapSearchResults.n_pairs: int\n\nNumber of pairs.\n\n\n\nproperty OverlapSearchResults.overlap_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs]\n\nIds corresponding to pairs of overlapping face zonelets."},{"objectID":"Home","href":"api/ansys/meshing/prime/autogen/connectstructs/OverlapSearchResults.html#method-detail","title":"OverlapSearchResults > Method detail","text":"Method detail\n\n\n\nOverlapSearchResults.__setattr__(key, value)\n\n__setattr__(CoreObject self, key, value)\n\n\n\nOverlapSearchResults.__str__() -> str\n\n\n\n\n\nstatic OverlapSearchResults.print_default()\n\nPrint the default values of OverlapSearchResults object.\n\nExamples\n\n>>> OverlapSearchResults.print_default()\n\n\n\nstatic OverlapSearchResults.set_default(n_pairs: int = None, overlap_pairs: ansys.meshing.prime.params.primestructs.List[OverlapPairs] = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None)\n\nSet the default values of the OverlapSearchResults object.\n\nParameters\n\nn_pairs (int, optional) – Number of pairs.\n\noverlap_pairs (List[OverlapPairs], optional) – Ids corresponding to pairs of overlapping face zonelets.\n\nerror_code (ErrorCode, optional) – Error Code associated with failure of operation."},{"objectID":"Home","href":"api/ansys/meshing/prime/examples/examples/download_elbow_fmd.html#ansysmeshingprimeexamplesexamplesdownload_elbow_fmd","title":"ansys.meshing.prime.examples.examples.download_elbow_fmd","text":"ansys.meshing.prime.examples.examples.download_elbow_fmd\n\n\n\nansys.meshing.prime.examples.examples.download_elbow_fmd(destination: str | None = None, force: bool = False) -> str | os.PathLike\n\nDownload the FMD file for the mixing elbow example.\n\nParameters\n\ndestination (str, optional) – Path to download the example file to. The default\nis None, in which case the default path for app data\nis used.\n\nforce (bool, optional) – Whether to download the example file. The default is\nFalse, in which case if the example file is cached, it\nis reused.\n\nReturns\n\nLocal path to the downloaded example file.\n\nReturn type\n\nstr\n\nExamples\n\n>>> import ansys.meshing.prime as prime\n>>> import ansys.meshing.prime.examples as prime_examples\n>>> with prime.launch_prime() as session:\n>>>     model = session.model\n>>>     elbow = prime_examples.download_elbow_fmd()\n>>>     with prime.FileIO(model) as io:\n>>>         _ = io.import_cad(elbow, params=prime.ImportCADParams(model))\n>>>     print(model)"}]