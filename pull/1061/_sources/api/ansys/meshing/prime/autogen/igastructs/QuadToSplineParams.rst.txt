.. vale off







:class:`QuadToSplineParams`
===========================


.. py:class:: ansys.meshing.prime.autogen.igastructs.QuadToSplineParams(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, shell_thickness: float = None, solid_shell: bool = None, separate_by_zone: bool = None, zone_name_shell_thickness_pairs: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None, json_data: dict = None, **kwargs)



   Parameters to control conversion of quadrilateral mesh to spline.

   :param model: Model to create a ``QuadToSplineParams`` object with default parameters.
   :type model: Model
   :param feature_capture_type: Feature capture options.

                                **This is a beta parameter**. **The behavior and name may change in the future**.
   :type feature_capture_type: SplineFeatureCaptureType, optional
   :param feature_angle: Angle to capture the feature.

                         **This is a beta parameter**. **The behavior and name may change in the future**.
   :type feature_angle: float, optional
   :param corner_angle: Corner angle of the feature.

                        **This is a beta parameter**. **The behavior and name may change in the future**.
   :type corner_angle: float, optional
   :param shell_thickness: Thickness of shell.

                           **This is a beta parameter**. **The behavior and name may change in the future**.
   :type shell_thickness: float, optional
   :param solid_shell: Solid shell option. Set true to generate solid shell spline, and set false to generate surface spline.

                       **This is a beta parameter**. **The behavior and name may change in the future**.
   :type solid_shell: bool, optional
   :param separate_by_zone: Option to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.

                            **This is a beta parameter**. **The behavior and name may change in the future**.
   :type separate_by_zone: bool, optional
   :param zone_name_shell_thickness_pairs: Zone name and thickness pair list. For example, {"Zone1Name": Zone1Thickness, "Zone2Name": Zone2Thickness, ...}.

                                           **This is a beta parameter**. **The behavior and name may change in the future**.
   :type zone_name_shell_thickness_pairs: Dict[str, Union[str, int, float, bool]], optional
   :param continuity: Spline Continuity options.

                      **This is a beta parameter**. **The behavior and name may change in the future**.
   :type continuity: SplineContinuityType, optional
   :param project_on_geometry: Option to project on geometry.

                               **This is a beta parameter**. **The behavior and name may change in the future**.
   :type project_on_geometry: bool, optional
   :param use_projection_scope: Option to use projection scope.

                                **This is a beta parameter**. **The behavior and name may change in the future**.
   :type use_projection_scope: bool, optional
   :param projection_scope: Scope to evaluate entities for projection.

                            **This is a beta parameter**. **The behavior and name may change in the future**.
   :type projection_scope: ScopeDefinition, optional
   :param json_data: JSON dictionary to create a ``QuadToSplineParams`` object with provided parameters.
   :type json_data: dict, optional

   .. rubric:: Examples

   >>> quad_to_spline_params = prime.QuadToSplineParams(model = model)







.. py:currentmodule:: QuadToSplineParams

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~continuity`
            - Spline Continuity options.
          * - :py:attr:`~corner_angle`
            - Corner angle of the feature.
          * - :py:attr:`~feature_angle`
            - Angle to capture the feature.
          * - :py:attr:`~feature_capture_type`
            - Feature capture options.
          * - :py:attr:`~project_on_geometry`
            - Option to project on geometry.
          * - :py:attr:`~projection_scope`
            - Scope to evaluate entities for projection.
          * - :py:attr:`~separate_by_zone`
            - Option to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.
          * - :py:attr:`~shell_thickness`
            - Thickness of shell.
          * - :py:attr:`~solid_shell`
            - Solid shell option. Set true to generate solid shell spline, and set false to generate surface spline.
          * - :py:attr:`~use_projection_scope`
            - Option to use projection scope.
          * - :py:attr:`~zone_name_shell_thickness_pairs`
            - Zone2Thickness, ...}.



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~print_default`
            - Print the default values of ``QuadToSplineParams`` object.
          * - :py:attr:`~set_default`
            - Set the default values of the ``QuadToSplineParams`` object.


   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__setattr__`
            - __setattr__(CoreObject self, key, value)
          * - :py:attr:`~__str__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.meshing.prime.autogen.igastructs import QuadToSplineParams

Property detail
---------------

.. py:property:: continuity
   :type: SplineContinuityType


   Spline Continuity options.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: corner_angle
   :type: float


   Corner angle of the feature.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: feature_angle
   :type: float


   Angle to capture the feature.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: feature_capture_type
   :type: SplineFeatureCaptureType


   Feature capture options.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: project_on_geometry
   :type: bool


   Option to project on geometry.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: projection_scope
   :type: ansys.meshing.prime.params.primestructs.ScopeDefinition


   Scope to evaluate entities for projection.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: separate_by_zone
   :type: bool


   Option to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: shell_thickness
   :type: float


   Thickness of shell.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: solid_shell
   :type: bool


   Solid shell option. Set true to generate solid shell spline, and set false to generate surface spline.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: use_projection_scope
   :type: bool


   Option to use projection scope.

   **This is a beta parameter**. **The behavior and name may change in the future**.

.. py:property:: zone_name_shell_thickness_pairs
   :type: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]]


   Zone2Thickness, ...}.

   **This is a beta parameter**. **The behavior and name may change in the future**.

   :type: Zone name and thickness pair list. For example, {"Zone1Name"

   :type: Zone1Thickness, "Zone2Name"




Method detail
-------------

.. py:method:: __setattr__(key, value)

   __setattr__(CoreObject self, key, value)


.. py:method:: __str__() -> str

.. py:method:: print_default()
   :staticmethod:


   Print the default values of ``QuadToSplineParams`` object.

   .. rubric:: Examples

   >>> QuadToSplineParams.print_default()


.. py:method:: set_default(feature_capture_type: SplineFeatureCaptureType = None, feature_angle: float = None, corner_angle: float = None, shell_thickness: float = None, solid_shell: bool = None, separate_by_zone: bool = None, zone_name_shell_thickness_pairs: ansys.meshing.prime.params.primestructs.Dict[str, ansys.meshing.prime.params.primestructs.Union[str, int, float, bool]] = None, continuity: SplineContinuityType = None, project_on_geometry: bool = None, use_projection_scope: bool = None, projection_scope: ansys.meshing.prime.params.primestructs.ScopeDefinition = None)
   :staticmethod:


   Set the default values of the ``QuadToSplineParams`` object.

   :param feature_capture_type: Feature capture options.
   :type feature_capture_type: SplineFeatureCaptureType, optional
   :param feature_angle: Angle to capture the feature.
   :type feature_angle: float, optional
   :param corner_angle: Corner angle of the feature.
   :type corner_angle: float, optional
   :param shell_thickness: Thickness of shell.
   :type shell_thickness: float, optional
   :param solid_shell: Solid shell option. Set true to generate solid shell spline, and set false to generate surface spline.
   :type solid_shell: bool, optional
   :param separate_by_zone: Option to separate IGA shell regions by zone. If set to true, it creates LS-Dyna part per zone while exporting IGA .k file and if set to false, it creates a single LS-Dyna part per Prime part, irrespective of the zones.
   :type separate_by_zone: bool, optional
   :param zone_name_shell_thickness_pairs: Zone name and thickness pair list. For example, {"Zone1Name": Zone1Thickness, "Zone2Name": Zone2Thickness, ...}.
   :type zone_name_shell_thickness_pairs: Dict[str, Union[str, int, float, bool]], optional
   :param continuity: Spline Continuity options.
   :type continuity: SplineContinuityType, optional
   :param project_on_geometry: Option to project on geometry.
   :type project_on_geometry: bool, optional
   :param use_projection_scope: Option to use projection scope.
   :type use_projection_scope: bool, optional
   :param projection_scope: Scope to evaluate entities for projection.
   :type projection_scope: ScopeDefinition, optional







.. vale on