.. vale off







:class:`CheckMeshResults`
=========================


.. py:class:: ansys.meshing.prime.CheckMeshResults(model: ansys.meshing.prime.params.primestructs.CommunicationManager = None, has_non_positive_volumes: bool = None, has_non_positive_areas: bool = None, has_invalid_shape: bool = None, has_left_handed_faces: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None, json_data: dict = None, **kwargs)



   Result associated with the check mesh operation.

   :param model: Model to create a ``CheckMeshResults`` object with default parameters.
   :type model: Model
   :param has_non_positive_volumes: Indicates whether mesh has non positive volumes.
   :type has_non_positive_volumes: bool, optional
   :param has_non_positive_areas: Indicates whether mesh has non positive areas.
   :type has_non_positive_areas: bool, optional
   :param has_invalid_shape: Indicates whether mesh has invalid shape.
   :type has_invalid_shape: bool, optional
   :param has_left_handed_faces: Indicates whether mesh has left handed faces.
   :type has_left_handed_faces: bool, optional
   :param error_code: Error code associated with the check grid operation.
   :type error_code: ErrorCode, optional
   :param warning_codes: Warning codes associated with the check grid operation.
   :type warning_codes: List[WarningCode], optional
   :param json_data: JSON dictionary to create a ``CheckMeshResults`` object with provided parameters.
   :type json_data: dict, optional

   .. rubric:: Examples

   >>> check_mesh_results = prime.CheckMeshResults(model = model)







.. py:currentmodule:: CheckMeshResults

Overview
--------

.. tab-set::




   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~error_code`
            - Error code associated with the check grid operation.
          * - :py:attr:`~has_invalid_shape`
            - Indicates whether mesh has invalid shape.
          * - :py:attr:`~has_left_handed_faces`
            - Indicates whether mesh has left handed faces.
          * - :py:attr:`~has_non_positive_areas`
            - Indicates whether mesh has non positive areas.
          * - :py:attr:`~has_non_positive_volumes`
            - Indicates whether mesh has non positive volumes.
          * - :py:attr:`~warning_codes`
            - Warning codes associated with the check grid operation.



   .. tab-item:: Static methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~print_default`
            - Print the default values of ``CheckMeshResults`` object.
          * - :py:attr:`~set_default`
            - Set the default values of the ``CheckMeshResults`` object.


   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__setattr__`
            - __setattr__(CoreObject self, key, value)
          * - :py:attr:`~__str__`
            - 




Import detail
-------------

.. code-block:: python

    from ansys.meshing.prime import CheckMeshResults

Property detail
---------------

.. py:property:: error_code
   :type: ansys.meshing.prime.params.primestructs.ErrorCode


   Error code associated with the check grid operation.

.. py:property:: has_invalid_shape
   :type: bool


   Indicates whether mesh has invalid shape.

.. py:property:: has_left_handed_faces
   :type: bool


   Indicates whether mesh has left handed faces.

.. py:property:: has_non_positive_areas
   :type: bool


   Indicates whether mesh has non positive areas.

.. py:property:: has_non_positive_volumes
   :type: bool


   Indicates whether mesh has non positive volumes.

.. py:property:: warning_codes
   :type: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode]


   Warning codes associated with the check grid operation.




Method detail
-------------

.. py:method:: __setattr__(key, value)

   __setattr__(CoreObject self, key, value)


.. py:method:: __str__() -> str

.. py:method:: print_default()
   :staticmethod:


   Print the default values of ``CheckMeshResults`` object.

   .. rubric:: Examples

   >>> CheckMeshResults.print_default()


.. py:method:: set_default(has_non_positive_volumes: bool = None, has_non_positive_areas: bool = None, has_invalid_shape: bool = None, has_left_handed_faces: bool = None, error_code: ansys.meshing.prime.params.primestructs.ErrorCode = None, warning_codes: ansys.meshing.prime.params.primestructs.List[ansys.meshing.prime.params.primestructs.WarningCode] = None)
   :staticmethod:


   Set the default values of the ``CheckMeshResults`` object.

   :param has_non_positive_volumes: Indicates whether mesh has non positive volumes.
   :type has_non_positive_volumes: bool, optional
   :param has_non_positive_areas: Indicates whether mesh has non positive areas.
   :type has_non_positive_areas: bool, optional
   :param has_invalid_shape: Indicates whether mesh has invalid shape.
   :type has_invalid_shape: bool, optional
   :param has_left_handed_faces: Indicates whether mesh has left handed faces.
   :type has_left_handed_faces: bool, optional
   :param error_code: Error code associated with the check grid operation.
   :type error_code: ErrorCode, optional
   :param warning_codes: Warning codes associated with the check grid operation.
   :type warning_codes: List[WarningCode], optional







.. vale on