.. vale off







:class:`SizeControl`
====================


.. py:class:: ansys.meshing.prime.SizeControl(model, id, object_id, name, local=False)



   Size control is used to compute the size field.

   The size field is computed based on the size control defined.
   Different type of size controls provide control over how the mesh size is distributed on a
   surface or within the volume.

   :param model: Server model to create SizeControl object.
   :type model: Model
   :param id: Id of the SizeControl.
   :type id: int
   :param object_id: Object id of the SizeControl.
   :type object_id: int
   :param name: Name of the SizeControl..
   :type name: str
   :param local: Unused. The default is ``False``.
   :type local: bool, optional





.. py:currentmodule:: SizeControl

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~get_boi_sizing_params`
            - Get the body of influence sizing parameters of size control.
          * - :py:attr:`~get_curvature_sizing_params`
            - Get the curvature sizing parameters of size control.
          * - :py:attr:`~get_hard_sizing_params`
            - Get the hard sizing parameters of size control.
          * - :py:attr:`~get_meshed_sizing_params`
            - Get the meshed sizing parameters of size control.
          * - :py:attr:`~get_proximity_sizing_params`
            - Get the proximity sizing parameters of size control.
          * - :py:attr:`~get_scope`
            - Get the scope used by size control to evaluate entities.
          * - :py:attr:`~get_sizing_type`
            - Gets the sizing type for the size control.
          * - :py:attr:`~get_soft_sizing_params`
            - Get the soft sizing parameters of size control.
          * - :py:attr:`~get_soi_sizing_params`
            - Get the sphere of influence sizing parameters of size control.
          * - :py:attr:`~get_summary`
            - Get the size control summary along with the evaluated scope for the provided parameters..
          * - :py:attr:`~set_boi_sizing_params`
            - Set the body of influence sizing parameters to compute volumetric size field.
          * - :py:attr:`~set_curvature_sizing_params`
            - Set the curvature sizing parameters to compute volumetric size field.
          * - :py:attr:`~set_hard_sizing_params`
            - Set the hard sizing parameters to compute volumetric size field.
          * - :py:attr:`~set_meshed_sizing_params`
            - Set the meshed sizing parameters to compute volumetric size field.
          * - :py:attr:`~set_proximity_sizing_params`
            - Set the proximity sizing parameters to compute volumetric size field.
          * - :py:attr:`~set_scope`
            - Set the scope for size control to evaluate.
          * - :py:attr:`~set_soft_sizing_params`
            - Set the soft sizing parameters to compute volumetric size field.
          * - :py:attr:`~set_soi_sizing_params`
            - Set the sphere of influence sizing parameters to compute volumetric size field.
          * - :py:attr:`~set_suggested_name`
            - Set the unique name for the size control to a suggested name.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~id`
            - Get the id of SizeControl.
          * - :py:attr:`~name`
            - Get the name of size control.




   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__setattr__`
            - __setattr__(CoreObject self, key, value)
          * - :py:attr:`~__str__`
            - Get a representation of the class in string format.




Import detail
-------------

.. code-block:: python

    from ansys.meshing.prime import SizeControl

Property detail
---------------

.. py:property:: id

   Get the id of SizeControl.

.. py:property:: name

   Get the name of size control.

   :returns: Name of the size control.
   :rtype: str

   .. rubric:: Examples

   >>> print(size_control.name)




Method detail
-------------

.. py:method:: __setattr__(key, value)

   __setattr__(CoreObject self, key, value)


.. py:method:: __str__() -> str

   Get a representation of the class in string format.

   :returns: Class data in string format.
   :rtype: str


.. py:method:: get_boi_sizing_params() -> ansys.meshing.prime.params.primestructs.BoiSizingParams

   Get the body of influence sizing parameters of size control.


   :returns: Return the BoiSizingParams.
   :rtype: BoiSizingParams

   .. rubric:: Examples

   >>> params = size_control.get_boi_sizing_params()


.. py:method:: get_curvature_sizing_params() -> ansys.meshing.prime.params.primestructs.CurvatureSizingParams

   Get the curvature sizing parameters of size control.


   :returns: Return the CurvatureSizingParams.
   :rtype: CurvatureSizingParams

   .. rubric:: Examples

   >>> params = size_control.get_curvature_sizing_params()


.. py:method:: get_hard_sizing_params() -> ansys.meshing.prime.params.primestructs.HardSizingParams

   Get the hard sizing parameters of size control.


   :returns: Return the HardSizingParams.
   :rtype: HardSizingParams

   .. rubric:: Examples

   >>> params = size_control.get_hard_sizing_params()


.. py:method:: get_meshed_sizing_params() -> ansys.meshing.prime.params.primestructs.MeshedSizingParams

   Get the meshed sizing parameters of size control.


   :returns: Return the MeshedSizingParams.
   :rtype: MeshedSizingParams

   .. rubric:: Examples

   >>> params = size_control.get_meshed_sizing_params()


.. py:method:: get_proximity_sizing_params() -> ansys.meshing.prime.params.primestructs.ProximitySizingParams

   Get the proximity sizing parameters of size control.


   :returns: Return the ProximitySizingParams.
   :rtype: ProximitySizingParams

   .. rubric:: Examples

   >>> params = size_control.get_proximity_sizing_params()


.. py:method:: get_scope() -> ansys.meshing.prime.params.primestructs.ScopeDefinition

   Get the scope used by size control to evaluate entities.


   :returns: Return the ScopeDefinition.
   :rtype: ScopeDefinition

   .. rubric:: Examples

   >>> scope = size_control.get_scope()


.. py:method:: get_sizing_type() -> ansys.meshing.prime.params.primestructs.SizingType

   Gets the sizing type for the size control.


   :returns: Returns the sizing type of the control.
   :rtype: SizingType

   .. rubric:: Notes

   **This is a beta API**. **The behavior and implementation may change in future**.

   .. rubric:: Examples

   >>> type = size_control.get_sizing_type()


.. py:method:: get_soft_sizing_params() -> ansys.meshing.prime.params.primestructs.SoftSizingParams

   Get the soft sizing parameters of size control.


   :returns: Return the SoftSizingParams.
   :rtype: SoftSizingParams

   .. rubric:: Examples

   >>> params = size_control.get_soft_sizing_params()


.. py:method:: get_soi_sizing_params() -> ansys.meshing.prime.params.primestructs.SoiSizingParams

   Get the sphere of influence sizing parameters of size control.


   :returns: Returns the SoiSizingParams.
   :rtype: SoiSizingParams

   .. rubric:: Notes

   **This is a beta API**. **The behavior and implementation may change in future**.

   .. rubric:: Examples

   >>> params = size_control.get_soi_sizing_params()


.. py:method:: get_summary(params: ansys.meshing.prime.params.primestructs.SizeControlSummaryParams) -> ansys.meshing.prime.params.primestructs.SizeControlSummaryResult

   Get the size control summary along with the evaluated scope for the provided parameters..


   :param params: Size control summary parameters.
   :type params: SizeControlSummaryParams

   :returns: Return the SizeControlSummaryResult.
   :rtype: SizeControlSummaryResult

   .. rubric:: Examples

   >>> results = size_control.get_summary(prime.SizeControlSummaryParams(model=model))


.. py:method:: set_boi_sizing_params(params: ansys.meshing.prime.params.primestructs.BoiSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults

   Set the body of influence sizing parameters to compute volumetric size field.


   :param params: Parameters that enables you to set sizing on the body of influence region.
   :type params: BoiSizingParams

   :returns: Return the SetSizingResults.
   :rtype: SetSizingResults

   .. rubric:: Examples

   >>> size_control.set_boi_sizing_params(
   >>>                  prime.BoiSizingParams(model=model,
   >>>                  max = 0.1, growth_rate = 1.2))


.. py:method:: set_curvature_sizing_params(params: ansys.meshing.prime.params.primestructs.CurvatureSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults

   Set the curvature sizing parameters to compute volumetric size field.


   :param params: Parameters that enables you to set the normal angle as the maximum allowable angle at which one element edge may span.
   :type params: CurvatureSizingParams

   :returns: Return the SetSizingResults.
   :rtype: SetSizingResults

   .. rubric:: Examples

   >>> size_control.set_curvature_sizing_params(
   >>>                  prime.CurvatureSizingParams(model=model,
   >>>                  min = 0.1, max = 1.0, growth_rate = 1.2,
   >>>                  normal_angle = 18))


.. py:method:: set_hard_sizing_params(params: ansys.meshing.prime.params.primestructs.HardSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults

   Set the hard sizing parameters to compute volumetric size field.


   :param params: Parameters that enables you to set uniform size based on the specified size.
   :type params: HardSizingParams

   :returns: Return the SetSizingResults.
   :rtype: SetSizingResults

   .. rubric:: Examples

   >>> size_control.set_hard_sizing_params(
   >>>                  prime.HardSizingParams(model=model,
   >>>                  min = 0.1, growth_rate = 1.2))


.. py:method:: set_meshed_sizing_params(params: ansys.meshing.prime.params.primestructs.MeshedSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults

   Set the meshed sizing parameters to compute volumetric size field.


   :param params: Parameters that enables you to set the sizes based on existing sizes.
   :type params: MeshedSizingParams

   :returns: Return the SetSizingResults.
   :rtype: SetSizingResults

   .. rubric:: Examples

   >>> size_control.set_meshed_sizing_params(
   >>>                  prime.MeshedSizingParams(model=model,
   >>>                  growth_rate = 1.2))


.. py:method:: set_proximity_sizing_params(params: ansys.meshing.prime.params.primestructs.ProximitySizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults

   Set the proximity sizing parameters to compute volumetric size field.


   :param params: Parameters that enables you to specify number of elements in the gaps.
   :type params: ProximitySizingParams

   :returns: Return the SetSizingResults.
   :rtype: SetSizingResults

   .. rubric:: Examples

   >>> size_control.set_proximity_sizing_params(
   >>>                  prime.ProximitySizingParams(model=model,
   >>>                  min = 0.1, max = 1.0, growth_rate = 1.2))


.. py:method:: set_scope(scope: ansys.meshing.prime.params.primestructs.ScopeDefinition) -> ansys.meshing.prime.params.primestructs.SetScopeResults

   Set the scope for size control to evaluate.

   Size control uses scope to evaluate entities for which size field needs to be computed.

   :param scope: ScopeDefinition to scope entities for size field computation.
   :type scope: ScopeDefinition

   :returns: Return a SetScopeResults.
   :rtype: SetScopeResults

   .. rubric:: Examples

   >>> size_control.set_scope(prime.ScopeDefinition(model=model,
   >>>                        entity_type = ScopeEntity.FACEZONELETS,
   >>>                        evaluation_type = ScopeEvaluationType.LABELS,
   >>>                        label_expression = "inlet"))


.. py:method:: set_soft_sizing_params(params: ansys.meshing.prime.params.primestructs.SoftSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults

   Set the soft sizing parameters to compute volumetric size field.


   :param params: Parameters that enables you to set the maximum size on scoped face zonelets.
   :type params: SoftSizingParams

   :returns: Return the SetSizingResults.
   :rtype: SetSizingResults

   .. rubric:: Examples

   >>> size_control.set_soft_sizing_params(
   >>>                  prime.SoftSizingParams(model=model,
   >>>                  max = 1.0, growth_rate = 1.2))


.. py:method:: set_soi_sizing_params(params: ansys.meshing.prime.params.primestructs.SoiSizingParams) -> ansys.meshing.prime.params.primestructs.SetSizingResults

   Set the sphere of influence sizing parameters to compute volumetric size field.


   :param params: Parameters that enables you to set sizing on the spherical influence region.
   :type params: SoiSizingParams

   :returns: Returns the SetSizingResults.
   :rtype: SetSizingResults

   .. rubric:: Notes

   **This is a beta API**. **The behavior and implementation may change in future**.

   .. rubric:: Examples

   >>> size_control.set_soi_sizing_params(
   >>>                  prime.SoiSizingParams(model=model,
   >>>                  max = 0.1, growth_rate = 1.2))


.. py:method:: set_suggested_name(name: str) -> ansys.meshing.prime.autogen.commonstructs.SetNameResults

   Set the unique name for the size control to a suggested name.

   :param name: Suggested name for the size control.
   :type name: str

   :returns: Newly suggested name for the size control.
   :rtype: SetNameResults

   .. rubric:: Examples

   >>> size_control.set_suggested_name("control1")







.. vale on